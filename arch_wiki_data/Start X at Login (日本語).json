{
  "title": "Start X at Login (日本語)",
  "url": "https://wiki.archlinux.org/title/Start_X_at_Login_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- ディスプレイマネージャ\n- Xorg\n- xprofile\n- Xresources\n\nWikipedia から:\n\n通常、xinit はウィンドウマネージャやデスクトップ環境を起動するために使用されます。xinit を使うことでウィンドウマネージャ無しで GUI アプリケーションを実行することができますが、多くのグラフィカルアプリケーションは EWMH に準拠したウィンドウマネージャを期待します。ディスプレイマネージャは Xorg を起動し、一般的に xprofile を読み込みます。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 設定 2.1 xinitrc 2.2 xserverrc 2.2.1 仮想ターミナル番号の引き渡し\n- 3 使用方法\n- 4 ヒントとテクニック 4.1 xinitrc をオーバーライドする 4.2 ログイン時に X を自動起動 4.3 デスクトップ環境/ウィンドウマネージャを切り替える 4.4 ウィンドウマネージャを使わずにアプリケーションを起動 4.5 startx を使って出力をリダイレクトする\n\n- 2.1 xinitrc\n- 2.2 xserverrc 2.2.1 仮想ターミナル番号の引き渡し\n\n- 2.2.1 仮想ターミナル番号の引き渡し\n\n- 4.1 xinitrc をオーバーライドする\n- 4.2 ログイン時に X を自動起動\n- 4.3 デスクトップ環境/ウィンドウマネージャを切り替える\n- 4.4 ウィンドウマネージャを使わずにアプリケーションを起動\n- 4.5 startx を使って出力をリダイレクトする\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "xorg-xinit をインストールしてください。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "xinit と startx は任意でクライアントプログラムの引数を受け取ります。#xinitrc をオーバーライドする を参照してください。もし、引数を与えなければ、クライアントプロラムを起動するシェルスクリプトとして、~/.xinitrc を探します。\n\n"
    },
    {
      "title": "xinitrc",
      "level": 3,
      "content": "~/.xinitrc は、X に依存するプログラムを実行し、X サーバの起動時に環境変数を設定するのに便利です。このファイルがユーザのホームディレクトリに存在する場合、startx と xinit はこのファイルを実行します。それ以外の場合、startx はデフォルトの /etc/X11/xinit/xinitrc を実行します。\n\nデフォルトの xinitrc は、Twm、xorg-xclock、そして Xterm を起動した基本的な環境を開始します (このファイルは、必要なパッケージがインストールされていると仮定しています)。そのため、別のウィンドウマネージャやデスクトップ環境を始めるには、まずデフォルトの xinitrc のコピーをホームディレクトリに作成します:\n\n```\n$ cp /etc/X11/xinit/xinitrc ~/.xinitrc\n```\n\nそれからそのファイルを編集して、デフォルトのプログラムを好きなコマンドに置き換えてください。exec を使用するコマンド以降の行は無視されることを覚えておいてください。たとえば、xscreensaver をバックグラウンドで開始してから openbox を開始するには、以下のように記述します:\n\n```\n~/.xinitrc\n```\n\n```\n...\nxscreensaver &\nexec openbox-session\n```\n\nスクリーンセーバーや壁紙アプリケーションといった、長く実行されるプログラムがウィンドウマネージャの前に開始される場合、それらをフォークするか & 記号をつけてバックグラウンドで実行しなければなりません。そうしないと、スクリプトはウィンドウマネージャやデスクトップ環境を実行する前に停止し、それらのプログラムが終了するのを待ちます。いくつかのプログラムは、 xrdb のように、競合バグを回避するためフォークしないでください。exec を前につけることで、スクリプトプロセスをウィンドウマネージャプロセスへ入れ替えることができます。これにより、たとえこのプロセスがバックグランドへフォークされても X が終了しないようにできます。\n\n"
    },
    {
      "title": "xserverrc",
      "level": 3,
      "content": "xserverrc ファイルは、X サーバの起動を担当するシェルスクリプトです。startx と xinit はどちらも ~/.xserverrc が存在すればそれを実行し、存在しなければ startx は /etc/X11/xinit/xserverrc を使用します。\n\nすべてのコマンドラインオプションのリストについては、Xserver(1) を参照してください。\n\n"
    },
    {
      "title": "仮想ターミナル番号の引き渡し",
      "level": 4,
      "content": "認証されたセッションを logind で維持できるようにし、かつ、ターミナルを切り替えることで画面ロッカーをバイパスできないようにするために、ログインが行われたのと同じ仮想コンソールで Xorg を起動しなければなりません [1]。そのため、~/.xserverrc ファイルで vt$XDG_VTNR を指定することが推奨されます:\n\nstartx を実行している場合、それ以上の操作は必要ありません。これは、仮想ターミナル番号を計算して Xorg に渡す ロジックをこちら に含んでいます。\n\n他の場合、たとえば xinit を実行している場合は、~/.xserverrc ファイルで vt$XDG_VTNR を指定することをお勧めします。\n\n```\n~/.xserverrc\n```\n\n```\n#!/bin/sh\n\nexec /usr/bin/Xorg -nolisten tcp \"$@\" vt$XDG_VTNR\n```\n\n全てのコマンドラインオプションの一覧は Xserver(1) を参照してください。\n\n"
    },
    {
      "title": "使用方法",
      "level": 2,
      "content": "Xorg を通常のユーザとして実行するには、次のように実行します:\n\n```\n$ startx\n```\n\nまたは、#xserverrc が設定されている場合は:\n\n```\n$ xinit -- :1\n```\n\nこれでお好みのウィンドウマネージャー(またはデスクトップ環境)が正しく起動するはずです。\n\nX を終了するには、ウィンドウマネージャーの exit 関数を実行してください (exit 関数があると仮定します)。そのような機能がない場合は次のように実行します:\n\n```\n$ pkill -15 Xorg\n```\n\n```\n$ pkill -15 -t tty\"$XDG_VTNR\" Xorg\n```\n\nsignal(7) も参照してください。\n\n"
    },
    {
      "title": "xinitrc をオーバーライドする",
      "level": 3,
      "content": "すでに ~/.xinitrc があるが、他のウィンドウマネージャやデスクトップ環境を試してみたい場合、ウィンドウマネージャへのパスを付け加えて startx を実行することで、ウィンドウマネージャを起動させることができます。例えば:\n\n```\n$ startx /usr/bin/i3\n```\n\nウィンドウマネージャのバイナリが引数を取る場合、引数全体が startx の第1パラメータとして認識されるようにするために引数を引用符で囲む必要があります:\n\n```\n$ startx \"/usr/bin/application --key value\"\n```\n\n完全なパスが 必要である ことに注意してください。また、#xserverrc スクリプトのカスタムオプションは、-- 記号のあとに付け加えることで指定できます:\n\n```\n$ startx /usr/bin/enlightenment -- -br +bs -dpi 96\n```\n\nstartx(1) も参照してください。\n\n"
    },
    {
      "title": "ログイン時に X を自動起動",
      "level": 3,
      "content": "startx が適切に設定されていることを確認してください。\n\n以下をログインシェルの初期化ファイル (例: Bash の場合は ~/.bash_profile、Zsh の場合は ~/.zprofile) に記述してください:\n\n```\nif [ -z \"${DISPLAY}\" ] && [ \"${XDG_VTNR}\" -eq 1 ]; then\n  exec startx\nfi\n```\n\n複数の仮想コンソールでグラフィカルログインを使用したい場合は、-eq 比較演算子を -le 3 (vt1 から vt3 まで) のようなものに置き換えることで可能です。\n\n仮想コンソールを検出できる条件式として \"$(tty)\" = \"/dev/tty1\" もありますが、これは -le を使って比較することができません。また、\"$(fgconsole 2>/dev/null || echo -1)\" -eq 1 という書き方もありますが、こっちはシリアルコンソールでは動きません。\n\nexec コマンドは、X サーバが終了、クラッシュ、または攻撃者によって kill されたときに、ユーザがログアウトすることを保証します。リスクを犯して、X セッションが終了したときにログイン状態を維持したい場合は、exec を取り除いてください。\n\nFish#ログイン時に X を起動 と systemd/ユーザー#ディスプレイマネージャを使わずに Xorg に自動ログイン も参照してください。\n\n"
    },
    {
      "title": "デスクトップ環境/ウィンドウマネージャを切り替える",
      "level": 3,
      "content": "様々なデスクトップ環境やウィンドウマネージャを頻繁に切り替える場合、ディスプレイマネージャを使うか、~/.xinitrc を拡張して切り替えを可能にすると便利です。\n\n以下の例では、特定のデスクトップ環境やウィンドウマネージャを引数付きで起動する方法を示しています:\n\n```\n~/.xinitrc\n```\n\n```\n...\n\n# ここで Xfce をデフォルトとしています\nsession=${1:-xfce}\n\ncase $session in\n    i3|i3wm           ) exec i3;;\n    kde               ) exec startplasma-x11;;\n    xfce|xfce4        ) exec startxfce4;;\n    # 既知のセッションではないので、引数をコマンドとして実行してみる\n    *                 ) exec $1;;\nesac\n```\n\nsession 引数を渡すには:\n\n```\n$ xinit session\n```\n\nあるいは\n\n```\n$ startx ~/.xinitrc session\n```\n\n"
    },
    {
      "title": "ウィンドウマネージャを使わずにアプリケーションを起動",
      "level": 3,
      "content": "ウィンドウマネージャを使わずに特定のアプリケーションだけを起動することも可能です。フルスクリーンモードで何か一つのアプリケーションを表示したいときに有用です。例:\n\n```\n~/.xinitrc\n```\n\n```\n...\n\nexec chromium\n```\n\nあるいは、#xinitrc をオーバーライドする で説明されているように、コマンドプロンプトからバイナリを直接実行することもできます。\n\nこの方法を使うときはアプリケーションのウィンドウの配置を、アプリケーションの設定ファイルで設定しておく必要があります (可能な限り)。\n\nディスプレイマネージャ#ウィンドウマネージャを使わずにアプリケーションを起動 も見て下さい。\n\n"
    },
    {
      "title": "startx を使って出力をリダイレクトする",
      "level": 3,
      "content": "詳細は Xorg#セッションログのリダイレクト を見てください。\n\n"
    }
  ]
}
{
  "title": "Arch build system (Français)",
  "url": "https://wiki.archlinux.org/title/Arch_build_system_(Fran%C3%A7ais)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Arch package guidelines (Français)\n- Arch User Repository (Français)\n- Creating packages\n- Kernel/Arch build system\n- makepkg (Français)\n- Official repositories (Français)\n- pacman (Français)\n- PKGBUILD (Français)\n- Patching packages\n\nLe système de construction d'Arch (Arch Build System) est un système de type \"port\" pour construire et empaqueter des logiciels à partir du code source. Alors que pacman est l'outil spécialisé d'Arch pour la gestion des paquets binaires, l'\"Arch build system\" est une collection d'outils pour compiler les sources en paquets installables .pkg.tar.zst.\n\nLes ports sont un système utilisé par les *BSD pour automatiser le processus de construction de logiciels à partir du code source. Le système utilise un port pour télécharger, décompresser, patcher, compiler et installer le logiciel donné. Un port est simplement un petit répertoire sur l'ordinateur de l'utilisateur, nommé d'après le logiciel correspondant à installer, qui contient quelques fichiers avec les instructions pour construire et installer le logiciel à partir des sources. Cela rend l'installation du logiciel aussi simple que de taper make ou make install clean dans le répertoire du port.\n\nL'\"Arch build system\" repose sur un concept similaire. Il comprends une collection de dépôts Git pour chaque paquet disponible pour Arch Linux. Chaque dépôt contient un PKGBUILD (et parfois d'autres fichiers), et ne contient ni les sources ni les binaires du logiciel. En exécutant makepkg à l'intérieur d'un répertoire, les sources du logiciel sont téléchargées, le logiciel est compilé, et ensuite empaqueté dans le répertoire de construction. Vous pouvez ensuite utiliser pacman pour installer le paquet.\n\n"
    },
    {
      "title": "Les outils",
      "level": 2,
      "content": "L'\"Arch build system\" inclut et repose sur plusieurs autres composants et outils qui sont utilisés dans le processus de construction des paquets depuis leurs sources :\n\n"
    },
    {
      "title": "Structure du dépôt",
      "level": 3,
      "content": "Les dépôts officiels core, extra, core-testing et extra-testing sont hébergés sur l'instance GitLab d'Arch Linux.\n\nChaque paquet a son propre dépôt dans l'espace archlinux/packaging/packages. Chaque dépôt contient les PKGBUILDs et les fichiers trouvés dans les paquets officiels. Par ailleurs, certains fichiers qui sont utilisés par les développeurs pour les étapes de contruction s'y trouvent également.\n\nPar exemple, l'arbre de acl ressemble à ceci :\n\n```\nacl\n├── keys\n│   └── pgp\n│       ├── 259B3792B3D6D319212CC4DCD5BF9FEB0313653A.asc\n│       ├── 600CD204FBCEA418BD2CA74F154343260542DF34.asc\n│       └── B902B5271325F892AC251AD441633B9FE837F581.asc\n└── PKGBUILD\n```\n\nLe code source du paquet n'est pas présent dans le répertoire. À la place, le PKGBUILD contient une URL qui téléchargera le code source lorsque le paquet sera construit.\n\n"
    },
    {
      "title": "Cas d'utilisation",
      "level": 2,
      "content": "Le système de construction d'Arch automatise certaines tâches liées à la compilation à partir des sources. Ses cas d'utilisation sont :\n\n- Tout cas d'utilisation qui nécessite de compiler ou de recompiler un paquet.\n- Créer et installer de nouveaux paquets à partir des sources de logiciels pour lesquels aucun paquet n'est encore disponible (consultez l'article anglais concernant la création de paquets).\n- Personnaliser les paquets existants pour répondre à vos besoins (par exemple, activer ou désactiver des options, appliquer des correctifs).\n- Reconstruire votre système entier en utilisant vos paramètres de compilation, \"à la FreeBSD\".\n- Construire et installer proprement votre propre noyau personnalisé (consultez Compilation du noyau).\n- Faire fonctionner les modules du noyau avec un noyau personnalisé.\n- Compiler et installer facilement une version plus récente, plus ancienne, bêta ou de développement d'un paquet Arch en éditant le numéro de version dans le PKGBUILD.\n\n"
    },
    {
      "title": "Récupérer le PKGBUILD d'origine",
      "level": 3,
      "content": "Pour récupérer le fichier PKGBUILD nécessaire à la construction d'un certain paquet à partir des sources, vous pouvez soit utiliser l'outil pkgctl, soit direcement avec Git.\n\n"
    },
    {
      "title": "Utiliser l'outil pkgctl",
      "level": 4,
      "content": "Comme condition préalable, installez le paquet devtools. pkgctl est un outil qui permet de travailler avec les fichiers sources des paquets Arch Linux en utilisant Git.\n\nPour cloner le dépôt git avec les derniers fichiers de construction en utilisant pkgctl, la commande suivante est utilisée :\n\n```\n$ pkgctl repo clone pkgname\n```\n\nNotez qu'ici, les fichiers sources se réfèrent au PKGBUILD, éventuellement avec quelques autres fichiers requis, tels que les clés. C'est à dire, les fichiers essentiels qui sont requis pour le système de construction d'Arch Linux. Cela ne fait pas référence aux sources du paquet qui ont été écrits par l'équipe qui a créé le logiciel, comme les fichiers C ou Python.\n\nCela vous donnera non seulement les fichiers de compilation actuels, mais aussi leurs versions précédentes. De plus, vous pouvez utiliser toutes les autres commandes git pour extraire une ancienne version du paquet ou pour suivre les modifications personnalisées.\n\nSi vous souhaitez obtenir une version spécifique d'un paquet, vous pouvez utiliser quelque chose comme ce qui suit :\n\n```\n$ pkgctl repo clone --switch=\"2:1.19.5-1\" go\n```\n\nLisez pkgctl-repo-clone(1) pour plus d'informations, et pour les autres commandes disponibles.\n\n"
    },
    {
      "title": "Utiliser git directement",
      "level": 4,
      "content": "Utilisez la commande git suivante pour cloner uniquement une branche spécifique. Vous éviterez ainsi de copier l'ensemble du dépôt :\n\n```\n$ git clone https://gitlab.archlinux.org/archlinux/packaging/packages/pkgname.git\n```\n\nPar exemple, pour copier les fichiers de construction d'Apache :\n\n```\n$ git clone https://gitlab.archlinux.org/archlinux/packaging/packages/apache.git\n```\n\n"
    },
    {
      "title": "Construire le paquet",
      "level": 3,
      "content": "Configurez makepkg pour construire des paquets à partir des PKGBUILDs que vous avez téléchargés, comme expliqué dans Makepkg (Français)#Configuration.\n\nEnsuite, copiez le répertoire contenant le PKGBUILD que vous souhaitez modifier vers un nouvel emplacement. Apportez-y les modifications souhaitées et utilisez makepkg comme décrit dans Makepkg (Français)#Utilisation pour créer et installer le nouveau paquet.\n\n"
    },
    {
      "title": "Préserver les paquets modifiés",
      "level": 3,
      "content": "La mise à jour du système avec pacman remplacera un paquet modifié par le paquet du même nom des dépôts officiels. Consultez les instructions suivantes pour éviter cela.\n\nInsérez un tableau de groupes dans le PKGBUILD, et ajoutez le paquet à un groupe appelé modified.\n\n```\nPKGBUILD\n```\n\n```\ngroups=('modified')\n```\n\nAjoutez ce groupe à la section IgnoreGroup dans /etc/pacman.conf.\n\n```\n/etc/pacman.conf\n```\n\n```\nIgnoreGroup = modified\n```\n\nSi de nouvelles versions sont disponibles dans les dépôts officiels lors d'une mise à jour du système, pacman affichera une note indiquant qu'il ignore cette mise à jour car elle se trouve dans la section IgnoreGroup. À ce stade, le paquet modifié devra être reconstruit pour éviter les mises à jour partielles.\n\n"
    },
    {
      "title": "Autres outils",
      "level": 2,
      "content": "- pbget - récupère les PKGBUILDs pour des paquets individuels directement depuis l'interface web. Prend en charge l'AUR.\n\n"
    }
  ]
}
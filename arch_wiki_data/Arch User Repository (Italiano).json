{
  "title": "Arch User Repository (Italiano)",
  "url": "https://wiki.archlinux.org/title/Arch_User_Repository_(Italiano)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Articoli correlati\n\n- makepkg\n- pacman (Italiano)\n- PKGBUILD\n- .SRCINFO\n- Aurweb RPC interface\n- AUR Trusted User Guidelines\n- Official repositories\n- Arch Build System\n- Creating packages\n- AUR helpers\n\nL'Arch User Repository (AUR) (it. repositore utenti Arch) è un repositore gestito dagli utenti Arch. Consiste di una serie di PKGBUILD, ovvero file che danno precise istruzioni su come usare makepkg per compilare un pacchetto partendo dal codice sorgente ed installarlo tramite il gestore di pacchetti pacman. L'AUR fu istituito per organizzare e distribuire nuovi pacchetti costituiti dagli utenti e per accelerare l'inclusione di pacchetti popolari nel repositore ufficiale extra. Questo articolo spiega come accedere a e utilizzare l'AUR.\n\nMolti pacchetti che vengono incorporati nei repositori ufficiali sono stati inseriti prima nell'AUR. Qui è possibile aggiungere i propri file PKGBUILD (insieme ad altri file rilevanti). La comunità può votare per pacchetti nell'AUR e i pacchetti che raggiungono un grado di prestigio o popolarità sufficientemente elevato possono essere incorporati nel repositore ufficiale extra, divenendo così accessibili direttamente attraverso pacman, con la condizione che la licenza sia compatibile e il pacchetto disponga di una qualità sufficiente.\n\n"
    },
    {
      "title": "Come iniziare",
      "level": 2,
      "content": "È possibile cercare e scaricare PKGBUILDs sul portale web dell'AUR. I PKGBUILD scaricati possono essere compilati in un pacchetto installabile usando il comando makepkg, dopodiché si possono installare usando pacman. Prima di iniziare ci si dovrebbe rendere conto delle seguenti indicazioni:\n\n- Accertarsi che base-devel sia installato.\n- Dare un'occhiata alle risposte a domande comuni\n- Valutare se aggiustare le impostazioni nel file /etc/makepkg.conf per rendere più veloce la compilazione sul sistema utilizzato prima di iniziare a compilare pacchetti dall'AUR. Processori multicore possono essere decisamente più veloci se si aggiusta la variabile MAKEFLAGS in modo tale da usare diversi nuclei (core) per la compressione dei pacchetti, o semplicemente per scegliere un algoritmo di compressione più vantaggioso. Gli utenti possono anche impiegare ottimizzazioni della compilazione specifiche del tipo di hardware in utilizzo, da specificare nella variabile CFLAGS. Informazioni aggiuntive sono reperibili nella sezione makepkg#Tips and tricks.\n- È inoltre possibile interagire con l'AUR attraverso SSH se si attiva l'autenticazione SSH.\n\n"
    },
    {
      "title": "Installazione e aggiornamento di pacchetti",
      "level": 2,
      "content": "Installare pacchetti dall'AUR è un processo relativamente semplice. Fondamentalmente:\n\n- Si scaricano i file necessari alla compilazione, incluso il PKGBUILD e gli altri file necessari, ad esempio unità systemd e modifiche al software di base.\n- Ci si accerta che il file PKGBUILD o gli altri file di accompagnamento non siano pericolosi, maligni o inaffidabili.\n- Dare il comando makepkg nella directory in cui sono situati i file scaricati. Questo comando scarica il codice sorgente del pacchetto desiderato, lo compila e lo imballa in un pacchetto vero e proprio.\n- Dare il comando pacman -U package_file per installare il pacchetto sul proprio sistema.\n\n"
    },
    {
      "title": "Prerequisiti",
      "level": 3,
      "content": "Innanzitutto si deve verificare che i programmi necessari siano installati sul proprio sistema. Molti strumenti necessari possono essere reperiti installando il metapacchetto base-devel.\n\nDopodiché si scelga una directory nella quale compilare i pacchetti. Gli esempi nelle prossime sezioni useranno ~/builds come directory di compilazione.\n\n"
    },
    {
      "title": "Ottenere i file dall'AUR",
      "level": 3,
      "content": "Una volta identificato il pacchetto nell'AUR, per esempio attraverso il campo di ricerca in alto alla home page dell'AUR e cliccando il suo nome nella lista dei risultati, leggere con attenzione la descrizione del pacchetto per accertarsi che si tratti veramente di ciò che si cerca. Si presti attenzione alla data di aggiornamento e si leggano tutti i commenti situati in fondo alla pagina.\n\nEsistono diversi modi di acquisire i file per la compilazione del pacchetto:\n\n- Clonare il repositore git, situato sotto Package Details come Git Clone URL nella pagina AUR del pacchetto. Questo è il metodo consigliato, dato che è facile ottenere aggiornamenti del pacchetto, dando semplicemente il comando git pull.\n\n```\n$ git clone https://aur.archlinux.org/nome_pacchetto.git\n```\n\n- Scaricare un'istantanea (ing. snapshot), cliccando sul link Download snapshot nella sezione Package Actions sulla destra della pagina, oppure dando il seguente comando in un terminale:\n\n```\n$ curl -L -O https://aur.archlinux.org/cgit/aur.git/snapshot/nome_pacchetto.tar.gz\n```\n\n- Usare il repositore alternativo archlinux/aur su GitHub, nel quale ogni pacchetto si trova nel proprio branch. Si consiglia di clonare singoli branch perché il repositore intero è troppo grande e scaricare ogni pacchetto durerebbe troppo tempo. Dunque si può clonare le parti rilevanti nei seguenti modi: Dare git clone --single-branch: $ git clone --branch nome_pacchetto --single-branch https://github.com/archlinux/aur.git Eseguire un clone parziale del repositore (dando git clone --depth=1) e reperire i branch di interesse selettivamente:\n\n- Dare git clone --single-branch: $ git clone --branch nome_pacchetto --single-branch https://github.com/archlinux/aur.git\n- Eseguire un clone parziale del repositore (dando git clone --depth=1) e reperire i branch di interesse selettivamente:\n\n```\n$ git clone --branch nome_pacchetto --single-branch https://github.com/archlinux/aur.git\n```\n\n```\n$ git clone --depth=1 https://github.com/archlinux/aur.git; cd aur$ git remote set-branches --add origin nome_pacchetto$ git fetch$ git checkout nome_pacchetto\n```\n\n"
    },
    {
      "title": "Ottenere una chiave pubblica PGP se necessario",
      "level": 3,
      "content": "Si controlli se il file di firma (ing. signature) in formato .sig oppure .asc fa parte dei file scaricabili insieme al PKGBUILD. Se dovesse essere il caso, si potrebbe ottenere una delle chiavi pubbliche elencate nella lista. Altre informazioni si possono trovare nella sezione makepkg#Signature checking.\n\n"
    },
    {
      "title": "Compilazione del pacchetto",
      "level": 3,
      "content": "Entrare nella directory in cui si trova il file PKGBUILD relativo al pacchetto in questione.\n\n```\n$ cd package_name\n```\n\nLeggere i contenuti dei file scaricati. Per esempio, l'impaginatore less può essere usato per leggere il PKGBUILD, dando:\n\n```\n$ less PKGBUILD\n```\n\n- Per vedere ciò che è cambiato dall'ultimo commit git, si dia git show.\n- Per veder vere ciò che è cambiato dall'ultimo commit in formato vimdiff, si dia git difftool @~..@ --tool=vimdiff. Il vantaggio di vimdiff è che si può vedere il contenuto di ogni file insieme a indicatori su che cosa è cambiato.\n\nUna volta confermato il contenuto dei file, eseguire il programma makepkg come utente normale (non-privilegiato o admin). Le seguenti opzioni possono essere utili:\n\n- -s/--syncdeps rileva e installa automaticamente tramite pacman tutti i pacchetti dai quali dipende il PKGBUILD prima di compilare quest'ultimo. Se il pacchetto dovesse dipendere da altri pacchetto AUR, questi andrebbero installati a mano in anticipo.\n- -i/--install installa il pacchetto package nel caso possa essere compilato correttamente. Questo completa automaticamente anche il prossimo passo, che altrimenti andrebbe fatto a mano.\n- -r/--rmdeps rimuove pacchetti installati e richiesti per la compilazione, che non sono più necessari una volta che questa è terminata. Tuttavia verranno riscaricati e installati quando si aggiorna il pacchetto.\n- -c/--clean ripulisce (ovvero rimuove) i file temporanei prodotti dalla compilazione, che non sono più necessari al termine dell'operazione.\n\n"
    },
    {
      "title": "Installazione del pacchetto",
      "level": 3,
      "content": "A questo punto il pacchetto può essere installato con pacman:\n\n```\n# pacman -U nome_pacchetto-version-architettura.pkg.tar.zst\n```\n\n- Se si modifica la variabile PKGEXT in makepkg.conf, il nome del pacchetto prodotto potrebbe essere leggermente diverso.\n- Queste indicazioni sono solo un breve riassunto del processo di compilazione ed imballaggio. È consigliabile leggere gli articoli makepkg e Arch build system per ottenere altri dettagli.\n\n"
    },
    {
      "title": "Installazione di aggiornamenti",
      "level": 3,
      "content": "Nella stessa directory in cui è situato il PKGBUILD del pacchetto in questione, si può aggiornare i file scaricati in precedenza dando\n\n```\n$ git pull\n```\n\ne seguendo le stesse istruzioni di prima.\n\n"
    },
    {
      "title": "Account",
      "level": 2,
      "content": "Questa sezione tratta degli account sul sito dell'AUR.\n\n"
    },
    {
      "title": "Sospensione",
      "level": 3,
      "content": "Quando si modifica un utente come mantenitore di pacchetti, si può selezionare il campo suspended (it. sospeso), che sospende l'utente in questione. Quando un utente viene sospeso, non può:\n\n- Effettuare il login su https://aur.archlinux.org\n- Ricevere notifiche\n- Interagire con l'interfaccia git\n\n"
    },
    {
      "title": "Inattività",
      "level": 3,
      "content": "Quando si modifica il proprio account oppure l'account di un altro utente in qualità di mantenitore di pacchetti, il campo inactive (it. inattivo) può essere selezionato. Utenti inattivi hanno la funzione di\n\n- Mostrare la data nella quale quancuno fu marchiato come inattivo\n- Calcolare il numero di mantenitori attivi\n\n"
    },
    {
      "title": "Commentare i pacchetti",
      "level": 3,
      "content": "Il portale web dell'AUR offre agli utenti la possibilità di dare consigli e suggerimenti su come migliorare il PKGBUILD.\n\nPython-Markdown è uno strumento che descrive la sintassi Markdown con la quale si può formattare i commenti.\n\n"
    },
    {
      "title": "Votare per i pacchetti",
      "level": 3,
      "content": "Una delle attività più semplici per tutti gli utenti Arch è di consultare l'AUR e votare per i propri pacchetti preferiti utilizzando l'interfaccia web. Si può votare per tutti i pacchetti affinché essi vengano incorporati nel repositore ufficiale extra. Il numero di voti è uno dei criteri di selezione, dunque è nell'interesse di ognuno di votare.\n\nCi si può registrare sul sito AUR per ottenere l'opzione Vote for this package (it. vota per questo pacchetto). Una volta effettuata la registrazione è possibile votare anche in un terminale con aur-auto-vote-gitAUR.\n\nAlternativamente, se si ha impostato l'autenticazione SSH per l'AUR, si può votare direttamente usando la propria chiave SSH, evitando di dover salvare o digitare la password AUR.\n\n```\n$ ssh aur@aur.archlinux.org vote nome_pacchetto\n```\n\n"
    },
    {
      "title": "Marchiare i pacchetti obsoleti",
      "level": 3,
      "content": "Nel caso in un pacchetto sia obsoleto, ovvero ci dovesse essere una versione più recente, ma questa non sia ancora stata messa a disposizione nell'AUR, si può marchiare il pacchetto come out-of-date, dando un riassunto del motivo, preferibilmente inserendo dei link all'annuncio dell'aggiornamento, oppure del file tarball della nuova versione.\n\nSi dovrebbe anche provare a informare il mantenitore direttamente per email. Nel caso non si ottenga risposta dopo due settimane, si può richiedere che il pacchetto venga riconosciuto come orfano. Più informazioni sono disponibili qui.\n\n"
    },
    {
      "title": "Debugging il processo di compilazione",
      "level": 2,
      "content": "Nel caso di problemi, si controllino bene le seguenti cose:\n\n1. Accertarsi che il proprio sistema sia stato aggiornato prima di compilare qualcosa.\n1. Verificare di avere installato il pacchetto base-devel.\n1. Usare makepkg con l'opzione -s per rilevare e installare tutti i pacchetti da cui dipende il pacchetto che si desidera compilare prima di iniziare il processo.\n1. Provare ad usare la configurazione standard di makepkg.\n1. Consultare Makepkg#Troubleshooting per problemi comuni.\n\nIn caso di problemi quando si compila un pacchetto, leggere prima i contenuti del file PKGBUILD ed i commenti sulla sua pagina AUR.\n\nÈ possibile che un PKGBUILD non funzioni per nessuno. Se non si dovesse essere in grado di capire cosa causi il problema oppure come risolverlo, si contatti il mantenitore (ad esempio scrivendo un commento nel quale si descrive il problema. Si può anche chiedere aiuto nel forum AUR Issues, Discussion & PKGBUILD Requests.\n\nIl motivo può non essere banale. Impostazioni personalizzate nelle CFLAGS, LDFLAGS e MAKEFLAGS possono provocare errori. Per evitare problemi causati da impostazioni personalizzate, si provi a compilare pacchetti in un ambiente chroot pulito. Se il processo dovesse ancora fallire in un chroot pulito, si tratta probabilmente di un problema all'interno del PKGBUILD.\n\nCreating packages#Checking package sanity contiene informazioni sull'utilizzo del comando namcap. Per ottenere un controllo dei contenuti di un PKGBUILD, si carichi il file nella mailing list aur-general, così altri mantenitori di pacchetti e utenti AUR possono passare in revisione i contenuti. Lo stesso si può ottenere caricando il file sul forum, o chiedendo aiuto nella chat IRC #archlinux-aur sul network Libera Chat.\n\n"
    },
    {
      "title": "Inserire pacchetti",
      "level": 2,
      "content": "Gli utenti possono distribuire i propri PKGBUILD nell'AUR. Per istruzioni si consulti le linee guida per la distribuzione di pacchetti nell'AUR.\n\n"
    },
    {
      "title": "Traduzione dell'interfaccia web",
      "level": 2,
      "content": "È possibile creare e mantenere traduzioni del portale web AUR. Si consulti il documento i18n.md per istruzioni.\n\n"
    },
    {
      "title": "Storia",
      "level": 2,
      "content": "All'inizio vi fu ftp://ftp.archlinux.org/incoming, e gli utenti contribuirono semplicemente caricando i PKGBUILD ed i file ausiliari necessari insieme al pacchetto compilato ed imballato direttamente sul server. Il pacchetto e tutti i file associati ad esso rimanevano lì finché un utente \"fidato\" (oggi conosciuto mantenitore di pacchetti) li vide e incorporò nel repositore.\n\nPoi si istituì il \"repositore per utenti fidati\" (ing. Trusted User Repository), nel quale certi membri della comunità ottennero il permesso di caricare i propri programmi affinché essi venissero distribuiti fra la comunità. L'AUR espanse questo sistema con lo scopo di renderlo più flessibile e accessibile. Infatti, i mantenitori dell'AUR furono chiamati utenti \"fidati\" (ing. Trusted User) prima di diventare mantenitori di pacchetti.\n\nTra il 2015-06-08 ed il 2015-08-08, l'AUR venne aggiornata dalla versione 3.5.1 alla versione 4.0.0, nella quale fu introdotto l'utilizzo dei repositori Git per il fine di pubblicazione dei PKGBUILD. I pacchetti esistenti vennero migrati nella nuova infrastruttura o rimossi.\n\n"
    },
    {
      "title": "Repositori Git per l'AUR3",
      "level": 3,
      "content": "L'archivio AUR su GitHub ha un repositore per ogni pacchetto che si trovava sull'AUR versione 3 all'epoca della migrazione. Esiste anche l'archivio alternativo aur3-mirror che offre la stessa cosa.\n\n"
    },
    {
      "title": "Che tipologia di pacchetti sono permessi nell'AUR?",
      "level": 3,
      "content": "I pacchetti nell'AUR sono semplicemente degli script che contengono istruzione su come generare pacchetti imballati che possono essere installati da parte di pacman. Nella maggior parte dei casi, qualunque tipo di pacchetto è permesso, anche se sottoposto alle linee di guida dei pacchetti AUR, purché la distribuzione del pacchetto sia permessa dalla licenza del contenuto. In altri casi, ad esempio quando non è permesso pubblicare un link di download, ovvero è vietato ridistribuire il contenuto, si può solo pubblicare il nome senza link nel PKGBUILD, in modo tale che solo utenti che siano già in possesso del codice sorgente siano in grado di compilare ed installare il pacchetto. In caso di dubbi, chiedete.\n\n"
    },
    {
      "title": "Come faccio a votare per pacchetti nell'AUR?",
      "level": 3,
      "content": "Vedi #Votare per i pacchetti.\n\n"
    },
    {
      "title": "Chi sono i mantenitori di pacchetti?",
      "level": 3,
      "content": "Vedi See Arch terminology#Package maintainer (ing. Package Mantainer).\n\n"
    },
    {
      "title": "Qual'è la differenza tra l'AUR e il repositore extra?",
      "level": 3,
      "content": "Il repositore utenti Arch è dove tutti i PKGBUILD vengono caricati da utenti e membri della comunità. Questi non sono ufficiali e vanno compilati a mano con makepkg. Quando un PKGBUILD diventa molto popolare e ottiene l'appoggio di un mantenitore, viene incorporato nel repositore extra, dal quale può essere installato con pacman.\n\n"
    },
    {
      "title": "Foo nell'AUR è obsoleto; cosa faccio?",
      "level": 3,
      "content": "Vedi #Marchiare i pacchetti obsoleti.\n\nNel frattempo, puoi provare da solo ad aggiornare il pacchetto modificando il PKGBUILD sul tuo sistema. A volte non è necessario modificare il processo di compilazione ed imballaggio in modo tale che aggiornare le variabili pkgver o source è sufficiente.\n\n"
    },
    {
      "title": "Foo nell'AUR non compila quando eseguo makepkg; cosa faccio?",
      "level": 3,
      "content": "Probabilmente si tratta di un errore banale, vedi #Debugging il processo di compilazione.\n\n"
    },
    {
      "title": "ERROR: One or more PGP signatures could not be verified!; cosa faccio?",
      "level": 3,
      "content": "Probabilmente non hai incorporato le chiavi pubbliche nel tuo portachiavi digitale personale. Vedi Makepkg#Signature checking per dettagli.\n\n"
    },
    {
      "title": "Come faccio a create un PKGBUILD?",
      "level": 3,
      "content": "Consulta l'articolo AUR submission guidelines#Rules of submission, poi vedi le istruzioni in creating packages.\n\n"
    },
    {
      "title": "Ho un PKGBUILD che vorrei pubblicare; c'è qualcuno che può verificare che non abbia commesso errori?",
      "level": 3,
      "content": "Ci sono diversi luoghi dove chiedere, vedi #Debugging il processo di compilazione.\n\n"
    },
    {
      "title": "Come faccio ad inserire un PKGBUILD nel repositore extra?",
      "level": 3,
      "content": "In genere servono almeno 10 voti per fare incorporare qualcosa nel repositore extra. Tuttavia, spesso basta convincere un mantenitore ad appoggiare il pacchetto.\n\nRaggiungere il numero minimo di voti non è l'unico criterio; ci deve essere un mantenitore di pacchetti disposto a sostenere il pacchetto in questione. I mantenitori non sono obbligati ad incorporare un pacchetto nel repositore extra soltanto perché ha raggiunto molti voti.\n\nSpesso, se un pacchetto molto popolare rimane nell'AUR, è per uno di questi motivi:\n\n- Arch Linux possiede già un'altra versione del pacchetto in uno dei repositori ufficiali.\n- La licenza proibisce la ridistribuzione.\n- Si tratta di un AUR helper, ovvero di un programma che scarica ed installa pacchetti AUR, evitando di dovere compilare tutto a mano nella maniera descritta in questo articolo. Tuttavia questi programmi non sono appoggiati ufficialmente.\n\nAltre informazioni sono reperibili tra le regole per incorporare pacchetti nel repositore extra.\n\n"
    },
    {
      "title": "Come faccio ad accelerare processi di compilazione?",
      "level": 3,
      "content": "Vedi Makepkg#Improving build times.\n\n"
    },
    {
      "title": "Qual'è la differenza tra i pacchetti foo e foo-git?",
      "level": 3,
      "content": "Molti pacchetti AUR provengono da versioni complete dette \"stabili\", oppure da versioni in sviluppo \"instabili\". Quest'ultime in genere hanno un suffisso che descrive il sistema di controllo versione in utilizzo e non sono pensate per essere usate normalmente, tuttavia possono contenere nuove funzioni o correzioni di bug. Questi pacchetti scaricano soltanto il nuovo codice sorgente ed il loro pkgver() non riflette aggiornamenti. È per lo stesso motivo che questi pacchetti non possono verificare la propria autenticità tramite il confronto di checksum.\n\nVedi anche System maintenance#Use proven software packages.\n\n"
    },
    {
      "title": "Perché foo è scomparso dall'AUR?",
      "level": 3,
      "content": "È possibile che il pacchetto sia stato adottato da un mantenitore e sia quindi stato incorporato nel repositore extra.\n\nÈ anche possibile che il pacchetto sia stato rimosso perché violava le regole di distribuzione nell'AUR. Controlla gli archivi aur-requests per sapere il motivo della rimozione.\n\n"
    },
    {
      "title": "Come faccio a sapere se uno dei pacchetti che ho installato è scomparso dall'AUR?",
      "level": 3,
      "content": "Il modo più semplice di controllare è di verificare il codice HTTP della pagina AUR dei pacchetti in questione:\n\n```\n$ comm -23 <(pacman -Qqm | sort) <(curl https://aur.archlinux.org/packages.gz | gzip -cd | sort)\n```\n\n"
    },
    {
      "title": "Come faccio a vedere una lista di tutti i pacchetti AUR?",
      "level": 3,
      "content": "- https://aur.archlinux.org/packages.gz\n- Utilizza aurpkglist del pacchetto python3-aurAUR\n\n"
    },
    {
      "title": "Vedi anche",
      "level": 2,
      "content": "- interfaccio web dell'AUR\n- AUR Mailing List\n\n"
    }
  ]
}
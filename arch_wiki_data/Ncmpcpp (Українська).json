{
  "title": "Ncmpcpp (Українська)",
  "url": "https://wiki.archlinux.org/title/Ncmpcpp_(%D0%A3%D0%BA%D1%80%D0%B0%D1%97%D0%BD%D1%81%D1%8C%D0%BA%D0%B0)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Повʼязані статті\n\n- mpd (Українська)\n\nNcmpcpp — це клієнт для mpd (сумісний з mopidy), який має інтерфейс, дуже схожий на інтерфейс ncmpc, але має більше корисних можливостей, на зразок підтримки регулярних виразів під час пошуку по базі даних, розширеного формату пісень, можливости сортувати та фільтрувати списки пісень чи вбудованого переглядача файлової системи.\n\nЩоби мати змогу його використовувати, на вашій системі повинен працювати mpd, так як ncmpcpp/mpd працюють разом як клієнт та сервер.\n\n"
    },
    {
      "title": "Встановлення",
      "level": 2,
      "content": "Встановіть ncmpcpp з офіційного сховища пакунків.\n\n"
    },
    {
      "title": "Основні налаштування",
      "level": 2,
      "content": "„Графічний“ інтерфейс програми дає користувачам широкий простір для налаштувань. Просто перепишіть документ $XDG_CONFIG_HOME/ncmpcpp/config на свій лад. Якщо ж, після установки, $XDG_CONFIG_HOME/ncmpcpp/config не з'явився, просто зкопіюйте доданий приклад налаштувань, змініть його власника, та заповніть принаймні ці три поля:\n\n- mpd_host — повинен вказувати на хост, де знаходиться mpd. Якщо це той самий комп'ютер, можете вказати: „localhost“, „127.0.0.1“ або „::1“. Щоби при підключенні водився пароль, напишіть \"пароль@хост\"\n- mpd_port — для mpd порт за замовчуванням — „6600“\n- mpd_music_dir — те ж значення як і \"music_directory\" з файлу mpd.conf\n\nПриклади, для натхнення:\n\n- Доданий приклад налаштувань /usr/share/doc/ncmpcpp/config.\n- Форум де ви можете викласти зображення свого .ncmpcpp/config\n\n"
    },
    {
      "title": "Візуалізація",
      "level": 2,
      "content": "Щоб увімкнути візуалізацію, додайте декілька рядків до /etc/mpd.conf або ~/.config/mpd/mpd.conf. Таким чином ви увімкнете Швидке перетворення Фур'є:\n\n```\naudio_output {\n    type                    \"fifo\"\n    name                    \"my_fifo\"\n    path                    \"/tmp/mpd.fifo\"\n    format                  \"44100:16:2\"\n}\n```\n\nТакож, додайте ще декілька рядків до $XDG_CONFIG_HOME/ncmpcpp/config\n\n```\nvisualizer_data_source = \"/tmp/mpd.fifo\"\nvisualizer_output_name = \"my_fifo\"\nvisualizer_in_stereo = \"yes\"\nvisualizer_type = \"spectrum\"\nvisualizer_look = \"+|\"\n```\n\n- visualizer_type — тип візуалізації, може приймати значення: spectrum, ellipse, wave_filled або wave.\n- visualizer_look — вигляд візуалізації (рядок повинен бути 2 символи в довжину: перший для амплітуди, другий — для спектру частот).\n\nЯкщо ви користуєтесь mopidy, то візуалізацією займається udpsink gstreamer'а. Помінясте значення поля output у блоці [audio] вашого файлу mopidy.conf:\n\n```\noutput = tee name=t ! queue ! autoaudiosink t. ! queue ! audio/x-raw,rate=44100,channels=2,format=S16LE ! udpsink host=localhost port=5555\n```\n\nЦе перенаправить звукову інформацію на порт 5555. Щоб ncmpcpp слухав цей порт, поміняйте й visualizer_data_source відповідним чином:\n\n```\nvisualizer_data_source = \"localhost:5555\"\n```\n\n"
    },
    {
      "title": "Перевизначення клавіш",
      "level": 3,
      "content": "Список гарячих клавіш, та дій які вони виконують, можна переглянути всередині ncmpcpp натиснушви F1. Щоб змінити клавіші за замовчуванням, користувачі можуть просто скопіювати файл /usr/share/doc/ncmpcpp/bindings до $XDG_CONFIG_HOME/ncmpcpp/ та відредагувати його.\n\n"
    },
    {
      "title": "Автоматичне визначення тегів із назв файлів і навпаки",
      "level": 3,
      "content": "В редакторі тегів, ви можете обрати директорію з музикою а потім обрати опцію Filename в середній колонці. Відкриється вікно з двома опціями: Get Tags from Filename(Взяти теги з назв) та Rename files(перейменувати файли). В свою чергу, якщо ви оберете Get Tags From Filename, з'являться нові два вікна. Зліва можна ввести шаблон за яким з назв файлів відбереться необхідна інформація. Ви також ножете натиснути Preview щоб побачити як буде виглядати кінцевий результат. Справа ж ви зможете побачити список ключових слів, які можна використати при написанні шаблону.\n\nДля прикладу: %a - %t. Якщо ваші файли названі згідно шаблону (Виконавець - Назва) то програма візьме цю інформацію, та виставить їм необхідні теги.\n\nОпція Rename Files працює просто навпаки. Вона бере теги файлів, та створює з них нові назви для файлів.\n\n"
    },
    {
      "title": "Повідомлення про зміну пісні",
      "level": 3,
      "content": "Команду execute_on_song_change можна об'єднати з програмою notify-send посилати повідомлення кожен раз коли змінюється пісня, що грається (а також коли запускається програма). Для цього потрібно також мати правильно налаштований сервер повідомлень у системі. Відредагуйте $XDG_CONFIG_HOME/ncmpcpp/config, наприклад ось так:\n\n```\nexecute_on_song_change = notify-send \"Зараз грає \" \"$(mpc --format '%title% \\n%artist% - %album%' current)\"\n```\n\n"
    },
    {
      "title": "Також відвідайте",
      "level": 2,
      "content": "Налаштування з dotshare.it\n\n"
    }
  ]
}
{
  "title": "GDM (日本語)",
  "url": "https://wiki.archlinux.org/title/GDM_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- GNOME\n- ディスプレイマネージャ\n\nGDM - GNOME Display Manager より: \"GNOME Display Manager (GDM) はグラフィカルディスプレイサーバーを管理しグラフィカルユーザーログインを処理するプログラムです。\"\n\nディスプレイマネージャは X Window System や Wayland のユーザーにグラフィカルなログインプロンプトを提供します。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 起動 2.1 アプリケーションの自動起動\n- 3 設定 3.1 ログイン画面の背景画像 3.2 dconf の設定 3.2.1 ログイン画面のロゴ 3.2.2 カーソルテーマの変更 3.2.3 アイコンテーマの変更 3.2.4 ログイン画面のフォントを大きくする 3.2.5 サウンドをオフにする 3.2.6 電源ボタンの挙動の設定 3.2.7 タップでクリックを有効化 3.2.8 アクセシビリティメニューを無効化/有効化する 3.2.9 GDM で夜間モードを有効にする 3.3 キーボードレイアウト 3.4 言語の変更 3.5 ユーザーとログイン 3.5.1 自動ログイン 3.5.2 パスワードレスログイン 3.5.3 複数のセッションが存在する場合にパスワードレスシャットダウン 3.5.4 GDM で root ログインを有効にする 3.5.5 ログインリストからユーザを非表示にする 3.6 デフォルトのモニター設定をセットアップする 3.7 X サーバーのアクセス権限を設定\n- 4 トラブルシューティング 4.1 Wayland とプロプライエタリな NVIDIA ドライバ 4.2 ログアウト時に GDM が動かない 4.3 Rootless Xorg 4.4 Xorg バックエンドを使う 4.5 何らかの入力がないと GDM が起動しない 4.6 gdm が完全に削除されない 4.7 GDM の自動サスペンド (GNOME 3.28) 4.8 GDM が Wayland を無視し、デフォルトで X.Org を使用する 4.9 NVidia (e)GPU が存在する場合、AMD または Intel GPU で黒い画面が表示される 4.10 GDM が有効にならない\n- 5 参照\n\n- 2.1 アプリケーションの自動起動\n\n- 3.1 ログイン画面の背景画像\n- 3.2 dconf の設定 3.2.1 ログイン画面のロゴ 3.2.2 カーソルテーマの変更 3.2.3 アイコンテーマの変更 3.2.4 ログイン画面のフォントを大きくする 3.2.5 サウンドをオフにする 3.2.6 電源ボタンの挙動の設定 3.2.7 タップでクリックを有効化 3.2.8 アクセシビリティメニューを無効化/有効化する 3.2.9 GDM で夜間モードを有効にする\n- 3.3 キーボードレイアウト\n- 3.4 言語の変更\n- 3.5 ユーザーとログイン 3.5.1 自動ログイン 3.5.2 パスワードレスログイン 3.5.3 複数のセッションが存在する場合にパスワードレスシャットダウン 3.5.4 GDM で root ログインを有効にする 3.5.5 ログインリストからユーザを非表示にする\n- 3.6 デフォルトのモニター設定をセットアップする\n- 3.7 X サーバーのアクセス権限を設定\n\n- 3.2.1 ログイン画面のロゴ\n- 3.2.2 カーソルテーマの変更\n- 3.2.3 アイコンテーマの変更\n- 3.2.4 ログイン画面のフォントを大きくする\n- 3.2.5 サウンドをオフにする\n- 3.2.6 電源ボタンの挙動の設定\n- 3.2.7 タップでクリックを有効化\n- 3.2.8 アクセシビリティメニューを無効化/有効化する\n- 3.2.9 GDM で夜間モードを有効にする\n\n- 3.5.1 自動ログイン\n- 3.5.2 パスワードレスログイン\n- 3.5.3 複数のセッションが存在する場合にパスワードレスシャットダウン\n- 3.5.4 GDM で root ログインを有効にする\n- 3.5.5 ログインリストからユーザを非表示にする\n\n- 4.1 Wayland とプロプライエタリな NVIDIA ドライバ\n- 4.2 ログアウト時に GDM が動かない\n- 4.3 Rootless Xorg\n- 4.4 Xorg バックエンドを使う\n- 4.5 何らかの入力がないと GDM が起動しない\n- 4.6 gdm が完全に削除されない\n- 4.7 GDM の自動サスペンド (GNOME 3.28)\n- 4.8 GDM が Wayland を無視し、デフォルトで X.Org を使用する\n- 4.9 NVidia (e)GPU が存在する場合、AMD または Intel GPU で黒い画面が表示される\n- 4.10 GDM が有効にならない\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "GDM は gdm パッケージでインストールできます。また、gnome グループの一部としてもインストールされます。\n\n"
    },
    {
      "title": "起動",
      "level": 2,
      "content": "ブート時に GDM を起動するには、gdm.service を有効化して下さい。\n\n"
    },
    {
      "title": "アプリケーションの自動起動",
      "level": 3,
      "content": "ログイン後に自動的にアプリケーションを起動するには、自動起動#デスクトップ環境のスタートアップ時 のページであなたのデスクトップ環境に関係する指示に従ってください。\n\n"
    },
    {
      "title": "ログイン画面の背景画像",
      "level": 3,
      "content": "- GNOME 3.16 から、GNOME Shell のテーマはバイナリファイル (gresource) として保存されるようになりました。\n- 以下の変更は、gnome-shell が更新されると上書きされてしまいます。\n\nまず、既存の GNOME Shell テーマを抽出して、ホームディレクトリ内の何らかのディレクトリに保存する必要があります。これは、以下のスクリプトで可能です:\n\n```\nextractgst.sh\n```\n\n```\n#!/bin/sh\ngst=/usr/share/gnome-shell/gnome-shell-theme.gresource\nworkdir=${HOME}/shell-theme\n\nfor r in `gresource list $gst`; do\n\tr=${r#\\/org\\/gnome\\/shell/}\n\tif [ ! -d $workdir/${r%/*} ]; then\n\t  mkdir -p $workdir/${r%/*}\n\tfi\ndone\n\nfor r in `gresource list $gst`; do\n        gresource extract $gst $r >$workdir/${r#\\/org\\/gnome\\/shell/}\ndone\n```\n\n作成されたディレクトリに移動してください。抽出されたテーマファイルが確認できるはずです。好きな背景画像をこのディレクトリへコピーしてください。\n\n次に、そのディレクトリ内に以下のようなファイルを作成する必要があります:\n\n```\ngnome-shell-theme.gresource.xml\n```\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<gresources>\n  <gresource prefix=\"/org/gnome/shell/theme\">\n    <file>calendar-today.svg</file>\n    <file>calendar-today-light.svg</file>\n    <file>checkbox.svg</file>\n    <file>checkbox-focused.svg</file>\n    <file>checkbox-off-focused-light.svg</file>\n    <file>checkbox-off-focused.svg</file>\n    <file>checkbox-off-light.svg</file>\n    <file>checkbox-off.svg</file>\n    <file>gnome-shell.css</file>\n    <file>gnome-shell-high-contrast.css</file>\n    <file>gnome-shell-start.svg</file>\n    <file>pad-osd.css</file>\n    <file>process-working.svg</file>\n    <file>toggle-off.svg</file>\n    <file>toggle-off-hc.svg</file>\n    <file>toggle-off-light.svg</file>\n    <file>toggle-on.svg</file>\n    <file>toggle-on-hc.svg</file>\n    <file>toggle-on-light.svg</file>\n    <file>workspace-placeholder.svg</file>\n    <file>filename</file>\n  </gresource>\n</gresources>\n```\n\nfilename は使用する背景画像のファイル名に置き換えてください。あるいは、16進数のカラーコードを使用する場合は、この行を削除してください。\n\nそのディレクトリ内の gnome-shell.css ファイルを開き、#lockDialogGroup の定義を以下のように変更してください:\n\n```\n#lockDialogGroup {\n  background: url(filename);\n  background-size: widthpx heightpx;\n  background-repeat: no-repeat;\n}\n```\n\nbackground-size は GDM が使用する解像度に設定してください (これは、画像の解像度と同じとは限りません)。画面解像度の一覧は、Wikipedia:Display_resolution#Computer_monitors を見てください。最後に、filename の部分は背景画像のファイル名に置き換えてください。\n\n背景色だけを変更したい場合は、#lockDialogGroup の定義を以下のように変更してください:\n\n```\n#lockDialogGroup {\n  background-color: #color;\n}\n```\n\ncolor は背景色の16進数カラーコードです。\n\n次に、以下のコマンドでテーマをコンパイルしてください:\n\n```\n$ glib-compile-resources gnome-shell-theme.gresource.xml\n```\n\nそして、出来上がった gnome-shell-theme.gresource ファイルを /usr/share/gnome-shell ディレクトリにコピーしてください。\n\n最後に、gdm.service を再起動してください (注意: 一度ログアウトして再度ログインし直すだけでは十分ではありません)。設定された背景画像が使用されるようになっているはずです。\n\n詳細は、このフォーラムスレッドを見てください。上記の手順を自動化するシェルスクリプトは DimaZirix の github リポジトリで入手できます。\n\n"
    },
    {
      "title": "dconf の設定",
      "level": 3,
      "content": "GDM の設定の一部は dconf データベース内に保存されます。これらの設定は次の2通りの方法で設定することができます。1つ目は、/etc/dconf/db/gdm.d ディレクトリにキーファイルを追加し、dconf update を root として実行して GDM データベースを再コンパイルする方法。2つ目は、GDM ユーザとしてシステムにログインし、gsettings コマンドラインツールを使って直接設定を変更する方法です。前者の方法の場合、GDM プロファイルのファイルが必要であることに注意してください。このファイルはもはや上流で同梱されていないため、手動で作成しなければなりません。以下を見てください:\n\n```\n/etc/dconf/profile/gdm\n```\n\n```\nuser-db:user\nsystem-db:gdm\nfile-db:/usr/share/gdm/greeter-dconf-defaults\n```\n\n後者の方法では、以下のコマンドで GDM ユーザとしてログインできます:\n\n```\n# machinectl shell gdm@ /bin/bash\n```\n\n"
    },
    {
      "title": "ログイン画面のロゴ",
      "level": 4,
      "content": "以下のキーファイルを作成してください:\n\n```\n/etc/dconf/db/gdm.d/02-logo\n```\n\n```\n[org/gnome/login-screen]\nlogo='/path/to/logo.png'\n```\n\nその後、GDM データベースを再コンパイルしてください。もしくは、以下のコマンドを使って一時的に GDM ユーザとしてログインしてロゴを変更してください:\n\n```\n$ sudo -u gdm dbus-launch gsettings set org.gnome.login-screen logo '/path/to/logo.png'\n```\n\n"
    },
    {
      "title": "カーソルテーマの変更",
      "level": 4,
      "content": "GDM は GNOME のカーソルテーマの設定を使用せず、XDG の仕様に準拠して設定されたカーソルテーマも無視します。GDM で使用されるカーソルテーマを変更するには、以下のキーファイルを作成してください:\n\n```\n/etc/dconf/db/gdm.d/10-cursor-settings\n```\n\n```\n[org/gnome/desktop/interface]\ncursor-theme='theme-name'\n```\n\nそして、GDM のデータベースを再コンパイルしてください。あるいは、以下のコマンドを使って一時的に GDM ユーザとしてログインしてカーソルテーマを変更してください:\n\n```\n$ sudo -u gdm dbus-launch gsettings set org.gnome.desktop.interface cursor-theme 'theme-name'\n```\n\n"
    },
    {
      "title": "アイコンテーマの変更",
      "level": 4,
      "content": "アイコンのテーマを変更する場合も、同じ方法で行うことができます。以下のキーファイルを作成してください:\n\n```\n/etc/dconf/db/gdm.d/11-icon-settings\n```\n\n```\n[org/gnome/desktop/interface]\nicon-theme='theme-name'\n```\n\nそして、GDM のデータベースを再コンパイルしてください。あるいは、以下のコマンドを使って一時的に GDM ユーザとしてログインしてアイコンテーマを変更してください:\n\n```\n$ sudo -u gdm dbus-launch gsettings set org.gnome.desktop.interface icon-theme 'theme-name'\n```\n\n"
    },
    {
      "title": "ログイン画面のフォントを大きくする",
      "level": 4,
      "content": "画面右上のアクセシビリティアイコン (白丸に人影のアイコン) をクリックして Large Text オプションにチェックを入れてください。\n\n特定のスケーリングファクタを指定するには、以下のキーファイルを作成してください:\n\n```\n/etc/dconf/db/gdm.d/03-scaling\n```\n\n```\n[org/gnome/desktop/interface]\ntext-scaling-factor='1.25'\n```\n\nそして、GDM のデータベースを再コンパイルしてください。あるいは、以下のコマンドを使って一時的に GDM ユーザとしてログインしてフォントを変更してください:\n\n```\n$ sudo -u gdm dbus-launch gsettings set org.gnome.desktop.interface text-scaling-factor '1.25'\n```\n\n"
    },
    {
      "title": "サウンドをオフにする",
      "level": 4,
      "content": "以下の設定をすると、ログイン画面でシステムのボリュームを変更した際に鳴るフィードバック音がオフになります。\n\n以下のキーファイルを作成してください:\n\n```\n/etc/dconf/db/gdm.d/04-sound\n```\n\n```\n[org/gnome/desktop/sound]\nevent-sounds=false\n```\n\nそして、GDM のデータベースを再コンパイルしてください。あるいは、以下のコマンドを使って一時的に GDM ユーザとしてログインしてサウンドをオフにしてください:\n\n```\n$ sudo -u gdm dbus-launch gsettings set org.gnome.desktop.sound event-sounds 'false'\n```\n\n"
    },
    {
      "title": "電源ボタンの挙動の設定",
      "level": 4,
      "content": "- 電源ボタンに対する logind の設定は、GNOME Settings Daemon によって上書きされます。[1]\n- GDM 3.18 の時点で、電源ボタンを interactive に設定することはできません。[2]\n- 一部のケースで、この設定は無視され、ハードコードされたデフォルトが使用されます。[3]\n\n以下のキーファイルを作成してください:\n\n```\n/etc/dconf/db/gdm.d/05-power\n```\n\n```\n[org/gnome/settings-daemon/plugins/power]\npower-button-action='action'\n```\n\nそして、GDM のデータベースを再コンパイルしてください。あるいは、以下のコマンドを使って一時的に GDM ユーザとしてログインして電源ボタンの挙動を設定してください:\n\n```\n$ sudo -u gdm dbus-launch gsettings set org.gnome.settings-daemon.plugins.power power-button-action 'action'\n```\n\naction は、nothing、suspend、hibernate のうちどれかです。\n\n"
    },
    {
      "title": "タップでクリックを有効化",
      "level": 4,
      "content": "デフォルトでは GDM (と GNOME) ではタップでクリックが無効になっていますが、dconf の設定で簡単に有効化できます。\n\nタップでクリックを有効化するには、以下のキーファイルを作成してください:\n\n```\n/etc/dconf/db/gdm.d/06-tap-to-click\n```\n\n```\n[org/gnome/desktop/peripherals/touchpad]\ntap-to-click=true\n```\n\nそして、GDM のデータベースを再コンパイルしてください。あるいは、以下のコマンドを使って一時的に GDM ユーザとしてログインしてタップでクリックを有効化してください:\n\n```\n$ sudo -u gdm dbus-launch gsettings set org.gnome.desktop.peripherals.touchpad tap-to-click 'true'\n```\n\n"
    },
    {
      "title": "アクセシビリティメニューを無効化/有効化する",
      "level": 4,
      "content": "Table content:\nこの記事またはセクションは情報が古くなっています。 理由: GDM 43 の時点で、以下の設定キーは機能しません (しかし、ドキュメントには依然として記述されています [4])。代わりに、org.gnome.desktop.a11y.applications screen-keyboard-enabled true キーを使用してください。 (Discuss)\n\nアクセシビリティメニューを無効化あるいは有効化するには、以下のキーファイルを作成してください:\n\n```\n/etc/dconf/db/gdm.d/07-accessibility\n```\n\n```\n[org/gnome/desktop/interface]\ntoolkit-accessibility='boolean'\n```\n\nそして、GDM のデータベースを再コンパイルしてください。あるいは、以下のコマンドを使って一時的に GDM ユーザとしてログインして状態を変更してください:\n\n```\n$ sudo -u gdm dbus-launch gsettings set org.gnome.desktop.interface toolkit-accessibility 'boolean'\n```\n\nメニューはキーの値が false の時に無効化され、true の時に有効化されます。\n\n"
    },
    {
      "title": "GDM で夜間モードを有効にする",
      "level": 4,
      "content": "GDM で夜間モードを有効化するには、以下を実行してください:\n\n```\n$ sudo -u gdm dbus-launch gsettings set org.gnome.settings-daemon.plugins.color night-light-enabled true\n```\n\n"
    },
    {
      "title": "キーボードレイアウト",
      "level": 3,
      "content": "システムのキーボードレイアウトは GDM にも適用されます。Xorg でのキーボード設定#X の設定ファイルを使う を見てください。\n\nWayland を使用している場合、localectl(1) で X のキーボードレイアウトを手動で指定する必要がある場合があります。以下の例では、フランス語のレイアウトが設定されています:\n\n```\n# localectl set-x11-keymap fr\n```\n\nシステムに複数のユーザが存在する場合、GDM によって使用されるキーボードレイアウトをシステムのキーボードレイアウトとは異なるものに設定することができます。まず、gnome-control-center がインストールされていることを確認してください。そして、gnome-control-center を起動し、Region & Language > Input Sources を開いてください。ヘッダーバーにある Login Screen トグルボタンをクリックし、リストの中からキーボードレイアウトを選択してください。注意点として、システムに複数のユーザが存在しないと Login Screen ボタンは表示されません [5]。\n\nGDM 2.x (レガシーな GDM) では、~/.dmrc を以下のように編集する必要があります:\n\n```\n~/.dmrc\n```\n\n```\n[Desktop]\nLanguage=de_DE.UTF-8   # デフォルトの言語\nLayout=de   nodeadkeys # キーボードレイアウト\n```\n\n"
    },
    {
      "title": "言語の変更",
      "level": 3,
      "content": "システムの言語は GDM にも適用されます。システムに複数のユーザが存在する場合、GDM によって使用される言語をシステムの言語とは異なるものに設定することができます。GDM の言語を変更するには、まず、gnome-control-center がインストールされていることを確認してください。そして、gnome-control-center を起動して Region & Language を選択してください。次に、ヘッダーバーにある Login Screen トグルボタンをクリックしてください。最後に、Language をクリックし、リストから言語を選択してください。この時、root パスワードが要求されます。注意点として、システムに複数のユーザが存在しないと Login Screen ボタンは表示されません [6]。\n\n"
    },
    {
      "title": "自動ログイン",
      "level": 4,
      "content": "GDM で自動ログインを有効化するには、以下を /etc/gdm/custom.conf に追加してください (username は自身のものに置き換えてください):\n\n```\n/etc/gdm/custom.conf\n```\n\n```\n# ユーザに対して自動ログインを有効化する\n[daemon]\nAutomaticLogin=username\nAutomaticLoginEnable=True\n```\n\nあるいは、自動ログインを遅延させるには:\n\n```\n/etc/gdm/custom.conf\n```\n\n```\n[daemon]\nTimedLoginEnable=true\nTimedLogin=username\nTimedLoginDelay=1\n```\n\n自動ログインに使用するセッションを設定することもできます (gnome-xorg は任意のセッションに置き換えてください):\n\n```\n/var/lib/AccountsService/users/username\n```\n\n```\nXSession=gnome-xorg\n```\n\n"
    },
    {
      "title": "パスワードレスログイン",
      "level": 4,
      "content": "GDM でパスワードプロンプトをバイパスしたい場合は、以下の設定を /etc/pam.d/gdm-password の最初の行に追加してください:\n\n```\nauth sufficient pam_succeed_if.so user ingroup nopasswdlogin\n```\n\n次に、nopasswdlogin グループをシステムに追加してください。グループに関する説明とグループの管理コマンドについては ユーザーグループ を見てください。\n\nそして、あなたのユーザーを nopasswdlogin グループに加えれば、ユーザー名をクリックするだけでログインできるようになります。\n\n- root アカウントに対してはこれを行わないでください。\n- これにより、GDM でログイン時にセッションの種類を変更することはできなくなります。セッションのデフォルトの種類を変更したい場合は、まず、nopasswdlogin グループからあなたのユーザを削除する必要があります。\n\n"
    },
    {
      "title": "複数のセッションが存在する場合にパスワードレスシャットダウン",
      "level": 4,
      "content": "GDM はシャットダウンの権限を取得するために polkit と logind を使用しています。以下の設定により、複数のユーザがログインしている時にシステムをシャットダウンできるようになります:\n\n```\n/etc/polkit-1/localauthority.conf.d/org.freedesktop.logind.policy\n```\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE policyconfig PUBLIC\n \"-//freedesktop//DTD PolicyKit Policy Configuration 1.0//EN\"\n \"http://www.freedesktop.org/software/polkit/policyconfig-1.dtd\">\n\n<!-- \nPolicy definitions for logind\n -->\n\n<policyconfig>\n\n  <action id=\"org.freedesktop.login1.power-off-multiple-sessions\">\n    <description>Shutdown the system when multiple users are logged in</description>\n    <message>System policy prevents shutting down the system when other users are logged in</message>\n    <defaults>\n      <allow_inactive>yes</allow_inactive>\n      <allow_active>yes</allow_active>\n    </defaults>\n  </action>\n\n</policyconfig>\n```\n\nlogind の利用可能な全オプション (例: reboot-multiple-sessions) は org.freedesktop.login1(5) で見られます。\n\n"
    },
    {
      "title": "GDM で root ログインを有効にする",
      "level": 4,
      "content": "root としてログインすることは推奨されていませんが、必要であれば、/etc/pam.d/gdm-password を編集して以下の設定を auth required pam_deny.so 行より前に追加することで root としてログインできるようになります:\n\n```\n/etc/pam.d/gdm-password\n```\n\n```\nauth            sufficient      pam_succeed_if.so uid eq 0 quiet\n```\n\n最終的にこのファイルは以下のような見た目になるはずです:\n\n```\n/etc/pam.d/gdm-password\n```\n\n```\n...\nauth            sufficient      pam_succeed_if.so uid eq 0 quiet\nauth            sufficient      pam_succeed_if.so uid >= 1000 quiet\nauth            required        pam_deny.so\n...\n```\n\nGDM を再起動したら、root としてログインできるようになっているはずです。\n\n"
    },
    {
      "title": "ログインリストからユーザを非表示にする",
      "level": 4,
      "content": "GDM のユーザリストは AccountsService によって生成されたものです。システムユーザ (UID < 1000) は自動的に非表示になります。通常ユーザをログインリストから非表示にするには、非表示にするユーザの名前が付いたファイルを /var/lib/AccountsService/users/ 内に作成、または編集し、最低でも以下の内容を追加してください:\n\n```\n/var/lib/AccountsService/users/username\n```\n\n```\n[User]\nSystemAccount=true\n```\n\n"
    },
    {
      "title": "デフォルトのモニター設定をセットアップする",
      "level": 3,
      "content": "一部のデスクトップ環境は、ディスプレイの設定を ~/.config/monitors.xml に保存しています。そのファイルの内容に基づいて、xrandr コマンドが生成されます。GDM にも、似たようなファイル /var/lib/gdm/.config/monitors.xml が存在しています。\n\n~/.config/monitors.xml でモニタをセットアップして (解像度、リフレッシュレート、向き、スケーリング、プライマリなど)、GDM にこれらの設定を使用してほしい場合、以下を実行して設定ファイルをコピーしてください:\n\n```\n# cp ~/.config/monitors.xml /var/lib/gdm/.config/\n```\n\nブートするたびにモニターのセットアップを自動的に再設定するには、gdm.service のドロップインファイルを使用してください:\n\n```\n/etc/systemd/system/gdm.service.d/override.conf\n```\n\n```\n[Service]\nExecStartPre=/bin/cp /home/user/.config/monitors.xml /var/lib/gdm/.config/monitors.xml\n```\n\nmonitors.xml の中でスクリーンの回転とスケーリングに関連する部分は以下のとおりです:\n\n```\n<monitors version=\"2\">\n  <configuration>\n    <logicalmonitor>\n      ...\n      <scale>2</scale>\n      ...\n      <transform>\n        <rotation>right</rotation>\n        <flipped>no</flipped>\n      </transform>\n      ...\n    </logicalmonitor>\n  </configuration>\n</monitors>\n```\n\n変更はログアウト時に適用されます。GDM は xorg.conf の設定を尊重しないため、ログアウトが必須です。\n\n- GDM を Wayland で使用している場合、Wayland 内で作成された monitors.xml も使用しなければなりません。詳細は GDM bug 224 を参照してください。あるいは、GDM に #Xorg バックエンドを使う ように強制し、Xorg 内で作成された monitors.xml を使用することもできます。\n- 分数スケーリングを使用する場合、gdm ユーザに対して分数スケーリングを有効化する必要があります:\n\n```\nsudo -u gdm dbus-launch gsettings set org.gnome.mutter experimental-features \"['scale-monitor-framebuffer']\"\n```\n\n"
    },
    {
      "title": "X サーバーのアクセス権限を設定",
      "level": 3,
      "content": "xhost コマンドを使うことで X サーバーのアクセス権限を設定できます。\n\n例えば、GDM に X サーバーのアクセス権限を与えるには、以下のコマンドを使います:\n\n```\n# xhost +SI:localuser:gdm\n```\n\n"
    },
    {
      "title": "Wayland とプロプライエタリな NVIDIA ドライバ",
      "level": 3,
      "content": "NVIDIA ドライバを使って GDM で Wayland を使用するには、まず DRM カーネルモード設定を有効化しなければなりません。\n\nGDM バージョン 42 と NVIDIA ドライババージョン 510 の時点で、GDM はデフォルトで Wayland を使用します。それより古い NVIDIA ドライバ (バージョン 470 から 510 の間) の場合、GDM にはチップセット依存の udev ルールが存在しており、Wayland ではなく Xorg を使用します。Wayland を強制するには、以下のシンボリックリンクを作成してこれらのルールをオーバーライドしてください:\n\n```\n# ln -s /dev/null /etc/udev/rules.d/61-gdm.rules\n```\n\nGDM が表示されずに黒画面になる場合、コンピュータの BIOS 設定から統合グラフィックスを無効化してみてください。\n\n"
    },
    {
      "title": "ログアウト時に GDM が動かない",
      "level": 3,
      "content": "起動時には GDM が問題なく立ち上がるのに、ログアウトした後に問題が発生する場合は、次の行を /etc/gdm/custom.conf の daemon セクションに追加してみて下さい:\n\n```\nGdmXserverTimeout=60\n```\n\n"
    },
    {
      "title": "Rootless Xorg",
      "level": 3,
      "content": "Xorg#Rootless Xorg を見て下さい。\n\n"
    },
    {
      "title": "Xorg バックエンドを使う",
      "level": 3,
      "content": "Wayland バックエンドはデフォルトで使用されます。Xorg バックエンドが使用されるのは、Wayland バックエンドを起動できない場合のみです。例えば以下のような場合には Xorg バックエンドを代わりに使用する必要があるでしょう:\n\n- GDM がクラッシュしてしまう\n\nXorg バックエンドをデフォルトで使用するには、/etc/gdm/custom.conf 内の以下の行をアンコメントしてください:\n\n```\n#WaylandEnable=false\n```\n\n"
    },
    {
      "title": "何らかの入力がないと GDM が起動しない",
      "level": 3,
      "content": "Table content:\nこの記事またはセクションは情報が古くなっています。 理由: Linux 5.6 以降、この問題はもはや存在しません。 (Discuss)\n\n起動しても画面が暗いままで、マウスを動かしたりキーボードに何か打ち込まないと GDM が起動しない場合、原因はおそらく乱数生成のためのエントロピーが不足しているためです。問題を確認するために systemd-random-seed のログ (journalctl --unit systemd-random-seed コマンドで読むことができます) の中に以下のような行がないかチェックしてください:\n\n```\nKernel entropy pool is not initialized yet, waiting until it is.\n```\n\n問題を解決するには、random.trust_cpu=on カーネルパラメータを設定してください (あなたの使っている CPU が RDRAND 命令をサポートしている場合)。もしくはエントロピーを供給するために haveged をインストールすることでも解決できます (ただしエントロピーの品質は保証されていません)。Debian の記事に記載されている他の解決方法も参照。\n\n"
    },
    {
      "title": "gdm が完全に削除されない",
      "level": 3,
      "content": "gdm を削除した後、systemd が以下のようなメッセージを出力する場合があります:\n\n```\nuser 'gdm': directory '/var/lib/gdm' does not exist\n```\n\nこの警告を取り除くには、root としてログインし、gdm プライマリユーザを削除し、gdm グループを削除してください。\n\ngdm が正しく削除されたかどうかは pwck と grpck を root 権限で実行することで確認できます。最後に、gdm 由来のどのユーザにも所有されていないファイルが残留していないかどうかダブルチェックしたほうが良いでしょう。\n\n"
    },
    {
      "title": "GDM の自動サスペンド (GNOME 3.28)",
      "level": 3,
      "content": "GDM は GNOME とは別の dconf データベースを使用して電源管理を制御しています。ユーザーセッションと同じように GDM が振る舞うようにしたい場合、ユーザー設定を GDM の dconf データベースにコピーしてください ( username はユーザー名です):\n\n```\n$ IFS=$'\\n'; for x in $(sudo -u username gsettings list-recursively org.gnome.settings-daemon.plugins.power); do eval \"sudo -u gdm dbus-launch gsettings set $x\"; done; unset IFS\n```\n\nAC での自動サスペンドのみを無効にするには、次のコマンドを実行してください:\n\n```\n$ sudo -u gdm dbus-launch gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type 'nothing'\n```\n\n(バッテリー環境での自動サスペンドも無効にするには、ac を battery に変えてしてコマンドを実行してください。)\n\n変更をアクティブ化するには、GDM を再起動してください。\n\n"
    },
    {
      "title": "GDM が Wayland を無視し、デフォルトで X.Org を使用する",
      "level": 3,
      "content": "Wayland が動作するためには、カーネルモード設定 (KMS) が動作している必要がありますが、マシンによっては GDM プロセスが KMS よりも早く開始し、結果として GDM が Wayland を認識できず、X.Org のみで動作することになります。その結果、ログに次のようなメッセージが表示されることがあります:\n\n```\ngnome-shell[569]: Failed to open gpu '/dev/dri/card0': GDBus.Error:org.freedesktop.DBus.Error.AccessDenied: Operation not permitted\ngnome-shell[569]: Failed to create backend: No GPUs found\nsystemd[505]: org.gnome.Shell@wayland.service: Failed with result 'protocol'.\nsystemd[505]: Failed to start GNOME Shell on Wayland.\n```\n\nまた、同じ問題に依って、GDM が表示されなかったり、TTY の出力しか表示されなかったりすることもあります。\n\nこの問題は、KMS をより早い段階で開始することで解決できます。また、GDM の設定ファイルで Wayland が有効化されていることも確認したほうが良いでしょう (#Xorg バックエンドを使う を参照)。\n\nまた、NVIDIA ドライバを使用している場合、Wayland セッションが udev ルールによってブロックされてしまうかもしれません (GNOME#Wayland セッション)。この場合、以下のようなメッセージが出力されることがあります:\n\n```\nsystemd[1022]: Condition check resulted in GNOME Shell on Wayland being skipped.\nsystemd[1022]: org.gnome.Shell@wayland.service: Skipped due to 'exec-condition'.\nsystemd[1022]: org.gnome.Shell@wayland.service: Control process exited, code=exited, status=2/INVALIDARGUMENT\n```\n\n回避策は #Wayland とプロプライエタリな NVIDIA ドライバ を見てください。\n\n"
    },
    {
      "title": "NVidia (e)GPU が存在する場合、AMD または Intel GPU で黒い画面が表示される",
      "level": 3,
      "content": "初めに NVidia デバイスが接続されていない場合、GDM は Wayland で通常通り起動し動作しますが、NVidia eGPU が接続される (または、他の何らかの理由で nvidia モジュールがロードされる) と動作を停止してしまいます。この問題の典型的な症状としては、ログアウト時と GDM の再起動時に黒画面と点滅するカーソルが表示され、以下のメッセージが GDM のログに出力されるというものです (root として journalctl -u gdm -b を実行することでログにアクセスした場合):\n\n```\nGdm: Child process -<PID> was already dead.\n```\n\n解決策は #GDM が Wayland を無視し、デフォルトで X.Org を使用する と同じです: nvidia モジュールのロード時に /usr/lib/gdm-disable-wayland が実行されないようにするのです。\n\nWayland 上で動作している GDM は、/usr/lib/gdm-disable-wayland が一度でも実行されていると機能しなくなってしまうことを留意してください。これは、WaylandEnable=false が、/etc/gdm/custom.conf の設定をオーバーライド /run/gdm/custom.conf に書き込まれるからです。再起動せずにこの問題を修正するには、/run/gdm/custom.conf を削除し、GDM を再起動してください。\n\n"
    },
    {
      "title": "GDM が有効にならない",
      "level": 3,
      "content": "systemd FAQ#既存のシンボリックリンクのためにユニットを有効にすることができない を参照してください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- GDM リファレンスマニュアル\n\n"
    }
  ]
}
{
  "title": "Dotfiles (Português)",
  "url": "https://wiki.archlinux.org/title/Dotfiles_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Suporte a XDG Base Directory\n- Recursos do X\n\nA configuração de aplicativos específica do usuário é tradicionalmente armazenada nos chamados dotfiles (arquivos cujo nome de arquivo começa com um ponto). É uma prática comum rastrear dotfiles com um sistema de controle de versão, como o Git, para acompanhar as mudanças e sincronizar os arquivos de pontos através de vários hosts. Existem várias abordagens para gerenciar seus dotfiles (por exemplo, rastreando diretamente os dotfiles no diretório inicial vs armazenando-os em um subdiretório e fazendo um link simbólico/copiando/gerando arquivos com um script shell ou uma ferramenta dedicada) . Além de explicar como gerenciar seus dotfiles, este artigo também contém uma lista de repositórios de dotfiles dos usuários do Arch Linux.\n\n"
    },
    {
      "title": "Rastreando dotfiles diretamente com Git",
      "level": 2,
      "content": "O benefício de rastrear dotfiles diretamente com o Git é que ele requer apenas Git e não envolve links simbólicos. A desvantagem é que configuração específica por cada host geralmente requer a mesclagem de alterações em vários ramos (branches).\n\nA maneira mais simples de conseguir essa abordagem é inicializar um repositório Git diretamente em seu diretório inicial e ignorar todos os arquivos por padrão com um padrão de gitignore(5) de *. Este método, no entanto, vem com duas desvantagens: ele pode se tornar confuso quando você tiver outros repositórios Git em seu diretório inicial (por exemplo, se você esquecer de inicializar um repositório que você subitamente opera em seu repositório dotfile) e você não poderá mais ver facilmente quais arquivos o diretório atual não é rastreado (porque eles são ignorados).\n\nUm método alternativo sem essas desvantagens é o \"método repository seco e alias\" popularizado por este comentário no Hacker News, que apenas usa três comandos para configurar:\n\n```\n$ git init --bare ~/.dotfiles\n$ alias config='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'\n$ config config status.showUntrackedFiles no\n```\n\nVocê pode então gerenciar seus dotfiles com o alias criado.\n\n"
    },
    {
      "title": "Configuração específica por host",
      "level": 2,
      "content": "Um problema comum com a sincronização de arquivos de pontos em várias máquinas é a configuração específica para cada host.\n\nCom Git isso pode ser resolvido mantendo um ramo master para toda a configuração compartilhada, enquanto cada máquina individual possui um ramo específico da máquina com check-out. A configuração específica por host pode aplicada para um ramo específico da máquina; Quando a configuração compartilhada é modificada no ramo master, os ramos por máquina precisam ser rebased na parte superior do master atualizado.\n\nEm scripts de configuração como arquivos de configuração do shell, a lógica condicional pode ser usada. Por exemplo, scripts Bash (por exemplo, .bashrc) podem aplicar configurações diferentes dependendo do nome da máquina (ou tipo, variável personalizada, etc.):\n\n```\nif [[ \"$(hostname)\" == \"archlaptop\" ]]; then\n    # comandos específicos de laptop aqui\nelse\n    # comandos de máquina desktop ou servidor\nfi\n```\n\nSimilarmente, também podem ser alcançados com .Xresources.[1]\n\nSe você achar que fazer rebase de ramos do Git é trabalhoso demais, você pode querer usar uma ferramenta que possui suporte a agrupamento de arquivos, ou se uma flexibilidade ainda maior é desejada, uma ferramenta que faz processamento.\n\n"
    },
    {
      "title": "Ferramentas",
      "level": 3,
      "content": "Table content:\nNome | Pacote | Escrito em | Agrupamento de arquivos | Processamento\ndot-templater | dot-templater-gitAUR | Rust | baseado em diretórios | sintaxe personalizada\ndotdrop[link inativo 2024-01-13 ⓘ] | dotdropAUR | Python | arquivo de configuração | Jinja2\ndotfiles | dotfilesAUR | Python | Não | Não\nDots | dots-managerAUR[link quebrado: package not found] | Python | baseado em diretórios | pontos de acréscimos personalizados\nchezmoi | chezmoi | Go | baseado em diretórios | modelos em Go\nGNU Stow | stow | Perl | baseado em diretórios[2] | Não\nMackup | mackupAUR | Python | automático por aplicativo | Não\nmir.qualia | mir.qualiaAUR | Python | Não | blocos personalizados\nrcm | rcmAUR | Perl | baseado em diretórios (por host ou tag) | Não\n\n"
    },
    {
      "title": "Ferramentas interfaceando Git",
      "level": 3,
      "content": "Se você não estiver confortável com o Git, você pode querer usar uma dessas ferramentas, que abstraem o sistema de controle de versão (mais ou menos).\n\nTable content:\nNome | Pacote | Escrito em | Agrupamento de arquivos | Processamento\ndotgit | dotgitAUR | Bash | baseado em nome de arquivo | Não\nhomeshick | homeshick-gitAUR | Bash | direcionado a repositório | Não\nhomesick | – | Ruby | direcionado a repositório | Não\nPearl | pearl-gitAUR | Bash | direcionado a repositório | Não\nvcsh | vcsh | Shell | direcionado a repositório | Não\nyadm[link inativo 2024-11-05 ⓘ](1) | yadm-gitAUR | Shell | baseado em nome de arquivo(por classe, SO, hostname & usuário) [3][link inativo 2024-11-05 ⓘ] | Jinja2(opcional)[4][link inativo 2024-11-05 ⓘ]\n\n1. Possui suporte a criptografia de arquivos confidenciais com GPG.[5][link inativo 2024-11-05 ⓘ]\n\n"
    },
    {
      "title": "Repositórios de usuários",
      "level": 2,
      "content": "Table content:\nAutor | Shell (Estrutura de shell) | WM / DE | Editor | Terminal | Multiplexador | Áudio | Monitor | E-mail | IRC\nalfunx | zsh | awesome | vim | kitty | tmux | ncmpcpp/mpd | htop/lain | thunderbird | \npeterzuger | zsh | i3-gaps | emacs | rxvt-unicode | screen | moc | htop |  | \nAmbrevar | Eshell | EXWM | Emacs | Emacs (Eshell) | Emacs TRAMP + dtach | EMMS | conky/dzen | mu4e | Circe\nawal | fish | i3 | vim | st | tmux |  | i3status |  | The Lounge\nayekat | zsh | karuiwm | vim | rxvt-unicode | tmux | ncmpcpp/mpd | karuibar | mutt | irssi\nbamos | zsh | i3/xmonad | vim/emacs | rxvt-unicode | tmux | mpv/cmus | conky/xmobar | mutt | ERC\nbrisbin33 | zsh | xmonad | vim | rxvt-unicode | screen |  | dzen | mutt | irssi\nBVollmerhaus | fish | i3-gaps | kakoune | rxvt-unicode |  |  | polybar | thunderbird | \ncinelli | zsh | dwm | vim | termite-git |  | pianobar | htop | mutt-kz | weechat\ndikiaap | zsh | i3-gaps | neovim | kitty |  |  | i3blocks |  | \nEarnestly | zsh | i3/orbment | vim/emacs | termite | tmux | mpd | conky | mutt | weechat\nErikBjare | zsh | xmonad/xfce4 | vim | terminator | tmux |  | xfce4-panel |  | weechat\nfalconindy | bash | i3 | vim | rxvt-unicode |  | ncmpcpp | conky | mutt | \ngraysky | zsh | xfce4 | vim | terminal |  | ncmpcpp | personalizado | thunderbird | \ninsanum | bash | herbstluftwm | vim | evilvte | tmux |  | dzen | mutt-kz | \njasonwryan | bash/zsh | dwm | vim | rxvt-unicode | tmux | ncmpcpp | personalizado | mutt | irssi\njdevlieghere | zsh | xmonad | vim | terminal | tmux |  | htop | mutt | weechat\njelly | zsh | i3 | vim | termite | tmux | ncmpcpp |  | mutt-kz-git | weechat\nJorengarenar | bash | i3 | vim | xterm |  | mpv | i3blocks | aerc | weechat\nmaximbaz | zsh | i3-gaps | neovim | alacritty | tmux |  | py3status | thunderbird | \nmehalter | zsh | i3-gaps | neovim | termite | tmux | gpymusic | i3blocks, gotop | neomutt | weechat\nmeskarune | bash | herbstluftwm | vim | rxvt-unicode | screen |  | conky |  | weechat\nneersighted | fish | i3 | neovim | alacritty | tmux | ncmpcpp |  |  | \noibind | fish | awesome | neovim | termite |  |  | htop-vim |  | weechat\nOK100 | bash | dwm | vim | rxvt-unicode |  | cmus | conky, dzen | mutt | weechat\npablox-cl | zsh (zplug) | gnome3 | neovim | kitty |  |  |  |  | \nreisub0 | fish | qtile | neovim | kitty |  | mpd | conky |  | \nsistematico | zsh/fish/bash | i3-gaps | vim/nano | termite | tmux | ncmpcpp | polybar | mutt | weechat\nsitilge[link inativo 2024-01-13 ⓘ] | zsh | awesome | neovim | termite |  |  |  | thunderbird | \nthiagowfx | bash | i3 | vim/emacs | tilix |  |  | i3blocks |  | \nunexist | zsh | subtle | vim | rxvt-unicode |  | ncmpcpp |  | mutt | irssi\nvodik | zsh | xmonad | vim | termite-git | tmux | ncmpcpp | personalizado | mutt | weechat\nw0ng | zsh | dwm | vim | rxvt-unicode | tmux | ncmpcpp | personalizado | mutt | irssi\nwhitelynx | fish | i3 | neovim | kitty |  |  | i3pystatus |  | \nwolfcore | bash | dwm | vim | rxvt-unicode | tmux | cmus | personalizado |  | weechat\nzendeavor | zsh | i3 | vim | rxvt-unicode | tmux | ncmpcpp | i3status |  | weechat\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- gregswiki:DotFiles\n- XMonad Config Archive\n- dotshare.it\n- dotfiles.github.io\n- terminal.sexy - Designer de esquema de cores do terminal\n\n"
    }
  ]
}
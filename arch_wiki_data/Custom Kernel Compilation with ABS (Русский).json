{
  "title": "Custom Kernel Compilation with ABS (Русский)",
  "url": "https://wiki.archlinux.org/title/Custom_Kernel_Compilation_with_ABS_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Основная статья — Ядро.\n\nС помощью Arch Build System можно собрать собственное ядро на основе официального пакета linux. Данный метод автоматизирует весь процесс компиляции и основан на тщательно протестированном пакете. Отредактировав PKGBUILD, вы можете выбрать произвольные настройки ядра или добавить некоторые патчи.\n\n"
    },
    {
      "title": "Подготовка",
      "level": 2,
      "content": "Сборка происходит при помощи makepkg, поэтому необходимо следовать \"лучшим практикам\", приведённым в соответствующей статье. Например, запустить makepkg от root/sudo не получится; следовательно, прежде всего необходимо создать каталог build внутри домашнего каталога.\n\n```\n$ mkdir ~/build/\n$ cd ~/build/\n```\n\nУстановите пакета devtools и base-devel.\n\nДля кастомизации необходимо чистое ядро. Следующие команды загрузят PKGBUILD и прочие файлы в каталог сборки:\n\n```\n$ pkgctl repo clone --protocol=https linux\n```\n\nВ данный момент дерево файлов в каталоге должно иметь примерно следующий вид (могут быть дополнительные файлы):\n\n```\n~/build/linux/-+\n               +--config\n               \\__PKGBUILD\n```\n\nНаконец, добудьте из соответствующих источников прочие файлы, которые могут потребоваться (файлы с новыми настройками ядра, патчи и т.п.).\n\n"
    },
    {
      "title": "Редактирование PKGBUILD",
      "level": 2,
      "content": "Внесите необходимые изменения в PKGBUILD. Обратите внимание на параметр pkgbase — в нём следует указать название вашего нового пакета, например:\n\n```\nPKGBUILD\n```\n\n```\npkgbase=linux-custom\n```\n\nNote: **Ни в коем случае** \n\n"
    },
    {
      "title": "Отключение создания документации",
      "level": 3,
      "content": "Создание документации отнимает много времени в процессе компиляции. На данный момент (16 июня 2021) следующий патч к PKGBUILD позволяет её отключить:\n\n```\n63d63\n<   make htmldocs\n194c194\n< pkgname=(\"$pkgbase\" \"$pkgbase-headers\" \"$pkgbase-docs\")\n---\n> pkgname=(\"$pkgbase\" \"$pkgbase-headers\")\n```\n\nЭтот патч удаляет строку #63 и изменяет строку #194. Если изменения не получится применить корректно, отредактируйте файл вручную.\n\n"
    },
    {
      "title": "Изменение prepare()",
      "level": 3,
      "content": "Внутри этой функции можно применить необходимые патчи или изменить настройки сборки.\n\nЕсли необходимо изменить несколько опций, отредактируйте файл настроек в исходниках.\n\nТакже можно воспользоваться графическим инструментом для переключения опций. Закомментируйте строку make olddefconfig в функции prepare() в файле PKGBUILD и добавьте свою утилиту.\n\n```\nPKGBUILD\n```\n\n```\n...\n  msg2 \"Setting config...\"\n  cp ../config .config\n  #make olddefconfig\n\n  make nconfig # new CLI menu for configuration\n  #make menuconfig # CLI menu for configuration\n  #make xconfig # X-based configuration\n  #make oldconfig # using old config from previous kernel version\n  # ... or manually edit .config\n  make prepare\n...\n```\n\n"
    },
    {
      "title": "Обновление контрольных сумм",
      "level": 3,
      "content": "#Изменение prepare() предполагает, что файл $_srcname/.config может быть изменён. Поскольку этого файла не было во время загрузки файлов пакета, то makepkg не проверял его контрольную сумму (на самом деле проверен был файл $_srcname/../../config).\n\nЕсли вы заменили загруженный config другим, то перед запуском makepkg установите пакет pacman-contrib и обновите котрольные суммы командой:\n\n```\n$ updpkgsums\n```\n\n"
    },
    {
      "title": "Компиляция",
      "level": 2,
      "content": "Теперь можно скопилировать ядро командой makepkg.\n\nЕсли для настройки параметров ядра была выбрана интерактивная программа (например, menuconfig), то во время компиляции потребуется ваше присутствие.\n\n```\n$ makepkg -s\n```\n\nС параметром -s makepkg загрузит все необходимые зависимости, используемые последними ядрами, такие как xml и docs.\n\n- Исходные коды ядра подписаны PGP, и makepkg проверит подписи. Подробнее см. makepkg#Проверка цифровых подписей.\n- Компиляция может занять несколько часов в зависимости от мощности компьютера. Параллельная компиляция позволяет значительно ускорить процесс на многоядерных системах.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "После компиляции в каталоге ~/build/linux появится два пакета, один для ядра и один — для заголовочных файлов. Их названия будут иметь примерно следующий вид:\n\n```\nlinux-custom-5.8.12-x86_64.pkg.tar.zst\nlinux-custom-headers-5.8.12-x86_64.pkg.tar.zst\n```\n\nЛучше всего установить оба пакета одной командой, т.к. они могут потребоваться одновременно (например, для DKMS).\n\n```\n# pacman -U linux-custom-headers-5.8.12-x86_64.pkg.tar.zst linux-custom-5.8.12-x86_64.pkg.tar.zst\n```\n\n(замените названия пакетов на свои).\n\n"
    },
    {
      "title": "Загрузчик",
      "level": 2,
      "content": "Если вы изменили значение pkgbase, чтобы новое ядро устанавливалось рядом со стандартным, то необходимо внести изменения в настройки загрузчика, добавив новые значения ('default' и 'fallback') для вашего ядра и его initramfs-образа.\n\n"
    },
    {
      "title": "Обновление",
      "level": 2,
      "content": "Предположим, имеется набор файлов с исходным кодом ядра Arch и их необходимо обновить. Это можно сделать с помощью https://github.com/archlinux/linux. В примерах ниже предполагается, что исходники находятся в каталоге ~/build/linux/.\n\nВ Arch файлы с исходным кодом хранятся в двух локальных git-репозиториях. Репозиторий в каталоге archlinux-linux/ — локальный bare-репозиторий git, который указывает на https://github.com/archlinux/linux.git. Второй, в каталоге src/archlinux-linux/, скачивает исходники из первого. Локальные патчи и сборка ядра должны выполняться в src/archlinux-linux/.\n\nИзначально метка HEAD локального bare-репозитория в archlinux-linux/ указывает на\n\n```\n$ cd ~/build/linux/archlinux-linux/\n$ git log --oneline --max-count 1 HEAD\n```\n\n```\n4010b622f1d2 Merge branch 'dax-fix-5.3-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm\n```\n\nт.е. где-то между v5.2.5-arch1 и v5.2.6-arch1.\n\n```\n$ git fetch --verbose\n```\n\nА эта команда (показывает последнюю по времени метку) вывела более свежую метку archlinux, v5.2.7-arch1. Отсутствие новых меток означало бы, что исходники archlinux не изменились.\n\nТеперь можно обновить файлы с исходным кодом:\n\n```\n$ cd ~/build/linux/src/archlinux-linux/\n$ git checkout master\n$ git pull\n$ git fetch --tags --verbose\n$ git branch --verbose 5.2.7-arch1 v5.2.7-arch1\n$ git checkout 5.2.7-arch1\n```\n\nПроверить, что всё верно, можно следующим образом:\n\n```\n$ git log --oneline 5.2.7-arch1 --max-count=7\n```\n\n```\n13193bfc03d4 Arch Linux kernel v5.2.7-arch1\n9475c6772d05 netfilter: nf_tabf676926c7f60les: fix module autoload for redir\n498d650048f6 iwlwifi: Add support for SAR South Korea limitation\nbb7293abdbc7 iwlwifi: mvm: disable TX-AMSDU on older NICs\nf676926c7f60 ZEN: Add CONFIG for unprivileged_userns_clone\n5e4e503f4f28 add sysctl to disallow unprivileged CLONE_NEWUSER by default\n5697a9d3d55f Linux 5.2.7\n```\n\nВ выводе видно archlinux-патчи между ядрами Arch Linux kernel v5.2.7-arch1 и Linux 5.2.7.\n\nНовейшие PKGBUILD и настройки ядра можно скачать командой git:\n\n```\n$ cd ~/build/linux/\n$ git pull\n```\n\nТеперь необходимо объединить файлы ~/build/linux/linux/* с файлами в каталоге ~/build/linux/. Слияние можно выполнить вручную или с помощью подходящих утилит. Изучите раздел #Изменение prepare() и запустите вручную команды из PKGBUILD::prepare().\n\nВ этом месте необходимо выполнить makepkg --verifysource. Во время компиляции не забудьте также добавить опцию --noextract в команду makepkg, поскольку пакеты должны собираться так, будто исходники были извлечены командой makepkg --nobuild. Наконец, после этого можно вернуться к этапу #Установка.\n\n"
    },
    {
      "title": "Очистка",
      "level": 3,
      "content": "После объединения файлов имеет смысл удалить ~/build/linux/linux/. Кроме того, ~/build/linux/src/archlinux продолжит собирать ветки вида 5.2.7-arch1 при последующих обновлениях. Ненужную ветку тоже можно удалить:\n\n```\n$ cd ~/build/linux/src/archlinux\n$ git branch --delete --force --verbose 5.2.7-arch1\n```\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- https://docs.kernel.org/kbuild/kconfig.html и родительский каталог\n\n"
    }
  ]
}
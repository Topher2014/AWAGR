{
  "title": "Установка Arch Linux через VirtualBox",
  "url": "https://wiki.archlinux.org/title/%D0%A3%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0_Arch_Linux_%D1%87%D0%B5%D1%80%D0%B5%D0%B7_VirtualBox",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- VirtualBox/Install Arch Linux as a guest\n- Category:Hypervisors (Русский)\n- PhpVirtualBox\n- RemoteBox\n- Moving an existing install into (or out of) a virtual machine\n\nVirtualBox — гипервизор, предназначенный для запуска операционных систем в специальной среде, называемой виртуальной машиной, поверх существующей операционной системы. VirtualBox постоянно развивается и внедряет новые возможности. Взаимодействовать с виртуальными машинами можно как через графический интерфейс на базе Qt, так и с помощью headless- и SDL-утилит командной строки.\n\nДля некоторых гостевых ОС были разработаны гостевые дополнения (guest additions), которые позволяют частично совмещать функциональность хостовой и гостевой операционных систем — совместный доступ к каталогам и буферу обмена, ускорение видео и бесшовная интеграция окон.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите VirtualBox по указаниям ниже, чтобы создавать и запускать виртуальные машины в Arch Linux.\n\n"
    },
    {
      "title": "Установка основных пакетов",
      "level": 3,
      "content": "Установите пакет virtualbox. Кроме того, необходимо установить host-модули:\n\n- для ядра linux установите virtualbox-host-modules-arch.\n- для других ядер (включая linux-lts) установите virtualbox-host-dkms.\n\nDKMS-хук Pacman автоматически перекомпилирует модули virtualbox-host-dkms при каждом обновлении VirtualBox и/или ядра. При компиляции потребуются пакеты с заголовочными файлами для вашего ядра (например, linux-lts-headers для ядра linux-lts) [1].\n\n"
    },
    {
      "title": "Подписывание модулей",
      "level": 3,
      "content": "Если вы используете нестандартное ядро с включённой опцией CONFIG_MODULE_SIG_FORCE, то необходимо подписать ваши модули ключом, сгенерированным во время компиляции ядра.\n\nПерейдите в дерево каталогов вашего ядра и выполните:\n\n```\n# for module in `ls /lib/modules/$(uname -r)/kernel/misc/{vboxdrv.ko,vboxnetadp.ko,vboxnetflt.ko}` ; do ./scripts/sign-file sha1 certs/signing_key.pem certs/signing_key.x509 $module ; done\n```\n\n"
    },
    {
      "title": "Загрузка модулей ядра для VirtualBox",
      "level": 3,
      "content": "virtualbox-host-modules-arch и virtualbox-host-dkms используют службу systemd-modules-load.service для загрузки необходимых VirtualBox модулей ядра при запуске системы. Если необходимо загрузить модуль сразу после установки, то либо перезагрузитесь, либо однократно загрузите его вручную. Список модулей можно найти в файлах /usr/lib/modules-load.d/virtualbox-host-modules-arch.conf или /usr/lib/modules-load.d/virtualbox-host-dkms.conf.\n\nСреди используемых VirtualBox модулей ядра обязательным является vboxdrv. Если он не был загружен, то запустить виртуальные машины не получится.\n\nЧтобы загрузить модуль вручную, выполните:\n\n```\n# modprobe vboxdrv\n```\n\nСледующие модули необходимы в некоторых сложных конфигурациях:\n\n- vboxnetadp и vboxnetflt необходимы для сетевых взаимодействий в режимах bridged и host-only. Если точнее, vboxnetadp позволяет через настройки VirtualBox создать в хостовой системе программный сетевой интерфейс, а vboxnetflt даёт виртуальной машине возможность его использовать.\n\n"
    },
    {
      "title": "Доступ к USB-устройствам хоста из гостевой ОС",
      "level": 3,
      "content": "Добавьте пользователя в группу vboxusers, если необходимо предоставить ему доступ к USB-портам хоста из виртуальной машины.\n\n"
    },
    {
      "title": "Диск с гостевыми дополнениями",
      "level": 3,
      "content": "Если в качестве гостя выступает не Arch Linux, то имеет смысл установить пакет virtualbox-guest-iso. Он работает как образ диска, с которого можно установить гостевые дополнения. Файл .iso будет находиться в каталоге /usr/lib/virtualbox/additions/VBoxGuestAdditions.iso. Зайдите в гостевую систему, вручную смонтируйте образ и запустите установщик.\n\n"
    },
    {
      "title": "Расширения",
      "level": 3,
      "content": "Oracle Extension Pack предоставляет набор дополнительной функциональности. Набор распространяется под несвободной лицензией только для личного пользования. Расширения доступны в виде пакета virtualbox-ext-oracleAUR в AUR или в скомпилированном виде в неофициальном репозитории seblu.\n\nБолее \"традиционный\" способ — скачать расширения с сайта разработчиков и установить их либо через графический интерфейс (File > Preferences > Extensions), либо командой VBoxManage extpack install <.vbox-extpack>. Предварительно убедитесь, что у вас есть инструмент вроде Polkit для выдачи привилегированного доступа к VirtualBox — установка требует прав root.\n\n"
    },
    {
      "title": "Интерфейсы",
      "level": 3,
      "content": "Для VirtualBox разработано три интерфейса:\n\n- стандартный графический интерфейс, команда VirtualBox.\n- интерфейс командной строки, команда VBoxSDL; создаёт окно виртуальной машины без оверлеев.\n- интерфейс командной строки без отображения окон (например, для ВМ, находящейся на сервере), команда VBoxHeadless. Расширение VRDP позволяет получить доступ к экрану виртеальной машины.\n\nНастройки безопасности Wayland (в частности, при использовании GDM) не пропускает ввод с клавиатуры в VirtualBox, что мешает, например, использовать в гостевой ОС комбинации клавиш. Чтобы это обойти, добавьте VirtualBox в белый список:\n\n```\n$ gsettings get org.gnome.mutter.wayland xwayland-grab-access-rules\n$ gsettings set org.gnome.mutter.wayland xwayland-grab-access-rules \"['VirtualBox Machine']\"\n```\n\nПервая команда выведет текущий список приложений в белом списке. 'VirtualBox Machine' необходимо добавить к этому списку (вторая команда в примере выше не добавляет, а создаёт список из ровно одного элемента).\n\nНаконец, можно администрировать виртуальные машины через веб-интерфейс с помощью phpVirtualBox.\n\nИнструкции по созданиию виртуальных машин можно найти в руководстве пользователя.\n\n"
    },
    {
      "title": "Установка Arch Linux в виртуальную машину",
      "level": 3,
      "content": "Загрузите установочный носитель Arch через один из виртуальных дисков виртуальной машины. Затем совершите установку базовой системы Arch, как описано в руководстве по установке, без установки графических драйверов: мы будем устанавливать драйвера, поставляемые VirtualBox на следующем этапе.\n\n"
    },
    {
      "title": "Установка в режиме EFI",
      "level": 4,
      "content": "Если вы хотите установить Arch Linux в режиме EFI внутри VirtualBox, в настройках виртуальной машины, перейдите в закладку Настройки, и установите флажок Enable EFI (special OSes only). После выбора ядра из меню установочного носителя Arch Linux, установка будут висеть в течение минуты-двух, и после этого будет загружено ядро . Подождите и не прекращайте установку.\n\nПри загрузке в режиме EFI, VirtualBox будет пытаться выполнить /EFI/BOOT/BOOTX64.EFI из ESP. Если первый вариант не удается, VirtualBox будет пытаться выполнить сценарий оболочки EFI startup.nsh из корня ESP. Если вы не хотите вручную запускать загрузчик из оболочки EFI каждый раз, вы должны будете переместить свой загрузчик в этот путь по умолчанию. Не заморачивайтесь с VirtualBox Boot Manager (доступен по F2 при загрузке): EFI данные будут добавлены в него вручную при загрузке или efibootmgr будет сохранять их после перезагрузки, но терять после закрытия виртуальной машины.\n\n"
    },
    {
      "title": "Установка гостевых дополнений",
      "level": 3,
      "content": "После завершения установки гостевой системы, установите дополнения гостевой ОС, которые включают драйверы и приложения, оптимизирующие гостевую операционную систему. Они могут быть установлены с помощью virtualbox-guest-utils.\n\n"
    },
    {
      "title": "Загрузка модулей ядра VirtualBox",
      "level": 3,
      "content": "Для автоматической загрузки модулей включите службу vboxservice.service, которая загрузит нужные модули и синхронизирует время с хостом.\n\nДля загрузки модулей вручную выполните:\n\n```\n# modprobe -a vboxguest vboxsf vboxvideo\n```\n\n"
    },
    {
      "title": "Запуск гостевых сервисов VirtualBox",
      "level": 3,
      "content": "После довольно непростой установки с модулями ядра VirtualBox, необходимо обеспечить взаимодействие гостевой ОС и хоста посредством сервисов. Гостевой сервис — на самом деле просто исполняемый файл VBoxClient, который будет взаимодействовать с вашей X Window System. VBoxClient управляет следующими функциями:\n\n- общий буфер обмена и перетаскивание объектов между хостом и гостевой ОС;\n- бесшовный оконный режим;\n- гостевой дисплей автоматически изменяет свой размер в соответствии с размером окна гостевой ОС;\n- проверка версии VirtualBox, установленной на хосте.\n\nВсе эти особенности могут быть включены независимо следующими параметрами:\n\n```\n$ VBoxClient --clipboard\n$ VBoxClient --draganddrop\n$ VBoxClient --seamless\n$ VBoxClient --checkhostversion\n$ VBoxClient --vmsvga\n```\n\nОбратите внимание, что VBoxClient принимает только один флаг за раз; каждый вызов запускает отдельный процесс в фоне. Для удобства есть bash-скрипт VBoxClient-all, запускающий все эти функции.\n\nПакет virtualbox-guest-utils устанавливает файл /etc/xdg/autostart/vboxclient.desktop, который запускает VBoxClient-all при входе в систему. Если ваша среда рабочего стола или ваш оконный менеджер не поддерживает XDG Autostart, настройте автозапуск вручную, как описано в разделах Автозапуск#Запуск среды рабочего стола и Автозапуск#Запуск оконного менеджера соответственно.\n\nVirtualBox также может синхронизировать время между хостом и гостевой ОС. Для этого включите службу vboxservice.service.\n\nТеперь у вас есть рабочая гостевая Arch Linux. Поздравляем!\n\nЕсли вы хотите расшарить директории между вашим компьютером и гостевым Arch Linux, читайте дальше.\n\n"
    },
    {
      "title": "Расшаривание директорий",
      "level": 3,
      "content": "Общие папки управляются в хосте через настройки виртуальной машины, доступной через графический интерфейс VirtualBox, на вкладке Shared Folders. Там путь к директории и имя точки монтирования определены как Имя папки и аргументы, такие как Read-only, Auto-mount и Make permanent Эти параметры могут быть определены через утилиту VBoxManage. См. для более подробной информации.\n\nНезависимо от того, какой метод вы будете использовать, чтобы смонтировать директорию, требуются некоторые начальные действия.\n\nЧтобы избежать проблемы /sbin/mount.vboxsf: mounting failed with the error: No such device, убедитесь, что модуль ядра vboxsf загружен правильно. Он должен быть загружен, поскольку мы включили все гостевые модули ядра ранее.\n\nДва дополнительных шага необходимы для того, чтобы точки монтирования должны быть доступны из пользователей кроме root-а:\n\n- Пакет virtualbox-guest-utils создает группу vboxsf;\n- Ваше имя пользователя должно быть в этой группе, используйте команду gpasswd -a $USER vboxsf, чтобы добавить свое имя пользователя и запустите newgrp, чтобы применить изменения немедленно.\n\n"
    },
    {
      "title": "Ручное монтирование",
      "level": 4,
      "content": "Выполните следующую команду для монтирования директории в гостевой Arch Linux:\n\n```\n# mount -t vboxsf имя_расшариваемой_директории точка_монтирования_в_гостевой_ОС\n```\n\nФайловая система vboxsf предоставляет и другие способы, просмотреть которые можно выполнив:\n\n```\n# mount.vboxsf\n```\n\nНапример, если пользователь не добавлен в vboxsf группу, мы могли бы использовать эту команду, чтобы смонтировать директорию в гостевой ОС:\n\n```\n# mount -t vboxsf -o uid=1000,gid=1000 home /mnt/\n```\n\nГде UID и GID являются значениями, соответствующими пользователям, которым мы хотим дать доступ к монтированию директории. Эти значения можно узнать из вывода команды id, выполненной из сессии этого пользователя.\n\n"
    },
    {
      "title": "Автомонтирование",
      "level": 4,
      "content": "Чтобы функция автоматического монтирования заработала, вы должны включить флажок в графическом интерфейсе или использовать дополнительный аргумент --automount при команде VBoxManage общая_директория\n\nТеперь общая директория должна появиться в /media/sf_имя_расшаренной_директории.\n\nВы можете использовать символические ссылки, если хотите иметь более удобный доступ:\n\n```\n$ ln -s /media/sf_имя_расшаренной_директории ~/мои_документы\n```\n\n"
    },
    {
      "title": "Монтирование при загрузке",
      "level": 4,
      "content": "Вы можете монтировать директории с помощью fstab. Во избежание проблем с systemd, необходимо добавить в /etc/fstab строчку comment=systemd.automount. Таким образом, общие папки монтируются только тогда, когда доступны точки подключения, а не во время запуска. Это может избежать некоторых проблем, особенно если гостевая ОС еще не загружена, когда systemd уже начал читать fstab и монтировать разделы.\n\n```\ndesktop   /media/desktop    vboxsf  uid=user,gid=group,rw,dmode=700,fmode=600,comment=systemd.automount 0 0\n```\n\nmount.vboxsf может не поддерживать[устаревшая ссылка 2020-08-06 ⓘ] nofail аргумент:\n\n```\ndesktop   /media/desktop    vboxsf  uid=user,gid=group,rw,dmode=700,fmode=600,nofail 0 0\n```\n\n"
    },
    {
      "title": "Форматы, поддерживаемые VirtualBox",
      "level": 3,
      "content": "VirtualBox поддерживает следующие форматы виртуальных дисков:\n\n- VDI: Virtual Disk Image — собственный контейнер VirtualBox, используемый по умолчанию, когда вы создаёте виртуальную машину в VirtualBox.\n- VMDK: Virtual Machine Disk — изначально разработан VMware для своих продуктов. Изначально спецификация была закрытой, но сейчас это открытый формат, который VirtualBox полностью поддерживает. Этот формат даёт возможность разбивать диск на несколько файлов по 2ГБ. Эта функция особенно полезна, если вы хотите сохранить виртуальную машину на компьютерах, которые не поддерживают очень большие файлы. Другие форматы, за исключением формата HDD от Parallels, не предоставляют подобную функцию.\n- VHD: Virtual Hard Disk — формат, который использует Microsoft в Windows Virtual PC и Hyper-V. Если вы собираетесь использовать любой из этих продуктов Microsoft, вам придётся выбрать этот формат.\n\n- VHDX (только для чтения): Это расширенная (eXtended) версия формата Virtual Hard Disk, разработанный в Microsoft и выпущенный в 2012-09-04 с Hyper-V 3.0 при переходе на Windows Server 2012. Эта новая версия имеет повышенную производительность (лучшее расположение блоков), бо́льшие размеры блоков и поддержку журнала. VirtualBox поддерживает этот формат только для чтения.\n- HDD (версия 2): Формат HDD разработан Parallels Inc и используются в их гипервизорах, например Parallels Desktop для Mac. Новые версии этого формата (т.е. 3 и 4) не поддерживаются из-за отсутствия документации для этого формата. Примечание: Существуют споры в отношении поддержки версии 2 формата. Официальное руководство VirtualBox сообщает, что поддерживается только 2 версия, авторы Википедии утверждают, что частично может работать и первая версия. Приветствуется помощь, если вы можете выполнить некоторые тесты с первой версией формата HDD.\n- QED: QEMU Enhanced Disk — старый формат для QEMU, свободный и открытый. Этот формат был разработан в 2010 году таким образом, чтобы обеспечить превосходную альтернативу qcow2 и другим форматам. Этот формат имеет полностью асинхронный ввод-вывод, хорошую целостность данных, откат файлов и разреженные файлы. Формат QED поддерживается только для совместимости с виртуальными машинами, созданными в старых версиях QEMU.\n- QCOW: QEMU Copy On Write — нынешний формат для QEMU. Формат QCOW поддерживает прозрачное сжатие на основе ZLIB и шифрование (однако у шифрования есть проблемы, поэтому использовать его не рекомендуется). QCOW доступен в двух версиях: QCOW и QCOW2. Последний, как правило, заменяет первый. QCOW в настоящее время полностью поддерживается в VirtualBox. QCOW2 имеет две ревизии: QCOW2 0.10 и QCOW2 1.1 (используемый по умолчанию при создании виртуального диска с QEMU). VirtualBox не поддерживает QCOW2.\n- OVF: Open Virtualization Format — открытый формат, который был разработан для обеспечения взаимодействия и распределения виртуальных машин между различными гипервизорами. VirtualBox поддерживает все версии этого формата через импорт/экспорт в VBoxManage, но с известными ограничениями.\n- RAW: это режим, когда виртуальный диск непосредственно пробрасывается на диск без определённого формата контейнера. VirtualBox поддерживает эту функцию несколькими способами: преобразование RAW-диска в определённый формат, или клонирование диска в формате RAW, или непосредственно через файл VMDK, который указывает на физический диск или просто файл.\n\n"
    },
    {
      "title": "VMDK в VDI и VDI в VMDK",
      "level": 4,
      "content": "VirtualBox может конвертировать VDI в VMDK и обратно с использованием VBoxManage clonehd.\n\nVMDK в VDI:\n\n```\n$ VBoxManage clonehd source.vmdk destination.vdi --format VDI\n```\n\nVDI в VMDK:\n\n```\n$ VBoxManage clonehd source.vdi destination.vmdk --format VMDK\n```\n\n"
    },
    {
      "title": "VHD в VDI и VDI в VDH",
      "level": 4,
      "content": "VirtualBox также может конвертировать VHD в VDI и наоборот с использованием VBoxManage clonehd:\n\nVHD в VDI:\n\n```\n$ VBoxManage clonehd source.vhd destination.vdi --format VDI\n```\n\nVDI в VHD:\n\n```\n$ VBoxManage clonehd source.vdi destination.vhd --format VHD\n```\n\n"
    },
    {
      "title": "QCOW2 в VDI и VDI в QCOW2",
      "level": 4,
      "content": "VBoxManage clonehd не может конвертировать QEMU форматы и необходимо воспользоваться иными инструментами. Команда qemu-img из пакета qemu-desktop может осуществлять преобразования QCOW2<=>VDI.\n\nQCOW2 в VDI:\n\n```\n$ qemu-img convert -pO vdi source.qcow2 destination.vdi\n```\n\nVDI в QCOW2:\n\n```\n$ qemu-img convert -pO qcow2 source.vdi destination.qcow2\n```\n\nТак как QCOW2 предостовляется в двух версиях (0.10 и 1.1) (см. форматы, поддерживаемые VirtualBox. Используйте параметр -o compat= для выбора версии.\n\n```\n$ qemu-img convert -pO qcow2 source.vdi destination.qcow2 -o compat=0.10\n```\n\nили\n\n```\n$ qemu-img convert -pO qcow2 source.vdi destination.qcow2 -o compat=1.1\n```\n\n"
    },
    {
      "title": "VDI",
      "level": 4,
      "content": "Монтирование образов VDI работает только с образами фиксированного размера (т.е. статичными образами); динамические образы (динамическое выделение размера) монтируются довольно-таки не просто.\n\nЕсли необходимо смещение раздела (в VDI), добавьте значение offData в 32256 (например, 69632 + 32256 = 101888):\n\n```\n$ VBoxManage internalcommands dumphdinfo storage.vdi | grep \"offData\"\n```\n\nТеперь cмонтируем:\n\n```\n# mount -t ext4 -o rw,noatime,noexec,loop,offset=101888 storage.vdi /mntpoint/\n```\n\nВы также можете использовать скрипт mount.vdi (поместите его в каталог /usr/bin/):\n\n```\n# mount -t vdi -o fstype=ext4,rw,noatime,noexec vdi_file_location /mnt/\n```\n\nТакже можно использовать модуль ядра nbd и команду qemu-nbd из пакета qemu-img[2]:\n\n```\n# modprobe nbd max_part=16\n# qemu-nbd -c /dev/nbd0 storage.vdi\n# mount /dev/nbd0p1 /mnt/dir/\n```\n\nРазмонтирование:\n\n```\n# umount /mnt/dir/\n# qemu-nbd -d /dev/nbd0\n```\n\nЕсли файлы разделов не появляются, попробуйте использовать partprobe /dev/nbd0; в противном случае, VDI раздел может быть отображён непосредственно в файл с помощью qemu-nbd -P 1 -c /dev/nbd0 storage.vdi.\n\nЕщё один способ — использовать vdfuseAUR:\n\n```\n# vdfuse -a -f storage.vdi mountpoint1\n```\n\nЭта команда примонтирует диск в каталог mountpoint1, внутри которого будут файлы разделов с именами вида PartitionN. Разделы можно примонтировать с помощью loop-устройств:\n\n```\n# mount -o loop mountpoint1/PartitionN mountpoint2\n```\n\n"
    },
    {
      "title": "Сжатие виртуальных дисков",
      "level": 3,
      "content": "Сжатие работает только с файлами .vdi и в основном состоит из следующих действий.\n\nЗагрузите виртуальную машину и удалите всё ненужное вручную или с помощью специальных средств, например bleachbit (доступна для ОС Windows[устаревшая ссылка 2024-07-30 ⓘ]).\n\nЗатрите свободное место нулями. Это можно сделать следующими инструментами:\n\n- Если вы пользовались Bleachbit, просто установите галочку System > Free disk space в графическом интерфейсе или выполните команду bleachbit -c system.free_disk_space в терминале;\n- В UNIX-based системах выполните команду dd или, предпочтительно, dcflddAUR (см. здесь информацию об отличиях):\n\n```\n# dcfldd if=/dev/zero of=/fillfile bs=4M\n```\n\n- В Windows есть два инструмента: sdelete из Sysinternals Suite, выполните sdelete -s -z c: для каждого виртуального диска; для любителей скриптов есть скрипт на PowerShell. Его также необходимо запускать отдельно для каждого виртуального диска.\n\n- sdelete из Sysinternals Suite, выполните sdelete -s -z c: для каждого виртуального диска;\n- для любителей скриптов есть скрипт на PowerShell. Его также необходимо запускать отдельно для каждого виртуального диска.\n\n```\nPS> ./Write-ZeroesToFreeSpace.ps1 -Root c:\\ -PercentFree 0\n```\n\nПосле завершения выключите виртуальную машину.\n\nПри следующем включении виртуальной машины рекомендуется провести проверку диска.\n\n- в UNIX-based системах можно вручную запустить fsck; в GNU/Linux, в том числе Arch Linux, вы можете запустить принудительную проверку диска во время загрузки вручную через параметры ядра;\n- в Windows: chkdsk c: /F, где c: заменяется на имя проверяемого диска; или FsckDskAll отсюда, который основан на chkdsk, но не требует повторения команды для каждого отдельного диска;\n\n- в GNU/Linux, в том числе Arch Linux, вы можете запустить принудительную проверку диска во время загрузки вручную через параметры ядра;\n\n- chkdsk c: /F, где c: заменяется на имя проверяемого диска;\n- или FsckDskAll отсюда, который основан на chkdsk, но не требует повторения команды для каждого отдельного диска;\n\nТеперь удалите нули из файлов .vdi с помощью VBoxManage modifyhd:\n\n```\n$ VBoxManage modifyhd ваш_диск.vdi --compact\n```\n\n"
    },
    {
      "title": "Увеличение размера виртуальных дисков",
      "level": 3,
      "content": "Если вы выходите за рамки пространства жесткого диска, которое выбрали при создании виртуальной машины, проблему можно решить по совету из руководства VirtualBox VBoxManage modifyhd. Эта команда работает только для динамически расширяемых дисков VDI и VHD . Если вы хотите изменить размер фиксированного виртуального диска, можете использовать нижеописанный трюк, который работает и на виртуальной машине Windows, и в UNIX-подобных системах.\n\nВо-первых, создайте новый виртуальный диск рядом с тем, который вы хотите увеличить:\n\n$ VBoxManage createhd -filename new.vdi --size 10000\n\nгде размер указан в MiB, в этом примере 10000MiB ~ = 10GiB, new.vdi - имя создаваемого нового виртуального диска.\n\nДалее старый виртуальный диск должен быть клонирован в новый(это может занять длительной время):\n\n$ VBoxManage clonehd old.vdi ew.vdi --existing\n\nОтключите старый диск и установите новый, обязательно заменив все выделенные курсивом аргументы на свои:\n\n```\n$ VBoxManage storageattach VM_name --storagectl SATA --port 0 --medium none\n$ VBoxManage storageattach VM_name --storagectl SATA --port 0 --medium new.vdi --type hdd\n```\n\nЧтобы получить имя контроллера диска и номер порта, вы можете использовать команду VBoxManage showvminfo VM_name. Среди вывода вы получите такой результат (то, что вы ищете выделено курсивом):\n\n```\n[...]\nStorage Controller Name (0):            IDE\nStorage Controller Type (0):            PIIX4\nStorage Controller Instance Number (0): 0\nStorage Controller Max Port Count (0):  2\nStorage Controller Port Count (0):      2\nStorage Controller Bootable (0):        on\nStorage Controller Name (1):            SATA\nStorage Controller Type (1):            IntelAhci\nStorage Controller Instance Number (1): 0\nStorage Controller Max Port Count (1):  30\nStorage Controller Port Count (1):      1\nStorage Controller Bootable (1):        on\nIDE (1, 0): Empty\nSATA (0, 0): /home/wget/IT/Virtual_machines/GNU_Linux_distributions/ArchLinux_x64_EFI/Snapshots/{6bb17af7-e8a2-4bbf-baac-fbba05ebd704}.vdi (UUID: 6bb17af7-e8a2-4bbf-baac-fbba05ebd704)\n[...]\n```\n\nСкачайте GParted LiveCD и установите его в качестве виртуального привода , загрузите вашу виртуальную машину, используйте увеличение / перемещение ваших разделов. По окончании работы отмонтируйте GParted LiveCD и перезагрузите машину.\n\nНаконец, отключите старый виртуальный диск в VirtualBox и удалите его:\n\n```\n$ VBoxManage closemedium disk old.vdi\n$ rm old.vdi\n```\n\n"
    },
    {
      "title": "Замена виртуального диска из файла .vbox вручную",
      "level": 3,
      "content": "Если вы думаете, что редактирование простого XML файла более удобно, чем возня с GUI или VBoxManage и вы хотите заменить (или добавить) виртуальный диск в вашей виртуальной машине, просто замените GUID, местоположение файла и формат для ваших нужд в конфигурационном файле .vbox, соответствующем вашей виртуальной машине:\n\n```\nArchLinux_vm.vbox\n```\n\n```\n<HardDisk uuid=\"{670157e5-8bd4-4f7b-8b96-9ee412a712b5}\" location=\"ArchLinux_vm.vdi\" format=\"VDI\" type=\"Normal\"/>\n```\n\nв <AttachedDevice> (суб-тег <StorageController>) замените старый GUID на новый.\n\n```\nArchLinux_vm.vbox\n```\n\n```\n<AttachedDevice type=\"HardDisk\" port=\"0\" device=\"0\">\n  <Image uuid=\"{670157e5-8bd4-4f7b-8b96-9ee412a712b5}\"/>\n</AttachedDevice>\n```\n\n"
    },
    {
      "title": "Клонирование виртуального диска и назначение ему нового UUID",
      "level": 3,
      "content": "UUID широко используются VirtualBox. Каждая виртуальная машина и каждый виртуальный диск виртуальной машины должны иметь разные UUID. Когда вы запускаете виртуальную машину в VirtualBox, он будет отслеживать все UUID. См VBoxManage list, чтобы просмотреть список элементов, зарегистрированных в VirtualBox.\n\nЕсли вы клонировали виртуальный диск вручную путем копирования файла виртуального диска, необходимо будет назначить новый UUID клонированному виртуальному диску. Вы можете использовать этот диск в той же виртуальной машине или даже в другой (если он уже открыт и таким образом зарегистрирован в VirtualBox).\n\nВы можете использовать эту команду, чтобы назначить новый UUID для вашего виртуального диска:\n\n```\n$ VBoxManage internalcommands sethduuid /path/to/disk.vdi\n```\n\n"
    },
    {
      "title": "Импорт/экспорт виртуальных машин VirtualBox в/из других гипервизоров",
      "level": 3,
      "content": "Если вы планируете использовать виртуальную машину на другом гипервизоре или хотите импортировать в VirtualBox виртуальную машину, созданную в другом гипервизоре, вы можете быть заинтересованы в чтении следующих шагов.\n\n"
    },
    {
      "title": "Удаление дополнений гостевой ОС",
      "level": 4,
      "content": "Гостевые дополнения доступны в большинстве гипервизоров: VirtualBox поставляется с гостевыми дополнениями, VMware с VMware Tools, Parallels с инструментами Parallels, и т.д. Это дополнительные компоненты, предназначенные для установки внутри виртуальной машины после гостевой операционной системы, состоящие из драйверов устройств и системных приложений, которые оптимизируют гостевую операционной системы для повышения производительности и удобства использования. Читать подробнее.\n\nЕсли у вас установлены дополнения в вашей виртуальной машине - удалите их в первую очередь. Ваша гостевая ОС, особенно если это ОС из семейства Windows, может вести себя странно, аварийно или не загрузиться вообще, если вы используете специальные драйверы одного гипервизора на другом.\n\n"
    },
    {
      "title": "Использование правильного формата виртуального диска",
      "level": 4,
      "content": "От этого шага будет зависеть способность преобразовывать образ диска виртуальной в другие форматы - непосредственно или конвейерным методом.\n\nНекоторые компании предоставляют инструменты, которые предлагают возможность создания виртуальных машин с операционной системой Windows или GNU / Linux, расположенной в виртуальной машине или даже в оригинальной установке. С таким продуктом вам не нужно применять этот и следующие шаги, и можно далее не читать.\n\n- Parallels Transporter - не бесплатный, продукт от Parallels Inc. Это решение в основном заключается в части программного обеспечения под названием агент, который будет установлен в гостевой ОС, которую вы хотите импортировать / преобразовать. Затем, Parallels Transporter, который работает только на OS X , создаст виртуальную машину с этим агентом, который контактирует либо по USB или по сети Ethernet.\n- VMware vCenter Converter[устаревшая ссылка 2024-07-30 ⓘ] - бесплатен при регистрации на Website VMware, работает почти так же, как Parallels Transporter, но часть программного обеспечения, которая собирает данные для создания виртуальной машины работает только на платформе Windows.\n\nВо-первых, ознакомьтесь с форматами, поддерживаемыми Virtualbox и форматами других гипервизоров.\n\n- Импорт и экспорт виртуальной машины из/в формат VMware не является проблемой, если вы используете формат диска VMDK или OVF, в противном случае преобразования VMDK в VDI и VDI в VMDK можно осуществить вышеописанным VMware vCenter Converter.\n\n- Импорт и экспорт из/в QEMU почти не проблема: некоторые форматы QEMU поддерживает непосредственно VirtualBox и преобразование между QCOW2 в VDI и VDI в QCOW2 по-прежнему доступны в случае необходимости.\n\n- Импорт и экспорт из/в Parallels гипервизора является трудный задачей: Parallels поддерживает только свой собственный формат жесткого диска (даже стандартные форматы и портативный формат OVF не поддерживается!).\n\n- Чтобы экспортировать виртуальную машину для Parallels, вам нужно будет использовать инструмент описанной выше Parallels - Transporter.\n- Чтобы импортировать виртуальную машину в VirtualBox, вы должны будете использовать VMware vCenter Converter , чтобы преобразовать виртуальную машину в формат VMware в первую очередь - а затем используйте инструмент для миграции с VMware.\n\n"
    },
    {
      "title": "Создание конфигурации VM для гипервизора",
      "level": 4,
      "content": "Каждый гипервизор имеет свой собственный файл конфигурации виртуальной машины: .vbox для VirtualBox, .vmx для VMware, config.pvs файл, расположенный в виртуальной машине (.pvm файл), и т.д. Вы можете, таким образом, создать новую виртуальную машину в новом гипервизоре и указать его конфигурацию как можно ближе относительно начальной виртуальной машины.\n\nОбратите пристальное внимание на интерфейс прошивки (BIOS или UEFI), используемый для установки гостевой операционной системы. В то время как опция доступна выбирать между этими 2 интерфейсов на VirtualBox и на Parallels решений, на VMware, вам придется вручную добавить следующую строку в ваш .vmx файл.\n\n```\nArchLinux_vm.vmx\n```\n\n```\nfirmware = \"efi\"\n```\n\nНаконец, настройте ваш гипервизор, для использования существующего виртуального диска, который вы преобразовали и запустите виртуальную машину.\n\n- В VirtualBox, если вы не хотите просмотривать весь графический интерфейс, чтобы найти нужное место где можно добавить новый виртуальный диск устройства, вы можете Заменить виртуальный диск вручную из файла .vbox, или использовать VBoxManage storageattach, описанный в увеличении вируального диска или в руководстве VirtualBox\n- Кроме того, в продуктах VMware, вы можете заменить местоположение текущего местоположения виртуального диска путем адаптации .vmdk местоположения файла в .vmx конфигурационном файле.\n\n"
    },
    {
      "title": "Запуск виртуальных машин с помощью службы (автозапуск)",
      "level": 4,
      "content": "```\n/etc/systemd/system/vboxvmservice@.service\n```\n\n```\n[Unit]\nDescription=VBox Virtual Machine %i Service\nRequires=systemd-modules-load.service\nAfter=systemd-modules-load.service\n\n[Service]\nUser=username\nGroup=vboxusers\nExecStart=/usr/bin/VBoxManage startvm %i --type startmode\nExecStop=/usr/bin/VBoxManage controlvm %i stopmode\nRemainAfterExit=yes\n\n[Install]\nWantedBy=multi-user.target\n```\n\n- Замените username на пользователя из группы vboxusers. Убедитесь, что это именно тот пользователь, который управляет виртуальной машиной, иначе ничего не получится.\n- Замените startmode на тип фронтенда виртуальной машины, обычно gui, headless или separate.\n- Замените stopmode на желаемый переключатель состояния, обычно savestate или acpipowerbutton.\n\nВключите юнит vboxvmservice@название_виртуальной_машины, чтобы она запускалась автоматически при загрузке системы. Для запуска вручную просто запустите этот юнит.\n\nVirtualBox 4.2 предоставляет для UNIX-like систем также другие способы автозапуска, без использования сервисов systemd.\n\n"
    },
    {
      "title": "Запуск виртуальной машины по горячей клавише",
      "level": 4,
      "content": "Может быть полезно запускать виртуальные машины непосредственно с клавиатуры вместо использования интерфейса VirtualBox (GUI или CLI). Для этого, вы можете просто определить ключевые привязки в .xbindkeysrc. Обратитесь к Xbindkeys для более подробной информации.\n\nНапример, запуск по Fn+F3:\n\n```\n\"VBoxManage startvm 'Windows 7'\"\nm:0x0 + c:244\nXF86Battery\n```\n\n"
    },
    {
      "title": "Использование USB веб-камеры/микрофона",
      "level": 4,
      "content": "1. Убедитесь, что виртуальная машина не запущена, а веб-камера / микрофон не используется.\n1. Откройте главное окно VirtualBox и перейдите к настройкам машины Arch. Перейдите в раздел USB.\n1. Убедитесь, что стоит галочка «Включить контроллер USB». Также убедитесь, что выбран пункт «Контроллер USB 2.0 (OHCI + EHCI)».\n1. Нажмите кнопку добавления фильтра для устройства (кабель со значком «+»).\n1. Выберите USB веб-камеру/микрофон из списка.\n1. Нажмите кнопку OK и запустите виртуальную машину.\n\n"
    },
    {
      "title": "Обнаружение веб-камер и других USB-устройств",
      "level": 4,
      "content": "Убедитесь, что вы фильтруете любые устройства, (кроме клавиатур или мышей), чтобы они не запускались при загрузке -это гарантирует, что ОС Windows обнаружит устройство при запуске.\n\n"
    },
    {
      "title": "Доступ к гостевому серверу",
      "level": 3,
      "content": "Для доступа к HTTP-серверу Apache, запущенному в виртуальной машине, только с хост-машины, выполните:\n\n```\n$ VBoxManage setextradata GuestName \"VBoxInternal/Devices/pcnet/0/LUN#0/Config/Apache/HostPort\" 8888\n$ VBoxManage setextradata GuestName \"VBoxInternal/Devices/pcnet/0/LUN#0/Config/Apache/GuestPort\" 80\n$ VBoxManage setextradata GuestName \"VBoxInternal/Devices/pcnet/0/LUN#0/Config/Apache/Protocol\" TCP\n```\n\nГде 8888 — порт, который будет слушать хост, а 80 — порт внутри виртуальной машины, который будет принимать входящие соединения.\n\nЧтобы использовать на хосте порт ниже 1024, нужно внести изменения в межсетевом экране. Он также может быть настроен на работу с SSH или другими службами путём изменения портов на нужные.\n\n"
    },
    {
      "title": "D3D ускорение в гостевой Windows",
      "level": 3,
      "content": "Последние версии Virtualbox имеют поддержку ускорения OpenGL внутри гостевой ОС. Эта функция может быть включена галочкой в настройках машины (при установленных дополнениях гостевой ОС VirtualBox). Тем не менее, большинство игр под Windows используют Direct3D (часть DirectX), а не OpenGL, и, таким образом, этот метод не поможет. Тем не менее возможно получить ускоренное Direct3D в гостевой Windows, за счет заимствования D3D библиотеки из Wine, который переводит инструкции d3d под OpenGL, который и занимается ускорением. Эти библиотеки теперь являются частью дополнений гостевой ОС.\n\nПосле включения OpenGL ускорения, как описано выше, перезагрузите гостевую ОС в безопасном режиме (нажмите F8 до появления экрана для Windows, но после исчезновения экрана Virtualbox), и установите дополнения гостевой ОС, во время установки установите галочку Включить поддержку Direct3D. Перезагрузитесь обратно в нормальный режим, и вы получите ускоренный Direct3D.\n\n- Этот хак может не работать для некоторых игр в зависимости от того, какие проверки оборудования они делают и какие части D3D они используют.\n- Хак был проверен на Windows XP, 7 и 8.1. Если метод не работает на вашей версии Windows, пожалуйста, добавьте эту информацию здесь.\n\n"
    },
    {
      "title": "VirtualBox c USB-ключом",
      "level": 3,
      "content": "При использовании VirtualBox с USB-ключом, например, для запуска установленной машины с ISO-образа, вы вручную должны создать VMDK-файлы существующих приводов. Тем не менее, как только новые файлы VMDK сохраняться и вы перейдёте на другую машину, у вас могут снова возникнуть проблемы. Чтобы избавиться от этой проблемы, можно использовать следующий скрипт для запуска VirtualBox. Этот сценарий будет убирать старые файлов VMDK и создавать новые:\n\n```\n#!/bin/sh\n# Erase old VMDK entries\nrm ~/.VirtualBox/*.vmdk\n\n# Clean up VBox-Registry\nsed -i '/sd/d' ~/.VirtualBox/VirtualBox.xml\n\n# Remove old harddisks from existing machines\nfind ~/.VirtualBox/Machines -name \\*.xml | while read -r file; do\n  line=$(grep -e \"type\\=\\\"HardDisk\\\"\" -n \"$file\" | cut -d ':' -f 1)\n  if [ -n \"$line\" ]; then\n    sed -i \"${line}\"d \"$file\"\n    sed -i \"${line}\"d \"$file\"\n    sed -i \"${line}\"d \"$file\"\n  fi\n  sed -i \"/rg/d\" \"$file\"\ndone\n\n# Delete prev-files created by VirtualBox\nfind  ~/.VirtualBox/Machines -name \\*-prev -exec rm '{}' \\;\n\n# Recreate VMDKs\nls -l /dev/disk/by-uuid | cut -d ' ' -f 9,11 | while read -r ln; do\n  if [ -n \"$ln\" ]; then\n    uuid=$(echo \"$ln\" | cut -d ' ' -f 1)\n    device=$(echo \"$ln\" | cut -d ' ' -f 2 | cut -d '/' -f 3 | cut -b 1-3)\n\n    # determine whether drive is mounted already\n    checkstr1=$(mount | grep \"$uuid\")\n    checkstr2=$(mount | grep \"$device\")\n    checkstr3=$(ls ~/.VirtualBox/*.vmdk | grep \"$device\")\n    if [ -z \"$checkstr1\" ] && [ -z \"$checkstr2\" ] && [ -z \"$checkstr3\" ]; then\n      VBoxManage internalcommands createrawvmdk -filename ~/.VirtualBox/\"$device\".vmdk -rawdisk /dev/\"$device\" -register\n    fi\n  fi\ndone\n\n# Start VirtualBox\nVirtualBox\n```\n\nОбратите внимание, что ваш пользователь должен быть добавлен в группу disk, чтобы создать VMDK-файлы из существующих дисков.\n\n"
    },
    {
      "title": "Запуск установленного Arch Linux внутри VirtualBox",
      "level": 3,
      "content": "Если у вас есть дуалбут системы между Arch Linux и другими операционных системами, он может быстро стать утомительным для переключения туда-сюда, если вам нужно работать в обоих. Кроме того, с помощью виртуальных машин, у вас есть только крошечный фрагмент власти компьютера, который может привести к проблемам при работе на проектах, требующих производительности.\n\nЭто руководство позволит вам использовать в виртуальной машине, вашу родную установку Arch Linux, когда вы используете свою вторую операционную систему. Таким образом, вы сохраняете возможность запуска каждой операционной систему изначально, но есть возможность запустить установленный физически Arch Linux внутри виртуальной машины.\n\n"
    },
    {
      "title": "Убедитесь, что система наименования разделов не изменяется",
      "level": 4,
      "content": "В зависимости от настроек вашего жесткого диска, файлы устройств, представляющих свои жесткие диски могут выглядеть по-разному когда вы будете запускать установку Arch Linux - изначально или в виртуальной машине. Эта проблема возникает, например, при использовании FakeRAID. Поддельные RAID устройстве, будут перемещены в /dev/mapper/ при запуске дистрибутива GNU/Linux , в то время как будут устройства по-прежнему доступны по отдельности. Тем не менее, в вашей виртуальной машине может оказаться без отображения в /dev/sdaX например, потому что драйвера, управляющие поддельными RAID в вашей локальной операционной системе (например, Windows) абстрагируются под поддельные RAID устройства.\n\nЧтобы обойти эту проблему, мы должны будем использовать схему адресации, работающую в обеих системах. Это может быть достигнуто использованием UUID в файле /etc/fstab. Убедитесь, что ваш fstab использует UUID - в противном случае исправьте это. Читайте статьи fstab (Русский) и Постоянные имена для блочных устройств.\n\n/etc/fstab не является единственным местом, где используются UUID. Менеджеры загрузчиков тоже их используют. Убедитесь, что они действительно используют UUID-ы.\n\nЕсли вы все еще используете GRUB Legacy, может быть настало время его обновить, так как этот пакет в настоящее время удален из официальных репозиториев Arch Linux. Если вы хотите сохранить его, отредактируйте /boot/grub/menu.lst и замените root=/dev/sdXX в загрузочной записи Arch Linux на Linux UUID /dev/disk/by-uuid/, соответствующий корневому разделу.\n\n```\ntitle  Arch Linux\nroot\nkernel /vmlinuz-linux root=/dev/disk/by-uuid/0a3407de-014b-458b-b5c1-848e92a327a3 ro vga=773\ninitrd /initramfs-linux-vbox.img\n```\n\nПредварительно создайте резервную копию файла на случай ошибок.\n\nЕсли вы работаете с самой последней версией GRUB; у вас нет проблем. Это ещё одна причина для перехода на GRUB 2.\n\n- Убедитесь, что ваш хост-раздел доступна только для чтения с вашей виртуальной машины Arch Linux. Это позволит избежать риска повреждения.\n- Вы никогда не должны позволять VirtualBox загружаться с момента загрузки вашей второй операционной системы, которая используется в качестве хоста для этой виртуальной машины! Возьмите, таким образом, за правило - особенно если ваша загрузка производится по умолчанию в другую операционную систему. Установите более большой тайм-аут или переместите систему ниже в порядке предпочтений.\n\n"
    },
    {
      "title": "Убедитесь в корректности образа mkinitcpio",
      "level": 4,
      "content": "Убедитесь, что в конфигурации вашего mkinitcpio есть хук block:\n\n```\n/etc/mkinitcpio.conf\n```\n\n```\n[...]\nHOOKS=\"base udev autodetect modconf block filesystems keyboard fsck\"\n[...]\n```\n\nЕсли это не так, добавьте хук и заново сгенерируйте initramfs.\n\n"
    },
    {
      "title": "Создание конфигурации виртуальной машины для загрузки с физического диска",
      "level": 4,
      "content": "Теперь нам нужно создать новую виртуальную машину, которая будет использовать RAW диск в качестве виртуального диска, для этого мы будем использовать файл ~ 1Kib VMDK, которые будет сбрасываться на физический диск. VirtualBox не имеет этой опции в графическом интерфейсе, так что мы должны использовать консоль и внутреннюю команду из VBoxManage.\n\nЗагрузите хост, который будет использовать виртуальную машину Arch Linux.Команда должны быть адаптированы в соответствии с вашей хост-машиной.\n\nСуществует 3 способа этого достичь: вход от суперпользователя, изменение прав доступа к устройству командой chmod, добавление пользователя в группу disk. Последний путь является более элегантным. Реализуем таким образом:\n\n```\n# gpasswd -a your_user disk\n```\n\nПрименить новые параметры сейчас же:\n\n```\n$ newgrp\n```\n\nТеперь вы можете использовать следующую команду:\n\n```\n$ VBoxManage internalcommands createrawvmdk -filename /path/to/file.vmdk -rawdisk /dev/sdb -register\n```\n\nАдаптируйте команду для ваших потребностей.\n\nОткройте окно командной строки (необходимо запускать от имени администратора).\n\nВ Windows наименование дисков отлично от UNIX. Используйте эту команду, чтобы определить значения в вашей системе Windows, и их расположение:\n\n```\n# wmic diskdrive get name,size,model\n```\n\n```\nModel                               Name                Size\nWDC WD40EZRX-00SPEB0 ATA Device     \\\\.\\PHYSICALDRIVE1  4000783933440\nKINGSTON SVP100S296G ATA Device     \\\\.\\PHYSICALDRIVE0  96024821760\nHitachi HDT721010SLA360 ATA Device  \\\\.\\PHYSICALDRIVE2  1000202273280\nInnostor Ext. HDD USB Device        \\\\.\\PHYSICALDRIVE3  1000202273280\n```\n\nВ этом примере Windows называет диски \\\\.\\PhysicalDriveX, Где X представляет собой число от 0, \\\\.\\PHYSICALDRIVE1 может быть сопоставим с /dev/sdb из терминологии Linux.\n\nДля использования в командной строке VBoxManage в Windows, вы должны изменить текущую папку в папку установки VirtualBox, обычно это cd C:\\Program Files\\Oracle\\VirtualBox\\\n\n```\n# .\\VBoxManage.exe internalcommands createrawvmdk -filename C:\\file.vmdk -rawdisk \\\\.\\PHYSICALDRIVE1\n```\n\nили использовать абсолютный путь:\n\n```\n# \"C:\\Program Files\\Oracle\\VirtualBox\\VBoxManage.exe\" internalcommands createrawvmdk -filename C:\\file.vmdk -rawdisk \\\\.\\PHYSICALDRIVE1\n```\n\nЕсть и другие ограничения, касающиеся вышеприведенной команды, когда она используется в других операционных системах - таких как OS X. Прочитайте внимательно руководство, если это вас беспокоит.\n\n- Для использования команды VBoxManage в Windows, вам нужно сначало изменить текущую директорию в папку установки VirtualBox:\n\n```\ncd C:\\Program Files\\Oracle\\VirtualBox\\\n```\n\n- Windows делает использование обратного слеша вместо слеша, пожалуйста, замените все вхождения / на \\ в командах, которые вы будете использовать.\n\nПосле этого мы должны создать новую машину (замените VM_name ная ваш вариант) и зарегистрировать её в VirtualBox.\n\n```\n$ VBoxManage createvm -name VM_name -register\n```\n\nЗатем виртуальный диск должен быть подключен к машине. Это будет зависеть от того, находится ли корень в вашей оригинальной установке Arch Linux на IDE или контроллере SATA.\n\nЕсли вам нужен контроллер IDE:\n\n```\n$ VBoxManage storagectl VM_name --name \"IDE Controller\" --add ide\n$ VBoxManage storageattach machineA --storagectl \"IDE Controller\" --port 0 --device 0 --type hdd --medium /path/to/file.vmdk\n```\n\nВ противном случае:\n\n```\n$ VBoxManage storagectl VM_name --name \"SATA Controller\" --add sata\n$ VBoxManage storageattach machineA --storagectl \"SATA Controller\" --port 0 --device 0 --type hdd --medium /path/to/file.vmdk\n```\n\nВ то время как вы продолжаете использовать интерфейс командной строки, рекомендуется использовать VirtualBox GUI, чтобы персонализировать настройки виртуальной машины. Необходимо указать аппаратную конфигурацию как можно ближе к родной машине: включение ускорения 3D, увеличение видеопамяти, установка сетевого интерфейса и т.д.\n\n"
    },
    {
      "title": "Установка дополнений гостевой ОС",
      "level": 4,
      "content": "Наконец, вы можете легко интегрировать Arch Linux с хост-системой и синхронизировать буфер обмена между двумя ОС. Обратитесь к установке гостевых дополнений для этого.\n\n"
    },
    {
      "title": "Физическая установка системы Arch Linux из VirtualBox",
      "level": 3,
      "content": "В некоторых случаях это может быть полезно для установки родной системы Arch Linux из другой операционной системы: один из способов достижения этой цели является выполнение установки через VirtualBox на жёсткий диск. Если существующая операционная система на основе Linux, вы можете рассмотреть установку из существующего Linux вместо этого.\n\nЭтот сценарий очень похож на Запуск установленного Arch Linux в VirtualBox, но будет реализовывать эти шаги в другом порядке: начать с создания .vmdk образа жёсткого диска, а затем создавать файл конфигурации виртуальной машины.\n\nТеперь вы должны иметь рабочую конфигурацию виртуальной машины, чей виртуальный VMDK-диск связан с реальным диском. Процесс установки точно такой же, как и описанный в пошаговой установке Arch Linux в VirtualBox, но сначала убедитесь в постоянной схеме наименования разделов и корректности образа mkinitcpio.\n\n- Для BIOS и MBR дисков: не устанавливайте загрузчик внутри виртуальной машины - он не будет работать, так как MBR не связан с MBR вашей реальной машины, и виртуальный диск отображается только в реальном разделе без MBR\n- Для UEFI систем без CSM и GPT дискa установка не будет работать вообще, так как:\n\n- ESP не отображается на виртуальный диск и Arch Linux требует, чтобы ядро Linux было на нём, чтобы загрузиться в качестве приложения EFI (смотрите статью EFISTUB (Русский))\n- и efivars, если вы устанавливаете Arch Linux через VirtualBox, используя режим EFI, не загрузит ни одну из ваших реальных систем: записи Bootmanager не смогут быть зарегистрированы\n\n- Вот почему рекомендуется создавать разделы в родной установке. В противном случае разделы не будут приниматься во внимание в MBR / GPT таблице разделов\n\nПосле завершения установки загрузите компьютер сперва с установочного носителя GNU/Linux (будь то Arch Linux или нет), выполните chroot в установленной Arch Linux и установите и настройте загрузчик.\n\n"
    },
    {
      "title": "Перемещение физически установленного Windows в виртуальную машину",
      "level": 3,
      "content": "Если вы хотите перенести существующую Windows на виртуальную машину, которая будет использоваться с VirtualBox на GNU/Linux, этот вариант использования для вас. В этом разделе описан перенос только Windows с использованием схемы MSDOS/Intel разделов. Ваш Windows должен находиться на первом после MBR разделе. Работа в других разделах доступна, но были не тестировалась (см Известные ограничения для более подробной информации)\n\nНесколько задач необходимо выполнить внутри вашей Windows, а затем в хост-машине GNU/Linux.\n\n"
    },
    {
      "title": "Задачи в Windows",
      "level": 4,
      "content": "Первые три следующих моменты происходит от этой устаревшей вики-страницы VirtualBox, но обновляются здесь.\n\n- Удалите проверку IDE/ATA контроллеров (только Windows XP): Windows запоминает IDE/ATA после установки, и не будет загружаться, если он обнаружит что они изменились.Решение, предложенное Microsoft является повторным использованием того же контроллера или использовать один из той-же серии, что невозможно сделать, поскольку мы используем виртуальную машину. MergeIDE, немецкий инструмент, разработан как другое решением, предложенное Microsoft. Решение в основном состоит в принятии всех IDE/ATA драйверов контроллера IDE, поддерживаемые Windows XP от первоначального архива драйвера, их установке и регистрации в реестре через Regedit.\n\n- Используйте правильный тип слоя абстрагирования оборудования (старые 32-битный Windows): Microsoft использует с 3 версии по умолчанию: Hal.dll (Standard PC), Halacpi.dll (ACPI HAL) и halaacpi.dll (ACPI HAL с IO APIC). Ваша Windows-установка могла устанавитmся с первого или второго варианта. В этом случае, пожалуйста, отключите Enable IO/APIC в расширенных возможностях VirtualBox.\n\n- Отключите драйвер AGP устройства (только устаревшие версии ОС Windows): Если у вас есть файлы agp440.sys или intelppm.sys внутри C:\\Windows\\System32\\drivers\\, то удалите его. Так как VirtualBox использует PCI виртуальную графическую карту, это может вызвать проблемы, когда используется драйвер AGP.\n\n- Создайте диск восстановления ОС Windows: В следующих шагах, если что-то испортится, вам нужно будет восстановить установку Windows. Убедитесь, что у вас есть установочного носителя под рукой, или создайте через Создать диск восстановления в Vista SP1, Создать диск восстановления системы в Windows 7 или Создать диск восстановления в Windows 8.x).\n\n"
    },
    {
      "title": "Задачи в GNU/Linux",
      "level": 4,
      "content": "- Уменьшите родной размер раздела Windows, для чего нужен ntfsresize из пакета ntfs-3g. Вы определяете размер, который будет равен размере VDI, который будет создан на следующем шаге. Если этот размер будет слишком мал, вы можете сломать ваш Windows и он может не загружаться вообще.\n\n```\n# ntfsresize --no-action --size 52Gi /dev/sda1\n```\n\n- Установите VirtualBox на ваш GNU/Linux хост (смотрите раздел #Установка).\n\n- Создайте образ диска для Windows от начала диска до конца первого раздела, на котором находится Windows. Копирование с начала диска необходимо потому, что пространство MBR в начале диска должно быть перенесено на виртуальный диск вместе с самим Windows. В этом примере следующие два раздела sda2 и sda3 будут позже удалены из таблицы разделов и загрузчик MBR будет обновляться.\n\n```\n# sectnum=$(( $(cat /sys/block/sda/sda1/start) + $(cat /sys/block/sda/sda1/size) ))\n```\n\n```\n# dd if=/dev/sda bs=512 count=$sectnum | VBoxManage convertfromraw stdin windows.vdi $(( $sectnum * 512 ))\n```\n\n- Так как вы создали свой образ диска с правами администратора, установите правильного владельца файлу образа диска: # chown ваш_пользователь:ваша_группа windows.vdi\n\n```\n# chown ваш_пользователь:ваша_группа windows.vdi\n```\n\n- Создайте файл настроек виртуальной машины — используйте виртуальный диск, созданный ранее в качестве основного виртуального диска.\n\n- Попробуйте загрузиться с виртуальной машины Windows (может заработать). Во-первых, хотя бы отключите восстановление дисков из процесса загрузки, так как это может помешать (и, вероятно, будет мешать) загрузиться в безопасном режиме.\n\n- Попытайтесь загрузить виртуальную машину в безопасном режиме (нажмите клавишу F8 до логотипа Windows)... при возникновении проблем с загрузкой смотрите раздел #Исправление MBR и загрузчика Microsoft. В безопасном режиме, вероятно, будут установлены драйверы. Кроме того, установите Дополнения гостевой ОС через меню Устройства > Подключить образ диска Дополнений гостевой ОС.... Если окно действий над подключенным диском не появилось, откройте диск и запустите установку вручную.\n\n- Наконец-то у вас есть необходимый Windows в виртуальной машине. Ознакомьтесь с известными ограничениями.\n\n"
    },
    {
      "title": "Исправление MBR и загрузчика Microsoft",
      "level": 4,
      "content": "Если ваша виртуальная машина с Windows отказывается загружаться, вам, возможно, потребуется применить следующие изменения в вашей виртуальной машине.\n\n- Начальная загрузка GNU/Live внутри виртуальной машины, прежде чем загрузится ОС Windows .\n\n- Удалить другие записи разделы с MBR виртуального диска. В самом деле, так как мы скопировали MBR и только раздел Windows, записи, относящихся к другим разделам по-прежнему присутствуют в MBR, но разделы ведь больше не доступны. Используйте fdisk, чтобы добиться этого, например.\n\n```\nfdisk ''/dev/sda''\nCommand (m for help): a\nPartition number (''1-3'', default ''3''): ''1''\n```\n\n- Запишите обновленную таблицу разделов на диск (это будет пересозданием MBR) с помощью m команды в окружении fdisk.\n\n- Используйте testdisk (см. здесь для более подробной информации), чтобы добавить общий MBR:\n\n```\n# testdisk > Disk /dev/sda...' > [Proceed] > [Intel] Intel/PC partition > [MBR Code] Write TestDisk MBR to first sector > Write a new copy of MBR code to first sector? (Y/n) > Y > Write a new copy of MBR code, confirm? (Y/N) > A new copy of MBR code has been written. You have to reboot for the change to take effect. > [OK]\n```\n\n- С новым MBR и обновленной таблицей разделов, ваша виртуальная машина с Windows должна загрузиться. Если вы все еще сталкиваетесь с вопросами, загрузите диск восстановления Windows с предыдущей стадии, и внутри вашей среды Windows RE, выполняйте команды описанные здесь.\n\n"
    },
    {
      "title": "Известные ограничения",
      "level": 4,
      "content": "- Ваша виртуальная машина может иногда зависать и забивать оперативную память, это может быть вызвано конфликтующими драйверами , установленными внутри виртуальной машины Windows. Удачи вам найти их!\n- Дополнительное ПО ожидало драйвер,который не может установиться из-за невозможности отключения / деинсталляции старого драйвера.\n- Ваша Windows должна находиться в первом разделе для описанного выше процесса, чтобы заработать. Если это требование не выполнено, система может работать, но это не было испытаны. Это потребует либо копирования MBR и редактирования в шестнадцатеричном коде, см. VirtualBox: загрузка клонированного диска или потребуется исправить таблицу разделов вручную или восстанавливать Windows с диска восстановления, созданного в предыдущем шаге. Рассмотрим нашу установку окна на втором раздела; мы скопируем MBR, второму разделу, где лужит образ диска VBoxManage convertfromraw необходимо общее количество байтов, которые будут записаны: Вычислим как сумму размера MBR (начало первого раздела) плюс размер второго (Windows) раздела.{ dd if=/dev/sda bs=512 count=$(cat /sys/block/sda/sda1/start) ; dd if=/dev/sda2 bs=512 count=$(cat /sys/block/sda/sda2/size) ; } | VBoxManage convertfromraw stdin windows.vdi $(( ($(cat /sys/block/sda/sda1/start) + $(cat /sys/block/sda/sda2/size)) * 512 )).\n\n"
    },
    {
      "title": "VERR_ACCESS_DENIED",
      "level": 3,
      "content": "Чтобы получить доступ к образу VMDK, расположенного на хосте под Windows, запустите VirtualBox GUI от имени администратора.\n\n"
    },
    {
      "title": "Клавиатура и мышь заблокированы виртуальной машиной",
      "level": 3,
      "content": "Это означает, что ваша виртуальная машина захватила ввод клавиатуры и мыши. Просто нажмите правый Ctrl, и ваши устройства ввода станут доступны в основной системе.\n\nДля того, чтобы управление мышь возвращалось основной ОС при выходе курсора за границы окна виртуальной машины без нажатия каких-либо клавиш и для возможности бесшовной интеграции установите гостевое дополнение на виртуальную машину. Читайте шаг #Установка гостевых дополнений, если вы новичок в Arch Linux, или читайте официальную справку VirtualBox.\n\n"
    },
    {
      "title": "Не работают 64-битные гостевые ОС",
      "level": 3,
      "content": "При запуске клиента VM, если никакие 64-битные варианты не доступны, убедитесь что ваши возможности виртуализации процессора (обычно с именем VT-X) включены в BIOS.\n\n"
    },
    {
      "title": "Не могу отправить комбинацию CTRL+ALT+Fn в виртуальную машину",
      "level": 3,
      "content": "Если в вашей виртуальной машине установлен дистрибутив GNU/Linux и вы хотите открыть новую оболочку TTY нажатием Ctrl+Alt+F2 или выйти из X сессии с помощью Ctrl+Alt+Backspace, просто нажав это сочетание клавиш без какой-либо адаптации, гостевая машина его не получит и основная ОС (если это тоже дистрибутив GNU/Linux) распознает это сочетание клавиш. Для отправки Ctrl+Alt+F2 на виртуальную машину нужно просто нажать ваш Host Key (обычно это правый Ctrl) и одновременно нажать F2.\n\n"
    },
    {
      "title": "Исправление проблем в ISO-образах",
      "level": 3,
      "content": "В то время как VirtualBox монтирует оригинальный образы ISO без проблем, есть такие форматы образов, которые не могут надежно быть преобразованы в ISO. Например, ccd2iso игнорирует .ccd и .sub файлы, что может привести к созданию образа диска с разбитыми файлами.\n\nВ этом случае вам придется использовать CDemu для Linux внутри VirtualBox или любую другую утилиту, предназначенную для монтирования образов дисков.\n\n"
    },
    {
      "title": "VirtualBox GUI не видит мою тему GTK 2x/3x",
      "level": 3,
      "content": "Смотрите Единый интерфейс GTK/QT приложений для получения информации о настройке GUI Qt в GTK-окружениях.\n\n"
    },
    {
      "title": "OpenBSD не работает при недоступных инструкциях виртуализации",
      "level": 3,
      "content": "В то время как OpenBSD отлично работает на других гипервизорах без включенной виртуализации (VT-х AMD-V), виртуальная машина с OpenBSD работает в VirtualBox без этих инструкций некорректно, выдавая кучу ошибок сегментации. Запуская VirtualBox с аргументом -norawr0 можно избавиться от этой проблемы. Вы можете сделать это следующим образом:\n\n```\n$ VBoxSDL -norawr0 -vm имя_OpenBSD_VM\n```\n\n"
    },
    {
      "title": "VBOX_E_INVALID_OBJECT_STATE (0x80BB0007)",
      "level": 3,
      "content": "Это может произойти при некорректном завершении виртуальной машины. Разблокировка машины тривиальна:\n\n```\n$ VBoxManage controlvm virtual_machine_name poweroff\n```\n\n"
    },
    {
      "title": "Подсистема USB не работает",
      "level": 3,
      "content": "Ваш пользователь должен быть в группе vboxusers, и вы должны установить пакет дополнений, если хотите иметь поддержку USB 2. Тогда вы сможете включить USB 2 в настройках виртуальной машины и добавить один или несколько фильтров для устройств, которые будут иметь доступ из гостевой ОС.\n\nИногда, на старых Linux-хостах, подсистема USB не распознается автоматически и выдает ошибку Could not load the Host USB Proxy service: VERR_NOT_FOUND или при невидимом USB-диске в хост-машине, даже когда пользователь находится в группе vboxusers. Эта проблема происходит из-за того, что VirtualBox переключается с usbfs на sysfs с версии 3.0.8. Если хост-машина не распознаёт этого изменения, вы можете вернуться к старому поведению, определив следующую переменную окружения в любом файле, которые конфигурирует вашу оболочку (например, в ~/.bashrc, если вы используете bash):\n\n```\n~/.bashrc\n```\n\n```\nVBOX_USB=usbfs\n```\n\nЗатем убедитесь, что, окружающая среда приняла это изменение (перелогиньтесь, запустите новый экземпляр оболочки или перезагрузитесь).\n\nТакже убедитесь, что ваш пользователь состоит в группе storage.\n\n"
    },
    {
      "title": "Ошибка создания сетевого интерфейса \"host-only\"",
      "level": 3,
      "content": "Убедитесь в том, что все модули ядра VirtualBox загружены (см. Загрузка модулей ядра VirtualBox).\n\n"
    },
    {
      "title": "WinXP: глубина цвета не может превышать 16 цветов",
      "level": 3,
      "content": "Если Вы работаете в 16-битной глубине цвета, то значки будут отображаться некорректно. Тем не менее, при попытке изменить глубину цвета на более высокий уровень, система может ограничить вас с более низким разрешением или просто не позволит вам изменить глубину вообще. Чтобы это исправить, запустите regedit в Windows и добавьте следующий ключ реестра для виртуальной машины Windows XP:\n\n```\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services]\n\"ColorDepth\"=dword:00000004\n```\n\nЗатем обновите глубину цвета в \"Свойствах рабочего стола\". Если ничего не происходит, заставьте экран перерисоваться (например, нажмитеHost+f).\n\n"
    },
    {
      "title": "Использование последовательных портов в гостевой ОС",
      "level": 3,
      "content": "Проверьте наличие прав для доступа к последовательным портам:\n\n```\n$ /bin/ls -l /dev/ttyS*\ncrw-rw---- 1 root uucp 4, 64 Feb  3 09:12 /dev/ttyS0\ncrw-rw---- 1 root uucp 4, 65 Feb  3 09:12 /dev/ttyS1\ncrw-rw---- 1 root uucp 4, 66 Feb  3 09:12 /dev/ttyS2\ncrw-rw---- 1 root uucp 4, 67 Feb  3 09:12 /dev/ttyS3\n```\n\nДобавьте пользователя в группу uucp\n\n```\n# gpasswd -a $USER uucp\n```\n\nи перелогиньтесь.\n\n"
    },
    {
      "title": "Windows 8.x ошибка 0x000000C4",
      "level": 3,
      "content": "Если вы получаете этот код ошибки при загрузке, даже при выбранном типе OS Win 8, попробуйте включить инструкцию процессора CMPXCHG16B:\n\n```\n$ vboxmanage setextradata virtual_machine_name VBoxInternal/CPUM/CMPXCHG16B 1\n```\n\n"
    },
    {
      "title": "Windows 8 VM вылетает при загрузке с ошибкой \"ERR_DISK_FULL\"",
      "level": 3,
      "content": "Если ваша Windows 8 не запускается, VirtualBox выдаёт ошибку что виртуальный диск заполнен, но тем не менее вы уверены что диск не является заполненным, откройте настройки виртуальной машины Настройки>Память>Контроллер: SATA и выберите Use Host I/O Cache.\n\n"
    },
    {
      "title": "Гостевая ОС Linux выдаёт искажённый или запаздывающий звук",
      "level": 3,
      "content": "Аудио драйвер AC97 в ядре linux иногда неправильно считывает время из Virtual Box, что приводит к различным искажениям звука. Для исправления проблемы, создайте файл /etc/modprobe.d со следующим содержанием:\n\n```\noptions snd-intel8x0 ac97_clock=48000\n```\n\n"
    },
    {
      "title": "Гостевая ОС зависает после запуска Xorg",
      "level": 3,
      "content": "Неисправные или отсутствующие драйверы могут привести к остановке после запуска Xorg, см., например, [3] и [4][устаревшая ссылка 2020-08-06 ⓘ]. Попробуйте отключить 3D-ускорение в Настройки> Дисплей, и проверьте, все ли драйверы Xorg установлены.\n\n"
    },
    {
      "title": "Исчезновение пунктов меню и ошибка \"NS_ERROR_FAILURE\"",
      "level": 3,
      "content": "Если после первого запуска машины вы столкнулись с такой ошибкой:\n\n```\nFailed to open a session for the virtual machine debian.\nCould not open the medium '/home/.../VirtualBox VMs/debian/debian.qcow'.\nQCow: Reading the L1 table for image '/home/.../VirtualBox VMs/debian/debian.qcow' failed (VERR_EOF).\nVD: error VERR_EOF opening image file '/home/.../VirtualBox VMs/debian/debian.qcow' (VERR_EOF).\n\nResult Code:\nNS_ERROR_FAILURE (0x80004005)\nComponent:\nMedium\n```\n\nВыйдите из VirtualBox, удалите все файлы новой машины и из файла конфигурации VirtualBox удалите последнюю строку в MachineRegistry меню:\n\n```\n~/.config/VirtualBox/VirtualBox.xml\n```\n\n```\n...\n<MachineRegistry>\n  <MachineEntry uuid=\"{00000000-0000-0000-0000-000000000000}\" src=\"/home/void/VirtualBox VMs/debian/debian.vbox\"/>\n  <MachineEntry uuid=\"{00000000-0000-0000-0000-000000000000}\" src=\"/home/void/VirtualBox VMs/ubuntu/ubuntu.vbox\"/>\n  <MachineEntry uuid=\"{00000000-0000-0000-0000-000000000000}\" src=\"/home/void/VirtualBox VMs/lastvmcausingproblems/lastvmcausingproblems.qcow\"/>\n</MachineRegistry>\n...\n```\n\nЭто иногда происходит при выборе QCOW/QCOW2/QED формата виртуального диска.\n\n"
    },
    {
      "title": "\"Указанный путь не существует. Проверьте путь и попробуйте еще раз.\" Ошибка в гостевой ОС Windows",
      "level": 3,
      "content": "Это сообщение об ошибке часто появляется при работе с расширением .exe который требует привелегий администратора из общей папки в гостевой Windows. См. отчет об ошибке.\n\nЕсть несколько способов обойти ошибку:\n\n1. Отключить UAC с помощью Панель управления -> Центр поддержки -> \"Settings Change User Account Control\" из левой боковой панели -> Установить ползунок \"Никогда не уведомлять» -> OK и перезагрузить ОС\n1. Скопируйте файл из папки общего доступа в гостевую ОС и запустите оттуда\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Руководство пользователя VirtualBox\n- Википедия:VirtualBox\n\n"
    }
  ]
}
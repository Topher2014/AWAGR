{
  "title": "Iwd (Русский)",
  "url": "https://wiki.archlinux.org/title/Iwd_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Настройка сети\n- Настройка беспроводной сети\n- wpa_supplicant (Русский)\n\niwd (iNet wireless daemon) — беспроводной демон для Linux, созданный компанией Intel. Разработчики постарались снизить число внешних библиотек-зависимостей и использовать по максимуму возможности ядра Linux.\n\niwd может работать как отдельно, так и в паре с сетевым менеджером вроде ConnMan, systemd-networkd или NetworkManager.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет iwd.\n\n"
    },
    {
      "title": "Использование",
      "level": 2,
      "content": "Пакет iwd содержит клиентскую программу iwctl, демон iwd и утилиту для мониторинга Wi-Fi сетей iwmon.\n\niwgtkAUR предоставляет графический интерфейс и значок в трее.\n\nЗапустите/включите службу iwd.service. Для управления службой можно использовать команду iwctl или графический интерфейс iwgtk.\n\n"
    },
    {
      "title": "iwctl",
      "level": 3,
      "content": "Запуск в интерактивном режиме:\n\n```\n$ iwctl\n```\n\nВ интерактивном режиме приглашение командной строки имеет вид [iwd]#.\n\n- В интерактивном режиме работает автодополнение команд и названий устройств по нажатию клавиши Tab.\n- Для выхода из интерактивного режима отправьте EOF комбинацией Ctrl+d.\n- Все команды можно использовать как аргументы командной строки в неинтерактивном режиме. Пример: iwctl device wlan0 show.\n\nВывести список доступных команд:\n\n```\n[iwd]# help\n```\n\n"
    },
    {
      "title": "Подключение к сети",
      "level": 4,
      "content": "Если вы не знаете название своего беспроводного интерфейса, запросите список всех Wi-Fi устройств:\n\n```\n[iwd]# device list\n```\n\nЕсли устройство или соответствующий адаптер выключен, включите его:\n\n```\n[iwd]# device устройство set-property Powered on\n```\n\n```\n[iwd]# adapter адаптер set-property Powered on\n```\n\nЗатем запустите сканирование сети (команда ничего не выведет):\n\n```\n[iwd]# station устройство scan\n```\n\nПосле этого можно вывести список обнаруженных сетей:\n\n```\n[iwd]# station устройство get-networks\n```\n\nНаконец, подключитесь к сети:\n\n```\n[iwd]# station устройство connect SSID\n```\n\nЕсли для подключения к сети необходим пароль, то появится соответствующий запрос. В неинтерактивном режиме его можно передать в виде аргумента:\n\n```\n$ iwctl --passphrase пароль station устройство connect SSID\n```\n\n- iwd автоматически сохраняет пароли в каталоге /var/lib/iwd и использует их для автоподключения в будущем. См. #Настройка сети.\n- Если SSID содержит пробелы, то его необходимо обернуть двойными кавычками.\n- iwd поддерживает только PSK-пароли, от 8 до 63 ASCII-символов. В противном случае вы увидите сообщение об ошибке: PMK generation failed. Ensure Crypto Engine is properly configured.\n\n"
    },
    {
      "title": "Подключение к сети через WPS/WSC",
      "level": 4,
      "content": "Если ваша сеть поддерживает подключение по нажатию клавиши (Википедия:Wi-Fi Protected Setup), убедитесь, что сетевое устройство тоже может использовать эту возможность.\n\n```\n[iwd]# wsc list\n```\n\nПосле этого, если ваше устройство было в списке, выполните\n\n```\n[iwd]# wsc устройство push-button\n```\n\nи нажмите кнопку на маршрутизаторе. В принципе кнопку можно нажать и до этого (но не ранее, чем за 2 минуты).\n\nЕсли при таком способе подключения сеть требует подтверждения PIN, изучите вывод команды help на предмет подходящих опций для команды wsc.\n\n"
    },
    {
      "title": "Отключение от сети",
      "level": 4,
      "content": "Отключиться от сети:\n\n```\n[iwd]# station устройство disconnect\n```\n\n"
    },
    {
      "title": "Информация об устройстве и соединении",
      "level": 4,
      "content": "Вывести подробности о Wi-Fi устройстве (например, MAC-адрес):\n\n```\n[iwd]# device устройство show\n```\n\nВывести состояние подключения, в том числе сети, подключённой к устройству:\n\n```\n[iwd]# station устройство show\n```\n\n"
    },
    {
      "title": "Ранее посещённые сети",
      "level": 4,
      "content": "Вывести список сетей, к которым вы подключались в прошлом:\n\n```\n[iwd]# known-networks list\n```\n\n«Забыть» известную сеть:\n\n```\n[iwd]# known-networks SSID forget\n```\n\n"
    },
    {
      "title": "iwgtk",
      "level": 3,
      "content": "iwgtkAUR предоставляет графический интерфейс, через который также можно взаимодействовать с iwd.\n\nЗапуск iwgtk без аргументов откроет окно приложения, с помощью которого можно включать/выключать адаптеры и устройства, изменять режимы их работы, просматривать доступные сети, подключаться к ним и управлять известными сетями.\n\n"
    },
    {
      "title": "Значок в трее",
      "level": 4,
      "content": "Для запуска демона, отображающего значок iwgtk в трее, выполните команду:\n\n```\n$ iwgtk -i\n```\n\nЕсли значок не появился, то, скорее всего, трей не поддерживает StatusNotifierItem API — в этом случае попробуйте использовать слой совместимости, например snixembed-gitAUR\n\nРеализации трея, которые поддерживают StatusNotifierItem и поэтому работают из коробки:\n\n- KDE Plasma\n- swaybar\n- xfce4-panel\n\nРеализации, поддерживающие только XEmbed и потому требующие установки snixembed-gitAUR:\n\n- AwesomeWM\n- i3bar\n\n"
    },
    {
      "title": "Автозапуск",
      "level": 4,
      "content": "Распространённый вариант использования iwgtk — запуск демона, отображающего значок в трее, при входе в систему. Если используемая вами среда рабочего стола поддерживает XDG Autostart, это должно происходить автоматически благодаря файлу iwgtk-indicator.desktop, который устанавливается AUR-пакетом в /etc/xdg/autostart/.\n\nВ качестве альтернативы пакет AUR также предоставляет юнит systemd для запуска демона. Если среда рабочего стола поддерживает юнит graphical-session.target, то для автозапуска iwgtk через systemd включите пользовательский юнит iwgtk.service.\n\n"
    },
    {
      "title": "Настройка сети",
      "level": 2,
      "content": "По умолчанию iwd хранит настройки сети в каталоге /var/lib/iwd. Файл настроек именуется по схеме сеть.тип, где сеть — SSID сети, а, соответственно, .тип — её тип (.open, .psk или .8021x). В файле хранится зашифрованный PreSharedKey, а также (опционально) Passphrase открытым текстом. Файл можно создать вручную, не вызывая iwctl. Кроме того, в файле можно указывать и другие настройки, подробнее см. iwd.network(5).\n\n"
    },
    {
      "title": "WPA-PSK",
      "level": 3,
      "content": "Пример минимального файла настроек для подключения к сети WPA-PSK или WPA2-PSK с SSID «spaceship» и паролем «test1234»:\n\n```\n/var/lib/iwd/spaceship.psk\n```\n\n```\n[Security]\nPreSharedKey=aafb192ce2da24d8c7805c956136f45dd612103f086034c402ed266355297295\n```\n\nPreSharedKey можно вычислить одним из двух методов:\n\n- Указав пароль открытым текстом в файле настроек:\n\n```\n/var/lib/iwd/spaceship.psk\n```\n\n```\n[Security]\nPassphrase=test1234\n```\n\n```\n/var/lib/iwd/spaceship.psk\n```\n\n```\n[Security]\nPassphrase=test1234\nPreSharedKey=aafb192ce2da24d8c7805c956136f45dd612103f086034c402ed266355297295\n```\n\n- Вычислив на основе SSID и пароля утилитами wpa_passphrase (входит в wpa_supplicant) или wpa-pskAUR. Подробнее см. wpa_supplicant#Connecting with wpa_passphrase.\n\n"
    },
    {
      "title": "EAP-PWD",
      "level": 4,
      "content": "Для подключения к производственным сетям с EAP-PWD защитой создайте файл essid.8021x в каталоге /var/lib/iwd со следующим содержимым:\n\n```\n/var/lib/iwd/essid.8021x\n```\n\n```\n[Security]\nEAP-Method=PWD\nEAP-Identity=ваш_email_на_предприятии\nEAP-Password=ваш_пароль\n\n[Settings]\nAutoConnect=true\n```\n\nЕсли автоподключение к точке доступа не требуется, измените значение последней опции на False. После этого подключаться к сети придётся вручную командой iwctl. То же самое касается пароля — если вы не хотите хранить его в файле в открытом виде, то просто удалите соответствующую опцию и подключайтесь вручную.\n\n"
    },
    {
      "title": "EAP-PEAP",
      "level": 4,
      "content": "Как и в случае EAP-PWD, создайте файл essid.8021x. Предварительно выясните, какой CA-сертификат используется в вашей организации. Ниже дан пример файла настроек с MSCHAPv2-аутентификацией:\n\n```\n/var/lib/iwd/essid.8021x\n```\n\n```\n[Security]\nEAP-Method=PEAP\nEAP-Identity=anonymous@realm.edu\nEAP-PEAP-CACert=/path/to/root.crt\nEAP-PEAP-ServerDomainMask=radius.realm.edu\nEAP-PEAP-Phase2-Method=MSCHAPV2\nEAP-PEAP-Phase2-Identity=johndoe@realm.edu\nEAP-PEAP-Phase2-Password=hunter2\n\n[Settings]\nAutoConnect=true\n```\n\nПароли MsCHAPv2 также можно хранить в виде хэша. Правильный хэш md4 может быть вычислен такой командой:\n\n```\n$ iconv -t utf16le | openssl md4 -provider legacy\n```\n\nЗавершите ввод пароля нажатием Ctrl+d (не нажимайте Enter). Полученный хэш поместите в параметр EAP-PEAP-Phase2-Password-Hash.\n\n"
    },
    {
      "title": "TTLS-PAP",
      "level": 4,
      "content": "Как и в случае EAP-PWD, создайте файл essid.8021x. Предварительно выясните, какой CA-сертификат используется в вашей организации. Ниже дан пример файла настроек с PAP-аутентификацией:\n\n```\n/var/lib/iwd/essid.8021x\n```\n\n```\n[Security]\nEAP-Method=TTLS\nEAP-Identity=anonymous@uni-test.de\nEAP-TTLS-CACert=cert.pem\nEAP-TTLS-ServerDomainMask=*.uni-test.de\nEAP-TTLS-Phase2-Method=Tunneled-PAP\nEAP-TTLS-Phase2-Identity=user\nEAP-TTLS-Phase2-Password=password\n\n[Settings]\nAutoConnect=true\n```\n\n"
    },
    {
      "title": "eduroam",
      "level": 4,
      "content": "eduroam предоставляет утилиту для настройки (configuration assistant tool, CAT), но она, к сожалению, не поддерживает iwd. Тем не менее, загружаемый установщик представляет собой обычный Python-скрипт. Из него нетрудно извлечь необходимые параметры настройки, включая сертификат и маску домена.\n\nВ таблице ниже приведены значения параметров iwd, которые используются в переменных установочного сценария CAT.\n\nTable content:\nОпция iwd | Переменная скрипта CAT\nessid | один из Config.ssids\nEAP-Method | Config.eap_outer\nEAP-Identity | Config.anonymous_identity\nEAP-метод-CACert | содержимое Config.CA или абсолютный путь к файлу .pem, содержащему Config.CA\nEAP-метод-ServerDomainMask | один из Config.servers\nEAP-метод-Phase2-Method | Config.eap_inner, если он не равен PAP, иначе Tunneled-PAP\nEAP-метод-Phase2-Identity | имя_пользователя@Config.user_realm\n\nгде метод — это содержимое EAP-Method, которое должно быть TTLS или PEAP. После извлечения всей необходимой информации и преобразования её в настройки iwd можно поместить её в файл с именем essid.8021x, как описано в разделах выше.\n\n- Ваш провайдер может не требовать параметр EAP-Identity, в этом случае укажите для него значение anonymous@Config.user_realm.\n- Если ваш EAP-метод-ServerDomainMask начинается с DNS:, используйте только часть после DNS:.\n\n"
    },
    {
      "title": "Прочие случаи",
      "level": 4,
      "content": "В репозитории разработчиков можно найти много дополнительных примеров.\n\n"
    },
    {
      "title": "Дополнительные настройки",
      "level": 2,
      "content": "Для хранения большинства настроек вполне подойдёт файл /etc/iwd/main.conf. См. iwd.config(5).\n\n"
    },
    {
      "title": "Отключение автоподключения к сети",
      "level": 3,
      "content": "Создайте/отредактируйте файл /var/lib/iwd/сеть.тип:\n\n```\n/var/lib/iwd/spaceship.psk (для примера)\n```\n\n```\n[Settings]\nAutoConnect=false\n```\n\n"
    },
    {
      "title": "Отключение сканирования сетей",
      "level": 3,
      "content": "По умолчанию, если iwd ни к чему не подключён, он периодически выполняет сканирование для поиска доступных сетей. Чтобы это отключить (и сканировать вручную при необходимости), создайте/отредактируйте файл /etc/iwd/main.conf:\n\n```\n/etc/iwd/main.conf\n```\n\n```\n[Scan]\nDisablePeriodicScan=true\n```\n\n"
    },
    {
      "title": "Включение встроенной настройки сети",
      "level": 3,
      "content": "С версии 0.19 iwd может выполнять привязку IP-адресов и настраивать маршруты с помощью встроенного DHCP-клиента или в соответствии со статической конфигурацией. Это неплохая альтернатива использованию отдельных DHCP-клиентов.\n\nЧтобы активировать возможности iwd по настройке сети, добавьте следующие строки в /etc/iwd/main.conf:\n\n```\n/etc/iwd/main.conf\n```\n\n```\n[General]\nEnableNetworkConfiguration=true\n```\n\nТакже можно задать параметр маршрутизации RoutePriorityOffset:\n\n```\n/etc/iwd/main.conf\n```\n\n```\n[Network]\nRoutePriorityOffset=300\n```\n\n"
    },
    {
      "title": "Поддержка IPv6",
      "level": 4,
      "content": "С версии 1.10 iwd имеет поддержку IPv6, но в версиях до 2.0 она по умолчанию она отключена. С версии 2.0 она включена по умолчанию.\n\nДля отключения добавьте следующие строки в файл настроек:\n\n```\n/etc/iwd/main.conf\n```\n\n```\n[Network]\nEnableIPv6=false\n```\n\nДля включения на версиях до 2.0:\n\n```\n/etc/iwd/main.conf\n```\n\n```\n[Network]\nEnableIPv6=true\n```\n\nЭта настройка должна быть включена, если вы желаете использовать DHCPv6 или статическую IPv6-конфигурацию. Её также можно задать для отдельной сети.\n\n"
    },
    {
      "title": "Статический IP-адрес в настройках сети",
      "level": 4,
      "content": "Добавьте следующие строки в файл /var/lib/iwd/сеть.тип:\n\n```\n/var/lib/iwd/spaceship.psk\n```\n\n```\n[IPv4]\nAddress=192.168.1.10\nNetmask=255.255.255.0\nGateway=192.168.1.1\nBroadcast=192.168.1.255\nDNS=192.168.1.1\n```\n\n"
    },
    {
      "title": "Выбор DNS-менеджера",
      "level": 4,
      "content": "На данный момент iwd поддерживает два DNS-менеджера — systemd-resolved и resolvconf.\n\nНастройки для systemd-resolved:\n\n```\n/etc/iwd/main.conf\n```\n\n```\n[Network]\nNameResolvingService=systemd\n```\n\nДля resolvconf:\n\n```\n/etc/iwd/main.conf\n```\n\n```\n[Network]\nNameResolvingService=resolvconf\n```\n\n"
    },
    {
      "title": "Разрешить всем пользователям считывать состояние",
      "level": 3,
      "content": "Если вы хотите разрешить любому пользователю читать информацию о состоянии, но не изменять настройки, создайте файл настроек D-Bus:\n\n```\n/etc/dbus-1/system.d/iwd-allow-read.conf\n```\n\n```\n<!-- Allow any user to read iwd status information. Overrides some part\n     of /usr/share/dbus-1/system.d/iwd-dbus.conf. -->\n\n<!DOCTYPE busconfig PUBLIC \"-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN\"\n \"http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd\">\n<busconfig>\n\n  <policy context=\"default\">\n    <deny send_destination=\"net.connman.iwd\"/>\n    <allow send_destination=\"net.connman.iwd\" send_interface=\"org.freedesktop.DBus.Properties\" send_member=\"GetAll\" />\n    <allow send_destination=\"net.connman.iwd\" send_interface=\"org.freedesktop.DBus.Properties\" send_member=\"Get\" />\n    <allow send_destination=\"net.connman.iwd\" send_interface=\"org.freedesktop.DBus.ObjectManager\" send_member=\"GetManagedObjects\" />\n    <allow send_destination=\"net.connman.iwd\" send_interface=\"net.connman.iwd.Device\" send_member=\"RegisterSignalLevelAgent\" />\n    <allow send_destination=\"net.connman.iwd\" send_interface=\"net.connman.iwd.Device\" send_member=\"UnregisterSignalLevelAgent\" />\n  </policy>\n\n</busconfig>\n```\n\n"
    },
    {
      "title": "Подробная отладка TLS",
      "level": 3,
      "content": "Это может пригодиться при решении проблем с MSCHAPv2 или TTLS. Задайте следующую переменную окружения с помощью drop-in файла:\n\n```\n/etc/systemd/system/iwd.service.d/tls-debug.conf\n```\n\n```\n[Service]\nEnvironment=IWD_TLS_DEBUG=TRUE\n```\n\nПосле этого проверьте логи iwd, выполнив journalctl -u iwd.service с правами root.\n\n"
    },
    {
      "title": "Перезапуск iwd.service после загрузки",
      "level": 3,
      "content": "Сообщалось, что на некоторых машинах для работы службы iwd.service необходимо перезапустить её после загрузки. Смотрите FS#63912 и тему на форуме. Вероятно, это происходит потому, что ядро Linux и службы загружаются слишком быстро и iwd запускается до того, как беспроводная сетевая карта успеет включиться. В качестве обходного пути создайте drop-in файл, добавляющий задержку перед запуском службы:\n\n```\n[Service]\nExecStartPre=/usr/bin/sleep 2\n```\n\nЗатем выполните daemon-reload.\n\n"
    },
    {
      "title": "Проблемы с подключением после перезагрузки",
      "level": 3,
      "content": "Низкая энтропия системы может вызвать проблемы с подключением, особенно после перезагрузки. Рекомендации по увеличению энтропии можно найти в статье Random number generation.\n\n"
    },
    {
      "title": "udev не переименовывает беспроводное устройство",
      "level": 3,
      "content": "С версии 1.0 iwd отключает присвоение беспроводным интерфейсам предсказуемых имён. Для этого используется link-файл systemd, который запрещает udev присваивать беспроводным интерфейсам типовые имена wlp#s#:\n\n```\n/usr/lib/systemd/network/80-iwd.link\n```\n\n```\n[Match]\nType=wlan\n\n[Link]\nNamePolicy=keep kernel\n```\n\nВ результате после перезагрузки интерфейсы будут иметь имена wlan#. Это позволяет избежать ситуации гонок между iwd и udev при переименовании интерфейсов[устаревшая ссылка 2024-10-12 ⓘ].\n\nЕсли это привело к каким-то нежелательным последствиям, link-файл можно замаскировать с помощью символической ссылки:\n\n```\n# ln -s /dev/null /etc/systemd/network/80-iwd.link\n```\n\n"
    },
    {
      "title": "Нет DHCP в режиме точки доступа",
      "level": 3,
      "content": "Когда iwd работает в режиме точки доступа, клиенты могут не получить IP-адрес по протоколу DHCP. Нужно разрешить настройку сети с помощью iwd на управляемых интерфейсах:\n\n```\n/etc/iwd/main.conf\n```\n\n```\n[General]\nEnableNetworkConfiguration=True\n```\n\nСоздайте файл, если его ещё не существует.\n\n"
    },
    {
      "title": "WiFi постоянно отключается из-за сбоя iwd",
      "level": 3,
      "content": "Некоторые пользователи сталкиваются с обрывом связи WiFi и переподключениями, но через время подключиться всё-таки удаётся.\n\nПользователи сообщают о падениях ([1]) службы iwd.service.\n\nОсновная причина проблемы заключается в наличии нескольких конфликтующих служб, управляющих одними и теми же сетевыми подключениями. Для решения этой проблемы проверьте, не включены ли они одновременно.\n\n"
    },
    {
      "title": "Ошибка при загрузке закрытого ключа клиента",
      "level": 3,
      "content": "Для загрузки файлов ключей iwd использует модуль ядра pkcs8_key_parser. Он должен загружаться автоматически через systemd-modules-load.service(8) благодаря файлу /usr/lib/modules-load.d/pkcs8.conf, но если iwd был установлен только что, то модуль не будет загружен до перезагрузки системы.\n\nЕсли при попытке подключения к сетям WPA Enterprise в журнале появляются сообщения типа Error loading client private key /путь/к/ключу, загрузите модуль вручную:\n\n```\n# modprobe pkcs8_key_parser\n```\n\n"
    },
    {
      "title": "iwd постоянно переподключается к разным точкам доступа",
      "level": 3,
      "content": "iwd будет подключаться к другим известным точкам доступа, если соединение с текущей точкой доступа слишком плохое.\n\nЭто записывается в журнал: wlan0: deauthenticating from xx:xx:xx:xx:xx:xx by local choice (Reason: 3=DEAUTH_LEAVING)\n\nПроверьте мощность сигнала:\n\n```\niwctl station wlan0 show | grep RSSI\n```\n\nВы можете изменить порог мощности, чтобы разрешить использование плохого соединения. По умолчанию RoamThreshold имеет значение -70, а RoamThreshold5G имеет значение -76.\n\n```\n/etc/iwd/main.conf\n```\n\n```\n[General]\nRoamThreshold=-75\nRoamThreshold5G=-80\n```\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Getting Started with iwd[устаревшая ссылка 2024-10-12 ⓘ]\n- Network Configuration Settings[устаревшая ссылка 2024-10-12 ⓘ]\n- More Examples for WPA Enterprise\n- The IWD thread on the Arch Linux Forums\n- 2017 Update on new WiFi daemon for Linux by Marcel Holtmann - YouTube\n- The New Wi-Fi Experience for Linux - Marcel Holtmann, Intel - YouTube\n- How to set up a simple access point with iwd[устаревшая ссылка 2024-10-12 ⓘ]\n\n"
    }
  ]
}
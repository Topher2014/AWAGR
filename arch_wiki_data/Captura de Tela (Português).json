{
  "title": "Captura de Tela (Português)",
  "url": "https://wiki.archlinux.org/title/Captura_de_Tela_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Key binding\n\nThis article lists and describes screenshot and screencast software.\n\n"
    },
    {
      "title": "Aplicativos de captura",
      "level": 3,
      "content": "- CoreShot — Simples e leve aplicativo de captura de tela para X11. Parte da C-Suite.\n\n- Deepin Screenshot — Ferramenta de captura de tela bastante fácil de usar, agora obsoleto e fundido no Deepin Screen Recorder. Um problema conhecido com a funcionalidade do clipboard é corrigido por deepin-screenshot-copy-patchAUR[link quebrado: package not found].\n\n- Escrotum — Captura de tela usando python e gtk3, inspirado no scrot.\n\n- Flameshot — Software baseado em Qt5 para captura interativa de imagens de tela. Seleccione a área desejada, desenhe com diferentes ferramentas e desfrute das capacidades de personalização.\n\n- GNOME Screenshot — Aplicativo de captura de tela para o GNOME.\n\n- grim — Captura de tela para compositores Wayland.\n\n- gscreenshot — Utilitário simples de captura de tela GTK com delay, seleção e funcionalidade \"copiar para a área de transferência\".\n\n- HotShots — Aplicação para capturar tela e guardá-los numa variedade de formatos de imagem, bem como adicionar anotações e dados gráficos (setas, linhas, textos, ...).\n\n- imgur-screenshot — Faz uma captura de tela e faz upload para o imgur + extras.\n\n- ksnip — Ksnip é uma ferramenta de captura de tela multiplataforma baseada em Qt que fornece muitas características de anotação para as suas capturas de tela.\n\n- Lightscreen — Ferramenta simples para automatizar o tedioso processo de guardar e catalogar capturas de tela, funciona como um processo de fundo oculto que é iniciado com uma (ou várias) teclas de atalho e depois guarda um cópia de captura de tela no disco de acordo com as preferências do utilizador.\n\n- LXQt Screenshot — Aplicativo de captura de tela para LXQt. Use com lximage-qt --screenshot.\n\n- maim — Utilitário simples de linha de comando que tira capturas de tela. Destina-se a substituir o scrot e funciona melhor do que o scrot em muitos aspectos.\n\n- MATE Screenshot — Aplicativo de captura de tela para MATE desktop.\n\n- menyoki — Captura de {tela,gravação} e executar ImageOps na linha de comando.\n\n- mss — Um módulo Python xrandr-consciente com um CLI mínimo.\n\n- Pantheon Screenshot — Aplicativo de captura de tela para elementary OS.\n\n- ScreenCloud — Captura uma imagem da tela inteira ou selecionar uma área e depois carregar a imagem para imgur+auth. tem plugins e bandeja do sistema.\n\n- ScreenGrab — Aplicação multiplataforma concebida para tirar rapidamente fotografias de ecrã (Qt).\n\n- Scrot — Aplicativos simples de captura de tela para X.\n\n- Shotgun — Aplicativo minimalista de captura de tela escrito em Rust. Segundo o autor, é duas vezes mais rápido que a maim..\n\n- Shutter — Aplicativo de captura de tela rico em funcionalidades e programa de edição. Suporte delay.\n\n- Spectacle — KDE aplicação para capturar tela inteira. É capaz de capturar imagens de toda a área de trabalho, uma única janela, uma seção de uma janela, uma região rectangular seleccionada ou uma região de área livre. Parte de kde-graphics.\n\n- Xfce4 Screenshooter — Aplicação e plugin do painel Xfce4 para tirar imagens sobre todo a tela, a janela ativa ou uma região selecionada. Parte de xfce4-goodies.\n\n- xwd — Utilitário de dumping de imagem do Sistema X Window\n\n"
    },
    {
      "title": "xwd",
      "level": 4,
      "content": "xwd(1) pertence ao pacote xorg-xwd.\n\nFazer uma captura da tela inteira:\n\n```\n$ xwd -root -out screenshot.xwd\n```\n\n"
    },
    {
      "title": "scrot",
      "level": 4,
      "content": "scrot permite tirar capturas de tela via linha de comando e oferece características como um atraso de tempo definido pelo usuário. Salvo instruções em contrário, guarda o arquivo no diretório de trabalho atual.\n\n```\n$ scrot -t 20 -d 5\n```\n\nO comando acima salva um arquivo .png, juntamente com uma miniatura (20% do original), para publicação na Web. Fornece um atraso de 5 segundos antes de ser capturado neste caso.\n\nTambém pode usar formatação padrão de data e hora ao salvar em um arquivo. por exemplo.,\n\n```\n$ scrot ~/screenshots/%Y-%m-%d-%T-screenshot.png\n```\n\nguarda a captura de tela em um nome de arquivo com o ano, mês, data, horas, minutos e segundos atuais para uma pasta no seu diretório pessoal chamada \"screenshots\".\n\nVeja scrot(1) para mais informações.\n\n.}}\n\n"
    },
    {
      "title": "escrotum",
      "level": 4,
      "content": "escrotum-gitAUR Captura de tela usando PyGTK, inspirado no scrot\n\nCriado porque o scrot tem falhas quando o modo de seleção é usado com janelas em atualização.\n\nComo a interface da linha de comando é quase a mesma que o scrot, pode ser usada como um substituto da mesma.\n\n"
    },
    {
      "title": "maim",
      "level": 4,
      "content": "maim Tem o objetivo de ser um scrot melhorado.\n\nSalva a tela completa para arquivo:\n\n```\n$ maim filename\n```\n\nComando para seleção e salvar para o arquivo:\n\n```\n$ maim --select filename\n```\n\nSalvar a janela ativa em um arquivo, assumindo que xdotool está instalado:\n\n```\n$ maim --window $(xdotool getactivewindow) filename\n```\n\nComando para seleção, salvar sem cursor, e guardar na área de transferência, assumindo que xclip} está instalado:\n\n```\n$ maim -s | xclip -selection clipboard -t image/png -i\n```\n\n"
    },
    {
      "title": "Spectacle",
      "level": 4,
      "content": "Se você usa KDE, Você talvez queira usar Spectacle.\n\nSpectacle pertence ao pacote spectacle.\n\n"
    },
    {
      "title": "Xfce Screenshooter",
      "level": 4,
      "content": "Se você usa Xfce você pode usar xfce4-screenshooter e pode adiconar uma tecla de atalho:\n\nXfce Menu > Settings > Keyboard > Application Shortcuts\n\nSe você quer pular o aviso de captura, escreva $ xfce4-screenshooter -h no terminal para mais opções.\n\n"
    },
    {
      "title": "GNOME",
      "level": 4,
      "content": "GNOME usuários podem ultilizar o atalho PrintScreen ou clicar no icone da câmera no menu do sistema. De forma opicional você pode instalar o pacote gnome-screenshot e abrir via Apps > Accessories > Take Screenshot.\n\nO GNOME oferece de gravação de tela integrada com a combinação de teclas Ctrl+Shift+Alt+r}. Um círculo vermelho é exibido no canto inferior direito da tela quando a gravação está em andamento. Depois de terminada a gravação, um arquivo chamado Screencast de %d%u-%c.webm} é guardado no diretório {ic|Videos}}. Para utilizar a função screencast, os pacotes gst-plugin-pipewire} e gst-plugins-good} precisam de ser instalados.\n\n"
    },
    {
      "title": "Cinnamon",
      "level": 4,
      "content": "A instalação padrão de Cinnamon não fornece um utilitário de captura de tela. A instalação de gnome-screenshot} irá permitir capturas de tela através do Menu > Acessórios > Screenshot ou com a tecla de atalho PrintScreen}.\n\n"
    },
    {
      "title": "Outros ambientes de trabalho ou gerenciadores de janela",
      "level": 4,
      "content": "Para outros ambientes de trabalho como LXDE ou gerenciadores de janelas como Openbox e Compiz, é possível adicionar os comandos acima à tecla de atalho para tirar uma captura de tela. Por exemplo,\n\n```\n$ import -window root ~/Pictures/$(date '+%Y%m%d-%H%M%S').png\n```\n\nNote-se que import faz parte do pacote imagemagick. Adicionar o comando acima à tecla PrintScreen} ao Compiz permite levar a captura de tela para a pasta Pictures de acordo com a data e hora. Note que o arquivo rc.xml no Openbox não compreende vírgulas; assim, para ligar esse comando à tecla {ic|PrintScreen}}} no Openbox, é necessário adicionar o seguinte à secção do teclado do seu ficheiro {ic|rc.xml}}:\n\n```\nrc.xml\n```\n\n```\n<!-- Screenshot -->\n    <keybind key=\"Print\">\n      <action name=\"Execute\">\n        <command>sh -c \"import -window root ~/Pictures/$(date '+%Y%m%d-%H%M%S').png\"</command>\n      </action>\n    </keybind>\n```\n\nSe o Print acima não funcionar, veja Entrada do teclado e usar diferentes keyym ou keycode.\n\n"
    },
    {
      "title": "ImageMagick/GraphicsMagick",
      "level": 4,
      "content": "Veja ImageMagick#Screenshot taking.\n\n"
    },
    {
      "title": "GIMP",
      "level": 4,
      "content": "Você também pode realizar capturas de tela com GIMP (File > Create > Screenshot...).\n\n"
    },
    {
      "title": "imlib2",
      "level": 4,
      "content": "imlib2 fornece um imlib2_grab binário para tirar print. Para tirar uma captura de tela da tela inteira, digite:\n\n```\n$ imlib2_grab screenshot.png\n```\n\n"
    },
    {
      "title": "FFmpeg",
      "level": 4,
      "content": "Veja FFmpeg#Screen capture.\n\n"
    },
    {
      "title": "Screencast software",
      "level": 2,
      "content": "Veja também FFmpeg#Screen capture e Wikipedia:Comparison of screencasting software.\n\nOs utilitários Screencast permitem que você crie um vídeo de sua área de trabalho ou janelas individuais.\n\n- Byzanz — Aplicativo simples de transmissão que permite criar gifs.\n\n- Deepin Screen Recorder — Gravador de tela para Deepin desktop.\n\n- FFcast — Gravador de tela usando ffmpeg escrito em bash.\n\n- GPU Screen Recorder — Gravador de tela que captura sua tela na GPU apenas para melhorar enormemente o desempenho, comparável ao Nvidia ShadowPlay. Suporta streaming ao vivo e buffer de replay também.\n\n- Green Recorder — Simples e funcional gravador de tela para desktop.\n\n- Kazam — Programa de gravação com o design em mente. Lida com configurações de várias telas.\n\n- Kooha — Gravador de tela simples com interface minimalista em GTK.\n\n- menyoki — Screen{shot,cast} e realiza ImageOps via linha de comando.\n\n- Open Broadcaster Software — Aplicativo para gravação e transmissão.\n\n- obs-gnome-screencastAUR – plugin para GNOME screencast, suporta Wayland\n\n- Peek — Ferramenta simples de transmissão de tela que produz animações GIF, APNG, WebM ou MP4. Não mais em desenvolvimento (Jan 2023).\n\n- RecApp — Screencaster de fácil utilização escrito em GTK. Usando módulos GStreamer gratuitos e não dependentes de FFmpeg. Não está mais em desenvolvimento..\n\n- RecordItNow — Plugin based desktop recorder para KDE 4.\n\n- RecordMyDesktop — Utilitário fácil de usar que registra sua área de trabalho no formato ogg com uma interface CLI, GTK ou Qt. (desenvolvimento inativo)\n\n- screencast — Interface de linha de comando para gravar um desktop X11 usando FFmpeg, tendo suporte para gravação offline e transmissão ao vivo.\n\n- Screencast — Gravador de screencast simples projetado para Elementary OS.\n\n- SimpleScreenRecorder — Gravador de tela rico em recursos escrito em C++/Qt5 que suporta X11 e OpenGL.\n\n- VokoScreen — Ferramenta GUI simples de screencast usando GStreamer.\n\n- Wayfarer — Gravador de tela em GTK para GNOME / Wayland / Pipewire.\n\n- XVidCap — Aplicação utilizada para gravar um screencast ou gravação digital de uma saída de tela do Sistema X Window com uma narração de áudio.\n\n"
    },
    {
      "title": "Wayland",
      "level": 2,
      "content": "A captura da tela em compositor baseado em Wlroots pode ser feita usando grim ou grimshotAUR[link quebrado: package not found]} (o pacote sway} também fornece grimshot em /usr/share/sway/scripts/) para capturas de tela e wf-recorder} (ou wf-recorder-gitAUR}) para vídeo; wlrobs-hgAUR} é um plugin obs-studio} que permite a captura de telas em compositores baseados em wlroots. Opcionalmente, o slurp pode ser usado para selecionar a parte da tela a ser capturada.\n\nTirar uma print da tela inteira:\n\n```\n$ grim screenshot.png\n```\n\nTirar uma print da janela atual:\n\n```\n$ grim -g \"$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | \"\\(.x),\\(.y) \\(.width)x\\(.height)\"')\" screenshot.png\n```\n\nTirar uma print de uma área da tela:\n\n```\n$ grim -g \"$(slurp)\" screenshot.png\n```\n\nTirar uma print da tela e enviando para área de transferência usando wl-clipboard}:\n\n```\n$ grim -g \"$(slurp)\" - | wl-copy\n```\n\nGravar um video da tela:\n\n```\n$ wf-recorder -f recording.mp4\n```\n\nGravar um video de uma área da tela:\n\n```\n$ wf-recorder -g \"$(slurp)\"\n```\n\n- slurpshot é uma captura de tela interativa que utiliza bemenu.\n- Para usar uma ferramenta de edição e desenho de imagem de tela pós-captura, como swappy: grim -g \"$(slurp)\" - | swappy -f -\n\nAlém disso, alguns programas mencionados acima funcionam em Wayland (por exemplo, ksnip, green-recorderAUR}). Para que o KDE's spectacle funcione corretamente, você pode ter que excluir ~/.local/share/applications/org.kde.spectacle.desktop; em qualquer caso, Spectacle deve funcionar com Window Under Cursor (Meta+Ctrl+Print) selecionado em Caption Mode Area.\n\n"
    },
    {
      "title": "Via GNOME screencast",
      "level": 4,
      "content": "green-recorderAUR, obs-gnome-screencastAUR e obs-studio suporta gravação de tela no Wayland usando o recurso de transmissão de tela do GNOME.\n\n"
    },
    {
      "title": "Através de uma webcam virtual de vídeo",
      "level": 4,
      "content": "Veja v4l2loopback#Casting Wayland using wf-recorder.\n\n- Este método foi testado com zoomAUR (cliente desktop rodando sob xorg-xwayland} e BigBlueButton sob chromium}) (sob firefox a resolução é realmente baixa); skypeforlinux-binAUR detecta o dispositivo de vídeo virtual VirtualVideoDevice, mas emite uma tela em branco.\n- O exemplo usa wf-recorder} mas você pode usar qualquer software, basta alimentar a saída para o dispositivo virtual.\n\nInstale wf-recorder} (ou wf-recorder-gitAUR}) e v4l2loopback-dkms}}. Carregue o módulo de kernel v4l2loopback com os seguintes parâmetros:\n\n```\n# modprobe v4l2loopback exclusive_caps=1 card_label=VirtualVideoDevice\n```\n\nVerificar se foi criado um novo dispositivo de vídeo virtual VirtualVideoDevice:\n\n```\n$ v4l2-ctl --list-devices\n```\n\n```\n...\nVirtualVideoDevice (platform:v4l2loopback-000):\n\t/dev/video2\n...\n```\n\nComece a gravar a tela com wf-recorder} e alimente a saída para o novo dispositivo de vídeo virtual VirtualVideoDevice} criado por v4l2loopback}:\n\n```\n$ wf-recorder --muxer=v4l2 --codec=rawvideo --file=/dev/video2 -x yuv420p\n```\n\nO espaço de cor yuv420p é necessário para que a saída de vídeo seja compatível com o Zoom [1].\n\nAgora você pode selecionar o dispositivo de vídeo virtual acima como sua \"webcam\" em aplicações de videochamada/video conferência (o dispositivo é chamado VirtualVideoDevice). Você pode usar ffplay} (parte de ffmpeg}, mpv, ou gst-launch} (parte do gstreamer) para verificar se o dispositivo de vídeo virtual de fato produz seu screenshare:\n\n```\n$ ffplay /dev/video2\n```\n\n```\n$ mpv av://v4l2:/dev/video2\n```\n\n```\n$ gst-launch-1.0 -v v4l2src device=/dev/video2 ! glimagesink\n```\n\nSe o Firefox não conseguir ler o fluxo de vídeo e imprimir uma mensagem como \"AbortError\": Falha no início do vídeo\", tente pré-carregar v4l2compat.so}:\n\n```\n$ LD_PRELOAD=/usr/lib/v4l1compat.so firefox\n```\n\nComo explicado acima, wf-recorder} é capaz de gravar apenas uma parte da tela selecionando primeiro uma região com slurp}. Para usar esta funcionalidade para compartilhar uma região/janela de aplicação específica através de um dispositivo de vídeo virtual, comece a gravar a tela com o seguinte comando modificado:\n\n```\n$ wf-recorder -g \"$(slurp)\" --muxer=v4l2 --codec=rawvideo --file=/dev/video2 -x yuv420p\n```\n\nApós selecionar uma região da tela, você poderá acessar o fluxo de vídeo através do dispositivo de vídeo virtual /dev/video2 como acima.\n\n"
    },
    {
      "title": "Via o protocolo WebRTC",
      "level": 4,
      "content": "Veja PipeWire#WebRTC screen sharing.\n\nChromium e Firefox devem agora poder acessar o compartilhamento de tela. Você pode verificar isto através de Mozilla's getUserMedia / getDisplayMedia Test Page.\n\n"
    },
    {
      "title": "Terminal",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n"
    },
    {
      "title": "Captura com códigos ANSI",
      "level": 3,
      "content": "Você pode usar o comando script(1)}, parte do pacote util-linux}. Basta executar o comando script e a partir desse momento, toda a saída será salva no arquivo typescript, incluindo os códigos ANSI.\n\nUma vez terminado, basta executar o exit e o typescript} estaria pronto. O arquivo resultante pode ser convertido para HTML usando o pacote ansi2htmlAUR (não confundir com ansi2html de python-ansi2html).\n\nPara converter o arquivo typescript para typescript.html, faça o seguinte:\n\n```\n$ ansi2html --bg=dark < typescript > typescript.html\n```\n\nAtualmente, os comandos 'some podem ser canalizados diretamente para ansi2html:\n\n```\n$ ls --color|ansi2html --bg=dark >output.html\n```\n\nIsso não funciona em todos os casos, portanto, nesses casos, é obrigatório usar script.\n\n"
    },
    {
      "title": "Framebuffer",
      "level": 3,
      "content": "Instale o framebuffer e use fbgrab ou fbdumpAUR para fazer uma captura de tela.\n\n"
    },
    {
      "title": "Console Virtual",
      "level": 3,
      "content": "Se você quiser apenas capturar o texto no console e não uma imagem real, você pode usar setterm}, que faz parte do pacote util-linux}. O seguinte comando irá despejar o conteúdo textual do console virtual 1 em um arquivo screen.dump} no diretório atual:\n\n```\n# setterm -dump 1 -file screen.dump\n```\n\nA permissão de root é necessária porque o conteúdo de /dev/vcs1 precisa ser lido.\n\n"
    }
  ]
}
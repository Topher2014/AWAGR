{
  "title": "Desktop entries (Русский)",
  "url": "https://wiki.archlinux.org/title/Desktop_entries_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Спецификация XDG Desktop Entry определяет стандарт для приложений для интеграции в среду рабочего стола. Ярлыки приложений — это файлы конфигурации, описывающие, как запускается приложение и какие данные оно может обрабатывать. Они также настраивают, как и с каким значком отображаются приложения в меню, по спецификации XDG Desktop Menu.\n\n"
    },
    {
      "title": "Основы",
      "level": 2,
      "content": "Каждый ярлык должен иметь ключи Type и Name и может опционально определять свой вид в меню приложений.\n\nСуществует три типа ярлыков:\n\nВ следующих разделах кратко описывается, как они создаются и проверяются.\n\n"
    },
    {
      "title": "Ярлык приложения",
      "level": 2,
      "content": "Ярлыки приложений, или файлы .desktop, как правило, представляют собой комбинацию метаинформационных ресурсов и ярлыков приложений. Эти файлы обычно находятся в /usr/share/applications/ или /usr/local/share/applications/ для приложений, установленных в системе, или ~/.local/share/applications/ для пользовательских приложений. Пользовательские ярлыки имеют приоритет над системными ярлыками.\n\n"
    },
    {
      "title": "Пример файла",
      "level": 3,
      "content": "Ниже приведён пример его структуры с дополнительными комментариями. Этот пример предназначен только для быстрого ознакомления и не демонстрирует все возможные ключи. Полный список ключей можно найти в спецификации freedesktop.org.\n\n```\n[Desktop Entry]\n\n# Тип ярлыка\nType=Application\n\n# Версия спецификации ярлыков приложений, которой соответствует этот файл\nVersion=1.0\n\n# Название приложения\nName=jMemorize\n\n# Комментарий, который может/будет использоваться в качестве подсказки\nComment=Flash card based learning tool\n\n# Путь к папке, в которой выполняется исполняемый файл\nPath=/opt/jmemorise\n\n# Исполняемый файл приложения, возможно с аргументами.\nExec=jmemorize\n\n# Имя значка, который будет использоваться для отображения этого ярлыка.\nIcon=jmemorize\n\n# Описывает, должно ли это приложение запускаться в терминале или нет\nTerminal=false\n\n# Описывает категории, в которых должна отображаться этот ярлык\nCategories=Education;Languages;Java;\n```\n\n"
    },
    {
      "title": "Определение ключа",
      "level": 3,
      "content": "Все распознаваемые ключи описаны на сайте freedesktop.org. Например, ключ Type определяет три типа ярлыков: Application (тип 1), Link (тип 2) и Directory (тип 3).\n\n- Ключ Version обозначает версию спецификации, которой соответствует файл ярлыка, а не версию приложения.\n\n- Name, GenericName и Comment часто содержат избыточные значения в виде комбинаций из них, например:\n\n```\nName=Pidgin Internet Messenger\nGenericName=Internet Messenger\n```\n\nили\n\n```\nName=NoteCase notes manager\nComment=Notes Manager\n```\n\nЭтого следует избегать, поскольку это только будет запутывать пользователей. Ключ Name должен содержать только имя или хотя бы аббревиатуру/акроним, если они доступны.\n\n- GenericName должен указывать на категорию приложения, которая обозначает особый признак этого конкретного приложения (например, Firefox это «Веб-браузер»).\n- Comment должен содержать любую полезную дополнительную информацию.\n\n"
    },
    {
      "title": "Проверка",
      "level": 3,
      "content": "Некоторые ключи со временем объявляются устаревшими. Вы можете проверить наличие устаревших ключей в своих ярлыках с помощью инструмента desktop-file-validate(1), который является частью пакета desktop-file-utils. Чтобы проверить, выполните\n\n```\n$ desktop-file-validate ваш-desktop-файл\n```\n\nЭто даст вам очень подробные и полезные предупреждения и сообщения об ошибках.\n\n"
    },
    {
      "title": "Установка",
      "level": 3,
      "content": "Используйте desktop-file-install(1) для установки ярлыка в целевой каталог. Например:\n\n```\n$ desktop-file-install --dir=$HOME/.local/share/applications ~/app.desktop\n```\n\n"
    },
    {
      "title": "Обновление базы данных ярлыков",
      "level": 3,
      "content": "Чтобы ярлыки из каталога ~/.local/share/applications заработали, выполните следующую команду:\n\n```\n$ update-desktop-database ~/.local/share/applications\n```\n\n"
    },
    {
      "title": "Значки",
      "level": 2,
      "content": "Смотрите также спецификация тем значков.\n\n"
    },
    {
      "title": "Распространённые форматы изображений",
      "level": 3,
      "content": "Ниже приведён краткий обзор форматов изображений, обычно используемых для значков.\n\nTable content:\nРасширение | Полное имя и/или описание | Тип графики | Формат-контейнер | Поддерживаемый\n.png | Portable Network Graphics | Растровая | Нет | Да\n.svg(z) | Scalable Vector Graphics | Векторная | Нет | Да (опционально)\n.xpm | X PixMap | Растровая | Нет | Да (устаревший)\n.gif | Graphics Interchange Format | Растровая | Нет | Нет\n.ico | MS Windows Icon Format | Растровая | Да | Нет\n.icns | Apple Icon Image | Растровая | Да | Нет\n\n"
    },
    {
      "title": "Преобразование значков",
      "level": 3,
      "content": "Если вы наткнулись на значок, который находится в формате, который не поддерживается стандартом freedesktop.org (например, gif или ico), вы можете использовать инструмент convert (который является частью пакета imagemagick), чтобы преобразовать его в поддерживаемый/рекомендованный формат, например:\n\n```\n$ convert <icon name>.gif <icon name>.png\n```\n\nЕсли вы преобразуете из формата-контейнера, такого как ico, вы получите все изображения, которые содержались в файле ico в форме <icon name>-<number>.png. Если вы хотите узнать размер изображения или количество изображений в файле контейнера, например ico, вы можете использовать инструмент identify (также часть пакета imagemagick):\n\n```\n$ identify /usr/share/vlc/vlc48x48.ico\n```\n\n```\n/usr/share/vlc/vlc48x48.ico[0] ICO 32x32 32x32+0+0 8-bit DirectClass 84.3kb\n/usr/share/vlc/vlc48x48.ico[1] ICO 16x16 16x16+0+0 8-bit DirectClass 84.3kb\n/usr/share/vlc/vlc48x48.ico[2] ICO 128x128 128x128+0+0 8-bit DirectClass 84.3kb\n/usr/share/vlc/vlc48x48.ico[3] ICO 48x48 48x48+0+0 8-bit DirectClass 84.3kb\n/usr/share/vlc/vlc48x48.ico[4] ICO 32x32 32x32+0+0 8-bit DirectClass 84.3kb\n/usr/share/vlc/vlc48x48.ico[5] ICO 16x16 16x16+0+0 8-bit DirectClass 84.3kb\n```\n\nКак вы можете видеть, на примере файла ico, что по названию можно предположить одно изображение размером 48x48, но на самом деле оно содержит не менее 6 разных размеров, из которых один больше 48x48, а именно 128x128.\n\nКроме того, вы можете использовать icotool (из icoutils) для извлечения png-изображений из контейнера ico:\n\n```\n$ icotool -x <icon name>.ico\n```\n\nДля извлечения изображений из контейнера .icns вы можете использовать icns2png (предоставленный libicns):\n\n```\n$ icns2png -x <icon name>.icns\n```\n\n"
    },
    {
      "title": "Получение значков",
      "level": 3,
      "content": "Хотя пакеты, которые уже поставляются с файлом .desktop, наверняка содержат значок или набор значков, иногда бывает, что разработчик не создал файл .desktop, но тем не менее может предоставлять значки. Поэтому неплохо начать поиск значков в исходном пакете. Вы можете, например, сначала фильтровать расширение с помощью find, а затем использовать grep для дальнейшей фильтрации по определённым ключевым словам, таких как имя пакета, «icon», «logo» и т.д., если изображений достаточно много в исходном пакете.\n\n```\n$ find /path/to/source/package -regex \".*\\.\\(svg\\|png\\|xpm\\|gif\\|ico\\)$\"\n```\n\nЕсли разработчики приложения не включают значки в свои исходные пакеты, тогда следующим шагом будет поиск значков на их сайте. В некоторых проектах, например, tvbrowserAUR, есть страница с изображениями и логотипами, где могут быть найдены дополнительные значки. Если проект мультиплатформенный, может случиться так, что в пакете linux/unix отсутствует значок, тогда пакет Windows может предоставить его. Если в проекте используется система управления версиями, например CVS/SVN и т.д., и у вас есть некоторый опыт работы с ней, то можно попробовать поискать значки там. Если ничего не получается — возможно, у проекта просто ещё нет логотипа.\n\n"
    },
    {
      "title": "Расположение значков",
      "level": 3,
      "content": "Стандарт freedesktop.org определяет, в каких каталогах и в каком порядке программы должны искать значки:\n\n1. $HOME/.icons (для обратной совместимости)\n1. $XDG_DATA_DIRS/icons\n1. /usr/share/pixmaps\n\n"
    },
    {
      "title": "arronax",
      "level": 3,
      "content": "Arronax — это графическая программа для создания и изменения ярлыков приложений и мест.\n\n"
    },
    {
      "title": "alacarte",
      "level": 3,
      "content": "alacarte — это графический редактор меню для GNOME, использующий спецификацию меню freedesktop.org. Он также поддерживает переопределение ярлыков.\n\n"
    },
    {
      "title": "gendesk",
      "level": 3,
      "content": "gendesk стартовал как инструмент, специально предназначенный для Arch Linux для генерации файлов .desktop, путём сбора необходимой информации непосредственно из файлов PKGBUILD. Теперь это общий инструмент, который принимает аргументы командной строки.\n\nЗначки могут быть автоматически загружены из openiconlibrary, если они доступны. (Источник значков можно легко изменить в будущем).\n\n"
    },
    {
      "title": "Как использовать",
      "level": 4,
      "content": "- Добавьте gendesk в makedepends\n\n- В начале функции prepare() добавьте:\n\n```\ngendesk --pkgname \"$pkgname\" --pkgdesc \"$pkgdesc\"\n```\n\n- Если файл значка уже есть (например, $pkgname.png), используйте флаг -n для отключения скачивания значка или использования значка по умолчанию. Пример:\n\n```\ngendesk -n --pkgname \"$pkgname\" --pkgdesc \"$pkgdesc\"\n```\n\n- $srcdir/$pkgname.desktop будет создан и может быть установлен в функции package() с помощью:\n\n```\ninstall -Dm644 \"$pkgname.desktop\" \"$pkgdir/usr/share/applications/$pkgname.desktop\"\n```\n\n- Значок можно установить с помощью:\n\n```\ninstall -Dm644 \"$pkgname.png\" \"$pkgdir/usr/share/pixmaps/$pkgname.png\"\n```\n\n- Используйте --name='Program Name' для выбора имени для пункта в меню.\n\n- Для установки поля exec используйте --exec='/opt/some_app/elf --with-ponies'.\n\n- Смотрите проект gendesk для получения дополнительной информации.\n\n"
    },
    {
      "title": "lsdesktopf",
      "level": 3,
      "content": "lsdesktopfAUR может отображать доступные файлы .desktop или искать их содержимое.\n\n```\n$ lsdesktopf\n$ lsdesktopf --list\n$ lsdesktopf --list gtk zh_TW,zh_CN,en_GB\n```\n\nОн также может выполнять поиск по типу MIME. Смотрите приложения по умолчанию#lsdesktopf.\n\n"
    },
    {
      "title": "fbrokendesktop",
      "level": 3,
      "content": "Скрипт fbrokendesktopAUR с использованием команды which для обнаружения сломанного Exec, который указывает на не существующий путь. Без каких-либо параметров он использует предварительно установленные каталоги в массиве DskPath. Он показывает только сломанный .desktop с полным отсутствием пути и имени файла.\n\nПримеры\n\n```\n$ fbrokendesktop\n$ fbrokendesktop /usr\n$ fbrokendesktop /usr/share/xsessions/icewm.desktop\n```\n\n"
    },
    {
      "title": "Запуск ярлыка через терминал",
      "level": 3,
      "content": "Если установлен gtk3, выполните gtk-launch приложение.desktop.\n\nИли установите dex и выполните dex /путь/к/приложению.desktop.\n\n"
    },
    {
      "title": "Изменение ярлыков",
      "level": 3,
      "content": "Если файл .desktop, который вы хотите отредактировать, является системным (то есть предоставляется пакетом), сперва скопируйте его (например, из /usr/share/applications/) в $XDG_DATA_HOME/applications/ (например, ~/.local/share/applications/). Это предотвратит перезапись ваших изменений во время обновления системы. Локальные пользовательские файлы .desktop имеют приоритет над общесистемными файлами. Теперь вы можете изменять свой локальный файл .desktop как вам угодно.\n\nNote: Теперь для автозапуска и для обычного ярлыка будет использоваться один и тот же файл.\n\n- Переместить ярлык из $XDG_CONFIG_HOME/autostart/ в $XDG_DATA_HOME/applications/.\n- С помощью команды ls -l убедиться, что этот ярлык является обычным файлом, который можно редактировать, а не ссылкой на общесистемный файл. Если это ссылка, замените её копией оригинала, как описано выше.\n- Создайте символическую ссылку в каталоге автозапуска (в этом примере команды подставлены стандартные пути к каталогам XDG для удобства):\n\n```\nln -s ~/.local/share/applications/ярлык ~/.config/autostart/\n```\n\nТеперь для автозапуска и для обычного ярлыка будет использоваться один и тот же файл.\n\n"
    },
    {
      "title": "Изменение переменных окружения",
      "level": 4,
      "content": "Чтобы прописать переменные окружения в файле .desktop, измените строку Exec=, добавив в неё использование команды env(1) для установки переменных. Пример (исходная строка закомментирована):\n\n```\n~/.local/share/applications/abiword.desktop\n```\n\n```\n...\n# Exec=abiword %U\nExec=env LANG=he_IL.UTF-8 abiword %U\n...\n```\n\n"
    },
    {
      "title": "Изменение аргументов командной строки",
      "level": 4,
      "content": "Чтобы изменить или добавить аргументы командной строки, измените строку Exec=, добавив в неё нужные параметры. Пример (исходная строка закомментирована):\n\n```\n~/.local/share/applications/steam.desktop\n```\n\n```\n...\n# Exec=/usr/bin/steam-runtime %U\nExec=/usr/bin/steam-runtime -no-browser %U\n...\n```\n\n"
    },
    {
      "title": "Скрытие ярлыков",
      "level": 4,
      "content": "Видимость ярлыка можно контролировать несколькими способами. Дополнительную информацию смотрите в Desktop Entry Specification. Добавьте одну из следующих строк в файл .desktop:\n\n- Все среды рабочего стола, выберите один из следующих вариантов (или оба): Добавьте строку NoDisplay=true для приложений, которые вы не хотите отображать в меню. Добавьте строку Hidden=true для приложений, которые вы считаете удалёнными и не хотите отображать в меню.\n- Определённые среды рабочего стола — выберите один из следующих вариантов, где названия_сред - список сред рабочего стола, разделённых точкой с запятой (например, GNOME, GNOME;Xfce;KDE;): Добавьте строку NotShowIn=названия_сред, чтобы скрыть запись только в указанных средах рабочего стола. Добавьте строку OnlyShowIn=названия_сред, чтобы показать запись только в указанных средах рабочего стола.\n\n- Добавьте строку NoDisplay=true для приложений, которые вы не хотите отображать в меню.\n- Добавьте строку Hidden=true для приложений, которые вы считаете удалёнными и не хотите отображать в меню.\n\n- Добавьте строку NotShowIn=названия_сред, чтобы скрыть запись только в указанных средах рабочего стола.\n- Добавьте строку OnlyShowIn=названия_сред, чтобы показать запись только в указанных средах рабочего стола.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Wikipedia:ru:Ярлык (компьютер)#Ярлыки freedesktop.org\n- Информация для разработчиков\n\n"
    }
  ]
}
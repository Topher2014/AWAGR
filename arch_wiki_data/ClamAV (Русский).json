{
  "title": "ClamAV (Русский)",
  "url": "https://wiki.archlinux.org/title/ClamAV_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Clam AntiVirus это антивирусный инструмент для UNIX с открытым исходным кодом (GPL). Он предоставляет несколько утилит, включая гибкий и масштабируемый многопоточный демон (службу), сканер для командной строки и расширенные средства для автоматического обновления баз. Поскольку ClamAV в основном используется на файловых и почтовых серверах в Windows-сетях, он предназначен для обнаружения Windows-вирусов и вредоносного ПО.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет clamav.\n\n"
    },
    {
      "title": "Обновление баз",
      "level": 2,
      "content": "Антивирусные базы обновляются при помощи команды:\n\n```\n# freshclam\n```\n\nЕсли для подключения требуется использовать прокси, в файле /etc/clamav/freshclam.conf измените настройки HTTPProxyServer, HTTPProxyPort, HTTPProxyUsername и HTTPProxyPassword.\n\nФайлы баз сохраняются в:\n\n```\n/var/lib/clamav/daily.cvd\n/var/lib/clamav/main.cvd\n/var/lib/clamav/bytecode.cvd\n```\n\nЗапустите/включите clamav-freshclam.service для автоматического регулярного обновления баз.\n\n"
    },
    {
      "title": "Запуск демона",
      "level": 2,
      "content": "- Нужно запустить freshclam перед первым запуском службы, иначе вы столкнётесь с проблемами/ошибками, которые не позволят ClamAV запуститься правильно.\n- Демон не требуется, если вы планируете выполнять сканирование только вручную. Смотрите раздел #Сканирование ниже.\n\nЗапустите/включите clamav-daemon.service.\n\n"
    },
    {
      "title": "Тестирование",
      "level": 2,
      "content": "Чтобы убедиться, что ClamAV и его антивирусные базы корректно установились, просканируйте тестовый файл EICAR (эмуляция вируса, см. Википедию):\n\n```\n$ curl https://secure.eicar.org/eicar.com.txt | clamscan -\n```\n\nВ результатах сканирования должна быть строка:\n\n```\nstdin: Win.Test.EICAR_HDB-1 FOUND\n```\n\nВ противном случае, см. раздел Решение проблем или воспользуйтесь форумом.\n\n"
    },
    {
      "title": "Добавление дополнительных репозиториев баз/сигнатур",
      "level": 2,
      "content": "ClamAV может использовать базы данных/сигнатуры из других репозиториев или поставщиков безопасности.\n\nЧтобы добавить наиболее важные из них за один шаг, установите либо clamav-unofficial-sigsAUR (описание на GitHub), либо python-fangfrischAUR (онлайн-документация). Они добавляют сигнатуры/базы данных от популярных провайдеров, например, MalwarePatrol, SecuriteInfo, Yara, Linux Malware Detect и других.\n\n"
    },
    {
      "title": "Вариант 1: Настройка Fangfrisch",
      "level": 3,
      "content": "Fangfrisch был разработан как более безопасная, гибкая и удобная замена clamav-unofficial-sigs и требует совсем немного настроек (/etc/fangfrisch/fangfrisch.conf).\n\nСамое главное, что Fangfrisch никогда не нужно запускать с правами root, в отличие от clamav-unofficial-sigs.\n\nСоздайте структуру базы данных командой:\n\n```\n# sudo -u clamav /usr/bin/fangfrisch --conf /etc/fangfrisch/fangfrisch.conf initdb\n```\n\nВключите fangfrisch.timer.\n\n"
    },
    {
      "title": "Вариант 2: Настройка clamav-unofficial-sigs",
      "level": 3,
      "content": "Включите clamav-unofficial-sigs.timer.\n\nЭто позволит регулярно обновлять сигнатуры в соответствии с настройками из каталога /etc/clamav-unofficial-sigs.\n\nЧтобы обновить сигнатуры вручную, выполните:\n\n```\n# clamav-unofficial-sigs.sh\n```\n\nИзменить настройки по умолчанию можно в файле /etc/clamav-unofficial-sigs/user.conf.\n\n"
    },
    {
      "title": "База MalwarePatrol",
      "level": 4,
      "content": "Если вы хотите использовать базу MalwarePatrol, зарегистрируйтесь на сайте https://www.malwarepatrol.net/free-guard-upgrade-option[устаревшая ссылка 2023-07-30 ⓘ].\n\nВ файле /etc/clamav-unofficial-sigs/user.conf измените следующие параметры, чтобы включить эту функциональность:\n\n```\nmalwarepatrol_receipt_code=\"YOUR-RECEIPT-NUMBER\" # enter your receipt number here\nmalwarepatrol_product_code=\"8\" # Use 8 if you have a Free account or 15 if you are a Premium customer.\nmalwarepatrol_list=\"clamav_basic\" # clamav_basic or clamav_ext\nmalwarepatrol_free=\"yes\" # Set to yes if you have a Free account or no if you are a Premium customer.\n```\n\nИсточник: https://www.malwarepatrol.net/clamav-configuration-guide/\n\n"
    },
    {
      "title": "Сканирование",
      "level": 2,
      "content": "Есть два варианта сканирования по запросу:\n\n"
    },
    {
      "title": "С помощью автономного сканера",
      "level": 3,
      "content": "Команда clamscan используется для проверки отдельных файлов, каталогов или всей системы:\n\n```\n$ clamscan myfile\n$ clamscan --recursive --infected /home\n# clamscan --recursive --infected --exclude-dir='^/sys|^/dev' /\n```\n\nДля автоматического удаления инфицированных файлов добавьте параметр --remove, или можете использовать --move=/директория для перемещения их в карантин.\n\nЕсли вы хотите, чтобы clamscan сканировал большие файлы, добавьте параметры --max-filesize=4000M and --max-scansize=4000M. Значение '4000M' является максимально возможным, и его можно уменьшить по необходимости.\n\nПри использовании параметра -l /путь/к/файлу результаты сканирования будут записываться в указанный log-файл.\n\n"
    },
    {
      "title": "С помощью демона",
      "level": 3,
      "content": "Команда clamdscan похожа, но использует демон, который должен быть запущен для работы этой команды. Большинство опций игнорируется, поскольку демон считывает настройки, указанные в файле /etc/clamav/clamd.conf.\n\n"
    },
    {
      "title": "Проверка электронной почты",
      "level": 2,
      "content": "К почтовому серверу можно подключить фильтр (milter), который будет проверять письма на наличие вирусов. Отредактируйте файл настроек /etc/clamav/clamav-milter.conf под ваши нужды. Например:\n\n```\n/etc/clamav/clamav-milter.conf\n```\n\n```\nMilterSocket /tmp/clamav-milter.socket\nMilterSocketMode 660\nFixStaleSocket yes\nUser clamav\nMilterSocketGroup clamav\nPidFile /run/clamav/clamav-milter.pid\nTemporaryDirectory /tmp\nClamdSocket unix:/run/clamav/clamd.ctl\nLogSyslog yes\nLogInfected Basic\n```\n\nСоздайте /etc/systemd/system/clamav-milter.service:\n\n```\n/etc/systemd/system/clamav-milter.service\n```\n\n```\n[Unit]\nDescription='ClamAV Milter'\nAfter=clamav-daemon.service\n\n[Service]\nType=forking\nExecStart=/usr/bin/clamav-milter --config-file /etc/clamav/clamav-milter.conf\n\n[Install]\nWantedBy=multi-user.target\n```\n\nЗапустите и включите службу clamav-milter.service.\n\nДля Postfix добавьте следующие строки в /etc/postfix/main.cf:\n\n```\netc/postfix/main.cf\n```\n\n```\nsmtpd_milters = unix:/tmp/clamav-milter.socket\nmilter_default_action = tempfail\n```\n\nПроверьте журнал. Если есть ошибки доступа к clamav-milter.socket, попробуйте добавить пользователя postfix в группу clamav.\n\n"
    },
    {
      "title": "Проверка при обращении",
      "level": 2,
      "content": "Проверка при обращении (on-access scanning) сканирует файл, когда с ним выполняются операции чтения, записи или выполнения.\n\nДля работы требуется ядро, скомпилированное с модулем fanotify (ядро >= 3.8); в официальных ядрах Arch Linux он присутствует. Проверьте, включен ли fanotify, перед включением проверки при обращении.\n\n```\n$ zgrep FANOTIFY /proc/config.gz\n```\n\nСначала отредактируйте файл настроек /etc/clamav/clamd.conf, добавив следующее в конец файла (вы также можете изменить отдельные параметры).\n\n```\n/etc/clamav/clamd.conf\n```\n\n```\n# Отслеживать события во всей точке монтирования\nOnAccessMountPath /\nOnAccessExcludePath /proc\nOnAccessExcludePath /run\nOnAccessExcludePath /sys\n\n# Или отслеживать события в указанных каталогах\n# (не может использоваться одновременно с OnAccessMountPath)\n# Можно добавить опцию несколько раз для отслеживания нескольких каталогов\n# OnAccessIncludePath /home\n\n# Блокировать работу с файлом до завершения его сканирования.\n# Не работает в OnAccessMountPath, поэтому в данном примере отключено.\n# Работает только с OnAccessIncludePath, если /usr и /etc исключены из проверки.\n# Использовать со сканированием /var не рекомендуется, так как это замедлит\n# установку пакетов в тысячу раз\nOnAccessPrevention false\n\n# Сканировать свежесозданные, перемещённые или переименованные файлы\n# (работает только с OnAccessIncludePath)\nOnAccessExtraScanning true\n\n# Не сканировать активность пользователя clamav,\n# чтобы сканер не зациклился на проверке самого себя\nOnAccessExcludeUname clamav\n\n# Также можно не сканировать работу пользователя root\n# OnAccessExcludeRootUID true\n\n# Команда, которая будет выполнена при обнаружении вируса\nVirusEvent /etc/clamav/virus-event.bash\n\n# ВАЖНО: в целях безопасности clamd НИКОГДА не должен работать от имени root.\n# User root    # УДАЛИТЕ такую строку, если она есть\n# Используйте такую:\nUser clamav\n```\n\nЗатем разрешите пользователю clamav запускать notify-send через sudo от имени любого пользователя и с любыми переменными окружения:\n\n```\n/etc/sudoers.d/clamav\n```\n\n```\nclamav ALL = (ALL) NOPASSWD: SETENV: /usr/bin/notify-send\n```\n\nТеперь создайте файл /etc/clamav/virus-event.bash со следующим содержимым и сделайте его исполняемым:\n\n```\n/etc/clamav/virus-event.bash\n```\n\n```\n#!/bin/bash\nPATH=/usr/bin\nALERT=\"Signature detected by clamav: $CLAM_VIRUSEVENT_VIRUSNAME in $CLAM_VIRUSEVENT_FILENAME\"\n\n# Отправка уведомления всем пользователям с графическим сеансом\nfor ADDRESS in /run/user/*; do\n    USERID=${ADDRESS#/run/user/}\n    /usr/bin/sudo -u \"#$USERID\" DBUS_SESSION_BUS_ADDRESS=\"unix:path=$ADDRESS/bus\" PATH=${PATH} \\\n        /usr/bin/notify-send -i dialog-warning \"Virus found!\" \"$ALERT\"\ndone\n```\n\nЭтот скрипт прописан в опции VirusEvent и будет запускаться демоном clamd при обнаружении вируса. Можно отредактировать текст отображаемых сообщений на свой вкус.\n\nПерезапустите службу clamav-daemon.service.\n\nПо умолчанию clamonacc передаёт в clamav для сканирования только имена файлов, к которым кто-то обратился. Это проблема, потому что clamav не сможет просканировать файлы, к которым у него нет доступа. Вместо этого можно указать clamonacc (который всегда запускается от имени root) использовать передачу дескрипторов файлов. Отредактируйте юнит clamav-clamonacc.service, добавив в него опцию:\n\n```\n[Service]\nExecStart=\nExecStart=/usr/sbin/clamonacc -F --fdpass --log=/var/log/clamav/clamonacc.log\n```\n\nНаконец, запустите/включите службу clamav-clamonacc.service.\n\nЕсли AppArmor мешает работе clamd, используйте complain-only mode:\n\n```\n# aa-complain clamd\n```\n\n"
    },
    {
      "title": "Через clamscan",
      "level": 4,
      "content": "При сканировании файла или каталога из командной строки с помощью clamscan используется только один поток процессора. Это может быть нормально в случаях, когда время не критично или вы не хотите, чтобы компьютер стал подтормаживать во время проверки. Если же необходимо быстро просканировать большой каталог или USB-накопитель, вы можете захотеть задействовать все доступные процессоры для ускорения процесса.\n\nclamscan разработан как однопоточный, поэтому можно использовать xargs для запуска нескольких параллельных сканирований:\n\n```\n$ find /home/archie -type f -print0 | xargs -0 -P $(nproc) clamscan\n```\n\nВ этом примере параметр -P для xargs запускает столько одновременных процессов clamscan, сколько есть процессоров (по данным nproc). Опции --max-lines и --max-args позволят ещё более тонко контролировать распределение нагрузки по потокам.\n\n"
    },
    {
      "title": "Через clamdscan",
      "level": 4,
      "content": "Если у вас запущен демон clamd, то можно использовать clamdscan (смотрите раздел #Запуск демона):\n\n```\n$ clamdscan --multiscan --fdpass /home/archie\n```\n\nЗдесь параметр --multiscan позволяет clamd сканировать содержимое каталога параллельно, используя доступные потоки. Параметр --fdpass необходим для передачи разрешений дескриптора файла в clamd, так как демон работает под пользователем и группой clamav и может не иметь разрешения на чтение некоторых файлов.\n\nКоличество доступных потоков для clamdscan определяется в /etc/clamav/clamd.conf через параметр MaxThreads (смотрите clamd.conf(5)). Даже если MaxThreads больше единицы (текущее значение по умолчанию равно 10), при запуске clamdscan без параметра --multiscan всё равно будет использоваться только один поток.\n\n"
    },
    {
      "title": "Error: Clamd was NOT notified",
      "level": 3,
      "content": "Если при запуске freshclam вы получаете сообщение:\n\n```\nWARNING: Clamd was NOT notified: Cannot connect to clamd through \n/var/lib/clamav/clamd.sock connect(): No such file or directory\n```\n\nСоздайте отсутствующий sock-файл:\n\n```\n# touch /run/clamav/clamd.ctl\n# chown clamav:clamav /run/clamav/clamd.ctl\n```\n\nЗатем в файле /etc/clamav/clamd.conf раскомментируйте строку:\n\n```\nLocalSocket /run/clamav/clamd.ctl\n```\n\nСохраните файл и перезапустите службу clamav-daemon.service.\n\n"
    },
    {
      "title": "Error: No supported database files found",
      "level": 3,
      "content": "Если при запуске службы вы получаете сообщение:\n\n```\nLibClamAV Error: cli_loaddb(): No supported database files found\nin /var/lib/clamav ERROR: Not supported data format\n```\n\nЭто происходит из-за несовпадения опции DatabaseDirectory в файлах /etc/clamav/freshclam.conf и /etc/clamav/clamd.conf. Файл /etc/clamav/freshclam.conf указывает на /var/lib/clamav, а /etc/clamav/clamd.conf (каталог по умолчанию) указывает на /usr/share/clamav или другой каталог. Отредактируйте /etc/clamav/clamd.conf, указав тот же DatabaseDirectory, что и в /etc/clamav/freshclam.conf. После этого clamav успешно запустится.\n\n"
    },
    {
      "title": "Error: Can't create temporary directory",
      "level": 3,
      "content": "Если вы получили следующую ошибку, содержащую номера UID и GID:\n\n```\n# ERROR: can't create temporary directory\n# Hint: The database directory must be writable for UID XXX or GID YYY\n```\n\nУстановите правильные права на директорию:\n\n```\n# chown UID:GID /var/lib/clamav && chmod 755 /var/lib/clamav\n```\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Wikipedia:ru:ClamAV\n\n"
    }
  ]
}
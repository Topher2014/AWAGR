{
  "title": "Tor (日本語)",
  "url": "https://wiki.archlinux.org/title/Tor_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- GNUnet\n- I2P\n- Freenet\n\nTor (Theonionrouting) は オニオンルーティング のオープンソース実装で、匿名プロキシネットワークへのアクセスを提供します。Tor の目標はトラフィック解析攻撃を防いでネットワークの匿名性を守ることです。\n\nTor ネットワークのユーザーは、自分のマシン上でオニオン プロキシ ソフトウェアを実行し、SOCKS インターフェイスをクライアントに提供します。 このソフトウェアは Tor に接続し、Tor ネットワークを通じて仮想回線を定期的にネゴシエートします。Tor は階層化された方法で暗号化を採用し (そのため、'オニオン' に例えられます)、ルーター間の前方秘匿性を確保します。\n\nこのプロセスを通じて、オニオンプロキシはエンドユーザーの匿名性を確保するためにネットワークトラフィックを管理します。トラフィックを暗号化し、Tor ネットワークの他のノードを介して送信し、指定したサーバーに転送する前にトラフィックを受信する最後のノードで復号化することで、ユーザーの匿名性を保ちます。トレードオフの 1 つは、Tor を使用すると、大量のトラフィックが再ルーティングされるため、通常の直接接続よりもかなり遅くなる可能性があることです。さらに、Tor はトラフィック分析に対する保護を提供しますが、Tor ネットワークの境界でのトラフィック確認 (つまり、ネットワークに出入りするトラフィック) を防ぐことはできません。詳細については、Tor (匿名ネットワーク) を参照してください。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 設定 2.1 リレー設定 2.2 Tor ControlPort を開く 2.2.1 Tor Control Cookie ファイルを設定する 2.2.2 Tor Control のパスワードを設定する 2.2.3 Tor ControlSocket を開く 2.2.4 Tor Control をテストする\n- 3 Tor を Chroot で実行する\n- 4 使用方法\n- 5 ウェブブラウズ 5.1 Firefox 5.2 Chromium 5.2.1 デバッグ 5.2.2 拡張 5.2.3 Electron 5.3 Luakit\n- 6 HTTP プロキシ 6.1 Firefox 6.2 Polipo 6.3 Privoxy\n- 7 インスタントメッセージ 7.1 Pidgin\n- 8 Irssi\n- 9 Pacman\n- 10 Tor サーバーを実行する 10.1 Tor ブリッジの実行 10.1.1 設定 10.1.2 トラブルシューティング 10.2 Tor リレーの実行 10.2.1 設定 10.3 Tor 出口ノードの実行 10.3.1 設定\n- 11 TorDNS 11.1 全ての DNS クエリで TorDNS を使う\n- 12 Torsocks\n- 13 トラブルシューティング 13.1 Problem with user value 13.2 Tor-ブラウザのプロキシ問題 13.3 Tor-ブラウザの空白の黒い画面\n- 14 参照\n\n- 2.1 リレー設定\n- 2.2 Tor ControlPort を開く 2.2.1 Tor Control Cookie ファイルを設定する 2.2.2 Tor Control のパスワードを設定する 2.2.3 Tor ControlSocket を開く 2.2.4 Tor Control をテストする\n\n- 2.2.1 Tor Control Cookie ファイルを設定する\n- 2.2.2 Tor Control のパスワードを設定する\n- 2.2.3 Tor ControlSocket を開く\n- 2.2.4 Tor Control をテストする\n\n- 5.1 Firefox\n- 5.2 Chromium 5.2.1 デバッグ 5.2.2 拡張 5.2.3 Electron\n- 5.3 Luakit\n\n- 5.2.1 デバッグ\n- 5.2.2 拡張\n- 5.2.3 Electron\n\n- 6.1 Firefox\n- 6.2 Polipo\n- 6.3 Privoxy\n\n- 7.1 Pidgin\n\n- 10.1 Tor ブリッジの実行 10.1.1 設定 10.1.2 トラブルシューティング\n- 10.2 Tor リレーの実行 10.2.1 設定\n- 10.3 Tor 出口ノードの実行 10.3.1 設定\n\n- 10.1.1 設定\n- 10.1.2 トラブルシューティング\n\n- 10.2.1 設定\n\n- 10.3.1 設定\n\n- 11.1 全ての DNS クエリで TorDNS を使う\n\n- 13.1 Problem with user value\n- 13.2 Tor-ブラウザのプロキシ問題\n- 13.3 Tor-ブラウザの空白の黒い画面\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "tor パッケージをインストールしてください。\n\nTor には Tor Browser でアクセスできます。tor-browserAUR パッケージまたは ポータブルな実行ファイル でインストールできます。\n\narmAUR (Anonymizing Relay Monitor) パッケージには帯域使用量や接続の詳細などをターミナルに表示するモニタが含まれています。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "Tor をより深く理解するために、設定ファイルの /etc/tor/torrc をよく見て下さい。設定オプションの説明は tor(1) や Tor のウェブサイト で見られます。ほとんどの場合はデフォルト設定で問題なく Tor は動作します。\n\ntorrc の設定と tor.service の設定で衝突が発生する可能性があります:\n\n- torrc では、RunAsDaemon はデフォルトどおりに 0 に設定してください。tor.service の [Service] セクションで Type=simple が設定されているためです。\n- torrc では、User は設定しないでください。tor.service の [Service] セクションで User= が root に設定されているためです。\n\n"
    },
    {
      "title": "リレー設定",
      "level": 3,
      "content": "Tor から開くことができるファイル記述子の最大数は tor.service の LimitNOFILE で設定できます。リレーを高速化したいときはこの数値を上げて下さい。\n\nあなたのコンピュータでウェブサーバーを実行していない場合、AccountingMax を設定する必要はありません。ORPort を 443 にしたり DirPort を 80 にすると良いでしょう。多くの Tor ユーザーはファイアウォールによって足止めされており、ウェブブラウズしかできないようになっていますが、この変更によってあなたの Tor リレーに到達できるようになります。既にポート 80 と 443 を使っている場合、他のポートとしては 22, 110, 143 などが候補に挙げられています [1]。ただしこれらは特権が与えられたポートなので、tor.service の User=root と torrc の User tor を設定して、Tor を root で起動する必要があります。\n\n詳しくは Tor ドキュメントの Lifecycle of a New Relay を読むことを推奨します。\n\n"
    },
    {
      "title": "Tor ControlPort を開く",
      "level": 3,
      "content": "ほとんどのユーザーはこれを必要としません。ただし、一部のプログラムは、Tor ノードへの低レベルのアクセスを取得するために、あなたの Tor ControlPort を要求します。\n\nControlPort を介して、他のアプリケーションは Tor ノードを変更および監視して、Tor の実行中に Tor 設定を変更したり、Tor ネットワークのステータスや Tor 回線に関する詳細を取得したりできます。\n\ntorrc ファイルに追加します\n\n```\nControlPort 9051\n```\n\nTor の control-spec.txt より:\n\nしたがって、セキュリティを強化するために、ControlPort へのアクセスを制限します。 Cookie ファイル、や 制御パスワード、あるいはその両方を使用します。\n\n"
    },
    {
      "title": "Tor Control Cookie ファイルを設定する",
      "level": 4,
      "content": "torrc に追加します\n\n```\nCookieAuthentication 1\nCookieAuthFile /var/lib/tor/control_auth_cookie\nCookieAuthFileGroupReadable 1\nDataDirectoryGroupReadable 1\n```\n\nCookie 認証 を使用すると、ControlPort へのアクセスはファイル権限によって制限されます Tor Cookie ファイルと Tor データディレクトリにコピーします。\n\n上記の設定により、 tor グループ内のすべてのユーザーが Tor Cookie ファイルにアクセスできます。\n\nこれらを tor ユーザーグループ に追加します。\n\ntor.service を 再起動 して下さい。\n\nこれで、ユーザー が Tor Cookie ファイルにアクセスできるようになります。\n\n```\n$ stat -c%a /var/lib/tor /var/lib/tor/control_auth_cookie\n```\n\n750 と 640 を出力する必要があります。\n\n"
    },
    {
      "title": "Tor Control のパスワードを設定する",
      "level": 4,
      "content": "パスワードをプレーンテキストからハッシュに変換します\n\n```\n# set +o history # unset bash history\n# tor --hash-password your_password\n# set -o history # set bash history\n```\n\nそしてそのハッシュを torrc に追加します\n\n```\nHashedControlPassword your_hash\n```\n\nbash 履歴コマンドによりクリアテキストのパスワードが妨げられる場合 bash $HISTFILE に書き込まれないようにします\n\n"
    },
    {
      "title": "Tor ControlSocket を開く",
      "level": 4,
      "content": "何らかのプログラムが Tor ControlSocket にアクセスする必要がある場合、 Unix ドメインソケットと同様、 以下を torrc に追加します:\n\n```\nControlSocket /var/lib/tor/control_socket\nControlSocketsGroupWritable 1\nDataDirectoryGroupReadable 1\nCacheDirectoryGroupReadable 1 # workaround for tor bug #26913\n```\n\nプログラムを実行するユーザーを tor ユーザーグループ に追加します\n\ntor.service を実行し、プログラムを 再起動 します。\n\nControlSocket のステータスを確認するには:\n\n```\n# stat -c%a /var/lib/tor /var/lib/tor/control_socket\n```\n\n750 と 660 を出力する必要があります。\n\n"
    },
    {
      "title": "Tor Control をテストする",
      "level": 4,
      "content": "ControlPort をテストするには、次のコマンドを使用して gnu-netcat を実行します。\n\n```\n$ echo -e 'PROTOCOLINFO\\r\\n' | nc 127.0.0.1 9051\n```\n\nControlSocket をテストするには、次のコマンドを使用して socat を実行します。\n\n```\n$ echo -e 'PROTOCOLINFO\\r\\n' | socat - UNIX-CLIENT:/var/lib/tor/control_socket\n```\n\nどちらのコマンドでも出力されるはずです\n\n```\n250-PROTOCOLINFO 1\n250-AUTH METHODS=COOKIE,SAFECOOKIE,HASHEDPASSWORD COOKIEFILE=\"/var/lib/tor/control_auth_cookie\"\n250-VERSION Tor=\"0.3.4.8\"\n250 OK\n514 Authentication required.\n```\n\nその他のコマンドについては、Tor の control-spec.txt を参照してください。\n\n"
    },
    {
      "title": "Tor を Chroot で実行する",
      "level": 2,
      "content": "セキュリティを高めるために、chroot で Tor を実行するのが望ましい場合があります。以下のスクリプトは /opt/torchroot に適切な chroot を作成します:\n\n```\n~/torchroot-setup.sh\n```\n\n```\n#!/bin/bash\nexport TORCHROOT=/opt/torchroot\n\nmkdir -p $TORCHROOT\nmkdir -p $TORCHROOT/etc/tor\nmkdir -p $TORCHROOT/dev\nmkdir -p $TORCHROOT/usr/bin\nmkdir -p $TORCHROOT/usr/lib\nmkdir -p $TORCHROOT/usr/share/tor\nmkdir -p $TORCHROOT/var/lib\n\nln -s /usr/lib  $TORCHROOT/lib\ncp /etc/hosts           $TORCHROOT/etc/\ncp /etc/host.conf       $TORCHROOT/etc/\ncp /etc/localtime       $TORCHROOT/etc/\ncp /etc/nsswitch.conf   $TORCHROOT/etc/\ncp /etc/resolv.conf     $TORCHROOT/etc/\ncp /etc/tor/torrc       $TORCHROOT/etc/tor/\n\ncp /usr/bin/tor         $TORCHROOT/usr/bin/\ncp /usr/share/tor/geoip* $TORCHROOT/usr/share/tor/\ncp /lib/libnss* /lib/libnsl* /lib/ld-linux-*.so* /lib/libresolv* /lib/libgcc_s.so* $TORCHROOT/usr/lib/\ncp $(ldd /usr/bin/tor | awk '{print $3}'|grep --color=never \"^/\") $TORCHROOT/usr/lib/\ncp -r /var/lib/tor      $TORCHROOT/var/lib/\nchown -R tor:tor $TORCHROOT/var/lib/tor\n\nsh -c \"grep --color=never ^tor /etc/passwd > $TORCHROOT/etc/passwd\"\nsh -c \"grep --color=never ^tor /etc/group > $TORCHROOT/etc/group\"\n\nmknod -m 644 $TORCHROOT/dev/random c 1 8\nmknod -m 644 $TORCHROOT/dev/urandom c 1 9\nmknod -m 666 $TORCHROOT/dev/null c 1 3\n\nif [[ \"$(uname -m)\" == \"x86_64\" ]]; then\n  cp /usr/lib/ld-linux-x86-64.so* $TORCHROOT/usr/lib/.\n  ln -sr /usr/lib64 $TORCHROOT/lib64\n  ln -s $TORCHROOT/usr/lib ${TORCHROOT}/usr/lib64\nfi\n```\n\nこのスクリプトを root で実行した後、次のコマンドで chroot に Tor を起動できます: # chroot --userspec=tor:tor /opt/torchroot /usr/bin/tor\n\n"
    },
    {
      "title": "使用方法",
      "level": 2,
      "content": "systemd を使って tor.service を起動・有効にしてください。\n\nもしくは、vidalia インターフェースからも tor を起動できます。\n\nプログラムに Tor を通すには、SOCKS5 プロキシとして 127.0.0.1 か localhost をポート 9050 (tor の標準設定) 又は 9051 (vidalia の標準設定) で使うようにプログラムを設定してください。 Tor が正しく機能しているか確認するために Tor , Harvard , Xenobite.eu などのウェブサイトを開いてみましょう。\n\n"
    },
    {
      "title": "ウェブブラウズ",
      "level": 2,
      "content": "匿名でブラウズする唯一の方法は、サポートされている Tor Browser Bundle を使用することで、パッチが適用されたバージョンの Firefox を使用します。torbrowser-launcher パッケージや tor-browserAUR パッケージでインストールすることができます。\n\nTor は通常のブラウザでも使用できます: #Firefox や #Chromium を参照して、Tor ネットワークを通してこれらのブラウザを実行してください。これは「プライベートブラウジング」モードであっても匿名でブラウジングする方法ではないことに注意してください: フィンガープリント、プラグイン、DNS リークやその他の欠点により、あなたの IP アドレスや身元が判明する可能性があります。[2]\n\n"
    },
    {
      "title": "Firefox",
      "level": 3,
      "content": "設定 > 一般 > ネットワークプロキシ > 接続設定 から SOCKS の localhost ポート 9050 を使うように手動で Firefox を設定してください (SOCKS v5)。さらに、全ての DNS リクエストが TOR の socks プロキシを通過するようにするため、\"Proxy DNS when using SOCKS v5\" を選択してください。\n\n"
    },
    {
      "title": "Chromium",
      "level": 3,
      "content": "次のコマンドで chromium を起動してください:\n\n```\n$ chromium --proxy-server=\"socks5://myproxy:8080\" --host-resolver-rules=\"MAP * ~NOTFOUND , EXCLUDE myproxy\"\n```\n\n--proxy-server=\"socks5://myproxy:8080\" フラグによって Chrome は http:// と https:// の URL リクエストで SOCKS プロキシサーバー \"myproxy:8080\" を経由するようになります (バージョン 5 の SOCKS プロトコルを使用)。URL のホストネームはプロキシサーバーによって解決されるようになります。\n\n--proxy-server フラグは URL のロードだけに適用されます。Chrome の他のコンポーネントが DNS を直接使うこともあり、その場合はプロキシサーバーが迂回されてしまいます。そのようなコンポーネントとして例えば \"DNS prefetcher\" が存在します。Chrome で DNS プリフェッチが無効になっていない場合、SOCKS v5 プロキシサーバーを設定していても Chrome によって DNS リクエストが送信されてしまいます。DNS プリフェッチを無効化することで解決するとしても、Chrome の DNS リクエスト全てに気を配らなくてはいけません。--host-resolver-rules=\"MAP * ~NOTFOUND , EXCLUDE myproxy\" フラグを使うことで Chrome から送信される全ての DNS リクエストを阻止できます。DNS リクエストは全て ~NOTFOUND (0.0.0.0 と同じ) アドレスにマッピングされます。\"EXCLUDE\" で \"myproxy\" だけ例外にすることで、SOCKS プロキシサーバーのアドレスだけは解決できるようにします。\n\nWebRTC のリーク を防ぐには WebRTC Network Limiter 拡張をインストールします。\n\n"
    },
    {
      "title": "デバッグ",
      "level": 4,
      "content": "デバッグする際はまず about:net-internals の Proxy タブを確認してください: chrome://net-internals/#proxy。\n\n次に、about:net-internals で Chrome がローカル DNS リクエストを送信していないことを確認してください: chrome://net-internals/#dns。\n\n"
    },
    {
      "title": "拡張",
      "level": 4,
      "content": "Firefox と同じように Proxy SwitchySharp を使うことで高速な切り替えをすることができます。\n\nインストールしたら設定ページを開いて下さい。Proxy Profiles タブから新しいプロファイル Tor を追加します。Use the same proxy server for all protocols オプションのチェックが入っている場合はチェックを外してください。それから SOCKS ホストに localhost、ポートに 9050 を追加して SOCKS v5 を選択します。\n\n任意で General タブからクイック切り替えを有効化することができ、Proxy SwitchySharp のアイコンを左クリックするだけで通常のブラウズと Tor ネットワークを切り替えることができるようになります。\n\n"
    },
    {
      "title": "Electron",
      "level": 4,
      "content": "#Chromium を参照してください。\n\n"
    },
    {
      "title": "Luakit",
      "level": 3,
      "content": "次を実行:\n\n```\n$ torsocks luakit\n```\n\n"
    },
    {
      "title": "HTTP プロキシ",
      "level": 2,
      "content": "Tor は Polipo や Privoxy などの HTTP プロキシと一緒に使うことができますが、Tor の開発チームはブラウザが直接サポートしている SOCKS5 ライブラリを使うことを推奨しています。\n\n"
    },
    {
      "title": "Firefox",
      "level": 3,
      "content": "FoxyProxy アドオンを使うことで URL に合わせて複数のプロキシを指定したりすることができます。Firefox を再起動したら手動で Firefox を Polipo や Privoxy が動作しているポート 8118 の localhost に設定してください。これらの設定は Add > Standard proxy type から設定できます。プロキシのラベル (例: Tor) を選択してポートとホストを HTTP Proxy と SSL Proxy フィールドに入力してください。Tor が正しく機能しているかどうかは Tor Check ウェブサイトを開くことで確認できます。\n\n"
    },
    {
      "title": "Polipo",
      "level": 3,
      "content": "Tor Project は Polipo の問題を回避して匿名性を上げるためにカスタマイズされた Polipo 設定ファイル を作成しています。\n\nSOCKS 5 プロキシが使える場合、Tor は自動的にポート 9050 で起動するので、Polipo は必須ではないことを覚えておいて下さい。Tor で Chromium を使いたい場合、Polipo パッケージは必要ありません (参照: #Chromium)。\n\n"
    },
    {
      "title": "Privoxy",
      "level": 3,
      "content": "メッセンジャーなど (例: Jabber, IRC) 他のアプリケーションでセットアップを使うこともできます。アプリケーションが HTTP プロキシをサポートしていれば Privoxy に接続することができます (127.0.0.1:8118)。直接 SOCKS プロキシを使うには、アプリケーションから Tor を指定します (127.0.0.1:9050)。この方法の問題はアプリケーションが DNS 解決を独自に行うような場合、情報が漏洩する可能性があるということです。代わりに (Privoxy なおで) Socks4A を使用してください。\n\n"
    },
    {
      "title": "インスタントメッセージ",
      "level": 2,
      "content": "IM クライアントで tor を使う場合、polipo/privoxy などの http プロキシは必要ありません。デフォルトでポート 9050 を listen する tor のデーモンを直接使用します。\n\n"
    },
    {
      "title": "Pidgin",
      "level": 3,
      "content": "Pidgin を設定することで全てのアカウントで、あるいはアカウントごとに Tor を使うようにすることができます。全てのアカウントで Tor を使うには Tools -> Preferences -> Proxy で設定してください。アカウントごとに Tor を使用するには Accounts > Manage Accounts からアカウントを選択して Modify をクリックし、Proxy タブを開いてください。以下のようにプロキシを設定します:\n\n```\nProxy type \tSOCKS5\nHost \t        127.0.0.1\nPort \t        9150\n```\n\nTor Browser を使用している場合 2013年 にポートは 9050 から 9150 に変更されたので注意してください。\"Connection refused\" メッセージが表示される場合は値を変えてみてください。\n\n"
    },
    {
      "title": "Irssi",
      "level": 2,
      "content": "Freenode は .onion に直接接続することを推奨しています。接続時に nickserv で認証するには charybdis と ircd-seven の SASL が必要です。Irssi#SASL で認証 を参照してください。irssi を起動:\n\n```\n$ torsocks irssi\n```\n\nnickserv に認証情報を設定してください。接続時に読み込まれます。対応している認証方式は ECDSA-NIST256P-CHALLENGE (ecdsatool を参照) と PLAIN です。DH-BLOWFISH は サポートが打ち切られています。\n\n```\n/sasl set network username password mechanism\n```\n\n情報漏洩を防ぐために CTCP と DCC を無効化してホストネームを別の名前に設定してください [4]:\n\n```\n/ignore * CTCPS\n/ignore * DCC\n/set hostname fake_host\n```\n\nFreenode に接続:\n\n```\n/connect -network network frxleqtzgvwkv7oz.onion\n```\n\n詳しくは Accessing freenode Via Tor, SASL README, IRC/SILC Wiki article を見て下さい。\n\n"
    },
    {
      "title": "Pacman",
      "level": 2,
      "content": "Pacman のダウンロード操作 (リポジトリ DB, パッケージ, パブリックキー) を Tor ネットワークを通して行うことが可能です。やや大げさですが、もしあなたに (LAN やミラーなどに) 敵がいる場合、インストールしたパッケージが何なのか知られることがなくなります。ただし遅延がひどくなり、スループットが遅くなり、気づかれる可能性があり、(現在の接続で Tor がフィルタリングされている場合) インストールができない可能性があります。\n\n```\n/etc/pacman.conf\n```\n\n```\n...\nXferCommand = /usr/bin/curl --socks5-hostname localhost:9050 -C - -f %u > %o\n...\n```\n\n"
    },
    {
      "title": "Tor サーバーを実行する",
      "level": 2,
      "content": "Tor ネットワークは人々が提供する帯域に頼っています。ネットワークに貢献する方法は複数あります。\n\n"
    },
    {
      "title": "Tor ブリッジの実行",
      "level": 3,
      "content": "Tor ブリッジは Tor のパブリックディレクトリに記載されない Tor リレーです。政府や ISP によって Tor のパブリックリレーが全てブロックされたときでも Tor ネットワークに接続することを可能にします。\n\n"
    },
    {
      "title": "設定",
      "level": 4,
      "content": "https://www.torproject.org/docs/bridges によれば、torrc (/etc/tor/torrc または $HOME/.torrc) に以下の4行を設定してください:\n\n```\nSocksPort 0\nORPort 443\nBridgeRelay 1\nExitpolicy reject *:*\n```\n\n"
    },
    {
      "title": "トラブルシューティング",
      "level": 4,
      "content": "起動時に \"Could not bind to 0.0.0.0:443: Permission denied\" エラーが表示される場合、ORPort を高く設定するか (例: 8080)、ルーターで ポート転送 してください。\n\n"
    },
    {
      "title": "Tor リレーの実行",
      "level": 3,
      "content": "あなたのマシンを (リレーのオンライン時間によって) エントリーノードや転送リレーとして動作させます。ブリッジリレーとは違って、Tor のパブリックディレクトリに記載されます。誰でも Tor のディレクトリからあなたの IP アドレスを見ることができるようになりますが、このリレーは他のリレーや Tor 出口ノードに転送するだけで、インターネットに直接転送することはありません。\n\n"
    },
    {
      "title": "設定",
      "level": 4,
      "content": "最低でも 20KiB/s は共有してください:\n\n```\nNickname tornickname\nORPort 9001\nBandwidthRate 20 KB            # Throttle traffic to 20KB/s\nBandwidthBurst 50 KB           # But allow bursts up to 50KB/s\n```\n\nリレーからの退出を拒否する:\n\n```\nExitPolicy reject *:*\n```\n\n"
    },
    {
      "title": "Tor 出口ノードの実行",
      "level": 3,
      "content": "Tor ユーザーから通常のインターネットへのリクエストがあった場合、ネットワークへの出口 (出口ノード) が必要となります。出口ノードからアクセスされたホストから見ると、あなたのマシンからリクエストが飛んできたように認識されます。したがって、Tor リレーを運営するのとは異なり、出口ノードを立ち上げることは法的な責任を負うことを意味します。出口リレーを実行する前に Tips for Running an Exit Node を読むと良いでしょう。\n\n"
    },
    {
      "title": "設定",
      "level": 4,
      "content": "torrc を使うことで、出口ノードを通過できるサービスを設定することができます。\n\n全てのトラフィックを許可:\n\n```\nExitPolicy accept\t*:*\n```\n\nirc ポート 6660-6667 だけがノードから退出することを許可する:\n\n```\nExitPolicy accept *:6660-6667,reject *:* # Allow irc ports but no more\n```\n\nデフォルトでは、Tor は特定のポートをブロックします。torrc を使うことで上書きすることが可能です:\n\n```\nExitPolicy accept *:119        # Accept nntp as well as default exit policy\n```\n\n"
    },
    {
      "title": "TorDNS",
      "level": 2,
      "content": "Tor 0.2.x シリーズには DNS フォワーダが組み込まれています。有効化するには、以下の行を Tor の設定ファイルに追加してデーモンを再起動してください:\n\n```\n/etc/tor/torrc\n```\n\n```\nDNSPort 9053\nAutomapHostsOnResolve 1\nAutomapHostsSuffixes .exit,.onion\n```\n\n上記の設定で通常の DNS サーバーと同じように DNS リクエストを受け取って (上記の例ではポート 9053 を使用)、Tor ネットワーク経由でドメインを解決できるようになります。解決できる DNS クエリは A レコードなので注意してください。MX と NS クエリには返答しません。詳しくは Debian によるイントロダクション を参照。\n\ntor-resolve を使ってコマンドラインインターフェイスから DNS クエリを実行することもできます。例:\n\n```\n$ tor-resolve archlinux.org\n66.211.214.131\n```\n\n"
    },
    {
      "title": "全ての DNS クエリで TorDNS を使う",
      "level": 3,
      "content": "必要であれば、宛先に Tor を使って接続するのかどうかにかかわらず、システムからのクエリは全て TorDNS を使うように設定することができます。DNS サーバーとして 127.0.0.1 を使うように設定してから /etc/tor/torrc の 'DNSPort' 行を以下のように編集してください:\n\n```\nDNSPort 53\n```\n\nまた、dnsmasq や pdnsd などのローカルキャッシュ DNS サーバーを使うこともできます。TorDNS は伝統的な DNS サーバーと比べて少し遅いのでそれを補うことができます。以下では dnsmasq をセットアップする方法を説明します。\n\nDNS リクエストを listen する設定をポート 9053 に変更して dnsmasq をインストールしてください。\n\ndnsmasq の設定ファイルを以下のように編集:\n\n```\n/etc/dnsmasq.conf\n```\n\n```\nno-resolv\nport=9053\nserver=127.0.0.1#9053\nlisten-address=127.0.0.1\n```\n\n上記の設定によって dnsmasq はローカルコンピュータからのリクエストのみ受け取り、TorDNS を上流の DNS サーバーとして使用します。それから /etc/resolv.conf を編集して dnsmasq サーバーに問い合わせを行うようにしてください:\n\n```\n/etc/resolv.conf\n```\n\n```\nnameserver 127.0.0.1\n```\n\n設定したら dnsmasq デーモンを起動してください。\n\ndhcpd を使用している場合、resolv 設定ファイルが変更されないように設定を変更する必要があります。設定ファイルに以下を追加してください:\n\n```\n/etc/dhcpcd.conf\n```\n\n```\nnohook resolv.conf\n```\n\nnohook 行が既に存在する場合、カンマで区切って resolv.conf を追加してください。\n\n"
    },
    {
      "title": "Torsocks",
      "level": 2,
      "content": "Torsocks を利用すると、アプリケーションの設定を変更することなく、Tor ネットワークを介してアプリケーションを使うことができるようになります。man ページより:\n\n使用例:\n\n```\n$ torsocks elinks checkip.dyndns.org\n$ torsocks wget -qO- https://check.torproject.org/ | grep -i congratulations\n```\n\n"
    },
    {
      "title": "Problem with user value",
      "level": 3,
      "content": "tor デーモンが起動しない場合、root で次のコマンドを実行してください (もしくは sudo を使用):\n\n```\n# tor\n```\n\n以下のエラーが表示される場合:\n\n```\nMay 23 00:27:24.624 [warn] Error setting groups to gid 43: \"Operation not permitted\".\nMay 23 00:27:24.624 [warn] If you set the \"User\" option, you must start Tor as root.\nMay 23 00:27:24.624 [warn] Failed to parse/validate config: Problem with User value. See logs for details.\nMay 23 00:27:24.624 [err] Reading config failed--see warnings above.\n```\n\nUser の値に問題があるとは /var/lib/tor ディレクトリにあるファイルやディレクトリの所有者が tor になっていないことを意味します。以下の find コマンドで確認できます:\n\n```\nfind /var/lib/tor/ ! -user tor\n```\n\n上記のコマンドで出力されたファイルあるいはディレクトリの所有者を変更する必要があります。ファイルごとに所有者を変更するには:\n\n```\nchown tor:tor /var/lib/tor/filename\n```\n\nもしくは上の find コマンドで出力されたファイルの所有権を全て変更するには:\n\n```\nfind /var/lib/tor/ ! -user tor -exec chown tor:tor {} \\;\n```\n\nこれで Tor が正しく起動するようになるはずです。\n\n修正しても tor サービスを起動できない場合、root でサービスを起動してみてください (tor ユーザーに切り替わります)。/etc/tor/torrc ファイルの user の名前を変更します:\n\n```\nUser tor\n```\n\nsystemd の tor サービスファイル /usr/lib/systemd/system/tor.service を以下のように修正:\n\n```\n[Service]\nUser=root\nGroup=root\nType=simple\n```\n\nプロセスは tor ユーザーで実行されます。ユーザーとグループ ID を tor に変更して書き込み可能にしてください:\n\n```\n# chown -R tor:tor /var/lib/tor/\n# chmod -R 755 /var/lib/tor\n```\n\n変更を保存したらデーモンを起動:\n\n```\n# systemctl --system daemon-reload\n# systemctl start tor.service\n```\n\n"
    },
    {
      "title": "Tor-ブラウザのプロキシ問題",
      "level": 3,
      "content": "通常、tor-browser-binAUR は大幅なカスタマイズなしで動作します。以前にインストール/構成されバンドルされたプロキシが、いずれかの Web サイトで proxy server is refusing connections というエラーで失敗した場合は、~/.tor-browser ディレクトリを移動または削除して設定をリセットすることを検討してください。\n\n"
    },
    {
      "title": "Tor-ブラウザの空白の黒い画面",
      "level": 3,
      "content": "AppArmor を使用している場合は、必要なリソースへのアクセスを許可するように torbrowser プロファイルを更新して下さい。[5]、[6]:\n\n```\n/etc/apparmor.d/local/torbrowser.Browser.firefox\n```\n\n```\nowner /{dev,run}/shm/org.mozilla.*.* rw,\n```\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Running the Tor client on Linux/BSD/Unix\n- Unix-based Tor Articles\n- Software commonly integrated with Tor\n- How to set up a Tor Hidden Service\n- List of tor pluggable transports for obfuscating tor's traffic\n\n"
    }
  ]
}
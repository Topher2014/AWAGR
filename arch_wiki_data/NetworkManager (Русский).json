{
  "title": "NetworkManager (Русский)",
  "url": "https://wiki.archlinux.org/title/NetworkManager_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Настройка сети\n- Настройка беспроводной сети\n\nNetworkManager — это программа для обнаружения и настройки систем для автоматического подключения к сетям. Функциональность NetworkManager может быть полезна как для беспроводных, так и проводных сетей. При подключении к беспроводным сетям NetworkManager отдаёт предпочтение ранее известным сетям и имеет возможность переключаться на наиболее стабильную сеть. Приложения, поддерживающие NetworkManager, могут переключаться из онлайн-режима в автономный. NetworkManager также предпочитает проводные соединения беспроводным, поддерживает модемные соединения и некоторые типы VPN. NetworkManager изначально был разработан компанией Red Hat, а в настоящее время поддерживается проектом GNOME.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет networkmanager, который содержит демон, консольный инструмент nmcli и интерфейс nmtui на основе curses.\n\n"
    },
    {
      "title": "Включение NetworkManager",
      "level": 3,
      "content": "После установки запустите и включите службу NetworkManager.service. После запуска NetworkManager автоматически подключится ко всем «системным соединениям», которые уже были заранее настроены в системе. «Пользовательские соединения» настраиваются и подключаются через nmcli или апплет.\n\n- Каждый сетевой интерфейс должен управляться только одним DHCP-клиентом или сетевым менеджером, поэтому рекомендуется запускать в системе только один DHCP-клиент или сетевой менеджер. Вы можете посмотреть список запущенных служб командой systemctl --type=service и затем остановить или перенастроить конфликтующие.\n- Если systemd-resolved не запущен, вы получите кучу ошибок в журнале. Подробнее смотрите #Unit dbus-org.freedesktop.resolve1.service not found.\n\n"
    },
    {
      "title": "Дополнительные интерфейсы",
      "level": 3,
      "content": "- nm-connection-editor предоставляет графический интерфейс,\n- network-manager-applet предоставляет апплет для трея (nm-applet).\n\n"
    },
    {
      "title": "Поддержка мобильной сети",
      "level": 3,
      "content": "NetworkManager использует ModemManager для подключения к мобильным сетям.\n\nУстановите пакеты modemmanager и usb_modeswitch. Затем запустите и включите службу ModemManager.service.\n\nМожет понадобиться перезапустить NetworkManager.service, чтобы он обнаружил ModemManager. После перезапуска переподключите модем, и он должен обнаружиться.\n\nПри добавлении нового соединения (например через nm-connection-editor) выберите «Мобильное широкополосное подключение». После выбора оператора и тарифного плана остальные настройки (в частности APN) должны заполниться автоматически на основе информации из mobile-broadband-provider-info.\n\n"
    },
    {
      "title": "Поддержка PPPoE / DSL",
      "level": 3,
      "content": "Установите пакет ppp и добавьте новое соединение через nm-connection-editor.\n\n"
    },
    {
      "title": "Поддержка VPN",
      "level": 3,
      "content": "С версии 1.16 NetworkManager поддерживает WireGuard, нужен лишь модуль ядра wireguard. Подробности читайте в посте в блоге.\n\nПоддержка других VPN осуществляется через систему плагинов. Доступны следующие пакеты:\n\n- networkmanager-openconnect для OpenConnect\n- networkmanager-openvpn для OpenVPN\n- networkmanager-pptp для клиента PPTP\n- networkmanager-strongswan для strongSwan\n- networkmanager-vpnc\n- networkmanager-fortisslvpnAUR\n- networkmanager-iodine-gitAUR\n- networkmanager-libreswanAUR\n- networkmanager-l2tp\n- networkmanager-ssh-gitAUR\n- network-manager-sstp\n\n- Чтобы DNS полноценно работал при использовании VPN, вам может понадобиться настроить условное перенаправление.\n- Некоторые плагины могут не иметь интерфейса для командной строки или вообще не работать без запущенного апплета для трея. Это обычно не проблема при использовании среды рабочего стола, но если вы её не используете, запускайте #nm-applet вручную при работе с VPN-соединениями, чтобы плагин мог отобразить все необходимые для соединения диалоговые окна, такие как запрос пароля. [1]\n\n"
    },
    {
      "title": "Использование",
      "level": 2,
      "content": "NetworkManager поставляется с командами nmcli(1) и nmtui(1).\n\n"
    },
    {
      "title": "Примеры nmcli",
      "level": 3,
      "content": "Посмотреть список доступных сетей Wi-Fi:\n\n```\n$ nmcli device wifi list\n```\n\nПодключиться к сети Wi-Fi:\n\n```\n$ nmcli device wifi connect SSID_или_BSSID password пароль\n```\n\nПодключиться к скрытой сети Wi-Fi:\n\n```\n$ nmcli device wifi connect SSID_или_BSSID password пароль hidden yes\n```\n\nПодключиться к Wi-Fi на интерфейсе wlan1:\n\n```\n$ nmcli device wifi connect SSID_или_BSSID password пароль ifname wlan1 имя_профиля\n```\n\nОтключить сетевой интерфейс:\n\n```\n$ nmcli device disconnect ifname eth0\n```\n\nПолучить список соединений с их именами, UUID, типами и используемыми устройствами:\n\n```\n$ nmcli connection show\n```\n\nАктивировать соединение (то есть подключиться к сети с существующим профилем):\n\n```\n$ nmcli connection up имя_или_uuid\n```\n\nУдалить соединение:\n\n```\n$ nmcli connection delete имя_или_uuid\n```\n\nПосмотреть список сетевых устройств и их состояние:\n\n```\n$ nmcli device\n```\n\nОтключить Wi-Fi:\n\n```\n$ nmcli radio wifi off\n```\n\n"
    },
    {
      "title": "Изменение соединения",
      "level": 3,
      "content": "Полный список параметров можно посмотреть в nm-settings(5).\n\nСперва получите список соединений:\n\n```\n$ nmcli connection\n```\n\n```\nNAME                    UUID                                  TYPE      DEVICE\nПроводное соединение 2  e7054040-a421-3bef-965d-bb7d60b7cecf  ethernet  enp5s0\nПроводное соединение 1  997f2782-f0fc-301d-bfba-15421a2735d8  ethernet  enp0s25\nMY-HOME-WIFI-5G         92a0f7b3-2eba-49ab-a899-24d83978f308  wifi       --\n```\n\nИмя, указанное в первом столбце, можно использовать в качестве идентификатора соединения. Здесь для примера используем Проводное соединение 2.\n\nЕсть три способа настройки соединения после его создания:\n\nДля удаления настройки укажите пустое значение (\"\"):\n\n"
    },
    {
      "title": "nmtui",
      "level": 3,
      "content": "В состав NetworkManager входит программа с текстовым интерфейсом (TUI) для управления соединениями, настройки имени хоста и управления беспроводными картами. Запустить её можно командой nmtui.\n\n"
    },
    {
      "title": "Фронтенды",
      "level": 2,
      "content": "Для интеграции со средой рабочего стола обычно используют апплет в трее. Он предоставляет не только лёгкий доступ к настройкам сети, но и агент для хранения паролей. Многие среды рабочего стола имеют свои собственные апплеты; если в вашей среде его нет, вы можете использовать #nm-applet.\n\n"
    },
    {
      "title": "GNOME",
      "level": 3,
      "content": "В GNOME есть свой собственный инструмент, доступный в настройках сети.\n\n"
    },
    {
      "title": "KDE Plasma",
      "level": 3,
      "content": "Установите пакет plasma-nm и добавьте виджет сети на панель задач.\n\n"
    },
    {
      "title": "nm-applet",
      "level": 3,
      "content": "network-manager-applet — фронтенд на базе GTK 3, который работает в окружениях Xorg как значок в трее.\n\nДля сохранения паролей установите и настройте приложение, реализующее Secret Service D-Bus API: например, GNOME Keyring, KDE Wallet или KeePassXC.\n\nИмейте в виду, что после включения флажка Все пользователи могут подключаться к этой сети NetworkManager сохраняет пароль открытым текстом, хотя соответствующий файл доступен только для root (или других пользователей через nm-applet). Смотрите #Шифрование паролей Wi-Fi.\n\nДля запуска nm-applet без панели задач можно использовать trayer или stalonetray. Например, вы можете сделать такой скрипт:\n\n```\nnmgui\n```\n\n```\n#!/bin/sh\nnm-applet    2>&1 > /dev/null &\nstalonetray  2>&1 > /dev/null\nkillall nm-applet\n```\n\nПосле закрытия окна stalonetray он автоматически завершит nm-applet.\n\nАпплет может уведомлять о событиях, таких как как подключение к сети Wi-Fi или отключение от неё. Чтобы эти уведомления отображались, убедитесь, что у вас установлен сервер уведомлений — смотрите статью Desktop notifications (Русский). Если вы используете апплет без сервера уведомлений, вы можете увидеть некоторые сообщения в stdout/stderr, и апплет может зависнуть. Смотрите [2].\n\nЗапустить nm-applet с отключенными уведомлениями можно так:\n\n```\n$ nm-applet --no-agent\n```\n\n```\nExec=nm-applet --no-agent\n```\n\n"
    },
    {
      "title": "Appindicator",
      "level": 4,
      "content": "С версии 1.18.0 в официальном пакете network-manager-applet появилась поддержка Appindicator. Для использования Appindicator добавьте соответствующий параметр:\n\n```\n$ nm-applet --indicator\n```\n\n"
    },
    {
      "title": "networkmanager-dmenu",
      "level": 3,
      "content": "Ещё вариант — networkmanager-dmenu-gitAUR, небольшой скрипт для управления соединениями NetworkManager через dmenu или rofi вместо nm-applet. Он предоставляет все основные функции, такие как подключение к существующим Wi-Fi или проводным соединениям NetworkManager, подключение к новым Wi-Fi соединениям, запрос пароля по необходимости, подключение к существующим VPN соединениям, включение/выключение сети, запуск nm-connection-editor, подключение к Bluetooth-сетям.\n\n"
    },
    {
      "title": "switchboard",
      "level": 3,
      "content": "switchboard из Pantheon предлагает способ настройки NetworkManager, не зависящий от среды рабочего стола, в сочетании с switchboard-plug-network и nm-connection-editor. Его можно запустить командой:\n\n```\n$ io.elementary.settings\n```\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "NetworkManager требует некоторых дополнительных шагов для правильной работы. Убедитесь, что вы настроили /etc/hosts как описано в разделе Настройка сети#Имя хоста.\n\nГлобальный файл настроек — /etc/NetworkManager/NetworkManager.conf. Дополнительные файлы можно добавить в каталог /etc/NetworkManager/conf.d/. Обычно менять их не требуется.\n\nПосле изменения файлов настроек нужно применить изменения:\n\n```\n# nmcli general reload\n```\n\n"
    },
    {
      "title": "NetworkManager-wait-online",
      "level": 3,
      "content": "Включение NetworkManager.service автоматически включает NetworkManager-wait-online.service — oneshot-службу, которая ждёт окончания настройки сети. У неё есть WantedBy=network-online.target, так что она завершится только когда сам network-online.target будет включен или задействован каким-то другим юнитом. Смотрите также systemd (Русский)#Запуск сервисов после подключения к сети.\n\nПо умолчанию NetworkManager-wait-online.service ждёт не появления сети, а завершения загрузки NetworkManager (смотрите nm-online(1)). Если она завершится до реального появления сети, это может привести к проблемам запуска других служб, зависимых от сети. Для решения проблемы создайте drop-in файл для этого юнита, чтобы убрать параметр -s из строки ExecStart:\n\n```\n[Service]\nExecStart=\nExecStart=/usr/bin/nm-online -q\n```\n\nОднако это может привести к другим проблемам.\n\nИногда служба по-прежнему не запускается при загрузке из-за слишком маленького таймаута. Отредактируйте службу, прописав для NM_ONLINE_TIMEOUT вместо 60 значение побольше.\n\n"
    },
    {
      "title": "Настройка разрешений PolicyKit",
      "level": 3,
      "content": "По умолчанию пользователи в активных локальных сеансах могут редактировать большинство сетевых настроек без пароля. Проверьте тип сеанса как описано в разделе Устранение часто встречающихся неполадок#Разрешения сессии. В большинстве случаев всё должно работать из коробки.\n\nНекоторые действия (например, изменение имени хоста системы) требуют пароля администратора. В этом случае вам нужно добавить себя в группу wheel и запустить агент аутентификации Polkit, который будет запрашивать пароль.\n\nДля удалённых сеансов (например, headless VNC) у вас есть несколько вариантов получения привилегий, необходимых для работы с NetworkManager:\n\n1. Добавить себя в группу wheel. Вам нужно будет вводить свой пароль при каждом действии. Имейте в виду, что эта группа также может предоставлять другие разрешения, такие как возможность использовать sudo без ввода пароля root.\n1. Добавить себя в группу network и создать файл /etc/polkit-1/rules.d/50-org.freedesktop.NetworkManager.rules со следующим содержимым: polkit.addRule(function(action, subject) { if (action.id.indexOf(\"org.freedesktop.NetworkManager.\") == 0 && subject.isInGroup(\"network\")) { return polkit.Result.YES; } }); Все пользователи в группе network смогут добавлять и удалять сети без пароля (что означает, что вам не понадобится запускать агент аутентификации Polkit, так что этот вариант работает в том числе через SSH).\n\n```\npolkit.addRule(function(action, subject) {\n  if (action.id.indexOf(\"org.freedesktop.NetworkManager.\") == 0 && subject.isInGroup(\"network\")) {\n    return polkit.Result.YES;\n  }\n});\n```\n\n"
    },
    {
      "title": "Настройки прокси",
      "level": 3,
      "content": "NetworkManager поддерживает некоторые настройки прокси. Хотя их нельзя изменить напрямую через nmtui, nm-applet и nmcli поддерживают их. Смотрите настройки прокси в nm-settings-nmcli(5).\n\nКроме того, пользовательские команды прокси всегда можно запустить с помощью диспетчерских скриптов; смотрите раздел #Примеры диспетчерских скриптов.\n\nСмотрите также Proxy settings.\n\n"
    },
    {
      "title": "Проверка соединения",
      "level": 3,
      "content": "NetworkManager может попытаться связаться с веб-сервером после подключения к сети, чтобы определить, находится ли он, например, за captive portal. По умолчанию для проверки используется ping.archlinux.org (это CNAME-псевдоним для redirect.archlinux.org, прописан в файле /usr/lib/NetworkManager/conf.d/20-connectivity.conf). Если вы хотите прописать другой адрес, создайте файл /etc/NetworkManager/conf.d/20-connectivity.conf, смотрите NetworkManager.conf(5) § CONNECTIVITY SECTION. Пример использования серверов GNOME (использовать сам GNOME при этом необязательно):\n\n```\n/etc/NetworkManager/conf.d/20-connectivity.conf\n```\n\n```\n[connectivity]\nuri=http://nmcheck.gnome.org/check_network_status.txt\n```\n\nЧтобы отключить проверку соединения NetworkManager, используйте следующую конфигурацию. Это может быть полезно при подключении к VPN, которая блокирует проверки соединения.\n\n```\n/etc/NetworkManager/conf.d/20-connectivity.conf\n```\n\n```\n[connectivity]\nenabled=false\n```\n\n"
    },
    {
      "title": "Captive portal",
      "level": 3,
      "content": "При использовании сетей, в которых используется captive portal, среда рабочего стола может автоматически открыть окно с запросом учётных данных. Если ваша среда этого не делает, вы можете использовать capnet-assist (однако на данный момент в нём сломан диспетчерский скрипт). В качестве альтернативы можно создать свой диспетчерский скрипт:\n\n```\n/etc/NetworkManager/dispatcher.d/90-open_captive_portal\n```\n\n```\n#!/bin/sh -e\n# Script to dispatch NetworkManager events\n#\n# Runs shows a login webpage on walled garden networks.\n# See NetworkManager(8) for further documentation of the dispatcher events.\n\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nif [ -x \"/usr/bin/logger\" ]; then\n    logger=\"/usr/bin/logger -s -t captive-portal\"\nelse\n    logger=\":\"\nfi\n\nwait_for_process() {\n    PNAME=$1\n    while [ -z \"$(/usr/bin/pgrep $PNAME)\" ]; do\n        sleep 3;\n    done\n}\n\n#launch the browser, but on boot we need to wait that nm-applet starts\nstart_browser() {\n    local user=\"$1\"\n    local display=\"$2\"\n\n    export DISPLAY=\"$display\"\n    wait_for_process nm-applet\n\n    export XAUTHORITY=\"/home/$user/.Xauthority\"\n\n    $logger \"Running browser as '$user' with display '$display' to login in captive portal\"\n    sudo -u \"$user\" --preserve-env=DISPLAY,XAUTHORITY -H xdg-open http://capnet.elementary.io 2>&1 > /dev/null\n}\n\n# Run the right scripts\ncase \"$2\" in\n    connectivity-change)\n    $logger -p user.debug \"dispatcher script triggered on connectivity change: $CONNECTIVITY_STATE\"\n    if [ \"$CONNECTIVITY_STATE\" = \"PORTAL\" ]; then\n        # Match last column of who's output with ' :[at least one digit] '\n        who | awk '$NF ~ /\\(:[0-9]+\\)/ { print $1 \" \" substr($NF, 2, length($NF)-2) };' | \\\n        while read user display; do\n            start_browser $user $display || $logger -p user.err \"Failed for user: '$user' display: '$display'\"\n        done\n    fi\n    ;;\n    *)\n    # In a down phase\n    exit 0\n    ;;\nesac\n```\n\nСделайте скрипт исполняемым. Он предполагает, что вы используете X, и просто открывает http-страницу. Это может сработать не для всех.\n\nПерезапустите службу NetworkManager.service или перезагрузитесь для применения изменений. После этого скрипт должен открыть страницу входа, как только обнаружит captive portal.\n\nПростым решением является captive-portal-sh — скрипт, который получает адрес captive portal и открывает его в браузере по умолчанию (только для Wayland).\n\nЕщё одно решение — captive-browser-gitAUR, основанное на Google Chrome.\n\n"
    },
    {
      "title": "Клиент DHCP",
      "level": 3,
      "content": "По умолчанию NetworkManager использует свой внутренний DHCP-клиент. Внутренний плагин DHCPv4 основан на nettools n-dhcp4, в то время как плагин DHCPv6 основан на коде из systemd-networkd.\n\nДля использования другого клиента DHCP установите какую-нибудь альтернативу:\n\n- dhcpcd — dhcpcd\n- dhclient — dhclient\n\nДля выбора клиента DHCP пропишите опцию main.dhcp=имя_клиента_dhcp в каком-нибудь файле в каталоге /etc/NetworkManager/conf.d/, например:\n\n```\n/etc/NetworkManager/conf.d/dhcp-client.conf\n```\n\n```\n[main]\ndhcp=dhcpcd\n```\n\nNote: Не включайте юниты, идущие в комплекте с пакетами dhclient и dhcpcd: они будут конфликтовать с NetworkManager. Смотрите примечание в разделе #Установка.\n\nНе включайте юниты, идущие в комплекте с пакетами dhclient и dhcpcd: они будут конфликтовать с NetworkManager. Смотрите примечание в разделе #Установка.\n\n"
    },
    {
      "title": "Управление DNS",
      "level": 3,
      "content": "Управление DNS в NetworkManager описано на вики-странице проекта GNOME: Projects/NetworkManager/DNS.\n\n"
    },
    {
      "title": "Кэширование DNS и условное перенаправление",
      "level": 4,
      "content": "NetworkManager имеет плагин для включения кэширования DNS и условного перенаправления (conditional forwarding, ранее известный как \"split DNS\") с использованием dnsmasq или systemd-resolved. Преимущества этого в том, что запросы DNS будут кэшироваться, что сокращает время резолвинга, а DNS-запросы для хостов VPN будут направляться на соответствующие DNS-серверы VPN. Это особенно полезно, если вы подключены к нескольким VPN.\n\nУстановите dnsmasq и пропишите main.dns=dnsmasq в каком-нибудь файле в каталоге /etc/NetworkManager/conf.d/:\n\n```\n/etc/NetworkManager/conf.d/dns.conf\n```\n\n```\n[main]\ndns=dnsmasq\n```\n\nЗатем выполните nmcli general reload от имени root. NetworkManager автоматически запустит dnsmasq и добавит 127.0.0.1 в /etc/resolv.conf. Исходные DNS-серверы можно найти в файле /run/NetworkManager/no-stub-resolv.conf. Вы можете проверить, используется ли dnsmasq, дважды выполнив один и тот же DNS-запрос с помощью drill example.com и сравнив время запроса.\n\n- Вам не нужно запускать dnsmasq.service или изменять /etc/dnsmasq.conf. NetworkManager запустит dnsmasq без использования службы systemd и без чтения стандартных файлов настроек dnsmasq.\n- Экземпляр dnsmasq, который запускается NetworkManager'ом, будет принимать запросы на 127.0.0.1:53, вы не можете запустить другие программы (в том числе dnsmasq.service) на том же адресе и порту.\n\nСвои настройки для dnsmasq можно добавить в каталог /etc/NetworkManager/dnsmasq.d/. Например, для изменения размера кэша DNS (который находится в оперативной памяти):\n\n```\n/etc/NetworkManager/dnsmasq.d/cache.conf\n```\n\n```\ncache-size=1000\n```\n\nПроверить синтаксис можно такой командой:\n\n```\n$ dnsmasq --test --conf-file=/dev/null --conf-dir=/etc/NetworkManager/dnsmasq.d\n```\n\nСмотрите список доступных опций в dnsmasq(8).\n\nВключение dnsmasq в NetworkManager может сломать IPv6-only DNS lookups (т. е. drill -6 [hostname]), которые без него работали бы. Чтобы решить эту проблему, создание следующего файла настроит dnsmasq на прослушивание IPv6 loopback:\n\n```\n/etc/NetworkManager/dnsmasq.d/ipv6-listen.conf\n```\n\n```\nlisten-address=::1\n```\n\nКроме того, dnsmasq также не определяет приоритеты upstream DNS IPv6. К сожалению, NetworkManager этого не делает (Ubuntu Bug). Обходной путь — отключить IPv4 DNS в конфигурации NetworkManager, если таковой существует.\n\nЭкземпляр dnsmasq, который запускается NetworkManager'ом, по умолчанию не будет проверять DNSSEC, так как он запускается с параметром --proxy-dnssec. Он будет доверять любой информации DNSSEC, полученной от вышестоящего DNS-сервера.\n\nЧтобы dnsmasq правильно проверял DNSSEC, тем самым ломая разрешение DNS с серверами имён, которые его не поддерживают, создайте следующий файл настроек:\n\n```\n/etc/NetworkManager/dnsmasq.d/dnssec.conf\n```\n\n```\nconf-file=/usr/share/dnsmasq/trust-anchors.conf\ndnssec\n```\n\nNetworkManager может использовать systemd-resolved в качестве распознавателя DNS и кэша. Перед использованием убедитесь, что systemd-resolved правильно настроен и что служба systemd-resolved.service запущена.\n\nNetworkManager автоматически будет использовать systemd-resolved, если файл /etc/resolv.conf является символической ссылкой на /run/systemd/resolve/stub-resolv.conf, /run/systemd/resolve/resolv.conf или /usr/lib/systemd/resolv.conf.\n\nВы можете включить его явно, добавив настройку main.dns=systemd-resolved в какой-нибудь файл в каталоге /etc/NetworkManager/conf.d/:\n\n```\n/etc/NetworkManager/conf.d/dns.conf\n```\n\n```\n[main]\ndns=systemd-resolved\n```\n\nЕсли openresolv позволяет подключить ваш локальный DNS-резолвер в качестве абонента, подключите его и настройте NetworkManager на использование openresolv.\n\nПоскольку NetworkManager выглядит как один «интерфейс» для resolvconf, невозможно реализовать условное перенаправление между двумя соединениями NetworkManager. Смотрите NetworkManager issue 153.\n\nЭта проблема может быть частично решена, если вы установите private_interfaces=\"*\" в /etc/resolvconf.conf[5]. Любые запросы к доменам, которых нет в списке поисковых доменов, не будут перенаправлены. Они будут обработаны в соответствии с конфигурацией локального резолвера, например, перенаправлены на другой DNS-сервер или разрешены рекурсивно от корня DNS.\n\n"
    },
    {
      "title": "Пользовательские серверы DNS",
      "level": 4,
      "content": "Чтобы задать DNS-серверы для всех соединений, укажите их в NetworkManager.conf(5), используя синтаксис servers=ipадрес1,ipадрес2,ipадрес3 в разделе [global-dns-domain-*]. Например:\n\n```\n/etc/NetworkManager/conf.d/dns-servers.conf\n```\n\n```\n[global-dns-domain-*]\nservers=::1,127.0.0.1\n```\n\n- Если вы используете плагин dnsmasq или systemd-resolved или #Распознаватель DNS с абонентом openresolv, не указывайте loopback-адреса, это сломает DNS.\n- Указанные серверы не отправляются на systemd-resolved, вместо них используются DNS-серверы соединения. Смотрите NetworkManager issue 1366 и systemd issue 33754.\n\nНастройка зависит от типа используемого графического интерфейса. Обычно для этого нужно открыть изменение соединения через апплет и выбрать метод Только автоматические адреса (DHCP), затем в поле Серверы DNS будет можно их ввести примерно в таком виде: 127.0.0.1, DNS-сервер-раз, ....\n\nЧтобы настроить серверы DNS для отдельного соединения, измените параметры ipv4.dns и ipv6.dns (и связанные с ними dns-search и dns-options) в настройках соединения.\n\nЕсли method установлен на auto (при использовании DHCP/RA), также установите ignore-auto-dns на yes.\n\nЧтобы использовать DNS over TLS (требуется systemd-resolved), укажите серверы DNS, используя синтаксис dns=ip.адрес#имясервера; и дополнительно установите параметр connection.dns-over-tls в значение 2. Пример для Quad9:\n\n```\n/etc/NetworkManager/system-connections/Example Wi-Fi.nmconnection\n```\n\n```\n...\n[connection]\n...\ndns-over-tls=2\n\n[ipv4]\n...\ndns=9.9.9.9#dns.quad9.net;149.112.112.112#dns.quad9.net;\nignore-auto-dns=true\n\n[ipv6]\n...\ndns=2620:fe::fe#dns.quad9.net;2620:fe::9#dns.quad9.net;\nignore-auto-dns=true\n```\n\n"
    },
    {
      "title": "/etc/resolv.conf",
      "level": 4,
      "content": "Управление файлом /etc/resolv.conf настраивается параметром main.rc-manager. Пакет networkmanager использует symlink, что отличается от значения по умолчанию auto в апстриме. Документация по этой настройке доступна в NetworkManager.conf(5).\n\nNetworkManager также предоставляет хуки через так называемые диспетчерские скрипты (dispatcher scripts), которые можно использовать для обновления /etc/resolv.conf после изменения состояния сети. Смотрите #Сетевые службы с диспетчером NetworkManager и NetworkManager(8) для более подробной информации.\n\n- Если NetworkManager настроен на использование dnsmasq или systemd-resolved, в файл /etc/resolv.conf будут записаны соответствующие loopback-адреса.\n- Файл resolv.conf, который NetworkManager записывает или мог бы записать, находится в /run/NetworkManager/resolv.conf.\n- Файл resolv.conf с назначенными серверами имен и поисковыми доменами находится в /run/NetworkManager/no-stub-resolv.conf.\n\nЧтобы NetworkManager больше не трогал файл /etc/resolv.conf, пропишите опцию main.dns=none в файле настроек внутри /etc/NetworkManager/conf.d/:\n\n```\n/etc/NetworkManager/conf.d/dns.conf\n```\n\n```\n[main]\ndns=none\n```\n\nПосле этого /etc/resolv.conf может оказаться сломанной символической ссылкой, которую нужно будет удалить. Затем просто создайте новый файл /etc/resolv.conf.\n\n- Не указывайте main.rc-manager=resolvconf при использовании systemd-resolved, вместо этого создайте символическую ссылку /etc/resolv.conf или настройте NetworkManager на явное использование systemd-resolved.\n- Убедитесь, что пакет systemd-resolvconf не установлен, если systemd-resolved не используется. Пока systemd-resolved.service не запущен, это сломает все сетевые приложения (не только NetworkManager), которые используют resolvconf.\n\nЧтобы настроить NetworkManager на использование openresolv, установите опцию main.rc-manager=resolvconf в файле настроек внутри /etc/NetworkManager/conf.d/:\n\n```\n/etc/NetworkManager/conf.d/rc-manager.conf\n```\n\n```\n[main]\nrc-manager=resolvconf\n```\n\n"
    },
    {
      "title": "Межсетевой экран",
      "level": 3,
      "content": "Вы можете назначить зону firewalld на основе вашего текущего соединения. Например, ограничительный брандмауэр на работе и менее ограничительный дома.\n\nЭто также можно сделать с помощью диспетчера NetworkManager.\n\n"
    },
    {
      "title": "Сетевые службы с диспетчером NetworkManager",
      "level": 2,
      "content": "Существует сетевые службы, которые желательно не запускать до тех пор, пока NetworkManager не настроит сеть. NetworkManager имеет возможность запускать службы при подключении к сети и останавливать их при отключении (например, при использовании NFS, SMB и NTPd).\n\nДля активации этой возможности запустите и включите службу NetworkManager-dispatcher.service.\n\nПосле включения службы можно добавлять скрипты в каталог /etc/NetworkManager/dispatcher.d.\n\nВладельцем скриптов должен быть root, иначе диспетчер не станет их выполнять. Для дополнительной безопасности укажите также группу root:\n\n```\n# chown root:root /etc/NetworkManager/dispatcher.d/10-скрипт.sh\n```\n\nСделайте файл исполняемым.\n\nСкрипты будут запускаться в алфавитном порядке во время подключения и в обратном алфавитном порядке во время отключения. Чтобы чётко определить, в каком порядке они будут запускаться, обычно используют цифровые символы перед именем скрипта (например, 10-portmap или 30-netfs (что гарантирует, что portmapper будет запущен до попытки монтирования NFS).\n\nСкрипты будут принимать два аргумента:\n\n- Имя интерфейса: например, eth0\n- Действие: up, down, vpn-up, vpn-down, ... (полный список приведён в NetworkManager-dispatcher(8))\n\n"
    },
    {
      "title": "Обход таймаута диспетчера",
      "level": 3,
      "content": "Если всё работает, то этот раздел вам не нужен. Однако существует общая проблема, связанная с запуском диспетчерских скриптов, которые выполняются долго. Изначально использовался внутренний тайм-аут, равный всего трём секундам. Если вызванный скрипт не успевал завершиться, диспетчер его убивал. Позже таймаут был увеличен примерно до 20 секунд (подробнее в баг-трекере). Если таймаут всё ещё создает проблемы, то можно обойтись без него, используя drop-in файл, чтобы служба NetworkManager-dispatcher.service оставалась активной после завершения работы:\n\n```\n/etc/systemd/system/NetworkManager-dispatcher.service.d/remain_after_exit.conf\n```\n\n```\n[Service]\nRemainAfterExit=yes\n```\n\nТеперь запустите и включите изменённую службу NetworkManager-dispatcher.\n\nNote: **нужно** \n\n"
    },
    {
      "title": "Автоматическая установка часового пояса",
      "level": 4,
      "content": "Установите tzupdateAUR и создайте такой скрипт (не забудьте сделать его исполняемым):\n\n```\n/etc/NetworkManager/dispatcher.d/update-timezone.sh\n```\n\n```\n#!/bin/bash\n# Автоматическая установка часового пояса после подключения к сети\niface=$1\naction=$2\n\nif [[ $iface != lo && $action == up ]]; then\n    tz=$(tzupdate -s 1 -p 2>/dev/null)\n    if [[ -n $tz && -r /usr/share/zoneinfo/$tz ]]; then\n\ttimedatectl set-timezone $tz\n    fi\nfi\n```\n\nЕсли нужно, обновите условие $iface != lo на сравнение с нужным вам сетевым интерфейсом.\n\n"
    },
    {
      "title": "Монтирование удалённого каталога с помощью sshfs",
      "level": 4,
      "content": "Поскольку скрипт выполняется в очень ограниченной среде, вам нужно экспортировать SSH_AUTH_SOCK, чтобы подключиться к SSH-агенту. Это можно сделать разными способами, подробности есть в этом сообщении. Пример ниже работает с GNOME Keyring и попросит вас ввести пароль, если он ещё не разблокирован. Если NetworkManager подключается автоматически при входе в систему, есть вероятность, что gnome-keyring ещё не будет запущен на момент запуска скрипта, и экспорт будет неудачным (поэтому здесь может пригодиться sleep). UUID, который нужно использовать, можно узнать с помощью команды nmcli connection status или nmcli connection list.\n\n```\n#!/bin/sh\nUSER='пользователь'\nREMOTE='пользователь@хост:/удалённый/путь'\nLOCAL='/локальный/путь'\n\ninterface=$1 status=$2\nif [ \"$CONNECTION_UUID\" = \"uuid\" ]; then\n  case $status in\n    up)\n      # sleep 10\n      SSH_AUTH_SOCK=$(find /tmp -maxdepth 1 -type s -user \"$USER\" -name 'ssh')\n      export SSH_AUTH_SOCK\n      su \"$USER\" -c \"sshfs $REMOTE $LOCAL\"\n      ;;\n    down)\n      fusermount -u \"$LOCAL\"\n      ;;\n  esac\nfi\n```\n\n"
    },
    {
      "title": "Монтирование общих ресурсов SMB",
      "level": 4,
      "content": "Некоторые общие ресурсы SMB доступны только в определённых сетях или местах (например, дома). Можно использовать диспетчер для монтирования только тех ресурсов SMB, которые доступны в вашем текущем местоположении.\n\nСледующий скрипт проверит, подключены ли мы к определённой сети, и соответственно смонтирует общие ресурсы:\n\n```\n/etc/NetworkManager/dispatcher.d/30-mount-smb.sh\n```\n\n```\n#!/bin/sh\n\n# Найдите UUID нужного соединения с помощью команды «nmcli connection show».\n# Поддерживаются все типы соединений NetworkManager: беспроводные, VPN, проводные...\nif [ \"$2\" = \"up\" ]; then\n  if [ \"$CONNECTION_UUID\" = \"uuid\" ]; then\n    mount /ваша/точка/монтирования &\n    # можно добавить другие ресурсы по необходимости\n  fi\nfi\n```\n\nСледующий скрипт размонтирует все общие ресурсы SMB перед программным отключением от определённой сети:\n\n```\n/etc/NetworkManager/dispatcher.d/pre-down.d/30-umount-smb.sh\n```\n\n```\n#!/bin/sh\n\nif [ \"$CONNECTION_UUID\" = \"uuid\" ]; then\n  umount -a -l -t cifs\nfi\n```\n\nСледующий скрипт попытается размонтировать все общие ресурсы SMB после неожиданного отключения от определённой сети:\n\n```\n/etc/NetworkManager/dispatcher.d/40-umount-smb.sh\n```\n\n```\n#!/bin/sh\n\nif [ \"$CONNECTION_UUID\" = \"uuid\" ]; then\n  if [ \"$2\" = \"down\" ]; then\n    umount -a -l -t cifs\n  fi\nfi\n```\n\n- С версии NetworkManager 0.9.8 события pre-down и down не выполняются при выключении или перезапуске, более подробную информацию смотрите в этом баг-репорте.\n- Эти umount-скрипты всё ещё могут привести к зависанию приложений, обращающихся к примонтированным ресурсам.\n\nТакже можно использовать скрипт, подобный описанному в разделе NFS#Using a NetworkManager dispatcher:\n\n```\n/etc/NetworkManager/dispatcher.d/30-smb.sh\n```\n\n```\n#!/bin/sh\n\n# Найдите UUID нужного соединения с помощью команды «nmcli con show».\n# Поддерживаются все типы соединений NetworkManager: беспроводные, VPN, проводные...\nWANTED_CON_UUID=\"ИЗМЕНИ-МЕНЯ-9c7eff15-010a-4b1c-a786-9b4efa218ba9\"\n\nif [ \"$CONNECTION_UUID\" = \"$WANTED_CON_UUID\" ]; then\n\n    # Параметр скрипта $1: имя сетевого интерфейса, не используется\n    # Параметр скрипта $2: отправленное событие\n\n    case \"$2\" in\n        \"up\")\n            mount -a -t cifs\n            ;;\n        \"down\"|\"pre-down\"|\"vpn-pre-down\")\n            umount -l -a -t cifs >/dev/null\n            ;;\n    esac\nfi\n```\n\nСоздайте символическую ссылку в каталоге /etc/NetworkManager/dispatcher.d/pre-down/, чтобы скрипт стал перехватывать события pre-down:\n\n```\n# ln -s ../30-smb.sh /etc/NetworkManager/dispatcher.d/pre-down.d/30-smb.sh\n```\n\n"
    },
    {
      "title": "Монтирование общих ресурсов NFS",
      "level": 4,
      "content": "Смотрите NFS#Using a NetworkManager dispatcher.\n\n"
    },
    {
      "title": "Использование диспетчера для переключения беспроводной сети в зависимости от состояния проводного соединения",
      "level": 4,
      "content": "Идея заключается в том, чтобы включать Wi-Fi только при отключении сетевого кабеля (например, при отсоединении ноутбука от док-станции), и отключать Wi-Fi после того, как только сетевой кабель снова подключен.\n\nСоздайте следующий диспетчерский скрипт[6], заменив ваш_Ethernet_интерфейс на имя вашего проводного интерфейса.\n\nНе забудьте сделать скрипт исполняемым. Вы можете убедиться, что он работает, перезапустив службу NetworkManager.service, выполнив ip a и проверив, что интерфейс Wi-Fi (например, wlp3s0) находится в state DOWN. Если вы столкнулись с неожиданным поведением, проверьте журнал службы NetworkManager-dispatcher.service.\n\n```\n/etc/NetworkManager/dispatcher.d/99-wifi-auto-toggle\n```\n\n```\n#!/bin/sh\n\nLOG_PREFIX=\"WiFi Auto-Toggle\"\nETHERNET_INTERFACE=\"ваш_Ethernet_интерфейс\"\n\nif [ \"$1\" = \"$ETHERNET_INTERFACE\" ]; then\n    case \"$2\" in\n        up)\n            echo \"$LOG_PREFIX ethernet up\"\n            nmcli radio wifi off\n            ;;\n        down)\n            echo \"$LOG_PREFIX ethernet down\"\n            nmcli radio wifi on\n            ;;\n    esac\nelif [ \"$(nmcli -g GENERAL.STATE device show $ETHERNET_INTERFACE)\" = \"20 (unavailable)\" ]; then\n    echo \"$LOG_PREFIX failsafe\"\n    nmcli radio wifi on\nfi\n```\n\n"
    },
    {
      "title": "Использование диспетчера для подключения к VPN после появления сети",
      "level": 4,
      "content": "В этом примере мы хотим автоматически подключаться к определённому VPN-соединению после подключения к определённой сети Wi-Fi. Первое, что нужно сделать, это создать диспетчерский скрипт, который определяет, что делать после подключения к сети.\n\n```\n/etc/NetworkManager/dispatcher.d/vpn-up\n```\n\n```\n#!/bin/sh\nVPN_NAME=\"имя VPN-соединения, определённое в NetworkManager\"\nESSID=\"ESSID сети Wi-Fi (не имя соединения)\"\n\ninterface=$1 status=$2\ncase $status in\n  up|vpn-down)\n    if iwgetid | grep -qs \":\\\"$ESSID\\\"\"; then\n      nmcli connection up id \"$VPN_NAME\"\n    fi\n    ;;\n  down)\n    if iwgetid | grep -qs \":\\\"$ESSID\\\"\"; then\n      if nmcli connection show --active | grep \"$VPN_NAME\"; then\n        nmcli connection down id \"$VPN_NAME\"\n      fi\n    fi\n    ;;\nesac\n```\n\nЕсли вы хотите попытаться автоматически подключиться к VPN для всех сетей Wi-Fi, можете использовать следующее определение ESSID: ESSID=$(iwgetid -r).\n\nПопытка подключения этим скриптом может закончиться неудачей, поскольку служба NetworkManager-dispatcher.service будет жаловаться на 'no valid VPN secrets' из-за способа хранения VPN-секретов. К счастью, существуют варианты предоставить скрипту доступ к паролю VPN.\n\n1: Один из них требует редактирования файла конфигурации VPN-соединения, чтобы заставить NetworkManager хранить секреты самостоятельно, а не в связке ключей, которая будет недоступна для root: откройте /etc/NetworkManager/system-connections/имя-VPN-соединения и измените флаги password-flags и secret-flags с 1 на 0.\n\nЕсли это не поможет, возможно, вам придётся создать passwd-file в безопасном месте с теми же правами и владельцем, что и у скрипта, со следующим содержимым:\n\n```\n/путь/к/passwd-file\n```\n\n```\nvpn.secrets.password:ВАШ_ПАРОЛЬ\n```\n\nИзмените скрипт, чтобы он получал пароль из файла:\n\n```\n/etc/NetworkManager/dispatcher.d/vpn-up\n```\n\n```\n#!/bin/sh\nVPN_NAME=\"имя VPN-соединения, определённое в NetworkManager\"\nESSID=\"ESSID сети Wi-Fi (не имя соединения)\"\n\ninterface=$1 status=$2\ncase $status in\n  up|vpn-down)\n    if iwgetid | grep -qs \":\\\"$ESSID\\\"\"; then\n      nmcli connection up id \"$VPN_NAME\" passwd-file /путь/к/passwd-file\n    fi\n    ;;\n  down)\n    if iwgetid | grep -qs \":\\\"$ESSID\\\"\"; then\n      if nmcli connection show --active | grep \"$VPN_NAME\"; then\n        nmcli connection down id \"$VPN_NAME\"\n      fi\n    fi\n    ;;\nesac\n```\n\n2: В качестве альтернативы измените password-flags и задайте пароль непосредственно в файле настроек, добавив раздел vpn-secrets:\n\n```\n[vpn]\n....\npassword-flags=0\n\n[vpn-secrets]\npassword=ваш_пароль\n```\n\n"
    },
    {
      "title": "Использование диспетчера для отключения IPv6 при подключении VPN",
      "level": 4,
      "content": "Многие коммерческие VPN-провайдеры поддерживают только IPv4. Это означает, что весь трафик IPv6 идёт в обход VPN, из-за чего VPN становится фактически бесполезным. Чтобы избежать этого, можно использовать диспетчер для отключения всего трафика IPv6 на время работы VPN-соединения.\n\n```\n/etc/NetworkManager/dispatcher.d/10-vpn-ipv6\n```\n\n```\n#!/bin/sh\n\ncase \"$2\" in\n\tvpn-up)\n\t\techo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6\n\t\t;;\n\tvpn-down)\n\t\techo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6\n\t\t;;\nesac\n```\n\nВ качестве альтернативы можно использовать диспетчер, чтобы временно установить IPv6-режим link-local на устройстве, используемом для VPN-соединения. Это позволит избежать спама в журнале NetworkManager об отключенном IPv6. Этот скрипт не будет работать, если IPv6 предоставляют несколько устройств или соединений, но может быть адаптирован для итерации по нескольким устройствам. Обратите внимание, что любое изменение соединения (с помощью nmcli(1) или через среду рабочего стола) приведёт к повторному применению всего соединения к устройству и повторному включению IPv6 (если он включен в настройках соединения).\n\n```\n/etc/NetworkManager/dispatcher.d/10-vpn-ipv6\n```\n\n```\n#!/bin/sh\n\ncase \"$2\" in\n\tvpn-up)\n\t\tnmcli device modify \"${DEVICE_IFACE}\" ipv6.method link-local\n\t\t;;\n\tvpn-down)\n\t\tnmcli device reapply \"${DEVICE_IFACE}\"\n\t\t;;\nesac\n```\n\n"
    },
    {
      "title": "OpenNTPD",
      "level": 4,
      "content": "Смотрите OpenNTPD#Using NetworkManager dispatcher.\n\n"
    },
    {
      "title": "Динамическая установка серверов NTP, полученных через DHCP, с использованием systemd-timesyncd",
      "level": 4,
      "content": "При перемещении между различными сетями (например, локальная сеть компании, домашний Wi-Fi, иногда другие Wi-Fi) вы можете захотеть установить NTP-сервер(ы), которые использует timesyncd, на те, которые предоставляются местным DHCP-сервером. Однако сам NetworkManager не способен взаимодействовать с systemd-timesyncd для установки серверов NTP.\n\nЭто можно обойти с помощью диспетчера.\n\nСоздайте каталог /etc/systemd/timesyncd.conf.d, если его ещё нет, а затем в /etc/NetworkManager/dispatcher.d создайте такой скрипт:\n\n```\n/etc/NetworkManager/dispatcher.d/10-update-timesyncd\n```\n\n```\n#!/bin/sh\n\n[ -z \"$CONNECTION_UUID\" ] && exit 0\nINTERFACE=\"$1\"\nACTION=\"$2\"\n\ncase $ACTION in\nup | dhcp4-change | dhcp6-change)\n\t[ -n \"$DHCP4_NTP_SERVERS\" ] || exit 0\n\tmkdir -p /etc/systemd/timesyncd.conf.d\n\tcat <<-THE_END >\"/etc/systemd/timesyncd.conf.d/${CONNECTION_UUID}.conf\"\n\t\t[Time]\n\t\tNTP=$DHCP4_NTP_SERVERS\n\tTHE_END\n\tsystemctl restart systemd-timesyncd.service\n\t;;\ndown)\n\trm -f \"/etc/systemd/timesyncd.conf.d/${CONNECTION_UUID}.conf\"\n\tsystemctl restart systemd-timesyncd.service\n\t;;\nesac\n```\n\nКаждый раз, когда NetworkManager устанавливает новое соединение (ACTION=up) или получает обновление для существующего (ACTION=dhcp4-change или ACTION=dhcp6-change) и предоставленные данные соединения содержат информацию о NTP-сервере (DHCP4_NTP_SERVERS), в каталог /etc/systemd/timesyncd.conf.d записывается файл настроек, специфичный для соединения, содержащий предоставленные NTP-серверы. Каждый раз, когда соединение отключается (ACTION=down), этот файл удаляется. После каждого изменения конфигурации systemd-timesyncd служба перезапускается, чтобы применить обновлённую конфигурацию. Файлы намеренно привязаны к конкретным соединениям, чтобы при параллельном управлении двумя или более соединениями NetworkManager различные имена NTP-серверов в конфигурации не перезаписывались, поскольку действия up, dhcp4-change, dhcp6-change и down могут происходить в произвольном порядке.\n\n"
    },
    {
      "title": "Тестирование",
      "level": 2,
      "content": "Апплеты NetworkManager загружаются при входе в систему, поэтому большинству пользователей не потребуется дополнительная настройка. Если вы уже отключили предыдущие сетевые настройки и отсоединились от сети, вы можете проверить, будет ли работать NetworkManager. В первую очередь запустите службу NetworkManager.service.\n\nНекоторые апплеты предоставляют файл .desktop, чтобы апплет NetworkManager можно было загрузить через меню приложений. Если это не так, вам нужно либо найти команду для запуска, либо перелогиниться, чтобы сработал автозапуск апплета. После запуска апплет, скорее всего, начнёт опрашивать сетевые соединения на предмет автоматической настройки с помощью DHCP-сервера.\n\nЧтобы запустить апплет GNOME в несовместимых с xdg оконных менеджерах, таких как awesome:\n\n```\nnm-applet --sm-disable &\n```\n\nДля статических IP-адресов нужно настроить NetworkManager для их понимания. Обычно это можно сделать правым щелчком мыши по апплету и выбора пункта про редактирование соединений.\n\n"
    },
    {
      "title": "Шифрование паролей Wi-Fi",
      "level": 3,
      "content": "По умолчанию NetworkManager хранит пароли открытым текстом в файлах соединений в каталоге /etc/NetworkManager/system-connections/. Чтобы вывести сохранённые пароли, выполните следующую команду:\n\n```\n# grep -r '^psk=' /etc/NetworkManager/system-connections/\n```\n\nПароли могут прочитать root и пользователи, имеющие доступ к настройкам (например, через nm-applet).\n\nЛучше сохранять пароли в зашифрованном виде в связке ключей, а не открытым текстом. Недостатком использования связки ключей является то, что соединения должны быть настроены отдельно для каждого пользователя.\n\nДля работы со связкой ключей должен быть доступен агент секретов. Это может быть:\n\n- nmcli с опцией --ask;\n- какой-нибудь графический интерфейс (смотрите раздел #Фронтенды).\n\nЕсли агент недоступен, то аутентификация завершится с ошибкой no secrets: No agents were available for this request.\n\n"
    },
    {
      "title": "С помощью GNOME Keyring",
      "level": 4,
      "content": "Демон GNOME Keyring должен быть запущен, а связка ключей должна быть разблокирована, чтобы описанные ниже действия работали.\n\nКроме того, NetworkManager должен быть настроен так, чтобы не хранить пароль для всех пользователей. Запустите nm-connection-editor (входит в состав пакета network-manager-applet), откройте редактирование нужного соединения, выберите вкладку Защита Wi-Fi, нажмите на значок справа в поле ввода пароля и выберите пункт Запомнить пароль только для этого пользователя.\n\n"
    },
    {
      "title": "С помощью KDE Wallet",
      "level": 4,
      "content": "Используя plasma-nm, нажмите на апплет сети, нажмите на значок Настроить сетевые соединения в правом верхнем углу, выберите нужное соединение, на вкладке Основные параметры снимите галочку Все пользователи могут подключаться к этой сети. При включенной галочке пароли будут храниться открытым текстом даже при запущенном демоне связки ключей.\n\nЕсли галочка ранее стояла и вы сняли её, возможно, сначала придётся воспользоваться опцией сброса, чтобы пароль исчез из файла. В качестве альтернативы сначала удалите соединение и установите его снова.\n\n"
    },
    {
      "title": "Раздача интернета через Wi-Fi",
      "level": 3,
      "content": "Вы можете предоставить общий доступ к вашему интернет-соединению (например, 3G или проводному) всего в несколько кликов мышью. Обратите внимание, что межсетевой экран может помешать раздаче интернета.\n\nВам понадобится карта Wi-Fi, поддерживающая режим точки доступа; смотрите раздел Программная точка доступа#Поддержка режима AP устройством Wi-Fi.\n\nУстановите пакет dnsmasq, чтобы иметь возможность предоставить общий доступ к соединению. Обратите внимание, что NetworkManager запускает свой собственный экземпляр dnsmasq, независимый от dnsmasq.service, в качестве DHCP-сервера. Смотрите предостережения в разделе #dnsmasq.\n\nСоздайте общее соединение:\n\n- Откройте редактор сетевых соединений и создайте новую беспроводную сеть.\n- Заполните все необходимые настройки (выберите WPA2 или новее для защиты Wi-Fi и используйте не менее 8 символов для пароля). В настройке Режим выберите Точка доступа (Hotspot) или Одноранговый (Ad-hoc).\n\n- В настройке Режим выберите Точка доступа (Hotspot) или Одноранговый (Ad-hoc).\n\nСоединение будет сохранено и останется до следующего раза, когда оно вам понадобится.\n\n"
    },
    {
      "title": "Раздача интернета через Ethernet",
      "level": 3,
      "content": "Ситуация: ваше устройство подключено к Интернету через Wi-Fi, и вы хотите предоставить доступ к Интернету другим устройствам через Ethernet.\n\nТребования:\n\n- Установите пакеты dnsmasq и nm-connection-editor, чтобы иметь возможность предоставить общий доступ к соединению. Обратите внимание, что NetworkManager запускает свой собственный экземпляр dnsmasq, независимый от dnsmasq.service, в качестве DHCP-сервера. Смотрите предостережения в разделе #dnsmasq.\n- Ваше устройство, подключенное к Интернету, и другие устройства соединены друг с другом через подходящий кабель Ethernet (обычно это означает перекрёстный кабель или коммутатор между ними).\n- Общий доступ в интернет не заблокирован межсетевым экраном.\n\nШаги:\n\n- Запустите nm-connection-editor.\n- Добавьте новое Ethernet-соединение.\n- Задайте какое-нибудь информативное имя, например «Раздача интернета».\n- Перейдите на вкладку Параметры IPv4.\n- Измените Метод на Общий с другими компьютерами.\n- Сохраните.\n\nТеперь в списке проводных соединений должна появиться «Раздача интернета».\n\n"
    },
    {
      "title": "Проверка работоспособности сети внутри задачи cron или скрипта",
      "level": 3,
      "content": "Некоторым задачам cron может понадобиться работающая сеть. Чтобы не выполнять их при отсутствии сети, добавьте проверку, запрашивающую статус сети у NetworkManager. Это может быть полезно для ноутбуков, которые не всегда подключены к сети.\n\n```\nif [ $(nm-tool|grep State|cut -f2 -d' ') == \"connected\" ]; then\n    # Добавьте сюда команды для выполнения при работающей сети\nelse\n    # Добавьте сюда команды для выполнения при отсутствующей сети\n    # Этот блок и строка else опциональны\nfi\n```\n\nПример использования — скрипт cron.hourly, который запускает fpupdate для обновления сигнатур вирусного сканера F-Prot. Другой способ, который может быть полезен, с небольшими изменениями — различать сети, используя различные части вывода nm-tool; например, поскольку активная беспроводная сеть обозначается звёздочкой, вы можете через grep получить строку с именем нужной сети, а через второй grep проверить наличие звёздочки.\n\n"
    },
    {
      "title": "Подключение к сети с паролем при загрузке системы",
      "level": 3,
      "content": "По умолчанию NetworkManager не будет автоматически подключаться к сетям, требующим пароль, при загрузке системы. Это происходит потому, что по умолчанию он закрепляет такие соединения за тем пользователем, который их создал, подключаясь только после входа пользователя в систему. Чтобы изменить это, выполните следующие шаги:\n\n1. Откройте редактирование сетевых соединений (например, через значок nm-applet в трее).\n1. Выберите Wi-Fi соединение, к которому вы хотите автоматически подключаться, и откройте его редактирование.\n1. На вкладке Основное поставьте галочки Подключаться автоматически и Все пользователи могут подключаться к этой сети.\n1. На вкладке Защита Wi-Fi выберите пункт Запомнить пароль для всех пользователей (в nm-connection-editor он спрятан в небольшом значке справа от пароля).\n\nПерелогиньтесь для завершения.\n\n"
    },
    {
      "title": "OpenConnect с паролем в KWallet",
      "level": 3,
      "content": "Хотя вы можете ввести оба значения во время подключения, plasma-nm 0.9.3.2-1 и новее способны получить имя пользователя и пароль OpenConnect непосредственно из KWallet.\n\nОткройте Управление бумажниками (KWalletManager) и найдите ваше VPN-соединение OpenConnect в разделе «Network Management|Maps». Нажмите Показать содержимое и введите свои учётные данные в ключе «VpnSecrets» в этой форме (замените пользователь и пароль соответствующим образом):\n\n```\nform:main:username%SEP%пользователь%SEP%form:main:password%SEP%пароль\n```\n\nПри следующем подключении имя пользователя и пароль должны появиться в диалоговом окне «VPN secrets».\n\n"
    },
    {
      "title": "Игнорирование определённых устройств",
      "level": 3,
      "content": "Иногда бывает нужно, чтобы NetworkManager игнорировал определённые устройства и не пытался настроить для них адреса и маршруты. Чтобы игнорировать устройства по MAC-адресу или имени интерфейса, пропишите их в файле /etc/NetworkManager/conf.d/unmanaged.conf:\n\n```\n[keyfile]\nunmanaged-devices=mac:00:22:68:1c:59:b1;mac:00:1E:65:30:D1:C4;interface-name:eth0\n```\n\nПосле редактирования файла выполните nmcli general reload от имени root. После это вы сможете вручную настроить указанные интерфейсы, и NetworkManager не будет изменять ваши настройки.\n\n"
    },
    {
      "title": "Рандомизация MAC-адреса",
      "level": 3,
      "content": "Рандомизация MAC-адреса скрывает от сети ваш реальный MAC-адрес, что можно использовать для повышения конфиденциальности.\n\nNetworkManager поддерживает два типа рандомизации: для сканирования и для соединений. Оба режима могут быть настроены в файле /etc/NetworkManager/NetworkManager.conf или путём создания отдельного файла настроек в /etc/NetworkManager/conf.d/, что предпочтительнее, поскольку NetworkManager может перезаписывать вышеупомянутый файл настроек.\n\nРандомизация при сканировании Wi-Fi включена по умолчанию, но её можно отключить добавлением следующих строк в /etc/NetworkManager/NetworkManager.conf или в отдельный файл настроек в /etc/NetworkManager/conf.d:\n\n```\n/etc/NetworkManager/conf.d/wifi_rand_mac.conf\n```\n\n```\n[device]\nwifi.scan-rand-mac-address=no\n```\n\nРандомизация MAC-адреса для соединений может быть установлена в разные режимы для беспроводных и проводных интерфейсов.\n\nВ плане рандомизации MAC наиболее важными режимами являются stable и random. Режим stable генерирует случайный MAC-адрес, когда вы подключаетесь к новой сети, и связывает их друг с другом навсегда. Это означает, что вы будете использовать один и тот же MAC-адрес при каждом подключении к этой сети. Режим random генерирует новый MAC-адрес каждый раз, когда вы подключаетесь к новой или ранее известной сети. Настроить рандомизацию можно добавлением настроек в /etc/NetworkManager/conf.d:\n\n```\n/etc/NetworkManager/conf.d/wifi_rand_mac.conf\n```\n\n```\n[device-mac-randomization]\n# \"yes\" уже используется по умолчанию при сканировании\nwifi.scan-rand-mac-address=yes\n\n[connection-mac-randomization]\n# Генерирование нового случайного MAC при каждом подключении к проводному соединению\nethernet.cloned-mac-address=random\n# Генерирование случайного MAC для каждого Wi-Fi при первом подключении и связывание их вместе\nwifi.cloned-mac-address=stable\n```\n\nЧтобы настроить рандомизацию MAC-адреса для конкретного соединения (например, если сети не нравятся случайные MAC-адреса), измените соединение, установив 802-11-wireless.cloned-mac-address в один из режимов (например, stable или random).\n\nБолее подробная информация о режимах есть в блоге GNOME.\n\n"
    },
    {
      "title": "Включение IPv6 Privacy Extensions",
      "level": 3,
      "content": "Смотрите IPv6 (Русский)#NetworkManager.\n\n"
    },
    {
      "title": "Настройка уникального DUID для соединения",
      "level": 3,
      "content": "Уникальный идентификатор DHCPv6 (DHCPv6 Unique Identifier, DUID) — это значение, используемое клиентом DHCPv6 для идентификации себя на серверах DHCPv6. NetworkManager поддерживает 3 типа DUID:\n\n- DUID-UUID (RFC 6355): генерируется из UUID.\n- DUID-LL (RFC 3315): генерируется из адреса канального уровня (MAC-адреса).\n- DUID-LLT (RFC 3315): генерируется из адреса канального уровня и метки времени.\n\nЕсли используется встроенный DHCP-клиент NetworkManager (по умолчанию), он идентифицирует себя с помощью глобального и постоянного DUID-UUID, сгенерированного из machine-id (/etc/machine-id). Это означает, что во всех соединениях используется один и тот же UUID, что может оказаться проблемой конфиденциальности.\n\nК счастью, NetworkManager позволяет настроить уникальные DUID для каждого соединения, получаемые из stable-id соединения и уникального ключа для каждого хоста. Вы можете включить эту функцию, добавив следующую конфигурацию в /etc/NetworkManager/conf.d/:\n\n```\n/etc/NetworkManager/conf.d/duid.conf\n```\n\n```\n[connection]\nipv6.dhcp-duid=stable-uuid\n```\n\nТакже поддерживаются значения stable-ll и stable-llt. Дополнительная информация есть в описании dhcp-duid в nm-settings(5) § ipv6 setting.\n\n"
    },
    {
      "title": "Работа с проводными соединениями",
      "level": 3,
      "content": "По умолчанию NetworkManager генерирует профиль соединения для каждого найденного Ethernet-адаптера. В момент создания соединения он не знает, будут ли доступны ещё какие-нибудь Ethernet-адаптеры, поэтому он называет первое проводное соединение «Проводное соединение 1». Вы можете избежать генерации этого соединения, настроив параметр no-auto-default (смотрите NetworkManager.conf(5)) или просто удалив его. Тогда NetworkManager запомнит, что генерировать соединение для этого интерфейса не нужно.\n\nВы также можете отредактировать соединение (и сохранить его на диске) или удалить его. NetworkManager не будет повторно генерировать соединение. Затем вы можете изменить имя на любое другое. Для этой задачи можно использовать что-то вроде nm-connection-editor.\n\n"
    },
    {
      "title": "Использование iwd в качестве бэкенда Wi-Fi",
      "level": 3,
      "content": "- Не включайте iwd.service и не настраивайте iwd вручную. NetworkManager сам всё запустит и настроит.\n- Перед переходом на iwd ознакомьтесь со списком известных проблем.\n\nЧтобы включить экспериментальный бэкенд iwd, сперва установите пакет iwd и создайте такой файл настроек:\n\n```\n/etc/NetworkManager/conf.d/wifi_backend.conf\n```\n\n```\n[device]\nwifi.backend=iwd\n```\n\nДругой вариант — установить networkmanager-iwdAUR. Это модифицированный пакет, который собирает NetworkManager только с поддержкой iwd. Главное отличие в том, что это позволяет удалить вам wpa_supplicant.\n\n"
    },
    {
      "title": "Запуск в сетевом пространстве имён",
      "level": 3,
      "content": "Если вы хотите запустить NetworkManager в сетевом пространстве имён (например, для управления определённым устройством, которое должно использоваться выбранными приложениями), выключите устройство, прежде чем перемещать его в пространство имён:\n\n```\n$ ip link set dev УСТРОЙСТВО down\n$ ip link set dev УСТРОЙСТВО netns ПРОСТРАНСТВО_ИМЁН\n$ ip netns exec ПРОСТРАНСТВО_ИМЁН NetworkManager\n...\n$ ip netns exec ПРОСТРАНСТВО_ИМЁН killall NetworkManager\n```\n\nВ противном случае NetworkManager впоследствии не сможет установить соединение с ошибкой device is strictly unmanaged.\n\n"
    },
    {
      "title": "Автоматическое подключение к VPN",
      "level": 3,
      "content": "NetworkManager можно настроить на автоматическое подключение к VPN при подключении к интернету или для отдельной сети. Само VPN-соединение можно добавить через фронтенд NetworkManager в GNOME, но для автоматического подключения нужно использовать nmcli. В других фронтендах может не быть этого ограничения.\n\nСперва убедитесь, что VPN-соединение доступно всем пользователям. В GNOME для этого нужно установить флажок на вкладке details. На вкладке Identity в поле пароля нажмите на значок справа и выберите значение Store the password for all users.\n\nЗатем найдите UUID нужного VPN-соединения и добавьте его в connection.secondaries интернет-соединения:\n\n```\n# UUID=$(nmcli --get-values connection.uuid connection show название-VPN-соединения)\n# nmcli connection modify название-интернет-соединения connection.secondaries \"$UUID\"\n```\n\nТеперь после перезапуска NetworkManager и переподключения к настроенному интернет-соединению вы должны автоматически подключиться к VPN.\n\n"
    },
    {
      "title": "Не запрашивается пароль Wi-Fi",
      "level": 3,
      "content": "Если при попытке подключиться к защищённой сети Wi-Fi не отображается запрос на ввод пароля и соединение не устанавливается, это может быть связано с тем, что не установлена программа для управления паролями. Простым решением является установка gnome-keyring. Если вы хотите, чтобы пароли хранились в зашифрованном виде, настройте gnome-keyring-daemon, как описано в статье GNOME (Русский)/Keyring (Русский).\n\n"
    },
    {
      "title": "Управление сетью отключено",
      "level": 3,
      "content": "Если после завершения работы NetworkManager файл pid (state) оказался не удалён, вы увидите сообщение Network management disabled. В этом случае удалите файл вручную:\n\n```\n# rm /var/lib/NetworkManager/NetworkManager.state\n```\n\n"
    },
    {
      "title": "Проблемы с внутренним клиентом DHCP",
      "level": 3,
      "content": "Если у вас возникли проблемы с получением IP-адреса при использовании встроенного клиента DHCP, попробуйте использовать другой клиент; смотрите раздел #Клиент DHCP. Это обходное решение может решить проблемы в больших беспроводных сетях, таких как eduroam.\n\n"
    },
    {
      "title": "Проблемы с DHCP при использовании dhclient",
      "level": 3,
      "content": "Если у вас возникли проблемы с получением IP-адреса через DHCP, попробуйте добавить в файл /etc/dhclient.conf:\n\n```\ninterface \"eth0\" {\n   send dhcp-client-identifier 01:aa:bb:cc:dd:ee:ff;\n }\n```\n\nГде aa:bb:cc:dd:ee:ff — это MAC-адрес вашей сетевой карты. Узнать его можно с помощью команды ip link show интерфейс (пакет iproute2).\n\n"
    },
    {
      "title": "3G-модем не определяется",
      "level": 3,
      "content": "Смотрите Mobile broadband modem#NetworkManager.\n\n"
    },
    {
      "title": "Выключение беспроводной сети на ноутбуках",
      "level": 3,
      "content": "Иногда NetworkManager не работает, когда вы отключаете свой Wi-Fi адаптер с помощью переключателя на ноутбуке и после этого пытаетесь включить его снова. Часто это проблема с rfkill. Чтобы проверить, сообщает ли драйвер о состоянии беспроводного адаптера в rfkill, используйте:\n\n```\n$ watch -n1 rfkill list all\n```\n\nЕсли идентификатор остаётся заблокированным после включения адаптера, можно попробовать вручную разблокировать его с помощью (где X — номер идентификатора, указанный в выводе этой команды):\n\n```\n# rfkill event unblock X\n```\n\n"
    },
    {
      "title": "Настройки статического IP-адреса сбрасываются на DHCP",
      "level": 3,
      "content": "Из-за бага при изменении стандартных подключений на статический IP-адрес nm-applet может неправильно сохранить настройки и сбросить их на автоматический DHCP.\n\nЧтобы решить эту проблему, нужно отредактировать подключение по умолчанию (например, «Auto eth0») в nm-applet, изменить имя подключения (например, «Мой eth0»), снять флажок «Все пользователи могут подключаться к этой сети», изменить настройки статического IP-адреса по своему усмотрению и сохранить их.\n\nДалее нужно сделать так, чтобы соединение по умолчанию не подключалось автоматически. Для этого запустите nm-connection-editor (от имени обычного пользователя, не от root). Отредактируйте подключение по умолчанию (например, «Auto eth0»), снимите флажок «Подключаться автоматически» и сохраните изменения.\n\n"
    },
    {
      "title": "Не удаётся редактировать соединения от имени обычного пользователя",
      "level": 3,
      "content": "Смотрите раздел #Настройка разрешений PolicyKit.\n\n"
    },
    {
      "title": "Забыть скрытую беспроводную сеть",
      "level": 3,
      "content": "Поскольку скрытые сети не отображаются в списке выбора беспроводной сети, их нельзя забыть (удалить) через графический интерфейс. Можно вручную удалить соответствующие файлы:\n\n```\n# rm /etc/NetworkManager/system-connections/SSID\n```\n\nЭто также работает с любыми другими соединениями.\n\n"
    },
    {
      "title": "VPN не работает в GNOME",
      "level": 3,
      "content": "При настройке соединений OpenConnect или vpnc в NetworkManager при использовании GNOME иногда не появляется диалоговое окно, а в /var/log/errors.log появляется следующая ошибка:\n\n```\nlocalhost NetworkManager[399]: <error> [1361719690.10506] [nm-vpn-connection.c:1405] get_secrets_cb(): Failed to request VPN secrets #3: (6) No agents were available for this request.\n```\n\nЭто происходит из-за того, что апплет GNOME NetworkManager ожидает, что диалоговые скрипты будут находиться в /usr/lib/gnome-shell, в то время как пакеты NetworkManager помещают их в /usr/lib/networkmanager. В качестве «временного» исправления (эта ошибка существует уже некоторое время) сделайте следующие символические ссылки:\n\n- Для OpenConnect: ln -s /usr/lib/networkmanager/nm-openconnect-auth-dialog /usr/lib/gnome-shell/\n- Для VPNC (то есть Cisco VPN): ln -s /usr/lib/networkmanager/nm-vpnc-auth-dialog /usr/lib/gnome-shell/\n\nЭто может потребоваться и для других VPN-плагинов NetworkManager.\n\n"
    },
    {
      "title": "Не удаётся подключиться к видимым европейским беспроводным сетям",
      "level": 3,
      "content": "Чипы беспроводной связи поставляются с регулятивным доменом по умолчанию. Если ваша точка доступа работает за пределами ограничений этого домена, вы не сможете подключиться к сети. Исправить это просто:\n\n- установите пакет wireless-regdb;\n- раскомментируйте строку с правильным кодом страны в файле /etc/conf.d/wireless-regdom;\n- перезагрузитесь — обновлённые настройки прочитаются при следующей загрузке системы.\n\n"
    },
    {
      "title": "Автоматическое подключение к VPN при загрузке системы не работает",
      "level": 3,
      "content": "Проблема возникает, когда система (то есть NetworkManager, запущенный от имени root) пытается установить VPN-соединение, но пароль недоступен, поскольку находится в хранилище паролей конкретного пользователя.\n\nРешением является хранение пароля от VPN в открытом виде, как описано в шаге 2 раздела #Использование диспетчера для подключения к VPN после появления сети.\n\nИспользовать диспетчер, как описано в шаге 1, не нужно, если вы включили опцию «Автоматически подключаться к VPN» в графическом интерфейсе nm-applet.\n\n"
    },
    {
      "title": "Замедление загрузки системы из-за журнала systemd",
      "level": 3,
      "content": "Некоторые пользователи замечали, что большой размер /var/log/journal может повлиять на скорость загрузки системы при использовании NetworkManager; подробнее в разделе systemd (Русский)#Время загрузки системы увеличивается с течением времени.\n\n"
    },
    {
      "title": "Постоянные отключения беспроводной сети, задержки и потеря пакетов",
      "level": 3,
      "content": "NetworkManager выполняет сканирование каждые 2 минуты.\n\nНекоторые драйверы Wi-Fi имеют проблемы при сканировании при наличии установленного подключения. Среди симптомов — отключение/переподключение VPN и потеря пакетов, веб-страницы не загружаются, а затем начинают загружаться без проблем.\n\nЗапуск journalctl -f от имени root продемонстрирует, что это происходит: в журнале с регулярными интервалами будут появляться примерно такие сообщения:\n\n```\nNetworkManager[410]: <info>  (wlp3s0): roamed from BSSID 00:14:48:11:20:CF (my-wifi-name) to (none) ((none))\n```\n\nЕсли роуминг беспроводных сетей не важен, периодическое сканирование можно отключить, заблокировав BSSID точки доступа в профиле подключения Wi-Fi.\n\n"
    },
    {
      "title": "Не удаётся включить Wi-Fi на ноутбуке Lenovo",
      "level": 3,
      "content": "Существует проблема с модулем ideapad_laptop на некоторых моделях Lenovo, связанная с тем, что драйвер Wi-Fi неверно сообщает о наличии программной блокировки. Картой по-прежнему можно управлять с помощью netctl, но менеджеры вроде NetworkManager ломаются. Вы можете убедиться, что проблема заключается именно в этом, проверив вывод rfkill list после переключения аппаратного переключателя и убедившись, что программная блокировка сохраняется.\n\nВыгрузка модуля ideapad_laptop может помочь (осторожно, это также может отключить клавиатуру и тачпад ноутбука).\n\n"
    },
    {
      "title": "Отключение отправки имени хоста",
      "level": 3,
      "content": "По умолчанию NetworkManager отправляет имя хоста на DHCP-сервер. Отключить это можно только для отдельных соединений, а не глобально (Issue #584).\n\nЧтобы отключить отправку имени хоста на DHCP-сервер для конкретного соединения, добавьте следующее в файл соединения:\n\n```\n/etc/NetworkManager/system-connections/файл_нужного_соединения\n```\n\n```\n...\n[ipv4]\ndhcp-send-hostname=false\n...\n[ipv6]\ndhcp-send-hostname=false\n...\n```\n\n"
    },
    {
      "title": "nm-applet пропадает в i3",
      "level": 3,
      "content": "Если вы используете xfce4-notifyd.service, отредактируйте юнит, добавив следующее:\n\n```\n/etc/systemd/user/xfce4-notifyd.service.d/display_env.conf\n```\n\n```\n[Service]\nEnvironment=\"DISPLAY=:0.0\"\n```\n\nЗатем выполните daemon-reload, перезагрузите службу xfce4-notifyd.service и перезайдите в i3.\n\n"
    },
    {
      "title": "Unit dbus-org.freedesktop.resolve1.service not found",
      "level": 3,
      "content": "Если systemd-resolved.service не запущен, NetworkManager попытается запустить его через D-Bus, но не сможет:\n\n```\ndbus-daemon[991]: [system] Activating via systemd: service name='org.freedesktop.resolve1' unit='dbus-org.freedesktop.resolve1.service' requested by ':1.23' (uid=0 pid=1012 comm=\"/usr/bin/NetworkManager --no-daemon \")\ndbus-daemon[991]: [system] Activation via systemd failed for unit 'dbus-org.freedesktop.resolve1.service': Unit dbus-org.freedesktop.resolve1.service not found.\ndbus-daemon[991]: [system] Activating via systemd: service name='org.freedesktop.resolve1' unit='dbus-org.freedesktop.resolve1.service' requested by ':1.23' (uid=0 pid=1012 comm=\"/usr/bin/NetworkManager --no-daemon \")\n```\n\nЭто происходит потому, что NetworkManager будет пытаться отправить информацию о DNS в systemd-resolved независимо от настройки main.dns= в NetworkManager.conf(5).[9]\n\nЭто можно отключить в настройках:\n\n```\n/etc/NetworkManager/conf.d/no-systemd-resolved.conf\n```\n\n```\n[main]\nsystemd-resolved=false\n```\n\nСмотрите FS#62138.\n\n"
    },
    {
      "title": "Secrets were required, but not provided",
      "level": 3,
      "content": "Если при попытке подключиться к сети вы получаете ошибку:\n\n```\n$ nmcli device wifi connect SSID password пароль\n```\n\n```\nError: Connection activation failed: (7) Secrets were required, but not provided\n```\n\nУ этой ошибки может быть множество причин, и вам стоит почитать журнал службы (параметр -u NetworkManager). Например, если NetworkManager слишком долго устанавливал соединение, он будет считать, что пароль неверен:\n\n```\nNetworkManager[1372]: <warn>  [1643991888.3808] device (wlan0): Activation: (wifi) association took too long\nNetworkManager[1372]: <info>  [1643991888.3809] device (wlan0): state change: config -> need-auth (reason 'none', sys-iface-state: 'managed')\nNetworkManager[1372]: <warn>  [1643991888.3838] device (wlan0): Activation: (wifi) asking for new secrets\n```\n\nТакже можно попробовать удалить соединение и создать новое:\n\n```\n$ nmcli connection delete SSID\n$ nmcli device wifi connect SSID password пароль\n```\n\nЕщё можно попробовать отключить рандомизацию MAC-адреса:\n\n```\n/etc/NetworkManager/conf.d/wifi_rand_mac.conf\n```\n\n```\n[device]\nwifi.scan-rand-mac-address=no\n```\n\n"
    },
    {
      "title": "Подключение к сети WPA Enterprise с использованием iwd",
      "level": 3,
      "content": "Если вы попытаетесь подключиться к eduroam через NetworkManager с бэкендом iwd, вы получите следующую ошибку от NetworkManager:\n\n```\nConnection 'eduroam' is not avialable on device wlan0 because profile is not compatible with device (802.1x connections must have IWD provisioning files)\n```\n\nЭто связано с тем, что NetworkManager не может настроить сеть WPA Enterprise. Поэтому вам нужно настроить её через файл настроек /var/lib/iwd/essid.8021x, как описано в разделе iwd (Русский)#WPA Enterprise.\n\n"
    },
    {
      "title": "Failed to request VPN secrets",
      "level": 3,
      "content": "Если вы получаете ошибку:\n\n```\nFailed to request VPN secrets #1: No agents were available for this request.\n```\n\nЭто может происходить из-за пустого пароля или из-за ненастроенных разрешений PolicyKit.\n\n"
    },
    {
      "title": "Соединения OpenVPN выдают ошибку «secrets: failed to request VPN secrets»",
      "level": 3,
      "content": "Если в настройках соединения не сохранён пароль, networkmanager-openvpn вынужден каким-то образом получить его от пользователя. Обычно это делается через графический интерфейс, для работы которого нужно установить опциональные зависимости libnma-gtk4 и/или libnma (GTK3). Если они не установлены, попытка подключения может привести к появлению такой ошибки:\n\n```\nNetworkManager[642]: <warn>  [...] vpn[...\"name_of_vpn_profile VPN\"]: secrets: failed to request VPN secrets #3: No agents were available for this request.\n```\n\n"
    },
    {
      "title": "Ошибка «ca md too weak» в соединениях OpenVPN",
      "level": 3,
      "content": "После обновления openssl до версии 3 сертификаты, созданные с использованием устаревших криптографических алгоритмов, по умолчанию отклоняются. Попытка использовать networkmanager-openvpn с такой настройкой может привести к появлению следующих ошибок в журнале:\n\n```\nnm-openvpn[14359]: OpenSSL: error:0A00018E:SSL routines::ca md too weak\nnm-openvpn[14359]: Cannot load certificate file /home/archie/.local/share/networkmanagement/certificates/my_issued_cert.crt\nnm-openvpn[14359]: Exiting due to fatal error\n```\n\nСамое правильное решение — попросить администратора сервера OpenVPN выпустить более безопасные сертификаты. Если это по каким-то причинам невозможно и требуется немедленное решение проблемы — OpenVPN требует tls-cipher \"DEFAULT:@SECLEVEL=0\", который нужно включить через nmcli. Также нужно включить провайдер legacy в настройках OpenSSL.\n\nСперва узнайте имя проблемного VPN-соединения:\n\n```\n$ nmcli connection show\n```\n\nНапример, если имя vpn.example.com, выполните такую команду:\n\n```\n$ nmcli connection modify vpn.example.com +vpn.data tls-cipher=DEFAULT:@SECLEVEL=0\n```\n\nОна обновит настройки в файле /etc/NetworkManager/system-connections/vpn.example.com.nmconnection.\n\nТакже нужно включить провайдер legacy в настройках OpenSSL, отредактировав /etc/ssl/openssl.cnf как описано в OpenSSL wiki.\n\nВ конце раздела [provider_sect] добавьте legacy = legacy_sect, а в разделе [default_sect] раскомментируйте activate = 1. Затем добавьте раздел [legacy_sect] со строкой activate = 1. После внесения изменений файл должен содержать примерно такие настройки (другие настройки из этого файла опущены для краткости):\n\n```\n/etc/ssl/openssl.cnf\n```\n\n```\nopenssl_conf = openssl_init\n\n[openssl_init]\nproviders = provider_sect\n\n[provider_sect]\ndefault = default_sect\nlegacy = legacy_sect\n\n[default_sect]\nactivate = 1\n\n[legacy_sect]\nactivate = 1\n```\n\nПерезапустите службу NetworkManager.service для применения изменений.\n\n"
    },
    {
      "title": "Соединения WPA Enterprise не проходят аутентификацию с ошибкой OpenSSL «unsupported protocol»",
      "level": 3,
      "content": "После обновления openssl до версии 3 протоколы SSL 3, TLS 1.0, TLS 1.1 и DTLS 1.0 по умолчанию работают только на уровне безопасности 0. Попытка подключения к беспроводной сети, поддерживающей только более старые стандарты, приводит к появлению в журнале следующей ошибки:\n\n```\nwpa_supplicant[3320]: SSL: SSL3 alert: write (local SSL3 detected an error):fatal:protocol version\nwpa_supplicant[3320]: OpenSSL: openssl_handshake - SSL_connect error:0A000102:SSL routines::unsupported protocol\nwpa_supplicant[3320]: wlp3s0: CTRL-EVENT-EAP-FAILURE EAP authentication failed\n```\n\nСамое правильное решение — попросить администратора сети добавить поддержку TLS 1.3 и по возможности прекратить использование устаревших протоколов TLS 1.0/1.1, DTLS 1.0 и SSL 1-3. Если это по каким-то причинам невозможно и требуется немедленное решение проблемы — есть несколько способов разрешить TLS 1.0 и/или 1.1 по умолчанию. Один из способов — откат данного изменения в OpenSSL ([10]). Поскольку это также снижает безопасность всех других программ, использующих уровень безопасности 1, этот способ не рекомендуется. Вместо этого можно напрямую установить уровень, используемый wpa_supplicant, как описано в BBS#286417. Чтобы изменить только затронутое соединение, в настройках соединения в разделе [802-1x] пропишите phase1-auth-flags=32 или phase1-auth-flags=64. Это нельзя сделать через графический интерфейс, но можно сделать через nmcli.\n\nСперва узнайте имя проблемного беспроводного соединения:\n\n```\n$ nmcli connection show\n```\n\nНапример, если имя Example Wi-Fi и оно использует TLS 1.0, выполните такую команду:\n\n```\n$ nmcli connection modify 'Example Wi-Fi' 802-1x.phase1-auth-flags 32\n```\n\nА для TLS 1.1 укажите 64:\n\n```\n$ nmcli connection modify 'Example Wi-Fi' 802-1x.phase1-auth-flags 64\n```\n\nNote: **n** \n\nКоманда обновит настройки в файле /etc/NetworkManager/system-connections/Example Wi-Fi.nmconnection.\n\nПерезапустите службу NetworkManager.service для применения изменений.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- NetworkManager for Administrators Part 1\n- Wikipedia:ru:NetworkManager\n- Официальный сайт NetworkManager\n\n"
    }
  ]
}
{
  "title": "Sudo (Français)",
  "url": "https://wiki.archlinux.org/title/Sudo_(Fran%C3%A7ais)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Users and groups (Français)\n- su (Français)\n- doas\n\nSudo permet à un administrateur système de déléguer l'autorité pour donner à certains utilisateurs - ou groupes d'utilisateurs - la possibilité d'exécuter des commandes en tant que root ou un autre utilisateur tout en fournissant une piste d'audit des commandes et de leurs arguments.\n\nSudo est une alternative à su pour exécuter des commandes en tant que root. Contrairement à su, qui lance un shell root permettant à toutes les autres commandes d'accéder à l'utilisateur root, sudo accorde une élévation temporaire des privilèges à une seule commande. En activant les privilèges root uniquement lorsque cela est nécessaire, l'utilisation de sudo réduit la probabilité qu'une faute de frappe ou un bug dans une commande invoquée ruine le système.\n\nSudo peut également être utilisé pour exécuter des commandes en tant qu'autres utilisateurs ; en outre, sudo enregistre toutes les commandes et les tentatives d'accès échouées à des fins d'audit de sécurité.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Installez le paquet sudo.\n\n"
    },
    {
      "title": "Utilisation",
      "level": 2,
      "content": "Pour commencer à utiliser sudo en tant qu'utilisateur non privilégié, il doit être correctement configuré. Consultez #Configuration.\n\nPour utiliser sudo, il suffit de préfixer une commande et ses arguments par sudo et un espace :\n\n```\n$ sudo cmd\n```\n\nPar exemple, pour utiliser pacman :\n\n```\n$ sudo pacman -Syu\n```\n\nConsultez sudo(8) pour plus d'informations.\n\n"
    },
    {
      "title": "Squelette des paramètres par défaut",
      "level": 3,
      "content": "sudoers(5) § SUDOERS OPTIONS liste toutes les options qui peuvent être utilisées avec la commande Defaults dans le fichier /etc/sudoers.\n\nConsultez [1] pour obtenir une liste d'options (analysées à partir du code source de la version 1.8.7) dans un format optimisé pour sudoers.\n\nConsultez sudoers(5) pour plus d'informations, comme la configuration du délai d'expiration du mot de passe.\n\n"
    },
    {
      "title": "Afficher les paramètres actuels",
      "level": 3,
      "content": "Exécutez sudo -ll pour imprimer la configuration sudo actuelle, ou sudo -lU user pour un utilisateur spécifique.\n\n"
    },
    {
      "title": "Utilisation de visudo",
      "level": 3,
      "content": "Le fichier de configuration de sudo est /etc/sudoers. Il doit toujours être édité avec la commande visudo(8). La commande visudo verrouille le fichier sudoers, enregistre les modifications dans un fichier temporaire, et vérifie qu'il n'y a pas d'erreurs de syntaxe avant de le copier dans /etc/sudoers.\n\nNote: **toujours** \n\n- Il est impératif que le fichier sudoers soit exempt d'erreurs de syntaxe ! Toute erreur rend sudo inutilisable. Il faut toujours l'éditer avec visudo pour éviter les erreurs.\n- visudo(8) prévient que configurer visudo pour honorer les variables d'environnement de l'utilisateur pour l'éditeur de son choix peut être une faille de sécurité, puisqu'elle permet à l'utilisateur avec les privilèges de visudo d'exécuter des commandes arbitraires en tant que root sans journalisation simplement en définissant cette variable à quelque chose d'autre.\n\nL'éditeur par défaut de visudo est vi. Le paquet sudo est compilé avec --with-env-editor et respecte l'utilisation des variables SUDO_EDITOR, VISUAL et EDITOR. EDITOR n'est pas utilisée lorsque VISUAL est définie.\n\nPour établir nano comme éditeur de visudo pour la durée de la session actuelle du shell, exportez EDITOR=nano ; pour utiliser un éditeur différent une seule fois, il suffit de définir la variable avant d'appeler visudo :\n\n```\n# EDITOR=nano visudo\n```\n\nVous pouvez également éditer une copie du fichier /etc/sudoers et la vérifier en utilisant visudo -c /copy/of/sudoers. Cela peut s'avérer pratique si vous voulez contourner le verrouillage du fichier avec visudo.\n\nPour changer l'éditeur de façon permanente, consultez Environment variables#Per user. Pour changer l'éditeur de choix de façon permanente dans tout le système et seulement pour visudo, ajoutez ce qui suit à /etc/sudoers (en supposant que nano est votre éditeur préféré) :\n\n```\n# Réinitialiser l'environnement par défaut\nDefaults      env_reset\n# Définir l'ÉDITEUR par défaut à la version restreinte de nano, et ne pas autoriser visudo à utiliser EDITOR/VISUAL.\nDefaults      editor=/usr/bin/rnano, !env_editor\n```\n\n"
    },
    {
      "title": "Exemples d'entrées",
      "level": 3,
      "content": "Pour permettre à un utilisateur d'obtenir tous les privilèges de root lorsqu'il fait précéder une commande de sudo, ajoutez la ligne suivante :\n\n```\nUSER_NAME   ALL=(ALL:ALL) ALL\n```\n\nPour permettre à un utilisateur d'exécuter toutes les commandes comme n'importe quel utilisateur mais uniquement sur la machine dont le nom d'hôte est HOST_NAME :\n\n```\nUSER_NAME   HOST_NAME=(ALL:ALL) ALL\n```\n\nPour permettre aux membres du groupe wheel d'accéder à sudo :\n\n```\n%wheel ALL=(ALL:ALL) ALL\n```\n\nPour désactiver la demande de mot de passe pour l'utilisateur USER_NAME :\n\n```\nDefaults:USER_NAME      !authenticate\n```\n\nActive les commandes explicitement définies uniquement pour l'utilisateur USER_NAME sur l'hôte HOST_NAME :\n\n```\nUSER_NAME HOST_NAME=/usr/bin/halt,/usr/bin/poweroff,/usr/bin/reboot,/usr/bin/pacman -Syu\n```\n\nActiver les commandes explicitement définies uniquement pour l'utilisateur USER_NAME sur l'hôte HOST_NAME sans mot de passe :\n\n```\nUSER_NAME HOST_NAME= NOPASSWD: /usr/bin/halt,/usr/bin/poweroff,/usr/bin/reboot,/usr/bin/pacman -Syu\n```\n\nUn exemple détaillé de sudoers est disponible à /usr/share/doc/sudo/examples/sudoers. Sinon, consultez le sudoers(5) pour des informations détaillées.\n\n"
    },
    {
      "title": "Permissions par défaut des fichiers Sudoers",
      "level": 3,
      "content": "Le propriétaire et le groupe du fichier sudoers doivent tous deux être 0. Les permissions du fichier doivent être définies sur 0440. Ces permissions sont définies par défaut, mais si vous les modifiez accidentellement, vous devez les rétablir immédiatement, sinon sudo échouera.\n\n```\n# chown -c root:root /etc/sudoers\n# chmod -c 0440 /etc/sudoers\n```\n\n"
    },
    {
      "title": "Désactiver la temporisation de l'invite de mot de passe",
      "level": 3,
      "content": "Un ennui courant est un processus de longue durée qui s'exécute sur un terminal en arrière-plan quelque part, qui fonctionne avec des permissions normales et ne s'élève que si nécessaire. Cela conduit à une demande de mot de passe sudo qui passe inaperçue et se termine, à ce moment-là le processus meurt et le travail effectué est perdu ou, au mieux, mis en cache. Les conseils les plus courants sont d'activer sudo sans mot de passe ou d'allonger le délai de mémorisation d'un mot de passe par sudo. Ces deux solutions ont des conséquences négatives sur la sécurité. Le délai d'attente de l'\"invite\" peut également être désactivé et puisque cela ne sert aucun objectif de sécurité raisonnable, ce devrait être la solution ici :\n\n```\nDefaults passwd_timeout=0\n```\n\n"
    },
    {
      "title": "Ajouter une cloche de terminal à l'invite de mot de passe",
      "level": 3,
      "content": "Pour attirer l'attention sur une invite sudo dans un terminal en arrière-plan, les utilisateurs peuvent simplement lui faire renvoyer un caractère «cloche» :\n\n```\nDefaults passprompt=\"^G[sudo] password for %p: \"\n```\n\nNotez que le ^G est un caractère de cloche littéral. Par exemple, dans vim, insérer en utilisant la séquence Ctrl+v Ctrl+g, ou dans nano, Alt+v Ctrl+g.\n\n"
    },
    {
      "title": "Passer des alias",
      "level": 3,
      "content": "Les alias dans Zsh et Bash ne sont normalement développés que pour le premier mot d'une commande. Cela signifie que vos alias ne seront normalement pas développés lors de l'exécution de la commande sudo. Une façon de faire en sorte que le mot suivant soit développé est de créer un alias pour sudo se terminant par un espace. Ajoutez ce qui suit à votre fichier de configuration du shell :\n\n```\nalias sudo='sudo '\n```\n\nzshmisc(1) § ALIASING décrit comment cela fonctionne :\n\nDe même que bash(1) § ALIASES :\n\n"
    },
    {
      "title": "Désactiver un sudo par terminal",
      "level": 3,
      "content": "Si vous êtes gêné par les valeurs par défaut de sudo qui vous obligent à entrer votre mot de passe chaque fois que vous ouvrez un nouveau terminal, définissez timestamp_type à global :\n\n```\nDefaults timestamp_type=global\n```\n\n"
    },
    {
      "title": "Réduire le nombre de fois où vous devez taper un mot de passe",
      "level": 3,
      "content": "Si vous êtes agacé par le fait de devoir saisir à nouveau votre mot de passe toutes les 5 minutes (valeur par défaut), vous pouvez changer cela en définissant une valeur plus longue pour timestamp_timeout (en minutes) :\n\n```\nDefaults timestamp_timeout=10\n```\n\nSi vous utilisez beaucoup de commandes sudo à la suite, il est plus logique de rafraîchir le délai d'attente à chaque fois que vous utilisez sudo que de d'augmenter timestamp_timeout. Le rafraîchissement du délai d'attente peut être effectué avec sudo -v. (alors que sudo -K révoque immédiatement).\n\nVous pouvez automatiser cette opération en ajoutant ce qui suit à votre .bashrc :\n\n```\nalias sudo='sudo -v ; sudo '\n```\n\nIl est également possible d'utiliser une fonction bash ; pour plus de détails, consultez stackexchange.\n\n"
    },
    {
      "title": "Variables d'environnement",
      "level": 3,
      "content": "Si vous avez beaucoup de variables d'environnement, ou si vous exportez vos paramètres de proxy via export http_proxy=\"...\", lorsque vous utilisez sudo, ces variables ne sont pas transmises au compte root, sauf si vous exécutez sudo avec l'option -E.\n\n```\n$ sudo -E pacman -Syu\n```\n\nLa méthode recommandée pour préserver les variables d'environnement est de les ajouter à env_keep :\n\n```\n/etc/sudoers\n```\n\n```\nDéfauts env_keep += \"ftp_proxy http_proxy https_proxy no_proxy\"\n```\n\n"
    },
    {
      "title": "Mot de passe root",
      "level": 3,
      "content": "Les utilisateurs peuvent configurer sudo de manière à ce qu'il demande le mot de passe root au lieu du mot de passe utilisateur en ajoutant targetpw (utilisateur cible, par défaut root) ou rootpw à la ligne Defaults de /etc/sudoers :\n\n```\nDefaults targetpw\n```\n\nPour éviter d'exposer votre mot de passe root aux utilisateurs, vous pouvez le restreindre à un groupe spécifique :\n\n```\nDefaults:%wheel targetpw\n%wheel ALL=(ALL) ALL\n```\n\n"
    },
    {
      "title": "Désactiver la connexion root",
      "level": 3,
      "content": "Les utilisateurs peuvent souhaiter désactiver la connexion root. Sans root, les attaquants doivent d'abord deviner un nom d'utilisateur configuré comme sudoer ainsi que le mot de passe de l'utilisateur. Consultez par exemple OpenSSH#Deny.\n\n- Prenez garde, vous pouvez vous bloquer en désactivant la connexion root. Sudo n'est pas automatiquement installé et sa configuration par défaut ne permet ni l'accès root sans mot de passe ni l'accès root avec votre propre mot de passe. Assurez-vous qu'un utilisateur est correctement configuré comme sudoer avant de désactiver le compte root !\n- Si vous avez modifié votre fichier sudoers pour utiliser rootpw par défaut, alors ne désactivez pas l'accès root avec l'une des commandes suivantes !\n- Si vous êtes déjà coincé, consultez Password recovery pour obtenir de l'aide.\n\nLe compte peut être verrouillé via passwd :\n\n```\n# passwd -l root\n```\n\nUne commande similaire permet de déverrouiller root.\n\n```\n$ sudo passwd -u root\n```\n\nVous pouvez également éditer /etc/shadow et remplacer le mot de passe chiffré de root par \"!\":\n\n```\nroot:!:12345::::: :\n```\n\nPour réactiver la connexion de root :\n\n```\n$ sudo passwd root\n```\n\n"
    },
    {
      "title": "kdesu",
      "level": 4,
      "content": "kdesu peut être utilisé sous KDE pour lancer des applications GUI avec les privilèges de root. Il est possible que par défaut, kdesu essaie d'utiliser su même si le compte root est désactivé. Heureusement, on peut dire à kdesu d'utiliser sudo au lieu de su. Créez/éditez le fichier ~/.config/kdesurc :\n\n```\n[super-user-command]\nsuper-user-command=sudo\n```\n\nou utilisez la commande suivante :\n\n```\n$ kwriteconfig5 --file kdesurc --group super-user-command --key super-user-command sudo\n```\n\n"
    },
    {
      "title": "Exemple de durcissement avec sudo",
      "level": 3,
      "content": "Disons que vous créez 3 utilisateurs : admin, devel, et joe. L'utilisateur \"admin\" est utilisé pour journalctl, systemctl, mount, kill et iptables ; \"devel\" est utilisé pour installer des paquets et éditer des fichiers de configuration ; et \"joe\" est l'utilisateur avec lequel vous vous connectez. Pour permettre à \"joe\" de redémarrer, d'arrêter et d'utiliser netctl, nous ferions ce qui suit :\n\nÉditez /etc/pam.d/su et /etc/pam.d/su-l. Demandez à l'utilisateur d'être dans le groupe wheel, mais n'y mettez personne.\n\n```\n#%PAM-1.0\nauth            sufficient      pam_rootok.so\n# Uncomment the following line to implicitly trust users in the \"wheel\" group.\n#auth           sufficient      pam_wheel.so trust use_uid\n# Uncomment the following line to require a user to be in the \"wheel\" group.\nauth            required        pam_wheel.so use_uid\nauth            required        pam_unix.so\naccount         required        pam_unix.so\nsession         required        pam_unix.so\n```\n\nLimite la connexion SSH au groupe 'ssh'. Seul \"joe\" fera partie de ce groupe.\n\n```\n# groupadd -r ssh\n# gpasswd -a joe ssh\n# echo 'AllowGroups ssh' >> /etc/ssh/sshd_config\n```\n\nRedémarrez sshd.service.\n\nAjouter des utilisateurs à d'autres groupes.\n\n```\n# for g in réseau puissance ;do ;gpasswd -a joe $g ;done\n# for g in network power storage ;do ;gpasswd -a admin $g ;done\n```\n\nDéfinissez les permissions sur les configs pour que devel puisse les modifier.\n\n```\n# chown -R devel:root /etc/{http,openvpn,cups,zsh,vim,screenrc}\n```\n\n```\nCmnd_Alias  POWER       =   /usr/bin/shutdown -h now, /usr/bin/halt, /usr/bin/poweroff, /usr/bin/reboot\nCmnd_Alias  STORAGE     =   /usr/bin/mount -o nosuid\\,nodev\\,noexec, /usr/bin/umount\nCmnd_Alias  SYSTEMD     =   /usr/bin/journalctl, /usr/bin/systemctl\nCmnd_Alias  KILL        =   /usr/bin/kill, /usr/bin/killall\nCmnd_Alias  PKGMAN      =   /usr/bin/pacman\nCmnd_Alias  NETWORK     =   /usr/bin/netctl\nCmnd_Alias  FIREWALL    =   /usr/bin/iptables, /usr/bin/ip6tables\nCmnd_Alias  SHELL       =   /usr/bin/zsh, /usr/bin/bash\n%power      ALL         =   (root)  NOPASSWD: POWER\n%network    ALL         =   (root)  NETWORK\n%storage    ALL         =   (root)  STORAGE\nroot        ALL         =   (ALL)   ALL\nadmin       ALL         =   (root)  SYSTEMD, KILL, FIREWALL\ndevel\t    ALL         =   (root)  PKGMAN\njoe\t    ALL         =   (devel) SHELL, (admin) SHELL\n```\n\nAvec cette configuration, vous n'aurez presque jamais besoin de vous connecter en tant qu'utilisateur root.\n\n\"joe\" peut se connecter au WiFi de sa maison.\n\n```\n$ sudo netctl start home\n$ sudo poweroff\n```\n\n\"joe\" ne peut pas utiliser netctl comme un autre utilisateur.\n\n```\n$ sudo -u admin -- netctl start home\n```\n\nLorsque \"Joe\" a besoin d'utiliser journalctl ou de tuer un processus en cours, il peut passer à cet utilisateur.\n\n```\n$ sudo -i -u devel\n$ sudo -i -u admin\n```\n\nMais \"joe\" ne peut pas passer à l'utilisateur root.\n\n```\n$ sudo -i -u root\n```\n\nSi \"Joe\" veut démarrer une session gnu-screen en tant qu'administrateur, il peut le faire comme suit :\n\n```\n$ sudo -i -u admin\n[admin]$ chown admin:tty `echo $TTY`\n[admin]$ screen\n```\n\n"
    },
    {
      "title": "Configurer sudo en utilisant les fichiers de dépôt dans /etc/sudoers.d",
      "level": 3,
      "content": "sudo analyse les fichiers contenus dans le répertoire /etc/sudoers.d/. Cela signifie qu'au lieu de modifier /etc/sudoers, vous pouvez changer les paramètres dans des fichiers autonomes et les déposer dans ce répertoire. Cela présente deux avantages :\n\n- Il n'est pas nécessaire d'éditer un fichier sudoers.pacnew ;\n- S'il y a un problème avec une nouvelle entrée, vous pouvez supprimer le fichier en question au lieu de modifier /etc/sudoers (mais consultez l'avertissement ci-dessous).\n\nLe format des entrées dans ces fichiers de dépôt est le même que pour /etc/sudoers lui-même. Pour les modifier directement, utilisez visudo -f /etc/sudoers.d/somefile. Consultez sudoers(5) § Inclure d'autres fichiers dans sudoers pour plus de détails.\n\nLes fichiers du répertoire /etc/sudoers.d/ sont analysés par ordre lexicographique, les noms de fichiers contenant . ou ~ sont ignorés. Pour éviter les problèmes de tri, les noms de fichiers doivent commencer par deux chiffres, par exemple 01_foo.\n\n"
    },
    {
      "title": "Édition de fichiers",
      "level": 3,
      "content": "sudo -e ou sudoedit vous permet de modifier un fichier en tant qu'autre utilisateur tout en exécutant l'éditeur de texte en tant que votre utilisateur.\n\nCeci est particulièrement utile pour éditer des fichiers en tant que root sans élever les privilèges de votre éditeur de texte, pour plus de détails lisez sudo(8) § e.\n\nNotez que vous pouvez définir l'éditeur sur n'importe quel programme, donc par exemple on peut utiliser meld pour gérer les fichiers pacnew :\n\n```\n$ SUDO_EDITOR=meld sudo -e /etc/fichier{,.pacnew}\n```\n\n"
    },
    {
      "title": "Activer les insultes",
      "level": 3,
      "content": "Les utilisateurs peuvent activer l’œuf de Pâques des insultes dans sudo en ajoutant la ligne suivante dans le fichier sudoers avec visudo.\n\n```\n/etc/sudoers\n```\n\n```\nDefaults insults\n```\n\nLors de la saisie d'un mot de passe incorrect, ceci remplacera le message Sorry, try again. par des insultes humoristiques.\n\n"
    },
    {
      "title": "Problème de SSH sans TTY",
      "level": 3,
      "content": "SSH n'alloue pas de tty par défaut lors de l'exécution d'une commande distante. Sans un tty alloué, sudo ne peut pas empêcher l'affichage du mot de passe. Vous pouvez utiliser l'option -t de ssh pour le forcer à allouer un tty.\n\nL'option Defaults requiretty ne permet à l'utilisateur d'exécuter sudo que s'il dispose d'un tty.\n\n```\n# Désactivez \"ssh hostname sudo <cmd>\", car il affichera le mot de passe en clair. Vous devez exécuter \"ssh -t hostname sudo <cmd>\".\n#\n#Defaults requiretty\n```\n\n"
    },
    {
      "title": "Permissive umask",
      "level": 3,
      "content": "Sudo fusionnera la valeur umask de l'utilisateur avec son propre umask (qui a la valeur 0022 par défaut). Cela empêche sudo de créer des fichiers avec des permissions plus ouvertes que celles autorisées par l'umask de l'utilisateur. Bien qu'il s'agisse d'une valeur par défaut saine si aucun umask personnalisé n'est utilisé, cela peut conduire à des situations où un utilitaire exécuté par sudo peut créer des fichiers avec des permissions différentes de celles de l'utilisateur root. Si des erreurs surviennent, sudo fournit un moyen de corriger l'umask, même si l'umask souhaité est plus permissif que celui que l'utilisateur a spécifié. L'ajout de cette option (en utilisant visudo) annulera le comportement par défaut de sudo :\n\n```\nDefaults umask = 0022\nDefaults umask_override\n```\n\nCeci définit l'umask de sudo sur l'umask par défaut de root (0022) et annule le comportement par défaut, en utilisant toujours l'umask indiqué, quel que soit l'umask défini par l'utilisateur.\n\n"
    }
  ]
}
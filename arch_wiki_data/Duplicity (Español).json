{
  "title": "Duplicity (Español)",
  "url": "https://wiki.archlinux.org/title/Duplicity_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2021-02-12** \n\nArtículos relacionados\n\n- Synchronization and backup programs\n\nDuplicity es un programa de copias de seguridad en red.\n\nPuede guardar instantáneas de directorios y archivos en un archivo tar remoto encriptado con GnuPG, que actúa como repositorio de copias de seguridad. La conexión con el repositorio remoto puede realizarse a través de cualquiera de los siguientes protocolos: rsync, ftp, HSI, WebDAV, Tahoe-LAFS, o Amazon S3.\n\nLas copias de seguridad son incrementales, lo que significa que sólo se almacenan los cambios en los archivos (desde la última instantánea).\n\n"
    },
    {
      "title": "Instalación",
      "level": 2,
      "content": "Instale el paquete duplicity.\n\n"
    },
    {
      "title": "Frontends",
      "level": 3,
      "content": "- Duply, un frontend de shell, disponible en el AUR.\n- deja-dup, un frontend fácil de utilizar. Proporciona la herramienta de línea de comandos deja-dup y el frontend GTK deja-dup-preferences.\n\n"
    },
    {
      "title": "Realizar copias de seguridad",
      "level": 3,
      "content": "Para realizar una copia de seguridad de la carpeta local /home/me a la ubicación remota /usr/backup en el host other.host a través del protocolo scp/ssh, ejecute la orden\n\n```\nduplicity /home/me scp://uid@other.host//usr/backup\n```\n\nLa primera vez que se ejecute esta orden, se creará una copia de seguridad completa. Si se vuelve a ejecutar exactamente la misma orden, se creará una copia de seguridad incremental en el repositorio de copias de seguridad existente.\n\nLas opciones adicionales de la línea de comandos permiten:\n\n- incluir o excluir archivos y directorios específicos de la copia de seguridad (utilizando patrones de shell o expresiones regulares)\n- ajustar el cifrado y la firma de las copias de seguridad\n\n"
    },
    {
      "title": "Restaurar archivos desde la copia de seguridad",
      "level": 3,
      "content": "Para restaurar la carpeta local /home/me al estado de la última instantánea guardada en el repositorio remoto /usr/backup en el host other.host, ejecute\n\n```\nduplicity scp://uid@other.host//usr/backup /home/me\n```\n\nNótese el orden inverso de los argumentos en comparación con el comando de copia de seguridad anterior. El argumento de la URL se trata siempre como el repositorio de la copia de seguridad, y el argumento de la ruta local como el directorio a sincronizar con la copia de seguridad. (Un repositorio local de copias de seguridad debe ser especificado explícitamente usando el prefijo file:// protocol)\n\nLas opciones adicionales de la línea de comandos permiten:\n\n- restaurar un archivo específico en lugar de todo el repositorio\n- restaurar archivos al estado que tenían en una fecha específica, en vez de a la instantánea más reciente disponible\n\n"
    },
    {
      "title": "Inspección y mantenimiento del repositorio",
      "level": 3,
      "content": "Existen algunas opciones adicionales en la línea de comandos para comparar el estado del repositorio con el estado de los archivos locales, y para eliminar instantáneas antiguas de forma que sólo se mantenga una cantidad fija de instantáneas o sólo las que sean más recientes que una fecha determinada.\n\nVéase la página de manual para más detalles.\n\n"
    },
    {
      "title": "Ejemplo de script de copia de seguridad",
      "level": 3,
      "content": "```\n#!/bin/sh\n## Remote backup script. Requires duplicity and gpg-agent with the keys and passphrases loaded as root.\n## Uses separate encryption and signing keys\n## Usage:  'backup_remote.sh'\n\nenc_key=44D79E41\nsign_key=F5C978E3\nsrc=\"/mnt/backup/\"\ndest=\"scp://destination.com//backups/homeserver\"\n\n# Keychain is used to source the ssh-agent keys when running from a cron job\ntype -P keychain &>/dev/null || { echo \"I require keychain but it's not installed.  Aborting.\" >&2; exit 1; }\neval `keychain --eval web_rsa` || exit 1\n## Note: cannot use keychain for gpg-agent because it does not currently (2.7.1) read in all the keys correctly. \n## Gpg will ask for a passphrase twice for each key...once for encryption/decryption and once for signing. \n## This makes unattended backups impossible, especially when trying to resume an interrupted backup.\nif [ -f \"${HOME}/.gnupg/gpg-agent-info\" ]; then\n      . \"${HOME}/.gnupg/gpg-agent-info\"\n      export GPG_AGENT_INFO\nfi\n\nduplicity --use-agent \\\n         --verbosity notice \\\n         --encrypt-key \"$enc_key\" \\\n         --sign-key \"$sign_key\" \\\n         --full-if-older-than 60D \\\n         --num-retries 3 \\\n         --asynchronous-upload \\\n         --volsize 100 \\\n         --archive-dir /root/.cache/duplicity \\\n         --log-file /var/log/duplicity.log \\\n         --exclude /mnt/backup/fsarchiver \\\n         --exclude '**rdiff-backup-data' \\\n         \"$src\" \"$dest\"\n```\n\n```\nfunction gpg_start {\n       gnupginf=\"${HOME}/.gnupg/gpg-agent-info\"\n       if pgrep -u \"${USER}\" gpg-agent >/dev/null 2>&1; then\n           eval \"$(cat $gnupginf)\"\n           eval \"$(cut -d= -f1 < $gnupginf | xargs echo export)\"\n       else\n           eval \"$(gpg-agent -s --daemon --write-env-file $gnupginf)\"\n       fi\n}\nfunction keys {\n       touch test-gpg.txt\n       touch test-gpg.txt1\n       gpg -r 'Duplicity Encryption Key' -e test-gpg.txt\n       gpg -r 'Duplicity Signature Key' -e test-gpg.txt1\n       gpg -u <signing key> --detach-sign test-gpg.txt\n       gpg -u <encryption key> --detach-sign test-gpg.txt1\n       gpg -d test-gpg.txt.gpg\n       gpg -d test-gpg.txt1.gpg\n       rm test-gpg.txt*\n}\ngpg_start\n```\n\n"
    },
    {
      "title": "Solución de problemas",
      "level": 2,
      "content": "Si obtiene errores gpg que mencionan \"inappropriate ioctl for device\" lo más probable es que tenga que ver con los cambios en el comportamiento del gpg-agent desde la versión 2.1 en adelante. Véase este hilo para más información. En general, uno necesita permitir explícitamente que los programas proporcionen la frase de contraseña al gpg-agent en vez de preguntar al usuario.\n\nLos pasos necesarios para remediar este problema se detallan en GnuPG#Unattended passphrase.\n\n"
    },
    {
      "title": "Véase también",
      "level": 2,
      "content": "- Página web de Duplicity\n- Wikipedia:Duplicity (software)\n- Página web de Déjà Dup\n\n"
    }
  ]
}
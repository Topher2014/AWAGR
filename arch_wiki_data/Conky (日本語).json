{
  "title": "Conky (日本語)",
  "url": "https://wiki.archlinux.org/title/Conky_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- Conky/ヒントとテクニック\n- Lm_sensors\n- Hddtemp\n\nConky は、X Window System 用のシステムモニターソフトウェアです (Wayland のサポートは 進行中です) GNU/Linux および FreeBSD で利用できます。これは、GPL ライセンスの条件に基づいてリリースされたフリーソフトウェアです。Conky は、CPU、メモリ、スワップ、ディスク容量、温度、トップ、アップロード、ダウンロード、システム メッセージなどを含む多くのシステム変数を監視できます。柔軟に設定可能ですが、設定を理解するのが少し難しい場合があります。Conky は torsmo のフォークです。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 設定 2.1 デュアルスクリーン 2.2 設定ファイルの構文\n- 3 フォント 3.1 記号フォント\n- 4 自動起動\n- 5 トラブルシューティング 5.1 Conky が起動しても画面に何も表示されない 5.2 透明 5.2.1 擬似透明 5.2.2 本当の透明性を有効にする 5.2.3 半透明 5.3 Show Desktop で最小化しないようにする 5.4 GNOME シェルとの統合 5.5 ちらつきを防ぐ\n- 6 参照\n\n- 2.1 デュアルスクリーン\n- 2.2 設定ファイルの構文\n\n- 3.1 記号フォント\n\n- 5.1 Conky が起動しても画面に何も表示されない\n- 5.2 透明 5.2.1 擬似透明 5.2.2 本当の透明性を有効にする 5.2.3 半透明\n- 5.3 Show Desktop で最小化しないようにする\n- 5.4 GNOME シェルとの統合\n- 5.5 ちらつきを防ぐ\n\n- 5.2.1 擬似透明\n- 5.2.2 本当の透明性を有効にする\n- 5.2.3 半透明\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "conky パッケージを インストール します。追加のコンパイルオプションを有効にしてインストールできる代替パッケージもあります。\n\n- conky-cliAUR - X11 依存関係のない conky\n- conky-lua-nvAUR - Lua と Nvidia の両方をサポート\n\nconky の一部の組み込み変数 (音楽の mpd など) を利用するには、追加のパッケージをインストールする必要があります。ハードドライブの温度については、カーネル 5.6 以降 drivetemp モジュールは hwmon を通じて SATA/SAS 温度を報告します。lm_sensors#S.M.A.R.T. ドライブの温度 の議論を参照してください。conky の観点からは、drivetemp は、その hwmon 変数を使用することで、hddtemp パッケージと変数の代わりとして使用できます。\n\n追加のユーティリティ:\n\n- Conky Manager — Conky ウィジェットのテーママネージャー。システムにインストールされている Conky テーマを開始/停止、参照、編集するためのオプションが提供されます。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "設定ファイルは、次のパスのいずれかにあります (最初に見つかったパスが使用されます):\n\n- ~/.config/conky/conky.conf\n- ~/.conkyrc\n- /etc/conky/conky.conf\n\nこれらのファイルが存在しない場合、conky はデフォルトの組み込み設定を使用します。これは次のように出力できます:\n\n```\n$ conky --print-config\n```\n\nさらに、次のコマンドを使用してデフォルトの設定ファイルを作成できます:\n\n```\n$ mkdir -p ~/.config/conky && conky --print-config > ~/.config/conky/conky.conf\n```\n\nドットファイル をホームディレクトリに置きたい場合は、別の場所にファイルを作成し、引数を使用してそれを使用するように conky に指示できます。\n\nたとえば、ユーザーのホームディレクトリにあるドットファイルを使用するように conky に指示するには:\n\n```\n$ conky --config=~/.conky.conf\n```\n\n追加の設定ファイルの例は、上流の wiki 記事 で入手できます。\n\nconky の実行中に設定ファイルを編集すると、ファイルに書き込むたびに conky が新しい変更内容を更新します。\n\nすべての Conky オブジェクト/変数の完全なリファレンスについては、SourceForge ページ を参照してください。これらは conky(1) にもリストされています。\n\n"
    },
    {
      "title": "デュアルスクリーン",
      "level": 3,
      "content": "デュアルスクリーン設定を使用する場合、conky ウィンドウをデスクトップ上の希望の場所に配置するには、いくつかのオプションを調整する必要があります。\n\n1680x1050 ピクセルの解像度を実行していて、ウィンドウを左モニターの中央上部に配置したい場合。gap_x を調整して次のように使用します:\n\n```\nalignment = 'top_left',\ngap_x = 840,\n```\n\nalignment オプションは一目瞭然で、gap_X は画面の左端からの距離 (ピクセル単位) です。\n\nxinerama_head は代替の便利なオプションです。次のようにすると、conkyウィンドウが 2 番目の画面の右上に配置されます。\n\n```\nalignment = 'top_right',\nxinerama_head = 2,\n```\n\n"
    },
    {
      "title": "設定ファイルの構文",
      "level": 3,
      "content": "Conky 1.10 (2015Q2 頃) 以降、設定ファイルは次のような Lua 構文で記述されます。\n\n```\nconky.config = {\n   -- Comments start with a double dash\n   bool_value = true,\n   string_value = 'foo',\n   int_value = 42,\n }\n conky.text = [[\n $variable\n ${evaluated variable}\n ]]\n```\n\n1.10 より前では、次のような古い構文が使用されます。\n\n```\nbool_value yes\n string_value 'foo'\n int_value 42\n```\n\n古い構文から新しい Lua 構文に変換する Lua スクリプトが利用可能です の GitHub リポジトリ スクリプトは /usr/share/doc/conky-1.15.0_pre/convert.lua にもあります。\n\n"
    },
    {
      "title": "フォント",
      "level": 2,
      "content": "conky で Unicode の画像と絵文字を表示するには、これをサポートする フォント が必要で、表示したい Unicode のフォントを使用するように conky を設定します。例えば:\n\n```\n${font Symbola:size=48}☺${font}\n```\n\n"
    },
    {
      "title": "記号フォント",
      "level": 3,
      "content": "シンボリックフォントは、より装飾された conky 設定でもよく使用されます。最も人気のあるものには次のようなものがあります:\n\n- otf-font-awesome\n- ttf-pizzadude-bulletsAUR - PizzaDude Bullet's font\n- ttf-weather-iconsAUR - Erik flowers weather icon font with 222 glyphs\n\n"
    },
    {
      "title": "自動起動",
      "level": 2,
      "content": "自動起動 で説明されているように、Conky を自動的に起動するにはいくつかの方法があります。\n\nConky には、バックグラウンドにフォークするように指示する構成設定があります。これは、一部の自動起動セットアップでは望ましい場合があります。\n\nIn conky.conf:\n\n```\nconky.config = {\n    background = true,\n}\n```\n\nグラフィカルデスクトップ環境を使用していて、自動起動に conky.desktop ファイルを使用したい場合は、次を使用します:\n\n```\n~/.config/autostart/conky.desktop\n```\n\n```\n[Desktop Entry]\nType=Application\nName=conky\nExec=conky --daemonize --pause=5\nStartupNotify=false\nTerminal=false\n```\n\npause=5 パラメータは、起動時に conky の描画を 5 秒間遅らせ、デスクトップがロードされて起動する時間が確保されるようにします。\n\n"
    },
    {
      "title": "トラブルシューティング",
      "level": 2,
      "content": "これらは、conky に関して人々が抱えている既知の問題とその解決策です。\n\n"
    },
    {
      "title": "Conky が起動しても画面に何も表示されない",
      "level": 3,
      "content": "まず、設定ファイルのテキスト変数に構文エラーがないか確認します。次に、ユーザーが設定ファイル内のすべてのコマンドを実行する権限を持っていること、および必要なパッケージがすべてインストールされていることを再確認します。\n\n"
    },
    {
      "title": "透明",
      "level": 3,
      "content": "Conky は 2 つの異なるタイプの透明度をサポートしています。疑似透明性と実際の透明性には、コンポジットマネージャー がインストールされて実行されている必要があります。実際の透明度を有効にし、コンポジットマネージャーを実行していない場合、conky はフォントや画像、背景の透明度が有効になっていてもアルファ透明になりません。\n\n"
    },
    {
      "title": "擬似透明",
      "level": 4,
      "content": "conky では擬似透明がデフォルトで有効になっています。疑似透明は、ルートウィンドウから背景画像をコピーし、関連するセクションを conky の背景として使用することで機能します。一部のウィンドウマネージャーは、背景の壁紙をルートウィンドウより上のレベルに設定しているため、conky の背景が灰色になる可能性があります。この問題を解決するには、手動で設定する必要があります。feh の例は次のとおりです:\n\nIn ~/.xinitrc:\n\n```\nsleep 1 && feh --bg-center ~/background.png &\n```\n\n"
    },
    {
      "title": "本当の透明性を有効にする",
      "level": 4,
      "content": "実際の透明性を有効にするには、コンポジットマネージャー を実行し、次の行を conky.config 配列内の .conkyrc に追加する必要があります。\n\n```\nconky.config = {\n    own_window = true,\n    own_window_transparent = true,\n    own_window_argb_visual = true,\n    own_window_type = 'desktop',\n }\n```\n\nウィンドウの種類 \"デスクトップ\" が機能しない場合は、それを normal に変更してみてください。それが機能しない場合は、代わりに他のオプション: dock、panel、または override を試してください。\n\n"
    },
    {
      "title": "半透明",
      "level": 4,
      "content": "リアル透明モードで半透明を実現するには、conky 設定ファイルで次の設定を使用する必要があります:\n\n```\nconky.config = {\n    own_window = true,\n    own_window_transparent = false,\n    own_window_argb_visual = true,\n    own_window_argb_value = 90,\n    own_window_type = 'desktop',\n }\n```\n\nconky ウィンドウの透明度を下げるには、own_window_argb_value の値を 255 に向かって増やすことができます。\n\n"
    },
    {
      "title": "Show Desktop で最小化しないようにする",
      "level": 3,
      "content": "Compiz を使用: 'Show Desktop' ボタンまたはキーバインディングによって Conky が他のすべてのウィンドウとともに最小化される場合は、Compiz 構成設定マネージャーを起動し、\"General Options\" に移動し、\"Hide Skip Taskbar Windows\" のチェックを外します。\n\nXFCE を使用: デスクトップをクリックすると Conky が非表示になる場合は conky.conf 内に own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager', を追加します。\n\nその他の デスクトップ環境/ウィンドウマネージャ: の場合: conky.conf を編集し、次の行を追加/変更してみてください:\n\n```\nown_window_type = 'override',\n```\n\nもしくは\n\n```\nown_window_type = 'desktop',\n```\n\n正確な違いについては、conky(1) man ページ を参照してください。ただし、後者のオプションを使用すると、Openbox などでサイズ変更キーバインドを使用してウィンドウを conky の境界線にスナップできますが、最初のオプションではできません。\n\n"
    },
    {
      "title": "GNOME シェルとの統合",
      "level": 3,
      "content": "GNOME の下に conky が表示されるという問題を経験した人もいます。\n\n次の行を conky.conf に追加します:\n\n```\nown_window = true,\nown_window_type = 'desktop',\n```\n\n"
    },
    {
      "title": "ちらつきを防ぐ",
      "level": 3,
      "content": "Conky は、ちらつきを防ぐために X サーバーからの Double Buffer Extension (DBE) サポートを必要とします。これがないとウィンドウを十分に高速に更新できないからです。これは、/etc/X11/xorg.conf の Xorg、\"Module\" セクションの Load \"dbe\" 行で有効にできます。xorg.conf ファイルは、特定の設定ファイルを含む /etc/X11/xorg.conf.d に置き換えられました (1.8.x パッチ以降) DBE は、/usr/lib/xorg/modules 内に存在する限り自動的にロードされます。ロードされたモジュールのリストは、grep LoadModule /var/log/Xorg.0.log で確認できます。\n\nダブルバッファリングを有効にするには、double_buffer オプションを conky.conf に追加します。\n\n```\nconky.config = {\n     double_buffer = true,\n }\n```\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- 公式ウェブサイト\n- 設定に使用する Conky 変数\n- Conky オブジェクト\n- Arch フォーラムの Conky 設定スレッド\n- FAQ\n\n"
    }
  ]
}
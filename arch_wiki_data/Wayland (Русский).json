{
  "title": "Wayland (Русский)",
  "url": "https://wiki.archlinux.org/title/Wayland_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Kernel mode setting (Русский)\n- Xorg (Русский)\n- Screen capture#Wayland\n\nWayland - протокол для организации графического сервера. В отличие от X Window System, Wayland не имеет API отрисовки и соответственно ей не занимается. Подробнее о отличиях Wayland от Xorg в Википедии (англ.).\n\nСерверы отображения, использующие протокол Wayland, называются композиторами, потому что они похожи на композитные менеджеры окон. Ниже указан список композиторов Wayland.\n\nДля обратной совместимости с устаревшими приложениями X11 используется Xwayland, который предоставляет X-сервер для Wayland.\n\n"
    },
    {
      "title": "Требования",
      "level": 2,
      "content": "Большинство Wayland-композиторов будут работать только на системах, использующих Kernel mode setting (Русский). Wayland не предоставляет графического окружения; для этого вам нужен композитор (смотрите следующий раздел) или среда рабочего стола, в составе которой есть композитор (например, GNOME или KDE).\n\nЧтобы драйвер GPU и Wayland могли работать вместе, они должны поддерживать одинаковый буферный API. Есть два основных: GBM и EGLStreams.\n\nTable content:\nBuffer API | Поддержка GPU драйвером | Поддержка Wayland композиторами\nGBM | Все, кроме NVIDIA < 495* | Все\nEGLStreams | NVIDIA | GNOME, Weston (со сторонним патчем)\n\n```\nGBM_BACKEND=nvidia-drm\n__GLX_VENDOR_LIBRARY_NAME=nvidia\n```\n\n"
    },
    {
      "title": "Композиторы",
      "level": 2,
      "content": "О разнице между фреймовыми и стековыми оконными менеджерами можно прочитать здесь: Оконный менеджер#Типы.\n\n"
    },
    {
      "title": "Фреймовые",
      "level": 3,
      "content": "- Cagebreak — Основан на cage, вдохновлен ratpoison.\n\n- dwl — dwm-подобный композитор Wayland на основе wlroots.\n\n- japokwm — Динамический компоновщик листов Wayland, основанный на создании макетов на основе wlroots.\n\n- Qtile — Полнофункциональный плиточный оконный менеджер и компоновщик Wayland, написанный и настроенный на Python.\n\n- river — Композитор Wayland с динамическим тайлингом, вдохновленный dwm и bspwm (Русский).\n\n- Sway — i3-совместимый Wayland-композитор на основе wlroots.\n\n- Velox — Простой оконный менеджер на основе swc, вдохновленный dwm и xmonad.\n\n- Vivarium — С динамический плитками Wayland, использующий wlroots, с семантикой рабочего стола, вдохновленной xmonad (Русский).\n\n"
    },
    {
      "title": "Стековые",
      "level": 3,
      "content": "- Enlightenment — Смотрите Enlightenment#Manually. Подробнее: [2] [3]\n\n- hikari — Основанный на wlroots композитор, вдохновленный cwm, который активно разрабатывается для FreeBSD, но также поддерживает Linux.\n\n- KDE KWin — Смотрите KDE (Русский)#Запуск Plasma.\n\n- Liri Shell — Часть Liri, создан с использованием QtQuick и QtCompositor в качестве композитора для Wayland.\n\n- labwc — Основанный на wlroots композитор, вдохновленный Openbox.\n\n- Mutter — Смотрите GNOME (Русский)#Запуск GNOME.\n\n- wayfire — 3D композитор, вдохновленный Compiz и основанный на wlroots.\n\n- Weston — Эталонная реализация композитора Wayland.\n\n- wio — Композитор на основе wlroots, призванный воспроизвести внешний вид рабочего стола Rio в Plan 9..\n\n"
    },
    {
      "title": "Другие",
      "level": 3,
      "content": "- Cage — Отображает одно полноэкранное приложение, например для киоска.\n\nНекоторые из них имеют возможность использовать экранный менеджер. Проверьте /usr/share/wayland-sessions/название_композитора.desktop.\n\n"
    },
    {
      "title": "Менеджеры входа",
      "level": 2,
      "content": "Ниже перечислены менеджеров дисплеем, который поддерживает работу Wayland. Столбец тип указывает, поддерживает ли экранный менеджер работу на Wayland или нет.\n\nTable content:\nНазвание | Тип | Описание\nemptty | Запускается в консоли | Простой диспетчер отображения CLI на TTY с поддержкой X и Wayland.\nGDM | Запускается на Wayland | Экранный менеджер рабочего окружения GNOME\ngreetd | Демон входа в систему | Минималистичный менеджер входа, поддерживает консольный и графический режим\nlemurs | Запускается в консоли | Менеджер отображения TUI для Linux, написанный на Rust.\nLightDM | Запускается на Xorg | Кросс-десктопный Экранный менеджер\nLy | Запускается в консоли | Консольный экранный менеджер, написаный на C\nSDDM | Запускется на Xorg | Экранный менеджер на основе QML.\ntbsm | Запускается в консоли | Простой запуск сеанса в CLI, написанный на чистом bash.\n\n"
    },
    {
      "title": "Библиотеки графического интерфейса",
      "level": 2,
      "content": "Смотрите подробности на официальном сайте[устаревшая ссылка 2024-10-12 ⓘ]\n\n"
    },
    {
      "title": "GTK",
      "level": 3,
      "content": "В пакетах gtk3 и gtk4 уже включена поддержка Wayland. GTK будет использовать Wayland по умолчанию, но вы можете изменить это, установив переменную окружения GDK_BACKEND=x11, чтобы использовать Xwayland.\n\n"
    },
    {
      "title": "Qt",
      "level": 3,
      "content": "Чтобы включить поддержку Wayland в Qt 5 или 6, установите пакет qt5-wayland или qt6-wayland и установите переменную окружения QT_QPA_PLATFORM=wayland. Чтобы заставить приложение использовать Xwayland установите переменную окружения QT_QPA_PLATFORM=xcb. Это может быть необходимо для некоторых проприетарных приложений, которые не используют системную реализацию Qt, к примеру zoomAUR.\n\nНа некоторых композиторах, например sway, приложения Qt, работающие нативно, могут иметь неработающую функциональность. Например, KeepassXC не удастся свернуть в трей. Это можно решить, установив qt5ct и прописав QT_QPA_PLATFORMTHEME=qt5ct перед запуском приложения.\n\n"
    },
    {
      "title": "Clutter",
      "level": 3,
      "content": "Инструментарий Clutter имеет поддержку Wayland. Она включена в пакет clutter.\n\nЧтобы запустить приложение Clutter на Wayland, установите CLUTTER_BACKEND=wayland.\n\n"
    },
    {
      "title": "SDL2",
      "level": 3,
      "content": "Для запуска SDL2 приложения на Wayland, выставите переменную окружения SDL_VIDEODRIVER=wayland.\n\n"
    },
    {
      "title": "GLEW",
      "level": 3,
      "content": "Пакет glew-waylandAUR[ссылка недействительна: package not found] в настоящее время по-прежнему не работает со многими приложениями на основе GLEW, поэтому единственный вариант — использовать glew с Xwayland. Смотрите FS#62713.\n\n"
    },
    {
      "title": "EFL",
      "level": 3,
      "content": "EFL полностью поддерживает Wayland. Для запуска EFL в Wayland смотрите страницу проекта Wayland[устаревшая ссылка 2024-10-12 ⓘ].\n\n"
    },
    {
      "title": "winit",
      "level": 3,
      "content": "Winit — это библиотека для работы с окнами в Rust. По умолчанию использует бэкенд Wayland, но его можно переопределить на Xwayland, изменив переменную окружения: WINIT_UNIX_BACKEND=x11.\n\n"
    },
    {
      "title": "Electron",
      "level": 3,
      "content": "Чтобы использовать electron-приложения через Wayland, создайте или отредактируйте файл ${XDG_CONFIG_HOME}/electron-flags.conf чтобы добавить следующие параметры (один параметр на строку).\n\n```\n~/.config/electron-flags.conf\n```\n\n```\n--enable-features=UseOzonePlatform\n--ozone-platform=wayland\n```\n\nОбратите внимание, что более старые версии Electron используют отдельные файлы electron-flags.conf. Например, если у вас установлен пакет electron12, вы можете захотеть сделать\n\n```\n$ ln -s ~/.config/electron-flags.conf ~/.config/electron12-flags.conf\n```\n\nиз вашего каталога ${XDG_CONFIG_HOME} (или создать отдельный ${XDG_CONFIG_HOME}/electron12-flags.conf файл, если вы хотите, чтобы разные версии electron использовали разные настройки).\n\n"
    },
    {
      "title": "Java",
      "level": 3,
      "content": "OpenJDK — реализация платформы Java с открытым исходным кодом — ещё не имеет встроенной поддержки Wayland.\n\nДо Wakefield, который является проектом, направленным на реализацию Wayland в OpenJDK, можно сейчас использовать Xwayland.\n\n"
    },
    {
      "title": "Xwayland",
      "level": 2,
      "content": "Xwayland[устаревшая ссылка 2024-10-12 ⓘ] — это X-сервер, работающий под управлением Wayland. Он обеспечивает обратную совместимость для устаревших приложений X11.\n\nДля использования установите пакет xorg-xwayland.\n\nXwayland запускается через композитор, поэтому вам следует проверить совместимость с Xwayland и инструкции по запуску Xwayland с выбранным вами композитором.\n\n"
    },
    {
      "title": "Драйвер Nvidia",
      "level": 3,
      "content": "Обратите внимание, что включение DRM KMS требуется. Также обратите внимание на дополнительную информацию в официальной документации относительно вашего менеджера входа (например, GDM).\n\n"
    },
    {
      "title": "Консоль отладки Kwin Wayland",
      "level": 3,
      "content": "Если вы используете kwin, выполните данную команду, чтобы увидеть, какие окна используют Xwayland или нативный Wayland, поверхности, события ввода, содержимое буфера обмена и многое другое.\n\n```\n$ qdbus org.kde.KWin /KWin org.kde.KWin.showDebugConsole\n```\n\n"
    },
    {
      "title": "Визуальное обнаружение приложений Xwayland",
      "level": 3,
      "content": "Чтобы определить, запущено ли приложение через Xwayland, вы можете запустить extramausAUR.\n\nНаведите указатель мыши на окно приложения. Если красный курсор двигается, приложение работает через Xwayland.\n\nИли вы можете использовать xorg-xeyes и посмотреть, двигаются ли глаза при перемещении курсора по окну приложения.\n\n"
    },
    {
      "title": "Переназначение клавиш клавиатуры",
      "level": 3,
      "content": "Модель безопасности Wayland не позволяет другим программам, кроме композитора, захватывать необработанный ввод с клавиатуры. Некоторые композиторы поддерживают переназначение клавиш (например, mutter через gnome-tweaks), но многие этого не умеют. Программы evremap-gitAUR, evdevremapkeys-gitAUR, и kbct-gitAUR могут обойти это, захватив клавиатуру перед композитором и передав ему измененный ввод с клавиатуры.\n\n"
    },
    {
      "title": "Цветовая коррекция",
      "level": 3,
      "content": "Читайте Backlight (Русский)#Цветовая коррекция.\n\n"
    },
    {
      "title": "Графические артефакты в GNOME",
      "level": 3,
      "content": "Пользователи gnome-shell могут испытывать проблемы при переходе с Xorg на Wayland. Чаще всего корнем проблемы является установленная переменная CLUTTER_PAINT=disable-clipped-redraws:disable-culling. Уберите её из /etc/environment.\n\n"
    },
    {
      "title": "Cannot open display::0 в приложениях на основе Electron",
      "level": 3,
      "content": "Приложения, написаные на Electron (например, Atom или Discord) не будут работать на Wayland. Установите переменную GDK_BACKEND=x11 для запуска на Xwayland.\n\n"
    },
    {
      "title": "Удалённый доступ к ПК",
      "level": 3,
      "content": "- (20200206) wlroots (используется в sway) имеет поддержку VNC через пакет wayvnc.\n- (20180401) mutter теперь имеет поддержку удалённого рабочего стола через пакет gnome-remote-desktop. Читайте [4] для деталей.\n- В 2013 году произошло слияние FreeRDP с Weston, включенное с помощью флага компиляции. Пакет weston включен, начиная с версии 6.0.0.\n- waypipe (или waypipe-gitAUR) - прозрачный прокси для запуска Wayland приложений через оболочку SSH\n\n"
    },
    {
      "title": "Захват ввода в играх, удалённом рабочем столе и окнах виртуальных машин",
      "level": 3,
      "content": "В отличие от Xorg, Wayland не допускает эксклюзивного захвата устройства ввода, также известного как активный или явный захват (например, клавиатура, мышь), вместо этого он зависит от композитора Wayland для передачи сочетаний клавиш и ограничения мыши в окне приложения.\n\nЭто изменение в захвате ввода нарушает поведение текущих приложений, что означает:\n\n- Комбинации горячих клавиш и модификаторы будут перехвачены композитором и не будут отправлены на удаленный рабочий стол и окна виртуальной машины.\n- Указатель мыши не будет ограничен окном приложения, что может вызвать эффект параллакса, когда положение указателя мыши внутри окна виртуальной машины или удаленного рабочего стола смещено от указателя мыши хоста.\n\nWayland решает эту проблему, добавляя расширения протокола для Wayland и Xwayland. Поддержка этих расширений необходима для добавления в композиторы Wayland. В случае нативных клиентов Wayland используемые наборы библиотеки виджетов (например, GTK, Qt) должны поддерживать эти расширения или сами приложения, если библиотеки виджетов не используется. В случае приложений Xorg не требуется никаких изменений в приложениях или библиотеки виджетов, поскольку достаточно поддержки Xwayland.\n\nЭти расширения уже включены в wayland-protocols и поддерживается в xorg-xwayland.\n\nСвязанные расширения:\n\n- Xwayland протокол захвата клавиатуры\n- Протокол блокировки сочетаний клавиш в композиторе\n- Протокол относительного указателя\n- Протокол ограничения указателя\n\nПоддерживающие композиторы Wayland:\n\n- Mutter, композитор GNOME с версии 3.28\n- wlroots поддерживает относительный и ограниченый указатель\n\nПоддерживающие библиотеки виджетов:\n\n- GTK с версии 3.22.18.\n\n"
    },
    {
      "title": "Темы GTK не работают",
      "level": 3,
      "content": "Смотрите https://github.com/swaywm/sway/wiki/GTK-3-settings-on-Wayland.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Wayland документация онлайн (англ.)\n- Официальный репозиторий Wayland Git\n- Fedora:How to debug Wayland problems\n- Мы уже Wayland?\n- Потрясающие проекты Wayland\n- Cursor themes (Русский)\n- i3 Руководство по миграции — основные приложения X11, используемые на i3 с альтернативами для Wayland (англ.)\n- Проводник Wayland — лучший способ читать документацию Wayland (англ.)\n\n"
    }
  ]
}
{
  "title": "MacBook (日本語)",
  "url": "https://wiki.archlinux.org/title/MacBook_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- インストールガイド\n- 一般的な推奨事項\n- MacBook5,2 (early-mid 2009)\n- MacBookPro7,1\n- MacBookPro8,1/8,2/8,3 (2011)\n- MacBookPro9,2 (Mid-2012)\n- MacBookPro10,x\n- MacBookPro11,x\n- iMac Aluminum\n- Apple Fusion Drive\n\nMacBook (12\"/Air/Pro) に Arch Linux をインストールするのは他のコンピュータに Arch をインストールするのと大して変わりはありません。とはいえ、MacBook 固有のハードウェア設定のため、説明を分ける必要がある特別な注意事項が多少存在します。Arch Linux 一般の情報は、インストールガイドを参照してください。このページでは Linux カーネルでサポートされているハードウェアを使っている Apple のコンピュータにおけるインストールの説明を入れています。機種ごとの注意事項やトラブルシューティングなどは (ページ右上の) '関連'ページを見て下さい。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 概要\n- 2 ファームウェアのアップデート\n- 3 パーティション 3.1 Arch Linux のみ 3.2 Mac OS X と Arch Linux 3.2.1 EFI 3.2.2 BIOS 互換 3.3 Mac OS X, Windows XP, Arch Linux のトリプルブート\n- 4 ブートローダーの設定 4.1 systemd-boot で Apple のブートローダーを使う (推奨) 4.2 GRUB で Apple のブートローダーを使う 4.3 GRUB を EFI パーティションに直接インストールする 4.4 bless を使う 4.5 コンパイル\n- 5 インストール\n- 6 インストール後の設定 6.1 Xorg 6.1.1 ビデオ 6.1.1.1 NVIDIA ノート 6.1.2 タッチパッド 6.1.3 キーボード 6.1.3.1 キーボードのバックライト 6.1.3.1.1 NVIDIA ノート 6.2 Wi-Fi 6.3 電源管理 6.3.1 サスペンドとハイバネート 6.4 環境光センサー 6.5 サウンド 6.6 Bluetooth 6.7 Magic Mouse 6.8 ウェブカメラ 6.8.1 iSight 6.8.2 Facetime HD 6.9 温度センサー 6.10 カラープロファイル 6.11 Apple Remote 6.12 HFS パーティションの共有 6.13 HFS+ パーティション 6.13.1 ジャーナリング 6.13.2 Yosemite 以降 6.14 ホームシェアリング 6.14.1 OS X 6.14.1.1 手順 1: UID と GID を変更する 6.14.1.2 手順 2: \"Home\" のパーミッションを変更する 6.14.2 Arch 6.15 起動前の EFI の待機を止める 6.16 起動音を消す 6.17 kworker が CPU を占有してしまう\n- 7 rEFIt 7.1 rEFIt の問題 7.1.1 Mavericks のアップグレードが Arch のブートオプションを破壊する\n- 8 モデルごとの情報 8.1 MacBook 8.1.1 April 2016 12\" - バージョン 9,1 8.1.2 Mid 2007 13\" - バージョン 2,1 8.2 MacBook Pro 8.2.1 Early 2015 13\"/15\" - バージョン 12,x/11,4+ 8.2.1.1 ワイヤレス 8.2.1.2 Bluetooth 8.2.1.3 サスペンド & 電源オフ (11,4+) 8.2.1.4 キーボード & タッチパッド 8.2.1.5 グラフィック 8.2.1.6 Apple Thunderbolt 2 ギガビットイーサネットドングル 8.2.2 2012 - 2014 モデル 8.3 MacBook Air 8.3.1 Early 2014 11\" - バージョン 6,1 8.3.2 Mid 2013 13\" - バージョン 6,2 8.3.2.1 インストールとブート 8.3.2.2 Arch だけのインストール 8.3.2.3 安定性の問題 8.3.2.4 Marvell ATA サスペンドバグ 8.3.2.5 サスペンド/レジューム 8.3.2.6 WiFi 8.3.2.7 タッチパッド 8.3.2.8 オーディオ 8.3.3 Mid 2012 13\" — バージョン 5,2 8.3.4 Mid 2012 11.5\" — バージョン 5,1 8.3.5 Mid 2011 — バージョン 4,x 8.3.6 Early 2008 — バージョン 1,1\n- 9 参照\n\n- 3.1 Arch Linux のみ\n- 3.2 Mac OS X と Arch Linux 3.2.1 EFI 3.2.2 BIOS 互換\n- 3.3 Mac OS X, Windows XP, Arch Linux のトリプルブート\n\n- 3.2.1 EFI\n- 3.2.2 BIOS 互換\n\n- 4.1 systemd-boot で Apple のブートローダーを使う (推奨)\n- 4.2 GRUB で Apple のブートローダーを使う\n- 4.3 GRUB を EFI パーティションに直接インストールする\n- 4.4 bless を使う\n- 4.5 コンパイル\n\n- 6.1 Xorg 6.1.1 ビデオ 6.1.1.1 NVIDIA ノート 6.1.2 タッチパッド 6.1.3 キーボード 6.1.3.1 キーボードのバックライト 6.1.3.1.1 NVIDIA ノート\n- 6.2 Wi-Fi\n- 6.3 電源管理 6.3.1 サスペンドとハイバネート\n- 6.4 環境光センサー\n- 6.5 サウンド\n- 6.6 Bluetooth\n- 6.7 Magic Mouse\n- 6.8 ウェブカメラ 6.8.1 iSight 6.8.2 Facetime HD\n- 6.9 温度センサー\n- 6.10 カラープロファイル\n- 6.11 Apple Remote\n- 6.12 HFS パーティションの共有\n- 6.13 HFS+ パーティション 6.13.1 ジャーナリング 6.13.2 Yosemite 以降\n- 6.14 ホームシェアリング 6.14.1 OS X 6.14.1.1 手順 1: UID と GID を変更する 6.14.1.2 手順 2: \"Home\" のパーミッションを変更する 6.14.2 Arch\n- 6.15 起動前の EFI の待機を止める\n- 6.16 起動音を消す\n- 6.17 kworker が CPU を占有してしまう\n\n- 6.1.1 ビデオ 6.1.1.1 NVIDIA ノート\n- 6.1.2 タッチパッド\n- 6.1.3 キーボード 6.1.3.1 キーボードのバックライト 6.1.3.1.1 NVIDIA ノート\n\n- 6.1.1.1 NVIDIA ノート\n\n- 6.1.3.1 キーボードのバックライト 6.1.3.1.1 NVIDIA ノート\n\n- 6.1.3.1.1 NVIDIA ノート\n\n- 6.3.1 サスペンドとハイバネート\n\n- 6.8.1 iSight\n- 6.8.2 Facetime HD\n\n- 6.13.1 ジャーナリング\n- 6.13.2 Yosemite 以降\n\n- 6.14.1 OS X 6.14.1.1 手順 1: UID と GID を変更する 6.14.1.2 手順 2: \"Home\" のパーミッションを変更する\n- 6.14.2 Arch\n\n- 6.14.1.1 手順 1: UID と GID を変更する\n- 6.14.1.2 手順 2: \"Home\" のパーミッションを変更する\n\n- 7.1 rEFIt の問題 7.1.1 Mavericks のアップグレードが Arch のブートオプションを破壊する\n\n- 7.1.1 Mavericks のアップグレードが Arch のブートオプションを破壊する\n\n- 8.1 MacBook 8.1.1 April 2016 12\" - バージョン 9,1 8.1.2 Mid 2007 13\" - バージョン 2,1\n- 8.2 MacBook Pro 8.2.1 Early 2015 13\"/15\" - バージョン 12,x/11,4+ 8.2.1.1 ワイヤレス 8.2.1.2 Bluetooth 8.2.1.3 サスペンド & 電源オフ (11,4+) 8.2.1.4 キーボード & タッチパッド 8.2.1.5 グラフィック 8.2.1.6 Apple Thunderbolt 2 ギガビットイーサネットドングル 8.2.2 2012 - 2014 モデル\n- 8.3 MacBook Air 8.3.1 Early 2014 11\" - バージョン 6,1 8.3.2 Mid 2013 13\" - バージョン 6,2 8.3.2.1 インストールとブート 8.3.2.2 Arch だけのインストール 8.3.2.3 安定性の問題 8.3.2.4 Marvell ATA サスペンドバグ 8.3.2.5 サスペンド/レジューム 8.3.2.6 WiFi 8.3.2.7 タッチパッド 8.3.2.8 オーディオ 8.3.3 Mid 2012 13\" — バージョン 5,2 8.3.4 Mid 2012 11.5\" — バージョン 5,1 8.3.5 Mid 2011 — バージョン 4,x 8.3.6 Early 2008 — バージョン 1,1\n\n- 8.1.1 April 2016 12\" - バージョン 9,1\n- 8.1.2 Mid 2007 13\" - バージョン 2,1\n\n- 8.2.1 Early 2015 13\"/15\" - バージョン 12,x/11,4+ 8.2.1.1 ワイヤレス 8.2.1.2 Bluetooth 8.2.1.3 サスペンド & 電源オフ (11,4+) 8.2.1.4 キーボード & タッチパッド 8.2.1.5 グラフィック 8.2.1.6 Apple Thunderbolt 2 ギガビットイーサネットドングル\n- 8.2.2 2012 - 2014 モデル\n\n- 8.2.1.1 ワイヤレス\n- 8.2.1.2 Bluetooth\n- 8.2.1.3 サスペンド & 電源オフ (11,4+)\n- 8.2.1.4 キーボード & タッチパッド\n- 8.2.1.5 グラフィック\n- 8.2.1.6 Apple Thunderbolt 2 ギガビットイーサネットドングル\n\n- 8.3.1 Early 2014 11\" - バージョン 6,1\n- 8.3.2 Mid 2013 13\" - バージョン 6,2 8.3.2.1 インストールとブート 8.3.2.2 Arch だけのインストール 8.3.2.3 安定性の問題 8.3.2.4 Marvell ATA サスペンドバグ 8.3.2.5 サスペンド/レジューム 8.3.2.6 WiFi 8.3.2.7 タッチパッド 8.3.2.8 オーディオ\n- 8.3.3 Mid 2012 13\" — バージョン 5,2\n- 8.3.4 Mid 2012 11.5\" — バージョン 5,1\n- 8.3.5 Mid 2011 — バージョン 4,x\n- 8.3.6 Early 2008 — バージョン 1,1\n\n- 8.3.2.1 インストールとブート\n- 8.3.2.2 Arch だけのインストール\n- 8.3.2.3 安定性の問題\n- 8.3.2.4 Marvell ATA サスペンドバグ\n- 8.3.2.5 サスペンド/レジューム\n- 8.3.2.6 WiFi\n- 8.3.2.7 タッチパッド\n- 8.3.2.8 オーディオ\n\n"
    },
    {
      "title": "概要",
      "level": 2,
      "content": "具体的に言うと、MacBook で Arch Linux をインストールする手順は以下の通りになります:\n\n1. ファームウェアのアップデート: アップデートを行うことでエラーが減りハードウェアの新しい機能が使えるようになるはずです。\n1. パーティション: このステップでは OS X パーティションを縮小または削除して Arch Linux のためのパーティションを作成します。\n1. ブートローダーの設定: 新しいパーティションを起動できる状態にします。\n1. Arch Linux のインストール: 実際にインストールを行います。\n1. インストール後の設定: MacBook 特有の設定。\n\n"
    },
    {
      "title": "ファームウェアのアップデート",
      "level": 2,
      "content": "Arch Linux をインストールする前に、MacBook の最新ファームウェアアップデートがインストールされているか確認してください。ファームウェアのアップデートには macOS が必要です。macOS で App Store を開いてアップデートがないか確認してください。アップデートを実行したら、コンピューターを再起動して、再度、他にアップデートがないか確認してください。\n\nMacBook ファームウェアのアップデートは macOS からしかインストールできないので、macOS はアンインストールしないことを推奨します。macOS を完全に削除する場合、Linux でカラープロファイルを設定するのに必要になるファイルをバックアップしてください:\n\n```\n/Library/ColorSync/Profiles/Displays/*\n```\n\nバックアップしたらパーティションセクションに進んでください。\n\n"
    },
    {
      "title": "パーティション",
      "level": 2,
      "content": "インストールの次のステップはハードドライブの再パーティションです。通常の方法で macOS をインストールした場合、ドライブは GPT フォーマットとなり以下のパーティションが含まれているはずです:\n\n- EFI: ディスクの最初にある 200 MB のパーティション。パーティションツールによっては msdos や FAT と認識されることがあり通常は #1 とラベル付けされます。\n- Mac OS X: ディスクの残り容量全てを占めているパーティション (HFS+)。通常は #2 とラベルが設定されます。\n- Recovery: リカバリパーティション (Mac OS X 10.7 以上のみ)。macOS からは遮蔽されていますが、パーティションツールから確認できます。\n\nインストールしたいオペレーションシステムの数によってパーティションの方法は変わります。このページでは以下の選択肢を説明しています:\n\n- Arch Linux だけのシングルブート。\n- OS X と Arch Linux のデュアルブート。\n- Mac OS X, Windows XP, Arch Linux のトリプルブート。\n\nどれにするのか決められないのならば、デュアルブートを推奨します。いつでも好きなときに OS X に戻ることができるからです。\n\n"
    },
    {
      "title": "Arch Linux のみ",
      "level": 3,
      "content": "一番簡単です。Arch Linux がインストールできる他のハードウェアと同じようにパーティションをすれば、ほとんど上手くいきます。インストールガイドを見てください。\n\n完全なディスク暗号化を設定したい場合、Dm-crypt/システム全体の暗号化を見てください。\n\n/home パーティションを分割したり、暗号化や LVM を使わないシンプルな例だと以下のようになります:\n\n```\npartition  mountpoint  size    type  label\n/dev/sda1  /boot       200MiB  vfat  EFI\n/dev/sda2  /swap       adjust  swap  swap\n/dev/sda3 　/  　       　remain  ext4  root\n```\n\n"
    },
    {
      "title": "Mac OS X と Arch Linux",
      "level": 3,
      "content": "OS X と Arch Linux が共存するようにハードドライブをパーティションするには、OS X のパーティショニングツールを使ってから Arch Linux のツールで仕上げをするのが一番簡単な方法です。\n\n手順:\n\n- OS X で、Disk Utility.app を実行してください (/Applications/Utilities にあります)。\n- 左のカラムからパーティションするドライブを選択してください (パーティションではありません)。右のパーティションタブをクリックしてください。\n- + ボタンを押して新しいパーティションを追加して、OS X 用に残したい容量と新しいパーティション用の容量を決めてください。新しいパーティションは Arch Linux でフォーマットするため、パーティションタイプは何でもかまいません。\n- 上記の作業が完了したら、次で進みます。パーティションが作成できない場合、OS X の中からパーティションを修復する必要があります。\n- Alt を押しながらパソコンを起動して Arch のインストールメディアやライブ USB を起動してください。そして#インストールに進んでください。\n\n新しく作成したパーティションは Arch のインストールメディアの中からリサイズできます。\n\n"
    },
    {
      "title": "EFI",
      "level": 4,
      "content": "- cgdisk を実行してください。\n\n- Disk Utility.app で作成したパーティションを削除して Arch Linux に必要なパーティションを作成してください。OS X ではパーティションの後に 128 MiB の隙間があると良いので、最後の Mac OS X パーティションの後に最初のパーティションを作成する際、cgdisk がパーティションの最初のセクターを聞いた時に +128M と入力してください。Apple のパーティションポリシーに関する詳細は こちら を読んでください。シンプルな例 (LVM や crypto なし):\n\n- スワップパーティションは任意です。RAM が 4GB 以上あるマシンでは、スワップパーティションがないほうが良いパフォーマンスを期待できます。また、後でスワップファイルを作ることも可能です、スワップファイルを参照してください。\n- 一番楽なデュアルブートの選択肢は OSX の中から root ディレクトリ (install.sh のデフォルト) に rEFInd をインストールすることです。その後、インストールの tarball からドライバーフォルダを新しい refind の場所にコピーして、refind.conf の scan_all_linux_kernels と also_scan_dirs オプションの行をアンコメントしてください。ブートオプションの設定は Arch の /boot ディレクトリにある refind_linux.conf から行えます。\n- Apple のブートローダーから GRUB を起動できるようにするには、小さな hfs+ のパーティションを作成してください (便宜上、その後 OS X を使って Disk Utility.app でフォーマットしてください)。GRUB EFI のインストール手順に従ってから、 /boot/efi ディレクトリを作成した hfs+ パーティションにマウントしてください。最後に、OS X で再度そのパーティションを bless して完了です。これで GRUB がデフォルトのブートオプションに設定されます (起動時に alt を押すことで mac のブートオプション画面が出ます。http://mjg59.dreamwidth.org/7468.html を見て下さい)。\n- パーティションに関する詳細は、パーティショニングを見て下さい。\n- OS X の EFI パーティションは archlinux と共有することが可能です。arch のための追加の EFI パーティションの作成は完全に任意です。\n\n```\npartition  mountpoint  size       type  label\n/dev/sda1  /boot/efi   200MiB     vfat  EFI\n/dev/sda2  -           ?          hfs+  Mac OS X\n/dev/sda3  -           ?          hfs+  Recovery\n/dev/sda4  -           100MiB     hfs+  Boot Arch Linux from the Apple boot loader (optional)\n/dev/sda5  /boot       100MiB     boot  boot\n/dev/sda6  -           ?          swap  swap (optional)\n/dev/sda7  /           10GiB      ext4  root\n/dev/sda8  /home       remaining  ext4  home\n```\n\n"
    },
    {
      "title": "BIOS 互換",
      "level": 4,
      "content": "- root で parted を実行してください。\n\n- 空きスペースのパーティションと他のインストールに使うスペースのパーティションを削除します。MBR はプライマリパーティションを4つまでしか持てないので注意してください (efi パーティションを含む)。arch には2つのプライマリパーティションを残します。システムパーティションとホームパーティションを作って、スワップファイルを使うという方策と (論理パーティションは使いません)、ひとつのパーティションを共有パーティションにするという方策が考えられます (下を参照)。\n\n- 次に、(ファイルシステムを必要とする) パーティション上に (特に /boot を含むパーティションに) ファイルシステムを新しく作成します。次のステップで rEFIt が MBR に正しいパーティションタイプを設定できるようにする必要があります (既存のファイルシステムを使わない、parted によって設定されたパーティションタイプは無視されるようです)。GRUB を正しいパーティションにインストールするために不可欠です。\n\n- ここで、コンピュータを再起動して rEFIt でハードドライブのパーティションテーブルを修正してください (これをしていないと、Mac が Linux のパーティションを認識できるように後で GRUB を再インストールする必要が生じることがあります)。rEFIt のメニューが表示されたら、update partition table を選択して、Y を押して下さい。そして再起動します。\n\n"
    },
    {
      "title": "Mac OS X, Windows XP, Arch Linux のトリプルブート",
      "level": 3,
      "content": "この方法はどの環境でも使えるとは保証できませんが、late 2009 以降の Macbook では問題ないことをテスト済みです。\n\nハードドライブをパーティションして、全てのオペレーティングシステムが共存できるようにする一番簡単な方法は、Mac OS X のディスクユーティリティを使って、XP のフォーマッタを使って、XP をインストールして、Arch Linux のツールでフィニッシュすることです。\n\n手順:\n\n- OS X で、Disk Utility.app を実行してください (/Applications/Utilities にあります)。\n\n- 左のカラムからパーティションするドライブを選択してください (パーティションではありません)。右のパーティションタブをクリックしてください。\n\n- ボリュームスキームからリサイズするボリュームを選択してください。\n\n- Mac OS X のパーティション、XP のパーティション、Arch Linux のパーティションそれぞれにどれだけ容量を割り当てるか決定します。ソフトウェアアプリケーションやファイルの数によりますが、標準的な Mac OS X 環境には 15-20 GiB、XP もそれと同じくらいの容量が必要になることを覚えておいて下さい。OSX 200Gb, XP 25Gb, Arch 25Gb くらいで十分でしょう。\n\n- 割り当てを決めたら行動に移します。+ ボタンを押して新しいパーティションを追加し、自由にラベルを付けて下さい。XP パーティションは一番最後のパーティションにして FAT32 でフォーマットします。後で迷わないように Arch は HFS でフォーマットすると良いでしょう、どちらにしろフォーマットし直すことになります。\n\nlinux から見るとパーティションは以下のようになります:\n\n- sda (ディスク)\n- sda1 (Mac ブートパーティション - OSX からは見れません)\n- sda2 (HFS+ の OSX インストール)\n- sda3 (一時的に HFS の Arch インストール)\n- sda4 (FAT32 の XP インストール)\n\n- 最後に、適用をクリックします。これで空きスペースから新しいパーティションが作成されます。\n\n- 上記作業が完了したら、次に進んで下さい。もし失敗した場合は、先に Mac OS X の中からパーティションを修復する必要があるかもしれません。\n\n- この方法でブートキャンプをする必要はありません。EFIt プログラムはかなりの柔軟性があります (ただし GRUB ほどの柔軟性はありません)。rEFIt をダウンロードしてインストールしてください [1]。\n\n- OS X のターミナルを開き以下を実行してください、これで rEFIt ブートマネージャが有効になります。\n\n```\ncd /efi/refit\n./enable.sh\n```\n\n- rEFIt が動作するか再起動して確認してください、起動時に表示されるはずです。立ち上がったら rEFIt パーティションマネージャを開いて変更を承諾してください。\n\n- XP インストール CD を挿入して rEFIt で起動します - ブートローダーによって認識されるまで何回か再起動する必要があるかもしれません。XP をインストールして、インストールが完了したら XP でドライバーが動くように OSX インストール CD を使います。\n\n- Arch インストール CD を起動して、root でログインし # /arch/setup を実行してください。\n\n- 通常通りにインストールを行います。arch インストーラーには sda3 を root パーティションとしてマウントさせ ext3 でフォーマットします。/boot やスワップパーティションはないので警告は無視して下さい。\n\n- この時点で、デュアルブートする場合は、コンピュータを再起動して rEFIt でハードドライブのパーティションテーブルを修正します (これを行っていないと、Mac に Linux パーティションを認識させるために後で GRUB の再インストールをする必要が出てきます)。rEFIt のメニューに入ったら、update partition table を選択して、Y を押して下さい。\n\n```\n# reboot\n```\n\n- これで完了です。#インストールに進むことができますが、#GRUB を EFI パーティションに直接インストールするを読んでおいて下さい。\n\n"
    },
    {
      "title": "systemd-boot で Apple のブートローダーを使う (推奨)",
      "level": 3,
      "content": "Apple の EFI ブートローダーは EFI システムパーティションに存在する /EFI/BOOT/BOOTX64.EFI という .efi ファイルを読み込みます。幸いにも、systemd-boot バイナリがデフォルトでインストールされる場所と同じであるため、systemd-boot を使用して Linux を簡単に起動できます。\n\n- まず、EFI システムパーティションが /boot にマウントされていることを確認してください。\n- 通常通りに#インストールを行います。\n- Chroot 完了の中から、以下のコマンドを実行して systemd-boot をインストールします:\n\n```\n# bootctl --path=/boot install\n```\n\n上記のコマンドは systemd-boot バイナリを /boot/EFI/BOOT/BOOTX64.EFI にコピーして systemd-boot をデフォルトの EFI アプリケーション (デフォルトのブートエントリ) として EFI ブートマネージャに追加します。\n\n- systemd-boot#設定に書かれている手順に従ってブートローダーを設定します。\n\n再起動したら、MacBook が起動している間に Option キーを押すことで Apple Boot Manager が表示され、ブートオプションとして Arch Linux が選択できるはずです (EFI Boot と表示されます)。\n\n"
    },
    {
      "title": "GRUB で Apple のブートローダーを使う",
      "level": 3,
      "content": "UEFI でありながらも、MacBook の EFI ブートローダーは起動するのに EFI パーティションを使用しません [2]。代わりに、内部・外部ドライブに含まれている .efi ファイルを検索して、特定の条件が満たされている場合にブートオプションとして表示します。例えば、MacBook は既存の OS X 環境を以下の条件で検知します:\n\n- パーティションが HFS+ でフォーマットされていること。\n- パーティションの ID が af00 であること。\n- パーティションのルートディレクトリに mach_kernel という名前のファイルが存在すること。\n- パーティションの中の /System/Library/CoreServices ディレクトリに boot.efi ファイルが存在すること。\n\nつまり Arch Linux 環境を MacBook のブートローダーから自動的に認識させることが可能です。さらに、HFS+ で /boot パーティションが正しくフォーマットされていれば EFI システムパーティションに手を加える必要はありません。OS X と上手く共存しつつ rEFInd などの他のブートローダーを利用しなくてもよくなります。ただし、手動で設定しなければなりません。以下は GRUB を使って設定を行う手順です:\n\n- まず、新しい Arch 環境をインストールする際に、/boot パーティションを作成してください。Arch ISO では様々なツールが使えます (例: cgdisk)。\n- カーネルを保存するためにパーティションの容量は ~250 MB 程度必要です。パーティションのタイプは Apple HFS/HFS+ に設定してください (fdisk/cgdisk では Apple HFS/HFS+、gdisk では af00 と表示されます)。\n- Arch のインストール ISO には hfsprogsAUR パッケージが含まれていないため、新しいパーティションを HFS+ でフォーマットする前にインストール環境の中でパッケージをインストールしてください:\n\n```\n# pacman -Sy hfsprogs\n# modprobe hfsplus\n# mkfs.hfsplus /dev/sdX -v \"Arch Linux\"\n```\n\n- 完了したら#インストールに進んでください。\n\n- chroot 環境に入ったら、grub と efibootmgr パッケージをインストールしてください。以下のコマンドで GRUB EFI アプリケーションが /boot/EFI/arch/System/Library/CoreServices/boot.efi にインストールされ、モジュールが /boot/grub/x86_64-efi にインストールされます:\n\n```\n# grub-install --target=x86_64-efi --efi-directory=/boot\n```\n\nその後、標準の設定ファイルを作成してください:\n\n```\n# grub-mkconfig -o /boot/grub/grub.cfg\n```\n\n/System/Library/CoreServices ディレクトリが /boot/EFI/ フォルダのサブディレクトリとして扱われないため boot.efi のディレクトリ構造が正しくありません。MacBook のブートローダーから認識されるように boot.efi スタブの場所を変更する必要があります:\n\n```\n# mv /boot/EFI/arch/System/ /boot/\n# rm -r /boot/EFI/\n```\n\nそしてダミーの mach_kernel ファイルを作成:\n\n```\n# touch /boot/mach_kernel\n```\n\nその後、以下のファイルを作成してください:\n\n```\n/boot/System/Library/CoreServices/SystemVersion.plist\n```\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<plist version=\"1.0\">\n<dict>\n       <key>ProductBuildVersion</key>\n       <string></string>\n       <key>ProductName</key>\n       <string>Linux</string>\n       <key>ProductVersion</key>\n       <string>Arch Linux</string>\n</dict>\n</plist>\n```\n\n再起動したら Option キーを押し続けることで Apple Boot Manager が表示され、ブートオプションとして Arch Linux が選択できるはずです。Arch Linux を選択すると GRUB が起動します。\n\n```\n$ wget -O /tmp/archlinux.svg https://www.archlinux.org/logos/archlinux-icon-crystal-64.svg\n$ rsvg-convert -w 128 -h 128 -o /tmp/archlogo.png /tmp/archlinux.svg\n$ sudo png2icns /boot/.VolumeIcon.icns /tmp/archlogo.png\n$ rm /tmp/archlogo.png\n$ rm /tmp/archlinux.svg\n```\n\n上記のコマンドの中で使っている Arch ロゴは好きなアイコンに置き換えられます。\n\n"
    },
    {
      "title": "GRUB を EFI パーティションに直接インストールする",
      "level": 3,
      "content": "- GRUB をメインのブートローダーとして使用し、rEFIt (http://refit.sourceforge.net/、上の #BIOS 互換 や #Mac OS X, Windows XP, Arch Linux のトリプルブート で記述) などを使う代わりに\"ブート中に Alt/Option キーを押す\"方法で Mac OS X に戻したい場合は、Mac の既存の EFI パーティション (下記参照) に grub をインストールする必要があります。\n\n- 以下の手順は Macbook Pro (Early 2011) で上手くいくことが確認されています。手順だけでなくその下の詳細も注意して読んで下さい。\n- 新しい MacBook Pro (Mid 2014) では、efibootmgr パッケージをインストールしてからでないと上手く行きません。\n\n手順:\n\n- grub をインストールしてください\n\n- /boot に efi という名前のディレクトリを作成してください\n\n- Mac 上にある既存の EFI パーティションをこの /boot/efi ディレクトリにマウントしてください\n\n- このディレクトリに GRUB をインストールしてください\n\n- /boot/grub に locale という名前のディレクトリを作成してください\n\n- /usr/share/locale/en\\@quot/LC_MESSAGES/ から /boot/grub/locale に grub.mo をコピーしてください\n\n- GRUB の設定を生成してください\n\n- 完了です。これで再起動後 GRUB が起動し新しくインストールした Archlinux を起動することができます。\n\n- Mac OS X を起動したいときはコンピュータの起動中に ALT/Option キーを押し続けて下さい。\n\n詳細 (GRUB/EFI サンプル#M5A97 から引用):\n\ngrub をインストールして boot パーティションがハードディスクに GPT としてあるか確認して、基本の Arch インストール作業は完了です。\n\nGRUB#UEFI システムより:\n\nUEFI システムパーティションは GRUB のインストールスクリプトが検出できるように /boot/efi/ にマウントする必要があります:\n\n```\n# mkdir -p /boot/efi\n# mount -t vfat /dev/sdXY /boot/efi\n```\n\nX はブートするハードディスク、Y は先に作成した efi パーティションに置き換えて下さい。\n\n以下のコマンドで GRUB UEFI アプリケーションとモジュールを /boot/grub/x86_64-efi にインストールしてください:\n\n```\n# modprobe dm-mod\n# grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=arch_grub --recheck --debug\n# mkdir -p /boot/grub/locale\n# cp /usr/share/locale/en\\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo\n```\n\nGRUB の設定を生成してください\n\n```\n# grub-mkconfig -o /boot/grub/grub.cfg\n```\n\n"
    },
    {
      "title": "bless を使う",
      "level": 3,
      "content": "分割したパーティションに GRUB を配置した後 \"blessing\" を行うことで rEFIt を使わずに EFI モードで GRUB から直接起動できます。この手順は Macbook 7,1 で動作することが確認されています。GRUB は FAT32 か HFS+ パーティションでホストしたほうが良いですが、ext2 や ext3 も動作します。GRUB の appleloader コマンドは 7,1 では現在動作しませんが、ここから利用できるパッチでサポートを追加することが可能です。\n\n適切な場所に GRUB をインストールした後、その場所から起動するようにファームウェアを設定する必要があります。既存の OS X 環境か OS X のインストールディスクから設定を行うことができます。次のコマンドは GRUB を既存の OS X パーティションの /efi/grub にインストールしたと仮定しています:\n\n```\n# bless --folder /efi/grub --file /efi/grub/grub.efi\n```\n\n"
    },
    {
      "title": "コンパイル",
      "level": 3,
      "content": "機種によっては EFI_ARCH を i386 に設定する必要があります。\n\n```\nbzr branch --revision -2 bzr://bzr.savannah.gnu.org/grub/trunk/grub grub\ncd grub\n./autogen.sh\npatch -p1 < appleloader_macbook_7_1.patch\nexport EFI_ARCH=x86_64\n./configure --with-platform=efi --target=${EFI_ARCH} --program-prefix=\"\"\nmake\ncd grub-core\n../grub-mkimage -O ${EFI_ARCH}-efi -d . -o grub.efi -p \"\" part_gpt part_msdos ntfs ntfscomp hfsplus fat ext2 normal chain boot configfile linux multiboot\ncp grub.efi *.mod *.lst yourinstalllocation\n```\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "- Arch Linux インストール CD もしくは必要に応じて最新の Archboot iso (非公式) から起動してください。Apple の UEFI で起動できる USB を作るには、UEFI ブータブル USB を作成する手順に従う必要があります。\n\n- MacBook Pro 7,1 で、起動したときに pacpi_set_dmamode でエラーが発生することがあります: \"unable to handle kernel NULL pointer dereference at 0000000000000010\" (インストールメディアのバージョン 2012.12.01 で確認)。この問題を修正するには、次のオプションを使って起動してください: acpi=off。chroot した後、MODULES=\"ata_generic\" を /etc/mkinitcpio.conf に追加して mkinitcpio -p linux を実行します。参照: インストールガイド: システムの設定。\n- 複数の MacBook ユーザーが文字が二重になったり長い遅延などキーボードの出力がおかしくなることを報告しています。この問題を修正するには、次のオプションを使って起動してください: arch noapic irqpoll acpi=force。\n\n- インストールガイドに則ってインストールを進めて下さい。ただし以下の箇所は別です: ハードドライブの準備では、パーティションのフォーマットとファイルシステムのマウントポイントの設定だけを行なって下さい。適切なパーティションを割り当てるように注意してください。#パーティションに従っていればパーティションは既に作成されているはずです。 (EFI で起動する場合) ブートローダーをインストールした後、インストーラーを終了して GRUB をインストールしてください。 (BIOS 互換で起動する場合) ブートローダーをインストールした後、menu.lst ファイルを編集して reboot=pci を kernel 行の最後に追加してください、例: kernel /vmlinuz-linux root=/dev/sda5 ro reboot=pci これで MacBook が Arch から正しく再起動できるようになります。 (BIOS 互換で起動する場合) ブートローダーのインストールでは、/boot があるパーティションに GRUB をインストールしてください。 警告: GRUB を /dev/sda にインストールしないでください。これをしてしまうとインストール後の環境が不安定になります。 システムの設定では、/etc/mkinitcpio.conf を編集して autodetect フックの後のどこかに keyboard フックを追加してください。これで Arch が起動する前にキーボードを使う必要があるときにキーボードのドライバーがロードされます (例: LUKS パスワードを入力したりトラブルシューティングのシェルを使う場合など)。\n\n- ハードドライブの準備では、パーティションのフォーマットとファイルシステムのマウントポイントの設定だけを行なって下さい。適切なパーティションを割り当てるように注意してください。#パーティションに従っていればパーティションは既に作成されているはずです。\n- (EFI で起動する場合) ブートローダーをインストールした後、インストーラーを終了して GRUB をインストールしてください。\n- (BIOS 互換で起動する場合) ブートローダーをインストールした後、menu.lst ファイルを編集して reboot=pci を kernel 行の最後に追加してください、例: kernel /vmlinuz-linux root=/dev/sda5 ro reboot=pci これで MacBook が Arch から正しく再起動できるようになります。\n- (BIOS 互換で起動する場合) ブートローダーのインストールでは、/boot があるパーティションに GRUB をインストールしてください。 警告: GRUB を /dev/sda にインストールしないでください。これをしてしまうとインストール後の環境が不安定になります。\n- システムの設定では、/etc/mkinitcpio.conf を編集して autodetect フックの後のどこかに keyboard フックを追加してください。これで Arch が起動する前にキーボードを使う必要があるときにキーボードのドライバーがロードされます (例: LUKS パスワードを入力したりトラブルシューティングのシェルを使う場合など)。\n\n```\nkernel /vmlinuz-linux root=/dev/sda5 ro reboot=pci\n```\n\n- インストール作業が完了したら、コンピュータを再起動してください。\n\n- オプティカルメディアを使っている場合、MacBook の起動時にエジェクトキーを押して下さい、これで Arch Linux のインストールディスクが排出されるはずです。\n\n- Mac OS X と Arch Linux のデュアルブートをする場合、システムの起動時に alt (option) キーを押すことで Mac ブートローダーを使って起動する OS を選択します。\n\n"
    },
    {
      "title": "Xorg",
      "level": 3,
      "content": "Xorg の記事に従って Xorg をインストール・設定してください。\n\n"
    },
    {
      "title": "ビデオ",
      "level": 4,
      "content": "MacBook はモデルによって異なるグラフィックカードが搭載されています。\n\n搭載されているグラフィックカードを確認するには:\n\n```\n$ lspci | grep VGA\n```\n\n- intel を含む文字列が表示された場合、Intel Graphics を読んでください。\n\n- nVidia が返される場合、NVIDIA を読んで下さい。\n\n- もしくは ATI や AMD の文字が確認できた場合、ATI を読んで下さい。\n\nNVIDIA のグラフィックカードが搭載された MacBook では、バックライトを正しく動作させるために AUR の nvidia-blAUR パッケージが必要になるかもしれません。\n\n- nvidia-bl をインストールしてもバックライトの操作ができない場合、apple_bl カーネルモジュールをブラックリストに入れて下さい。\n- 輝度の制御ができない場合、/etc/modprobe.d/nvidia_bl.conf で options nvidia_bl max_level=0x1ffff shift=11 をアンコメントしてください。\n- もしくは、pommed-lightAUR パッケージを使うことを選ぶこともできます。この場合、希望する明るさのレベルに応じて /etc/pommed.conf.mactel の step 設定を 5000-10000 のあたりに変更すると良いでしょう。最大輝度は 80000 前後です。\n\n"
    },
    {
      "title": "タッチパッド",
      "level": 4,
      "content": "デフォルトでタッチパッドは基本的な機能が使えるはずです。ネイティブの OSX と全く同じように使える真のマルチタッチドライバーは AUR からインストールできます: xf86-input-mtrack-gitAUR。詳細については readme で読むことができます。\n\n以下は Macbook 7,1 で上手く動作する mtrack のオプションです:\n\n```\nOption \"Thumbsize\" \"50\"\nOption \"ScrollDistance\" \"100\"\n```\n\nもしかしたら次を追加する必要があるかもしれません:\n\n```\nMatchDevicePath \"/dev/input/event10\"\n```\n\nタップでクリックを無効化 (つまりクリックするときは押すように) するには、以下を mtrack の設定セクションに追加してください:\n\n```\nOption          \"TapButton1\" \"0\"\nOption          \"TapButton2\" \"0\"\nOption          \"TapButton3\" \"0\"\n```\n\nナチュラルスクロール: Mac OSX のような自然な2本指のスクロールを設定するには、Synaptics タッチパッド#ナチュラルスクロールを参照してください。\n\nxf86-input-mtrack-gitAUR を使用している場合、上スクロールと下スクロールのボタンを入れ替えることができます (同じく左スクロールと右スクロールも):\n\n```\n/etc/X11/xorg.conf.d/10-mtrack.conf\n```\n\n```\n...\nOption \"ScrollUpButton\" \"5\"\nOption \"ScrollDownButton\" \"4\"\nOption \"ScrollLeftButton\" \"7\"\nOption \"ScrollRightButton\" \"6\"\n...\n```\n\n古い Macbook 機種の特記事項 (MacBook 2,1 で確認): 古い Macbook のモデル (マルチタッチ未対応) では、xf86-input-synaptics パッケージをインストールしないとタッチパッドが正しく動作しません。このパッケージのインストールと設定については Synaptics タッチパッドを見て下さい。\n\nMacbook Pro(5,5) のノート: Extra の xf86-input-synaptics を使うのがずっとシンプルです。3本指のスワイプなどの機能がありませんが、このドライバーは高速なレスポンスを提供します。gpointing-device-settingsAUR にはシンプルな GUI 設定が入っています。参考用に、以下は Xorg の設定ファイル /etc/X11/xorg.conf.d/60-synaptics.conf です。\n\n```\nSection \"InputClass\"\n       Identifier \"touchpad catchall\"\n       Driver \"synaptics\"\n       MatchIsTouchpad \"on\"\n       MatchDevicePath \"/dev/input/event*\"\n       Option \"SHMConfig\" \"on\"\n       Option \"TapButton1\" \"1\"\n       Option \"TapButton2\" \"3\"\n       Option \"TapButton3\" \"2\"\n       Option \"PalmDetect\" \"on\"\n       Option \"VertEdgeScroll\" \"off\"\n       Option \"HorizEdgeScroll\" \"off\"\n       Option \"CornerCoasting\" \"off\"\n       Option \"EdgeMotionUseAlways\" \"off\"\n       Option \"AreaLeftEdge\" \"10\"\n       Option \"AreaRightEdge\" \"1270\"\n EndSection\n```\n\nOS X のようなマルチタッチジェスチャーは現在新しい synaptic ドライバーでは壊れています。OS X のマルチタッチジェスチャーを Arch に追加したいユーザーには、xSwipe が細かくカスタマイズ可能で、軽量な Perl スクリプトとしてピッタリでしょう。インストールして設定したら (Github の xSwipe wiki を参照)、xSwipe をスタートアップアイテムとして追加することを推奨します。\n\n"
    },
    {
      "title": "キーボード",
      "level": 4,
      "content": "MacBook のキーボードはデフォルトで動作します。fn キーを Fx キーと交換するには Apple Keyboard を見て下さい。\n\nxbindkeys などの適当なアプリケーションを使うか DE の設定によってマッピングすることができます。しかしながら他の良い方法として AUR から pommed-lightAUR をインストールすることを推奨します。MacBook のハードウェアにあわせて /etc/pommed.conf を編集してください。サンプルファイルの /etc/pommed.conf.mac や /etc/pommed.conf.ppc から作成します。\n\n設定ファイルがなくても動作させることは可能で、デフォルトの設定でおそらく動作します。それから pommed の systemd サービス (pommed.service) を有効化・起動してください。\n\nキーボードのバックライトは /sys/class/leds/smc::kbd_backlight によって制御されています。このディレクトリの brightness に適当な値を書き出して下さい。\n\n2015年3月の時点で、SUIDビットや udev ルールを必要とせず、 rootにならずに/sys/class/leds/smc::kbd_backlightを制御できるツールとしてbrightnessctlがあります。他のツールについてはバックライトを参照してください。\n\npommed でバックライトが正しく動作しない場合、nvidia-blAUR パッケージをインストールしているか確認して以下を\n\n```\nfind . -name \"*\" -exec sed -i 's/mbp_backlight/nvidia_backlight/' '{}' \\;\n```\n\npommed の PKGBUILD の build() 関数の2行目に挿入してパッケージを再作成してください。フォーラムの投稿 より。\n\nもしくは pommed の PKGBUILD の build() を修正する方法もあります:\n\n```\nfind . -name \"*\" -exec sed -i 's/nvidia_backlight/apple_backlight/' '{}' \\;\n```\n\n上の方法で上手く行かない場合は以下を試して下さい。\n\nnvidia-settings を実行して、/etc/X11/xorg.conf ファイルを編集し、以下の行を Device セクションに追加:\n\n```\nOption \"RegistryDwords\" \"EnableBrightnessControl=1\"\n```\n\n保存して再起動し、バックライトボタンが動作するか確かめる。 詳しい情報は ubuntu macbook pro 5,5 にあります。\n\n"
    },
    {
      "title": "Wi-Fi",
      "level": 3,
      "content": "MacBook はモデルによって異なるワイヤレスカードが搭載されています。\n\nあなたの MacBook にどのカードが使われているかは次のコマンドで簡単に確認できます:\n\n```\n# lspci | grep Network\n```\n\n- Atheros のカードが載っている場合、何も設定しなくても全て上手く動くはずです。\n\n- Broadcom のカードが載っている場合、Broadcom BCM4312 のページに従って下さい。\n\n- 5.0 と 6.0 世代の MacBook には BCM43xx が載っていることがあります、Broadcom ワイヤレスページの broadcom-wl ドライバーの手順に従って下さい。再起動するとインターフェイスが入れ替わってしまうことがあるので udev ルールでインターフェイスを定義するのが良いでしょう。\n\n- 8.1 世代の MacBook には BCM4331 が載っており、Linux (3.0 と 3.1) にも Broadcom のプロプライエタリドライバーにもありません。ただし Linux 3.2 では実験的なサポートがあります。3.2 以前のカーネルでこのドライバーを実行するには、compat-drivers を使う必要があります。\n\n- 適切な broadcom の DKMS ドライバー (例: broadcom-wl-dkms) をインストールしても wifi カードが認識されない場合、ドライバーを再ビルドしてみてください (Dynamic Kernel Module Support を参照)。\n\n```\n#!/bin/sh\niwconfig wlp2s0 power off\n```\n\n"
    },
    {
      "title": "電源管理",
      "level": 3,
      "content": "Powerdown はバッテリーの寿命を伸ばすスクリプトのセットで、簡単に設定することができます。powerdown をインストールしただけで MacBook Air 2013 なら約11時間もちます。もちろん電源管理における通常の推奨事項はすべてあてはまります。\n\nカーネルパラメータに acpi_osi= を追加することで MacBook Air 2013 のバッテリーの持ちを5時間から11-12時間まで伸ばすことができたという報告があります。詳しくは こちらのフォーラムの投稿 を見てください。\n\n"
    },
    {
      "title": "サスペンドとハイバネート",
      "level": 4,
      "content": "サスペンド (suspend to ram) とハイバネート (suspend to disk) は何も設定しなくても問題なく動作します:\n\n```\n$ systemctl suspend\n```\n\nフタを閉じてサスペンドしたときなど、特定の状況下でマシンが\"復帰した後にすぐサスペンドする\"という問題が報告されています。この問題は dconf-editor を使って \"sleep-inactive-ac-type\" オプションを \"nothing\" に設定することで解決します (オプションのパスは: org → gnome → settings-daemon → plugins → power)。\n\nハイバネーションの設定方法の詳細はサスペンドとハイバネートを見て下さい。特に、スワップパーティションかファイルのどちらかが必要です。\n\nサスペンドした後、ノートパソコンが数秒で立ち上がってしまう場合、/proc/acpi/wakeup の中にある LID0 以外の全てを無効化すると良いかもしれません:\n\n```\n# echo XHC1 > /proc/acpi/wakeup\n$ cat /proc/acpi/wakeup\nDevice\tS-state\t  Status   Sysfs node\nP0P2\t  S3\t*disabled\nEC\t  S3\t*disabled\nHDEF\t  S3\t*disabled  pci:0000:00:1b.0\nRP01\t  S3\t*disabled  pci:0000:00:1c.0\nRP02\t  S3\t*disabled  pci:0000:00:1c.1\nRP03\t  S3\t*disabled  pci:0000:00:1c.2\nARPT\t  S4\t*disabled  pci:0000:03:00.0\nRP05\t  S3\t*disabled  pci:0000:00:1c.4\nRP06\t  S3\t*disabled  pci:0000:00:1c.5\nSPIT\t  S3\t*disabled\nXHC1\t  S3\t*disabled  pci:0000:00:14.0\nADP1\t  S3\t*disabled\nLID0\t  S3\t*enabled\n```\n\n永続的に無効化するには:\n\n```\n/etc/udev/rules.d/90-xhc_sleep.rules\n```\n\n```\n# disable wake from S3 on XHC1\nSUBSYSTEM==\"pci\", KERNEL==\"0000:00:14.0\", ATTR{power/wakeup}=\"disabled\"\n```\n\n上記の設定が使えない場合、ARPT が無効になっていることを確認して、適切なルールを udev に追加してください:\n\n```\nSUBSYSTEM==\"pci\", KERNEL==\"0000:03:00.0\", ATTR{power/wakeup}=\"disabled\"\n```\n\n"
    },
    {
      "title": "環境光センサー",
      "level": 3,
      "content": "次のパスから値を読み出すことができます:\n\n```\n/sys/devices/platform/applesmc.768/light\n```\n\n上記のパスを \"cat\" すると (4,0) といったふうに値が返ってきます。スクリプトは2番目の値を無視して、1番目の値を環境光の明るさとして使います。\n\n内蔵の環境光センサーを使って画面やキーボードのバックライトの輝度を自動的に調整したい場合、Lighter [3] (シンプルな perl スクリプト、簡単に調整可能) や Lightum [4] (Gnome や KDE が必要ですが Lighter よりも古く機能が揃っています)。\n\n"
    },
    {
      "title": "サウンド",
      "level": 3,
      "content": "- MBP 5.5: カーネル 2.6.32 から何も設定しなくても動くようになりました - フロントスピーカーをアンミュートしてサウンドレベルを保存してください。\n- ALSA を使っている場合、ヘッドフォンジャックを使っている時は内蔵スピーカーが無効にならないことがあります。これを解決するには、alsamixer を使って \"Auto-mute\" を有効にしてください。\n\nまず最初に ALSA の wiki ページを参照してください。それで何かが上手く動かない時は、以下を読んで下さい。\n\n/etc/modprobe.d/50-sound.conf または /etc/modprobe.d/modprobe.conf を編集して次の行を加えて下さい:\n\n```\noptions snd_hda_intel model=intel-mac-auto\n```\n\nこれで MacBook のコーデックが自動的に指定されます。また MacBookPro5,X では、次を使うこともできます (ジャック出力は \"HP\" で制御されます):\n\n```\noptions snd_hda_intel model=mb5\n```\n\nMacBookPro12,1 の場合:\n\n```\noptions snd-hda-intel index=1,0\n```\n\niMac8,1 を使っている場合、代わりに次を使って下さい\n\n```\noptions snd-hda-intel model=mbp3 position_fix=2\n```\n\nハードウェアにあわせて、他のオプションを指定してみることもできます。全ての利用可能な設定はカーネルドキュメントに記載されています。オンラインで閲覧可能です:\n\n- ALSA-Configuration.txt\n- HD-Audio.txt\n- HD-Audio-Models.txt\n\n設定したら、再起動してください。\n\n"
    },
    {
      "title": "Bluetooth",
      "level": 3,
      "content": "Bluetooth の記事を見て必要なソフトウェアをインストール・設定してください。\n\n"
    },
    {
      "title": "Magic Mouse",
      "level": 3,
      "content": "マジックマウスは特に設定をしなくても問題なく動作します。スクロール速度や加速度などの設定を変えたい場合、カーネルドライバー (hid_magicmouse) に以下のようにパラメータを設定する必要があります。GUI は存在しません。使用しているマウスにあわせて modprobe の設定ファイルを作成してください:\n\n```\n/etc/modprobe.d/magicmouse.conf\n```\n\n```\noptions hid_magicmouse scroll-speed=55 scroll-acceleration=1 emulate_3button=0\n```\n\n上記の設定でスクロール速度が速くなり、急激な加速が有効になり、3ボタンマウスのエミュレーションが無効になります。利用可能なパラメータと設定は /sys/module/hid_magicmouse/parameters で確認できます。\n\n再起動せずにコマンドラインから設定を変更したい場合、以下のようにコマンドを実行してください:\n\n```\n# echo 55 | sudo tee /sys/module/hid_magicmouse/parameters/scroll_speed\n```\n\n"
    },
    {
      "title": "iSight",
      "level": 4,
      "content": "Macbook や pre 6,2 MacBook Pro (6,2 は2010年発売) の iSight ウェブカメラには Apple のプロプライエタリなファームウェアが必要ですが、このファームウェアは再配布することができません。そのためファームウェアを MacOS から抽出して Arch にロードさせる必要があります。\n\nAUR から isight-firmware-toolsAUR をインストールしてファームウェアを抽出してください。この AUR パッケージにいは必要な udev ルールや ELF バイナリも含まれており、ファームウェアファイルを /lib/firmware/isight.fw に抽出さえすれば、コンピュータを起動するたびにファイルがロードされるようになっています (つまり /etc/udev/rules.d/isight.rules が /usr/lib/udev/ift-load を使用します)。\n\n手順:\n\nまず OS X をインストールしたディスク上にある特定のファイルからファームウェアを取得しなくてはなりません。ファイルは /System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBVideoSupport.kext/Contents/MacOS/AppleUSBVideoSupport にあります。\n\nマルチブートしている場合 MacOSX ドライブをマウントするには:\n\n```\n# sudo mkdir /media/MacOSX\n# sudo mount -t hfsplus /dev/sda2 /media/MacOSX\n```\n\nそして AUR から isight-firmware-toolsAUR をインストールします。\n\n上述の OSX ディレクトリにある AppleUSBVideoSupport ファイルを探してください。Arch の方にコピーするか (どの OSX 環境でもかまいません、iMac など、システム特有のものではありません)、マルチブートしている場合、OSX ドライブをマウントして件のディレクトリまで移動してください (10.7 (Lion) ではディレクトリは /System/Library/Extensions/IOUSBFamily.kext/Contents/PlugIns/AppleUSBVideoSupport.kext/Contents/MacOS です)。ディレクトリの中まで進めたらドライバーを抽出します:\n\n```\n# ift-extract --apple-driver AppleUSBVideoSupport\n```\n\n抽出が完了したら、ファームウェアが存在するか確認します:\n\n```\n# ls /lib/firmware/isight.fw\n```\n\nファームウェアが見つかったら、Mac を一度シャットダウンして起動しなおします (カメラのハードウェア状態をクリアするため)。再起動してはいけません。\n\nブート時に自動でロードされるようになるはずです。ロードされない場合は uvcvideo モジュールを手動でロードすることができます。\n\n様々なアプリケーションを使ってカメラをテストすることができます:\n\n- MPlayer\n\n```\n# mplayer tv:// -tv driver=v4l2:width=320:height=240:device=/dev/video0 -fps 30\n```\n\n- Cheese\n- Skype\n- Ekiga\n\nスナップショットを撮るシンプルな方法は:\n\n```\n# mplayer tv:// -vf screenshot\n```\n\ns キーを押してスナップショットを撮影してください。ファイルのフォーマットは shot\\d\\d\\d\\d.png で標準出力に表示されます。\n\n"
    },
    {
      "title": "Facetime HD",
      "level": 4,
      "content": "Apple によれば、最近発売された MacBook には全て iSight のかわりに Facetime HD カメラが搭載されています。例えば以下の機種があてはまります:\n\n- iMac (21,5\" mid 2011)\n- iMac (27\" mid 2011)\n- MacBook Air (mid 2011)\n- MacBook Pro (15\" early 2011)\n- MacBook Pro (17\" early 2011)\n- MacBook Pro (13\" early 2011)\n\n使用している MacBook が上記の機種よりも新しい場合、おそらく Facetime HD カメラが装備されているはずです。\n\nカメラを使うには facetimehd-dkmsAUR をインストールした後、システムを再起動するか、modprobe facetimehd を実行します。\n\n"
    },
    {
      "title": "温度センサー",
      "level": 3,
      "content": "温度を見るには lm_sensors をインストール・設定してください。Lm sensors のページを見て下さい。\n\n"
    },
    {
      "title": "カラープロファイル",
      "level": 3,
      "content": "Mac OS のカラープロファイルを使用することができます。\n\nまず、AUR から xcalib をインストールしてください。\n\n次に Mac OS パーティションの /Library/ColorSync/Profiles/Displays/ ある規定のカラープロファイルを ~/colorprofiles/ などにコピーします。\n\nMacBook モデルのプロファイルと一致するカラープロファイルが存在します、適切なプロファイルを選択してください:\n\n- Color LCD-4271800.icc CoreDuo CPU の MacBook Pro\n- Color LCD-4271880.icc Core2Duo の MacBook\n- Color LCD-4271780.icc CoreDuo または Core2Duo の MacBook (Pro ではない)\n\n最後に次を実行してプロファイルを有効にできます:\n\n```\n# xcalib ~/colorprofile.icc\n```\n\n"
    },
    {
      "title": "Apple Remote",
      "level": 3,
      "content": "まず、LIRC の wiki ページを見て IR を操作するソフトウェア lirc を正しくインストール・設定してください。\n\nそして /etc/conf.d/lircd を編集して LIRC が /dev/usb/hiddev0 (または /dev/hiddev0) を使うように設定してください。以下のようになります:\n\n```\n#\n# Parameters for lirc daemon\n#\nLIRC_DEVICE=\"/dev/usb/hiddev0\"\nLIRC_DRIVER=\"macmini\"\nLIRC_EXTRAOPTS=\"\"\nLIRC_CONFIGFILE=\"/etc/lirc/lircd.conf\"\n```\n\nirrecord (lirc をインストールして利用できます) を使ってリモートコントローラの信号にあうように設定ファイルを作成します (または、下の lircd.conf を使うこともできます):\n\n```\n# irrecord -d /dev/usb/hiddev0 -H macmini output_conf_file\n```\n\nlircd を起動して irw で動作するか確認してください。\n\n/etc/lirc/lircd.conf の例:\n\n```\nbegin remote\n\n  name  lircd.conf.macbook\n  bits            8\n  eps            30\n  aeps          100\n\n  one             0     0\n  zero            0     0\n  pre_data_bits   24\n  pre_data       0x87EEFD\n  gap          211994\n  toggle_bit_mask 0x87EEFD01\n\n      begin codes\n          Repeat                   0x01\n          Menu                     0x03\n          Play                     0x05\n          Prev                     0x09\n          Next                     0x06\n          Up                       0x0A\n          Down                     0x0C\n      end codes\n\nend remote\n```\n\n"
    },
    {
      "title": "HFS パーティションの共有",
      "level": 3,
      "content": "まず、hfsprogsAUR パッケージをインストールする必要があります。\n\nパーティションのリストを表示してください:\n\n```\n# fdisk -l /dev/sda\n```\n\n出力例:\n\n```\nDevice  Boot     Start         End      Blocks   Id  Type\n /dev/sda1               1          26      204819   ee  GPT\n /dev/sda2              26       13602   109051903+  af  Unknown\n /dev/sda3   *       13602       14478     7031250   83  Linux\n /dev/sda4           14478       14594      932832+  82  Linux swap / Solaris\n```\n\n\"Unknown\" パーティションが OS X のパーティションで /dev/sda2 にあることがわかります。\n\n/media に \"mac\" フォルダを作成してください:\n\n```\n# mkdir /media/mac\n```\n\n/etc/fstab の最後に次の行を加えて下さい:\n\n```\n/dev/sda2    /media/mac     hfsplus auto,user,rw,exec   0 0\n```\n\nマウントして下さい:\n\n```\n# mount /media/mac\n```\n\n確認してください:\n\n```\n# ls /media/mac\n```\n\n"
    },
    {
      "title": "ジャーナリング",
      "level": 4,
      "content": "HFS+ パーティションは現在 Mac OS X のデフォルトになっていますが、Linux では完全なサポートがなくデフォルトでは読み込み専用でマウントされます。HFS+ パーティションに書き出しを行うには、ジャーナリングを無効にする必要があります。これは Mac OS X のディスクユーティリティを使うことで可能です。詳しくは Apple のサポートページ を参照してください。もしくはコマンドラインから実行してください:\n\nパーティションを確認:\n\n```\n$ diskutil list\n```\n\n```\n/dev/disk0\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *750.2 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:                  Apple_HFS OSX                     149.5 GB   disk0s2\n   3:                  Apple_HFS Macintosh HD            599.2 GB   disk0s3\n   4:                 Apple_Boot Recovery HD             650.0 MB   disk0s4\n```\n\nこの例では Macintosh HD という名前の disk0s3 パーティションを使います。ジャーナリングが有効になっているかどうか確認するために次を実行:\n\n```\n$ diskutil info /dev/disk0s3 | grep -i journal\n```\n\n```\nFile System Personality:  Journaled HFS+\nName (User Visible):      Mac OS Extended (Journaled)\nJournal:                  Journal size 49152 KB at offset 0x1176000\n```\n\nジャーナリングを無効化するには次を実行:\n\n```\n$ sudo diskutil disableJournal disk0s3\nPassword:\nJournaling has been disabled for volume Macintosh HD on disk0s3\n```\n\nジャーナリングが無効になったことを確認するため info コマンドを再度実行:\n\n```\n$　diskutil info /dev/disk0s3 | grep -i journal\n```\n\n何も出力されなければ、ジャーナリングは無効になっています。\n\nジャーナリングが無効にならない場合、/etc/fstab の auto,user,rw,exec を auto,user,force,rw,exec に変更してマウントしてみてください。\n\n"
    },
    {
      "title": "Yosemite 以降",
      "level": 4,
      "content": "Yosemite から HFS+ パーティションは CoreStorage ボリュームの中に入っています。CoreStorage ボリュームを確認してください:\n\n```\n# fdisk -l /dev/sdX\n Disk /dev/sdX: 298.1 GiB, 320072933376 bytes, 625142448 sectors\n Units: sectors of 1* 512 = 512 bytes\n Sector size (logical/physical): 512 bytes / 4096 bytes\n I/O size (minimum/optimal): 4096 bytes / 4096 bytes\n Disklabel type: gpt\n Device      Start      End         Sectors    Size     Type\n /dev/sdX1   40         409639      409600     200M     EFI System\n /dev/sdX2   409640     623872871   623463232  297.3G   Apple Core storage\n /dev/sdX3   623872872  625142407   1269536    916.0M   Apple boot\n```\n\nHFS+ は2つのボリュームヘッダを使用しています。デバイス内の1024バイトのヘッドとデバイスの終末にある1024バイトのヘッダです。CoreStorage ボリュームに含まれている HFS+ パーティションでは、パーティションの末尾が /dev/sdX2 パーティションの末尾の1024バイトと異なっています。修正するにはマウントするときに sizelimit=X を指定する必要があります。\n\nsizelimit に指定する値を確認するには:\n\n1. testdisk /dev/sdX を実行してドライブを選択。\n1. EFI GPT を選択。\n1. Analyse を選択して Quick Search を実行。\n\n出力例:\n\n```\nTestDisk 7.0, Data Recovery Utility, April 2015\nChristophe GRENIER <grenier@cgsecurity.org>\nhttp://www.cgsecurity.org\n \nDisk /dev/sdX  - 320 GB / 298 GiB - CHS 38913 255 63\n    Partition     Start      End        Size in sectors\nP  EFI System     40         409639     409600  [EFI]\nP  Mac HFS        409640     623147815  622738176\nP  Mac HFS        623872872  625142407  1269536\n```\n\nCoreStorage ボリュームを含まない HFS パーティション自体の出力が確認できます。セクタサイズ (上記の例では 622738176) を論理セクタサイズのバイト数 (例えば 512) でかけてください: 622738176 * 512 = 318841946112。\n\n計算した値で sizelimit=X オプションを使ってディスクをマウント:\n\n```\n# mount /dev/sdX -t hfsplus -o ro,sizelimit=318841946112\n```\n\n"
    },
    {
      "title": "ホームシェアリング",
      "level": 3,
      "content": "UID の同期\n\n"
    },
    {
      "title": "OS X",
      "level": 4,
      "content": "Leopard 以前\n\n1. /Applications/Utilities フォルダの NetInfo Manager を開く。\n1. ウィンドウ下部にある鍵をクリックして、ユーザーアカウントのパスワードあるいは (root アカウントを作成した場合) root パスワードを入力して、ユーザーアカウントのトランザクションへのアクセスを有効にしてください。\n1. /users/<new user name> を開いてください (<new user name> は Arch と共有するフォルダの読み書き権限を持っているアカウントの名前に置き換えてください)。\n1. UID の値を 1000 に変更 (Arch で作成した最初のユーザーで使われるデフォルト値)。\n1. GID の値も 1000 に変更 (Arch で作成した最初のユーザーで使われるデフォルト値)。\n1. /groups/<new user name> を開いてください。変更が自動的に保存されます。\n\nLeopard\n\nLeopard には、NetInfo Manager アプリケーションが存在しません。UID の同期に必要な手順は異なります:\n\n1. System Preferences を開く。\n1. Users & Groups をクリック。\n1. ペインのロックを解除してください。\n1. ユーザーを右クリックして Advanced Options を選択。\n1. User ID フィールドの値をメモしてください。後で必要になります。UID と GID の値を両方変更して Arch の共有したいアカウントの UID と GID にしてください (Arch では最初に作成されたユーザーの UID と GID は 1000 になります)。\n\n1. /Applications/Utilities フォルダの Terminal を開く。\n\n1. 以下のコマンドを入力してホームフォルダのパーミッション設定を戻してください。<your user name>, <your user group>, <your old UID> は UID の値を変更したユーザーの名前、GID を変更したグループの名前、変更する前の UID 番号にそれぞれ置き換えてください。\n\n```\n# find /User/<your user name> -user <your old UID> -exec chown <your user name>:<your user group> {} \\;\n```\n\n"
    },
    {
      "title": "Arch",
      "level": 4,
      "content": "Arch Linux で UID を同期する際は、新しいユーザーアカウントを作成するときに行うのが推奨されます。そのため Arch Linux をインストールしてすぐに同期するのを推奨します。\n\n/etc/fstab のエントリを編集して Arch のホームを Mac OS のホームで置き換えます。\n\n"
    },
    {
      "title": "起動前の EFI の待機を止める",
      "level": 3,
      "content": "起動する前に\"白画面\"で Macbook が30秒も待機してしまう場合、ファームウェアに起動するパーティションを伝える必要があります。\n\nMac OS X を起動してください。インストールしていない場合は、インストール DVD を使うか (言語を選択して、Utilities->Terminal をクリック)、または他の MacBook の Mac OS X を使います (2つのコンピュータを firewire か thunderbolt で接続して、T を押しながら別の MacBook を起動し、Options を押しながら自分の MacBook を起動する)。\n\nMacBook に Mac OS X ターミナルを呼び出したら、ブートパーティションが EFI かどうかに応じて、それぞれ異なるコマンドを root で実行してください:\n\n```\n# bless --device /dev/disk0s1 --setBoot            # if the booting partition is EFI\n```\n\nもしくは\n\n```\n# bless --device /dev/disk0s1 --setBoot --legacy   # if the booting partition is not EFI\n```\n\n(GRUB や EFI が sda1 にある場合。sdb2 にあるときは /dev/disk1s2 などにしてください)。https://bbs.archlinux.org/viewtopic.php?pid=833215 と https://support.apple.com/kb/HT1533 も参照。\n\n"
    },
    {
      "title": "起動音を消す",
      "level": 3,
      "content": "起動音のチャイムのボリュームは EFI 変数の SystemAudioVolume-7c436110-ab2a-4bbb-a880-fe41995c9f82 によって制御されています。ミュートにするには:\n\n```\n# printf \"\\x07\\x00\\x00\\x00\\x00\" > /sys/firmware/efi/efivars/SystemAudioVolume-7c436110-ab2a-4bbb-a880-fe41995c9f82\n```\n\nもしくは、Mac OS X インストールディスクを使ってミュートすることもできます。インストールディスクで起動して、言語を選択し、Utilities > Terminal をクリックして、次を入力 (ボリュームの値は自由に設定してください):\n\n```\n# /usr/sbin/nvram SystemAudioVolume=%01\n```\n\n"
    },
    {
      "title": "kworker が CPU を占有してしまう",
      "level": 3,
      "content": "まずはMac#ファームウェアのアップデートをして下さい。 Yosemite を使っている場合、kworker の CPU 使用量が跳ね上がることがあります [5]。これは ACPI の割り込みが暴走しているのが原因です。\n\n最近の ACPI の割り込みの数を調べることで問題が起こっているかどうか確認できます:\n\n```\n$ grep . -r /sys/firmware/acpi/interrupts/\n```\n\n特定の割り込み (GPE66 の場合が多いです) がおかしくなっているようだったら、それを無効化します (XX は暴走している割り込みに置き換えて下さい):\n\n```\n# echo \"disable\" > /sys/firmware/acpi/interrupts/gpeXX\n```\n\n間違った ACPI 割り込みを無効化してしまうと他の問題が噴出するので、自己責任で行って下さい。上記のコマンドで問題が解決する場合、起動時に自動的に割り込みを無効化する systemd サービスを作成する方法が書かれた こちらのスレッド を見て下さい。\n\n"
    },
    {
      "title": "rEFIt",
      "level": 2,
      "content": "- rEFIt の一種の後継である、rEFInd についても知っておくと良いでしょう。\n- rEFIt は必須ではありません。起動毎に OS X と Arch Linux を選択するメニューを表示するだけです。\n\n詳細は refit myths を見て下さい。\n\nOS X で、Refit のホームページ から \".dmg\" をダウンロードしてインストールします。\n\nTerminal を開いて以下を入力してください:\n\n```\ncd /efi/refit;\n./enable.sh\n```\n\n"
    },
    {
      "title": "rEFIt の問題",
      "level": 3,
      "content": "Arch や rEFIt をインストールした後に問題が発生する場合、特に起動する OS が正しく表示されなかったり GRUB のプロンプトでスタックして以下のように表示する場合:\n\n```\nGRUB>_\n```\n\n次のリンクを見て下さい: http://mac.linux.be/content/problems-refit-and-grub-after-installation\n\nArch のライブ CD を起動して chroot して gptsync を使って GRUB を再インストールする方法が載っています。Debian 環境におけるコマンドを自分の Arch 環境にあわせて修正できる上級者向けです。GRUB を間違ったところにインストールしないように注意してください。\n\ngptsync のコピーが必要な場合、次の URL から wget できます: http://packages.debian.org/sid/gptsync 。64ビットの場合:\n\n```\n$ wget http://ftp.us.debian.org/debian/pool/main/r/refit/gptsync_0.14-2_amd64.deb\n```\n\ni386 の場合:\n\n```\n$ wget http://ftp.us.debian.org/debian/pool/main/r/refit/gptsync_0.14-2_i386.deb\n```\n\n.deb パッケージなので deb2targzAUR プログラムが必要です。\n\n"
    },
    {
      "title": "Mavericks のアップグレードが Arch のブートオプションを破壊する",
      "level": 4,
      "content": "Linux のブートパーティションを別にしてマルチブートしている場合、OSX Mavericks のアップグレードによって Apple のリカバリブートパーティションでブートパーティションが上書きされていますことがあります。こうなると rEFIt/rEFInd の Archlinux 起動オプションが破壊されます。この状況を解決するにはブートパーティションを別にするのをやめて EFI system partition (ESP) を使ってブートローダーをインストールするのがベストです。また、開発が停止している rEFIt ではなく rEFInd を使うことが推奨されます。\n\nブートローダーが grub2 の場合:\n\nArch LiveCD を使ってシェルを起動し、破壊された Archlinux 環境に chroot します。\n\nESP を /boot にマウントします。\n\nfstab を編集して古いブートパーティションを削除して ESP を新しいブートパーティションにします。そして ESP を新しい /boot パーティションにマウントします:\n\n```\n# mount -a\n```\n\nlinux を再インストール:\n\n```\n# pacman -S linux\n```\n\n/boot に新しい initramfs と vmlinuz を作成:\n\n```\n# mkinitcpio -p linux\n```\n\ngrub をインストール:\n\n```\n# grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub --recheck --debug\n```\n\n新しい grub.cfg ファイルを作成:\n\n```\n# grub-mkconfig -o /boot/EFI/grub/grub.cfg\n```\n\ngrub.cfg は grubx64.efi と同じディレクトリにある必要があります。\n\nrEFInd に付いている mkrlconf.sh を実行して新しい refind_linux.conf ファイルを /boot に生成します。\n\nchroot 環境を終了します。\n\n再起動してください。rEFInd に Archlinux の新しいエントリが追加され、Archlinux を起動することができるはずです。\n\n"
    },
    {
      "title": "April 2016 12\" - バージョン 9,1",
      "level": 4,
      "content": "- intremap=nosid カーネルオプションを指定することで EFI から USB ブートできます (Ubuntu の場合、noacpi nomodeset も必要なようです)。起動時に Alt キーを押すのを忘れないでください。\n\n- ワイヤレスカードは brcmfmac で特に設定しなくても動作します。\n\n- サスペンドやハイバネートは動作しません。NVMe が復帰しないことが問題です。外付けドライブから起動する場合、サスペンドとハイバネートは問題なく動作します。\n\n- 録音は問題なく動作します。再生自体も動作はしますが、内蔵スピーカーは機能しません (解決方法もまだありません)。\n\n- キーボードやタッチパッドは動作しません。DSDT をハックする開発中のドライバーなら動作します: macbook12-spi-driver-dkmsAUR。ときどきタッチパッドが動作しなくなることがありますが、rmmod applespi && modprobe applespi でドライバーをリロードすることで解決します。\n\n- キーボードバックライトは動作しません (解決方法もまだありません)。\n\n"
    },
    {
      "title": "Mid 2007 13\" - バージョン 2,1",
      "level": 4,
      "content": "古い Macbook は32ビットの EFI を使っているため、通常のインストールイメージは認識されません。ディスクから UEFI サポートを削除するか (Unified_Extensible_Firmware_Interface#オプティカルメディアから UEFI ブートサポートを削除する) またはディスクの32ビット EFI バージョンを作成する必要があります。以下では最初の方法を使って、BIOS モードで起動します。もうひとつの方法を試したい場合は、まず Unified_Extensible_Firmware_Interface#ISO から UEFI ブータブル USB を作成する を読んで下さい。\n\nまず必要に応じてハードディスクを準備します。ここでは \"Linux のみインストール\" を行います:\n\n```\n/dev/sda1 HFS+ AF00 200M -> EFI boot system on Apple HFS+ partition\n/dev/sda2 ext4 8300 147G -> arch system\n/dev/sda3 swap 8200 1G   -> swap\n```\n\nhfsprogsAUR パッケージには HFS/HFS+ ファイルシステムを扱うためのツールが含まれています。rEFInd ブートローダーは自動的に hfsprogs を認識します。EFI ブートローダーのパーティションは通常 FAT32 (vfat) パーティションです。rEFIt を最初に試す場合、HFS+ ファイルシステムを動作させる必要があるので、そのままにしておきます。\n\nマウントポイントは:\n\n```\n/dev/sda2 -> /\n/dev/sda1 -> /boot\n```\n\n使用しているブートローダーは rEFIt ではなく rEFInd です。インストール方法は rEFInd のホームページにあります。通常は rEFInd をコピーすることでインストールできます:\n\n```\nmkdir /boot/EFI\ncp -vr /usr/share/refind/drivers_ia32 /boot/EFI/refind/\ncp -vr /usr/share/refind/tools_ia32 /boot/EFI/refind/\ncp -vr /usr/share/refind/fonts /boot/EFI/refind/\ncp -vr /usr/share/refind/icons /boot/EFI/refind/\ncp -v /usr/share/refind/refind_ia32.efi /boot/EFI/refind/\ncp -v /usr/share/refind/refind.conf-sample /boot/EFI/refind/refind.conf\ncp -v /usr/share/refind/refind_linux.conf-sample /boot/refind_linux.conf\n```\n\n問題はシステムが EFI モードではなく BIOS 互換でモードで起動するということです。('modprobe efivars' を実行しても) EFI 変数が使えないため、efibootmgr を使用することができません。システムのインストール時に mactel-bootAUR をインストールしてください。hfs-bless ユーティリティを使うことで EFI ブートローダーを立ち上げることができます。以下のように呼び出します:\n\n```\nhfs-bless /boot/EFI/refind/refind_ia32.efi\n```\n\nSince the Linux kernel does come with EFI stub enabled, it seems a good idea to run it through a bootloader first. Especially if it runs not out of the box. But using rEFInd makes GRUB (or any other bootloader) obsolete, because of that.\n\nNot running out of the box is unfortunately the initial stage for the kernel. Since we installed it in BIOS mode, two modules are missing to grant access to the root partition while booting. Hence the 'initfsram-linux.img' can not be found/loaded. Adding the following modules to your 'MODULES' line in /etc/mkinitcpio.conf solved this (original post).\n\n```\n/etc/mkinitcpio.conf\n```\n\n```\nMODULES=\"ahci sd_mod\"\n```\n\nカーネルイメージを再生成:\n\n```\n# mkinitcpio -p linux\n```\n\nThe bootloader rEFInd can scan kernels even out of the '/boot/efi/...' directory and assumes an efi kernel even without the extension '.efi'. If you do not want to try out special kernels, this should work without the hassle to copy each kernel after building to some spot special.\n\nIf you happen to get multiple entries for one boot image, it often results of a previous installation of a bootloader within the MBR. To remove that, try the following - taken from the original post. This is valid for GPT partitioned discs, so please check your environment and save your MBR first.\n\n```\n# dd if=/dev/zero of=/dev/sda bs=440 count=1\n```\n\n"
    },
    {
      "title": "Early 2015 13\"/15\" - バージョン 12,x/11,4+",
      "level": 4,
      "content": "brcmfmac ドライバーが動作します (2015年11月20日現在)。5Ghz 帯を使うには新しいファームウェアが必要です ([6] を参照)。\n\nBluetooth はカーネル 4.4.0 から完全にサポートされています。\n\n11,4 や 11,5 の MacBook Pro はデフォルトのカーネルだと正しくシャットダウンしたりサスペンドすることができません。この問題の詳細は Bug 103211 にあり、一時的なパッチは linux-macbookAUR でインストールできます。Linux 4.13.0 からメインラインにパッチがマージされています。\n\nハプティックフィードバックはトラックパッドにファームウェアが組み込まれているため何も設定しなくても動作します。\n\nマルチタッチのサポートについては複数のドライバーが利用できます。以下は MacBookPro12,1 で動作することを確認済みです。\n\nxf86-input-libinput を使う場合、以下の設定で OS X の機能をエミュレートできます。詳しくは libinput(4) を見てください。\n\n```\n/etc/X11/xorg.conf.d/90-libinput.conf\n```\n\n```\nSection \"InputClass\"\n    Identifier \"libinput touchpad catchall\"\n    MatchIsTouchpad \"on\"\n    MatchDevicePath \"/dev/input/event*\"\n    Driver \"libinput\"\n    Option \"NaturalScrolling\" \"true\"\nEndSection\n```\n\nxf86-input-synaptics を使う場合、タッチパッドを完全に動作させるには以下の設定が必要です。\n\n```\n/etc/X11/xorg.conf.d/60-magictrackpad.conf\n```\n\n```\nSection \"InputClass\"\n    Identifier \"Trackpad\"\n    Driver \"synaptics\"\n    MatchIsTouchpad \"on\"\n    MatchDevicePath \"/dev/input/event*\"\nEndSection\n```\n\nさらに、US/ANSI キーボードの場合、チルダキー (Esc と Tab の間にある ~ のキー) が < や > として登録されてしまうという問題があります。以下の設定ファイルで問題は解決します。\n\n```\n/etc/modprobe.d/hid_apple.conf\n```\n\n```\noptions hid_apple iso_layout=0\n```\n\n昔のカーネル用のパッチなど、詳しくは カーネルの bugzilla を見て下さい。\n\nIntel のグラフィックカードを使う場合、Intel Graphics を見て下さい。\n\nデュアルグラフィックについては 11,3 のグラフィックセクションを見て下さい。\n\n- カーネル 4.2 から acpi_backlight, i915.lvds_downclock, i915.enable_ips, intel_iommu カーネルパラメータは必要なくなっています。\n- Xorg でちらつきが発生したりランダムにフリーズする場合、xf86-video-intel を完全に (設定ファイルも) 削除してみてください。Xorg はデフォルトの modesetting DDX ドライバーを使うようになります。詳しくは Intel Graphics を参照。\n- それでもちらつきが消えない場合、カーネルパラメータで i915.enable_rc6 を 0 に設定して Intel Graphics の省電力機能を無効化することで解決する場合があります。\n\nMacBookPro12,1 (# dmidecode -s system-product-name の出力で確認できます) にはバグが存在 (カーネル 4.0.4) し起動時にはドングルが認識され動作するのに、ホットプラグすることができずに、切断してから再接続したときに認識・動作しません。次のカーネルバグレポートを参照: https://bugzilla.kernel.org/show_bug.cgi?id=100191\n\n"
    },
    {
      "title": "2012 - 2014 モデル",
      "level": 4,
      "content": "- MacBookPro11,x (Late 2013—Mid 2014)\n- MacBookPro10,x (Mid 2012—Early 2013)\n\n"
    },
    {
      "title": "Early 2014 11\" - バージョン 6,1",
      "level": 4,
      "content": "2013年バージョンとほとんど同じで、唯一と言っていい違いはプロセッサーが少し速くなったことだけです。バージョン番号は2013年版から変わっていません。\n\nこのページやフォーラムスレッドの MBA 2013 13\" の記述に従うことで間違いなく動作します。 Bluetooth は2013年版では動作しないと報告されてたのに対して、ほとんど同じはずなのに2014版では問題なく動作します。\n\n未解決の問題:\n\n- ウェブカメラのドライバーがまだ存在しない。\n- rEFInd が起動を始めるのに30秒もかかる。bless を使うと rEFInd のロードを止められますが、再インストールが必要です。\n\n"
    },
    {
      "title": "Mid 2013 13\" - バージョン 6,2",
      "level": 4,
      "content": "Dedicated forum thread\n\nBooting from a normal 2013.6 USB key works fine, but I could not seem to get either GRUB or Syslinux working.\n\nI was able to boot by first installing Arch Linux following the Macbook guide at the wiki (having a separate FAT32 /boot partition). Skip the bootloader installation.\n\nInstalling rEFInd from OS X (important!) and installing the EFI stub loader made me able to boot fine.\n\nDedicated thread.\n\n以下の方法では refind を使わず GRUB を使って EFI を起動します。パーティションは以下の通りです:\n\n```\n/dev/sda1 200M Microsoft basic data\n/dev/sda2 256M Linux filesystem\n/dev/sda3 4G Linux swap\n/dev/sda4 108.6G Linux filesystem\n```\n\nEFI では sda1 も HFS+ パーティションにできます。上記の例では FAT32 (vfat) を使っています。スワップは任意ですが、ハイバネートを使う場合は必須です。sda5 をホームパーティションとして追加することもできます。\n\nフォーマットしてマウント:\n\n```\n# mkfs.vfat -F 32 /dev/sda1\n# mkfs.ext2 /dev/sda2\n# mkswap /dev/sda3\n# swapon /dev/sda3\n# mkfs.ext4 /dev/sda4\n```\n\n```\n# mount /dev/sda4 /mnt\n# mkdir /mnt/boot\n# mount/dev/sda2 /mnt/boot\n# mkdir /mnt/boot/efi\n# mount /dev/sda1 /mnt/boot/efi\n```\n\nインストールガイドに従ってインストールを行ってください。initramfs を生成して root のパスワードを設定したら以下のように GRUB をセットアップします:\n\n```\n# pacman -S grub efibootmgr\n# mount -t efivarfs efivarfs /sys/firmware/efi/efivars\n# grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub --recheck --debug\n# grub-mkconfig -o /boot/efi/EFI/grub/grub.cfg\n# cp /boot/efi/EFI/grub/grub.cfg /boot/grub/grub.cfg\n# cp /boot/efi/EFI/grub/grubx64.efi /boot/efi/EFI/boot/bootx64.efi}}\n```\n\nその後 exit/unmount/reboot してください:\n\n```\n# exit\n# umount -R /mnt\n# reboot\n```\n\nシステムがしばらくフリーズして、ネットやディスクなどのアクセスが止まってしまうことがあります。ディスクや CPU に負担をかけているときに発生します。また、X が起動できずに画面に以下のようなメッセージが何度も表示されることがあります:\n\n```\nata1.00: failed command: WRITE FPDMA QUEUED\nata1.00: cmd 61/08:f0:10:8c:c2/00:00:0b:00:00/40 tag 30 ncq 4096 out\nres 40/00:00:00:00:00/00:00:00:00:00/00 Emask 0x4 (timeout)\nata1.00: status: { DRDY }\n```\n\nSMART のテストを実行しても問題は検出されません: smartctl -a。\n\nThere are some messages in my boot that indicate this could be disk and/or ACPI related.\n\nThese are with 2013-06 ISO, 3.9.7-1 2013 x86_64 kernel.\n\njournalctl -b Seems to only work with the headphone jack, not with the speakers.\n\ndmesg\n\nMarvell 128・256 GB ドライブが載っている 2013 Macbook Air を使っている場合、pm-suspend を使った後で以下の ata エラーが表示されることがあります:\n\n```\nata1: exception Emask 0x10 SAct 0x0 SErr 0x10000 action 0xe frozen\nata1: irq_stat 0x00400000, PHY RDY changed\nata1: SError: { PHYRdyChg }\nata1: hard resetting link\nata1: SATA link up 1.5 Gbps (SStatus 113 SControl 310)\nata1.00: unexpected _GTF length (8)\nata1.00: unexpected _GTF length (8)\nata1.00: configured for UDMA/33\nata1: EH complete\n```\n\n[7] に書かれている Patrick と Tejun のコメントを見てください。\n\nサスペンドから復帰した後に輝度が 0% か 100% のどちらかになります。カーネルが修正されるまでは、mba6x_bl-dkmsAUR をインストールして patjak の fix を使って下さい。Patjak の github は [8] にあります。\n\nWiFi は設定をしなくても動作します。broadcom-wl-dkms をインストールしてネットワークに接続します。\n\nカーネル 3.10.3 からタッチパッドは xf86-input-synaptics で完全に動作します。\n\nLinux 3.12 からサウンドは設定をしなくても動作します。alsa-utils だけでは音が鳴らない場合は、以下のエントリで /etc/asound.conf を作成する必要があるかもしれません:\n\n```\ndefaults.pcm.card 1\ndefaults.pcm.device 0\ndefaults.ctl.card 1\n```\n\n"
    },
    {
      "title": "Mid 2012 13\" — バージョン 5,2",
      "level": 4,
      "content": "arch カーネル 3.5 のデフォルトのブートメディアではカーネルパニックが起きます。intremap=off を追加することで直ります。さらに、applesmc モジュールのロードに問題があります (温度センサー、ファン、キーボードのバックライトが動作しません)。これらの問題は linux 3.6-rc4 メインラインカーネルで修正されています (テスト済み)。\n\n"
    },
    {
      "title": "Mid 2012 11.5\" — バージョン 5,1",
      "level": 4,
      "content": "スリープ状態から復帰したときに X11 に問題が発生する場合 (黒画面になる、コンソールでマウスカーソルが動かないなど)、xf86-input-synaptics を削除して xf86-input-mtrack-gitAUR をインストールしてください。このパッケージは以下のようなエラーを修正します:\n\n```\n(EE) [dix] bcm5974: unable to find touch point 0\n```\n\n同じトラックパッドを使っているバージョン 5,2 にも上記は適用できます。\n\n"
    },
    {
      "title": "Mid 2011 — バージョン 4,x",
      "level": 4,
      "content": "カーネル 3.2 から何も設定しなくても動作します。Archboot を使用して、GRUB をインストールし EFI を使うことが推奨されています。\n\n"
    },
    {
      "title": "Early 2008 — バージョン 1,1",
      "level": 4,
      "content": "ワイヤレスアダプターを動作させるために b43-fwcutter (もしくは b43-firmwareAUR) パッケージが必要なことを除けば、全て問題なく動作します。\n\nこのモデルには USB ポートが一つしかないので、Arch をインストールするにはセルフパワーの USB ハブを使うのが楽です。USB ネットワークアダプタ (USB ポートに接続できる無線または ethernet アダプタ) と Arch のインストールメディアを USB ハブに接続します。\n\n起動後に無線ネットワークをスキャンしても何も結果が得られない場合、一度 b43 と ssb モジュールをアンロードしてから再度ロードし直して下さい:\n\n```\n# rmmod ssb\n# rmmod b43\n# modprobe b43\n```\n\ndmesg のログから DMA の問題を確認できるかもしれません。\n\nモジュールを再ロードしたら無線ネットワークがスキャンできるようになっても、一部のネットワークにしか接続できないことがあります。b43 モジュールに pio=1,qos=0 オプションを追加することで問題は解決します。詳しくは http://crunchbang.org/forums/viewtopic.php?id=17368 を参照。\n\nBCM4321 チップセットが搭載された13インチの MacBook Air 1,1 で動作することを確認しています。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- MacBook Air Macbook Air Early 2014 — dabase.com Installing Archlinux on Macbook Air 2013 — Frank Shin Arch Linux Installation with OS X on Macbook Air (Dual Boot) — Pankaj Kumar Arch Linux – MacBook Air 2013 — Ryan Gehrig Installing Linux on a Macbook Air (4,2) — Nico Schottelius Arch linux single, pure efi boot on the macbook air3,1/3,2 — DIMENSION9\n- MacBook Pro http://www.netsoc.tcd.ie/~theorie/interblag/2010/01/30/installing-arch-linux-on-a-mac-pro/ http://allanmcrae.com/2010/04/installing-arch-on-a-macbook-pro-5-5/ http://allanmcrae.com/2012/04/installing-arch-on-a-macbook-pro-8-1/ http://linux-junky.blogspot.com/2011/08/triple-boot-archlinux-windows-7-and-mac.html\n\n- Macbook Air Early 2014 — dabase.com\n- Installing Archlinux on Macbook Air 2013 — Frank Shin\n- Arch Linux Installation with OS X on Macbook Air (Dual Boot) — Pankaj Kumar\n- Arch Linux – MacBook Air 2013 — Ryan Gehrig\n- Installing Linux on a Macbook Air (4,2) — Nico Schottelius\n- Arch linux single, pure efi boot on the macbook air3,1/3,2 — DIMENSION9\n\n- http://www.netsoc.tcd.ie/~theorie/interblag/2010/01/30/installing-arch-linux-on-a-mac-pro/\n- http://allanmcrae.com/2010/04/installing-arch-on-a-macbook-pro-5-5/\n- http://allanmcrae.com/2012/04/installing-arch-on-a-macbook-pro-8-1/\n- http://linux-junky.blogspot.com/2011/08/triple-boot-archlinux-windows-7-and-mac.html\n\n"
    }
  ]
}
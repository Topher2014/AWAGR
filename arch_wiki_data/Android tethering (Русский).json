{
  "title": "Android tethering (Русский)",
  "url": "https://wiki.archlinux.org/title/Android_tethering_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Тетеринг - это раздача интернета на компьютер со смартфона с помощью его сетевого подключения. USB-модем и точка доступа Wi-Fi точки доступа поддерживаются изначально с Android Froyo (2.2). В более старых версиях ОС Android большинство неофициальных ПЗУ имеют эту функцию.\n\n"
    },
    {
      "title": "Точка доступа Wi-Fi",
      "level": 2,
      "content": "Использование телефона Android в качестве точки доступа Wi-Fi (с использованием мобильного интернета 3G/4G) стало доступно с версии Froyo (Android 2.2) без необходимости иметь root права на телефоне.\n\nВключается одним из следующих способов:\n\n- Настройки > Сеть и Интернет > Точка доступа и модем > Точка доступа Wi-Fi\n- Настройки > Ещё... > Режим модема > Точка доступа Wi-Fi\n\n"
    },
    {
      "title": "USB модем",
      "level": 2,
      "content": "USB-тетеринг доступен с Android 2.2 \"Froyo\".\n\n- Подключите телефон к компьютеру с помощью USB кабеля (режим подключения USB -- Медиа устройство, Монтирование SD карты или Только зарядка -- это не важно, но обратите внимание, что вы не сможете поменять режим подключения USB во время тетеринга)\n- Включите режим USB-модем на телефоне. Обычно эта настройка находится одним из следующих способов: Настройки -> Сеть и Интернет -> Точка доступа и модем Настройки -> Ещё... -> Режим модема -> USB-модем\n- После этого проведите стандартную настройку сети.\n\n- Настройки -> Сеть и Интернет -> Точка доступа и модем\n- Настройки -> Ещё... -> Режим модема -> USB-модем\n\n- Если вы используете мобильный интернет и недавно начался новый расчетный период, вам может потребоваться перезагрузить телефон.\n\n"
    },
    {
      "title": "Использование systemd-networkd с udev",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nИспользуя systemd-networkd, вы можете автоматически перенастроить сеть на использование телефона в качестве шлюза при его подключении.\n\n```\n/etc/udev/rules.d/90-android-tethering.rules\n```\n\n```\n# Execute pairing program when appropriate\nACTION==\"add|remove\", SUBSYSTEM==\"net\", ATTR{idVendor}==\"18d1\" ENV{ID_USB_DRIVER}==\"rndis_host\", SYMLINK+=\"android\", RUN+=\"/usr/bin/systemctl restart systemd-networkd.service\"\n```\n\nВам может понадобиться изменить атрибут idVendor под ваш телефон. Можно проверить с помощью udevadm:\n\n```\n$ udevadm info /sys/class/net/enp0s26u1u2\n```\n\nЗатем создайте соответствующий файл systemd-networkd:\n\n```\n/etc/systemd/network/50-enp0s26u1u2.network\n```\n\n```\n[Match]\nName=enp0s26u1u2\n\n[Network]\nDHCP=ipv4\n```\n\n"
    },
    {
      "title": "USB-модем с AziLink",
      "level": 2,
      "content": "AziLink — это приложение, которое позволяет сделать USB-тетеринг на Android-устройствах без прав root. Это очень полезно для версий Android старее чем 2.2, когда ещё не было встроенной функции USB-тетеринга. Он не требует изменений в вашем браузере. На самом деле, весь сетевой трафик прозрачно обрабатывается для любого приложения ПК (кроме пингов ICMP). Он несколько интенсивно потребляет процессор при высоких нагрузках (скорость передачи данных 500 кбайт/с может занимать более 50% телефонного процессора).\n\n"
    },
    {
      "title": "Необходимые инструменты",
      "level": 3,
      "content": "На Arch установите пакет openvpn. Также необходимо установить android-tools для команды adb и android-udev для установки корректного /usr/lib/udev/rules.d/51-android.rules, чтобы ваш телефон был распознан. На телефоне вам нужно приложение azilink.apk (домашняя страница azilink), которое представляет собой NAT на базе Java, который будет взаимодействовать с OpenVPN на вашем компьютере.\n\n"
    },
    {
      "title": "Настройка соединения с телефоном в Arch Linux",
      "level": 4,
      "content": "После того, как вы установили Android SDK, чтобы использовать предоставленные инструменты, ваш телефон должен быть правильно настроен в udev, и вы должны предоставить пользователю Linux права. В противном случае вам могут потребоваться привилегии root для использования Android SDK, что не рекомендуется. Чтобы выполнить эту настройку, включите отладку USB на телефоне (обычно в меню «Настройки» -> «Приложения -> Разработка -> USB-отладка»), подключите его к ПК с помощью USB-кабеля и выполните команду lsusb. Устройство должно быть в списке. Пример вывода для телефона Acer Liquid:\n\n```\nBus 001 Device 006: ID 0502:3202 Acer, Inc.\n```\n\nЗатем создайте следующий файл, заменив ciri на ваше собственное имя пользователя Linux, и 0502 на Vendor ID вашего телефона:\n\n```\n/etc/udev/rules.d/51-android.rules\n```\n\n```\nSUBSYSTEM==\"usb\", ATTR(idVendor)==\"0502\", MODE=\"0666\" OWNER=\"ciri\"\n```\n\nКак root выполните команду udevadm control --reload (или перезагрузите компьютер), чтобы применить изменения.\n\nЧтобы убедиться, что изменения применились, выполните adb devices, и она должна отобразить device вместо unauthorized.\n\nТакже можно попробовать выполнить на вашем Linux-ПК команду adb shell из Android SDK в качестве обычного (не root) пользователя: вы должны получить приглашение unix «на телефоне».\n\n"
    },
    {
      "title": "Процедура",
      "level": 3,
      "content": "Запустите приложение AziLink в телефоне и выберите «О программе» внизу, чтобы получить инструкции, которые в основном:\n\n1. Вам нужно будет включить отладку USB на телефоне, если она еще не была включена (обычно в меню «Настройки» -> «Приложения» -> «Разработка» -> «Отладка USB»).\n1. Подключите телефон с помощью кабеля USB к ПК.\n1. Запустите AziLink и убедитесь, что в верхней части окна отмечена опция Активная служба.\n1. Выполните на своем ПК Linux следующие команды:\n\n```\n$ adb forward tcp:41927 tcp:41927\n# openvpn azilink.ovpn\n```\n\nazilink.ovpn взят отсюда\n\n```\nazilink.ovpn\n```\n\n```\ndev tun\nremote 127.0.0.1 41927 tcp-client\nifconfig 192.168.56.2 192.168.56.1\nroute 0.0.0.0 128.0.0.0\nroute 128.0.0.0 128.0.0.0\nsocket-flags TCP_NODELAY\nkeepalive 10 30\ndhcp-option DNS 192.168.56.1\n```\n\nВам может потребоваться вручную обновить содержимое resolv.conf до\n\n```\n/etc/resolv.conf\n```\n\n```\nnameserver 192.168.56.1\n```\n\nЕсли вы используете NetworkManager, вам может потребоваться остановить его перед запуском OpenVPN.\n\n"
    },
    {
      "title": "USB-модем с EasyTether",
      "level": 2,
      "content": "Скачайте клиент easytether. Устанавливается так:\n\n```\n# pacman -U easytether-0.8.5-2-x86_64.pkg.tar.xz\n# easytether-usb\n# dhcpcd tap-easytether\n```\n\nУбедитесь, что Android-приложение EasyTether установлено на телефоне, к которому будет производиться приключение. Примечание: Lite-версия приложения отключает некоторые соединения, и вам нужно купить полную версию для полной функциональности. По этой причине рекомендуется использовать AziLink.\n\n"
    },
    {
      "title": "Модем через Bluetooth",
      "level": 2,
      "content": "Android (по крайней мере, начиная с 4.0, возможно, ранее) может предоставить персональную сеть Bluetooth (PAN) в режиме точки доступа.\n\nNetworkManager может выполнить это действие и самостоятельно обработать инициализацию сети; Обратитесь к его документации для получения более подробной информации.\n\nВ качестве альтернативы: убедитесь, что вы можете подключить свой компьютер и устройство Android, как описано в Bluetooth (Русский), затем, заменяя адрес устройства (здесь задан как AA_BB_CC_DD_EE_FF), выполните:\n\n```\n$ dbus-send --system --type=method_call --dest=org.bluez /org/bluez/hci0/dev_AA_BB_CC_DD_EE_FF org.bluez.Network1.Connect string:'nap'\n```\n\nЭто создаст сетевой интерфейс bnep0. В заключение, настройте сетевое соединение на этом интерфейсе; Android по умолчанию предлагает DHCP.\n\n"
    },
    {
      "title": "Подключение через прокси-сервер SOCKS",
      "level": 2,
      "content": "С этим методом привязка достигается путем переадресации порта с телефона на ПК. Это подходит только для браузеров. Для Firefox вам следует установить параметру network.proxy.socks_remote_dns значение true в about:config ( адресная строка )\n\n"
    },
    {
      "title": "Необходимые инструменты",
      "level": 3,
      "content": "- Пакеты android-tools и android-udev\n- Кабель USB для подключения вашего телефона к ПК\n- Один из двух: Tetherbot или Proxoid\n\n"
    },
    {
      "title": "Tetherbot",
      "level": 4,
      "content": "Tetherbot is an experimental SOCKS proxy and Port Bouncer that should allow you to connect your laptop to the internet using the internet connection (EDGE, 3G or Wifi) of your T-Mobile G1 Cellphone.\n\nПроект закрыт и веб-сайт уже не работает, но его архив доступен в Wayback Machine[1], откуда можно скачать APK.\n\nЧтобы использовать SOCKS-прокси от Tetherbot для подключения браузера к интернету, выполните следующие действия:\n\n1. На телефоне запустите приложение Tetherbot и нажмите кнопку Start Socks\n1. На компьютере пробросьте порт до SOCKS-прокси следующей командой: # adb forward tcp:1080 tcp:1080\n1. Теперь перейдите в настройки вашего браузера и пропишите ручную настроку прокси с адресом localhost и 1080, оставив остальные поля пустыми.\n\n```\n# adb forward tcp:1080 tcp:1080\n```\n\n"
    },
    {
      "title": "Proxoid",
      "level": 4,
      "content": "Следуйте инструкциям, приведенным в следующих разделах link\n\n"
    }
  ]
}
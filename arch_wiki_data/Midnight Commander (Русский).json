{
  "title": "Midnight Commander (Русский)",
  "url": "https://wiki.archlinux.org/title/Midnight_Commander_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Функциональность файлового менеджера\n- ranger\n- nnn (Русский)\n\nMidnight Commander — двухпанельный файловый менеджер, поддерживающий стандартные файловые операции, виртуальные файловые системы, панелизацию внешних комманд и пользовательские меню. Он также включает в себя встроенный просмотрщик, редактор файлов и инструмент для просмотра различий.\n\nMidnight Commander имеет графический интерфейс, который отображается в текстовом режиме. Он работает в обычной консоли, внутри терминала X и через SSH-соединение на всех видах терминалов.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет mc.\n\nПоследняя нестабильная версия доступна в пакете mc-gitAUR.\n\n"
    },
    {
      "title": "Дополнительные темы",
      "level": 3,
      "content": "Midnight Commander поставляется с большим числом встроенных тем. Вы можете выбрать тему в меню Настройки > Оформление.\n\nМожно дополнительно установить сторонние темы:\n\n- mc-solarized-git — Цветовая схема Solarized\n\n- mc-skin-modarin-debian — Thin versions of the modarin theme\n\nСмотрите также mc(1) § Skins.\n\n"
    },
    {
      "title": "Использование",
      "level": 2,
      "content": "В этом разделе представлен краткий обзор использования Midnight Commander.\n\n"
    },
    {
      "title": "Интерфейс",
      "level": 3,
      "content": "Основой интерфейса являются две вертикальные панели. Каждая может отобразить содержимое каталога, показать предварительный просмотр обычного текста, сведения о файле или дерево каталогов (смотрите mc(1) § Directory Tree). Операции с файлами доступны с помощью функциональных клавиш или мыши. Дополнительные параметры отображаются в динамическом меню пользователя (F2) и меню параметров (F9). Клавиши после F12 (от F13 до F20) доступны через Shift. Некоторые надписи в пунктах меню и диалоговых окнах имеют одну выделенную букву — нажатие этой буквы (или Alt+Буква, если фокус находится в поле ввода) сразу выполняет соответствующее действие.\n\nПод панелями есть командная строка, в которой запущена командная оболочка. Она обычно относится к тому же типу, из которого был запущен mc. В неё можно переключиться (Ctrl+o), смотрите mc(1) § The subshell support. В этой командной строке команду cd обрабатывает сам Midnight Commander и не передаёт её оболочке для выполнения. Файлы в панели взаимодействуют с командной строкой; например, Alt+Enter копирует имя (выбранного) файла в командную строку.\n\nСочетания клавиш в целом аналогичны GNU Emacs. Можно включить более строгую раскладку клавиш emacs (смотрите mc(1) § Redefine hotkey bindings). Однако новые пользователи могут использовать Lynx-подобные (стрелочные) привязки клавиш (включаются в меню Настройки > Настройки панелей) и клики мышью для навигации.\n\nПоддержка мыши в виртуальной консоли Linux может быть получена с помощью GPM.\n\n"
    },
    {
      "title": "Модули",
      "level": 3,
      "content": "Их можно вызывать через интерфейс mc (с включенными пунктами Встроенный в меню Настройки > Конфигурация) или отдельно как символические ссылки на двоичный файл mc.\n\n- mcedit — Редактор текстовых и двоичных файлов с поддержкой замены с помощью регулярных выражений, подсветкой синтаксиса, макросами и shell piping, смотрите mcedit(1)\n- mcview — Просмотрщик текста и шестнадцатеричного кода с goto метками и поиском по регулярному выражению\n- mcdiff — Сравнивает и редактирует два файла на месте (Ctrl+x d)\n\nМожно запускать несколько модулей одновременно в пределах одного экземпляра mc и переключаться между ними с помощью Alt+` (смотрите mc(1) § Screen selector). Вместо них можно использовать внешние редакторы и соответствующим образом настроить параметры.\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "Большинство настроек Midnight Commander можно изменить из меню. Однако небольшое количество настроек, таких как команды буфера обмена, определение кодировки и параметры для внешних редакторов, меняется только через файл ~/.config/mc/ini. Описание настроек можно почитать в mc(1) § Special Settings.\n\nТакже для настройки используются следующие переменные окружения: MC_SKIN, MC_KEYMAP, MC_XDG_OPEN, MC_COLOR_TABLE, MC_DATADIR, MC_HOME, KEYBOARD_KEY_TIMEOUT_US, PAGER, EDITOR, VIEWER.\n\nСмотрите также mc(1) § FILES.\n\n"
    },
    {
      "title": "extfs",
      "level": 3,
      "content": "extfs позволяет легко создавать новые виртуальные файловые системы для mc. Для более подробной информации смотрите /usr/lib/mc/extfs.d/README.\n\n"
    },
    {
      "title": "Запуск из меню",
      "level": 3,
      "content": "Midnight Commander можно запускать из меню, создав файл desktop entry. Пример:\n\n```\n[Desktop Entry]\nType=Application\nVersion=1.0\nName=Midnight Commander\nComment=Visual file manager\nExec=mc\nIcon=folder\nMimeType=inode/directory\nTerminal=true\nCategories=Utility;\n```\n\n"
    },
    {
      "title": "Поддержка корзины",
      "level": 3,
      "content": "Midnight Commander не поддерживает функцию корзины.\n\n"
    },
    {
      "title": "Использование libtrash",
      "level": 4,
      "content": "Библиотека libtrash перехватывает вызовы функций удаления файлов и вместо удаления выполняет перемещение файлов в корзину.\n\nУстановите libtrashAUR и создайте псевдоним для mc в файле инициализации вашей командной оболочки (например, ~/.bashrc или ~/.zshrc):\n\n```\nalias mc='LD_PRELOAD=/usr/lib/libtrash.so mc'\n```\n\nЧтобы изменения вступили в силу, переоткройте сеанс терминала или просто выполните скрипт инициализации командой source.\n\nСтандартные настройки библиотеки находятся в файле /etc/libtrash.conf.sys; по умолчанию для корзины используется каталог ~/Trash/. Вы можете переопределить их для текущего пользователя, создав пользовательский файл настроек ~/.libtrash, например:\n\n```\nTRASH_CAN = .Trash\nINTERCEPT_RENAME = NO\nIGNORE_EXTENSIONS= o;exe;com\nUNCOVER_DIRS=/dev\n```\n\nТеперь файлы, удаляемые через mc, будут попадать в каталог ~/.Trash/.\n\n- У этого способа существует побочный эффект: программы, запущенные из mc наследуют переменную окружения LD_PRELOAD, которая может вызывать проблемы в их работе. Смотрите [1] для более подробной информации.\n- С установленной опцией GLOBAL_PROTECTION = YES (значение по умолчанию), файлы вне домашнего каталога будут попадать в корзину, даже если они находятся на другом разделе диска. Такие файлы фактически перемещаются копированием и удалением из исходного расположения, поэтому процедура удаления в корзину файла на другом разделе может занимать продолжительное время.\n\nСмотрите также [2].\n\n"
    },
    {
      "title": "Выход в текущий каталог",
      "level": 3,
      "content": "При выходе командная оболочка вернёт вас в тот каталог, в котором вы запустили Midnight Commander. Если вы хотите, чтобы оставался текущий каталог, выбранный в Midnight Commander, можно использовать специальный скрипт-обёртку, который выполнит переход в текущий каталог после закрытия mc. Добавьте алиас в ваш ~/.bashrc или ~/.zhsrc:\n\n```\nalias mc=\". /usr/lib/mc/mc-wrapper.sh\"\n```\n\nТеперь команда mc будет запускать этот скрипт-обёртку.\n\nДругим простым решением будет просто скрывать интерфейс, не прерывая сеанс программы, нажатием Ctrl+O. Однако это может мешать работе других приложений в терминале.\n\n"
    },
    {
      "title": "Искаженное изображение",
      "level": 3,
      "content": "Нажмите Ctrl+L для перерисовки интерфейса. Эта команда перерисует изображение, но не обновит список файлов в каталогах. Для обновления списка файлов на панелях используйте Ctrl+R.\n\n"
    },
    {
      "title": "Открытие файлов",
      "level": 3,
      "content": "Для открытия файлов mc считывает переменную окружения MC_XDG_OPEN (если она не указана, по умолчанию используется xdg-open). [3]\n\nЕсли mc блокируется до завершения процесса или процесс завершается вместе с mc, используйте nohup &:\n\n```\n~/bin/nohup-open\n```\n\n```\n#!/bin/bash\nnohup xdg-open \"$@\" &\n```\n\nИ пропишите MC_XDG_OPEN соответственно:\n\n```\n$ export MC_XDG_OPEN=~/bin/nohup-open\n```\n\n"
    },
    {
      "title": "Поиск файла ничего не находит",
      "level": 3,
      "content": "Если Поиск файла ничего не может найти, проверьте текущий каталог на наличие символических ссылок. Поиск файлов не переходит по символическим ссылкам, поэтому вместо них используйте bind mount (смотрите mount(8)) или команду Внешняя панелизация.\n\n"
    },
    {
      "title": "Сломаны сочетания клавиш",
      "level": 3,
      "content": "С некоторыми определениями терминалов вроде screen-256color или xterm-termite сочетания клавиш, такие как Shift+F6, могут не работать или работать как другие сочетания. Чтобы исправить это, назначьте последовательности терминала вручную в диалоговом окне Распознавание клавиш в настройках.\n\nНастройки сохранятся в ~/.config/mc/ini, например для screen-256color:\n\n```\n[terminal:screen-256color]\nf1=\\\\eOP\nf2=\\\\eOQ\nf3=\\\\eOR\nf4=\\\\eOS\nf5=\\\\e[15~\nf6=\\\\e[17~\nf7=\\\\e[18~\nf8=\\\\e[19~\nf9=\\\\e[20~\nf10=\\\\e[21~\nf11=\\\\e[23~\nf12=\\\\e[24~\nf13=\\\\e[1\\;2R\nf14=\\\\e[1\\;2S\nf15=\\\\e[15\\;2~\nf16=\\\\e[17\\;2~\nf17=\\\\e[18\\;2~\nf18=\\\\e[19\\;2~\nf19=\\\\e[20\\;2~\nf20=\\\\e[21\\;2~\ncomplete=\\\\e^i\nbacktab=\\\\e[Z\nbackspace=^?\n```\n\n"
    },
    {
      "title": "Нет жирного текста в urxvt",
      "level": 3,
      "content": "При запуске в urxvt с настройкой TERM по умолчанию, текст, который обычно выделяется жирным шрифтом во многих других терминалах, здесь не будет жирным. Корень проблемы в том, что xterm объединяет яркий цвет текста с атрибутом жирного шрифта (таким образом, яркие цвета всегда будут отображаться жирным шрифтом в xterm).\n\nurxvt не имеет этого ограничения, которому следует Slang (библиотека, которую mc использует для отображения текста по умолчанию). Поскольку Slang может отделить полужирный атрибут от ярких цветов на urxvt, mc потребуется явно указать полужирный атрибут, если это необходимо (чего он не делает).\n\nРешение состоит в том, чтобы настроить mc на явное использование полужирных цветов по желанию, например отредактировав скин по умолчанию следующим образом:\n\n```\n$ mkdir ~/.local/share/mc/skins \n$ cp /usr/share/mc/skins/default.ini ~/.local/share/mc/skins/\n$ sed -i -E 's/^(.* = (gray|brightred|brightgreen|yellow|brightblue|brightmagenta|brightcyan|white);.*)$/\\0;bold/' ~/.local/share/mc/skins/default.ini\n```\n\nЭто создаст копию скина по умолчанию, но со всеми яркими цветами, имеющими явный добавленный полужирный атрибут.\n\nДругой обходной путь — прописать TERM=xterm, однако это вызывает другие проблемы из-за несоответствия termcap/terminfo, например, некоторые клавиши не работают.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- mc(1)\n- Черновик документации[устаревшая ссылка 2025-03-15 ⓘ]\n\n"
    }
  ]
}
{
  "title": "IPod (日本語)",
  "url": "https://wiki.archlinux.org/title/IPod_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- オーディオブック\n- iPhone テザリング\n\nこの記事では Arch Linux で iPad, iPod, iPhone を使用する方法を説明します。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 デバイスに接続する\n- 2 iPod のマウントポイントの変更\n- 3 動画や写真のインポート 3.1 HTML5 動画 3.2 写真をインポートして削除する\n- 4 iOS 用に動画を変換 4.1 Handbrake 4.2 Avidemux 4.3 Mencoder 4.4 FFmpeg\n- 5 デバイス固有 5.1 iPhone/iPod Touch 5.1.1 HashInfo ファイルの生成 5.1.2 Unobfuscating the Database 5.2 iPod Classic/Nano (第3世代) 5.3 iPod Nano 5th generation 5.4 iPod Nano 6th generation 5.5 iPod Shuffle 1st and 2nd generation 5.6 iPod Shuffle 4th generation 5.7 iPod Video (5th and 5.5th generation)\n- 6 第1・2世代 iPod Shuffle\n- 7 第4世代 iPod Shuffle\n- 8 iPod 管理アプリ\n- 9 参照\n\n- 3.1 HTML5 動画\n- 3.2 写真をインポートして削除する\n\n- 4.1 Handbrake\n- 4.2 Avidemux\n- 4.3 Mencoder\n- 4.4 FFmpeg\n\n- 5.1 iPhone/iPod Touch 5.1.1 HashInfo ファイルの生成 5.1.2 Unobfuscating the Database\n- 5.2 iPod Classic/Nano (第3世代)\n- 5.3 iPod Nano 5th generation\n- 5.4 iPod Nano 6th generation\n- 5.5 iPod Shuffle 1st and 2nd generation\n- 5.6 iPod Shuffle 4th generation\n- 5.7 iPod Video (5th and 5.5th generation)\n\n- 5.1.1 HashInfo ファイルの生成\n- 5.1.2 Unobfuscating the Database\n\n"
    },
    {
      "title": "デバイスに接続する",
      "level": 2,
      "content": "GVFS を使用するアプリケーション、ファイルマネージャ (GNOME Files や Thunar) あるいはメディアプレイヤー (Rhythmbox) は gvfs-afc パッケージをインストールすることで iOS デバイスを扱えるようになります。パッケージをインストールしたらファイルマネージャやアプリケーションを再起動する必要があります。また、ファイルマネージャやアプリケーションからデバイスが認識されない場合はバックグラウンドで usbmuxd が動作しているか確認してください。\n\n"
    },
    {
      "title": "iPod のマウントポイントの変更",
      "level": 2,
      "content": "伝統的に iPod は vfat ファイルシステム (稀に hfsplus) が入っている普通の USB ストレージデバイスと同じようにアクセスすることができます。詳しい説明はUSB ストレージデバイスの記事を見て下さい。\n\nudisks2 が動作している場合、接続された iPod は /run/media/$USER/iPod_name にマウントされます。\n\niPod のボリュームラベルが長くて、空白や大文字・小文字が混じっていると、不便なことがあります。dosfstools パッケージの dosfslabel を使うことでボリュームを簡単に好都合なように変更することが可能です:\n\n- 現在のボリュームラベルを取得・確認:\n\n```\n# dosfslabel /dev/sdXY\n```\n\n- 新しいボリュームラベルを設定:\n\n```\n# dosfslabel /dev/sdXY ArchPod\n```\n\n- デバイスをアンマウント:\n\n```\n$ udisksctl unmount -b /dev/sdXY\n```\n\n- もう一度マウントしなおす:\n\n```\n$ udisksctl mount -b /dev/sdXY\n```\n\n/dev/sdxx は iPod の現在のデバイスノードに置き換えてください。\n\n"
    },
    {
      "title": "動画や写真のインポート",
      "level": 2,
      "content": "通常は <mountpoint>/DCIM/100APPLE で動画と写真の両方が見つかります。\n\n"
    },
    {
      "title": "HTML5 動画",
      "level": 3,
      "content": "ffmpeg2theora を使って MOV ファイルを OGV などの HTML5 動画フォーマットに変換したいということもあるでしょう。作成日のメタデータは変換された動画に含まれないので、以下のようなスクリプトを使う必要があります:\n\n```\n#!/usr/bin/sh\n\nfind -name \"*.MOV\" | while read mov\ndo\n    d=$(gst-discoverer-1.0 -v $mov | awk '/datetime:/{print $2}' | tr -d \\\")\n    base=${mov%.*}\n    if test -f $base.ogv\n    then\n        touch -d${d} $base.ogv\n        ls -l $base.ogv\n    else\n        echo $base.ogv missing\n    fi\ndone\n```\n\nファイルの日付と時刻が変わらないように cp -a あるいは rsync -t を使ってください。\n\n"
    },
    {
      "title": "写真をインポートして削除する",
      "level": 3,
      "content": "<mountpoint>/DCIM/100APPLE から写真や動画を移動することはできますが、古いデータベースを削除して \"Camera Roll\" データベースを再作成させる必要があります。\n\n```\n# rm Photos* com.apple.photos.caches_metadata.plist\n```\n\n"
    },
    {
      "title": "Handbrake",
      "level": 3,
      "content": "Handbrake は様々なバージョンの iPod 用のプリセットが入っている気の利いたツールです。CLI と GTK 版がそれぞれ handbrake-cli と handbrake パッケージでインストールできます。\n\nCLI で使うときは、http://trac.handbrake.fr/wiki/CLIGuide にガイドがあります。\n\n"
    },
    {
      "title": "Avidemux",
      "level": 3,
      "content": "avidemux-qt パッケージをインストールしてください。\n\nAvidemux は mp4 ファイルに変換することができます。最大ビットレート @ 700 で動画サイズを 720x480 または 320x240 にすることで上手く動画ファイルを抽出できます。\n\n"
    },
    {
      "title": "Mencoder",
      "level": 3,
      "content": "mplayer パッケージをインストールしてください。\n\nMencoder の設定は色々あり、iPod で再生できる動画ファイルを作り上げることができます。mencoder(1) を参照してください。MPlayer のオプションがエンコーディングにも影響します。\n\n基本的なガイドは MEncoder を見てください。\n\niPhone/iPod Touch に対応する動画をエンコードするコマンドの例:\n\n```\n$ mencoder INPUT -o output.mp4 \\\n-vf scale=480:-10,harddup \\\n-oac faac -faacopts mpeg=4:object=2:raw:br=128 \\\n-of lavf -lavfopts format=mp4 \\\n-ovc x264 -x264encopts nocabac:level_idc=30:bframes=0\n```\n\n"
    },
    {
      "title": "FFmpeg",
      "level": 3,
      "content": "ffmpeg パッケージをインストールしてください。\n\n様々な設定をサポートしているエンコーダーです。第5世代 iPod 用にエンコードするコマンドの例:\n\n```\n$ ffmpeg -vcodec xvid -b 300 -qmin 3 -qmax 5 -bufsize 4096 \\\n-g 300 -acodec aac -ab 96 -i INPUT -s 320x240 \\\n-aspect 4:3 output.mp4\n```\n\niPod Touch/iPhone 対応の動画を出力する例:\n\n```\n$ ffmpeg -f mp4 -vcodec mpeg4 -maxrate 1000 -b 700 -qmin 3 -qmax 5\\\n-bufsize 4096 -g 300 -acodec aac -ab 192 -s 480×320 -aspect 4:3 -i INPUT output.mp4\n```\n\n"
    },
    {
      "title": "HashInfo ファイルの生成",
      "level": 4,
      "content": "iTunes を使用してデバイスを同期したことがない場合は、HashInfo ファイルが見つからないというエラー メッセージが表示されます。これは、作成するために iTunes と一度同期することで修正できます。 または、サイト http://ihash.marcansoft.com/ を使用してこのファイルを作成することもできます。 Web サイトで iPod のシリアル番号を入力します。 /mnt/ipod/iPod_Control/Device/ ディレクトリの下に配置する HashInfo という名前のファイルが生成されます。 iPod デバイスを取り外し、再度接続します。\n\n"
    },
    {
      "title": "Unobfuscating the Database",
      "level": 4,
      "content": "Table content:\nこの記事またはセクションは情報が古くなっています。 理由: iOS version 2.0 is from 2008, and libgpod is already able to read the database without jailbreaking the device and editing system files. (Discuss)\n\nSince firmware version 2.0, Apple has obfuscated the music database. If you are using recent firmware, the file /System/Library/Lockdown/Checkpoint.xml can be modified to enable use of the older, non-obfuscated database. If that file does not exist then try to copy from /System/Library/CoreServices/Checkpoint.xml to /System/Library/Lockdown/Checkpoint.xml then replace:\n\n```\n<key>DBVersion</key>\n<integer>4</integer>\n```\n\nwith:\n\n```\n<key>DBVersion</key>\n<integer>2</integer>\n```\n\nThen reboot your device.\n\nIf syncing fails with \"ERROR: Unsupported checksum type '0' in cbk file generation!\", you may need to leave this at 4. libgpod seems to expect a hashed database.[リンク切れ 2022-09-18]\n\n"
    },
    {
      "title": "iPod Classic/Nano (第3世代)",
      "level": 3,
      "content": "iPod を設定して FireWire ID を libgpod から探知できるようにする必要があります。手動で FireWire ID を取得してください。\n\nYou need to set up the iPod to make libgpod able to find its Firewire ID. For this, you will need to get your FireWire ID manually\n\n1) 読み書き可能なマウントポイントとして iPod をマウントしてください。以下の例では /mnt/ipod を使います。\n\n2) 以下のコマンドを実行してシリアル番号を確認してください:\n\n```\n# lsusb -v | grep -i Serial\n```\n\n上記のコマンドで 00A1234567891231 のような16文字の文字列が出力されます (コロンやハイフンは含まれません)。\n\n3) 番号をメモしたら /mnt/ipod/iPod_Control/Device/SysInfo を作成・編集してください。ファイルに以下の行を追加します。\n\n(ffffffffffffffff はメモした16桁の文字列に置き換えてください、最初の 0x は消してはいけません)\n\nこれで Amarok や gtkpod で iPod が管理できるようになります。\n\n"
    },
    {
      "title": "iPod Nano 5th generation",
      "level": 3,
      "content": "Follow the instructions above #Generating HashInfo file in order to set up the hash file, it is needed to write into the device music library. To be able to use the iPod Nano 5th gen with libgpod, a SysInfoExtended file is also needed to be placed in the directory /mnt/ipod/iPod_Control/Device/. It can be generated using:\n\n```\n# ipod-read-sysinfo-extended bus device mountpoint\n```\n\nfor example:\n\n```\n# ipod-read-sysinfo-extended 001 011 /mnt/ipod/\n```\n\n"
    },
    {
      "title": "iPod Nano 6th generation",
      "level": 3,
      "content": "libgpodがiPod Nano 6世代と同期する為には、libhashab-gitAURパッケージをインストールする必要があります。 また、SysInfoExtendedファイルを#iPod Nano 5th generationと同様にして作成する必要があります。HashInfoはこのモデルでは不要です。\n\n"
    },
    {
      "title": "iPod Shuffle 1st and 2nd generation",
      "level": 3,
      "content": "rebuild_db is a Python 2 script that makes it possible to use the iPod Shuffle almost like any other USB flash MP3 player. Download the script from the website, then place it in the iPod's root directory. Copy your MP3 files onto the iPod Shuffle (sub-folders are allowed too) and then run the script:\n\n```\n$ python2 /mnt/iPod/rebuild_db.py\n```\n\n"
    },
    {
      "title": "iPod Shuffle 4th generation",
      "level": 3,
      "content": "In order to use this version of the iPod Shuffle under linux, you can use the python based command line tool ipod-shuffle-4gAUR. It also provides advanced voiceover and (auto)playlist generation support.\n\n"
    },
    {
      "title": "iPod Video (5th and 5.5th generation)",
      "level": 3,
      "content": "iPods in the mainline series up to and including this model do not support the AAC PNS feature, and will display audible artifacts when encountering it. Disable the feature in ffmpeg when encoding AAC files for these devices.\n\n```\n$ ffmpeg -i input.ogg -c:a aac -b:a 256k -aac_pns 0 -movflags +faststart -vn output.m4a\n```\n\nThe -movflags +faststart options place the moov atom at the start of the file, which helps the iPod parse the file faster.\n\n"
    },
    {
      "title": "第1・2世代 iPod Shuffle",
      "level": 2,
      "content": "(\"巨大な\" iPod に比べて) Shuffle の構造は単純なため、他の USB フラッシュ MP3 プレイヤーと同じように扱うことができます。iPod のルートディレクトリには rebuild_db.py ファイルを保存する必要があります。MP3 ファイルを iPod Shuffle にコピーしたら (サブフォルダも使えます)、以下のコマンドを実行してください [1]:\n\n```\n$ python2 /path/to/rebuild_db.py\n```\n\n"
    },
    {
      "title": "第4世代 iPod Shuffle",
      "level": 2,
      "content": "Linux で iPod Shuffle の第4世代を使うには Python ベースのコマンドラインツールである ipod-shuffle-4gAUR を使用します。高度なボイスオーバーやプレイリストの（自動）作成なども対応しています。\n\n"
    },
    {
      "title": "iPod 管理アプリ",
      "level": 2,
      "content": "- Rhythmbox GTK インターフェイス (GNOME)。 公式の GNOME プロジェクトに入っています。 高速で軽量なインターフェイス。 コンピュータと iPod の音楽を管理。 ポッドキャストやビデオキャプチャのダウンロードやストリーミング。 曲やポッドキャストの再生待ち。 Last.fm の統合。 インターネットラジオの視聴。 Jamendo と Magnatune のサポート。 音楽 CD の書き込み。 アルバムカバーの表示。 歌詞の表示。 DAAP 共有。\n\n- GTK インターフェイス (GNOME)。\n- 公式の GNOME プロジェクトに入っています。\n- 高速で軽量なインターフェイス。\n- コンピュータと iPod の音楽を管理。\n- ポッドキャストやビデオキャプチャのダウンロードやストリーミング。\n- 曲やポッドキャストの再生待ち。\n- Last.fm の統合。\n- インターネットラジオの視聴。\n- Jamendo と Magnatune のサポート。\n- 音楽 CD の書き込み。\n- アルバムカバーの表示。\n- 歌詞の表示。\n- DAAP 共有。\n\n- Banshee GTK インターフェイス (GNOME)。 Mono を使っているため、やや重く、rhythmbox よりもリソースを消費します。 デバイスの同期: 音楽や動画を Android, iPod などに同期、あるいはメディアをインポート。 ポッドキャスト: ポッドキャストやビデオキャストをダウンロード・ストリーミング。 プレイキュー: 曲や動画、ポッドキャストを再生待ちに追加して自動で DJ。 シャッフルモード: アーティストやアルバム、レーティング、あるいは曲の雰囲気などでシャッフル (あるいは Auto DJ)。 アルバムアート: 自動的にアートワークを取得。 強力な検索機能、スマートプレイリスト: 聞きたい曲をすぐに・正確に検索。 動画のサポート: Banshee の機能は全て動画でも活用できる。\n\n- GTK インターフェイス (GNOME)。\n- Mono を使っているため、やや重く、rhythmbox よりもリソースを消費します。\n- デバイスの同期: 音楽や動画を Android, iPod などに同期、あるいはメディアをインポート。\n- ポッドキャスト: ポッドキャストやビデオキャストをダウンロード・ストリーミング。\n- プレイキュー: 曲や動画、ポッドキャストを再生待ちに追加して自動で DJ。\n- シャッフルモード: アーティストやアルバム、レーティング、あるいは曲の雰囲気などでシャッフル (あるいは Auto DJ)。\n- アルバムアート: 自動的にアートワークを取得。\n- 強力な検索機能、スマートプレイリスト: 聞きたい曲をすぐに・正確に検索。\n- 動画のサポート: Banshee の機能は全て動画でも活用できる。\n\n- Yamipod GTK インターフェイス (GNOME)。 iPod の音楽を管理するだけの超軽量なアプリケーション (コンピュータの音楽は管理できない)。 簡単なレーティングの編集。 PC から iPod に同期。 ニュース RSS やポッドキャストを iPod にアップロード。 Last.fm サポート。 playlist サポート。\n\n- GTK インターフェイス (GNOME)。\n- iPod の音楽を管理するだけの超軽量なアプリケーション (コンピュータの音楽は管理できない)。\n- 簡単なレーティングの編集。\n- PC から iPod に同期。\n- ニュース RSS やポッドキャストを iPod にアップロード。\n- Last.fm サポート。\n- playlist サポート。\n\n- gtkpod GTK インターフェイス (GNOME) 既存の iTunesDB を読み込む (iPod の再生回数や評価、On-The-Go プレイリストなどをインポート)。 MP3, WAV, M4A (保護されてない AAC), M4B (オーディオブック), ポッドキャスト, 動画ファイル (単体ファイル, ディレクトリ, プレイリスト) を iPod に追加。'bashpodder' や 'gpodder' などのポッドキャストをダウンロードするにはサードパーティの製品が必要です。 カバーアートの表示・追加・修正。 ローカルデータベースに曲を全て追加して、アルバムやアーティスト、あるいはジャンルでハードディスクの中身を閲覧。トラックは iPod/Shuffle に簡単にドラッグできます。 プレイリストの作成・修正、スマートプレイリスト。 ID3 タグのエンコーディング文字セットを選択できます。デフォルトではロケールの設定が使われます。 テンプレートを指定することでファイル名からタグ情報を取得 (アーティスト, アルバム, 曲名...)。 曲を追加する際に重複を検出 (任意)。 iPod からトラックを削除・エクスポート。 ID3 タグの修正 -- 元のファイルでも変更されます (任意)。 ファイルの ID3 タグを戻す (元のファイルのタグを変更した場合)。 ディレクトリの同期。 トラックの音量のノーマライゼーション (mp3gain や replay-gain タグを使用)。 iTunesDB を更新して iPod に追加した曲を書き出す。 オフラインでも動作し後から iPod とプレイリストや曲を同期できます。 korganizer/kaddressbook/Thunderbird/evocalendar/evolution/webcalendar... などのデータを iPod にエクスポート (他のプログラムのスクリプトを追加できます)。\n\n- GTK インターフェイス (GNOME)\n- 既存の iTunesDB を読み込む (iPod の再生回数や評価、On-The-Go プレイリストなどをインポート)。\n- MP3, WAV, M4A (保護されてない AAC), M4B (オーディオブック), ポッドキャスト, 動画ファイル (単体ファイル, ディレクトリ, プレイリスト) を iPod に追加。'bashpodder' や 'gpodder' などのポッドキャストをダウンロードするにはサードパーティの製品が必要です。\n- カバーアートの表示・追加・修正。\n- ローカルデータベースに曲を全て追加して、アルバムやアーティスト、あるいはジャンルでハードディスクの中身を閲覧。トラックは iPod/Shuffle に簡単にドラッグできます。\n- プレイリストの作成・修正、スマートプレイリスト。\n- ID3 タグのエンコーディング文字セットを選択できます。デフォルトではロケールの設定が使われます。\n- テンプレートを指定することでファイル名からタグ情報を取得 (アーティスト, アルバム, 曲名...)。\n- 曲を追加する際に重複を検出 (任意)。\n- iPod からトラックを削除・エクスポート。\n- ID3 タグの修正 -- 元のファイルでも変更されます (任意)。\n- ファイルの ID3 タグを戻す (元のファイルのタグを変更した場合)。\n- ディレクトリの同期。\n- トラックの音量のノーマライゼーション (mp3gain や replay-gain タグを使用)。\n- iTunesDB を更新して iPod に追加した曲を書き出す。\n- オフラインでも動作し後から iPod とプレイリストや曲を同期できます。\n- korganizer/kaddressbook/Thunderbird/evocalendar/evolution/webcalendar... などのデータを iPod にエクスポート (他のプログラムのスクリプトを追加できます)。\n\n- Floola GTK インターフェイス (GNOME)。\n\n- GTK インターフェイス (GNOME)。\n\n- Amarok KDE/qt インターフェイス。\n\n- KDE/qt インターフェイス。\n\n- qPod KDE/qt インターフェイス。 GNUpod のフロントエンド。\n\n- KDE/qt インターフェイス。\n- GNUpod のフロントエンド。\n\n- GNUpod コマンドラインのみ。\n\n- コマンドラインのみ。\n\n- jakpod JakPod は Java で書かれており、音楽や動画ファイルを iPod にコピーすることができます。 第6世代 iPod Nano サポート。 jakpodAUR[リンク切れ: パッケージが存在しません]\n\n- JakPod は Java で書かれており、音楽や動画ファイルを iPod にコピーすることができます。\n- 第6世代 iPod Nano サポート。\n- jakpodAUR[リンク切れ: パッケージが存在しません]\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- iPhone/iPod Touch のサポートに関する詳細情報\n- Apple トレイラーのダウンロードスクリプト\n\n"
    }
  ]
}
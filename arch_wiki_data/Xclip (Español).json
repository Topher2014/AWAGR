{
  "title": "Xclip (Español)",
  "url": "https://wiki.archlinux.org/title/Xclip_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2022-10-04** \n\nArtículos relacionados\n\n- Copiar texto desde un terminal\n- Errores pulsando con el botón central en Firefox\n- Desactivar pegar desde el ratón en GTK\n- Portapapeles de Vim\n\nDe acuerdo con Wikipedia:es:Portapapeles:\n\n"
    },
    {
      "title": "Historia",
      "level": 2,
      "content": "En X10, se introdujeron búffers de corte. Estos eran buffers limitados que almacenaban texto arbitrario y eran utilizados por la mayoría de las aplicaciones. Sin embargo, fueron ineficientes y su implementación varió, por lo que se introdujeron las selecciones. Los búferes de corte han quedado en desuso hace mucho tiempo, y aunque algunas aplicaciones (como xterm) pueden tener soporte heredado para ellos, no se recomienda su uso.\n\n"
    },
    {
      "title": "Selecciones",
      "level": 2,
      "content": "Freedesktop.org describe las dos selecciones principales de la siguiente manera: [1]\n\nLa mayoría de los programas para Xorg, incluidas las aplicaciones Qt y GTK, siguen este comportamiento. Si bien ICCCM también define una selección SECUNDARIA, no tiene un acuerdo consensuado sobre el propósito. A pesar de la denominación, las tres selecciones son básicamente \"portapapeles\". En lugar del antiguo sistema de \"buffers de corte\" donde las aplicaciones arbitrarias podrían modificar los datos almacenados en los buffers de corte, solo una aplicación puede controlar o \"poseer\" una selección a la vez. Esto evita inconsistencias en el funcionamiento de las selecciones.\n\nVéase la página de atajos de teclado que enumera los accesos directos predeterminados en muchos programas.\n\nTambién es importante darse cuenta de que, según los protocolos de selección, no se copia nada hasta que se pegue. Por ejemplo, si selecciona una palabra en una ventana de terminal, cierra el terminal y luego quiere pegarlo en otro lugar, no funcionará porque el terminal se ha ido y el texto no se ha copiado en ninguna parte. Si desea que la palabra se mantenga después de cerrar la ventana del terminal, considere instalar un gestor de portapapeles.\n\n"
    },
    {
      "title": "Herramientas",
      "level": 2,
      "content": "Esta sección lista las herramientas para manipular los portapapeles en la línea de órdenes.\n\n- sselp — Impresora de selección X simple. Imprime la selección X a la salida estándar.\n\n- xclip — Una interfaz ligera y basada en la línea de órdenes para el portapapeles.\n\n- xsel — Programa de línea de órdenes para obtener y configurar los contenidos de la selección en X.\n\n- wl-clipboard — Una herramienta simple de copiar/pegar para compositores Wayland.\n\n"
    },
    {
      "title": "Gestores",
      "level": 2,
      "content": "Esta sección enumera los administradores del portapapeles que proporcionan características adicionales como el historial del portapapeles o la sincronización.\n\n- Anamnesis — Gestor de portapapeles que almacena todo el historial del portapapeles y ofrece una interfaz para realizar una búsqueda de texto completo. Tiene disponibles una línea de órdenes y un modo gráfico.\n\n- Autocutsel — Interfaces de línea de órdenes y demonio para sincronizar PRIMARIA, PORTAPAPELES y cortar selecciones del búfer.\n\n- Clipboard — Un gestor fácil de usar para el terminal. Ofrece las características avanzadas como el regex, los portapapeles persistentes y más.\n\n- Clipboard Indicator — Extensión del gestor del portapapeles para GNOME Shell. Añade un indicador del portapapeles al panel superior y almacena en caché el historial del portapapeles.\n\n- Clipcat — Gestor de portapapeles escrito en Rust.\n\n- Clipman — Complemento de gestor de portapapeles para el panel de Xfce4. Mantiene el contenido del portapapeles mientras que se suele perder cuando se cierra una aplicación. Es capaz de manejar texto e imágenes, y tiene una función para ejecutar acciones específicas en el texto seleccionado al compararlas con expresiones regulares.\n\n- ClipManager — Gestor de portapapeles multiplataforma escrito en Python y Qt.\n\n- Clipmenu — Gestor de portapapeles basado en Dmenu.\n\n- Clipster — Un gestor de portapapeles ligero, controlado por línea de órdenes, escrito en Python.\n\n- CopyQ — Gestor de portapapeles Qt inteligente con historial de búsqueda y modificable, con acciones personalizadas en elementos y soporte de línea de órdenes.\n\n- GPaste — Sistema de gestión de portapapeles que pretende ser un Parcellite de nueva generación, con una estructura modular dividida en un par de bibliotecas y un demonio para la adaptabilidad. Ofrece una extensión de GNOME Shell y una interfaz CLI..\n\n- Greenclip — Gestor de portapapeles simple para ser integrado con rofi.\n\n- Klipper — Gestor de portapapeles con todas las funciones para el escritorio KDE.\n\n- Parcellite — Gestor de portapapeles ligero pero lleno de funciones. Tiene disponible una línea de órdenes y un modo gráfico.\n\n- Qlipper — Applet de historial de portapapeles ligero y multiplataforma basado en Qt.\n\n- xclipboard — Cliente de línea de órdenes del portapapeles oficial de X.\n\n- xcmenu — Sincronizador del portapapeles desarrollado para usuarios de gestores de ventanas (aparentemente ya no está siendo mantenido).\n\n"
    },
    {
      "title": "Véase también",
      "level": 2,
      "content": "- Cortar y pegar en X\n- Selecciones en X, Cortar Búffers, y Matar Anillos.\n- X11: ¿Cómo funciona \"el\" portapapeles?\n\n"
    }
  ]
}
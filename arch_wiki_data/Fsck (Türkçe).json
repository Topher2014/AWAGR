{
  "title": "Fsck (Türkçe)",
  "url": "https://wiki.archlinux.org/title/Fsck_(T%C3%BCrk%C3%A7e)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "İlgili makaleler\n\n- Ext4\n- Btrfs\n- fstab\n\nfsck, (file system check) \"dosya sistemi kontrolü\" anlamına gelir ve bir veya daha fazla Linux dosya sistemini kontrol etmek ve isteğe bağlı olarak onarmak için kullanılır. Normalde, fsck programı, toplamda gerekli olan süreyi azaltmak için farklı fiziksel disk sürücülerindeki dosya sistemleriyle paralel olarak başa çıkmaya çalışacaktır (bkz. fsck(8)).\n\nArch Linux önyükleme işlemi, fsck prosedürünü sizin için kolaylıkla halleder ve her önyüklemede sürücü(ler)inizdeki tüm ilgili bölümleri otomatik olarak kontrol eder. Dolayısıyla, genellikle komut satırına başvurmanıza gerek yoktur.\n\n"
    },
    {
      "title": "Önyükleme zamanı kontrolü",
      "level": 2,
      "content": "Dosya sistemi kontrolü iki şekilde yapılabilir:\n\n1. mkinitcpio, kök dosya sistemini fsck kancası aracılığıyla bağlamadan önce fsck seçeneği sunar. Bunu yaparsanız, uygun rw çekirdek parametresi aracılığıyla kökü yazma izinli olarak bağlamalısınız.[1]\n1. systemd, fsck geçiş numarası 0'dan büyük olan tüm dosya sistemlerini fsck yapacaktır (ya #fstab seçenekleri ile ya da kullanıcı tarafından sağlanan birim dosyası ile). Kök dosya sistemi için, başlangıçta ro çekirdek parametresiyle sadece okunur olarak bağlanmalıdır ve ardından yalnızca fstab dosyasından yeniden yazma izinli olarak bağlanır (unutmayın ki defaults bağlama seçeneği rw anlamına gelir).\n\nİlk seçenek önerilen varsayılan seçenektir ve Kurulum Kılavuzu'nu takip ederseniz sonuç olarak bu seçeneğe ulaşırsınız. Eğer bunun yerine ikinci seçeneği tercih ederseniz, mkinitcpio.conf dosyasından fsck kancasını kaldırmalı ve çekirdek komut satırında ro kullanmalısınız. fsck'yi tamamen devre dışı bırakmak için çekirdek parametresi fsck.mode=skip kullanılabilir.\n\n"
    },
    {
      "title": "Kontrole zorlamak",
      "level": 3,
      "content": "base mkinitcpio kancasını kullanırsanız, çekirdek parametresi olarak fsck.mode=force geçerek önyükleme zamanında fsckyi zorlayabilirsiniz. Bu, makinenizde bulunan tüm dosya sistemlerini kontrol edecektir.\n\nAlternatif olarak, systemd systemd-fsck@.service(8) sağlar, bu da initramfs içinde kontrol edilmemiş tüm yapılandırılmış dosya sistemlerini kontrol eder. Ancak, bu şekilde kök dosya sistemi kontrol edilirse, dosya sisteminin yeniden bağlanması nedeniyle önyükleme sürecinde bir gecikmeye neden olur.\n\n"
    },
    {
      "title": "Tüm onarım sorularına otomatik olarak evet cevabı verme",
      "level": 3,
      "content": "Önyükleme zamanı fsck kontrolleri, \"UNEXPECTED INCONSISTENCY; RUN fsck MANUALLY.\" (BEKLENMEYEN TUTARSIZLIK; fsck'Yİ MANUEL OLARAK ÇALIŞTIRIN.) diyebilir.\n\nBu durum, dosya sistemini düzeltmek için bazı değişikliklerin uygulanması gerektiğinde ortaya çıkar ve bu değişiklikler tamamen güvenli olarak kabul edilmediği için fsck'nin manuel olarak çalıştırılmasını gerektirir.\n\nfsck, tüm önerilen değişiklikleri otomatik olarak uygulamak için (yani tüm sorulara evet cevabı vermek için) fsck.repair çekirdek komut satırı seçeneğini yes olarak ayarlayarak ayarlanabilir. (Diğer olası değerler no ve preen'dir.) Bu seçeneklerin anlamı için belgelere systemd-fsck@.service(8) bakın.\n\n"
    },
    {
      "title": "Hasarlı blokları onarmaya çalışma",
      "level": 3,
      "content": "Bir ext2/ext3/ext4 veya FAT dosya sisteminin hasarlı kısımlarını otomatik olarak onarmak için şunu çalıştırın:\n\nNote: **Evet** \n\n```\n# fsck -a\n```\n\n"
    },
    {
      "title": "Hasarlı blokları etkileşimli olarak onarma",
      "level": 3,
      "content": "Bu, önyükleme bölümündeki dosyalar değiştiğinde ve günlük güncellemesi düzgün yapılamadığında kullanışlıdır. Bu durumda, önyükleme bölümünü bağlayın ve hasarlı kısımları onarmak için aşağıdaki kodu çalıştırın:\n\n```\n# fsck -r sürücü\n```\n\n"
    },
    {
      "title": "Kontrol sıklığını değiştirme",
      "level": 3,
      "content": "Varsayılan olarak, fsck her 30 önyüklemede bir dosya sistemi kontrol eder (her bölüm için ayrı ayrı sayılır). Kontrol sıklığını değiştirmek için şunu çalıştırın:\n\n```\n# tune2fs -c 20 /dev/sda1\n```\n\nBu örnekte, 20 iki kontrol arasında önyükleme sayısıdır.\n\n1 bunu her önyüklemede tarama yapar, 0 taramayı tamamen durdurur.\n\nBelirli bir bölüm için sıklık numarasını ve mevcut bağlama sayısını görmek isterseniz, şunu kullanın:\n\n```\n# dumpe2fs -h /dev/sda1 | grep -i 'mount count'\n```\n\n"
    },
    {
      "title": "fstab seçenekleri",
      "level": 3,
      "content": "fstab, bir sistem yapılandırma dosyasıdır ve Linux çekirdeğine hangi bölümlerin (dosya sistemlerinin) nereye bağlanacağını ve dosya sistemi ağacındaki konumunu söylemek için kullanılır.\n\nTipik bir /etc/fstab girişi şöyle görünebilir:\n\n```\n/dev/sda1   /         ext4      defaults       0  1\n/dev/sda2   /other    ext4      defaults       0  2\n/dev/sda3   /win      ntfs-3g   defaults       0  0\n```\n\nAltıncı sütun (kalın) fsck seçeneğidir.\n\n- 0 — kontrol etme.\n- 1 — kontrol edilecek ilk dosya sistemi (bölüm); / (kök bölümü) 1 olarak ayarlanmalıdır.\n- 2 — kontrol edilecek diğer tüm dosya sistemleri.\n\n"
    },
    {
      "title": "Ayrı /usr bölümünde fsck çalıştırılamıyor",
      "level": 3,
      "content": "1. /etc/mkinitcpio.conf dosyasında gereken kancaların olduğundan ve bu dosyayı düzenledikten sonra initramfs görüntünüzü yeniden oluşturduğunuzdan emin olun.\n1. fstab dosyanızı kontrol edin! Sadece kök bölümünün sonunda 1 olmalıdır, her şeyin geri kalanı ya 2 ya da 0 olmalıdır. Diğer yazım hataları için dikkatlice inceleyin.\n\n"
    },
    {
      "title": "ext2fs: dış günlük yok",
      "level": 3,
      "content": "Bir ext(3/4) dosya sistemi, normal onarımın ötesinde hasar görebilecek durumlar olabilir (güç kesintisi nedeniyle). Genellikle, fsck'nin dış günlük bulamadığını belirten bir uyarı olacaktır. Bu durumda, aşağıdaki komutları çalıştırın:\n\nKlasörüne göre bölümü bağlamayı kaldırın\n\n```\n# umount klasör\n```\n\nBölüme yeni bir günlük yazın\n\n```\n# tune2fs -j /dev/bölüm\n```\n\nBölümü onarmak için bir fsck çalıştırın\n\n```\n# fsck -p /dev/bölüm\n```\n\n"
    }
  ]
}
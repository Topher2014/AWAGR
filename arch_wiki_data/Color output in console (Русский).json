{
  "title": "Color output in console (Русский)",
  "url": "https://wiki.archlinux.org/title/Color_output_in_console_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Emacs#Custom colors and theme\n- nano (Русский)#Подсветка синтаксиса\n\nЭта страница описывает настройку вывода цветного текста в различных консольных программах.\n\n"
    },
    {
      "title": "Управляющие последовательности",
      "level": 3,
      "content": "С помощью управляющих последовательностей ANSI (ANSI escape sequences) можно передать дополнительную информацию в вывод терминала, в том числе цвет. С годами диапазон цветов терминала значительно расширился: от изначальных восьми цветов до полного 24-битного True Color.\n\nБазовое кодирование цвета даёт 8 цветов обычной яркости и 8 ярких вариантов этих цветов. Современные эмуляторы терминала, в том числе сама Linux-консоль, дают возможность указать конкретные RGB-значения, которые будут использоваться для отображения этих цветом. Этот режим поддерживается почти всеми эмуляторами терминала.\n\nС появлением 256-цветных дисплеев появились последовательности для 256 цветов. Это 16 основных цветов, 216 цветов RGB (размещенных в кубе 6x6x6) и 24 оттенка серого. За исключением первых 16 цветов, схема обычно не настраивается, поскольку она имеет чёткое сопоставление с RGB. Этот режим поддерживается большинством эмуляторов терминала. (Меньшая часть эмуляторов использует аналогичную, но несовместимую кодировку только с 88 цветами. Вы вряд ли будете использовать их на практике, но они появятся в базе данных terminfo.)\n\nНе так широко поддерживается True Color режим, дающий 16.7 миллионов (224) цветов RGB (значение каждого канала в диапазоне от 0 до 255).\n\n"
    },
    {
      "title": "Termcap и terminfo",
      "level": 3,
      "content": "Termcap и terminfo, являющиеся частью ncurses, — это базы данных, дающие информацию о том, какие последовательности поддерживаются терминалом (который обычно прописан в переменной окружения TERM). Можно использовать команды tput(1) и infocmp(1) для чтения этих данных в командной строке.\n\n"
    },
    {
      "title": "diff",
      "level": 3,
      "content": "С версии 3.4 у diffutils есть опция --color (GNU mailing list).\n\n```\n$ alias diff='diff --color=auto'\n```\n\n"
    },
    {
      "title": "grep",
      "level": 3,
      "content": "Опция --color=auto включает выделение цветом. Цвет будет использоваться только при выводе в терминал; не в pipe или перенаправление.\n\nЦветной вывод в grep также удобен при работе с regexp.\n\nМожно использовать alias, чтобы прописать постоянное использование этой опции:\n\n```\nalias grep='grep --color=auto'\n```\n\nПеременная GREP_COLORS позволяет определить цвета и настроить разные части выделения. Чтобы изменить цвета, найдите нужные управляющие последовательности ANSI и используйте их. Подробнее смотрите grep(1).\n\nОпция -n включает вывод номеров строк файла.\n\n"
    },
    {
      "title": "ip",
      "level": 3,
      "content": "Команда ip(8) из пакета iproute2 имеет опцию -c для включения цвета. Значение auto этого параметра включит вывод цвета только в терминале.\n\n```\nalias ip='ip -color=auto'\n```\n\n"
    },
    {
      "title": "Переменные окружения",
      "level": 4,
      "content": "Можно попросить less использовать цвета для обозначения жирного текста и других эффектов форматирования.\n\nДобавьте эту строку в настройках вашей командной оболочки:\n\n```\nexport LESS='-R --use-color -Dd+r$Du+b'\n```\n\nОна задаст красный цвет для жирного и синий для подчёркивания.\n\nПодробнее об опции --use-color можно почитать в less(1) или [1].\n\n"
    },
    {
      "title": "Чтение из stdin",
      "level": 4,
      "content": "Когда вы выполняете команду и направляете её стандартный вывод (stdout) в less для постраничного просмотра (например, pacman -Qe | less), вы можете заметить, что цвет пропадает. Обычно это из-за того, что программа пытается определить, является ли stdout интерактивным терминалом, и если да, то печатает цветой текст, а если нет, то не цветной. Это правильное поведение, когда вы хотите перенаправить stdout в файл, например pacman -Qe > pkglst-backup.txt, но не очень хорошо не в случае с less.\n\nНекоторые программы имеют опцию для отключения определения интерактивного tty:\n\n```\n# dmesg --color=always | less\n```\n\nЕсли у программы нет подобной опции, можно заставить программу считать stdout интерактивным терминалом с помощью следующих утилит:\n\n- ColorThis — запускает программу в (группе) pty, поддерживает перенаправление stdin.\n\n- stdoutisatty — перехватывает обращение к функции isatty.\n\n- unbuffer — tclsh-скрипт, который поставляется с expect, запускает программу в pty.\n\nВ качестве альтернативы можно использовать модуль zpty из zsh: [2]\n\n```\n~/.zshrc\n```\n\n```\nzmodload zsh/zpty\n\npty() {\n\tzpty pty-${UID} ${1+$@}\n\tif [[ ! -t 1 ]];then\n\t\tsetopt local_traps\n\t\ttrap '' INT\n\tfi\n\tzpty -r pty-${UID}\n\tzpty -d pty-${UID}\n}\n\nptyless() {\n\tpty $@ | less\n}\n```\n\nИспользование:\n\n```\n$ ptyless программа\n```\n\nДля перенаправления в какой-нибудь другой просмотрщик (в данном примере less):\n\n```\n$ pty программа | less\n```\n\n"
    },
    {
      "title": "ls",
      "level": 3,
      "content": "Опция --color=auto включает подсвечивание цветом. Цвет будет использоваться только при выводе в терминал; не в pipe или перенаправление.\n\n```\nalias ls='ls --color=auto'\n```\n\nПеременная LS_COLORS позволяет определить цвета и настроить разные части выделения. Используйте dircolors(1) для установки.\n\n```\neval $(dircolors -p | perl -pe 's/^((CAP|S[ET]|O[TR]|M|E)\\w+).*/$1 00/' | dircolors -)\n```\n\nПодробнее смотрите ls(1).\n\n"
    },
    {
      "title": "man",
      "level": 3,
      "content": "There is a real color facility in grotty(1), but it is strongly discouraged for man pages. Here we fake a colored man by hacking two main pagers, less and most: we replace the sequences for bold, standout, and underline with spiced ones that contain color.\n\nТекст man-страниц может отображаться в разных цветах, что упрощает их чтение. Есть два основных метода, позволяющих раскрасить страницы — с помощью утилит less и most.\n\n"
    },
    {
      "title": "С помощью less (рекомендуется)",
      "level": 4,
      "content": "Преимущество этого способа в том, что less имеет более богатый набор возможностей, чем most, а также используется по умолчанию для отображения man-страниц.\n\nСмотрите #less для более детального описания.\n\n```\nexport MANPAGER=\"less -R --use-color -Dd+r -Du+b\"\n```\n\nДля Fish настройки будут выглядеть как-то так:\n\n```\n~/.config/fish/config.fish\n```\n\n```\nset -xU MANPAGER 'less -R --use-color -Dd+r -Du+b'\n```\n\nНе забудьте перезагрузить настройки вашей командной оболочки, чтобы изменения вступили в силу.\n\n"
    },
    {
      "title": "С помощью most (не рекомендуется)",
      "level": 4,
      "content": "Утилита most выполняет ту же задачу, что less и more, но имеет меньший набор возможностей. Настройка цветов для most проще, однако требуется дополнительная настройка для того, чтобы most работал наподобие less.\n\nУстановите пакет most.\n\nВ файле /etc/man_db.conf раскомментируйте параметр pager и установите ему значение most -s:\n\n```\nDEFINE     pager     most -s\n```\n\nОткройте любую man-страницу для проверки.\n\nНастройка цветов осуществляется в пользовательском файле ~/.mostrc (нужно создать, если он отсутствует), либо в системном файле /etc/most.conf. Пример конфигурации:\n\n```\n% Color settings\ncolor normal lightgray black\ncolor status yellow blue\ncolor underline yellow black\ncolor overstrike brightblue black\n```\n\nПолный список сочетаний клавиш можно посмотреть в /usr/share/doc/most/most-fun.txt. Чтобы получить базовую less/vim-подобную конфигурацию, можно скопировать /usr/share/doc/most/lesskeys.rc в ~/.mostrc. Этот файл не включает в себя 'g' или 'G', так что нужно добавить следующие строки в ~/.mostrc:\n\n```\nsetkey bob \"g\"\nsetkey eob \"G\"\nsetkey page_down \"d\"\nsetkey page_up \"u\"\n```\n\nТакже можно задать сочетание клавиш для goto_line, если вам не нравится стандартное 'J'.\n\nДругой пример, показывающий, как настроить сочетания клавиш, подобно less (переход к строке назначен на клавишу J):\n\n```\n% less-like keybindings\nunsetkey \"^K\"\nunsetkey \"g\"\nunsetkey \"G\"\nunsetkey \":\"\n\nsetkey next_file \":n\"\nsetkey find_file \":e\"\nsetkey next_file \":p\"\nsetkey toggle_options \":o\"\nsetkey toggle_case \":c\"\nsetkey delete_file \":d\"\nsetkey exit \":q\"\n\nsetkey bob \"g\"\nsetkey eob \"G\"\nsetkey down \"e\"\nsetkey down \"E\"\nsetkey down \"j\"\nsetkey down \"^N\"\nsetkey up \"y\"\nsetkey up \"^Y\"\nsetkey up \"k\"\nsetkey up \"^P\"\nsetkey up \"^K\"\nsetkey page_down \"f\"\nsetkey page_down \"^F\"\nsetkey page_up \"b\"\nsetkey page_up \"^B\"\nsetkey other_window \"z\"\nsetkey other_window \"w\"\nsetkey search_backward \"?\"\nsetkey bob \"p\"\nsetkey goto_mark \"'\"\nsetkey find_file \"E\"\nsetkey edit \"v\"\n```\n\n"
    },
    {
      "title": "Цветные страницы в xterm или rxvt-unicode",
      "level": 4,
      "content": "Быстрый способ раскрасить цвета man-страниц, которые просматриваются через xterm / uxterm или rxvt-unicode, заключается в редактировании файла ~/.Xresources.\n\nВ подразделах представлена конфигурация для xterm и rxvt-unicode.\n\n```\n*VT100.colorBDMode:     true\n*VT100.colorBD:         red\n*VT100.colorULMode:     true\n*VT100.colorUL:         cyan\n```\n\nЭти настройки заменяют начертания текста цветами. Добавьте также:\n\n```\n*VT100.veryBoldColors: 6\n```\n\nесли вы хотите видеть цвета и начертания одновременно. Смотрите также xterm(1) для описания ресурса терминала veryBoldColors.\n\nКонфигурация:\n\n```\nURxvt.colorIT:      #87af5f\nURxvt.colorBD:      #d7d7d7\nURxvt.colorUL:      #87afd7\n```\n\nПосле внесения изменений в файл, выполните:\n\n```\n$ xrdb -load ~/.Xresources\n```\n\nЗапустите xterm/uxterm или rxvt-unicode и вы должны увидеть цветные man-страницы. Эти настройки добавляют цвета для слов, написанных полужирным и подчеркнутым шрифтом в xterm/uxterm, и цвета для слов в полужирном, подчеркнутом, и наклонном начертаниях в rxvt-unicode. Вы можете также совмещать эти атрибуты в различные комбинации. Смотрите sources.\n\n"
    },
    {
      "title": "pacman",
      "level": 3,
      "content": "Pacman также имеет опцию для вывода цвета. Раскомментируйте строку Color в файле /etc/pacman.conf.\n\n"
    },
    {
      "title": "Универсальные обёртки",
      "level": 3,
      "content": "(многие давно не обновлялись, но всё ещё работают)\n\nОни поставляются с предварительно настроенными пресетами. Пресеты можно менять, можно создавать новые.\n\n- rainbow — раскрашивает вывод команд или STDIN по паттернам.Пресеты: df, diff, env, host, ifconfig, java-stack-trace, jboss, jonas, md5sum, mvn2, mvn3, ping, tomcat, top, traceroute.\n\n- grc — ещё один раскрашиватель для украшения ваших лог-файлов или вывода команд.Пресеты: cat, cvs, df, digg, gcc, g++, ls, ifconfig, make, mount, mtr, netstat, ping, ps, tail, traceroute, wdiff, blkid, du, dnf, docker, docker-machine, env, id, ip, iostat, last, lsattr, lsblk, lspci, lsmod, lsof, getfacl, getsebool, ulimit, uptime, nmap, fdisk, findmnt, free, semanage, sar, ss, sysctl, systemctl, stat, showmount, tune2fs and tcpdump.\n\n- cope — раскрашивающая обёртка для консольных программ.Пресеты: acpi, arp, cc, df, dprofpp, fdisk, free, g++, gcc, id, ifconfig, ls, lspci, lsusb, make, md5sum, mpc, netstat, nm, nmap, nocope, ping, pmap, ps, readelf, route, screen, sha1sum, sha224sum, sha256sum, sha384sum, sha512sum, shasum, socklist, stat, strace, tcpdump, tracepath, traceroute, w, wget, who, xrandr.\n\n- cw — ненавязчивая обёртка для популярных unix-команд. Оборачивает file, что может вызывать проблемы.Пресеты: arp, arping, auth.log@, blockdev, cal, cksum, clock, configure, cpuinfo@, crontab@, cw-pipe, cw-test.cgi, date, df, diff, dig, dmesg, du, env, figlet, file, find, finger, free, fstab@, fuser, g++, gcc, group@, groups, hdparm, hexdump, host, hosts@, id, ifconfig, inittab@, iptables, last, lastlog, lsattr, lsmod, lsof, ltrace-color, make, md5sum, meminfo@, messages@, mount, mpg123, netstat, nfsstat, nmap, nslookup, objdump, passwd@, ping, pmap, pmap_dump, praliases, profile@, protocols@, ps, pstree, quota, quotastats, resolv.conf@, route, routel, sdiff, services@, showmount, smbstatus, stat, strace-color, sysctl, syslog, tar, tcpdump, tracepath, traceroute, umount, uname, uptime, users, vmstat, w, wc, whereis, who, xferlog.\n\n- ccze — быстрая раскраска журнала, написан на C, предназначен для замены colorize\n\n"
    },
    {
      "title": "Библиотеки для раскраски вывода",
      "level": 3,
      "content": "- libtextstyle — библиотека на C для стилизации текстового вывода в терминалах\n\n- ruby-rainbow — расширение для Ruby-класса String, добавляющее поддержку ANSI-цветов\n\n- python-blessings — тонкая обёртка для раскраски, стилизации и позиционирования\n\n- lolcat — программа на Ruby, которая делает текст цветным как радуга\n\n"
    },
    {
      "title": "Компиляторы",
      "level": 4,
      "content": "- colorgcc — обёртка на Perl, раскрашивающая предупреждения и ошибки, соответствующие формату вывода gcc\n\n"
    },
    {
      "title": "diff",
      "level": 4,
      "content": "Diff имеет встроенную поддержку цветов, что разумно использовать. Но эти обёртки тоже можно использовать:\n\n- colordiff — Perl-скрипт для подсветки diff.\n\n- cwdiff — обёртка над (w)diff с поддержкой каталогов.\n\n- git-delta — постраничный просмотрщик с подсветкой синтаксиса для git и diff.\n\n"
    },
    {
      "title": "cat",
      "level": 4,
      "content": "- bat — клон cat с подсветкой синтаксиса и интеграцией с git.\n\n"
    },
    {
      "title": "less",
      "level": 4,
      "content": "В less можно добавить подсветку синтаксиса. Установите пакет source-highlight и добавьте в настройки вашей командной оболочки:\n\n```\n~/.bashrc\n```\n\n```\nexport LESSOPEN=\"| /usr/bin/source-highlight-esc.sh %s\"\nexport LESS='-R '\n```\n\nАктивным пользователям командной строки может быть интересен lesspipe.\n\nС помощью него можно просматривать список файлов в архиве:\n\n```\n$ less архив.tar.gz\n```\n\n```\n==> use tar_file:contained_file to view a file in the archive\n-rw------- пользователь/группа  695 2008-01-04 19:24 архив/содержимое1\n-rw------- пользователь/группа   43 2007-11-07 11:17 архив/содержимое2\nархив.tar.gz (END)\n```\n\nlesspipe также добавляет к less возможность взаимодействия с файлами отличными от архивов, предоставляя альтернативу для конкретной команды, ассоциированной с этим типом файлов (вроде просмотра HTML через python-html2text).\n\nПерелогиньтесь после установки lesspipe для его активации, или выполните source /etc/profile.d/lesspipe.sh.\n\n"
    },
    {
      "title": "Make",
      "level": 4,
      "content": "- colormake — простая обёртка над make, делающая его вывод более читабельным.\n\n"
    },
    {
      "title": "Ping",
      "level": 4,
      "content": "- prettyping — добавляет некоторые крутые возможности для мониторинга пинга. Обёртка над стандартным ping, делающая вывод более красивым, цветным, компактным и лёгким для чтения.\n\n"
    },
    {
      "title": "bash",
      "level": 3,
      "content": "Смотрите Bash (Русский)/Prompt customization (Русский)#Цвета.\n\n"
    },
    {
      "title": "Fish",
      "level": 3,
      "content": "Смотрите Fish (Русский)#Веб-интерфейс.\n\n"
    },
    {
      "title": "xonsh",
      "level": 3,
      "content": "Смотрите Customizing the Prompt.\n\n"
    },
    {
      "title": "zsh",
      "level": 3,
      "content": "Смотрите Zsh (Русский)#Цвета.\n\n"
    },
    {
      "title": "Виртуальная консоль",
      "level": 3,
      "content": "Если виртуальная консоль Linux работает через фреймбуффер, её цвета можно изменить. Это делается путём записи управляющей последовательности \\\\e]PXRRGGBB, где X это 16-ричный индекс цвета 0-F и RRGGBB это стандартный 16-ричный код RGB.\n\nНапример, для переиспользования существующих цветов из ~/.Xresources добавьте в настройках своей командной оболочки:\n\n```\nif [ \"$TERM\" = \"linux\" ]; then\n    _SEDCMD='s/.*\\*color\\([0-9]\\{1,\\}\\).*#\\([0-9a-fA-F]\\{6\\}\\).*/\\1 \\2/p'\n    for i in $(sed -n \"$_SEDCMD\" $HOME/.Xresources | awk '$1 < 16 {printf \"\\\\e]P%X%s\", $1, $2}'); do\n        echo -en \"$i\"\n    done\n    clear\nfi\n```\n\n"
    },
    {
      "title": "Окно входа",
      "level": 4,
      "content": "Это пример цветного экрана входа в /etc/issue. Сделайте резервную копию исходного файла mv /etc/issue /etc/issue.bak как root и создайте новый /etc/issue:\n\n```\n\\e[H\\e[2J\n                                                             \\e[1;30m| \\e[34m\\r \\s\n      \\e[36;1m/\\\\\\\\                        \\e[37m||      \\e[36m| =                 \\e[30m|\n     \\e[36m/  \\\\\\\\                       \\e[37m||      \\e[36m|                   \\e[30m| \\e[32m\\t\n    \\e[1;36m/ \\e[0;36m.. \\e[1m\\\\\\\\   \\e[37m//==\\\\\\\\\\\\ ||/= /==\\\\\\\\ ||/=\\\\\\\\  \\e[36m| | |/\\\\\\\\ |  | \\\\\\\\ /  \\e[30m| \\e[32m\\d\n   \\e[0;36m/ .  . \\\\\\\\ \\e[37m||    || ||  ||     ||  ||  \\e[36m| | |  | |  |   X   \\e[1;30m|\n  \\e[0;36m/  .  .  \\\\\\\\ \\e[37m\\\\\\\\\\\\==/| ||   \\\\\\\\==/ ||  ||  \\e[36m| | |  |\\  \\\\/|  / \\\\\\\\ \\e[1;30m| \\e[31m\\U\n \\e[0;36m/ ..    .. \\\\\\\\   \\e[0;37mA simple, lightweight linux distribution.   \\e[1;30m|\n\\e[0;36m/_'        `_\\\\\\\\                                              \\e[1;30m| \\e[35m\\l \\e[0mon \\e[1;33m\\n\n\\e[0m\n```\n\nСмотрите также:\n\n- https://bbs.archlinux.org/viewtopic.php?pid=386429#p386429\n- https://www.linuxfromscratch.org/blfs/view/svn/postlfs/logon.html\n\n"
    },
    {
      "title": "X",
      "level": 3,
      "content": "Многие Xorg-терминалы, в том числе xterm and urxvt, поддерживают как минимум 16 цветов. Они могут быть изменены через X resources или через настройки, специфичные для терминала. Например:\n\n```\n~/.Xresources\n```\n\n```\n! Black + DarkGrey\n*color0:  #000000\n*color8:  #555753\n! DarkRed + Red\n*color1:  #ff6565\n*color9:  #ff8d8d\n! DarkGreen + Green\n*color2:  #93d44f\n*color10: #c8e7a8\n! DarkYellow + Yellow\n*color3:  #eab93d\n*color11: #ffc123\n! DarkBlue + Blue\n*color4:  #204a87\n*color12: #3465a4\n! DarkMagenta + Magenta\n*color5:  #ce5c00\n*color13: #f57900\n!DarkCyan + Cyan (both not tango)\n*color6:  #89b6e2\n*color14: #46a4ff\n! LightGrey + White\n*color7:  #cccccc\n*color15: #ffffff\n```\n\nСмотрите также:\n\n- #Цветные страницы в xterm или rxvt-unicode о том, как автоматически раскрашивать жирный и подчёркнутый текст.\n- Color Themes - обширный список цветовых тем терминала от Phraktured.\n- Xcolors by dkeg (смотрите файлы theme/dkeg - тема в репозитории)\n- base16 color schemes\n\n"
    },
    {
      "title": "Отображение 256-цветной палитры",
      "level": 3,
      "content": "Печатает 256 цветов на экран.\n\n```\n$ (x=`tput op` y=`printf %76s`;for i in {0..256};do o=00$i;echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;done)\n```\n\n"
    },
    {
      "title": "Отображение управляющих последовательностей tput",
      "level": 3,
      "content": "Замените tput op на желаемую команду.\n\n```\n$ ( strace -s5000 -e write tput op 2>&2 2>&1 ) | tee -a /dev/stderr | grep -o '\"[^\"]*\"'\n```\n\n```\n033[\\033[1;34m\"\\33[39;49m\"\\033[00m\n```\n\n"
    },
    {
      "title": "Просмотр числа поддерживаемых цветов",
      "level": 3,
      "content": "Эта команда выведет вам список всех терминалов, известных базе terminfo, и число поддерживаемых ими цветов. Возможные значения: 8, 15, 16, 52, 64, 88 и 256.\n\n```\n$ for T in `find /usr/share/terminfo -type f -printf '%f '`;do echo \"$T `tput -T $T colors`\";done|sort -nk2\n```\n\n```\nEterm-88color 88\nrxvt-88color 88\nxterm+88color 88\nxterm-88color 88\nEterm-256color 256\ngnome-256color 256\nkonsole-256color 256\nputty-256color 256\nrxvt-256color 256\nscreen-256color 256\nscreen-256color-bce 256\nscreen-256color-bce-s 256\nscreen-256color-s 256\nxterm+256color 256\nxterm-256color 256\n```\n\n"
    },
    {
      "title": "Просмотр возможностей терминала",
      "level": 3,
      "content": "Эта команда покажет возможности вашего текущего терминала.\n\n```\n$ infocmp -1 | tr -d '\\0\\t,' | cut -f1 -d'=' | grep -v \"$TERM\" | sort | column -c80\n```\n\n```\nacsc\t\ted\t\tkcuu1\t\tkich1\t\trmso\nam\t\tel\t\tkDC\t\tkLFT\t\trmul\nbce\t\tel1\t\tkdch1\t\tkm\t\trs1\nbel\t\tenacs\t\tkel\t\tkmous\t\trs2\nblink\t\teo\t\tkend\t\tknp\t\ts0ds\nbold\t\tflash\t\tkEND\t\tkNXT\t\ts1ds\nbtns#5\t\tfsl\t\tkent\t\tkpp\t\ts2ds\nbw\t\thome\t\tkf1\t\tkPRV\t\ts3ds\nccc\t\thpa\t\tkf10\t\tkRIT\t\tsc\ncivis\t\ths\t\tkf11\t\tkslt\t\tsetab\nclear\t\tht\t\tkf12\t\tlines#24\tsetaf\ncnorm\t\thts\t\tkf13\t\tlm#0\t\tsetb\ncolors#0x100\tich\t\tkf14\t\tmc0\t\tsetf\ncols#80\t\tich1\t\tkf15\t\tmc4\t\tsgr\ncr\t\til\t\tkf16\t\tmc5\t\tsgr0\ncsr\t\til1\t\tkf17\t\tmc5i\t\tsitm\ncub\t\tind\t\tkf18\t\tmir\t\tsmacs\ncub1\t\tindn\t\tkf19\t\tmsgr\t\tsmam\ncud\t\tinitc\t\tkf2\t\tncv#0\t\tsmcup\ncud1\t\tis1\t\tkf20\t\tnpc\t\tsmir\ncuf\t\tis2\t\tkf3\t\top\t\tsmkx\ncuf1\t\tit#8\t\tkf4\t\tpairs#0x7fff\tsmso\ncup\t\tka1\t\tkf5\t\trc\t\tsmul\ncuu\t\tka3\t\tkf6\t\trev\t\ttbc\ncuu1\t\tkb2\t\tkf7\t\tri\t\ttsl\ncvvis\t\tkbs\t\tkf8\t\trin\t\tu6\ndch\t\tkc1\t\tkf9\t\tritm\t\tu7\ndch1\t\tkc3\t\tkfnd\t\trmacs\t\tu8\ndl\t\tkcbt\t\tkFND\t\trmam\t\tu9\ndl1\t\tkcub1\t\tkHOM\t\trmcup\t\tvpa\ndsl\t\tkcud1\t\tkhome\t\trmir\t\txenl\nech\t\tkcuf1\t\tkIC\t\trmkx\t\txon\n```\n\n"
    },
    {
      "title": "Скрипты, выводящие схему цветов",
      "level": 3,
      "content": "На странице [3] есть скрипты, которые отобразят вашу текущую схему цветов.\n\n"
    },
    {
      "title": "Поддержка True Color",
      "level": 3,
      "content": "Некоторые терминалы поддерживают все 16 миллионов цветов (RGB, 8 бит на канал): xterm, console, st и т.д. Соответствующие значения TERM xterm-direct, konsole-direct, st-direct и.т.д понимает ncurses с версии 6.1 [4]. Подробнее об эмуляторах терминала и приложениях, поддерживающих True Color, смотрите [5].\n\nИмейте в виду, что ядро Linux поддерживает управляющие последовательности SGR для True Color, но использовать это бессмысленно, потому что драйвер отобразит 24-битные цвета на 256-цветную палитру (смотрите функции rgb_foreground, rgb_background). Поэтому в terminfo нет записи linux-direct.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- клон lolcat на x64 ассемблере\n\n"
    }
  ]
}
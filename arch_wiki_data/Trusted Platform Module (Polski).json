{
  "title": "Trusted Platform Module (Polski)",
  "url": "https://wiki.archlinux.org/title/Trusted_Platform_Module_(Polski)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Powiązane artykuły\n\n- Rng-tools\n- Self-encrypting drives\n- Smartcards\n- Trusted Platform Module (Polski)/1.2 (Polski)\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nTrusted Platform Module (TPM) to międzynarodowy standard bezpiecznego kryptoprocesora, który jest dedykowanym mikroprocesorem zaprojektowanym do zabezpieczania sprzętu poprzez integrację kluczy kryptograficznych w urządzeniach.\n\nW praktyce TPM może być wykorzystywany do różnych zastosowań związanych z bezpieczeństwem, takich jak secure boot, przechowywanie kluczy i generowanie liczb losowych.\n\nTPM jest oczywiście obsługiwany tylko na urządzeniach, które mają sprzętową obsługę TPM. Jeśli twój sprzęt obsługuje TPM, ale nie jest wyświetlany, może być konieczne włączenie go w ustawieniach BIOS-u.\n\n"
    },
    {
      "title": "Wersje",
      "level": 2,
      "content": "Istnieją dwie bardzo różne specyfikacje TPM: 2.0 i 1.2, które również używają różnych stosów oprogramowania. Ten artykuł opisuje tylko TPM 2.0, dla starszego TPM 1.2 zobacz /1.2 (Polski).\n\nTPM 2.0 umożliwia bezpośredni dostęp przez /dev/tpm0 (jeden klient na raz), dostęp zarządzany przez jądro przez /dev/tpmrm0 lub dostęp zarządzany przez demona zarządzającego zasobami tpm2-abrmd. Według członka projektu systemd, używanie tpm2-abrmd nie jest już zalecane. Istnieją dwie opcje narzędzi przestrzeni użytkownika, tpm2-tools firmy Intel i ibm-tssAUR firmy IBM.\n\nTPM 2.0 wymaga rozruchu UEFI; systemy rozruchowe BIOS lub Legacy mogą korzystać tylko z TPM 1.2.\n\nNiektóre układy TPM można przełączać między wersjami 2.0 i 1.2 poprzez aktualizację oprogramowania układowego (którą można wykonać tylko ograniczoną liczbę razy).\n\n"
    },
    {
      "title": "Użycie",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nWiele zasobów informacyjnych na temat konfigurowania i korzystania z usług TPM 2.0 w codziennych zastosowaniach jest dostępnych na stronie społeczności tpm2-software.\n\n"
    },
    {
      "title": "Sprawdzanie wsparcia",
      "level": 3,
      "content": "Układ TPM 2.0 jest wymagany dla komputerów certyfikowanych do uruchamiania systemu Windows 10 od 2016-07-28.[1]. Linux obsługuje TPM 2.0 od wersji 3.20[2] i nie powinien wymagać żadnych innych kroków do włączenia w domyślnej instalacji Arch.\n\nDwa sposoby sprawdzenia, czy TPM 2.0 jest skonfigurowany bez specjalnego oprogramowania:\n\n- sprawdzenie logów, np. poprzez uruchomienie journalctl -k --grep=tpm jako root\n- odczytanie wartości /sys/class/tpm/tpm0/device/description[3] lub /sys/class/tpm/tpm0/tpm_version_major\n\n"
    },
    {
      "title": "Szyfrowanie danych w spoczynku (at-rest) za pomocą LUKS",
      "level": 3,
      "content": "Istnieją dwie metody odblokowania woluminu LUKS przy użyciu modułu TPM. Można użyć Clevis lub #systemd-cryptenroll.\n\nKorzystając z obu metod, zaszyfrowany wolumin lub woluminy można odblokować za pomocą kluczy przechowywanych w module TPM, automatycznie podczas rozruchu lub ręcznie w późniejszym czasie. Użycie TPM do tego celu gwarantuje, że dyski nie zostaną odblokowane, chyba że spełnione zostaną określone warunki, takie jak brak modyfikacji oprogramowania układowego i brak wyłączenia Secure Boot (patrz #Dostęp do rejestrów PCR).\n\nNote: **odblokuje się automatycznie** \n\n- Oznacza to, że dostęp do danych jest chroniony w przypadku kradzieży tylko zaszyfrowanego dysku, ale nie w przypadku kradzieży całego komputera.\n- Należy pamiętać, że ta metoda zwiększa podatność na ataki zimnego rozruchu, ponieważ nawet jeśli komputer był wyłączony przez długi czas (zapewniając całkowite wyczyszczenie pamięci), atakujący może po prostu włączyć go i poczekać, aż moduł TPM automatycznie załaduje klucz. Może to stanowić zagrożenie dla celów o wysokiej wartości.\n\n"
    },
    {
      "title": "systemd-cryptenroll",
      "level": 4,
      "content": "Zobacz systemd-cryptenroll#Trusted Platform Module.\n\n"
    },
    {
      "title": "SSH",
      "level": 3,
      "content": "W przypadku kluczy SSH zabezpieczonych TPM dostępne są dwie opcje:\n\n- ssh-tpm-agent — Agent kompatybilny z ssh-agent używający kluczy wspieranych przez TPM.\n\n- tpm2-pkcs11 — Interfejs PKCS#11 dla sprzętu Trusted Platform Module 2.0.\n\n"
    },
    {
      "title": "GnuPG",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nGnuPG, od wersji 2.3, obsługuje przenoszenie kompatybilnych kluczy do TPM. Instrukcje można znaleźć na stronie Używanie TPM z GnuPG 2.3.\n\n"
    },
    {
      "title": "Inne dobre przykłady wykorzystania TPM 2.0",
      "level": 3,
      "content": "- Konfiguracja bezpiecznego rozruchu + TPM 2[dead link 2025-03-15 ⓘ] (2018-06, Debian)\n- Using the TPM - It's Not Rocket Science (Anymore) - Johannes Holland & Peter Huewe (2020-11, Youtube): przykłady dla OpenSSL z tpm2-tss-engine.\n\n"
    },
    {
      "title": "Dostęp do rejestrów PCR",
      "level": 2,
      "content": "Rejestry konfiguracji platformy (PCR) zawierają skróty, które można odczytać w dowolnym momencie, ale można je zapisać tylko za pomocą operacji rozszerzenia, która zależy od poprzedniej wartości skrótu, tworząc w ten sposób rodzaj łańcucha bloków. Są one przeznaczone do sprawdzania integralności sprzętu i oprogramowania platformy między uruchomieniami (np. ochrona przed atakiem Evil Maid). Mogą być używane do odblokowywania kluczy szyfrujących i udowadniania, że uruchomiono prawidłowy system operacyjny.\n\nSpecyfikacja TCG PC Client Specific Platform Firmware Profile Specification definiuje używane rejestry, a rejestr Linux TPM PCR przypisuje używające ich komponenty systemu Linux.\n\nRejestry są następujące:\n\nTable content:\nPCR | Użycie | Uwagi\nPCR0 | Kod wykonywalny oprogramowania układowego systemu głównego (inaczej oprogramowanie układowe) | Może ulec zmianie po aktualizacji UEFI\nPCR1 | Dane oprogramowania układowego systemu podstawowego (inaczej ustawienia UEFI) | \nPCR2 | Rozszerzony lub rozszerzalny kod wykonywalny | \nPCR3 | Rozszerzone lub podłączane dane oprogramowania układowego | Ustawienie podczas fazy rozruchu Boot Device Select UEFI\nPCR4 | Kod menedżera rozruchu i próby rozruchu | Mierzy menedżera rozruchu i urządzenia, z których oprogramowanie sprzętowe próbowało uruchomić komputer.\nPCR5 | Konfiguracja i dane menedżera rozruchu | Może mierzyć konfigurację programów ładujących; zawiera tabelę partycji GPT\nPCR6 | Wznowienie od zdarzeń stanu zasilania S4 i S5 | \nPCR7 | Stan bezpiecznego rozruchu | Zawiera pełną zawartość PK/KEK/db, a także określone certyfikaty używane do walidacji każdej aplikacji rozruchowej[4].\nPCR81 | Hash wiersza poleceń jądra | Obsługiwane przez grub i systemd-boot.\nPCR91 | Hash opcji ładowania initrd i EFI | Linux mierzy opcje ładowania initrd i EFI, zasadniczo opcje cmdline jądra.\nPCR101 | Zarezerwowane do wykorzystania w przyszłości | \nPCR111 | Hash zunifikowanego obrazu jądra. | zobacz systemd-stub(7)\nPCR121 | Nadpisany wiersz poleceń jądra, Poświadczenia | zobacz systemd-stub(7)\nPCR131 | Rozszerzenia systemowe | zobacz systemd-stub(7)\nPCR141 | shim - MokList, MokListX i MokSBState. | [5]\nPCR151 |  | Nieużywany\nPCR161 | Debug | Może być używany i resetowany w dowolnym momencie. Może nie występować w oficjalnej wersji oprogramowania sprzętowego.\nPCR23 | Obsługa aplikacji | System operacyjny może ustawić i zresetować ten PCR.\n\n1. Przypadek użycia zdefiniowany przez system operacyjny i może się różnić w zależności od różnych dystrybucji Linuksa i urządzeń z systemem Windows.\n\nW systemie Windows BitLocker używa PCR8-11 (Legacy) lub PCR11-14 (UEFI) do własnych celów. Dokumentacja od tianocore[6].\n\ntpm2-totp ułatwia tę kontrolę za pomocą ludzkiego obserwatora i dedykowanego zaufanego urządzenia.\n\nBieżące wartości PCR można wyświetlić za pomocą systemd-analyze(1):\n\n```\n$ systemd-analyze pcrs\n```\n\nLub alternatywnie z tpm2_pcrread(1) z tpm2-tools:\n\n```\n# tpm2_pcrread\n```\n\n"
    },
    {
      "title": "Odblokowanie TPM2 LUKS2 nadal wymaga podania hasła",
      "level": 3,
      "content": "Jeśli postępowałeś zgodnie z instrukcja opisana powyżej w celu automatycznego odblokowania urządzeń luks2 z zarejestrowanymi kluczami w module sprzętowym TPM2, ale nadal otrzymujesz monit o wprowadzenie hasła podczas etapu rozruchu initramfs. Konieczne może być wczesne załadowanie modułu jądra (jego nazwę można uzyskać za pomocą systemd-cryptenroll --tpm2-device=list), który jest odpowiedzialny za obsługę konkretnego modułu TPM2.\n\n"
    },
    {
      "title": "Zobacz także",
      "level": 2,
      "content": "- Gentoo:Trusted Platform Module\n- Narzędzie do testowania TPM-JS: kod źródłowy - wersja internetowa.\n\n"
    }
  ]
}
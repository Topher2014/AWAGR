{
  "title": "Lm sensors (Português)",
  "url": "https://wiki.archlinux.org/title/Lm_sensors_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Controle da velocidade do cooler\n- hddtemp\n- monitorix\n\nlm_sensors[link inativo 2025-01-22 ⓘ] (Linux monitoring sensors) é um aplicativo livre e de código aberto que fornece ferramentas e drivers para monitorar temperaturas, tensão e ventiladores. Este documento explica como instalar, configurar e usar o lm_sensors.\n\n"
    },
    {
      "title": "Instalação",
      "level": 2,
      "content": "Instale o pacote lm_sensors.\n\n"
    },
    {
      "title": "Configuração",
      "level": 2,
      "content": "Use sensors-detect como root para detectar e gere uma lista de módulos de kernel:\n\n```\n# sensors-detect\n```\n\nEle pedirá para sondar vários hardwares. As respostas \"seguras\" são os padrões, então apenas pressionar Enter para todas as perguntas geralmente não causará nenhum problema. Isso criará o arquivo de configuração /etc/conf.d/lm_sensors que é usado por lm_sensors.service para carregar automaticamente os módulos do kernel na inicialização.\n\nQuando a detecção é concluída, um resumo das sondas é apresentado.\n\nExemplo:\n\n```\n# sensors-detect\n```\n\n```\nThis program will help you determine which kernel modules you need\nto load to use lm_sensors most effectively. It is generally safe\nand recommended to accept the default answers to all questions,\nunless you know what you're doing.\n\nSome south bridges, CPUs or memory controllers contain embedded sensors.\nDo you want to scan for them? This is totally safe. (YES/no): \nModule cpuid loaded successfully.\nSilicon Integrated Systems SIS5595...                       No\nVIA VT82C686 Integrated Sensors...                          No\nVIA VT8231 Integrated Sensors...                            No\nAMD K8 thermal sensors...                                   No\nAMD Family 10h thermal sensors...                           No\n\n...\n\nNow follows a summary of the probes I have just done.\nJust press ENTER to continue: \n\nDriver `coretemp':\n  * Chip `Intel digital thermal sensor' (confidence: 9)\n\nDriver `lm90':\n  * Bus `SMBus nForce2 adapter at 4d00'\n    Busdriver `i2c_nforce2', I2C address 0x4c\n    Chip `Winbond W83L771AWG/ASG' (confidence: 6)\n\nDo you want to overwrite /etc/conf.d/lm_sensors? (YES/no): \nln -s '/usr/lib/systemd/system/lm_sensors.service' '/etc/systemd/system/multi-user.target.wants/lm_sensors.service'\nUnloading i2c-dev... OK\nUnloading cpuid... OK\n```\n\nNote: **YES** \n\n"
    },
    {
      "title": "Execução de sensors",
      "level": 2,
      "content": "Exemplo de execução do sensors:\n\n```\n$ sensors\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:       +35.0°C  (crit = +105.0°C)\nCore 1:       +32.0°C  (crit = +105.0°C)\n\nw83l771-i2c-0-4c\nAdapter: SMBus nForce2 adapter at 4d00\ntemp1:        +28.0°C  (low  = -40.0°C, high = +70.0°C)\n                       (crit = +85.0°C, hyst = +75.0°C)\ntemp2:        +37.4°C  (low  = -40.0°C, high = +70.0°C)\n                       (crit = +110.0°C, hyst = +100.0°C)\n```\n\n"
    },
    {
      "title": "Lendo valores SPD de módulos de memória (opcional)",
      "level": 3,
      "content": "Para ler os valores de tempo de SPD de módulos de memória, instale o pacote i2c-tools. Uma vez instalado, carregue módulo de kernel eeprom.\n\n```\n# modprobe eeprom\n```\n\nFinalmente, veja informações de memória com decode-dimms.\n\nAqui está uma saída parcial de uma máquina:\n\n```\n# decode-dimms\n```\n\n```\nMemory Serial Presence Detect Decoder\nBy Philip Edelbrock, Christian Zuckschwerdt, Burkart Lingner,\nJean Delvare, Trent Piepho and others\n\nDecoding EEPROM: /sys/bus/i2c/drivers/eeprom/0-0050\nGuessing DIMM is in                             bank 1\n\n---=== SPD EEPROM Information ===---\nEEPROM CRC of bytes 0-116                       OK (0x583F)\n# of bytes written to SDRAM EEPROM              176\nTotal number of bytes in EEPROM                 512\nFundamental Memory type                         DDR3 SDRAM\nModule Type                                     UDIMM\n\n---=== Memory Characteristics ===---\nFine time base                                  2.500 ps\nMedium time base                                0.125 ns\nMaximum module speed                            1066MHz (PC3-8533)\nSize                                            2048 MB\nBanks x Rows x Columns x Bits                   8 x 14 x 10 x 64\nRanks                                           2\nSDRAM Device Width                              8 bits\ntCL-tRCD-tRP-tRAS                               7-7-7-33\nSupported CAS Latencies (tCL)                   8T, 7T, 6T, 5T\n\n---=== Timing Parameters ===---\nMinimum Write Recovery time (tWR)               15.000 ns\nMinimum Row Active to Row Active Delay (tRRD)   7.500 ns\nMinimum Active to Auto-Refresh Delay (tRC)      49.500 ns\nMinimum Recovery Delay (tRFC)                   110.000 ns\nMinimum Write to Read CMD Delay (tWTR)          7.500 ns\nMinimum Read to Pre-charge CMD Delay (tRTP)     7.500 ns\nMinimum Four Activate Window Delay (tFAW)       30.000 ns\n\n---=== Optional Features ===---\nOperable voltages                               1.5V\nRZQ/6 supported?                                Yes\nRZQ/7 supported?                                Yes\nDLL-Off Mode supported?                         No\nOperating temperature range                     0-85C\nRefresh Rate in extended temp range             1X\nAuto Self-Refresh?                              Yes\nOn-Die Thermal Sensor readout?                  No\nPartial Array Self-Refresh?                     No\nThermal Sensor Accuracy                         Not implemented\nSDRAM Device Type                               Standard Monolithic\n\n---=== Physical Characteristics ===---\nModule Height (mm)                              15\nModule Thickness (mm)                           1 front, 1 back\nModule Width (mm)                               133.5\nModule Reference Card                           B\n\n---=== Manufacturer Data ===---\nModule Manufacturer                             Invalid\nManufacturing Location Code                     0x02\nPart Number                                     OCZ3G1600LV2G     \n\n...\n```\n\n"
    },
    {
      "title": "Front-ends gráficos",
      "level": 3,
      "content": "Há uma variedade de front-ends para dados de sensores.\n\n- psensor — Aplicativo GTK+ para monitorar sensores de hardware, incluindo temperaturas e velocidades do cooler. Monitora placa-mãe e CPU (usando lm-sensors), Nvidia GPUs (usando XNVCtrl) e harddisks (usando hddtemp ou libatasmart).\n\n- xsensors — Interface X11 para o lm_sensors.\n\nPara Ambientes de desktop específicos:\n\n- Freon (Extensão do GNOME Shell) — Extensão para exibir temperatura de CPU, temperatura do disco, temperatura da placa de vídeo, voltagem e RPM do cooler no GNOME Shell.\n\n- GNOME Sensors Applet — Miniaplicativo para o painel do GNOME para exibir leituras dos sensores do hardware, incluindo leituras de temperatura de CPU, velocidades de coolers e voltagem.\n\n- lm-sensors (plugin de LXPanel) — Monitora temperatura/voltagens/velocidades de cooler no LXDE por meio de lm-sensors.\n\n- MATE Sensors Applet — Exibe leituras de sensores de hardware no seu painel do MATE.\n\n- Sensors (Plugin do painel do Xfce4) — Plugin de sensores de hardware para o painel do Xfce.\n\n- Thermal Monitor (Miniaplicativo do Plasma 5) — Miniaplicativo do Plasma para KDE para monitoramento de CPU, GPU e outros sensores de temperatura disponíveis.\n\n"
    },
    {
      "title": "sensord",
      "level": 3,
      "content": "Existe um daemon opcional chamado sensord (incluído no pacote lm_sensors) que pode registrar dados em um banco de dados round robin (rrd) e depois visualizar graficamente. Veja a página man sensord(8) para detalhes.\n\n"
    },
    {
      "title": "Ajustando valores",
      "level": 3,
      "content": "Em alguns casos, os dados exibidos podem estar incorretos ou os usuários podem desejar renomear a saída. Casos de uso incluem:\n\n- Valores incorretos de temperatura devido a um deslocamento incorreto (isto é, os tempos são relatados 20°C mais altos do que os reais).\n- Usuários desejam renomear a saída de alguns sensores.\n- Os cores podem ser exibidos em uma ordem incorreta.\n\nTodos os itens acima (e mais) podem ser ajustados sobrepondo as configurações do pacote em /etc/sensors3.conf criando /etc/sensors.d/foo em que qualquer número de os ajustes substituirão os valores padrão. Recomenda-se renomear 'foo' para a marca e modelo da placa-mãe, mas esta nomenclatura de nomenclatura é opcional.\n\n"
    },
    {
      "title": "Exemplo 1. Ajustante posições de temperatura",
      "level": 4,
      "content": "Este é um exemplo real de uma placa-mãe Zotac ION-ITX-A-U. Os valores de coretemp estão desativados em 20°C (muito alto) e são ajustados de acordo com as especificações da Intel.\n\n```\n$ sensors\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:       +57.0°C  (crit = +125.0°C)\nCore 1:       +55.0°C  (crit = +125.0°C)\n...\n```\n\nExecute sensors com a opção -u para ver quais opções estão disponíveis para cada chip físico (modo \"raw\"):\n\n```\n$ sensors -u\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:\n  temp2_input: 57.000\n  temp2_crit: 125.000\n  temp2_crit_alarm: 0.000\nCore 1:\n  temp3_input: 55.000\n  temp3_crit: 125.000\n  temp3_crit_alarm: 0.000\n...\n```\n\nCrie o seguinte arquivo substituindo os valores padrão:\n\n```\n/etc/sensors.d/Zotac-IONITX-A-U\n```\n\n```\nchip \"coretemp-isa-0000\"\n  label temp2 \"Core 0\"\n  compute temp2 @-20,@-20\n\n  label temp3 \"Core 1\"\n  compute temp3 @-20,@-20\n```\n\nAgora, chamar sensors mostra os valores ajustados:\n\n```\n$ sensors\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:       +37.0°C  (crit = +105.0°C)\nCore 1:       +35.0°C  (crit = +105.0°C)\n...\n```\n\n"
    },
    {
      "title": "Exemplo 2. Renomeando rótulos",
      "level": 4,
      "content": "Este é um exemplo real em um Asus A7M266. O usuário deseja nomes mais detalhados para os rótulos de temperatura temp1 e temp2:\n\n```\n$ sensors\n```\n\n```\nas99127f-i2c-0-2d\nAdapter: SMBus Via Pro adapter at e800\n...\ntemp1:        +35.0°C  (high =  +0.0°C, hyst = -128.0°C)\ntemp2:        +47.5°C  (high = +100.0°C, hyst = +75.0°C)\n...\n```\n\nCrie o seguinte arquivo para substituir os valores padrão:\n\n```\n/etc/sensors.d/Asus_A7M266\n```\n\n```\nchip \"as99127f-*\"\n  label temp1 \"Mobo Temp\"\n  label temp2 \"CPU0 Temp\"\n```\n\nAgora, chamar sensors mostra os valores ajustados:\n\n```\n$ sensors\n```\n\n```\nas99127f-i2c-0-2d\nAdapter: SMBus Via Pro adapter at e800\n...\nMobo Temp:        +35.0°C  (high =  +0.0°C, hyst = -128.0°C)\nCPU0 Temp:        +47.5°C  (high = +100.0°C, hyst = +75.0°C)\n...\n```\n\n"
    },
    {
      "title": "Exemplo 3. Renumerando núcleos para sistemas com várias CPUs",
      "level": 4,
      "content": "Este é um exemplo real de uma estação de trabalho HP Z600 com Xeons duplos. A numeração real dos núcleos físicos está incorreta: numerada 0, 1, 9, 10, que é repetida na segunda CPU. A maioria dos usuários espera que as temperaturas do núcleo relatem em ordem sequencial, ou seja, 0,1,2,3,4,5,6,7.\n\n```\n$ sensors\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:       +65.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 1:       +65.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 9:       +66.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 10:      +66.0°C  (high = +85.0°C, crit = +95.0°C)\n\ncoretemp-isa-0004\nAdapter: ISA adapter\nCore 0:       +54.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 1:       +56.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 9:       +60.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 10:      +61.0°C  (high = +85.0°C, crit = +95.0°C)\n...\n```\n\nAgora, execute sensors com a opção -u para ver quais opções estão disponíveis para cada chip físico:\n\n```\n$ sensors -u coretemp-isa-0000\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:\n  temp2_input: 61.000\n  temp2_max: 85.000\n  temp2_crit: 95.000\n  temp2_crit_alarm: 0.000\nCore 1:\n  temp3_input: 61.000\n  temp3_max: 85.000\n  temp3_crit: 95.000\n  temp3_crit_alarm: 0.000\nCore 9:\n  temp11_input: 62.000\n  temp11_max: 85.000\n  temp11_crit: 95.000\nCore 10:\n  temp12_input: 63.000\n  temp12_max: 85.000\n  temp12_crit: 95.000\n```\n\n```\n$ sensors -u coretemp-isa-0004\n```\n\n```\ncoretemp-isa-0004\nAdapter: ISA adapter\nCore 0:\n  temp2_input: 53.000\n  temp2_max: 85.000\n  temp2_crit: 95.000\n  temp2_crit_alarm: 0.000\nCore 1:\n  temp3_input: 54.000\n  temp3_max: 85.000\n  temp3_crit: 95.000\n  temp3_crit_alarm: 0.000\nCore 9:\n  temp11_input: 59.000\n  temp11_max: 85.000\n  temp11_crit: 95.000\nCore 10:\n  temp12_input: 59.000\n  temp12_max: 85.000\n  temp12_crit: 95.000\n...\n```\n\nCrie o seguinte arquivo substituindo os valores padrão:\n\n```\n/etc/sensors.d/HP_Z600\n```\n\n```\nchip \"coretemp-isa-0000\"\n  label temp2 \"Core 0\"\n  label temp3 \"Core 1\"\n  label temp11 \"Core 2\"\n  label temp12 \"Core 3\"\n\nchip \"coretemp-isa-0004\"\n  label temp2 \"Core 4\"\n  label temp3 \"Core 5\"\n  label temp11 \"Core 6\"\n  label temp12 \"Core 7\"\n```\n\nAgora, chamar sensors mostra os valores ajustados:\n\n```\n$ sensors\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore0:        +64.0°C  (high = +85.0°C, crit = +95.0°C)\nCore1:        +63.0°C  (high = +85.0°C, crit = +95.0°C)\nCore2:        +65.0°C  (high = +85.0°C, crit = +95.0°C)\nCore3:        +66.0°C  (high = +85.0°C, crit = +95.0°C)\n\ncoretemp-isa-0004\nAdapter: ISA adapter\nCore4:        +53.0°C  (high = +85.0°C, crit = +95.0°C)\nCore5:        +54.0°C  (high = +85.0°C, crit = +95.0°C)\nCore6:        +59.0°C  (high = +85.0°C, crit = +95.0°C)\nCore7:        +60.0°C  (high = +85.0°C, crit = +95.0°C)\n...\n```\n\n"
    },
    {
      "title": "Implantação automática de lm_sensors",
      "level": 3,
      "content": "Os usuários que desejam implantar lm_sensors em várias máquinas podem usar o seguinte para aceitar os valores padrão para todas as perguntas:\n\n```\n# sensors-detect --auto\n```\n\n"
    },
    {
      "title": "Módulo K10Temp",
      "level": 3,
      "content": "Alguns processadores K10 têm problemas com seu sensor de temperatura. Da documentação do kernel (linux-<version>/Documentation/hwmon/k10temp):\n\nEm máquinas afetadas, o módulo relatará \"unreliable CPU thermal sensor; monitoring disabled\". Para forçar o monitoramento mesmo assim, você pode executar o seguinte:\n\n```\n# rmmod k10temp\n# modprobe k10temp force=1\n```\n\nConfirme se o sensor é de fato válido e confiável. Se estiver, pode editar /etc/modprobe.d/k10temp.conf e adicionar:\n\n```\noptions k10temp force=1\n```\n\nIsso vai permitir o módulo para carregar na inicialização.\n\n"
    },
    {
      "title": "Placas-mãe Asus B450/X399/X470 com Ryzen CPU",
      "level": 3,
      "content": "Algumas placas-mãe recentes da Asus usam um chip ITE IT8665E, para acessar os sensores de temperatura, ventilador e tensão, pode ser necessário o módulo asus-wmi-sensors. Instale asus-wmi-sensors-dkms-gitAUR[link quebrado: package not found] e carregue o módulo de kernel asus-wmi-sensors. O módulo usa a interface UEFI e pode exigir uma atualização do BIOS em algumas placas [1].\n\nComo alternativa, o módulo it87 lê os valores diretamente do chip, instale it87-dkms-gitAUR e carregue o módulo de kernel it87.\n\n"
    },
    {
      "title": "Placas-mãe Asus Z97/Z170/X570",
      "level": 3,
      "content": "Com algumas placas-mãe recentes da Asus, o acesso ao ventilador e ao sensor de tensão pode exigir que o módulo de kernel nct6775 esteja carregado.\n\nAlém disso, adicione-o aos parâmetros do kernel de inicialização:\n\n```\nacpi_enforce_resources=lax\n```\n\n"
    },
    {
      "title": "Placas-mãe Gigabyte B250/Z370",
      "level": 3,
      "content": "Algumas placa-mãe da Gigabyte usam o chip ITE IT8686E, ao qual o driver it87 do kernel não dá suporte, até maio de 2019 [2]. Porém, há suporte na versão do upstream do driver de kernel [3]. A variante dkms está contida em it87-dkms-gitAUR.\n\n"
    },
    {
      "title": "Gigabyte GA-J1900N-D3V",
      "level": 3,
      "content": "Essa placa-mãe usa o chip ITE IT8620E (útil também para ler voltagens, temperatura da placa principal, velocidade do cooler). Até outubro de 2014, lm_sensors não tem suporte de driver para o chip ITE IT8620E [4][link inativo 2024-10-12 ⓘ] [5]. Os desenvolvedores do lm_sensors tinham um relatório de que o chip é um pouco compatível com o IT8728F para a parte de monitoramento de hardware. No entanto, a partir de agosto de 2016, [6] lista o IT8620E como suportado.\n\nVocê pode carregar o módulo em tempo de execução com modprobe:\n\n```\n$ modprobe it87 force_id=0x8728\n```\n\nOu você pode carregar os módulos durante o processo de inicialização criando os seguintes arquivos:\n\n```\n/etc/modules-load.d/it87.conf\n```\n\n```\nit87\n```\n\n```\n/etc/modprobe.d/it87.conf\n```\n\n```\noptions it87 force_id=0x8603\n```\n\nQuando o módulo estiver carregado, você pode usar a ferramenta sensores para testar o chip.\n\nVocê também pode usar fancontrol para controlar os \"speedsteps\" de do cooler do gabinete.\n\n"
    },
    {
      "title": "Problemas na tela do laptop após a execução de sensors-detect",
      "level": 3,
      "content": "Isso é causado por lm_sensors mexendo nos valores Vcom da tela enquanto sondam sensores. Já foi discutido e resolvido nos fóruns: https://bbs.archlinux.org/viewtopic.php?id=193048. No entanto, certifique-se de ler o tópico cuidadosamente antes de executar qualquer um dos comandos sugeridos.\n\n"
    }
  ]
}
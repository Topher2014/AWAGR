{
  "title": "Основные утилиты",
  "url": "https://wiki.archlinux.org/title/%D0%9E%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D1%8B%D0%B5_%D1%83%D1%82%D0%B8%D0%BB%D0%B8%D1%82%D1%8B",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Командная оболочка\n- Пользователи и группы\n- systemd (Русский)\n- pacman (Русский)\n- Основные рекомендации\n\nОсновные утилиты (core utilities) — набор базовых, фундаментальных инструментов операционной системы GNU/Linux. В статье дан неполный обзор этих утилит, приведены ссылки на документацию и перечислены полезные альтернативы. В основном (но не только) в статье рассматривается набор GNU coreutils. Большинство основных утилит являются традиционными инструментами Unix; многие из них были стандартизированы POSIX, но продолжили развиваться, расширяя свою функциональность.\n\nБольшинство интерфейсов командной строки задокументировано в man-страницах. Утилиты GNU Project используют для этой цели Info-мануалы, а в некоторых оболочках для справки по встроенным командам предусмотрена команда help. Кроме того, большинство утилит выводит краткую справочную информацию о себе при запуске с флагом --help.\n\n"
    },
    {
      "title": "Основные",
      "level": 2,
      "content": "Некоторые важные утилиты, с которыми должен быть знаком пользователь Arch Linux. См. также intro(1).\n\nTable content:\nПакет | Утилита | Описание | Документация | Альтернативы\nвстроенные команды | cd | смена каталога | cd(1p) | #Альтернативы cd\nGNU coreutils | ls | вывод содержимого каталога | ls(1), info | tree, #Альтернативы ls\ncat | вывод содержимого файлов в stdout | cat(1), info | tac(1), bat\nmkdir | создание каталога | mkdir(1), info\nrmdir | удаление пустого каталога | rmdir(1), info\nrm | удаление файлов и каталогов | rm(1), info | shred\ncp | копирование файлов и каталогов | cp(1), info | #Альтернативы cp\nmv | перемещение файлов и каталогов | mv(1), info\nln | создание жёстких и символических ссылок | ln(1), info\nchown | изменение владельца и группы файла | chown(1), info | chgrp(1)\nchmod | изменение прав доступа к файлу | chmod(1), info\ndd | преобразование и копирование файла | dd(1), info\ndf | вывод информации об использовании файловой системой дискового пространства | df(1), info\nGNU tar | tar | архиватор tar | tar(1), info | архиваторы\nGNU less | less | постраничный просмотр в терминале | less(1) | программы постраничного просмотра\nGNU findutils | find | поиск файлов и каталогов | find(1), info, GregsWiki | #Альтернативы find\nGNU diffutils | diff | построчное сравнение файлов | diff(1), info | #Альтернативы diff\nGNU grep | grep | вывод строк, совпадающих с шаблоном | grep(1), info | #Альтернативы grep\nGNU sed | sed | потоковый редактор | sed(1), info, one-liners\nGNU gawk | awk | язык поиска и обработки шаблонов | gawk(1), info | nawk, mawkAUR\nutil-linux | dmesg | вывод содержимого буфера ядра и управление им | dmesg(1) | журнал systemd\nlsblk | вывод информации о блочных устройствах | lsblk(8)\nmount | монтирование файловой системы | mount(8)\numount | размонтирование файловой системы | umount(8)\nsu | замена пользователя | su(1) | sudo, opendoas\nkill | завершение процесса | kill(1) | pkill(1), killall(1)\nprocps-ng | pgrep | поиск процесса по имени или атрибутам | pgrep(1) | pidof(1)\nps | вывод информации о процессах | ps(1) | top(1), htop\nfree | вывод информации о свободной/используемой памяти | free(1)\n\n"
    },
    {
      "title": "Предотвращение потери данных",
      "level": 3,
      "content": "rm, mv, cp и перенаправления ввода/вывода в оболочке удаляют или перезаписывают файлы молча, не уведомляя пользователя. С флагом -i команды rm, mv и cp будут запрашивать разрешение перед каждым удалением/перезаписью. Некоторые предпочитают использовать этот флаг по умолчанию, создав соответствующий псевдоним. Тем не менее, такой подход чреват потенциальными проблемами, если в какой-то момент вы будете работать на другой системе или от другого пользователя, в которых подобный псевдоним отсутствует. Лучший способ защитить данные от случайного удаления — регулярно создавать резервные копии.\n\n"
    },
    {
      "title": "Второстепенные",
      "level": 2,
      "content": "Утилиты, которые также могут быть полезны.\n\nTable content:\nПакет | Утилита | Описание | Документация | Альтернативы\nвстроенные команды | alias | создание или вывод списка псевдонимов | alias(1p)\ntype | определение типа команды | type(1p) | which(1)\ntime | вывод времени выполнения команды | time(1p)\nGNU coreutils | tee | считывание stdin и запись в stdout и файлы | tee(1), info\nmktemp | создание временного файла или каталога | mktemp(1), info\ncut | вывод отдельных частей строк | cut(1), info\ntr | замена или удаление символов | tr(1), info\nod | отображение файлов в восьмеричном и других форматах | od(1), info | hexdump(1), xxd(1) в vim\nsort | сортировка строк | sort(1), info\nuniq | поиск или исключение повторяющихся строк | uniq(1), info\ncomm | построчное сравнение двух отсортированных файлов | comm(1), info\nhead | вывод первых строк файла | head(1), info\ntail | вывод последних строк файла или отслеживание изменений в файле | tail(1), info\nwc | вывод количества строк, слов и байтов | wc(1), info\nGNU binutils | strings | вывод содержащихся в двоичном файле текстовых строк | strings(1), info\nGNU glibc | iconv | конвертация кодировок символов | iconv(1) | recode\nfile | file | определение типа файла | file(1)\n\nПакет moreutils содержит другие полезные инструменты вроде sponge(1), которые не вошли в GNU coreutils.\n\n"
    },
    {
      "title": "Альтернативы",
      "level": 2,
      "content": "Альтернативные основные утилиты предоставляются следующими пакетами: BusyBox, Heirloom Toolchest, 9base, sbase-gitAUR и ubase-gitAUR.\n\n"
    },
    {
      "title": "Альтернативы cd",
      "level": 3,
      "content": "- zoxide — Умная команда cd, которая изучает ваши привычки и позволяет перемещаться повсюду буквально несколькими нажатиями клавиш.\n\n"
    },
    {
      "title": "Альтернативы cp",
      "level": 3,
      "content": "rsync#Как альтернатива cp/mv позволяет продолжить прерванную передачу файла, выводить состояние передачи, пропускать уже существующие файлы и проверять целостность итоговых файлов по контрольным суммам.\n\n"
    },
    {
      "title": "Альтернативы ls",
      "level": 3,
      "content": "- broot — Новый способ просмотра дерева каталогов и перемещения по нему.\n\n- exa — Замена ls с поддержкой цветности, отображением дерева каталогов, интеграцией с git и другими возможностями.\n\n- lsd — Современный ls с большим набором цветов и замечательными иконками.\n\n"
    },
    {
      "title": "Альтернативы find",
      "level": 3,
      "content": "- fd — Простая, быстрая и удобная альтернатива find. По умолчанию игнорирует скрытые файлы и файлы, указанные в .gitignore.\n\n- fuzzy-find — Fuzzy-завершение имён файлов при поиске.\n\n- plocate — Намного более быстрый locate.\n\nГрафические программы для поиска файлов перечислены в List of applications/Utilities#File searching.\n\n"
    },
    {
      "title": "Альтернативы diff",
      "level": 3,
      "content": "Некоторые программы предоставляют сравнение по словам, которого нет в diffutils:\n\n- git diff выполняет сравнение по словам с флагом --color-words; с флагом --no-index работает также и с файлами вне рабочего дерева Git.\n- dwdiff — Фронт-енд для diff со сравнением по словам; поддержка цветности.\n\n- GNU wdiff — Реализация GNU diff со сравнением по словам; нет поддержки цветности.\n\n- cwdiff — Обёртка для GNU wdiff с поддержкой цветности.\n\n- icdiff — diff с поддержкой цветности, написанный на Python. Название расшифровывается как \"Improved color diff\"; обычный режим работы diff также доступен.\n\nСм. также List of applications/Utilities#Comparison, diff, merge.\n\n"
    },
    {
      "title": "Альтернативы grep",
      "level": 3,
      "content": "- mgrep — grep с многострочным поиском.\n\n- pdfgrep — Инструмент для поиска текста в PDF-файлах.\n\n- ripgrep-all — Поиск в текстовых файлах, а также в PDF, E-Book, документах Office, архивах zip и tar.gz.\n\n"
    },
    {
      "title": "Поиск кода",
      "level": 4,
      "content": "Следующие три инструмента предназначены для замены grep при поиске кода. По умолчанию используют рекурсивный поиск, пропускают двоичные файлы и учитывают .gitignore.\n\n- ack — Написанная на Perl замена grep для программистов с большим деревом разнородных файлов с исходным кодом.\n\n- ripgrep (rg) — Инструмент поиска, который соединил в себе удобство ag и скорость grep.\n\n- The Silver Searcher (ag) — Инструмент поиска кода, схожий с Ack, но более быстрый.\n\n"
    },
    {
      "title": "Интерактивные фильтры",
      "level": 4,
      "content": "- fzf — Универсальный fuzzy-поисковик на основе find для работы в командной строке.\n\n- fzy — Быстрый, простой поисковик текста с хорошим алгоритмом поиска.\n\n- peco — Упрощённый инструмент для интерактивной фильтрации.\n\n- percol — Добавляет интерактивную фильтрацию к традиционной концепции конвейера UNIX-оболочки.\n\n- skim — Написанный на Rust fuzzy-поисковик, похожий на fzf.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Документация GNU Coreutils\n- Утилиты POSIX\n\n"
    }
  ]
}
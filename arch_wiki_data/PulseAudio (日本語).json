{
  "title": "PulseAudio (日本語)",
  "url": "https://wiki.archlinux.org/title/PulseAudio_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- PulseAudio/サンプル\n- PulseAudio/トラブルシューティング\n- PipeWire\n\nPulseAudio は、ALSA や OSS を用いてアプリケーションとハードウェアデバイスの間でミドルウェアとして動作することを目的とした汎用サウンドサーバーです。また、Avahi を有効にするとことで、ローカルデバイス間で簡単にネットワークストリーミングを行うことができます。主な目的はオーディオの設定を簡単にすることですが、そのモジュール設計により、より高度なユーザが自分のニーズに合わせてデーモンを設定することができます。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール 1.1 フロントエンド\n- 2 設定 2.1 設定ファイル 2.1.1 daemon.conf 2.1.2 default.pa 2.1.3 client.conf 2.2 設定コマンド\n- 3 実行 3.1 手動で起動\n- 4 イコライザー 4.1 equalizer sink と dbus-protocol モジュールをロードする 4.2 GUI フロントエンド 4.3 起動時に イコライザーと dbus モジュールをロードする\n- 5 バックエンドの設定 5.1 ALSA 5.2 ALSA/dmix でハードウェアデバイスを占有しない 5.3 OSS 5.3.1 ossp 5.3.2 padsp ラッパー 5.4 GStreamer 5.5 OpenAL 5.6 libao 5.7 ESD\n- 6 デスクトップ環境 6.1 X11 6.2 GNOME 6.3 KDE 3 6.4 KDE Plasma ワークスペースと Qt4 6.5 Xfce\n- 7 アプリケーション 7.1 Audacious 7.2 Java/OpenJDK 6 7.3 Music Player Daemon (MPD) 7.4 MPlayer 7.5 Skype (x86_64) 7.6 guvcview\n- 8 ヒントとテクニック 8.1 キーボードのボリュームコントロール 8.2 X11 ベルイベント 8.3 Switch on connect\n- 9 トラブルシューティング\n- 10 参照\n\n- 1.1 フロントエンド\n\n- 2.1 設定ファイル 2.1.1 daemon.conf 2.1.2 default.pa 2.1.3 client.conf\n- 2.2 設定コマンド\n\n- 2.1.1 daemon.conf\n- 2.1.2 default.pa\n- 2.1.3 client.conf\n\n- 3.1 手動で起動\n\n- 4.1 equalizer sink と dbus-protocol モジュールをロードする\n- 4.2 GUI フロントエンド\n- 4.3 起動時に イコライザーと dbus モジュールをロードする\n\n- 5.1 ALSA\n- 5.2 ALSA/dmix でハードウェアデバイスを占有しない\n- 5.3 OSS 5.3.1 ossp 5.3.2 padsp ラッパー\n- 5.4 GStreamer\n- 5.5 OpenAL\n- 5.6 libao\n- 5.7 ESD\n\n- 5.3.1 ossp\n- 5.3.2 padsp ラッパー\n\n- 6.1 X11\n- 6.2 GNOME\n- 6.3 KDE 3\n- 6.4 KDE Plasma ワークスペースと Qt4\n- 6.5 Xfce\n\n- 7.1 Audacious\n- 7.2 Java/OpenJDK 6\n- 7.3 Music Player Daemon (MPD)\n- 7.4 MPlayer\n- 7.5 Skype (x86_64)\n- 7.6 guvcview\n\n- 8.1 キーボードのボリュームコントロール\n- 8.2 X11 ベルイベント\n- 8.3 Switch on connect\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "pulseaudio パッケージをインストールしてください。\n\nPulseAudio のモジュールの中にはメインのパッケージと 分割 されているものがあり、必要に応じてインストールする必要があります:\n\n- pulseaudio-alsa PulseAudio で ALSA を管理、こちらも参照 #ALSA\n- pulseaudio-bluetooth: Bluetooth (Bluez) のサポート\n- pulseaudio-equalizer: イコライザー sink (qpaeq)\n- pulseaudio-jack: JACK sink, source, jackdbus 検知\n- pulseaudio-lirc: 赤外線 (LIRC) ボリュームコントロール\n- pulseaudio-zeroconf: Zeroconf (Avahi/DNS-SD) のサポート\n\n"
    },
    {
      "title": "フロントエンド",
      "level": 3,
      "content": "PulseAudio デーモンを制御するための様々なフロントエンドが存在します:\n\n- GTK の GUI: paprefs と pavucontrol\n- キーボードキーによるボリュームコントロール: pulseaudio-ctlAUR\n- コンソール (CLI) ミキサー: ponymix と pamixer\n- コンソール (curses) ミキサー: pulsemixer-gitAUR\n- ウェブボリュームコントロール: PaWebControl\n- システムトレイアイコン: pasystray-gitAUR\n- KF5 plasma アプレット: kmix and plasma-pa\n- Bluetooth ヘッドセットや他の Bluetooth 音声デバイスを PulseAudio で使いたい場合は Bluetooth ヘッドセットの記事を読んでください。\n\n"
    },
    {
      "title": "設定ファイル",
      "level": 3,
      "content": "デフォルトでは、PulseAudio は全てのサウンドカードを自動的に検出して管理するように設定されています。検出された ALSA デバイスを全て制御して音声ストリームを結集させることで、PulseAudio デーモンが設定の中心点になります。デーモンは基本的に特に設定をしなくても動作するので、必要な設定はほとんどありません。\n\nPulseAudio はまずホームディレクトリの設定ファイル ~/.config/pulse を確認して、次にシステム全体の設定ファイル /etc/pulse を確認します。\n\nPulseAudio はサーバーデーモンとして動作するので、クライアント・サーバーアーキテクチャを使ってシステム全体あるいはユーザー個別に起動することができます。デーモン自体はモジュールがないと何もしません。API を提供して動的にロードされたモジュールをホストするだけです。音声のルーティングなどの処理は全て様々なモジュールが担当します。利用可能なモジュールのリストは Pulseaudio Loadable Modules で確認できます。モジュールを有効化するには load-module <module-name-from-list> という行を ~/.config/pulse/default.pa に追加します。\n\n- システム全体の設定ファイルは編集しないことを推奨します。ユーザー個別の設定ファイルを使ってください。~/.config/pulse ディレクトリを作成して、システムの設定ファイルをコピーすることでユーザー個別の設定をすることができます。\n- パッケージに含まれている /etc/pulse/ のファイルに変更があったときはユーザーの設定もあわせるようにしてください。そうしないと、設定エラーで PulseAudio が起動しなくなる可能性があります。\n- ユーザーを audio グループに追加する必要はありません。udev と logind を使用して動的にユーザーに権限が与えられます。\n\n"
    },
    {
      "title": "daemon.conf",
      "level": 4,
      "content": "モジュールが使用するデフォルトのサンプルレート、リサンプリング方式、リアルタイムスケジューリング、サーバープロセスに関する設定など、基本的な設定を定義します。実行している間は変更できません。PulseAudio デーモンの再起動が必要です。ほとんどの場合、デフォルト設定で問題ありません。\n\nTable content:\nオプション | 説明\nsystem-instance | system-wide インスタンスとしてデーモンを実行。セキュリティの問題が生まれるため非推奨です。ローカルユーザーが存在しない (ヘッドレス) システムで有用です。デフォルトは no。\nresample-method | モジュール間で音声のサンプルレートが一致しない場合に使用するリサンプラー (例: 48kHz しか対応していないハードウェアで 96kHz の音声を再生する場合など)。利用可能なリサンプラーは $ pulseaudio --dump-resample-methods で確認できます。CPU の使用量と音質のトレードオフを考えて最適なものを選択してください。 ヒント: 場合によっては PulseAudio によって CPU の負担が跳ね上がることがあります。例えば複数のストリームを (個別に) リサンプルする場合などに起こりえます。そのようなことが頻繁に起こる場合、サンプルレートに対応する sink を新しく作成してメインの sink に送ることで、リサンプリングを一度で済ませることができます。\nflat-volumes | flat-volumes は一番音が大きいアプリケーションのボリュームにあわせてデバイスのボリュームを調整します。例えば、VoIP の呼び出し音声を上げるとハードウェアのボリュームが上がりますが、音声プレイヤーのボリュームは元のままになるように調整され、手動で音声プレイヤーのボリュームを下げなくてもいいようにします。開発元ではデフォルトで yes になっていますが、Arch においては no がデフォルトです。 ノート: 開発元のデフォルト設定は時として混乱を生み、アプリケーションによってはフラットボリューム機能に対応していないために、アプリケーションの起動時にボリュームが 100% に設定されることがあります。スピーカーや耳が破壊される恐れがあり大変危険です。そのため、Arch では flat-volumes を no に設定することで古典的な (ALSA と同じ) 設定をデフォルトとしています。\ndefault-fragments | 音声サンプルは default-fragment-size-msec によって複数の断片に分割されます。バッファを大きくすればするほど、システムが過負担のときに音声がスキップされる可能性が減ります。ただし、副作用として全体的な遅延は大きくなります。問題が発生する場合はこの値を大きくしてみてください。\n\n"
    },
    {
      "title": "default.pa",
      "level": 4,
      "content": "このファイルはスタートアップスクリプトであり、モジュールを設定するのに使われています。デーモンが初期化を完了した後に読み込まれて解析されます。$ pactl や $ pacmd を使うことでコマンドは追加で送信できます。また、$ pulseaudio -nC を使ってターミナルで PulseAudio を起動することで使用するスタートアップファイルを指定することもできます。その場合、デーモンは CLI モジュールをロードしてコマンドラインから直接設定を受け取って、同じターミナルに情報やエラーメッセージを出力します。デーモンをデバッグするときや、ディスクで永続的に設定する前にモジュールをテストしたい場合などに有用です。マニュアルページに詳しい説明が載っています。構文については man pulse-cli-syntax を読んでください。\n\n- 完全なコピーを記述するかわりに、~/.config/pulse/default.pa の最初の行を .include /etc/pulse/default.pa とすればデフォルト設定を上書きできます。\n- 利用可能な sink を確認するには $ pacmd list-sinks|egrep -i 'index:|name:' を実行してください。デフォルトの sink はアスタリスクの印が付きます。\n- ~/.config/pulse/default.pa を編集して set-default-sink コマンドを挿入・変更するときは sink の名前を使ってください。番号ではその順番で実行される保証がありません。\n\n"
    },
    {
      "title": "client.conf",
      "level": 4,
      "content": "全ての PulseAudio クライアントアプリケーションが読み込む設定ファイルです。個別のクライアントについて実行時のオプションを設定したいときに使います。デフォルトの sink や source を静的に設定できるだけでなく、サーバーが動作していないときに自動的に起動するクライアントを許可 (あるいは不許可) できます。\n\n"
    },
    {
      "title": "設定コマンド",
      "level": 3,
      "content": "実行している間にサーバーを設定するメインコマンドは $ pacmd です。オプションのリストを表示するには $ pacmd --help を実行してください。$ pacmd とだけ実行することでシェルインタラクティブモードに入ることができ Ctrl+d で終了します。変更した設定はすべて即座に適用されます。\n\n新しい設定をテストして満足したら、default.pa を編集することで変更を永続化できます。基本的な設定は PulseAudio/サンプル を見てください。\n\n選択されたハードウェアの \"Profile\" にあわせて PulseAudio で利用・選択することができる \"source\" (プロセス, キャプチャデバイス) と \"sink\" (サウンドカード, サーバー, 他のプロセス) を理解するのが重要です。\"Profile\" は aplay -L コマンドで確認できる ALSA の \"pcm\" であり、pacmd list-cards コマンドでもっと具体的に確認できます。\"index:\" 行や \"profiles:\" から始まるリスト、出力の \"active profile: <...>\" という行などです。\n\n\"active profile\" は pacmd set-card-profile INDEX PROFILE コマンドで設定できます。INDEX と PROFILE の間にカンマは必要ありません。INDEX は pacmd list-cards コマンドで表示される \"index:\" 行の番号に、PROFILE の名前は \"profile:\" の下の行の最初から、コロンと空白までの文字列に置き換えてください。例: pacmd set-card-profile 0 output:analog-stereo+input:analog-stereo。\n\npavucontrol などのグラフィカルツールを使えばもっと簡単に \"Profile\" を選択できます (\"Configuration\" タブ)。KDE システム設定なら \"Multimedia/Audio and Video Settings\" の \"Audio Hardware Setup\" タブから設定できます。(aplay -l や pacmd list-cards コマンドで確認できるデバイスと同じ) 音声の \"Card\" には、それぞれ \"Profile\" が選択されます。\"Profile\" を選択したら、pacmd list-sources と pacmd list-sinks コマンドで利用可能な \"source\" と \"sink\" が確認できます。利用可能な source と sink の \"index\" はカードのプロファイルが変更されるたびに変わるので注意してください。\n\nアプリケーションによっては選択した \"Profile\" が問題になることがあります。特に Adobe Flash プレイヤーの /usr/lib/mozilla/plugins/libflashplayer.so と /usr/lib/PepperFlash/libpepflashplayer.so はそうです。しばしば、Flash プレイヤーは Stereo プロファイルのどちらか片方を選択しないと機能せず、音声がない動画が再生されたり、あるいはクラッシュしたりします。あるプロファイルで駄目なら、別のプロファイルを選択してみてください。\n\nもちろん、PulseAudio でサラウンド音声を設定する場合、適切な Surround プロファイルを選択する必要があります。\n\n"
    },
    {
      "title": "実行",
      "level": 2,
      "content": "バージョン 7.0 から、Arch においては PulseAudio はソケットアクティベーションを使います。デフォルト では、systemd/ユーザーインスタンスで pulseaudio.socket が有効になります。\n\n- pulseaudio.socket を無効にするときは、$XDG_CONFIG_HOME/systemd/user/ が存在することを確認して systemctl --user mask pulseaudio.socket を実行してください。\n- ほとんどのデスクトップ環境では /etc/xdg/autostart/ ディレクトリにあるデスクトップファイルによってプログラムを自動で起動します。デスクトップ環境を使っている場合、ソケットアクティベーションとは無関係に PulseAudio は自動で起動します。\n\n詳しくは PulseAudio: Running を参照してください。\n\n"
    },
    {
      "title": "手動で起動",
      "level": 3,
      "content": "X を起動した時に pulseaudio が自動で立ち上がらない場合は、次のコマンドで実行できます:\n\n```\n$ pulseaudio --start\n```\n\n次のコマンドで PulseAudio を停止できます:\n\n```\n$ pulseaudio --kill\n```\n\n"
    },
    {
      "title": "イコライザー",
      "level": 2,
      "content": "pulseaudio の比較的新しいバージョンでは、統合された10帯域のイコライザーシステムが搭載されています。このイコライザーを有効にするためには、以下の作業が必要です。\n\npulseaudio-equalizer をインストールしてください。\n\n"
    },
    {
      "title": "equalizer sink と dbus-protocol モジュールをロードする",
      "level": 3,
      "content": "```\n$ pactl load-module module-equalizer-sink\n$ pactl load-module module-dbus-protocol\n```\n\n"
    },
    {
      "title": "GUI フロントエンド",
      "level": 3,
      "content": "次を実行:\n\n```\n$ qpaeq\n```\n\n"
    },
    {
      "title": "起動時に イコライザーと dbus モジュールをロードする",
      "level": 3,
      "content": "お好みのエディタで /etc/pulse/default.pa を開き、以下の行を追記します。\n\n```\n### Load the integrated pulseaudio equalizer and dbus module\nload-module module-equalizer-sink\nload-module module-dbus-protocol\n```\n\n"
    },
    {
      "title": "ALSA",
      "level": 3,
      "content": "- 推奨パッケージ: pulseaudio-alsa\n- 追加選択パッケージ: lib32-libpulse および lib32-alsa-plugins\n\nPulseAudio をサポートせず ALSA をサポートするアプリケーションのためには、ALSA のための PulseAudio プラグインをインストールすることが推奨されます。このパッケージは、ALSA に PulseAudio を利用させるために必要なファイル /etc/asound.conf も含んでいます。\n\nアプリケーションに ALSA の OSS エミュレーションをやめさせ PulseAudio を迂回させない（そうして、他のアプリケーションの音声出力を防ぐ）ためには、起動時に snd_pcm_oss モジュールがロードされないようにします。このモジュールが現在ロードされていたら (lsmod | grep oss で確認可能)、以下を実行してモジュールを無効にしましょう:\n\n```\n# rmmod snd_pcm_oss\n```\n\n"
    },
    {
      "title": "ALSA/dmix でハードウェアデバイスを占有しない",
      "level": 3,
      "content": "ALSA を直接アプリケーションで使って他のアプリケーションも使えるようにしたいと思っているならば、同時に PulseAudio も必要になります。以下の手順で PulseAudio が ALSA のハードウェアデバイスの代わりに dmix を使うようにできます。\n\n- pulseaudio-alsa パッケージを削除してください、ALSA アプリケーションと PulseAudio の互換レイヤーが含まれています。削除した後、ALSA アプリは Pulse につかまることなく ALSA を直接使うようになります。\n\n- /etc/pulse/default.pa を編集してください。\n\n```\nload-module module-alsa-sink device=dmix\nload-module module-alsa-source device=dsnoop\n# load-module module-udev-detect\n# load-module module-detect\n```\n\n- 任意: kdemultimedia-kmix[リンク切れ: パッケージが存在しません] を使っていてPulseAudio ボリュームのかわりに ALSA ボリュームを操作したい場合:\n\n```\n$ echo export KMIX_PULSEAUDIO_DISABLE=1 > ~/.kde4/env/kmix_disable_pulse.sh\n$ chmod +x ~/.kde4/env/kmix_disable_pulse.sh\n```\n\n- コンピュータを再起動して、alsa と pulseaudio のアプリケーションを同時に実行して見て下さい。同時に音声を鳴らすことができるはずです。\n\n"
    },
    {
      "title": "OSS",
      "level": 3,
      "content": "OSS にしか対応していないプログラムを PulseAudio に出力させる方法は複数存在します:\n\n"
    },
    {
      "title": "ossp",
      "level": 4,
      "content": "ossp パッケージをインストールして osspd.service を起動してください。\n\n"
    },
    {
      "title": "padsp ラッパー",
      "level": 4,
      "content": "OSS を使うプログラムは (PulseAudio に含まれている) padsp を使って起動することで PulseAudio で動作するようにできます:\n\n```\n$ padsp OSSprogram\n```\n\n例:\n\n```\n$ padsp aumix\n$ padsp sox foo.wav -t ossdsp /dev/dsp\n```\n\n以下のようなカスタムラッパースクリプトも使えます:\n\n```\n/usr/local/bin/OSSProgram\n```\n\n```\n#!/bin/sh\nexec padsp /usr/bin/OSSprogram \"$@\"\n```\n\nPATH で /usr/bin よりも先に /usr/local/bin が来るようにしてください。\n\n"
    },
    {
      "title": "GStreamer",
      "level": 3,
      "content": "GStreamer で PulseAudio を使うには、gst-plugins-good か gstreamer0.10-good-pluginsAUR をインストールする必要があります。\n\n"
    },
    {
      "title": "OpenAL",
      "level": 3,
      "content": "OpenAL Soft はデフォルトで PulseAudio を使いますが、明示的に設定することもできます:\n\n```\n/etc/openal/alsoft.conf\n```\n\n```\ndrivers=pulse,alsa\n```\n\n"
    },
    {
      "title": "libao",
      "level": 3,
      "content": "libao の設定ファイルを編集してください:\n\n```\n# /etc/libao.conf\n```\n\n```\ndefault_driver=pulse\n```\n\nalsa ドライバーの dev=default オプションを削除するか特定の Pulse の sink の名前・番号を指定してください。\n\n"
    },
    {
      "title": "ESD",
      "level": 3,
      "content": "PulseAudio は enlightened sound daemon (ESD) を完全に置き換えます。PulseAudio が動作している時、ESD クライアントは PulseAudio に何もしなくても出力できるはずです。\n\n"
    },
    {
      "title": "X11",
      "level": 3,
      "content": "PulseAudio が動作しているかどうか確認してください:\n\n```\n$ ps aux | grep pulse\n```\n\n```\nfacade   1794  0.0  0.0 360464  6532 ?        S<l  15:33   0:00 /usr/bin/pulseaudio --start\n facade   1827  0.0  0.0  68888  2608 ?        S    15:33   0:00 /usr/lib/pulse/gconf-helper\n```\n\nPulseAudio が動いておらず X を使っている場合は、以下で PulseAudio と必要な X11 のプラグインを手動で起動できます:\n\n```\n$ start-pulseaudio-x11\n```\n\nGnome, KDE, Xfce を使ってないために ~/.xinitrc が /etc/X11/xinit/xinitrc.d のスクリプトを (サンプルファイル /etc/skel/.xinitrc のように) 読み込まないときは、次のコマンドでブート時に PulseAudio を起動できます:\n\n```\n~/.xinitrc\n```\n\n```\n/usr/bin/start-pulseaudio-x11\n```\n\n"
    },
    {
      "title": "GNOME",
      "level": 3,
      "content": "GNOME 3 から、GNOME は PulseAudio と完全に統合したため特に設定は必要ありません。\n\n"
    },
    {
      "title": "KDE 3",
      "level": 3,
      "content": "PulseAudio は aRts との完全な互換性はありません。KDE 3 のユーザーは PulseAudio を使えません。ただし最近のバージョンの PulseAudio では障害が取り除けるかもしれません:\n\n参照: http://www.pulseaudio.org/wiki/PerfectSetup KDE 3 はデフォルトで artsd サウンドサーバを使っています。しかしながら、artsd は Esound バックエンドを使うように設定することが可能です。kcmartsrc (グローバルな設定は /etc/kde または /usr/share/config、ユーザー別の設定は .kde/share/config にあります) を以下のように編集してください:\n\n```\n[Arts]\nArguments=\\s-F 10 -S 4096 -a esd -n -s 1 -m artsmessage -c drkonqi -l 3 -f\nNetworkTransparent=true\nSuspendTime=1\n```\n\n"
    },
    {
      "title": "KDE Plasma ワークスペースと Qt4",
      "level": 3,
      "content": "PulseAudio は KDE/Qt4 アプリケーションによって使われます。詳しくは PulseAudio wiki の KDE のページ を見て下さい。\n\nPulseAudio サポートはデフォルトの KDE サウンドミキサーである KMix にマージされています。\n\nphonon-gstreamer バックエンドを Phonon に使っている場合、gstreamer0.10-good-pluginsAUR をインストールして GStreamer も PulseAudio を使うように設定してください。\n\nload-module module-device-manager を /etc/pulse/default.pa に追加するのが有用です。\n\nさらに、KMix や pavucontrol の KDE 代替として AUR から kdeplasma-applets-veromixAUR[リンク切れ: アーカイブ: aur-mirror] が利用できます。\n\n"
    },
    {
      "title": "Xfce",
      "level": 3,
      "content": "Xfce で動いているアプリケーションは PulseAudio を使うことができます。PulseAudio の設定を管理するには pavucontrol を使います。\n\n"
    },
    {
      "title": "Audacious",
      "level": 3,
      "content": "Audacious は PulseAudio にもとから対応しています。利用するためには、Audacious で 設定→オーディオ→出力プラグイン で「PulseAudio 出力」に設定しましょう。\n\n"
    },
    {
      "title": "Java/OpenJDK 6",
      "level": 3,
      "content": "Pulseaudio と Java のサウンドに書かれているように padsp を使って java のラッパーを作成してください。\n\n"
    },
    {
      "title": "Music Player Daemon (MPD)",
      "level": 3,
      "content": "PulseAudio を使うように MPD を 設定 してください。Music Player Daemon/ヒントとテクニック#PulseAudio を参照。\n\n"
    },
    {
      "title": "MPlayer",
      "level": 3,
      "content": "MPlayer はネイティブで PulseAudio 出力をサポートしており \"-ao pulse\" オプションを使います。PulseAudio への出力をデフォルトに設定することも可能で、ユーザー別の設定には ~/.mplayer/config で、システム全体では /etc/mplayer/mplayer.conf で設定します:\n\n```\n/etc/mplayer/mplayer.conf\n```\n\n```\nao=pulse\n```\n\n"
    },
    {
      "title": "Skype (x86_64)",
      "level": 3,
      "content": "lib32-libpulse をインストールしてください。そうしないと通話をしようとした時に次のエラーが発生します: \"Problem with Audio Playback\"。\n\n"
    },
    {
      "title": "guvcview",
      "level": 3,
      "content": "PulseAudio で guvcview を使用するとウェブカメラからの入力で音声入力が中止され音声が記録されないことがあります。次を実行して確認できます:\n\n```\n$ pactl list sources\n```\n\n音声ソースが \"suspended\" になっている場合 /etc/pulse/default.pa の以下の行を:\n\n```\nload-module module-suspend-on-idle\n```\n\n次のように修正してください:\n\n```\n#load-module module-suspend-on-idle\n```\n\nPulseAudio を再起動すれば音声ソースが中止される代わりにアイドル状態になるようになります。これで guvcview でデバイスから音声を正しく記録できるようになるはずです。\n\n"
    },
    {
      "title": "キーボードのボリュームコントロール",
      "level": 3,
      "content": "以下のコマンドをボリュームキーにマッピングしてください: XF86AudioRaiseVolume, XF86AudioLowerVolume, XF86AudioMute。\n\nまず制御したい音声出力に対応する sink を確認します。sink を確認するには:\n\n```\npactl list sinks short\n```\n\nボリュームを上げるには:\n\n```\nsh -c \"pactl set-sink-mute 0 false ; pactl set-sink-volume 0 +5%\"\n```\n\nボリュームを下げるには:\n\n```\nsh -c \"pactl set-sink-mute 0 false ; pactl -- set-sink-volume 0 -5%\"\n```\n\nボリュームをミュート（解除）するには:\n\n```\npactl set-sink-mute 0 toggle\n```\n\nマイクをミュート（解除）するには:\n\n```\npactl set-source-mute 1 toggle\n```\n\n- キーボードショートカットを常にデフォルトのシンクで動作させるには、シンク番号に @DEFAULT_SINK@ を指定します。例えば、pactl set-sink-mute @DEFAULT_SINK@ toggle.\n- 最大音量の制限など、より高度な制御を行う場合は、コンソールフロントエンドの利用を検討してください。\n\n"
    },
    {
      "title": "X11 ベルイベント",
      "level": 3,
      "content": "pulseaudio で X11 のベルイベントを処理するには、X11 セッションが起動した後に以下のコマンドを実行:\n\n```\npactl upload-sample /usr/share/sounds/freedesktop/stereo/bell.oga x11-bell\npactl load-module module-x11-bell sample=x11-bell display=$DISPLAY\n```\n\nX11 ベルのボリュームを調整するには、以下のコマンドを実行:\n\n```\nxset b 100\n```\n\n100 はパーセンテージです。上記のコマンドを使うには xorg-xset パッケージが必要です。X11 セッションが起動したときに自動的にコマンドを実行する方法は自動起動を参照。\n\n"
    },
    {
      "title": "Switch on connect",
      "level": 3,
      "content": "新しく接続されたデバイスに音声出力を切り替えるモジュールです。例えば、USB ヘッドセットを接続した場合、出力がそれに切り替わります。切断したときは、出力は元のデバイスに戻ります。大量にバグが存在していましたが PulseAudio 8.0 になって注目を集め、今では問題なく動くようになっています。\n\nモジュールをテストしていみたい場合、次を実行することでロードできます:\n\n```\n# pactl load-module module-switch-on-connect\n```\n\n変更を永続化させたい場合、ローカルの pulseaudio 設定あるいは /etc/pulse/default.pa (システム設定) に以下の行を追加してください:\n\n```\nload-module module-switch-on-connect\n```\n\nKDE/Plasma5 では更に module-device-manager を無効化してください。Plasma5 は起動するとすぐに (start-pulseaudio-x11 によって) pulseaudio でデバイスを管理するために module-device-manager モジュールをロードします。しかしながら、このモジュールは module-switch-on-connect と競合します。/bin/start-pulseaudio-x11 を編集して KDE の行をコメントアウトすることでモジュールを無効化できます。pulseaudio セッションを新しくするために一度ログアウトしてからログインしなおしてください。\n\n"
    },
    {
      "title": "トラブルシューティング",
      "level": 2,
      "content": "PulseAudio/トラブルシューティングを見て下さい。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- http://www.alsa-project.org/main/index.php/Asoundrc - Alsa wiki on .asoundrc\n- http://www.pulseaudio.org/ - PulseAudio 公式サイト\n- http://www.pulseaudio.org/wiki/FAQ - PulseAudio FAQ\n\n"
    }
  ]
}
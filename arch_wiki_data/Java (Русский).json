{
  "title": "Java (Русский)",
  "url": "https://wiki.archlinux.org/title/Java_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Java Package Guidelines\n- Шрифты окружения Java Runtime\n\nИз Википедии:\n\nArch Linux официально поддерживает OpenJDK, свободную реализацию Java SE, версий 8, 11, 17 и 21. Эти версии можно без проблем установить одновременно, а также переключаться между ними с помощью скрипта archlinux-java. Несколько других реализаций доступны в AUR, но они не поддерживаются официально.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "- Официально поддерживается только OpenJDK.\n- После установки окружение Java должно быть определено в переменной $PATH, что можно сделать с помощью команды source /etc/profile, повторного входа в среду рабочего стола или перезагрузки.\n\nСуществуют два главных пакета, которые являются зависимыми: java-runtime-common (содержит основные файлы для Java Runtime Environment — JRE) и java-environment-common (содержит основные файлы для Java Development Kit — JDK). Переменная окружения $PATH в файле /etc/profile.d/jre.sh указывает на каталог /usr/lib/jvm/default/bin, заданный скриптом archlinux-java.\n\nСсылки /usr/lib/jvm/default и /usr/lib/jvm/default-runtime следует менять только при помощи скрипта archlinux-java. Эти ссылки ведут на выбранное рабочее окружение Java в /usr/lib/jvm/java-${JAVA_MAJOR_VERSION}-${VENDOR_NAME} или JRE — /usr/lib/jvm/java-${JAVA_MAJOR_VERSION}-${VENDOR_NAME}/jre.\n\nБольшинство исполняемых файлов Java находятся в /usr/bin, остальные доступны через $PATH. Скрипт /etc/profile.d/jdk.sh больше не предоставляется ни одним из пакетов.\n\n"
    },
    {
      "title": "OpenJDK",
      "level": 3,
      "content": "OpenJDK — свободная реализация Java Platform, Standard Edition (Java SE), являющаяся референсной реализацией. Существуют также и другие сборки, например, Adoptium (ранее AdoptOpenJDK) или Amazon Corretto, но они не выложены в официальные репозитории. Пакет OpenJDK собирается из последнего состояния репозитория исходного кода OpenJDK.\n\nTable content:\nВерсия | Headless JRE | Full JRE | JDK | Документация | Исходный код\nOpenJDK 21 | jre-openjdk-headless | jre-openjdk | jdk-openjdk | openjdk-doc | openjdk-src\nOpenJDK 17 | jre17-openjdk-headless | jre17-openjdk | jdk17-openjdk | openjdk17-doc | openjdk17-src\nOpenJDK 11 | jre11-openjdk-headless | jre11-openjdk | jdk11-openjdk | openjdk11-doc | openjdk11-src\nOpenJDK 8 | jre8-openjdk-headless | jre8-openjdk | jdk8-openjdk | openjdk8-doc | openjdk8-src\n\nOpenJDK GA — свежая сборка OpenJDK General-Availability Release от Oracle.\n\nOpenJDK EA — свежая сборка OpenJDK Early-Access от Oracle.\n\nicedTea-Web — Java Web Start и устаревший плагин Java для браузеров.\n\n"
    },
    {
      "title": "OpenJFX",
      "level": 3,
      "content": "OpenJFX — свободная реализация JavaFX. Данный пакет включён в Oracle JRE/JDK и требуется к дополнительной установке лишь пользователям OpenJDK.\n\nTable content:\nВерсия | Runtime и Development Kit | Документация | Исходный код\nOpenJFX 21 | java-openjfxAUR | java-openjfx-docAUR | java-openjfx-srcAUR\nOpenJFX 17 | java17-openjfxAUR | java17-openjfx-docAUR | java17-openjfx-srcAUR\nOpenJFX 11 | java11-openjfxAUR | java11-openjfx-docAUR | java11-openjfx-srcAUR\nOpenJFX 8 | java8-openjfxAUR | java8-openjfx-docAUR | java8-openjfx-srcAUR\n\nOpenJFX GA — свежая сборка OpenJFX General-Availability Release от Gluon.\n\nOpenJFX EA — свежая сборка OpenJFX Early-Access от Gluon.\n\n"
    },
    {
      "title": "Другие реализации",
      "level": 3,
      "content": "Oracle JDK — проприетарная реализация JRE от Oracle, версии до 17 требуют пакета, доступного только после входа в аккаунт Oracle.\n\nEclipse Adoptium/Temurin/AdoptOpenJDK — реализация JRE/JDK от Eclipse, основана на Hotspot JVM.\n\nOpenJ9 — JRE от Eclipse, созданная при участии IBM.\n\nIBM Certified — IBM Semeru Runtime Certified Edition.\n\nIBM J9 — реализация JRE 7 и 8 от IBM.\n\n"
    },
    {
      "title": "Инструменты для разработки",
      "level": 3,
      "content": "См. List of applications/Utilities#Integrated development environments для получения списка IDE (в частности, секцию Java IDEs).\n\nЧтобы усложнить процесс реверс-инжиниринга, можно воспользоваться обфускатором proguardAUR.\n\n"
    },
    {
      "title": "Декомпиляторы",
      "level": 4,
      "content": "- Bytecode Viewer — пакет для обратного инжиниринга Java-приложений, включающий в себя декомпилятор, редактор и дебаггер.\n\n- CFR — декомпилятор Java, поддерживающий также новые возможности Java 9 и выше.\n\n- Fernflower — аналитический декомпилятор Java-приложений, разработанный для IntelliJ IDEA.\n\n- Java Decompiler (JD-Core, JD-GUI) — JD Decompiler, популярный декомпилятор, поддерживающий версии Java 1-10.\n\n- Krakatau — декомпилятор, ассемблер и дизассемблер для Java.\n\n- Procyon decompiler — экспериментальный декомпилятор Java, разработанный под влиянием ILSpy и Mono.Cecil.\n\n- Recaf — простой и современный редактор байт-кода, абстрагирующийся от сложности программ на Java\n\n"
    },
    {
      "title": "Переключение между средами",
      "level": 2,
      "content": "Скрипт archlinux-java предусматривает следующие возможности:\n\n```\narchlinux-java <COMMAND>\n\nCOMMAND:\n       status          список установленных окружений Java и их статус\n       get             короткое название текущего окружения Java\n       set <JAVA_ENV>  устанавливает окружение <JAVA_ENV> по умолчанию\n       unset           сбрасывает текущее окружения Java по умолчанию\n       fix             исправляет ошибки конфигурации окружения Java, выбранного по умолчанию\n```\n\n"
    },
    {
      "title": "Получение списка установленных совместимых сред Java",
      "level": 3,
      "content": "```\n$ archlinux-java status\n```\n\nПример:\n\n```\n$ archlinux-java status\n```\n\n```\nAvailable Java environments:\n   java-8-openjdk (default)\n   java-11-openjdk/jre\n```\n\nМетка (default) как раз и подписывает окружение, установленное по умолчанию. Выполнение java или других команд будет ссылаться на эту версию. Отметка /jre означает, что установлен только JRE.\n\n"
    },
    {
      "title": "Установка среды Java по умолчанию",
      "level": 3,
      "content": "```\n# archlinux-java set <JAVA_ENV_NAME>\n```\n\nПример:\n\n```\n# archlinux-java set java-8-openjdk/jre\n```\n\nОбратите внимание, что archlinux-java не позволит задать некорректную среду Java. В предыдущем примере была использована установленная среда jre8-openjdk, а, к примеру, указание неустановленной среды jdk8-openjdk завершилось бы следующей ошибкой:\n\n```\n# archlinux-java set java-8-openjdk\n```\n\n```\n'/usr/lib/jvm/java-8-openjdk' is not a valid Java environment path\n```\n\n"
    },
    {
      "title": "Сброс среды Java по умолчанию",
      "level": 3,
      "content": "Как правило, необходимость в сбросе среды по умолчанию отсутствует, так как данный механизм заложен в соответствующие пакеты. Если же возникла такая необходимость, воспользуйтесь командой unset:\n\n```\n# archlinux-java unset\n```\n\n"
    },
    {
      "title": "Исправление конфигурации используемой среды Java",
      "level": 3,
      "content": "Если на какое-нибудь окружение Java задана неверная ссылка, команда archlinux-java fix попытается найти и исправить ошибку. Также эта команда задаст окружение по умолчанию, если оно отсутствует (официально поддерживаемое окружение OpenJDK 8 имеет наивысший приоритет).\n\n```\n# archlinux-java fix\n```\n\n"
    },
    {
      "title": "Запуск приложений с не установленным по умолчанию окружением",
      "level": 3,
      "content": "Если в системе установлено несколько окружений и необходимо запустить приложение с использованием среды не установленной по умолчанию, можно создать небольшой скрипт, локально изменяющий PATH. Например, если по умолчанию используется JRE 17, а необходимо воспользоваться JRE 11:\n\n```\n#!/bin/sh\n\nexport PATH=\"/usr/lib/jvm/java-11-openjdk/bin/:$PATH\"\nexec /путь/к/приложению \"$@\"\n```\n\n"
    },
    {
      "title": "Требования к пакетам сред для поддержки archlinux-java",
      "level": 2,
      "content": "Этот раздел предназначен для тех, кто хочет распространять свои пакеты JVM в AUR и использовать для управления archlinux-java. Пакеты должны соответствовать всем пунктам ниже:\n\n- все файлы пакета располагаются по адресу /usr/lib/jvm/java-${JAVA_MAJOR_VERSION}-${VENDOR_NAME}\n- все исполняемые файлы для java-runtime-common и java-environment-common имеют соответствующие ссылки\n- исполняемые файлы, не принадлежащие к java-runtime-common и java-environment-common, имеют ссылки из /usr/bin\n- суффиксы манов такие: -${VENDOR_NAME}${JAVA_MAJOR_VERSION} ; например, смотрите список файлов jre8-openjdk, где они имеют суффиксы -openjdk8\n- не используется ни PKGBUILD conflicts, ни PKGBUILD replaces с другими JDK, java-runtime, java-runtime-headless или java-environment\n- используется скрипт archlinux-java, чтобы устанавливать окружение по умолчанию, если ни одно другое окружение не задано — то есть не перезаписывается значение по умолчанию. Смотрите список официально поддерживаемых окружений Java для примера\n\nСтоит принять во внимание и эти советы:\n\n- пакеты, которым нужно окружение Java должны объявить зависимости java-runtime, java-runtime-headless или java-environment\n- пакеты, которым нужно определённое окружение Java должны объявить зависимости с необходимым суффиксом\n- пакеты OpenJDK объявляют provides=\"java-runtime-openjdk=${pkgver}\", что позволяет стороннему пакету объявлять зависимость от OpenJDK без указания версии\n\n"
    },
    {
      "title": "Не подключается MySQL",
      "level": 3,
      "content": "В связи с тем, что драйверы JDBC часто используют порт в URI для установления соединения с базой данных, он считается «удалённым» (т. е. MySQL не прослушивает порт в соответствии с его настройками по умолчанию), несмотря на то, что, возможно, они работают на одном хосте. Таким образом, чтобы использовать JDBC и MySQL, вы должны разрешить удаленный доступ в MySQL; смотрите инструкцию в статье MariaDB#Grant remote access.\n\n"
    },
    {
      "title": "Не запускается IntelliJ IDEA",
      "level": 3,
      "content": "Если IntelliJ IDEA вылетает с ошибкой The selected directory is not a valid home for JDK, придётся установить другую JDK или использовать IntelliJ IDEA с JetBrains Runtime.\n\n"
    },
    {
      "title": "Ошибки отрисовки приложений Java",
      "level": 3,
      "content": "В оконных менеджерах Awesome, Dwm и Ratpoison возникают ошибки отрисовки GUI в Java, появляются серые окна, приложения не изменяют размер, меню мгновенно закрываются. Для того, чтобы JVM думала, что используется оконный менеджер, отличный от установленного, используется wmname. Задайте поддельное название оконного менеджера, например, compiz или LG3D\n\n```\n$ wmname compiz\n```\n\nПосле выполнения команды нужно перезапустить приложение Java. Такое поведение обосновано тем, что в JVM прямо установлены известные оконные менеджеры, которые используют подход non-re-parenting.\n\nЕсли установка поддельного оконного менеджера не применима, есть несколько советов:\n\n- для jre8-openjdk добавьте строчку export _JAVA_AWT_WM_NONREPARENTING=1 в /etc/profile.d/jre.sh, затем выполните source этого файла или перезайдите\n- для свежих JVM работает добавление export AWT_TOOLKIT=MToolkit в ~/.xinitrc перед командой запуска оконного менеджера\n- для пакетов Oracle можно использовать SetWMName, однако, положительный эффект может быть сброшен при использовании пакета XMonad.Hooks.EwmhDesktops в приложении. В этом случае может помочь добавление строчки >> setWMName \"LG3D\" к LogHook\n- для sway добавьте export _JAVA_AWT_WM_NONREPARENTING=1.\n\nСмотрите также Problems with Java applications, Applet java console на Haskell.org.\n\n"
    },
    {
      "title": "Неразборчивый шрифт в приложениях Java",
      "level": 3,
      "content": "Некоторые шрифты не читаются, поэтому следует установить другие, читаемые шрифты, например, ttf-ms-fontsAUR.\n\n"
    },
    {
      "title": "В некоторых приложениях отсутствует текст",
      "level": 3,
      "content": "Далее в разделе #Улучшенное отображение шрифтов приводятся параметры; см. также FS#40871.\n\n"
    },
    {
      "title": "Система зависает при дебаггинге",
      "level": 3,
      "content": "Используйте параметр JVM -Dsun.awt.disablegrab=true. Смотрите также страницу бага в JDK 6.\n\n"
    },
    {
      "title": "Конструктор JavaFX MediaPlayer вылетает с ошибкой",
      "level": 3,
      "content": "При создании экземпляра класса MediaPlayer может появиться такая ошибка:\n\n```\n... (i.e. FXMLLoader construction exceptions) ...\nCaused by: MediaException: UNKNOWN : com.sun.media.jfxmedia.MediaException: Could not create player! : com.sun.media.jfxmedia.MediaException: Could not create player!\n at javafx.scene.media.MediaException.exceptionToMediaException(MediaException.java:146)\n at javafx.scene.media.MediaPlayer.init(MediaPlayer.java:511)\n at javafx.scene.media.MediaPlayer.<init>(MediaPlayer.java:414)\n at <constructor call>\n ...\n```\n\nэто связано с несовеместимостью JavaFX и ffmpeg из репозитория, поэтому следует установить ffmpeg-compat-55AUR. См. также обсуждение на Reddit.\n\n"
    },
    {
      "title": "В приложениях Java не открываются внешние ссылки",
      "level": 3,
      "content": "Установите gvfs; в приложении требуется реализовать метод Desktop.Action.BROWSE. См. также обсуждение на Launchpad.\n\n"
    },
    {
      "title": "Ошибка инициализации QuantumRenderer: no suitable pipeline found",
      "level": 3,
      "content": "Либо отсутствует GTK2 — установите gtk2, либо отсутствует OpenJFX — установите java-openjfxAUR.\n\n"
    },
    {
      "title": "Советы и рекомендации",
      "level": 2,
      "content": "Поведение большинства приложений Java можно контролировать, предоставляя предопределённые переменные для среды выполнения Java. Для этого нужно добавлять строчки в ~/.bash_profile или /etc/profile.d/jre.sh.\n\n```\nexport JDK_JAVA_OPTIONS=\"-D<option 1> -D<option 2>...\"\n```\n\nНапример, предопределённое использование сглаженных шрифтов и GTK:\n\n```\nexport JDK_JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel'\n```\n\nJava воспринимает указанные ниже переменные окружения при запуске приложений (расположены в порядке повышения приоритета).\n\nTable content:\nJAVA_TOOL_OPTIONS | Влияет на приложения и на некоторые утилиты (например, javac или jshell).\nJDK_JAVA_OPTIONS | Влияет на приложения (запущенные через команду java). Добавлена в Java 9.\n(аргументы командной строки) | Аргументы, указанные после названия класса Java передаются в приложение.\n_JAVA_OPTIONS | Устаревшая переменная, влияет и на приложения, и на утилиты.\n\n"
    },
    {
      "title": "Улучшенное отображение шрифтов",
      "level": 3,
      "content": "Установите параметры JVM -Dawt.useSystemAAFontSettings=on, -Dswing.aatext=true. См. статью Java Runtime Environment fonts\n\n"
    },
    {
      "title": "Скрытие сообщения 'Picked up JDK_JAVA_OPTIONS'",
      "level": 3,
      "content": "При установке какого-либо параметра JVM появляется сообщение вида Picked up JDK_JAVA_OPTIONS=.... Чтобы избавиться от сообщения, можно удалить эту переменную окружения, а вместо неё передать параметры через аргументы командной строки. Добавьте эти строки в ~/.bashrc:\n\n```\nSILENT_JAVA_OPTIONS=\"$JDK_JAVA_OPTIONS\"\nunset JDK_JAVA_OPTIONS\nalias java='java \"$SILENT_JAVA_OPTIONS\"'\n```\n\n"
    },
    {
      "title": "Оформление GTK",
      "level": 3,
      "content": "Установите параметры JVM\n\n```\nswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel\n```\n\nНекоторые приложения используют кроссплатформенный вид Metal; чтобы переопределить его, используйте параметр JVM\n\n```\nswing.crossplatformlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel\n```\n\n"
    },
    {
      "title": "Поддержка GTK 3",
      "level": 4,
      "content": "В версиях, предшествующих Java 9 использовался вид GTK 2. Эта несовместимость между версиями GTK может нарушить работу приложений, использующих плагины Java с графическим интерфейсом, поскольку смешивание GTK 2 и GTK 3 в одном и том же процессе не поддерживается (например, LibreOffice 5.0). Начиная с Java 9 можно выбрать GTK 2, 2.2 или 3, но по умолчанию используется GTK 3; чтобы задать приоритет используйте параметр JVM\n\n```\njdk.gtk.version=2.2\n```\n\n"
    },
    {
      "title": "Ускорение отрисовки 2D",
      "level": 3,
      "content": "Если доступно использование OpenGL, его можно включить в приложениях Java, задав переменную окружения\n\n```\nexport JDK_JAVA_OPTIONS='-Dsun.java2d.opengl=true'\n```\n\n"
    }
  ]
}
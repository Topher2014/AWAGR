{
  "title": "Bluetooth (日本語)",
  "url": "https://wiki.archlinux.org/title/Bluetooth_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- Bluetooth マウス\n- Bluetooth キーボード\n- Bluetooth ヘッドセット\n- Blueman\n- ObexFTP\n\nBluetooth は携帯電話やコンピュータなどの電子デバイス用の近距離無線通信規格です。Linux においては、Bluetooth プロトコルスタックの実装として BlueZ が標準的に使われています。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール 1.1 フロントエンド 1.1.1 コンソール 1.1.2 グラフィカル\n- 2 ペアリング 2.1 デュアルブートペアリング 2.1.1 設定方法 2.1.2 Windows の場合 2.1.2.1 Windows での展開 2.1.2.2 Linux での展開 2.1.3 macOS の場合 2.1.4 Bluetooth 5.1 キーの準備 2.1.5 終わりに\n- 3 設定 3.1 アダプタのデフォルト電源状態 3.2 起動時に発見可能にする 3.3 サスペンドからの復帰 3.4 実験的な機能を有効化する\n- 4 オーディオ 4.1 PulseAudio 4.2 PipeWire 4.3 ALSA\n- 5 Bluetooth シリアル\n- 6 トラブルシューティング 6.1 一般的なトラブルシューティング 6.1.1 デバッグ 6.1.2 非推奨の BlueZ ツール 6.2 サービスの問題 6.2.1 systemd: Condition check resulted in Bluetooth service being skipped 6.2.2 Bluetooth が suspend-to-idle 中のデバイスを即座に立ち上げてしまう 6.2.3 ヘッドレス/サーバのシステムでログアウト後に Bluetooth がオフになる 6.3 アダプタの問題 6.3.1 hcitool scan: Device not found 6.3.2 bluetoothctl: No default controller available 6.3.3 rfkill unblock: Do not unblock 6.3.4 Bluetooth USB ドングル 6.3.4.1 ドングルから短距離にいるときにオーディオデバイスがおかしくなる 6.3.4.2 CSR ドングル 0a12:0001 6.3.5 Logitech Bluetooth USB ドングル 6.3.6 Foxconn / Hon Hai / Lite-On の Broadcom デバイス 6.3.7 Intel の複合 WiFi と Bluetooth カード 6.3.8 Windows とのデュアルブート環境における Mediatek MT7921 や MT7961 6.3.9 サスペンド/復帰後にアダプタが消える 6.4 ペアリングと接続の問題 6.4.1 コンピュータが表示されない 6.4.2 デバイスを接続した数秒後に切断してしまう 6.4.3 スキャンしてもデバイスが表示されない 6.4.4 Intel Corp. AX200 Bluetooth で BLE デバイスが見つからない 6.4.5 スリープ後に再接続できない 6.5 デバイス固有の問題 6.5.1 Bluetooth マウスのラグ / 接続断 / 応答なし 6.5.2 オーディオデバイスが br-connection-profile-unavailable で接続に失敗する 6.5.3 ヘッドホンとマウスの干渉 6.5.4 TP-LINK UB400 と Xbox のコントローラが接続/切断を繰り返す 6.6 ファイル転送の問題 6.6.1 gnome-bluetooth 6.6.2 シンボリックリンクのせいで、転送されたファイルを受信できない\n- 7 参照\n\n- 1.1 フロントエンド 1.1.1 コンソール 1.1.2 グラフィカル\n\n- 1.1.1 コンソール\n- 1.1.2 グラフィカル\n\n- 2.1 デュアルブートペアリング 2.1.1 設定方法 2.1.2 Windows の場合 2.1.2.1 Windows での展開 2.1.2.2 Linux での展開 2.1.3 macOS の場合 2.1.4 Bluetooth 5.1 キーの準備 2.1.5 終わりに\n\n- 2.1.1 設定方法\n- 2.1.2 Windows の場合 2.1.2.1 Windows での展開 2.1.2.2 Linux での展開\n- 2.1.3 macOS の場合\n- 2.1.4 Bluetooth 5.1 キーの準備\n- 2.1.5 終わりに\n\n- 2.1.2.1 Windows での展開\n- 2.1.2.2 Linux での展開\n\n- 3.1 アダプタのデフォルト電源状態\n- 3.2 起動時に発見可能にする\n- 3.3 サスペンドからの復帰\n- 3.4 実験的な機能を有効化する\n\n- 4.1 PulseAudio\n- 4.2 PipeWire\n- 4.3 ALSA\n\n- 6.1 一般的なトラブルシューティング 6.1.1 デバッグ 6.1.2 非推奨の BlueZ ツール\n- 6.2 サービスの問題 6.2.1 systemd: Condition check resulted in Bluetooth service being skipped 6.2.2 Bluetooth が suspend-to-idle 中のデバイスを即座に立ち上げてしまう 6.2.3 ヘッドレス/サーバのシステムでログアウト後に Bluetooth がオフになる\n- 6.3 アダプタの問題 6.3.1 hcitool scan: Device not found 6.3.2 bluetoothctl: No default controller available 6.3.3 rfkill unblock: Do not unblock 6.3.4 Bluetooth USB ドングル 6.3.4.1 ドングルから短距離にいるときにオーディオデバイスがおかしくなる 6.3.4.2 CSR ドングル 0a12:0001 6.3.5 Logitech Bluetooth USB ドングル 6.3.6 Foxconn / Hon Hai / Lite-On の Broadcom デバイス 6.3.7 Intel の複合 WiFi と Bluetooth カード 6.3.8 Windows とのデュアルブート環境における Mediatek MT7921 や MT7961 6.3.9 サスペンド/復帰後にアダプタが消える\n- 6.4 ペアリングと接続の問題 6.4.1 コンピュータが表示されない 6.4.2 デバイスを接続した数秒後に切断してしまう 6.4.3 スキャンしてもデバイスが表示されない 6.4.4 Intel Corp. AX200 Bluetooth で BLE デバイスが見つからない 6.4.5 スリープ後に再接続できない\n- 6.5 デバイス固有の問題 6.5.1 Bluetooth マウスのラグ / 接続断 / 応答なし 6.5.2 オーディオデバイスが br-connection-profile-unavailable で接続に失敗する 6.5.3 ヘッドホンとマウスの干渉 6.5.4 TP-LINK UB400 と Xbox のコントローラが接続/切断を繰り返す\n- 6.6 ファイル転送の問題 6.6.1 gnome-bluetooth 6.6.2 シンボリックリンクのせいで、転送されたファイルを受信できない\n\n- 6.1.1 デバッグ\n- 6.1.2 非推奨の BlueZ ツール\n\n- 6.2.1 systemd: Condition check resulted in Bluetooth service being skipped\n- 6.2.2 Bluetooth が suspend-to-idle 中のデバイスを即座に立ち上げてしまう\n- 6.2.3 ヘッドレス/サーバのシステムでログアウト後に Bluetooth がオフになる\n\n- 6.3.1 hcitool scan: Device not found\n- 6.3.2 bluetoothctl: No default controller available\n- 6.3.3 rfkill unblock: Do not unblock\n- 6.3.4 Bluetooth USB ドングル 6.3.4.1 ドングルから短距離にいるときにオーディオデバイスがおかしくなる 6.3.4.2 CSR ドングル 0a12:0001\n- 6.3.5 Logitech Bluetooth USB ドングル\n- 6.3.6 Foxconn / Hon Hai / Lite-On の Broadcom デバイス\n- 6.3.7 Intel の複合 WiFi と Bluetooth カード\n- 6.3.8 Windows とのデュアルブート環境における Mediatek MT7921 や MT7961\n- 6.3.9 サスペンド/復帰後にアダプタが消える\n\n- 6.3.4.1 ドングルから短距離にいるときにオーディオデバイスがおかしくなる\n- 6.3.4.2 CSR ドングル 0a12:0001\n\n- 6.4.1 コンピュータが表示されない\n- 6.4.2 デバイスを接続した数秒後に切断してしまう\n- 6.4.3 スキャンしてもデバイスが表示されない\n- 6.4.4 Intel Corp. AX200 Bluetooth で BLE デバイスが見つからない\n- 6.4.5 スリープ後に再接続できない\n\n- 6.5.1 Bluetooth マウスのラグ / 接続断 / 応答なし\n- 6.5.2 オーディオデバイスが br-connection-profile-unavailable で接続に失敗する\n- 6.5.3 ヘッドホンとマウスの干渉\n- 6.5.4 TP-LINK UB400 と Xbox のコントローラが接続/切断を繰り返す\n\n- 6.6.1 gnome-bluetooth\n- 6.6.2 シンボリックリンクのせいで、転送されたファイルを受信できない\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "1. Bluetooth プロトコロスタックを提供する、bluez パッケージをインストールします。\n1. bluetoothctl ユーティリティを提供する、bluez-utils をインストールします。または bluez-utils-compatAUR をインストールして、非推奨の BlueZ tools を追加します。\n1. 一般的な Bluetooth ドライバは、btusb カーネルモジュールです。このモジュールがロードされているかどうかを確認してください。もしロードされていなければ、モジュールをロードしてください。\n1. bluetooth.service を起動/有効化します。\n\n- デフォルトでは bluetooth デーモンは lp グループのメンバーのユーザーだけに bnep0 デバイスを提供します。bluetooth テザリングに接続するときはユーザーをグループに追加しておいてください。必要なグループは /etc/dbus-1/system.d/bluetooth.conf ファイルで変更することができます。\n- Bluetooth アダプターには Wi-Fi カードがバンドルされているものもあります (例: Intel Centrino[リンク切れ 2023-09-16])。これらの Bluetooth アダプターをカーネルから見えるようにするには、まず Wi-Fi カードを有効にする必要があります (大体はラップトップ上のキーボードショートカットを使う)。\n- Bluetooth カードによってはネットワークアダプタと衝突することがあります (例: Broadcom)。したがって、ネットワークサービスを起動する前に Bluetooth デバイスを接続するようにしてください。\n- hcitool や hciconfig などのツールは上流では非推奨となっており、bluez-utils にはもはや含まれていません。アップデートされないことが決まっているため、スクリプトの中で使用している場合は使わないように書き換えることを推奨します。それでも使いたい場合は bluez-utils-compatAUR をインストールしてください。詳しい情報は FS#53110 や Bluez メーリングリスト を参照。\n\n"
    },
    {
      "title": "コンソール",
      "level": 4,
      "content": "- bluetoothctl — シェルからデバイスをペアリングすることは、最も単純で信頼性の高いオプションの一つです。\n\n- bluetuith — ターミナルユーザインターフェイスによる Bluetooth マネージャを提供します。OBEX ファイル転送とマウスのサポート付きで、デバイス/アダプタを簡単に管理できます。\n\n"
    },
    {
      "title": "グラフィカル",
      "level": 4,
      "content": "以下のパッケージでは、Bluetooth をカスタマイズするためのグラフィカルインターフェイスが利用可能です。\n\n- GNOME Bluetooth — GNOME の Bluetooth ツール。 gnome-bluetooth-3.0 バックエンドを提供 (gnome-bluetooth はレガシーです) gnome-shell ステータスモニターアプレットを提供 gnome-control-center は設定用のフロントエンド GUI を提供しており、アクティビティ概要で Bluetooth と入力するか、 gnome-control-center bluetooth コマンドでアクセスすることができます。 また、bluetooth-sendto コマンドを直接起動して、リモートデバイスにファイルを送信することも可能です。 nautilus-bluetoothAUR は Nautilus の右クリックメニューに \"Bluetoothで送信\" エントリを追加します。 ファイルを受信するには、Bluetooth 設定パネルを開きます。Bluetooth パネルが開いている間のみ受信できます。 Thunar のファイルプロパティメニューの 送信先 メニューに Bluetooth エントリを追加するには、説明 ここ を参照してください。(設定が必要なコマンドは bluetooth-sendto %F です)\n\n- gnome-bluetooth-3.0 バックエンドを提供 (gnome-bluetooth はレガシーです)\n- gnome-shell ステータスモニターアプレットを提供\n- gnome-control-center は設定用のフロントエンド GUI を提供しており、アクティビティ概要で Bluetooth と入力するか、 gnome-control-center bluetooth コマンドでアクセスすることができます。\n- また、bluetooth-sendto コマンドを直接起動して、リモートデバイスにファイルを送信することも可能です。\n- nautilus-bluetoothAUR は Nautilus の右クリックメニューに \"Bluetoothで送信\" エントリを追加します。\n- ファイルを受信するには、Bluetooth 設定パネルを開きます。Bluetooth パネルが開いている間のみ受信できます。\n- Thunar のファイルプロパティメニューの 送信先 メニューに Bluetooth エントリを追加するには、説明 ここ を参照してください。(設定が必要なコマンドは bluetooth-sendto %F です)\n\n- Bluedevil — KDE の Bluetooth ツール。 Dolphin やシステムトレイに Bluetooth のアイコンが表示されていない場合は、システムトレイオプションで有効にするか、ウィジェットを追加してください。アイコンをクリックすることで、Bluedevil の設定や Bluetooth デバイスの検出が可能です。KDE システム設定からもインターフェースが利用できます。\n\n- Blueberry — GNOME Bluetooth から Linux Mint でスピンオフした Blueberry は全てのデスクトップ環境で動作します。Obex Object Push によるファイル受信をサポートしていません。\n\n- Blueman — フル機能の Bluetooth マネージャー\n\n- ObexFTP — OBEX 対応のデバイスとの間でファイルを転送するツール。\n\n"
    },
    {
      "title": "ペアリング",
      "level": 2,
      "content": "このセクションでは、bluetoothctl CLI を使って bluez5 を直接設定する方法を説明しています。これは、代替のフロントエンドツール(例えば GNOME Bluetooth)を使用している場合は必要ないかもしれません。\n\n正確な手順は、利用するデバイスとその入力機能によります。以下は bluetoothctl を使ってデバイスをペアリングする一般的な説明です。\n\nbluetoothctl 対話コマンドを実行してください。help と入力することで利用できるコマンドのリストを表示できます。\n\n1. (任意) select MAC Address と入力してデフォルトのコントローラを選択してください。\n1. (任意) デバイスがオフになっている場合、power on と入力してコントローラへの電源供給をオンにしてください。デバイスはデフォルトでオンになっています (#アダプタのデフォルト電源状態)。\n1. devices と入力して、ペアリングしたいデバイスの MAC アドレスを取得してください。\n1. デバイスが表示されないときは scan on コマンドでデバイス検出モードにしてください。\n1. agent on でエージェントをオンにするか、特定のエージェントを選択してください: agent の後にタブキーを2回押すと、利用可能なエージェントのリストが表示されるはずです。Bluetooth エージェントとは、Bluetooth の 'ペアリングコード' を管理するもののことです。エージェントは、'ペアリングコード'の受信に応答したり、'ペアリングコード'を送信したりできます。ほとんどの場合、default-agent を使うのが適切なはずです。[1]\n1. pair MAC Address と入力することでペアリングを実行します (タブ補完が使えます)。\n1. PIN がないデバイスを使う場合は、手動でデバイスを信頼する必要があるかもしれません。trust MAC Address と入力してこれを行なって下さい。デバイスを信頼するには trust MAC_address と入力してください。\n1. connect MAC_address を使って接続を確立してください。\n\nセッションの例は以下のようになります:\n\n```\n$ bluetoothctl\n```\n\n```\n[NEW] Controller 00:10:20:30:40:50 hostname [default]\n[bluetooth]# agent KeyboardOnly\nAgent registered\n\n[bluetooth]# default-agent\nDefault agent request successful\n\n[bluetooth]# power on\nChanging power on succeeded\n[CHG] Controller 00:10:20:30:40:50 Powered: yes\n\n[bluetooth]# scan on\nDiscovery started\n[CHG] Controller 00:10:20:30:40:50 Discovering: yes\n[NEW] Device 00:12:34:56:78:90 device name\n[CHG] Device 00:12:34:56:78:90 LegacyPairing: yes\n\n[bluetooth]# pair 00:12:34:56:78:90\nAttempting to pair with 00:12:34:56:78:90\n[CHG] Device 00:12:34:56:78:90 Connected: yes\n[CHG] Device 00:12:34:56:78:90 Connected: no\n[CHG] Device 00:12:34:56:78:90 Connected: yes\nRequest PIN code\n[agent] Enter PIN code: 1234\n[CHG] Device 00:12:34:56:78:90 Paired: yes\nPairing successful\n[CHG] Device 00:12:34:56:78:90 Connected: no\n\n[bluetooth]# connect 00:12:34:56:78:90\nAttempting to connect to 00:12:34:56:78:90\n[CHG] Device 00:12:34:56:78:90 Connected: yes\nConnection successful\n```\n\n"
    },
    {
      "title": "デュアルブートペアリング",
      "level": 3,
      "content": "デュアルブート環境でデバイスをペアリングするには、Linux の方でペアリングキーを変更して Windows または macOS で使用されているペアリングキーと同じにする必要があります。\n\nこのページでは、これを手動で行う方法のみを説明しています。この手順を自動化するには、bt-dualboot プロジェクトや関連するリポジトリを参照してください。\n\n"
    },
    {
      "title": "設定方法",
      "level": 4,
      "content": "これを行うには、まず Arch Linux 上でデバイスのペアリングを行います。その後、もう一方の OS を再起動し、デバイスをペアリングします。ここでペアリング・キーを取り出す必要がありますが、まず Bluetooth デバイスの電源を切り、接続を試みないようにします。\n\n"
    },
    {
      "title": "Windows の場合",
      "level": 4,
      "content": "まず、Windows を起動してください。\n\nリンクキーを含むレジストリキーは、SYSTEM アカウントでしかアクセスできないため、ログインすることができません。そのため、regedit.exe を SYSTEM として実行するには、Windows Sysinternals 公式サイトにある Microsoft の PsExec ツールが必要になります。\n\nPsTools をダウンロードし、PsExec64.exe を解凍します。\n\nコマンドシェル の管理者インスタンスで、解凍した EXE の場所からレジストリエディタを起動してください:\n\n```\n.\\PsExec64.exe -s -i regedit.exe\n```\n\nレジストリエディタで、以下のレジストリキーに移動します:\n\n```\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\BTHPORT\\Parameters\\Keys\n```\n\nこのキーの中に各 Bluetooth アダプターの MAC アドレス別のキーがあります。複数のキーがあり、どれを使えばいいかわからない場合は、このガイドに従って、目的の Bluetooth アダプタの MAC アドレスを検索してください。\n\n目的のデバイスアダプタキーの中に、ペアリングされたデバイスのそれぞれに対してキーが、MAC アドレスと関連付けられて存在しています。\n\nインストール間で共有したい各ペアデバイスについて、キー全体を右クリックし、.reg ファイルとしてエクスポートしてください。これはテキストファイルで、このファイルからキーをコピーできます。\n\nこのファイルにバイナリキーが1つだけ存在する場合、Bluetooth 5.1 デバイスではなく、そのペアリングキーが必要なもの全てであるということになります。\n\nペアリングしたデバイスに複数のキー (LTK や IRK など) が存在する場合、これは Bluetooth 5.1 デバイスであるということになります。これらのキーを使う方法は #Bluetooth 5.1 キーの準備 を見てください。\n\n最後に、キーを Linux 環境にインポートするために、Linux を起動して #終わりに へ進んでください。\n\nArch をリブートしてください。chntpw をインストールして、Windows システムドライブをマウントします。\n\n```\n$ cd /path/to/windows/system/Windows/System32/config\n$ chntpw -e SYSTEM\n```\n\nchntpw 環境の中で以下を実行します。\n\n```\n> cd CurrentControlSet\\Services\\BTHPORT\\Parameters\\Keys\n```\n\nもしくは\n\n```\n> cd ControlSet00X\\Services\\BTHPORT\\Parameters\\Keys\n```\n\n次に、Bluetooth アダプタの MAC アドレスを取得し、そのフォルダを入力します。\n\n```\n> ls\n> cd your-device's-mac-address\n```\n\nペアリングしているデバイスにも同じことをします。Bluetooth 5.1 デバイスでない場合、ペアリングキーしか表示されません:\n\n```\n> ls\n```\n\n```\nNode has 0 subkeys and 1 values\nsize  type        value name    [value if type DWORD]\n16    REG_BINARY <123456789876>\n```\n\nBluetooth 5.1 デバイスである場合、hex を通して、デバイスのキーを取得します。\n\n```\n> hex 123456789876\n```\n\n```\n:00000 XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX (いくつかの他の文字)\n```\n\n”XX\" はペアリング・キーです。どのキーがどの MAC アドレスにマッピングされているか、メモしておいてください。\n\nBluetooth 5.1 デバイスである場合、1つのデバイスに対応するキーが複数表示されます。\n\n```\nNode has 0 subkeys and 8 values\n  size     type              value name             [value if type DWORD]\n    16  3 REG_BINARY         <LTK>\n     4  4 REG_DWORD          <KeyLength>               16 [0x10]\n     8  b REG_QWORD          <ERand>\n     4  4 REG_DWORD          <EDIV>                 37520 [0x9290]\n    16  3 REG_BINARY         <IRK>\n     8  b REG_QWORD          <Address>\n     4  4 REG_DWORD          <AddressType>              1 [0x1]\n     4  4 REG_DWORD          <AuthReq>                 45 [0x2d]\n```\n\nこれらのキーを使う方法は #Bluetooth 5.1 キーの準備 を見てください。必要な値を得るには hex value_name を使います。\n\n最後に、キーを Linux 環境にインポートするために #終わりに へ進んでください。\n\n"
    },
    {
      "title": "macOS の場合",
      "level": 4,
      "content": "macOS を起動し:\n\n- macOS Monterey 及びそれ以降の場合: Keychain Access を開き、Bluetooth と検索してください。 日付順でソートしてください。 対象のデバイスを最近取り除いて再接続した場合、キーを変更日時順でソートして、最新のものを選べばよいです。キーはおそらく MobileBluetooth (古い Bluetooth デバイスの場合) という名前か、UUID (Bluetooth 5.1 以降) だけです。 対象のエントリをダブルクリックしてください。Account フィールドの MAC アドレスが対象デバイスの MAC アドレスと一致することを確認してください。 \"Show password\" チェックボックスをクリックしてください。ここで、パスワードを2回入力する必要があります。 パスワードフィールド内のテキストをコピーしてください (⌘+a ⌘+c)。これは実際には XML ファイルです。\n\n1. Keychain Access を開き、Bluetooth と検索してください。\n1. 日付順でソートしてください。\n1. 対象のデバイスを最近取り除いて再接続した場合、キーを変更日時順でソートして、最新のものを選べばよいです。キーはおそらく MobileBluetooth (古い Bluetooth デバイスの場合) という名前か、UUID (Bluetooth 5.1 以降) だけです。\n1. 対象のエントリをダブルクリックしてください。Account フィールドの MAC アドレスが対象デバイスの MAC アドレスと一致することを確認してください。\n1. \"Show password\" チェックボックスをクリックしてください。ここで、パスワードを2回入力する必要があります。\n1. パスワードフィールド内のテキストをコピーしてください (⌘+a ⌘+c)。これは実際には XML ファイルです。\n\n1. テキストをホームディレクトリ内の bt_keys.txt ファイルにペーストしてください。\n\n- テキストをホームディレクトリ内の bt_keys.txt ファイルにペーストしてください。\n\n- High Sierra 及びそれ以降の場合、次のコマンドをターミナルで実行してください: # defaults read /private/var/root/Library/Preferences/com.apple.bluetoothd.plist LinkKeys > ~/bt_keys.txt\n- Sierra 及びそれ以前の場合、次のコマンドをターミナルで実行してください: # defaults read /private/var/root/Library/Preferences/blued.plist LinkKeys > ~/bt_keys.txt\n\n```\n# defaults read /private/var/root/Library/Preferences/com.apple.bluetoothd.plist LinkKeys > ~/bt_keys.txt\n```\n\n```\n# defaults read /private/var/root/Library/Preferences/blued.plist LinkKeys > ~/bt_keys.txt\n```\n\nすると、~/.bt_keys.txt ファイルには、確立された Bluetooth キーが含まれています。古いバージョンの macOS (High Sierra 及びそれ以前) では、先に進む前にキーの並びを逆にする必要があります。例えば、98 54 2f aa bb cc dd ee ff gg hh ii jj kk ll mm は MM LL KK JJ GG FF EE DD CC BB AA 2F 54 98 になります。\n\n```\n>>> key = \"98 54 2f aa bb cc dd ee ff gg hh ii jj kk ll mm\"\n>>> \" \".join(reversed(key.strip().split()))\n```\n\nBluetooth 5.1 デバイスの場合、1つのデバイスに対して複数のキーが関連付けられています。それらのキーを使用する方法については #Bluetooth 5.1 キーの準備 を見てください。\n\n最後に、キーを Linux 環境にインポートするために、Linux を起動し、#終わりに へ進んでください。\n\n"
    },
    {
      "title": "Bluetooth 5.1 キーの準備",
      "level": 4,
      "content": "#Windows の場合 や #macOS の場合 の章に従っていて Bluetooth 5.1 キーが存在していた場合、それらのキーを Linux にインポートする前に特定の変換をかける必要があります。#終わりに の章で使うために、要求されたファイルを適切に作成してください。この手順は対象デバイスによって異なり、キーの一部を操作する必要があります。これを行うためのユーティリティは以下で挙げられています。\n\nTable content:\nデバイス | 元のキー及び変換 (Windows) | 元のキー及び変換 (macOS) | キーの保存先ファイル\nLogitech MX Master 3 Xbox One S Wireless Controller | IRK をコピー。 16進数の桁間のスペースを除去。 | ? | IdentityResolvingKey.Key\nLTK をコピー。 16進数の桁間のスペースを除去。 | ? | SlaveLongTermKey.Key と PeripheralLongTermKey.Key\nERand と EDIV は 0 にする必要あり。 | Random Number と Encrypted Diversifier は 0 にする必要あり。 | –\nThinkPad TrackPoint Keyboard II Pebble M350 マウス Logitech G604 Lightspeed マウス | IRK をコピー バイトの順番を逆に。 | Remote IRK をコピー。 Base64 から16進数に変換。 | IdentityResolvingKey.Key\nLTK をコピー。 16進数の桁間のスペースを除去。 | Remote Encryption を Long-term Key にコピー。 Base64 から16進数に変換。 | LongTermKey.Key\nERand をコピー。 バイトの順番を逆に。 数値全体を10進数に変換。 | Remote Encryption を Random Number にコピー Base64 をリトルエンディアンの10進数に変換 (以下の Python コードを参照)。 | LongTermKey.Rand\nEDIV をコピー。 バイトの順番を逆に。 数値全体を10進数に変換。 | Remote Encryption を Encrypted Diversifier にコピー。 Base64 からリトルエンディアンの10進数に変換 (以下の Python コードを参照)。 | LongTermKey.EDiv\n他のデバイス | LTK をコピー。 16進数の桁間のスペースを除去。 | Remote IRK をコピー。 Base64 から16進数に変換。 | LongTermKey.Key\nERand をコピー。 バイトの順番を逆に。 数値全体を10進数に変換。 | Remote Encryption を Long-term Key にコピー。 Base64 から16進数に変換。 | LongTermKey.Rand\nEDIV をコピー。 16進数の桁間のスペースを除去。 | Remote Encryption を Encrypted Diversifier にコピー。 Base64 から16進数に変換。 バイトの順番を逆に。 | LongTermKey.EDiv\nXbox ワイヤレスコントローラ | LTK をコピー。 16進数の桁間のスペースを除去。 | ? | SlaveLongTermKey.Key\n\n- Logitech MX Master 3\n- Xbox One S Wireless Controller\n\n- IRK をコピー。\n- 16進数の桁間のスペースを除去。\n\n- LTK をコピー。\n- 16進数の桁間のスペースを除去。\n\n- ThinkPad TrackPoint Keyboard II\n- Pebble M350 マウス\n- Logitech G604 Lightspeed マウス\n\n- IRK をコピー\n- バイトの順番を逆に。\n\n- Remote IRK をコピー。\n- Base64 から16進数に変換。\n\n- LTK をコピー。\n- 16進数の桁間のスペースを除去。\n\n- Remote Encryption を Long-term Key にコピー。\n- Base64 から16進数に変換。\n\n- ERand をコピー。\n- バイトの順番を逆に。\n- 数値全体を10進数に変換。\n\n- Remote Encryption を Random Number にコピー\n- Base64 をリトルエンディアンの10進数に変換 (以下の Python コードを参照)。\n\n- EDIV をコピー。\n- バイトの順番を逆に。\n- 数値全体を10進数に変換。\n\n- Remote Encryption を Encrypted Diversifier にコピー。\n- Base64 からリトルエンディアンの10進数に変換 (以下の Python コードを参照)。\n\n- LTK をコピー。\n- 16進数の桁間のスペースを除去。\n\n- Remote IRK をコピー。\n- Base64 から16進数に変換。\n\n- ERand をコピー。\n- バイトの順番を逆に。\n- 数値全体を10進数に変換。\n\n- Remote Encryption を Long-term Key にコピー。\n- Base64 から16進数に変換。\n\n- EDIV をコピー。\n- 16進数の桁間のスペースを除去。\n\n- Remote Encryption を Encrypted Diversifier にコピー。\n- Base64 から16進数に変換。\n- バイトの順番を逆に。\n\n- LTK をコピー。\n- 16進数の桁間のスペースを除去。\n\n- 値からスペースを取り除くには、このオンラインツールや以下の Python コードを使用できます:\n\n```\n>>> \"key_value\".replace(\" \", \"\")\n```\n\n- 以下の Python コードはバイトの順番を逆にするだけです:\n\n```\n>>> ERand=\" 63 02 84 B8 5D 40 44 DF   \"\n>>> ERand=list(reversed(ERand.strip().split()))\n```\n\n- 以下の Python コードは、一部で必要となる追加の10進数変換を行います:\n\n```\n>>> int(\"\".join(ERand), 16)\n16088054540146049635\n```\n\n- 以下の Python コードは base64 から16進数への変換を行います:\n\n```\nbinascii.hexlify(base64.decodebytes(b'...')).upper()\n```\n\n- 以下の Python コードは完全な macOS Encrypted Diversifier の変換を行います:\n\n```\nstruct.unpack('<H', base64.decodebytes(b'...'))\n```\n\n- 以下の Python コードは完全な macOS Random Number の変換を行います:\n\n```\nstruct.unpack('<Q', base64.decodebytes(b'...'))\n```\n\n一般的なケースの例としては:\n\n- LTK の値 48 4D AF CD 0F 92 22 88 0A 52 9A F4 76 DA 8B 94 は、LongTermKey.Key の値 484DAFCD0F9222880A529AF476DA8B94 となります。\n- ERand の値 63 02 84 B8 5D 40 44 DF は、Rand の値 16088054540146049635 となります。\n- EDIV の値 37520 は、EDiv の値 37520 となります。\n\n"
    },
    {
      "title": "終わりに",
      "level": 4,
      "content": "キーを手に入れたら、ユーザーを root に変更し、以下を実行してください:\n\n```\n# cd /var/lib/bluetooth/BT-Adapter-MAC-address\n```\n\nここには、ペアリングした Bluetooth 機器ごとのフォルダがあります。Arch とデュアルブートでペアリングしたい各デバイスについて、以下を実行します:\n\n```\n# cd device-MAC-address\n```\n\nペアリングキーを持っている場合 (つまり、これは Bluetooth 5.1 デバイスでない)、info ファイルを編集し、[LinkKey] 以下のキーを変更します。例えば:\n\n```\ninfo\n```\n\n```\n[LinkKey]\nKey=XXXXXXXXXXXXXXX\n```\n\n複数のキーが存在する場合 (Bluetooth 5.1 の場合)、以下の info ファイルを編集して、全てのキーをそれぞれの値で置き換えてください。例えば、Xbox One S Wireless Controller の場合:\n\n```\ninfo\n```\n\n```\n[IdentityResolvingKey]\nKey=<IdentityResolvingKey.Key>\n\n[PeripheralLongTermKey]\nKey=<PeripheralLongTermKey.Key>\n\n[SlaveLongTermKey]\nKey=<SlaveLongTermKey.Key>\n```\n\n次に、bluetooth.service と pulseaudio を再起動してください。(pulseaudio -k && pulseaudio --start を使ってください。)\n\nこれで、デバイスに接続できるはずです。\n\n"
    },
    {
      "title": "アダプタのデフォルト電源状態",
      "level": 3,
      "content": "bluez 5.65 以降、BlueZ はデフォルトで、サービスの起動時やサスペンドからの復帰時にすべての Bluetooth アダプタをオンにします。[2]\n\nアダプタを自動で有効化させたくない場合(例えば、ポータブルデバイスなどでバッテリを節約したい場合)、/etc/bluetooth/main.conf の [Policy] セクションで AutoEnable=false を設定してください:\n\n```\n/etc/bluetooth/main.conf\n```\n\n```\n[Policy]\nAutoEnable=false\n```\n\nこの設定を行っても、#ペアリング で説明されているように power on を実行すれば、アダプタを手動でオンにできます。\n\n"
    },
    {
      "title": "起動時に発見可能にする",
      "level": 3,
      "content": "デバイスが常に見えていて、かつ直接接続できる必要がある場合:\n\n```\n/etc/bluetooth/main.conf\n```\n\n```\n[General]\nDiscoverableTimeout = 0\n```\n\n"
    },
    {
      "title": "サスペンドからの復帰",
      "level": 3,
      "content": "Bluetooth キーボードやマウスなどをサスペンドから起動できるようにする。まず、bios の設定を確認し、サスペンドからの復帰 が無効になっていないことを確認します。多くの場合、マザーボードからの Bluetooth は USB デバイスです。\n\nbluetooth アダプターのベンダーコードとデバイス ID を確認してください:\n\n```\n$ lsusb | grep bluetooth -i\n```\n\n```\nBus 001 Device 002: ID 8087:0039 Intel Corp. AX200 Bluetooth\n```\n\nサスペンドからの復帰を有効にするために、ベンダコードとデバイス ID の新しい udev ルールを追加してください:\n\n```\n/etc/udev/rules.d/91-keyboard-mouse-wakeup.rules\n```\n\n```\nSUBSYSTEM==\"usb\", ATTRS{idVendor}==\"8087\", ATTRS{idProduct}==\"0039\" RUN+=\"/bin/sh -c 'echo enabled > /sys$env{DEVPATH}/../power/wakeup;'\"\n```\n\n復帰後に Bluetooth キーボードを自動的に再設定して、例えば異なるキーマップやキーのリピート速度をもたせたりする(詳細は Xorg でのキーボード設定#typematic delay と rate の調整 と xmodmap)には、実行可能なスクリプトを作成してください。\n\n```\nconfigure_keyboard.sh\n```\n\n```\n#!/bin/sh\nexport DISPLAY=:0\nxset r rate 220 30\nxmodmap /your/path/to/.Xmodmap\n```\n\nそして、上記のような追加の udev ルールを作成してください。\n\n```\n/etc/udev/rules.d/92-keyboard-reconfiguration-wakeup.rules\n```\n\n```\nSUBSYSTEM==\"usb\", ATTRS{idVendor}==\"8087\", ATTRS{idProduct}==\"0039\" RUN+=\"/your/path/to/configure_keyboard.sh\"\n```\n\n"
    },
    {
      "title": "実験的な機能を有効化する",
      "level": 3,
      "content": "Bluez スタックは、バグがあるかもしれない新しい機能を D-Bus 実験的オプションおよびカーネル実験的オプションに留めます。実験的な機能は最終的に、安定していると判断され、もはやオプションを必要としなくなるので、どのような実験的な機能が存在するかはバージョンによって異なります (例えば、現在 D-Bus の実験的なインターフェイスを有効化すると、古いヘッドセットのバッテリーレベルを報告できるようになります)。実験的な機能を有効化するには、設定の対応する行をアンコメントしてください:\n\n```\n/etc/bluetooth/main.conf\n```\n\n```\n...\n\n# Enables D-Bus experimental interfaces\n# Possible values: true or false\n#Experimental = true\n\n# Enables kernel experimental features, alternatively a list of UUIDs\n# can be given.\n# Possible values: true,false,<UUID List>\n# Possible UUIDS:\n...\n# Defaults to false.\n#KernelExperimental = true\n```\n\nあるいは、bluetooth.service を編集して、--experimental フラグあるいは --kernel フラグを追加してください。例えば、以下のドロップインファイルのように:\n\n```\n/etc/systemd/system/bluetooth.service.d/override.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/lib/bluetooth/bluetoothd --experimental\n```\n\nいずれの場合でも、bluetooth.service を再起動する必要があります。\n\n"
    },
    {
      "title": "オーディオ",
      "level": 2,
      "content": "通常は、オーディオサーバーと Bluetooth を統合するために追加の手順を実行する必要があります。これについては、以下のセクションで説明します。\n\nBluetooth オーディオや Bluetooth ヘッドセットなどの情報については Bluetooth ヘッドセット のページを見てください。\n\n"
    },
    {
      "title": "PulseAudio",
      "level": 3,
      "content": "Bluetooth ヘッドフォンやスピーカーのようなオーディオ機器を使うには pulseaudio-bluetooth パッケージのインストールが必要です。インストールを反映させるために、pulseaudio を再起動してください: pulseaudio -k。デフォルトの Pulseaudio インストールでは (具体的には、パッケージングされているデフォルトの default.pa でユーザインスタンスを使用している場合)、即座に Bluetooth デバイスからスピーカーにオーディオをストリーミングできるはずです。[3]\n\nシステム全体の PulseAudio 設定がある場合は、デーモンを実行しているユーザー（通常は pulse) が lp グループに属しており、PulseAudio 設定に Bluetooth モジュールをロードしていることを確認します:\n\n```\n/etc/pulse/system.pa\n```\n\n```\n...\nload-module module-bluetooth-policy\nload-module module-bluetooth-discover\n...\n```\n\nこれは任意ですが、Bluetooth デバイスの接続時にすべてのオーディオをそのデバイスに自動で切り替えたい場合、load-module module-switch-on-connect を追加してください。\n\n"
    },
    {
      "title": "PipeWire",
      "level": 3,
      "content": "v0.3.19 以降の PipeWire はデフォルトで Bluetooth をサポートしています。\n\n"
    },
    {
      "title": "ALSA",
      "level": 3,
      "content": "まず、 Bluetooth オーディオデバイスが正しくペアリングされ、システムに接続されていることを確認します。\n\n次に、 bluez-alsa-gitAUR をインストールし、 bluealsa サービスを開始(そして、有効に) し、ユーザーを audio グループに追加します。\n\n次のコマンドを実行して、すべてが意図したとおりに動作しているかどうかを確認します(XX:XX:XX:XX:XX:XX と FILE.wav の部分は置き換えてください):\n\n```\n$ aplay -D bluealsa:SRV=org.bluealsa,DEV=XX:XX:XX:XX:XX:XX,PROFILE=a2dp FILE.wav\n```\n\n最後に、 ~/.asoundrc に次の行を追加します。\n\n```\n~/.asoundrc\n```\n\n```\ndefaults.bluealsa {\n    service \"org.bluealsa\"\n    device \"XX:XX:XX:XX:XX:XX\"\n    profile \"a2dp\"\n}\n```\n\nこれで、 bluealsa デバイスを使って Bluetooth オーディオデバイスに接続できるようになります。ボリューム管理は alsamixer とオプション -D bluealsa を使って通常行われます。\n\n"
    },
    {
      "title": "Bluetooth シリアル",
      "level": 2,
      "content": "Bluetooth-to-Serial modules (HC-05、HC-06) で Bluetooth シリアル通信が機能するようにするには、次の手順に従います:\n\n上記で説明したように、 bluetoothctl を使って Bluetooth デバイスをペアリングします。\n\nbluez-utils-compatAUR をインストールします。新しいツールにはない機能があります。\n\nペアになっているデバイスの MAC アドレスを tty 端末にバインドします:\n\n```\n# rfcomm bind rfcomm0 MAC_address_of_Bluetooth_device\n```\n\nこれで、シリアル通信用に /dev/rfcomm0 を開くことができます:\n\n```\n$ picocom /dev/rfcomm0 -b 115200\n```\n\n"
    },
    {
      "title": "トラブルシューティング",
      "level": 2,
      "content": "Table content:\nこの記事またはセクションは情報が古くなっています。 理由: Replace hciconfig with newer commands. (Discuss)\n\n"
    },
    {
      "title": "デバッグ",
      "level": 4,
      "content": "デバッグするには、最初に bluetooth.service を停止します。\n\nそして -d パラメーターを付けて開始します。\n\n```\n# /usr/lib/bluetooth/bluetoothd -n -d\n```\n\n別のオプションとして、 btmon ツールが有ります。\n\n"
    },
    {
      "title": "非推奨の BlueZ ツール",
      "level": 4,
      "content": "8つの BlueZ ツールは非推奨となり、bluez-utils から削除されましたが、それらのすべてが新しいツールに取って代わられたわけではありません。bluez-utils-compatAUR パッケージは非推奨のツールを含む代替バージョンの bluez-utils を提供します。\n\nTable content:\n非推奨のツール | あり得る代替\ngatttool | btgatt-client, D-Bus Gatt API[リンク切れ 2023-10-29]\nhciattach | btattach\nhciconfig | btmgmt (そして bluetoothctl?)\nhcidump | btmon (そして btsnoop)\nhcitool | なし、D-Bus Device API[リンク切れ 2023-10-29] が利用可能\nrfcomm | なし、D-Bus Profile1 API[リンク切れ 2023-10-29] の実装?\nciptool\nsdptool | なし、機能が、異なる D-Bus オブジェクトに散らばっている模様: Profile[リンク切れ 2023-10-29]、Advertising[リンク切れ 2023-10-29]、そして device[リンク切れ 2023-10-29] と adapter[リンク切れ 2023-10-29] の UUID の配列。\n\n"
    },
    {
      "title": "systemd: Condition check resulted in Bluetooth service being skipped",
      "level": 4,
      "content": "bluetooth.service は /sys/class/bluetooth ディレクトリが存在することのみを要求します。このディレクトリは bluetooth カーネルモジュールによって作成されるはずです。このカーネルモジュールは、systemd-udev が動作している Bluetooth ハードウェアデバイスを発見した場合にのみ、systemd-udev により自動的にロードされます。\n\n/sys/class/bluetooth が存在しない場合、lsmod コマンドを使って、Bluetooth カーネルモジュールがロードされているかどうかを確認してください。Bluetooth デバイスがあるにも関わらずロードされていない場合、Bluetooth モジュールをロードし、bluetooth.service を再起動することで、手動で起動できます。\n\nまた、bluetooth モジュールをロードする際に、対応するカーネル Bluetooth ドライバもロードする必要があります。btusb が最も可能性がありますが、btrtl,btintel,btbcm,bnep,btusb などの可能性もあります。\n\nbluetooth.service のユニットステータスを確認して、このサービスが起動しているかどうかを確認してください。\n\nDebian Bug report logs - #853207 も参照してください。\n\nbluetooth.service の起動に成功したが、まだ Bluetooth を使えないことがあります (例: scan on の時に bluetoothctl が org.Bluez.Error.NotReady のようなメッセージを発する)。この場合、コンピュータを再起動し、次のことをダブルチェックしてください: /sys/class/bluetooth ディレクトリが存在するか; lsmod の出力に正しい Bluetooth モジュールが含まれているか; journal のログを確認するなど。systemd-udev は、また手動の変更をせずとも Bluetooth ハードウェアを自動的に認識するはずです。\n\n"
    },
    {
      "title": "Bluetooth が suspend-to-idle 中のデバイスを即座に立ち上げてしまう",
      "level": 4,
      "content": "suspend-to-idle/S2idle/S0ix/Modern Standby する能力のあるシステムにおいては、Bluetooth コントローラがスリープ中も有効化されたままになります。通常、これにより、Bluetooth デバイスが接続されていると、システムがスリープに移行した直後にスリープが解除されてしまいます。\n\nこれを防ぐには、スリープに移行する前に Bluetooth を完全に無効化できます。bluez-utils をインストールし、以下のファイルを作成してください:\n\n```\n/etc/systemd/system/bluetooth-disable-before-sleep.service\n```\n\n```\n[Unit]\nDescription=Disable Bluetooth before going to sleep\nBefore=sleep.target\nBefore=suspend.target\nBefore=hybrid-sleep.target\nBefore=suspend-then-hibernate.target\nStopWhenUnneeded=yes\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n\nExecStart=/usr/bin/bluetoothctl power off\nExecStop=/usr/bin/bluetoothctl power on\n\n[Install]\nWantedBy=sleep.target\nWantedBy=suspend.target\nWantedBy=hybrid-sleep.target\nWantedBy=suspend-then-hibernate.target\n```\n\nこのサービスを有効化し、スリープに移行した時に Bluetooth デバイスが切断されることや、スリープからの復帰時に Bluetooth が再び接続されることを確認してください。\n\nこの回避策を使用すると、Bluetooth マウス/キーボードを使ってシステムをスリープから復帰させることができなくなります。\n\n"
    },
    {
      "title": "ヘッドレス/サーバのシステムでログアウト後に Bluetooth がオフになる",
      "level": 4,
      "content": "様々な原因が考えられます:\n\n- PulseAudio と PipeWire は両方ともデフォルトでユーザサービスとして動作します。よって、最後のセッションが終了するとこれらのサービスは終了されます。この問題を解決するには、対象のユーザに対して Lingering (残留) を有効化してください。\n- さらに、WirePlumber を PipeWire と共に実行している場合 (これはよくある環境です)、WirePlumber は \"logind-monitor\" を実行します。これは、Bluetooth をログイン時に有効化し、ログアウト時に無効化します。問題の解決方法は WirePlumber#ログアウト後も Bluetooth を実行し続ける/ヘッドレス Bluetooth を見てください。\n\n"
    },
    {
      "title": "hcitool scan: Device not found",
      "level": 4,
      "content": "- 一部のラップトップ (例: Dell Studio 15、Lenovo Thinkpad X1) では、Bluetooth モードを HID から HCI に切り替える必要があります。bluez-hid2hci パッケージをインストールすれば、udev が自動的に切り替えを行うはずです。また、次のコマンドを実行して手動で HCI に切り替えることもできます:\n\n```\n# /usr/lib/udev/hid2hci\n```\n\n- デバイスが表示されず、かつマシンに Windows オペレーティングシステムがある場合、Windows から bluetooth アダプターを有効にして見てください。\n\n- 場合によっては次のコマンドで問題が解決するかもしれません:\n\n```\n# bluetoothctl power on\n```\n\n"
    },
    {
      "title": "bluetoothctl: No default controller available",
      "level": 4,
      "content": "一部のマザーボード Bluetooth コントローラにはバグがあります。バグがこの問題の原因であるか調べるには、journalctl | grep hci を実行してください。このコマンドの出力に \"command tx timeout\" や \"Reading Intel version command failed\" のようなエントリが存在する場合、PC の電源を切り、電源ケーブルを物理的に外して数秒間放置してください。これにより、コントローラにファームウェアを再ロードさせます (通常の再起動では再ロードしません)。こちらのバグレポートを参照してください。\n\nデバイスが rfkill によってブロックされていないことを確認してください。\n\nまた、一部の Intel カード (8260 など) は Bluetooth サービスによって正しく認識されないかもしれません。bluez-utils の代わりに非推奨の bluez-utils-compatAUR を使うことでこの問題が解決したというケースが報告されています。\n\nまた、これは省電力機能が原因かもしれません。その場合、btusb.enable_autosuspend=n カーネルパラメータにより解決できる可能性があります。Red Hat Bugzilla – Bug 1573562 も参照してください。\n\n時々、btusb をオプション無しでアンロード・ロードすればコントローラを元に戻せることがあります:\n\n```\n# modprobe -r btusb\n# modprobe btusb\n```\n\nまた、ドングルが CSR クローンである場合にもこの問題が発生することがあります。\n\n"
    },
    {
      "title": "rfkill unblock: Do not unblock",
      "level": 4,
      "content": "デバイスがソフトブロックされていて ConnMan を動作させている場合、次を試してみて下さい:\n\n```\n$ connmanctl enable bluetooth\n```\n\n"
    },
    {
      "title": "Bluetooth USB ドングル",
      "level": 4,
      "content": "USB ドングルを使う場合は、Bluetooth ドングルが認識されているか確認してください。USB ドングルを挿入する時に journalctl -f を root として実行する(もしくは /var/log/messages.log を調査する)ことで、そのことを確認できます。以下のような見た目であるはずです(hci を見てください)。\n\n```\nFeb 20 15:00:24 hostname kernel: [ 2661.349823] usb 4-1: new full-speed USB device number 3 using uhci_hcd\nFeb 20 15:00:24 hostname bluetoothd[4568]: HCI dev 0 registered\nFeb 20 15:00:24 hostname bluetoothd[4568]: Listening for HCI events on hci0\nFeb 20 15:00:25 hostname bluetoothd[4568]: HCI dev 0 up\nFeb 20 15:00:25 hostname bluetoothd[4568]: Adapter /org/bluez/4568/hci0 has been enabled\n```\n\n最初の2行しか表示されていなかった場合、デバイスは見つかっていますが、そのデバイスを立ち上げる必要があります。 例:\n\n```\n# btmgmt\n```\n\n```\n[mgmt]# info\nIndex list with 1 item\nhci0:\tPrimary controller\n\taddr 00:1A:7D:DA:71:10 version 6 manufacturer 10 class 0x000000\n\tsupported settings: powered connectable fast-connectable discoverable bondable link-security ssp br/edr hs le advertising secure-conn debug-keys privacy static-addr \n\tcurrent settings: connectable discoverable bondable ssp br/edr le secure-conn \n\tname Mozart\n\tshort name \n\n[mgmt]# select hci0\nSelected index 0\n\n[hci0]# power up\nhci0 Set Powered complete, settings: powered connectable discoverable bondable ssp br/edr le secure-conn\n\n[hci0]# info\nhci0:\tPrimary controller\n\taddr 00:1A:7D:DA:71:10 version 6 manufacturer 10 class 0x1c0104\n\tsupported settings: powered connectable fast-connectable discoverable bondable link-security ssp br/edr hs le advertising secure-conn debug-keys privacy static-addr \n\tcurrent settings: powered connectable discoverable bondable ssp br/edr le secure-conn\n```\n\nまたは\n\n```\n# bluetoothctl\n```\n\n```\n[bluetooth]# show\nController 00:1A:7D:DA:71:10 (public)\n\tName: Mozart\n\tAlias: Mozart\n\tClass: 0x0000095c\n\tPowered: no\n\tDiscoverable: yes\n\tPairable: yes\n\n[bluetooth]# power on\n[CHG] Controller 00:1A:7D:DA:71:10 Class: 0x001c0104\nChanging power on succeeded\n[CHG] Controller 00:1A:7D:DA:71:10 Powered: yes\n\n[bluetooth]# show\nController 00:1A:7D:DA:71:10 (public)\n\tName: Mozart\n\tAlias: Mozart\n\tClass: 0x001c0104\n\tPowered: yes\n\tDiscoverable: yes\n\tPairable: yes\n```\n\n公式の仕様表に従って、Bluetooth のバージョンが HCI のバージョンにマップされていることを確認できます。例えば、先の出力では、HCI version 6 が Bluetooth version 4.0 です。\n\nデバイスが検出されているか確認するために bluez-utils に含まれている hcitool を使うことができます。次のコマンドで利用可能なデバイスとその識別子・MAC アドレスのリストを表示することが可能です:\n\n```\n$ btmgmt info\n```\n\n```\nIndex list with 1 item\nhci0:\tPrimary controller\n\taddr 00:1A:7D:DA:71:10 version 6 manufacturer 10 class 0x1c0104\n\tsupported settings: powered connectable fast-connectable discoverable bondable link-security ssp br/edr hs le advertising secure-conn debug-keys privacy static-addr\n\tcurrent settings: powered connectable discoverable bondable ssp br/edr le secure-conn\n```\n\nデバイスに関するもっと詳細な情報は、非推奨の hciconfig を使うことで取得できます。(bluez-utils-compatAUR)\n\n```\n$ hciconfig -a hci0\n```\n\n```\nhci0:   Type: USB\n        BD Address: 00:1B:DC:0F:DB:40 ACL MTU: 310:10 SCO MTU: 64:8\n        UP RUNNING PSCAN ISCAN\n        RX bytes:1226 acl:0 sco:0 events:27 errors:0\n        TX bytes:351 acl:0 sco:0 commands:26 errors:0\n        Features: 0xff 0xff 0x8f 0xfe 0x9b 0xf9 0x00 0x80\n        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3\n        Link policy: RSWITCH HOLD SNIFF PARK\n        Link mode: SLAVE ACCEPT\n        Name: 'BlueZ (0)'\n        Class: 0x000100\n        Service Classes: Unspecified\n        Device Class: Computer, Uncategorized\n        HCI Ver: 2.0 (0x3) HCI Rev: 0xc5c LMP Ver: 2.0 (0x3) LMP Subver: 0xc5c\n        Manufacturer: Cambridge Silicon Radio (10)\n```\n\n他のデバイスと同一の USB ホストを共有している場合、オーディオデバイスとの通信に干渉 する可能性があります。オーディオデバイスがバスに接続されている唯一のデバイスであることを確認してください。例:\n\n```\n$ lsusb\n```\n\n```\nBus 002 Device 002: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)\nBus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 001 Device 004: ID 048d:1345 Integrated Technology Express, Inc. Multi Cardreader\nBus 001 Device 003: ID 0424:a700 Standard Microsystems Corp. 2 Port Hub\nBus 001 Device 002: ID 8087:0024 Intel Corp. Integrated Rate Matching Hub\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n```\n\nデバイス ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode) にはリグレッションのバグがあり、現在、カーネルバージョン 5.17 及び < 6.0 でしか動作しません。詳細は、Kernel Bug 60824 を参照してください。\n\n"
    },
    {
      "title": "Logitech Bluetooth USB ドングル",
      "level": 4,
      "content": "Logitech のドングルには Embedded と HCI という二つのモードで動作するものがあります (例: Logitech MX5000)。embedded モードではドングルは USB デバイスをエミュレートするので PC は普通の USB マウス・キーボードを使っていると認識します。\n\nUSB BT ミニレシーバの小さな赤いボタンを押すと他のモードが有効になります。BT ドングルの赤いボタンを押しながらコンピュータに接続してください。ボタンを押して3-5秒で、Bluetooth アイコンがシステムトレイに表示されます (議論)。\n\nまた、bluez-hid2hci パッケージをインストールすることもできます。Logitech のドングルを接続すると自動的に切り替えます。\n\n"
    },
    {
      "title": "Foxconn / Hon Hai / Lite-On の Broadcom デバイス",
      "level": 4,
      "content": "一部のデバイスでは、起動時にファームウェアを書き込む必要があります。\n\n一部のファームウェアは、AUR で broadcom と検索すると入手できます。特出すべきパッケージは broadcom-bt-firmwareAUR です。これは、様々なカード用のファイルを提供します。\n\nまたは、hex2hcd (bluez-utils でインストールされます) を使ってファームウェアを Microsoft Windows の .hex ファイルから .hcd ファイルに変換することもできます。\n\n正しい .hex ファイルを取得するために、lsusb でデバイスの vendor:product コードを検索してください。例:\n\n```\nBus 002 Device 004: ID 04ca:2006 Lite-On Technology Corp. Broadcom BCM43142A0 Bluetooth Device\n```\n\nまたは:\n\n```\nBus 004 Device 004: Id 0489:e031 Foxconn / Hon Hai\n```\n\nもしくは、Windows (仮想マシンでもかまいません) を起動して Device Manager ユーティリティからファームウェアの名前を取得してください。デバイスのモデルを知りたいのに lsusb で表示されない場合、lsusb -v の iProduct でわかることがあります。\n\n.hex ファイルはダウンロードした Windows ドライバーから抽出することができます。Windows を実行する必要はありません。適切なドライバーをダウンロードしてください (例えば、Bluetooth Widcomm[リンク切れ 2023-09-16])。フォーマットにも依りますが、ファイルの展開にはunrar か cabextract が必要である場合があります。多数の .hex ファイルの中から必要なファイルを見つけるには、Win32/bcbtums-win7x86-brcm.inf ファイルの中身を確認して [RAMUSBE031.CopyList] を検索してください。E031 はあなたの使っているデバイスの product コード (大文字) に置き換えて下さい (lsusb で確認できる2番目の16進数)。その下に、必要な .hex ファイルの名前が書かれているはずです。\n\n.hcd ファイルを手に入れたら、/lib/firmware/brcm/BCM.hcd にコピーしてください - このファイル名は dmesg からわかります。あなたのマシンでは異なっている可能性があるため dmesg の出力で確認してください。そして btusb モジュールをリロードしてください:\n\n```\n# rmmod btusb\n# modprobe btusb\n```\n\nこれでデバイスが使えるようになるはずです。以上の設定を永続化させる方法は BBS#162688 を参照。\n\n"
    },
    {
      "title": "Intel の複合 WiFi と Bluetooth カード",
      "level": 4,
      "content": "ネットワーク設定/ワイヤレス#Bluetooth の共存 を見てください。\n\n"
    },
    {
      "title": "Windows とのデュアルブート環境における Mediatek MT7921 や MT7961",
      "level": 4,
      "content": "デュアルブートシステムでは、Bluetooth のファームウェアバージョンが Windows と Linux とで異なる場合、Windows を起動した後に Bluetooth アダプタが動作しなくなります。\n\nこれを防ぐ最も良い方法は、各 OS 用の Bluetooth ドライバ (特にファームウェア) を最新にすることです。\n\nWindows 用の最新バージョンのドライバ (またはファームウェア) を見つけられない場合、最新のファームウェアファイル /usr/lib/firmware/mediatek/BT_RAM_CODE_MT7961_1_2_hdr.bin.xz を Arch Linux からコピーし、Windows へ展開することができます (例えば、C:\\WINDOWS\\system32\\DRIVERS\\。Windows でのファームウェアファイルへのパスはデバイスマネージャから確認できます)。\n\n"
    },
    {
      "title": "サスペンド/復帰後にアダプタが消える",
      "level": 4,
      "content": "まず、アダプタのベンダーと製品 ID を見つけてください。例:\n\nFirst, find vendor and product ID of the adapter. For example:\n\n```\n$ lsusb -tv\n```\n\n```\n/:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/12p, 480M\n    ID 1d6b:0002 Linux Foundation 2.0 root hub\n    ...\n    |__ Port 3: Dev 3, If 0, Class=Wireless, Driver=btusb, 12M\n        ID 8087:0025 Intel Corp. \n    |__ Port 3: Dev 3, If 1, Class=Wireless, Driver=btusb, 12M\n        ID 8087:0025 Intel Corp. \n    ...\n```\n\nこの場合、ベンダー ID は 8087 で、製品 ID は 0025 です。\n\n次に、 usb_modeswitch を使用してアダプタをリセットします:\n\n```\n# usb_modeswitch -R -v vendor_ID -p product_ID\n```\n\n"
    },
    {
      "title": "コンピュータが表示されない",
      "level": 4,
      "content": "携帯からコンピュータが表示されないときは、discoverable モードを有効にしてください:\n\n```\n# bluetoothctl discoverable on\n```\n\ndiscoverable モードがオンになっていることを確認してください:\n\n```\n# bluetoothctl show\n```\n\n```\nPowered: yes\n\tDiscoverable: yes\n\tPairable: yes\n```\n\nまだコンピュータが表示されない場合、以下のように /etc/bluetooth/main.conf 内のデバイスクラスを変更してみて下さい:\n\n```\n# Default device class. Only the major and minor device class bits are\n# considered.\n#Class = 0x000100 # Computer Type (from default config)\nClass = 0x100100 # (Object-Transfer Service & Computer Type)\n```\n\nあるユーザは、携帯からコンピュータを見られるようにするためにはこうするしか無いと報告しています。LG TV(そして、一部の他の機器)はオーディオデバイスから発見可能です。なので、000414 (soundbar クラス)を使用することでそのようなデバイスを発見できるようにできます。\n\nBluetooth デバイス/サービスのクラスを生成するには https://bluetooth-pentest.narod.ru/software/bluetooth_class_of_device-service_generator.html を見てください。\n\n"
    },
    {
      "title": "デバイスを接続した数秒後に切断してしまう",
      "level": 4,
      "content": "デバイスを接続したすぐ後に切断が発生し、ジャーナルの出力に以下のようなメッセージが確認できる場合:\n\n```\nbluetoothd: Unable to get connect data for Headset Voice gateway: getpeername: Transport endpoint is not connected (107)\nbluetoothd: connect error: Connection refused (111)\n```\n\nおそらく別のオペレーティングシステムで同一の Bluetooth アダプタを使ってデバイスがペアリングされていることが原因です (例: デュアルブート)。一部のデバイスは同一の MAC アドレス (例: Bluetooth アダプタ) に対して複数のペアリングを関連付けた場合に対処できません。この問題を解決するには #デュアルブートペアリング の指示に従ってください。\n\n"
    },
    {
      "title": "スキャンしてもデバイスが表示されない",
      "level": 4,
      "content": "Bluetooth Low Energy を使用しているデバイスは bluetoothctl でスキャンしても表示されないことがあります (例: Logitech MX Master)。transport le を使ってスキャンすることができます。\n\n```\n# bluetoothctl\n```\n\n```\n[bluetooth]# menu scan\n[bluetooth]# transport le\n[bluetooth]# back\n[bluetooth]# scan on\n[bluetooth]# devices\n...\nDevice XX:XX:XX:XX:XX:XX DA V2 X <---- 低消費電力なデバイス\n```\n\nもう一つの方法は、bluez-utils-compatAUR をインストールし、bluetooth.service を開始し、以下を実行することです:\n\n```\n# bluetoothctl\n```\n\n```\n[NEW] Controller (MAC) myhostname [default]\n\n[bluetooth]# power on\n[CHG] Controller (MAC) Class: 0x0c010c\nChanging power on succeeded\n[CHG] Controller (MAC) Powered: yes\n\n[bluetooth]# scan on\nDiscovery started\n[CHG] Controller (MAC) Discovering: yes\n```\n\n他のターミナルで:\n\n```\n# hcitool lescan\n```\n\nデバイスが表示されるまで待機してから hcitool を Ctrl+c で閉じてください。bluetoothctl からデバイスが認識されたら通常通りにペアリングできます。\n\n"
    },
    {
      "title": "Intel Corp. AX200 Bluetooth で BLE デバイスが見つからない",
      "level": 4,
      "content": "どうやら、このデバイスでは BLE のパッシブスキャンが壊れているようです。詳細は上流のバグレポートを見てください。\n\n"
    },
    {
      "title": "スリープ後に再接続できない",
      "level": 4,
      "content": "スリープ後や、コンピュータがスリープから復帰した後に、デバイスが自動的に再接続されないことがあります。\n\nこの時、ログに以下のエラーが記録されます:\n\n```\nbluetoothd[487]: Authentication attempt without agent\nbluetoothd[487]: Access denied: org.bluez.Error.Rejected\n```\n\nこれは、デバイスが trusted としてマークされていないことが原因です。#ペアリング を参照してください。\n\n"
    },
    {
      "title": "Bluetooth マウスのラグ / 接続断 / 応答なし",
      "level": 4,
      "content": "Bluetooth マウス#トラブルシューティング を参照してください。\n\n"
    },
    {
      "title": "オーディオデバイスが br-connection-profile-unavailable で接続に失敗する",
      "level": 4,
      "content": "PipeWire (pulseaudio-bluetooth ではない) が使用されているが、PipeWire のインスタンスが実行されていない場合、bluetooth オーディオデバイスは接続に失敗します。PipeWire デーモンを開始するには、pipewire.service ユーザーユニットを開始するか、何らかの音声を再生してください。その後、オーディオデバイスをもう一度接続してみてください。\n\n"
    },
    {
      "title": "ヘッドホンとマウスの干渉",
      "level": 4,
      "content": "Bluetooth マウスとキーボードを同時に使用しているときに音声が途切れる場合は #23 https://bugs.launchpad.net/ubuntu/+source/bluez/+bug/424215 で参照されているように、次を試してくみてださい:\n\n```\n# hciconfig hci0 lm ACCEPT,MASTER\n# hciconfig hci0 lp HOLD,SNIFF,PARK\n```\n\n"
    },
    {
      "title": "TP-LINK UB400 と Xbox のコントローラが接続/切断を繰り返す",
      "level": 4,
      "content": "以下の設定を使用してください:\n\n```\n/etc/bluetooth/main.conf\n```\n\n```\n...\n[General]\nJustWorksRepairing = always\nFastConnectable = true\nClass = 0x000100\n...\n[GATT]\nReconnectIntervals=1,1,2,3,5,8,13,21,34,55\nAutoEnable=true\n...\n```\n\nそして、bluetooth.service を再起動してください。\n\n関連する xpadneo に関する議論を見ることができますが、xpadneo のドライバは必要ありません。\n\n"
    },
    {
      "title": "gnome-bluetooth",
      "level": 4,
      "content": "bluetooth-properties でファイルの受信を有効にしようとしたときに以下のメッセージが表示される場合:\n\n```\nBluetooth OBEX start failed: Invalid path\nBluetooth FTP start failed: Invalid path\n```\n\nXDG ユーザーディレクトリが存在することを確認してください。\n\n"
    },
    {
      "title": "シンボリックリンクのせいで、転送されたファイルを受信できない",
      "level": 4,
      "content": "有効な Bluetooth 接続でファイルの受信に失敗する場合、問題はファイルの転送パス内のシンボリックリンクである場合があります。ジャーナルに以下のようなログが現れます:\n\n```\nJun 18 11:18:13 ember obexd[3338969]: open(/home/me/.cache/obexd/MOC740): Operation not permitted (1)\n```\n\nエラーメッセージに表示されれたパス内にシンボリックリンクが含まれている場合、obexd はデフォルトでそれを拒否します。この挙動は、ドロップインファイルを obex.service ユーザサービスに対して使うことにより初期化時に上書きできます:\n\n```\n~/.config/systemd/user/obex.service.d/10-symlink.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/lib/bluetooth/obexd --symlinks\n```\n\nその後、ユーザの systemd マネージャの設定をリロードし、obex.service ユーザユニットを再起動してください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Keeping Bluetooth devices paired between Linux and Windows\n- Bluetooth link keys on dual-boot systems\n\n"
    }
  ]
}
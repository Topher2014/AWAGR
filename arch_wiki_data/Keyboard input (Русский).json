{
  "title": "Keyboard input (Русский)",
  "url": "https://wiki.archlinux.org/title/Keyboard_input_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Дополнительные клавиши\n\nНеобходимым условием для изменения сопоставления клавиш является понимание того, как нажатие клавиши приводит к появлению символа:\n\n1. Клавиатура посылает компьютеру скан-код (scancode).\n1. Ядро Linux сопоставляет сканкод с кодом клавиши (keycode); смотрите Map scancodes to keycodes.\n1. Раскладка клавиатуры сопоставляет код клавиши с символом клавиши (keysym) в зависимости от того, какие клавиши-модификаторы нажаты. Для консоли Linux смотрите статью Конфигурация клавиатуры в консоли. Для Xorg и Wayland смотрите статью Конфигурация клавиатуры в Xorg.\n\n1. Для консоли Linux смотрите статью Конфигурация клавиатуры в консоли.\n1. Для Xorg и Wayland смотрите статью Конфигурация клавиатуры в Xorg.\n\nБольшинство ваших клавиш уже должны иметь код клавиши или хотя бы скан-код. Клавиши без скан-кода не распознаются ядром; это могут быть дополнительные клавиши от «игровых» клавиатур и т.д.\n\nВ Xorg некоторым символам клавиш (например XF86AudioPlay, XF86AudioRaiseVolume) можно назначить действия (такие как запуск внешних приложений). Подробности смотрите в статье Горячие клавиши#Xorg.\n\nВ консоли Linux некоторым символам клавиш (например, F1 – F246) могут быть назначены определённые действия (например, переключение на другую консоль или печать некоторой последовательности символов). Подробности смотрите в статье Конфигурация клавиатуры в консоли#Создание своей раскладки.\n\n"
    },
    {
      "title": "С помощью showkey",
      "level": 3,
      "content": "Традиционный способ узнать скан код — воспользоваться утилитой showkey(1). showkey ожидает нажатия клавиши, или выходит, если не было нажатий в течение 10 секунд. Чтобы работать с showkey, вы должны быть в виртуальной консоли, а не в графическом окружении или работать, залогинившись по сети. Выполните следующую команду:\n\n```\n# showkey --scancodes\n```\n\nи понажимайте клавиши на клавиатуре; вы должны увидеть скан коды на экране.\n\n"
    },
    {
      "title": "С помощью evtest",
      "level": 3,
      "content": "Для USB клавиатур, видимо, нужно использовать evtest(1) из пакета evtest вместо showkey:[1]\n\n```\n# evtest /dev/input/event12\n...\nEvent: time 1434666536.001123, type 4 (EV_MSC), code 4 (MSC_SCAN), value 70053\nEvent: time 1434666536.001123, type 1 (EV_KEY), code 69 (KEY_NUMLOCK), value 0\nEvent: time 1434666536.001123, -------------- EV_SYN ------------\n```\n\nИспользуйте поле \"value\" из MSC_SCAN. В этом примере показано, что NumLock имеет сканкод 70053 и keycode 69.\n\n"
    },
    {
      "title": "С помощью dmesg",
      "level": 3,
      "content": "Вы можете узнать скан-код клавиши, нажав её и посмотрев вывод команды dmesg. Например, если у вас отображается такая строка:\n\n```\nUnknown key pressed (translated set 2, code 0xa0 on isa0060/serio0\n```\n\nзначит, скан код нужной вам клавиши - 0xa0.\n\n"
    },
    {
      "title": "Определение кодов клавиш",
      "level": 2,
      "content": "Коды клавиш Linux определены в файле /usr/include/linux/input-event-codes.h (смотрите переменные KEY_).\n\n"
    },
    {
      "title": "Определение кодов клавиш в консоли",
      "level": 3,
      "content": "В виртуальной консоли Linux коды клавиш можно узнать утилитой showkey(1). showkey ждёт нажатия клавиш, и если нажатий нет в течение 10 секунд, выходит (это единственный способ выйти из программы) Чтобы работать с showkey, вы должны быть в виртуальной консоли, а не в графическом окружении. Выполните следующую команду:\n\n```\n# showkey --keycodes\n```\n\nи понажимайте клавиши на клавиатуре. Вы должны увидеть коды клавиш на экране.\n\n"
    },
    {
      "title": "Определение кодов клавиш в Xorg",
      "level": 3,
      "content": "В графическом режиме коды клавиш, которые использует Xorg, можно узнать с помощью утилиты xev(1), которая поставляется в пакете xorg-xev. Разумеется, чтобы работать с xev, вы должны находиться в графическом окружении, а не в консоли.\n\nВыполнив следующую команду, вы запустите xev с выводом только релевантной информации:\n\n```\n$ xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf \"%-3s %s\\n\", $5, $8 }'\n```\n\nВот пример вывода:\n\n```\n38  a\n55  v\n54  c\n50  Shift_L\n133 Super_L\n135 Menu\n```\n\nXbindkeys — ещё одна обёртка для xev, которая сообщает коды клавиш.\n\nЕсли вы нажимаете клавишу и ничего не появляется на терминале, это может означать, что либо у клавиши нет скан кода, либо сканкоду не назначен код клавиши, либо какой-то другой процесс отлавливает нажатия клавиш. Если вы подозреваете, что процесс, слушающий X сервер отлавливает нажатия клавиш, вы можете попробовать запустить xev из чистой X сессии:\n\n```\n$ xinit /usr/bin/xterm -- :1\n```\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- kbd-project — официальный сайт утилиты showkey\n\n"
    }
  ]
}
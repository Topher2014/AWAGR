{
  "title": "Irssi (Español)",
  "url": "https://wiki.archlinux.org/title/Irssi_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2024-06-02** \n\nArtículos relacionados\n\n- IRC channels (Español)\n- IRC (Español)\n- WeeChat\n- HexChat\n- /irssi-otr\n\nirssi es un cliente IRC (Español) (Internet Relay Chat) modular basado en la biblioteca ncurses. También soporta los protocolos SILC e ICB mediante plugins.\n\n"
    },
    {
      "title": "Instalación",
      "level": 2,
      "content": "Instale el paquete irssi.\n\nMúltiples scripts están disponibles en el AUR con el nombre irssi-script así como en repositorio de scripts de Irssi.\n\n"
    },
    {
      "title": "Uso",
      "level": 2,
      "content": "Para una introducción detallada consulte la documentación oficial.\n\nSe recomienda ejecutar irssi desde un multiplexor de terminal como Tmux (Español) o GNU Screen. Estos permiten al usuario desconectarse y reconectarse fácilmente a una sesión, además scripts como nicklist.pl dependen de una ventana secundaria. Para iniciar irssi, ejecute\n\n```\n$ irssi\n```\n\nConsulte también irssi(1).\n\n"
    },
    {
      "title": "Comandos",
      "level": 3,
      "content": "Los comandos de irssi comienzan con una barra diagonal y no distinguen entre mayúsculas y minúsculas. El autocompletado está soportado. Puede encontrar información sobre ellos usando el comando /help, la cual también está disponible en línea.\n\nTable content:\nComando | Descripción\n/help | Mostrar todos los comandos o describir un comando determinado.\n/network | Gestiona tus redes de IRC.\n/server | Gestiona tus servidores de IRC.\n/connect | Conectarse a un servidor o red.\n/disconnect | Cierra la conexión actual con un servidor.\nALT+(1-0,q-p,etc) | Cambia la ventana activa. Ctrl+n pasa a la siguiente ventana, Ctrl+p a la ventana anterior.\n/window | Gestiona las ventanas de irssi.\n/layout | Guardar o eliminar la disposición de sus ventanas.\n/statusbar | Gestiona la barra de estado.\n/set | Ver o cambiar la configuración de irssi.\n/alias | Gestiona tus alias.\n\n"
    },
    {
      "title": "Configuración",
      "level": 2,
      "content": "Irssi instala su configuración de defecto en /etc/irssi.conf, si al invocar irssi no se encuentra un archivo de configuración entonces el archivo de defecto es copiado a ~/.irssi/config. La configuración de defecto incluye acceso a múltiples servidores, chatnets y canales. Puedes iniciar irssi con un archivo de configuración alterno usando la bandera --config.\n\n- La orden /save guardará la configuración actual al archivo de configuración de irssi.\n- La orden /save layout guardará la localización de las ventanas abiertas actualmente.\n\n"
    },
    {
      "title": "Autenticación mediante SASL",
      "level": 3,
      "content": "Irssi soporta autenticación mediante el framework SASL (Español) (Simple Authentication and Security Layer).\n\nPuede agregar una red (network) con SASL siguiendo estas órdenes:\n\n```\n/SERVER ADD -ssl -ssl_verify -ssl_capath /etc/ssl/certs -network liberachat -port 6697 irc.libera.chat\n/NETWORK ADD -sasl_mechanism plain -sasl_username usuario -sasl_password contraseña liberachat\n```\n\n- Asegúrese de emplear mayúsculas y minúsculas correctamente para el nombre de la red.\n- El primer comando se encarga de agregar un servidor con #Conexión mediante TLS.\n- Sólo ejecute el segundo comando si la red ya existe.\n- Si la contraseña contiene el carácter $ asegúrate de anteponer otro $ para que irssi logre asignarla correctamente.\n\nReinicie irssi, conecte a la red y busque por el mensaje SASL authentication succeeded.\n\n"
    },
    {
      "title": "Conectar automáticamente a #archlinux al iniciar",
      "level": 3,
      "content": "Inicie irssi y escriba la siguiente orden:\n\n```\n/server add -auto -network liberachat irc.libera.chat\n```\n\nliberachat puede ser sustituido por cualquier palabra, por ejemplo la abreviación lc.\n\nEs importante asegurarse que la autenticación mediante SASL esté configurada correctamente. Es posible usar NickServ manualmente con autosendcmd en lugar SASL, sin embargo, esto causa una condición de carrera al unirse automáticamente a canales. Si se desea, también es posible autenticarse usando certificados SSL reemplazando el uso de contraseñas con NickServ.\n\n```\n/channel add -auto #archlinux liberachat\n/channes add -auto #archlinux-offtopic liberachat\n```\n\n"
    },
    {
      "title": "Conexión mediante TLS",
      "level": 3,
      "content": "Libera.Chat dispone de los puertos 6697, 7000 y 7070 para conexiones SSL/TLS (no 6667). Para conectarse a Libera.Chat mediante TLS es necesario configurar una nueva conexión. Inicie irssi y escriba la orden:\n\n```\n/server add -auto -tls -tls_verify -network liberachat -port 6697 irc.libera.chat\n```\n\nGuarde los cambios realizados con:\n\n```\n/save\n```\n\nSi todo resultó exitoso se ajustará a \"Z\" el mode set. Aparecerá un mensaje similar a: Mode change (+Zi) for user su-nick\n\n"
    },
    {
      "title": "Certificados de cliente",
      "level": 4,
      "content": "Redes como Libera.Chat y OFTC permiten autenticación mediante certificados SSL, la cual es una alternativa a la autenticación mediante contraseñas en texto plano. Consulte autenticando mediante CertFP (en Inglés) para conocer a fondo los detalles.\n\nPara crear un certificado válido durante 730 días que no requiera contraseña ejecute los siguientes comandos (cuando se solicite proveer detalles de Common Name o state puede colocar información cualquiera):\n\n```\n$ openssl req -newkey rsa:4096 -days 730 -x509 -keyout irssi.key -out irssi.crt -nodes \n$ cat irssi.crt irssi.key > ~/.irssi/irssi.pem\n$ chmod 600 ~/.irssi/irssi.pem\n$ rm irssi.crt irssi.key\n```\n\nSeguido, procedemos a obtener el fingerprint del certificado:\n\n```\n$ openssl x509 -sha512 -fingerprint -noout -in ~/.irssi/irssi.pem | sed -e 's/^.*=//;s/://g;y/ABCDEF/abcdef/'\n```\n\nEsta orden hará que el fingerprint SHA512 sea mostrado en pantalla. El comando sed se encarga de dar un formato correcto al fingerprint al eliminar caracteres innecesarios.\n\nCopie la salida del comando anterior, pues ésta será empleada para realizar el registro del certificado en irssi.\n\nUna vez iniciado irssi desconecte de la red y agregue el certificado de cliente junto con las llaves correspondientes. Omita la opción -ssl_pass si el certificado de cliente fue creado sin una contraseña:\n\n```\n/disconnect liberachat\n/server add -ssl_cert ~/.irssi/irssi.pem -ssl_pass contraseña_de_irssi.pem -network liberachat irc.libera.chat 6697\n```\n\nAhora conecte de nuevo a la red (evite usar la orden /reconnect) y registre su fingerprint:\n\n```\n/connect liberachat\n/msg NickServ identify SU_CONTRASEÑA\n/msg NickServ cert add SU_FINGERPRINT\n```\n\nHasta este punto puede eliminar su contraseña del archivo de configuración (en caso de que haberse configurado de esta forma) y guardar la configuración actual con la orden:\n\n```\n/save\n```\n\n"
    },
    {
      "title": "Registro automático",
      "level": 3,
      "content": "```\n/set autolog on\n/save\n```\n\n"
    },
    {
      "title": "Ocultar joins, parts y quits",
      "level": 3,
      "content": "Con el fin de ignorar los mensajes automáticos mostrados cuando un usuario ingresa (joins), deja (leaves) y cierra su conexión (quits) a un canal podemos ingresar la siguiente orden, la cual evitará estos mensajes en todos los canales en los que hayamos ingresado:\n\n```\n/ignore * joins parts quits\n```\n\nVéase smartfilter para restringir mensajes join únicamente a usuarios activos.\n\n"
    },
    {
      "title": "Desplazamiento con el ratón",
      "level": 3,
      "content": "Para habilitar el desplazamiento con el ratón escriba la siguiente orden:\n\n```\n/run scriptassist\n/script install mouse.pl\n```\n\nPuede que sea necesario instalar perl-lwp-protocol-https para que los comandos anteriores funcionen correctamente.\n\nPara habilitar automáticamente este script cuando irssi inicia ejecute la orden:\n\n```\n/script autorun mouse.pl\n```\n\nSi existe un error, usted puede incluir manualmente scripts del directorio ~/.irssi/scripts o ~/.irssi/scripts/autorun con la siguiente orden:\n\n```\n/script load mouse.pl\n```\n\n"
    },
    {
      "title": "Proxy HTTP",
      "level": 3,
      "content": "Para ejecutar irssi detrás de un servidor proxy HTTP es necesario ejecutar las siguientes instrucciones:\n\n```\n/SET use_proxy ON\n/SET proxy_address <Dirección IP del proxy>\n/SET proxy_port <Puerto del proxy>\n/SET -clear proxy_string\n/SET proxy_string_after conn %s %d\n/EVAL set proxy_string connect %s:%d HTTP/1.0\\n\\n\n```\n\nIrssi alterará su archivo de configuración correspondiente; si el proxy no es necesario configure nuevamente use_proxy a OFF.\n\nSi el proxy requiere una contraseña ejecute la orden:\n\n```\n/SET proxy_password <contraseña>\n```\n\nEn caso de que la contraseña ya no sea necesaria escriba:\n\n```\n/SET -clear proxy_password\n```\n\n"
    },
    {
      "title": "Lista de usuarios con tmux",
      "level": 3,
      "content": "El plugin nicklist agrega un panel que lista los nicks de los usuarios conectados al canal actual. Existen dos formas de usarlo:\n\n- screen, el cual simplemente agrega la lista a la derecha de irssi, sin embargo toda la ventana se redibuja cada vez que irssi imprime una linea.\n- fifo, como su nombre lo sugiere escribe la lista en un archivo fifo (first in first out), el cual puede leerse de forma continua con alguna orden como cat ~/.irssi/nicklistfifo.\n\nLa lista de usuarios con fifo será más eficiente con con el comando:\n\n```\n/NICKLIST FIFO\n```\n\nEste archivo fifo se puede utilizar en un panel de tmux dividido verticalmente, con irssi en un panel izquierdo y la salida de la orden cat anterior en un panel pequeño a su derecha. Dado que el panel depende de la dimensión de la sesión tmux que lo crea, una sesión posterior con una diferente geometría necesita recrearlo (lo que también implica un cambio en las dimensiones de la ventana de irssi).\n\nPor ejemplo, el siguiente script primero comprueba si irssi está en ejecución, si no se encuentra se crea una nueva sesión de tmux, una ventana con el nombre irssi y posteriormente ejecuta la orden irssi, finalmente crea un panel derecho con la salida de la orden cat. Sin embargo, si irssi está en ejecución, simplemente se adjunta a la sesión y recrea el panel con cat.\n\n```\n#!/bin/sh\n\nT3=$(pgrep -u \"$USER\" -x irssi)\n\nirssi_nickpane() {\n    tmux setw main-pane-width $(( $(tput cols) - 21));\n    tmux splitw -v \"cat ~/.irssi/nicklistfifo\";\n    tmux selectl main-vertical;\n    tmux selectw -t irssi;\n    tmux selectp -t 0;\n}\n\nirssi_repair() {\n    tmux selectw -t irssi\n    [ \"$(tmux lsp | wc -l)\" -gt 1 ] && tmux killp -a -t 0\n    irssi_nickpane\n}\n\nif [ -z \"$T3\" ]; then\n    tmux new-session -d -s main;\n    tmux new-window -t main -n irssi irssi;\n    irssi_nickpane ;\nfi\n    tmux attach-session -d -t main;\n    irssi_repair ;\nexit 0\n```\n\n"
    },
    {
      "title": "Hostname virtual (vhost)",
      "level": 3,
      "content": "Un vhost puede ser usado para cambiar el hostname cuando irssi está conectado a un servidor de IRC, el hostname es visto cuando se une/parte o algun otro usuario ejecuta la orden whois. Asignar un vhost se hace con frecuencia en los servidores que tienen una dirección IP estática. Sin un hostname virtual la salida de la orden whois se vería así:\n\n```\nnick@123.456.78.90.isp.com\n```\n\nPor otra parte, el resultado de un vhost configurado sería el siguiente, siempre y cuando se tenga el dominio ejemplo.com disponible:\n\n```\nnick@ejemplo.com\n```\n\nTome en cuenta que no todos los servidores de IRC soportan el uso de vhost. Esto puede ser configurado individualmente entre los servidores y no la red, así que si estás experimentando problemas con un servidor prueba con otro en la misma red.\n\n"
    },
    {
      "title": "Preconfiguraciones necesarias",
      "level": 4,
      "content": "Irssi soporta el uso de un hostname virtual siempre y cuando se hayan establecido las configuraciones requeridas. Esto incluye que su host soporte Búsqueda DNS inversa (rDNS) usando Registro de puntero (PTR). Además, debe añadir la línea apropiada a su archivo /etc/hosts.\n\nPara ver si esto funciona, pruebe con la utilidad de búsqueda de DNS host(1) incluida en bind de la siguiente forma (donde ip es una dirección IPv4 normal):\n\n```\n$ host ip\n```\n\nSi esta orden devuelve algo similar a la siguiente linea entonces su rDNS está trabajando.\n\n```\nip.in-addr.arpa nombre de dominio puntero ejemplo.com\n```\n\n"
    },
    {
      "title": "Habilitar el vhost",
      "level": 4,
      "content": "Hay un par de maneras de conectarse a un servidor con un hostname determinado. Una de ellas es utilizar el comando server con un argumento -host como el siguiente:\n\n```\n/SERVER -host ejemplo.com irc.libera.chat\n```\n\nOtra forma sería establecer el hostname (vhost) con la orden set que guardará tu hostname en ~/.irssi/config:\n\n```\n/SET hostname ejemplo.com\n/SAVE\n/SERVER irc.libera.chat\n```\n\n"
    },
    {
      "title": "Véase también",
      "level": 2,
      "content": "- Sitio oficial de Irssi (en inglés)\n- Repositorio oficial de scripts de Irssi (en inglés)\n- Configurando Irssi (en inglés)\n- Guía para usar eficientemente Irssi y Screen (en inglés) por Matt Sparks\n- Notificaciones de IRC con dzen2 (en inglés) por Jason Ryan\n- ¿Qué significan /channel, /network, /server y /connect en Irssi? (en inglés) por Aaron Toponce\n- Consejos para Irssi (en inglés) (Wayback Machine)\n- Unidad de systemd para irssi (en inglés) (Gist en Github)\n\n"
    }
  ]
}
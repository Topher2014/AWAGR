{
  "title": "Пользователи и группы",
  "url": "https://wiki.archlinux.org/title/%D0%9F%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D0%B8_%D0%B8_%D0%B3%D1%80%D1%83%D0%BF%D0%BF%D1%8B",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- DeveloperWiki:UID / GID Database\n- Sudo (Русский)\n- Polkit\n- Права доступа и атрибуты файлов\n- systemd-homed\n- Сброс пароля root\n\nМеханизм пользвателей и групп используется в GNU/Linux для управления доступом к файлам, каталогам и периферийным устройствам. Базовый контроль доступа в Linux прост и не предлагает большого выбора настроек. Некоторые инструменты обеспечивают расширенный набор возможностей, подробнее см. ACL, Capabilities и PAM#Configuration How-Tos.\n\n"
    },
    {
      "title": "Обзор",
      "level": 2,
      "content": "Под пользователем понимается любой, кто работает с компьютером. Как правило, для каждого пользователя в системе создаётся отдельный аккаунт, которому присваивается специальное имя. В качестве имени пользователя можно использовать как реальные имена, вроде Mary или Bill, так и псевдонимы — Dragonlady, Pirate и т.п. С помощью имени пользователь получает доступ к своему аккаунту и, в конечном счёте, к системе. Некоторые системные службы запускаются либо привилегированными аккаунтами, либо строго определёнными аккаунтами пользователей.\n\nМеханизм пользователей был разработан по соображениям безопасности, для ограничения доступа к различным частям системы. Суперпользователь (root) имеет полный доступ к операционной системе и её настройкам. Этот аккаунт используется только для целей системного администрирования; обычные пользователи могут временно повысить уровень своих прав командами su и sudo.\n\nОдин человек может создать несколько аккаунтов с разными именами. Некоторые специфические имена, вроде того же \"root\", зарезервированы и запрещены к использованию.\n\nПользователи часто объединятся в \"группы\". Добавление пользователя в определённую группу обычно даёт ему дополнительные права, связанные с этой группой.\n\n"
    },
    {
      "title": "Права и владельцы",
      "level": 2,
      "content": "Из статьи Всё в UNIX есть файл:\n\nИз статьи Использование абстракции файла в UNIX для работы с сетью[устаревшая ссылка 2024-01-13 ⓘ]:\n\nВ GNU/Linux каждый файл принадлежит какому-то пользователю и группе. Существует три типа прав доступа — чтение, запись и исполнение. Права доступа задаются по отдельности для владельца-пользователя, владельца-группы, и для прочих пользователей, которые не входят в первые две категории. Владельцев файла и права доступа можно узнать с помощью \"длинного\" формата команды ls:\n\n```\n$ ls -l /boot/\n```\n\n```\ntotal 13740\ndrwxr-xr-x 2 root root    4096 Jan 12 00:33 grub\n-rw-r--r-- 1 root root 8570335 Jan 12 00:33 initramfs-linux-fallback.img\n-rw-r--r-- 1 root root 1821573 Jan 12 00:31 initramfs-linux.img\n-rw-r--r-- 1 root root 1457315 Jan  8 08:19 System.map26\n-rw-r--r-- 1 root root 2209920 Jan  8 08:19 vmlinuz-linux\n```\n\nПервая колонка содержит права доступа к файлу (например, правами файла initramfs-linux.img являются -rw-r--r--). Третья и четвёртая колонки содержат соответственно пользователя и группу, которым принадлежит файл. В этом примере все файлы принадлежат пользователю root и группе root.\n\n```\n$ ls -l /media/\n```\n\n```\ntotal 16\ndrwxrwx--- 1 root vboxsf 16384 Jan 29 11:02 sf_Shared\n```\n\nВ этом примере каталог sf_Shared принадлежит пользователю root и группе vboxsf. Владельца и права доступа можно также определить утилитой stat.\n\nПользователь-владелец:\n\n```\n$ stat -c %U /media/sf_Shared/\n```\n\n```\nroot\n```\n\nГруппа-владелец:\n\n```\n$ stat -c %G /media/sf_Shared/\n```\n\n```\nvboxsf\n```\n\nПрава доступа:\n\n```\n$ stat -c %A /media/sf_Shared/\n```\n\n```\ndrwxrwx---\n```\n\nПрава доступа отображаются тремя группами символов, которые являются правами соответственно пользователя, группы и всех остальных. Например, строка -rw-r--r-- говорит о том, что владелец файла имеет права на чтение и запись, но не на выполнение (rw-), а пользователи из группы-владельца и прочие пользователи имеют доступ только на чтение (r-- и r--). С другой стороны, строка drwxrwx--- говорит о том, что у пользователя и группы права на чтение, запись и исполнение (rwx и rwx), а все остальные доступа к файлу не имеют вовсе (---). Первый символ в строке означает тип файла.\n\nВывести список всех файлов, принадлежащих пользователю или группе, можно с помощью утилиты find:\n\n```\n# find / -group имя_группы\n```\n\n```\n# find / -group номер_группы\n```\n\n```\n# find / -user имя_пользователя\n```\n\nИзменить владельцев файла можно командой chown, а права доступа меняются командой chmod:\n\nСм. также chown(1), chmod(1) и Linux file permissions.\n\n"
    },
    {
      "title": "Shadow",
      "level": 2,
      "content": "В Arch Linux инструменты для работы с пользователями, группами и паролями собраны в пакет shadow, который являеется зависимостью мета-пакета base.\n\n"
    },
    {
      "title": "Список файлов",
      "level": 2,
      "content": "Table content:\nФайл | Назначение\n/etc/shadow | Безопасное хранение информации о пользователях\n/etc/passwd | Информация о пользователях\n/etc/gshadow | Скрытая информация о группах\n/etc/group | Принадлежность пользователей к группам\n\n"
    },
    {
      "title": "Управление пользователями",
      "level": 2,
      "content": "Список пользователей, которые в настоящий момент выполнили вход в систему, можно вывести командой who. Список хранящихся в базе данных аккаунтов и их характеристик можно вывести командой passwd -Sa с правами root. Описание формата вывода вы найдёте в руководстве passwd(1).\n\nДобавление нового пользователя выполняется командой useradd:\n\n```\n# useradd -m -G дополнительные_группы -s оболочка_входа имя_пользователя\n```\n\nГруппы в параметре -G задаются именами или номерами существующих групп. Если этот парамет не указан, то поведение useradd зависит от переменной USERGROUPS_ENAB в файле /etc/login.defs. Стандартное поведение (USERGROUPS_ENAB yes) — создать группу, название которой совпадает с именем нового пользователя.\n\nКогда оболочка входа не нужна, например, если аккаунт пользователя создаётся для работы неинтерактивной службы, вместо обычной оболочки можно указать /usr/bin/nologin. В этом случае процедура входа будет корректно отклоняться (см. nologin(8)).\n\nДругие доступные параметры можно найти в руководстве useradd(8).\n\n"
    },
    {
      "title": "Пример добавления пользователя",
      "level": 3,
      "content": "Команда ниже добавит в систему пользователя archie, попутно создав для него домашний каталог, а также задействует настройки по умолчанию для групп, названий каталогов, используемых оболочек и проч.\n\n```\n# useradd -m archie\n```\n\nХотя задавать пароль для защиты нового пользователя не обязательно, всё же рекомендуется это сделать:\n\n```\n# passwd archie\n```\n\nУказанная выше команда useradd автоматически создаст группу archie и сделает её группой по умолчанию для пользователя archie. Считается правильным подходом создавать отдельную группу для каждого нового пользователя.\n\nФлагом -g можно задать другую исходную группу, но объединять пользователей в одну группу (например, users) в многопользовательских системах не рекомендуется. Причина в том, что для совместного доступа на запись для группы пользователей значение umask устанавливается на 002; в итоге все члены группы смогут перезаписывать ваши файлы. См. также User Private Groups. Если всё же необходимо добавить пользователя в какую-то группу, то при его создании укажите её как вспомогательную.\n\nЕсли следовать рекомендованному подходу, т.е. создать группу, название которой совпадает с именем пользователя, то все файлы по умолчанию доступны на запись только создавшему их пользователю. Если вы хотите сделать некий каталог доступным на запись для всех членов определённой группы, то этому каталогу нужно установаить в правах доступа т.н. \"бит setgid\". Все создаваемые в этом каталоге файлы и подкаталоги получат в качестве группы-владельца группу родительского каталога, а не группу пользователя, их создавшего. Т.о. эти файлы будут доступны на запись для всех членов группы:\n\n```\n# chmod g+s каталог_с_совместным_доступом\n```\n\nВременно изменить идентификатор группы GID пользователя можно командой newgrp. Например, после команды newgrp название_группы создаваемые пользователем файлы будут привязаны к идентификатору группы название_группы; при этом заново выполнять вход не потребуется. Чтобы изменить GID обратно на исходный, выполните команду newgrp без аргументов.\n\n"
    },
    {
      "title": "Пример добавления системного пользователя",
      "level": 3,
      "content": "Системные пользователи чаще всего создаются для запуска процесоов/демонов другими пользователями, для защиты (например, с помощью chown) файлов и/или каталогов, а также по другим соображениям безопасности.\n\nКоманда ниже создаст системного пользователя без доступа к командной оболочке и без домашнего каталога (можно также указать флаг -U, чтобы создать группу, название которой совпадает с именем пользователя, и добавить пользователя в эту группу):\n\n```\n# useradd -r -s /usr/bin/nologin имя_пользователя\n```\n\nЕсли необходимо присвоить новому пользователю конкретные идентификаторы UID и GID, то укажите их флагами -u/--uid и -g/--gid:\n\n```\n# useradd -r -u 850 -g 850 -s /usr/bin/nologin имя_пользоваетеля\n```\n\n"
    },
    {
      "title": "Смена имени пользователя или домашнего каталога",
      "level": 3,
      "content": "Команда для изменения домашнего каталога пользователя:\n\n```\n# usermod -d /новый/домашний/каталог -m имя_пользователя\n```\n\nФлаг -m нужен для автоматического создания нового каталога и переноса в него всего содержимого старого.\n\nNote: Обратите внимание, что в строке /старый/домашний/каталог отсутствует закрывающй символ /.\n\n```\n# ln -s /новый/домашний/каталог/ /старый/домашний/каталог\n```\n\nОбратите внимание, что в строке /старый/домашний/каталог отсутствует закрывающй символ /.\n\nКоманда для изменения имени пользователя:\n\n```\n# usermod -l новое_имя старое_имя\n```\n\nСмена имени пользоваеля проста и безопасна, когда выполняется правильно. Просто используйте usermod. Если пользователь входит в \"личную\" группу с таким же именем, то переименовать её можно командой groupmod.\n\nАльтернативный способ — отредактировать непосредственно файл /etc/passwd. В разделе #База данных пользователей дано описание его формата.\n\nТакже следует имейть в виду:\n\n- При использовании sudo убедитесь, что не забыли обновить файл /etc/sudoers, добавив в него нового пользователя (используйте для этого утилиту visudo с правами root).\n- Задачи crontab также необходимо отредактировать, переименовав файл пользователя в файле /var/spool/cron. Затем выполните crontab -e и отредактируйте пути к файлам и права доступа к ним.\n- Содержимое пользовательских файлов и каталогов Wine (вроде ~/.wine/drive_c/users и ~/.local/share/applications/wine/Programs) необходимо отредактировать.\n- Некоторые дополнения Thunderburd, вроде Enigmail, возможно придётся переустановить.\n- Все элементы системы (комбинации клавиш, сценарии оболочки и т.п.), где используются абсолютные пути к файлам в старом домашнем каталоге, необходимо изменить. Чтобы избежать этого в будущем, используйте в скриптах переменные ~ или $HOME для обозначения домашнего каталога.\n- Тажке не забудьте отредактировать файлы настроек в каталоге /etc/, которые полагаются на абсолютные пути (например, файлы Samba, CUPS и т.д.). Найти нуждающиеся в редактировании файлы проще всего командой grep -r старое_имя_пользователя *.\n\n"
    },
    {
      "title": "Другие примеры управления пользователями",
      "level": 3,
      "content": "Команда для добавления информации о пользователе (например, настоящего имени) в виде комментария GECOS:\n\n```\n# chfn имя_пользователя\n```\n\n(здесь chfn запускается в интерактивном режиме).\n\nЛибо же можно добавить более длинный GECOS-комментарий командой:\n\n```\n# usermod -c \"Comment\" имя_пользователя\n```\n\nСледующая команда пометит пароль пользователя как истёкший и потребует от него при следующем входе создать новый:\n\n```\n# chage -d 0 имя_пользователя\n```\n\nУдаляются аккаунты пользователей командой userdel:\n\n```\n# userdel -r имя_пользователя\n```\n\nФлаг -r указывает на то, что домашний каталог и почтовый ящик тоже должны быть удалены.\n\nКоманда для изменения оболочки входа пользователя:\n\n```\n# usermod -s /bin/bash имя_пользователя\n```\n\n"
    },
    {
      "title": "База данных пользователей",
      "level": 2,
      "content": "Информация о пользователях хранится в открытом виде в файле /etc/passwd: каждая строка в нём представляет собой набор из семи полей, описывающих аккаунт.\n\n```\naccount:password:UID:GID:GECOS:directory:shell\n```\n\nПо порядку:\n\n- account — имя пользователя. Это поле не может быть пустым. Применяются стандартные для *NIX правила именования.\n- password — пароль пользователя. Важно: Файл passwd доступен на чтение для всех пользователей в системе, поэтому хранить в нём пароли (в виде хэш-сумм или как-то иначе) небезопасно. Вместо этого в Arch Linux используются shadow-пароли: поле password содержит всего лишь символ x, а хэшированный пароль хранится в файле /etc/shadow, доступ к которому ограничен. По этой причине менять пароли лучше командой passwd.\n- UID — численное значение идентификатора пользователя. В Arch Linux нумерация обычных пользователей (отличных от root) начинается с UID 1000.\n- GID — численное значение идентификатора основной группы пользователя. Идентификаторы групп можно найти в файле /etc/group.\n- GECOS — необязательное поле, носящее информативный характер; обычно содержит настоящее имя пользователя, но может также использоваться службами вроде finger и изменяться командой chfn. Поскольку поле необязательное, его можно оставить пустым.\n- directory — используется командой входа для задания переменной окружения $HOME. Некоторые службы, для которых создаются специальные пользователи, используют для этого корневой каталог /, но обычные пользователи чаще всего хранят домашний каталог в разделе /home.\n- shell — командная оболочка пользователя. Это поле является необязательным, и если в нём ничего не указано, то используется оболочка /bin/bash.\n\nПример:\n\n```\njack:x:1001:1003:Jack Smith,some comment here,,:/home/jack:/bin/bash\n```\n\nСмысл строки следующий: пользователь jack, пароль хранится в /etc/shadow, идентификатор пользователя — 1001, идентификатор его основной группы 1003. Полное имя — Jack Smith, также имеется некоторый комментарий. Домашний каталог /home/jack, используемая командная оболочка — Bash.\n\nКоманда pwck проверяет корректность базы данных. При этом она может отстортировать список пользоватей по идентификаторам групп, что бывает полезно при сравнении:\n\n```\n# pwck -s\n```\n\n"
    },
    {
      "title": "Автоматическая проверка целостности",
      "level": 2,
      "content": "Чтобы не запускать pwck/grpck вручную, можно воспользоваться таймером systemd shadow.timer из пакета shadow. Он по умолчанию включён и каждый день запускает службу shadow.service, которая, в свою очередь, будет запускать pwck(8) и grpck(8) для проверки целосности файлов групп и пользователей.\n\nПри обнаружении несоответствий группы можно отредактировать с помощью команды vigr(8), а пользователей — командой vipw(8). Эти утилиты предоставляют дополнительный слой безопасности, блокируя базы данных на время редактирования. В качестве редактора по умолчанию используется vi, но с помощью переменной окружения EDITOR можно выбрать любой другой.\n\n"
    },
    {
      "title": "Управление группами",
      "level": 2,
      "content": "В файле /etc/group перечислены существующие группы (подробнее см. group(5)). Также существует файл gshadow, который используется достаточно редко (см. gshadow(5)).\n\nКоманда для вывода списка групп, в которых состоит пользователь:\n\n```\n$ groups пользователь\n```\n\nЕсли пользователь не указан, то будет выведен список групп текущего пользователя.\n\nКоманда id позволяет узнать дополнительные подробности, вроде UID и GID пользователя:\n\n```\n$ id пользователь\n```\n\nКоманда для вывода списка существующих групп:\n\n```\n$ cat /etc/group\n```\n\nКоманда для создания новой группы:\n\n```\n# groupadd группа\n```\n\nДобавить пользователя в группу можно командой gpasswd (см. FS#58262 на предмет возможных ошибок):\n\n```\n# gpasswd -a пользователь группа\n```\n\nТакже добавить пользователя в группы можно командой usermod (здесь доп_группы — список групп, разделённых запятыми без пробелов):\n\n```\n# usermod -aG доп_группы пользователь\n```\n\nКоманда для изменения группы, например, переименования:\n\n```\n# groupmod -n новая_группа старая_группа\n```\n\nКоманда для удаления группы:\n\n```\n# groupdel группа\n```\n\nКоманда для удаления пользователя из группы:\n\n```\n# gpasswd -d пользователь группа\n```\n\nПроверить корректность базы данных групп можно командой grpck.\n\n"
    },
    {
      "title": "Список групп",
      "level": 2,
      "content": "В этом разделе объясняется назначение важнейших групп из пакета filesystem. Существует множество других групп, которые создаются при установке пакетов с присвоением корректного GID. Подробности вы найдёте на страницах руководств соответствующих программ.\n\n"
    },
    {
      "title": "Пользовательские группы",
      "level": 3,
      "content": "Часто возникает необходимость добавить обычного (не root) пользователя в одну из групп, обеспечивающих доступ к периферийным устройствам или упрощающих системное администрирование:\n\nTable content:\nГруппа | Файлы | Назначение\nadm |  | Группа администрирования, обычно используется для чтения файлов защищённых логов. Позволяет читать файлы журнала.\nftp | /srv/ftp/ | Доступ к файлам FTP-сервера.\ngames | /var/games | Доступ к некоторым игровым программам.\nhttp | /srv/http/ | Доступ к файлам HTTP-сервера.\nlog |  | Доступ к файлам логов в каталоге /var/log/, созданным syslog-ng.\nrfkill | /dev/rfkill | Управление питанием беспроводных устройств (используется rfkill).\nsys |  | Администрирование принтеров с помощью CUPS.\nsystemd-journal | /var/log/journal/* | Может использоваться как альтернатива группам adm и wheel для чтения журналов systemd [1]. В противном случае отображаются только сообщения, созданные пользователем.\nuucp | /dev/ttyS[0-9]+, /dev/tts/[0-9]+, /dev/ttyUSB[0-9]+, /dev/ttyACM[0-9]+, /dev/rfcomm[0-9]+ | Последовательные порты RS-232 и подключенные к ним устройства.\nwheel |  | Группа администрирования, даёт необходимые права. Имеет доступ к файлам журнала и принтерам в CUPS. Также позволяет работать с утилитами sudo и su (по умолчанию их не использует).\n\n"
    },
    {
      "title": "Системные группы",
      "level": 3,
      "content": "Следующие группы имеют значение для всей системы, и добавление в них пользователям производится только в указанных целях:\n\nTable content:\nГруппа | Файлы | Назначение\ndbus |  | Используется в dbus\nkmem | /dev/port, /dev/mem, /dev/kmem | \nlocate | /usr/bin/locate, /var/lib/locate, /var/lib/mlocate, /var/lib/slocate | См. locate.\nlp | /dev/lp[0-9]*, /dev/parport[0-9]* | Доступ к устройствам параллельного порта (принтеры и прочие).\nmail | /usr/bin/mail | \nnobody |  | Непривилегированная группа.\nproc | /proc/pid/ | Группа для сбора информации о процессах. Должна быть задана явно опцией монтирования gid=, не работает, если смонтировать файловую систему proc с опцией hidepid=\nroot | /* | Полный доступ к администрированию и управлению системой (root, admin).\nsmmsp |  | Группа sendmail.\ntty | /dev/tty, /dev/vcc, /dev/vc, /dev/ptmx | \nutmp | /run/utmp, /var/log/btmp, /var/log/wtmp | \n\n"
    },
    {
      "title": "Группы, существовавшие до перехода на systemd",
      "level": 3,
      "content": "До перехода Arch Linux на systemd пользователи должны были вручную добавляться к этим группам, чтобы получить доступ к устройствам. Такой подход был признан устаревшим после перехода на udev, помечающий устройства меткой uaccess, и logind, динамически присваивающий пользователям права доступа с помощью ACL в соответствии с тем, какой сеанс активен на данный момент. Обратите внимание, что чтобы вышеперечисленное работало, сеанс должен быть корректным (см. General troubleshooting#Session permissions).\n\nЕсть несколько важных исключений, которые требуют добавления пользователей в группы ниже — например, если вы хотите разрешить неавторизованным пользователям доступ к устройствам. Тем не мнее, имейте в виду, что это может стать причиной определённых проблем (например, группа audio мешает быстрому переключению между пользователями, а также даёт приложениям возможность блокировать програмное микширование).\n\nTable content:\nГруппы | Файлы | Назначение\naudio | /dev/audio, /dev/snd/*, /dev/rtc0 | Прямой доступ к звуковому оборудованию для всех сеансов. По-прежнему требуется, чтобы ALSA и OSS работали в удаленных сеансах, см. ALSA#User privileges. Также используется в JACK для выдачи пользователям разрешений на работу в режиме реального времени.\ndisk | /dev/sd[a-zA-Z]*[1-9] | Доступ к блочным устройствам, не затронутым другими группами вроде optical, floppy и storage.\nfloppy | /dev/fd[0-9]* | Доступ к флоппи-дискам.\ninput | /dev/input/event[0-9]*, /dev/input/mouse[0-9]* | Доступ к устройствам ввода. Введено в systemd 215 [2].\nkvm | /dev/kvm | Доступ к виртуальным машинам с использованием KVM.\noptical | /dev/sr[0-9], /dev/sg[0-9] | Доступ к оптическим устройствам, таким как CD- и DVD-приводы.\nscanner | /var/lock/sane | Доступ к оборудованию сканера.\nstorage | /dev/st[0-9]*[lma]*, /dev/nst[0-9]*[lma]* | Даёт доступ к съёмным носителям вроде USB-дисков, устройств flash/jump, MP3-плееров; позволяет монтировать носители [3]. В настоящее время используется в основном для работы с ленточными носителями без использования правил udev: [4], [5], [6], [7].\nvideo | /dev/fb/0, /dev/misc/agpgart | Доступ к устройствам захвата видео, аппаратное ускорение 2D/3D, framebuffer (X можно использовать без поддержки этой группы).\n\n"
    },
    {
      "title": "Неиспользуемые группы",
      "level": 3,
      "content": "Следующие группы в настоящий момент никак не используются.\n\nTable content:\nГруппа | Файлы | Назначение\nbin |  | Историческое наследие.\ndaemon |  | \nlock |  | Использовалась для lockfile-доступа. Требовалась для gnokiiAUR.\nmem |  | \nnetwork |  | Не использовалась по умолчанию. Могла использоваться в NetworkManager (см. NetworkManager#Set up PolicyKit permissions).\npower |  | \nuuidd |  | \nusers |  | Основная группа для пользователей; использовалась, если приватные группы не были предусмотрены. Например, при создании с опцией USERGROUPS_ENAB no в файле /etc/login.defs, или командой useradd с флагом -N/--no-user-group пользователь помещался именно в эту группу.\n\n"
    },
    {
      "title": "Прочие инструменты для работы с базами данных",
      "level": 2,
      "content": "Для просмотра отдельных записей можно использовать getent(1):\n\n```\n% getent group tty\n```\n\nКак отмечалось в разделе #База данных пользователей, для работы с базами данных лучше использовать специализированные утилиты вроде passwd и chfn. Если же они недоступны, то есть vipw и vigr. Данные редакторы предпочтительней обычных текстовых редакторов, поскольку они могут блокировать базу данных на случай одновременного редактирования, а также не позволяют добавить в базу некорректную запись. Shadow-базы редактируются командами vipw -s и vigr -s из пакета util-linux, если утилита chage также недоступна. См. также FS#31414.\n\n"
    }
  ]
}
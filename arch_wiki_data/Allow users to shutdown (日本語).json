{
  "title": "Allow users to shutdown (日本語)",
  "url": "https://wiki.archlinux.org/title/Allow_users_to_shutdown_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- 電源管理/サスペンドとハイバネート\n- 電源管理/復帰トリガー\n- CPU 周波数スケーリング\n- Display Power Management Signaling\n- ハイブリッドグラフィック\n- sysctl\n\n電源管理とは、アクティブでない時に電源を切ったりシステムのコンポーネントを低電力状態に切り替えたりする機能です。\n\nArch Linux では、電源管理は主に2つの部分からなります:\n\n1. Linux カーネルの設定。ハードウェアと対話します。 カーネルパラメータ カーネルモジュール udev ルール\n1. ユーザスペースのツールの設定。カーネルと対話し、カーネルのイベントに応答します。ユーザスペースのツールの多くは、\"ユーザフレンドリー\"な方法でカーネルの設定を変更することもできます。利用可能なツールは #ユーザースペースツール を参照してください。\n\n- カーネルパラメータ\n- カーネルモジュール\n- udev ルール\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 ユーザースペースツール 1.1 コンソール 1.2 グラフィカル\n- 2 ACPI イベント 2.1 電源マネージャ 2.2 xss-lock\n- 3 省電力 3.1 Intel Hardware P-state をサポートする CPU 3.2 オーディオ 3.3 バックライト 3.4 Bluetooth 3.5 ウェブカメラ 3.6 カーネルパラメータ 3.6.1 NMI watchdog の無効化 3.6.2 ライトバック時間 3.6.3 Laptop Mode 3.7 ネットワークインターフェイス 3.7.1 Intel ワイヤレスカード (iwlwifi) 3.8 バスパワーの管理 3.8.1 Active State Power Management 3.8.2 PCI Runtime Power Management 3.8.3 USB の自動サスペンド 3.8.4 SATA Active Link Power Management 3.9 ハードディスクドライブ\n- 4 ツールとスクリプト 4.1 スクリプトと udev ルールを使う 4.2 電源設定の表示\n- 5 ユーザにシャットダウンを許可する 5.1 ボタンと蓋スイッチのイベント 5.2 systemd-logind を使う 5.3 sudo を使う 5.3.1 sudo 権限の無いユーザ\n- 6 参照\n\n- 1.1 コンソール\n- 1.2 グラフィカル\n\n- 2.1 電源マネージャ\n- 2.2 xss-lock\n\n- 3.1 Intel Hardware P-state をサポートする CPU\n- 3.2 オーディオ\n- 3.3 バックライト\n- 3.4 Bluetooth\n- 3.5 ウェブカメラ\n- 3.6 カーネルパラメータ 3.6.1 NMI watchdog の無効化 3.6.2 ライトバック時間 3.6.3 Laptop Mode\n- 3.7 ネットワークインターフェイス 3.7.1 Intel ワイヤレスカード (iwlwifi)\n- 3.8 バスパワーの管理 3.8.1 Active State Power Management 3.8.2 PCI Runtime Power Management 3.8.3 USB の自動サスペンド 3.8.4 SATA Active Link Power Management\n- 3.9 ハードディスクドライブ\n\n- 3.6.1 NMI watchdog の無効化\n- 3.6.2 ライトバック時間\n- 3.6.3 Laptop Mode\n\n- 3.7.1 Intel ワイヤレスカード (iwlwifi)\n\n- 3.8.1 Active State Power Management\n- 3.8.2 PCI Runtime Power Management\n- 3.8.3 USB の自動サスペンド\n- 3.8.4 SATA Active Link Power Management\n\n- 4.1 スクリプトと udev ルールを使う\n- 4.2 電源設定の表示\n\n- 5.1 ボタンと蓋スイッチのイベント\n- 5.2 systemd-logind を使う\n- 5.3 sudo を使う 5.3.1 sudo 権限の無いユーザ\n\n- 5.3.1 sudo 権限の無いユーザ\n\n"
    },
    {
      "title": "ユーザースペースツール",
      "level": 2,
      "content": "以下のツールを使うことで、設定ファイルを手動で編集せずに多くの設定を変更できます。どのツールも多かれ少なかれ同じような動作をするので、衝突を避けるためにツールはどれか一つだけを実行してください。電源管理カテゴリを見れば、Arch Linux にどんな電源管理の選択肢が存在するかわかります。\n\n以下は省電力設定をするために作られた人気のあるスクリプトやツールです:\n\n"
    },
    {
      "title": "コンソール",
      "level": 3,
      "content": "- acpid — ACPI の電源管理イベントを届けるデーモン。netlink をサポート。\n\n- Laptop Mode Tools — ノートパソコンの省電力設定をするユーティリティ。多少設定が要りますが省電力設定ユーティリティのデファクトスタンダードとされています。\n\n- libsmbios — Dell SMBIOS テーブルと対話するためのライブラリおよびツール。\n\n- powertop — 消費電力や電源管理の問題を診断して省電力設定を補助するツール。\n\n- powerstat — ACPI や Intel RAPL インターフェイスを使用して電力消費量を測定するツール。\n\n- systemd — システムおよびサービスマネージャ。\n\n- TLP — Linux 向けの先進的な電源管理。\n\n- TuneD — システム上のデバイスの監視と状況に応じた設定を行うデーモン。\n\n- UPower — 電源デバイスの列挙、デバイスイベントの監視、履歴と統計のクエリを行う抽象化レイヤー。\n\n- power-profiles-daemon — D-Bus 経由での電源プロファイルの管理を可能にします。\n\n"
    },
    {
      "title": "グラフィカル",
      "level": 3,
      "content": "- batsignal — libnotify を使用してバッテリレベルの低下を警告する軽量バッテリモニタ。\n\n- cbatticon — 軽量で高速なバッテリアイコンをシステムトレイに表示。\n\n- GNOME Power Statistics — GNOME のシステム電力情報および統計。\n\n- KDE Power Devil — Plasma 用の電源管理モジュール。\n\n- LXQt Power Management — LXQt 用の電源管理モジュール。\n\n- MATE Power Management — MATE 用電源管理ツール。\n\n- MATE Power Statistics — MATE のシステム電力情報と統計。\n\n- poweralertd — UPower 通知を伝播するデーモン。\n\n- powerkit — デスクトップに依存しない電源マネージャー。\n\n- Xfce Power Manager — Xfce 用の電源マネージャ。\n\n- vattery — システムトレイ内のラップトップバッテリのステータスを表示する、 Vala で書かれたバッテリ監視アプリケーション。\n\n"
    },
    {
      "title": "ACPI イベント",
      "level": 2,
      "content": "systemd は一部の電源関連の ACPI イベントを処理します。これらのイベントの動作は /etc/systemd/logind.conf や /etc/systemd/logind.conf.d/*.conf で設定できます (logind.conf(5) を参照)。専用の電源マネージャを持たないシステムでは、この方法は acpid デーモンの代わりになりえます。ちなみに、acpid は通常、ACPI イベントに対応するために使われるデーモンです。\n\nイベントの動作には、ignore、poweroff、reboot、halt、suspend、hibernate、hybrid-sleep、suspend-then-hibernate、lock、kexec のいずれかを指定することができます。ハイバーネートとサスペンドの場合は、適切にセットアップしなければなりません。イベントが設定されていない場合、systemd はデフォルトの動作を使用します。\n\nTable content:\nイベントハンドラ | 説明 | デフォルトの動作\nHandlePowerKey | 電源キー/ボタンが押された時にトリガされます。 | poweroff\nHandleSuspendKey | サスペンドキー/ボタンが押された時にトリガされます。 | suspend\nHandleHibernateKey | ハイバネートキー/ボタンが押された時にトリガされます。 | hibernate\nHandleLidSwitch | ラップトップPCなどの蓋が閉じられた時に (以下のケースを除いて) トリガされます。 | suspend\nHandleLidSwitchDocked | システムがドッキングステーションに繋がれている場合や、複数のディスプレイに繋がれている場合に蓋が閉じられるとトリガされます。 | ignore\nHandleLidSwitchExternalPower | システムが外部電源に接続されている状況で蓋が閉じられた時にトリガされます。 | HandleLidSwitch に対して設定されている動作\n\n変更を適用するには、systemd-logind.service を再読み込みしてください。\n\n- systemd は AC とバッテリの ACPI イベントを処理することができません。なので、Laptop Mode Tools や他の似たようなツールを使用している場合、acpid が依然として必要です。\n- 蓋のスイッチを短い間隔で動作させると、logind は、ドックが存在するかどうかを検出するために 90 秒までサスペンドアクションを遅らせます。[1] この遅延は systemd v220 で設定可能になりました。[2] logind.conf か、このファイルのドロップインファイルで HoldoffTimeoutSec=30s のように設定できます。\n\n"
    },
    {
      "title": "電源マネージャ",
      "level": 3,
      "content": "一部のデスクトップ環境には、systemd の ACPI 設定の一部あるいは全てを inhibit する (一時的にオフにする) 電源マネージャが含まれています。そのような電源マネージャが実行されている場合、電源マネージャだけで ACPI イベントに対する動作を設定することができます。/etc/systemd/logind.conf や /etc/systemd/logind.conf.d/*.conf を変更する必要があるのは、電源マネージャによって inhibit されていないイベントに対する挙動を設定したい場合のみです。\n\n注意点として、電源マネージャが適切なイベントに対して systemd を inhibit しないと、systemd がシステムをサスペンドし、その後サスペンドから復帰すると今度は電源マネージャがシステムを再びサスペンドしてしまうという状況に陥る可能性があります。GNOME、MATE、Plasma、そして Xfce の電源マネージャは、必要な inhibited コマンドを発行します。inhibited コマンドが発行されない場合 (acpid などを使って ACPI イベントを処理している場合)、Handle オプションを ignore に設定してください。systemd-inhibit(1) も参照してください。\n\n"
    },
    {
      "title": "xss-lock",
      "level": 3,
      "content": "xss-lock は systemd の suspend、hibernate、lock-session、unlock-session イベントで適切なアクションを実行します (ロッカーを実行し、ユーザがロッカーをアンロックまたは kill するまで待機する)。xss-lock は DPMS イベントにも反応し、それに応じてロッカーを実行したり kill したりします。\n\n例えば、以下のコマンドを自動起動します:\n\n```\n$ xss-lock -- i3lock -n -i background_image.png &\n```\n\n"
    },
    {
      "title": "省電力",
      "level": 2,
      "content": "このセクションは、カスタムスクリプトや udev ルールなどの省電力設定をの作成するためのリファレンスです。競合を避けるために、設定が他のユーティリティによって管理されていないことを確認してください。\n\nコンピュータが AC 電源またはバッテリーで動作しているかに関わらず、ここに記載されているほとんど全ての機能には使用する価値があります。ここで挙げている機能のほとんどは、パフォーマンスへの影響は無視できるレベルであり、大抵、壊れているハードウェアやドライバのせいでデフォルトで有効化されていないだけです。電力の使用量を減らすことは発熱を減らすことでもあり、動的なオーバークロックによって、最近の Intel や AMD の CPU ではパフォーマンスの向上につながることもあります。\n\n"
    },
    {
      "title": "Intel Hardware P-state をサポートする CPU",
      "level": 3,
      "content": "Intel Hardware P-state (HWP) 対応プロセッサで利用可能なエネルギー設定は、default、performance、balance_performance、balance_power、power です。\n\n以下を実行することで、利用可能な設定を確認できます:\n\n```\n$ cat /sys/devices/system/cpu/cpufreq/policy*/energy_performance_available_preferences\n```\n\n以下のファイルを作成することで、より多くのエネルギーを節約するように設定できます:\n\n```\n/etc/tmpfiles.d/energy_performance_preference.conf\n```\n\n```\nw /sys/devices/system/cpu/cpufreq/policy*/energy_performance_preference - - - - balance_power\n```\n\nIntel プロセッサの電力とパフォーマンスのポリシーに関する詳細は x86_energy_perf_policy(8) man ページを参照してください。一時ファイル/ディレクトリに関する詳細は man ページ systemd-tmpfiles(8) や tmpfiles.d(5) も参照してください。\n\n"
    },
    {
      "title": "オーディオ",
      "level": 3,
      "content": "省電力がデフォルトでオンになっているかどうかは、ドライバによります (例えば HD Audio ではオンです)。使用しているモジュールを特定し、modinfo module_name を実行して、省電力機能を調整あるいは無効化する (power_save のような) カーネルモジュールパラメータ を探してください。\n\n- Advanced Linux Sound Architecture/トラブルシューティング#省電力\n- PipeWire#再生開始時に明らかな音声の遅延やポップノイズ/音割れが発生する\n- PulseAudio/トラブルシューティング#音声の再生時と停止時に破裂音\n\n"
    },
    {
      "title": "バックライト",
      "level": 3,
      "content": "バックライトを見て下さい。\n\n"
    },
    {
      "title": "Bluetooth",
      "level": 3,
      "content": "Bluetooth を完全に無効化するには、btusb と bluetooth モジュールをブラックリストに入れてください。\n\nあるいは、以下の udev ルールを作成してください:\n\n```\n/etc/udev/rules.d/50-bluetooth.rules\n```\n\n```\n# disable bluetooth\nSUBSYSTEM==\"rfkill\", ATTR{type}==\"bluetooth\", ATTR{state}=\"0\"\n```\n\nBluetooth を一時的にオフにしたい場合は、rfkill(8) を使ってください:\n\n```\n# rfkill block bluetooth\n```\n\n"
    },
    {
      "title": "ウェブカメラ",
      "level": 3,
      "content": "内蔵のウェブカメラを使わない場合、uvcvideo モジュールをブラックリストに入れてください。\n\n"
    },
    {
      "title": "カーネルパラメータ",
      "level": 3,
      "content": "このセクションでは /etc/sysctl.d/ 内の設定を使います。このディレクトリは、\"カーネルの sysctl パラメータ用のドロップインディレクトリです\"。詳細は、The New Configuration Files や、より詳しい sysctl.d(5) を見てください。\n\n"
    },
    {
      "title": "NMI watchdog の無効化",
      "level": 4,
      "content": "NMI watchdog は、カーネルパニックを引き起こすハードウェアのハングアップをキャッチするデバッグ機能です。システムによっては大量の割り込みが発生するため、消費電力の増加につながっていることがあります:\n\n```\n/etc/sysctl.d/disable_watchdog.conf\n```\n\n```\nkernel.nmi_watchdog = 0\n```\n\nもしくは起動の初期で完全に無効化するにはカーネルラインに nmi_watchdog=0 を追加してください。\n\n"
    },
    {
      "title": "ライトバック時間",
      "level": 4,
      "content": "仮想メモリのダーティライトバック時間を増やすことでディスク I/O がまとめられて、断続的なディスクの書き込みが減って、消費電力が抑えられます。この値を60秒に設定するには (デフォルトは5秒です):\n\n```\n/etc/sysctl.d/dirty.conf\n```\n\n```\nvm.dirty_writeback_centisecs = 6000\n```\n\nジャーナルをサポートしているファイルシステム (ext4 や btrfs など) でジャーナルコミットでも同じことをするには、fstab でオプションとして commit=60 を使用します。\n\nこの値は、以下の Laptop Mode 設定の副作用として変更されてしまうことに注意してください。また、I/O パフォーマンスと省電力に影響を与える他のパラメータは sysctl#仮想メモリ を参照してください。\n\n"
    },
    {
      "title": "Laptop Mode",
      "level": 4,
      "content": "ラップトップモードの\"ノブ\"についてはカーネルドキュメントを見て下さい。\"このノブの妥当な値は5秒です。\"\n\n```\n/etc/sysctl.d/laptop.conf\n```\n\n```\nvm.laptop_mode = 5\n```\n\n"
    },
    {
      "title": "ネットワークインターフェイス",
      "level": 3,
      "content": "Wake-on-LAN は便利な機能ですが、利用しない場合はサスペンド中にマジックパケットが来るのを待つのに無駄な電力を消耗するだけです。Wake-on-LAN#udev ルールを調整することで、全てのイーサネットインターフェイスに対してこの機能を無効化することができます。iw を使って全てのワイヤレスインターフェイスで省電力を有効化するには:\n\n```\n/etc/udev/rules.d/81-wifi-powersave.rules\n```\n\n```\nACTION==\"add\", SUBSYSTEM==\"net\", KERNEL==\"wl*\", RUN+=\"/usr/bin/iw dev $name set power_save on\"\n```\n\nこの設定ファイルの名前は重要です。Systemd の永続的なデバイス名を使用することで、上記のネットワークルールは、辞書順で 80-net-setup-link.rules の後に来るので、ネットワークデバイスの名前が永続的な名前に変更 (例: wlan0 から wlp3s0) された後で適用されます。RUN のコマンドは、全てのルールが処理された後で実行され、永続的な名前 (マッチするデバイスは $name で利用できます) を使用する必要があることに注意してください。\n\n"
    },
    {
      "title": "Intel ワイヤレスカード (iwlwifi)",
      "level": 4,
      "content": "iwlwifi ドライバによる Intel ワイヤレスカードの追加の省電力機能は、適切なパラメータをカーネルモジュールに渡すことで有効化できます。/etc/modprobe.d/iwlwifi.conf ファイルに以下の記述を追加することで、パラメータを永続化させることができます:\n\n```\noptions iwlwifi power_save=1\n```\n\n以下のオプションは、レイテンシの中央値を増加させる可能性があります:\n\n```\noptions iwlwifi uapsd_disable=0\n```\n\n5.4 より前のカーネルでは、以下のオプションを使用できますが、スループットの最大値を減少させる可能性があります:\n\n```\noptions iwlwifi d0i3_disable=0\n```\n\nワイヤレスカードによっては、以下の2つのオプションのうちいずれかが適用されます:\n\n```\noptions iwlmvm power_scheme=3\n```\n\n```\noptions iwldvm force_cam=0\n```\n\n以下のコマンドで、どちらのモジュールが動作しているかを確認することで、どちらが関連しているかを確認できます:\n\n```\n# lsmod | grep '^iwl.vm'\n```\n\nこれらの省電力オプションは実験的であり、システムを不安定にする可能性があることに注意してください。\n\n"
    },
    {
      "title": "Active State Power Management",
      "level": 4,
      "content": "Wikipedia から:\n\nブート時に BIOS は、ハードウェアのサポートが存在するかどうかに応じて ASPM を有効化または無効化します。サポートの有無を確認するには以下を実行してください:\n\n```\n# lspci -vv | grep 'ASPM.*abled;'\n```\n\n利用可能な ASPM ポリシーと、現在のデフォルトのポリシーを調べるには、以下を実行してください:\n\n```\n$ cat /sys/module/pcie_aspm/parameters/policy\n```\n\n```\n[default] performance powersave powersupersave\n```\n\nASPM は、しばしば以下の理由によって無効化されることがあります [3][リンク切れ 2024-10-12]:\n\n1. BIOS が何らかの理由で ASPM を無効化した (コンフリクトが起こるから?)。\n1. PCIE が ASPM を必要とするが、L0s は任意である (なので、L0s は無効化され、L1 だけが有効化されるかもしれません)。\n1. ASPM 用に BIOS がプログラムされていないか、BIOS にバグが存在する。\n\n上記で ASPM がサポートされていないと報告されたが、ハードウェアが ASPM をサポートしていると思われる場合は、カーネルが ASPM を管理できるようにするために pcie_aspm=force カーネルパラメータで ASPM を強制的に有効化できます。\n\n- ASPM を、サポートされていないシステム上で強制的に有効化すると、電力消費量が増加する場合があります。さらに、システムのフリーズやカーネルパニックの危険性もあります。なので、そのような場合に備えてこのオプションをもとに戻す手段を確保しておくべきです。\n- ASPM の強制はカーネル内で行われます。なので、ハードウェアで無効化されている場合には、有効化できません。ハードウェアで ASPM が無効化されているかどうか確認するには、root として dmesg | grep ASPM と実行してください。あなたのハードウェア固有の情報については、対応する Wiki の記事を参照してください (もし存在すれば)。\n\nASPM がサポートされており、かつ、有効化されていれば、現在のセッションに対して任意のポリシーを選択することができます。例えば、現在のセッションに対して powersupersave を設定するには、以下を実行してください:\n\n```\n# echo powersupersave > /sys/module/pcie_aspm/parameters/policy\n```\n\nシステムのブート時に特定の ASPM 状態 (例として powersupersave) を有効化させるには、pcie_aspm.policy=powersupersave をカーネルパラメータに追加してください。\n\n"
    },
    {
      "title": "PCI Runtime Power Management",
      "level": 4,
      "content": "```\n/etc/udev/rules.d/pci_pm.rules\n```\n\n```\nSUBSYSTEM==\"pci\", ATTR{power/control}=\"auto\"\nSUBSYSTEM==\"ata_port\", KERNEL==\"ata*\", ATTR{device/power/control}=\"auto\"\n```\n\n上記のルールは未使用のデバイスを全てパワーダウンしますが、一部のデバイスが復帰しなくなってしまいます。サポートしていることが分かっているデバイスのみに対して Runtime Power Management を有効化するには、ベンダ ID とデバイス ID を使って、特定のデバイスにだけマッチするようにしてください (ID を入手するには lspci -nn を使ってください):\n\n```\n/etc/udev/rules.d/pci_pm.rules\n```\n\n```\n# whitelist for pci autosuspend\nSUBSYSTEM==\"pci\", ATTR{vendor}==\"0x1234\", ATTR{device}==\"0x1234\", ATTR{power/control}=\"auto\"\n```\n\nまたは、PCI Runtime Power Management が機能しないデバイスを除外して、その他の全てのデバイスに対して有効化するには:\n\n```\n/etc/udev/rules.d/pci_pm.rules\n```\n\n```\n# blacklist for pci runtime power management\nSUBSYSTEM==\"pci\", ATTR{vendor}==\"0x1234\", ATTR{device}==\"0x1234\", ATTR{power/control}=\"on\", GOTO=\"pci_pm_end\"\n\nSUBSYSTEM==\"pci\", ATTR{power/control}=\"auto\"\nLABEL=\"pci_pm_end\"\n```\n\n"
    },
    {
      "title": "USB の自動サスペンド",
      "level": 4,
      "content": "Linux カーネルは USB デバイスが使用されていないときに USB デバイスを自動的にサスペンドさせることができます。これによって電力を相当カットできるときもありますが、USB の省電力機能に対応していない USB デバイスではおかしな挙動が起こる可能性もあります (特に USB マウスやキーボード)。ホワイトリストとブラックリストでフィルタリングする udev ルールを使うことで問題は軽減されます。\n\nマウスとキーボード以外のUSB デバイスで自動サスペンドを有効にする例:\n\n```\n/etc/udev/rules.d/50-usb_power_save.rules\n```\n\n```\nACTION==\"add\", SUBSYSTEM==\"usb\", ATTR{product}!=\"*Mouse\", ATTR{product}!=\"*Keyboard\", TEST==\"power/control\", ATTR{power/control}=\"auto\"\n```\n\n自動サスペンドが動作するデバイスにだけ自動サスペンドを有効にするには、ベンダー ID とプロダクト ID でマッチングを行います (これらの ID を入手するには lsusb を使ってください):\n\n```\n/etc/udev/rules.d/50-usb_power_save.rules\n```\n\n```\n# whitelist for usb autosuspend\nACTION==\"add\", SUBSYSTEM==\"usb\", TEST==\"power/control\", ATTR{idVendor}==\"05c6\", ATTR{idProduct}==\"9205\", ATTR{power/control}=\"auto\"\n```\n\nもしくは、USB 自動サスペンドが使えないデバイスをブラックリストに入れて、他の全てのデバイスで自動サスペンドを有効にするには:\n\n```\n/etc/udev/rules.d/50-usb_power_save.rules\n```\n\n```\n# blacklist for usb autosuspend\nACTION==\"add\", SUBSYSTEM==\"usb\", ATTR{idVendor}==\"05c6\", ATTR{idProduct}==\"9205\", GOTO=\"power_usb_rules_end\"\n\nACTION==\"add\", SUBSYSTEM==\"usb\", TEST==\"power/control\", ATTR{power/control}=\"auto\"\nLABEL=\"power_usb_rules_end\"\n```\n\n自動サスペンドに入るデフォルトのアイドル遅延時間は usbcore 組み込みカーネルモジュールの autosuspend パラメータによって制御されています。遅延時間をデフォルトの2秒から5秒に設定するには、以下のカーネルパラメータを追加してください:\n\n```\nusbcore.autosuspend=5\n```\n\npower/control と同じように、power/autosuspend 属性を設定することで遅延時間はデバイスごとに細かく設定することができます。また、power/autosuspend を -1 (つまり、自動サスペンドしない) に設定することで、自動サスペンドを無効化することができます:\n\n```\n/etc/udev/rules.d/50-usb_power_save.rules\n```\n\n```\nACTION==\"add\", SUBSYSTEM==\"usb\", ATTR{idVendor}==\"05c6\", ATTR{idProduct}==\"9205\", ATTR{power/autosuspend}=\"-1\"\n```\n\nUSB の電源管理に関する詳細は Linux カーネルドキュメントを見て下さい。\n\n"
    },
    {
      "title": "SATA Active Link Power Management",
      "level": 4,
      "content": "現在の設定は /sys/class/scsi_host/host*/link_power_management_policy で確認したり設定したりできます:\n\n```\n$ grep . /sys/class/scsi_host/host*/link_power_management_policy\n$ echo \"med_power_with_dipm\" >/sys/class/scsi_host/hostN/link_power_management_policy\n```\n\nTable content:\n設定 | 説明 | 省電力効果\nmax_performance | 現在のデフォルト | 無し\nmedium_power | - | 約 1.0 ワット\nmed_power_with_dipm | 推奨される設定1 | 約 1.5 ワット\nmin_power | 警告: データ損失の可能性あり2 | 約 1.5 ワット\n\n1. Linux 4.15 から、med_power_with_dipm と呼ばれる設定が存在しています。これは、Windows IRST ドライバ設定の動作と一致するものであり、最近の SSD や HDD ではデータの損失は発生しないはずです。(アイドル状態で) 1.0 から 1.5 ワットの節約になることもあります。これは、Linux 4.16 から Intel ベースのノート PC でデフォルトの設定となっています [4]。\n1. 警告: min_power SATA Active Link Power Management 設定は一部のデバイスでデータ損失が発生する可能性があります。バックアップを頻繁に取っていない限り、この設定を有効化しないでください。\n\nudev ルールファイルを作成することで link_power_management_policy の設定を永続化させることができます。例えば:\n\n```\n/etc/udev/rules.d/hd_power_save.rules\n```\n\n```\nACTION==\"add\", SUBSYSTEM==\"scsi_host\", KERNEL==\"host*\", ATTR{link_power_management_policy}=\"med_power_with_dipm\"\n```\n\n- この設定を行うとアイドル状態になっているドライブにアクセスするときに遅延が発生するようになります。AC 電源を使用するかどうかによって変えるべき設定です。\n- SATA ホストコントローラとストレージデバイスの組み合わせによっては、デフォルト設定の med_power_with_dipm ではうまく動作しません。例えば: linux-6.8.1 の時点では、Intel 7 Series Chipset コントローラから Crucial M550 SSD に (MU02 ファームウェアで) アクセスするとタイムアウトとリンク速度の低下が発生します。 linux-6.9.6 の時点では、AMD 600 Series Chipset SATA コントローラを HL-DT-ST BDDVDRW GGC-H20L 光学ディスクドライブに使用した際に、数分おきに再初期化して ROM ドライブが音を立てる問題が発生します。\n\n- linux-6.8.1 の時点では、Intel 7 Series Chipset コントローラから Crucial M550 SSD に (MU02 ファームウェアで) アクセスするとタイムアウトとリンク速度の低下が発生します。\n- linux-6.9.6 の時点では、AMD 600 Series Chipset SATA コントローラを HL-DT-ST BDDVDRW GGC-H20L 光学ディスクドライブに使用した際に、数分おきに再初期化して ROM ドライブが音を立てる問題が発生します。\n\n"
    },
    {
      "title": "ハードディスクドライブ",
      "level": 3,
      "content": "設定できるドライブのパラメータについては hdparm#電源管理の設定 を見て下さい。\n\n多数のプログラムがディスクに頻繁に書き込みをおこなう場合は省電力は効率的ではありません。全てのプログラムを調査して、いつどのようにプログラムがディスクに書き込むを行うのか調べるのがディスクの使用量を減らす道です。iotop を使えばどのプログラムがディスクに頻繁に書き込みしているかわかります。他のヒントは パフォーマンスの向上#ストレージデバイス を見て下さい。\n\nnoatime オプションを設定するなどの小さなことも馬鹿にできません。十分な RAM がある場合、swappiness を無効化したり制限することでディスクへの書き込みが減る可能性があります。\n\nPowerChoice テクノロジーを搭載した Seagate ドライブの場合、EPC (Extended Power Conditions) 機能により hdparm から APM を設定するテクニックはうまく行きません。APM を設定する代わりに、openseachestAUR パッケージをインストールし、ドライブの EPC を完全に無効化することができます (X は実際のドライブレターに置き換えてください):\n\n```\n# openSeaChest_PowerControl --scan\n# openSeaChest_PowerControl -d /dev/sdX -i\n# openSeaChest_PowerControl -d /dev/sdX --showEPCSettings\n# openSeaChest_PowerControl -d /dev/sdX --EPCfeature disable\n# openSeaChest_PowerControl -d /dev/sdX --showEPCSettings\n```\n\n最後のコマンドでは、以下が出力されます:\n\n```\n==========================================================================================\n openSeaChest_PowerControl - openSeaChest drive utilities - NVMe Enabled\n Copyright (c) 2014-2023 Seagate Technology LLC and/or its Affiliates, All Rights Reserved\n openSeaChest_PowerControl Version: 3.3.1-4_1_1 X86_64\n Build Date: Jul  4 2023\n Today: Tue Jul  4 17:49:36 2023        User: root\n==========================================================================================\n\n/dev/sdX - ST1000NM0008-2F2100 - ZFA19JG2 - SN02 - ATA\n\n\n===EPC Settings===\n        * = timer is enabled\n        C column = Changeable\n        S column = Savable\n        All times are in 100 milliseconds\n\nName       Current Timer Default Timer Saved Timer   Recovery Time C S\nIdle A      0            *10           *10           1             Y Y\nIdle B      0            *1200         *1200         3             Y Y\nIdle C      0             6000          6000         16            Y Y\nStandby Z   0             9000          9000         46            Y Y\n```\n\n最初の列の 0 は、パーキングとスピンダウンが正常に無効化されたことを意味します。\n\n"
    },
    {
      "title": "スクリプトと udev ルールを使う",
      "level": 3,
      "content": "systemd ユーザーは systemctl suspend や systemctl hibernate でサスペンドとハイバネートを行うことができ、/etc/systemd/logind.conf で acpi イベントを処理することができるので、pm-utils と acpid を削除するということに興味を引かれるかもしれません。systemd が行えないことがたったひとつだけ存在します (systemd-204 現在): システムが AC 電源で動作しているのか、バッテリーで動作しているのかで条件分岐を行う電源管理です。このギャップをなくすには、AC アダプタが抜き差しされたときにスクリプトを実行する udev ルールを作成します:\n\n```\n/etc/udev/rules.d/powersave.rules\n```\n\n```\nSUBSYSTEM==\"power_supply\", ATTR{online}==\"0\", RUN+=\"/path/to/your/script true\"\nSUBSYSTEM==\"power_supply\", ATTR{online}==\"1\", RUN+=\"/path/to/your/script false\"\n```\n\npowersave スクリプトのサンプル:\n\n- ftw (パッケージ: ftw-gitAUR)\n- powersave\n- throttlectl (throttlectlAUR)\n\n上記の udev ルールはちゃんと動作するはずですが、電源設定がサスペンドやハイバネートをした後に更新されない場合、以下の内容で /usr/lib/systemd/system-sleep/ にスクリプトを追加してください:\n\n```\n/usr/lib/systemd/system-sleep/00powersave\n```\n\n```\n#!/bin/sh\n\ncase $1 in\n    pre) /path/to/your/script false ;;\n    post)\n\tif cat /sys/class/power_supply/AC0/online | grep 0 > /dev/null 2>&1\n\tthen\n    \t\t/path/to/your/script true\n\telse\n    \t\t/path/to/your/script false\n\tfi\n    ;;\nesac\nexit 0\n```\n\n忘れずに実行可能属性を付与してください。\n\n"
    },
    {
      "title": "電源設定の表示",
      "level": 3,
      "content": "以下のスクリプトは USB や PCI デバイスの電源設定などのプロパティを表示します。全ての設定を見るには root 権限が必要なので注意して下さい。\n\n```\n#!/bin/bash\n\nfor i in $(find /sys/devices -name \"bMaxPower\")\ndo\n\tbusdir=${i%/*}\n\tbusnum=$(<$busdir/busnum)\n\tdevnum=$(<$busdir/devnum)\n\ttitle=$(lsusb -s $busnum:$devnum)\n\n\tprintf \"\\n\\n+++ %s\\n  -%s\\n\" \"$title\" \"$busdir\"\n\n\tfor ff in $(find $busdir/power -type f ! -empty 2>/dev/null)\n\tdo\n\t\tv=$(cat $ff 2>/dev/null|tr -d \"\\n\")\n\t\t[[ ${#v} -gt 0 ]] && echo -e \" ${ff##*/}=$v\";\n\t\tv=;\n\tdone | sort -g;\ndone;\n\nprintf \"\\n\\n\\n+++ %s\\n\" \"Kernel Modules\"\nfor mod in $(lspci -k | sed -n '/in use:/s,^.*: ,,p' | sort -u)\ndo\n\techo \"+ $mod\";\n\tsystool -v -m $mod 2> /dev/null | sed -n \"/Parameters:/,/^$/p\";\ndone\n```\n\n"
    },
    {
      "title": "ボタンと蓋スイッチのイベント",
      "level": 3,
      "content": "サスペンド、電源オフ、そしてハイバネートのボタンのイベントと、蓋を閉じた時のイベントは、#ACPI イベント で説明されているように logind によって処理されます。\n\n"
    },
    {
      "title": "systemd-logind を使う",
      "level": 3,
      "content": "polkit を使用している場合、非リモートセッションのユーザは、セッションが壊れていない限り、電源関連のコマンドを発行することができます。\n\nセッションがアクティブであることを確認するには:\n\n```\n$ loginctl show-session $XDG_SESSION_ID --property=Active\n```\n\nアクティブであるならば、ユーザはコマンドラインで systemctl のコマンドを使用したり、メニューに追加したりできます:\n\n```\n$ systemctl poweroff\n$ systemctl reboot\n```\n\nsystemctl suspend や systemctl hibernate といった他のコマンドも使用できます。systemctl(1) の System Commands セクションを参照してください。\n\n"
    },
    {
      "title": "sudo を使う",
      "level": 3,
      "content": "sudo をインストールし、sudo 権限をユーザに与えてください。sudo 権限が与えられたユーザは、sudo systemctl コマンド (例: sudo systemctl poweroff、sudo systemctl reboot、sudo systemctl suspend、sudo systemctl hibernate) を使用できるようになります。systemctl(1) の System Commands セクションを参照してください。\n\n"
    },
    {
      "title": "sudo 権限の無いユーザ",
      "level": 4,
      "content": "ユーザにシャットダウンコマンドのみを使用できるようにし、sudo 権限を与えないようにする必要がある場合、visudo コマンドを root として使って /etc/sudoers の末尾に以下を追加してください。user の部分は適切なユーザ名に、hostname の部分はマシンのホスト名に置き換えてください。\n\n```\nuser hostname =NOPASSWD: /usr/bin/systemctl poweroff,/usr/bin/systemctl halt,/usr/bin/systemctl reboot\n```\n\nここで設定したユーザは、sudo systemctl poweroff でシャットダウンを、sudo systemctl reboot で再起動を行うことができるようになります。システムをシャットダウンしたいユーザは、sudo systemctl halt も使用できます。パスワードのプロンプトを表示させたくない場合は、NOPASSWD: タグを使用してください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- ThinkWiki:How to reduce power consumption\n- How to get longer battery life on Linux\n\n"
    }
  ]
}
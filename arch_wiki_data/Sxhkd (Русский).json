{
  "title": "Sxhkd (Русский)",
  "url": "https://wiki.archlinux.org/title/Sxhkd_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Xbindkeys (Русский)\n- Xmodmap (Русский)\n\nsxhkd — это простой демон горячих клавиш для X, созданный разработчиком bspwm.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите sxhkd или sxhkd-gitAUR.\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "По умолчанию используется файл настроек $XDG_CONFIG_HOME/sxhkd/sxhkdrc. С помощью опции -c можно указать другой файл.\n\nКаждая строка в файле интерпретируется так:\n\n- Если строка начинается на #, то она игнорируется.\n- Если строка начинается с пробельных символов, она считывается как команда для запуска.\n- Иначе строка считывается как сочетание клавиш: имена клавиш, разделённые пробелом или символом +.\n\nСинтаксис:\n\n```\n[МОДИФИКАТОР + ]*[@]СИМВОЛ\n    КОМАНДА\n```\n\nГде МОДИФИКАТОР может иметь одно из следующих значений: super, hyper, meta, alt, control, ctrl, shift, mode_switch, lock, mod1, mod2, mod3, mod4, mod5. Если перед символом клавиши добавить @, то команда будет выполнена в момент отпускания клавиши, а не сразу в момент нажатия. СИМВОЛ нужной вам клавиши можно узнать с помощью команды xev.\n\nДля отслеживания кнопок мыши можно использовать специальные коды клавиш button1, button2, button3, ..., button24. Также можно задать сразу несколько кодов клавиш в виде последовательности {СИМВОЛ_1,...,СИМВОЛ_N} и добавить в команду последовательность строк (в фигурных скобках и разделённых запятыми) такой же длины — тогда в команду будет подставлен тот элемент последовательности, который соответствует заданному коду клавиши в указанном вами порядке. Если вам нужно добавить в команду обычные фигурные скобки, то, чтобы они не конфликтовали с синтаксисом последовательностей, экранируйте их с помощью обратной косой черты: например, если вы хотите добавить команду awk '{print $1}', запишите её как awk '\\{print $1\\}'. Также можно задать последовательность в виде диапазона A-Z, где A и Z — буква или цифра.\n\nДля выполнения команды sxhkd запускает ОБОЛОЧКА -c КОМАНДА, что означает, что вы можете использовать переменные окружения внутри команды. ОБОЛОЧКА считывается из переменной окружения SXHKD_SHELL или, если её нет, из SHELL. При получении сигнала SIGUSR1 sxhkd заново прочитает файл настроек.\n\n"
    },
    {
      "title": "Пример",
      "level": 3,
      "content": "```\n$XDG_CONFIG_HOME/sxhkd/sxhkdrc\n```\n\n```\n# При нажатии левой кнопки мыши эмулировать нажатие Alt_R+F1\nbutton1\n    xte \"keydown Alt_R\" \"keydown F1\" \"keyup Alt_R\" \"keyup F1\"\n\n# При нажатии средней кнопки мыши подождать 3 секунды и эмулировать нажатие Alt_R+F2\nbutton2\n    xte \"sleep 3\" \"keydown Alt_R\" \"keydown F2\" \"keyup Alt_R\" \"keyup F2\"\n```\n\n"
    },
    {
      "title": "Использование",
      "level": 2,
      "content": "После настройки вы скорее всего захотите добавить sxhkd в автозапуск; смотрите соответствующую статью для вашей среды рабочего стола или вашего оконного менеджера.\n\nЕсли ваша среда поддерживает Desktop Application Autostart Specification, можно создать файл автозапуска sxhkd.desktop:\n\n```\n~/.config/autostart/sxhkd.desktop\n```\n\n```\n[Desktop Entry]\nName=sxhkd\nComment=Simple X hotkey daemon\nExec=/usr/bin/sxhkd\nTerminal=false\nType=Application\n```\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Репозиторий на GitHub — исходный код, список опций и примеры настройки\n- Тема на форуме Arch Linux\n\n"
    }
  ]
}
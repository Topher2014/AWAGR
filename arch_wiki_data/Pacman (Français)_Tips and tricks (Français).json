{
  "title": "Pacman (Français)/Tips and tricks (Français)",
  "url": "https://wiki.archlinux.org/title/Pacman_(Fran%C3%A7ais)/Tips_and_tricks_(Fran%C3%A7ais)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Mirrors (Français)\n- Creating packages\n\nPour les méthodes générales utilisées à l'amélioration de la flexibilité des astuces fournies, ou pacman lui-même: consultez Core utilities et Bash.\n\n"
    },
    {
      "title": "Maintenance",
      "level": 2,
      "content": "Voir aussi Maintenance Système.\n\n"
    },
    {
      "title": "Par version",
      "level": 4,
      "content": "On peut vouloir obtenir la liste des paquets installés et leur version, en cas par exemple de rapport de bug ou d'une discussion sur des paquets installés.\n\n- Liste des paquets installés explicitement: pacman -Qe.\n- Liste des paquets d'un groupe de paquets nommé group: pacman -Sg group\n- Liste des paquets \"étrangers\" (typiquement par téléchargement et installation manuels ou paquets retirés des dépôts): pacman -Qm.\n- Liste des paquets installés d'origine (depuis la base synchronisée): pacman -Qn.\n- Liste des paquets installés explicitement, d'origine (c.-à-d. présents dans la base synchronisée), qui ne sont pas des dépendances directes ni optionnelles: pacman -Qent.\n- Liste des paquets filtrée par expression régulière: pacman -Qs regex.\n- Liste des paquets filtrée par expression régulière avec sortie en format personnalisé: expac -s \"%-30n %v\" regex (requiert expac).\n\n"
    },
    {
      "title": "Par taille",
      "level": 4,
      "content": "Il peut être utile de déterminer les paquets les plus volumineux peut être utile s'il était nécessaire de libérer de l'espace sur votre disque dur. Il y a ici deux options: obtenir la taille des paquets individuels, ou obtenir la taille des paquets et leurs dépendances.\n\nCommande pour lister les paquets installés et leur taille individuelle:\n\n```\n$ LC_ALL=C pacman -Qi | awk '/^Name/{name=$3} /^Installed Size/{print $4$5, name}' | LC_ALL=C sort -h\n```\n\nPour lister leur taille en incluant les dépendances:\n\n- Installer expac et lancer expac -H M '%m\\t%n' | sort -h.\n- Lancer pacgraphAUR avec l'option -c.\n\nPour lister la taille de téléchargement de plusieurs paquets (laissez packages vide pour lister tous les paquets):\n\n```\n$ expac -S -H M '%k\\t%n' packages\n```\n\nPour lister les paquets installés explicitement qui ne sont ni dans le méta-paquet base ni dans le groupe de paquet xorg avec taille et description:\n\n```\n$ expac -H M \"%011m\\t%-20n\\t%10d\" $(comm -23 <(pacman -Qqen | sort) <({ pacman -Qqg xorg; expac -l '\\n' '%E' base; } | sort -u)) | sort -n\n```\n\nPour lister les paquets marqués comme nécessitant une mise à jour avec la taille de téléchargement:\n\n```\n$ expac -S -H M '%k\\t%n' $(pacman -Qqu) | sort -sh\n```\n\nPour ne lister que les dépendances optionnelles :\n\n```\n$ expac -S \"%o\" package\n```\n\n"
    },
    {
      "title": "Par date",
      "level": 4,
      "content": "Liste des 20 derniers paquets installés avec expac, lancer:\n\n```\n$ expac --timefmt='%Y-%m-%d %T' '%l\\t%n' | sort | tail -n 20\n```\n\nou, en secondes depuis l'«epoch» (1970-01-01 UTC):\n\n```\n$ expac --timefmt=%s '%l\\t%n' | sort -n | tail -n 20\n```\n\n"
    },
    {
      "title": "N'appartenant pas à un groupe, dépôt ou méta-paquet spécifié",
      "level": 4,
      "content": "Liste des paquets installés explicitement en-dehors du méta-paquet base:\n\n```\n$ comm -23 <(pacman -Qqe | sort) <(expac -l '\\n' '%E' base | sort)\n```\n\nListe les paquets explicitement installés qui ne sont pas dans le méta-paquet base ou le groupe de paquets xorg :\n\n```\n$ comm -23 <(pacman -Qqe | sort) <({pacman -Qqg xorg ; expac -l '\\n' '%E' base ; } | sort -u)\n```\n\nListe de tous les paquets installés non requis par d'autres paquets et en-dehors du méta-paquet base ou du groupe de paquets xorg:\n\n```\n$ comm -23 <(pacman -Qqt | sort) <({ pacman -Qqg xorg; echo base; } | sort -u)\n```\n\nComme ci-dessus, mais avec descriptions:\n\n```\n$ expac -H M '%-20n\\t%10d' $(comm -23 <(pacman -Qqt | sort) <({ pacman -Qqg xorg; echo base; } | sort -u))\n```\n\nListe de tous les paquets installés non présents dans le dépôt précisé nom du depot:\n\n```\n$ comm -23 <(pacman -Qq | sort) <(pacman -Slq nom du depot | sort)\n```\n\nListe de tous les paquets installés qui sont présents dans le dépôt précisé nom du depot:\n\n```\n$ comm -12 <(pacman -Qq | sort) <(pacman -Slq nom du depot | sort)\n```\n\nListe de tous les paquets de l'ISO Arch Linux et n'appartenant pas au groupe base:\n\n```\n$ comm -23 <(curl https://git.archlinux.org/archiso.git/tree/configs/releng/packages.x86_64) <(pacman -Qqg base | sort)\n```\n\n"
    },
    {
      "title": "Paquets de développement",
      "level": 4,
      "content": "Pour une liste de tous les paquets de développement/unstable, commande:\n\n```\n$ pacman -Qq | grep -Ee '-(bzr|cvs|darcs|git|hg|svn)$'\n```\n\n"
    },
    {
      "title": "Dépendances d'un paquet",
      "level": 4,
      "content": "Pour obtenir la liste des dépendances d'un paquet, la solution la plus simple est de lire la sortie de :\n\n```\n$ pacman -Qi package\n```\n\nPour l'automatisation, au lieu de la méthode d'analyse de la sortie de pacman, qui est sujette aux erreurs, utilisez expac :\n\n```\n$ expac -S '%D' package\n```\n\n"
    },
    {
      "title": "Parcourir les paquets",
      "level": 3,
      "content": "Pour parcourir tous les paquets installés avec un aperçu instantané de chaque paquet :\n\n```\n$ pacman -Qq | fzf --preview 'pacman -Qil {}' --layout=reverse --bind 'enter:execute(pacman -Qil {} | less)'\n```\n\nCette commande utilise fzf pour présenter une vue à deux volets listant tous les paquets avec les informations sur les paquets affichées sur la droite.\n\nEntrez des lettres pour filtrer la liste des paquets ; utilisez les touches fléchées (ou Ctrl-j/Ctrl-k) pour naviguer ; appuyez sur Enter pour consulter les informations du paquet sous less.\n\nPour parcourir tous les paquets actuellement connus de pacman (à la fois installés et non encore installés) de manière similaire, en utilisant fzf, utilisez :\n\n```\n$ pacman -Slq | fzf --preview 'pacman -Si {}' --layout=reverse\n```\n\nLes raccourcis clavier de navigation sont les mêmes, bien que la touche Enter ne fonctionne pas de la même manière.\n\n"
    },
    {
      "title": "Liste des fichiers fournis par un paquet - avec leur taille",
      "level": 3,
      "content": "Ceci peut s'avérer utile si vous constatez qu'un paquet spécifique utilise une quantité d'espace considérable et que vous voulez savoir quels fichiers en consomme le plus.\n\n```\n$ pacman -Qlq package | grep -v '/$' | xargs du -h | sort -h\n```\n\n"
    },
    {
      "title": "Recherche des fichiers n'appartenant à aucun paquet",
      "level": 3,
      "content": "Si des fichiers égarés, n'appartenant à aucun paquet, sont présents dans votre système (un cas courant si vous n'avez pas utilisé le gestionnaire de paquets pour installer un logiciel), vous pouvez vouloir trouver ces fichiers afin de les nettoyer.\n\nUne méthode est d'utiliser la commande # pacreport --unowned-files de pacutils qui listera ces fichiers \"non possédés\" parmi d'autres détails.\n\nUne autre est d'isoler tous les fichiers particuliers, et les comparer avec la sortie de pacman:\n\n```\n# find /etc /usr /opt | LC_ALL=C pacman -Qqo - 2>&1 >&- >/dev/null | cut -d ' ' -f 5-\n```\n\n"
    },
    {
      "title": "Suivi des fichiers sans propriétaires créés par les paquets",
      "level": 3,
      "content": "La plupart des systèmes collectent lentement de nombreux fichiers fantômes («ghost») : fichiers d'état, journaux, index, etc… en utilisation normale.\n\nOn peut utiliser pacreport de pacutils pour suivre ces fichiers et leurs associations via /etc/pacreport.conf (voir pacreport(1) § FILES).\n\nUn exemple (résumé) de configuration ressemblera à :\n\n```\n/etc/pacreport.conf\n```\n\n```\n[Options]\nIgnoreUnowned = usr/share/applications/mimeinfo.cache\n\n[PkgIgnoreUnowned]\nalsa-utils = var/lib/alsa/asound.state\nbluez = var/lib/bluetooth\nca-certificates = etc/ca-certificates/trust-source/*\ndbus = var/lib/dbus/machine-id\nglibc = etc/ld.so.cache\ngrub = boot/grub/*\nlinux = boot/initramfs-linux.img\npacman = var/lib/pacman/local\nupdate-mime-database = usr/share/mime/magic\n```\n\nAinsi, en lançant pacreport --unowned-files en root, on affichera une liste de tous les fichiers sans propriétaire, dont le paquet associé n'est plus installé (ou si de nouveaux fichiers ont été créés).\n\nEn sus, le script aconfmgr, (aconfmgr-gitAUR), permet, par création d'un fichier de configuration le suivi des fichiers modifiés et orphelins.\n\n"
    },
    {
      "title": "Suppression des paquets inutilisés (orphelins)",
      "level": 3,
      "content": "Les orphelins sont des paquets qui ont été installés en tant que dépendance et qui ne sont plus requis par aucun paquet.\n\nIls peuvent s'accumuler sur votre système au fil du temps en raison de la désinstallation de paquets en utilisant pacman -R package au lieu de pacman -Rs package, de l'installation de paquets en tant que makedepends, ou de paquets supprimant des dépendances dans des versions plus récentes.\n\nPour supprimer récursivement les orphelins et leurs fichiers de configuration :\n\n```\n# pacman -Qtdq | pacman -Rns -\n```\n\nSi aucun orphelin n'a été trouvé, la sortie est error: argument '-' specified with empty stdin vide. Ceci est attendu car aucun argument n'a été passé à pacman -Rns. L'erreur peut être évitée en préfixant la deuxième commande avec ifne(1) du paquet moreutils.\n\n"
    },
    {
      "title": "Détecter d'autres paquets inutiles",
      "level": 3,
      "content": "Dans certains cas, la méthode ci-dessus ne détectera pas tous les paquets inutiles possibles. Par exemple, les cycles de dépendances (également connues sous le nom de \"dépendances circulaires\"), les dépendances excessives (remplies plus d'une fois), certaines options non explicites, etc.\n\nPour détecter de tels paquets :\n\n```\n$ pacman -Qqd | pacman -Rsu --print -\n```\n\nSi vous voulez supprimer tous les paquets de la liste en une seule fois, exécutez la commande sans l'argument --print.\n\n"
    },
    {
      "title": "Suppression de tous les paquets non-essentiels",
      "level": 3,
      "content": "S'il s'avère nécessaire de désinstaller la totalité des programmes en dehors de ceux essentiels, la méthode est de changer le motif d'installation de tous les paquets vers «installé comme dépendance» puis de supprimer toutes les dépendances non nécessaires.\n\nPremièrement, pour tous les paquets «installés explicitement», modifiez leur motif d'installation pour «installé comme dépendance» :\n\n```\n# pacman -D --asdeps $(pacman -Qqe)\n```\n\nEnsuite, changez le motif d’installation vers «installé explicitement», pour les paquets que vous ne voulez pas supprimer, pour éviter de les supprimer :\n\n```\n# pacman -D --asexplicit base linux linux-firmware\n```\n\n- Divers paquets peuvent être ajoutés à cette dernière commande. Voir Installation guide (Français)#Installation des paquets essentiels.\n- Ceci va également supprimer le chargeur d'amorçage. Le système devrait toujours démarrer normalement, mais il ne sera plus possible de changer les paramètres de démarrage sans.\n\nEnfin, suivez les instructions de #Suppression des paquets inutilisés (orphelins) pour supprimer tous les paquets qui sont «installé comme dépendance».\n\n"
    },
    {
      "title": "Obtenir la liste de dépendances de plusieurs paquets",
      "level": 3,
      "content": "Dépendances triées par ordre alphabétique et élimination des doublons.\n\n```\n$ LC_ALL=C pacman -Si packages | awk -F'[:<=>]' '/^Depends/ {print $2}' | xargs -n1 | sort -u\n```\n\nAlternativement, avec expac:\n\n```\n$ expac -l '\\n' %E -S packages | sort -u\n```\n\n"
    },
    {
      "title": "Lister les fichiers de sauvegarde modifiés",
      "level": 3,
      "content": "Pour lister les fichiers de configuration suivis par pacman en tant que susceptibles de contenir des modifications de l'utilisateur (c'est-à-dire les fichiers listés dans le tableau «backup» d'un PKGBUILD) et ayant reçu des modifications de l'utilisateur, utilisez la commande suivante :\n\n```\n# pacman -Qii | awk '/^MODIFIED/ {print $2}' (en anglais)\n```\n\nL'exécution de cette commande avec les droits de root garantira que les fichiers lisibles uniquement par root (tels que /etc/sudoers) sont inclus dans la sortie.\n\nCeci peut être utilisé lors d'une sauvegarde sélective du système ou lors de la réplication d'une configuration système d'une machine à une autre.\n\n- Voir #Lister tout fichier modifié des paquets pour lister tous les fichiers modifiés connus de pacman, et pas seulement les fichiers de sauvegarde.\n- Voir #Recherche des fichiers n'appartenant à aucun paquet pour lister tous les fichiers du système qui ne sont pas suivis par pacman.\n\n"
    },
    {
      "title": "Sauvegarde de la base de données de pacman",
      "level": 3,
      "content": "On peut utiliser les commandes suivantes pour une sauvegarde de la base de données de pacman:\n\n```\n$ tar -cjf pacman_database.tar.bz2 /var/lib/pacman/local\n```\n\nEnregistrer ce fichier de sauvegarde de la base sur un ou plusieurs supports physiques, clef-USB, DD externe, CD-R.\n\nLa base pourra être restaurée par simple copie de ce fichier de sauvegarde pacman_database.tar.bz2 vers le répertoire racine / puis l'exécution de la commande suivante:\n\n```\n# tar -xjvf pacman_database.tar.bz2\n```\n\n"
    },
    {
      "title": "Vérifier facilement les logs de changements",
      "level": 3,
      "content": "Lorsque les responsables mettent à jour des paquets, les commits sont souvent commentés de manière utile.\n\nLes utilisateurs peuvent les vérifier rapidement à partir de la ligne de commande en installant pacologAUR. Cet utilitaire liste les messages de commit récents pour les paquets provenant des dépôts officiels ou de AUR, en utilisant pacolog paquet.\n\n"
    },
    {
      "title": "Installation et récupération",
      "level": 2,
      "content": "Alternatives pour l'installation ou réinstallation de paquets.\n\n"
    },
    {
      "title": "Installation de paquets depuis un CD/DVD ou clef USB",
      "level": 3,
      "content": "Télécharger un paquet ou un groupe de paquets:\n\n```\n# cd ~/Packages\n# pacman -Syw base base-devel grub-bios xorg gimp --cachedir .\n# repo-add ./custom.db.tar.gz ./*\n```\n\nPacman, qui par défaut référencera l'installation hôte, ne saura pas correctement résoudre et télécharger les dépendances existantes. Dans le cas où l'on souhaite tous les paquets ainsi que leurs dépendances, il est recommandé de créer une base de données des paquets temporaire vierge et d'y faire référence avec l'option --dbpath de pacman:\n\n```\n# mkdir /tmp/blankdb\n# pacman -Syw --cachedir . --dbpath /tmp/blankdb base base-devel grub-bios xorg gimp\n# repo-add ./custom.db.tar.gz ./*\n```\n\nPuis vous pouvez graver le répertoire \"Packages\" sur un disque (e.g. un CD, DVD) ou le transférer sur une clef USB, HDD externe, etc.\n\nPour installer:\n\n1. Monter le support :\n\nPour un disque optique :\n\n```\n# mount --mkdir /dev/sr0 /mnt/repo\n```\n\nPour une clef USB, un disque dur, etc… :\n\n```\n# mount --mkdir /dev/sdxY /mnt/repo\n```\n\n2. Editer pacman.conf et ajouter ce dépôt avant les autres (ex. extra, core, etc.). Ceci est important. Ne pas simplement le dé-commenter à la fin du fichier. Ceci assurera la préséance des fichiers des CD/DVD/USB sur ceux des dépôts standards:\n\n```\n/etc/pacman.conf\n```\n\n```\n[custom]\nSigLevel = PackageRequired\nServer = file:///mnt/repo/Packages\n```\n\n3. Enfin, synchroniser la base de données de pacman pour qu'elle puisse utiliser ce nouveau dépôt:\n\n```\n# pacman -Syu\n```\n\n"
    },
    {
      "title": "Dépôt local personnalisé",
      "level": 3,
      "content": "Utiliser le script repo-add fourni par pacman pour générer une base de données pour dépôt personnel. Plus de détails sur l'utilisation par repo-add --help.\n\nUn paquet de base de données est un fichier d'archive tar, optionnellement compressé. Les extensions valides extensions sont .db ou .files suivi de l'extension d'archive .tar, .tar.gz, .tar.bz2, .tar.xz, tar.zst ou .tar.Z. Il n'est pas nécessaire que les fichiers existent mais tous les répertoires parents doivent avoir été créés.\n\nPour ajouter un nouveau paquet à la base ou mettre à jour une ancienne version existant dans la base, commande:\n\n```\n$ repo-add /path/to/repo.db.tar.gz /path/to/package-1.0-1-x86_64.pkg.tar.zst\n```\n\nLa base de données et les paquets n'ont pas besoin d'être dans le même répertoire lorsque vous utilisez repo-add, mais gardez à l'esprit que lorsque vous utilisez pacman avec cette base de données, ils devront être ensemble. Stocker tous les paquets compilés à inclure dans le dépôt dans un seul répertoire permet également d'utiliser l'expansion globale du shell pour ajouter ou mettre à jour plusieurs paquets à la fois :\n\n```\n$ repo-add /path/to/repo.db.tar.gz /path/to/*.pkg.tar.est\n```\n\nSi vous cherchez à prendre en charge plusieurs architectures, des précautions doivent être prises pour éviter les erreurs. Chaque architecture devrait avoir sa propre arborescence de répertoires :\n\n```\n$ tree ~/customrepo/ | sed \"s/$(uname -m)/<arch>/g\"\n```\n\n```\n/home/archie/customrepo/\n└── <arch>\n    ├── customrepo.db -> customrepo.db.tar.xz\n    ├── customrepo.db.tar.xz\n    ├── customrepo.files -> customrepo.files.tar.xz\n    ├── customrepo.files.tar.xz\n    └── personal-website-git-b99cce0-1-<arch>.pkg.tar.zst\n\n1 directory, 5 files\n```\n\nL'exécutable repo-add vérifie si le paquet est approprié. Si ce n'est pas le cas, vous rencontrerez des messages d'erreur tels que :\n\n```\n==> ERROR: '/home/archie/customrepo/<arch>/foo-<arch>.pkg.tar.zst' does not have a valid database archive extension.\n```\n\nrepo-remove supprime tous les paquets de la base de données, sauf si seuls certains noms de paquets sont précisés sur la ligne de la commande.\n\n```\n$ repo-remove /path/to/repo.db.tar.gz pkgname\n```\n\nUne fois la base de données du dépôt local créée, ajoutez le dépôt à pacman.conf pour chaque système qui aura à utiliser le dépôt. Le fichier pacman.conf donne un exemple de dépôt personnalisé. Le nom du dépôt est celui du fichier de la base, extension exclue. Dans l'exemple ci-dessus le nom du dépôt serait simplement repo. Référencer l'emplacement du dépôt en utilisant une URL file://, ou via HTTP sous la forme http://localhost/path/to/directory.\n\nSi vous le souhaitez, ajoutez le dépôt personnalisé à la liste des dépôts non officiels, pour en faire bénéficier la communauté.\n\n"
    },
    {
      "title": "Cache pacman partagé en réseau",
      "level": 3,
      "content": "Si vous utilisez plusieurs systèmes sous Arch Linux sur votre réseau local, vous pouvez partager les paquets afin de réduire considérablement les temps de téléchargement. Gardez à l'esprit que vous ne devez pas partager entre différentes architectures (i.e. i686 et x86_64) ou vous rencontrerez des problèmes.\n\n"
    },
    {
      "title": "Cache en lecture seule",
      "level": 4,
      "content": "Si vous recherchez une solution rapide, vous pouvez simplement lancer un simple serveur web temporaire que les autres ordinateurs peuvent utiliser comme premier miroir.\n\nTout d'abord, rendez les bases de données pacman disponibles dans le répertoire que vous allez fournir :\n\n```\n# ln -s /var/lib/pacman/sync/*.db /var/cache/pacman/pkg/\n```\n\nEnsuite, commencez à servir ce répertoire. Par exemple, avec Python http.server module :\n\n```\n$ python -m http.server -d /var/cache/pacman/pkg/\n```\n\n```\n$ python -m http.server -d /var/cache/pacman/pkg/ --bind 127.0.0.1 8080\n```\n\nPuis modifiez /etc/pacman.d/mirrorlist sur chaque machine cliente pour ajouter ce serveur comme première entrée :\n\n```\n/etc/pacman.d/mirrorlist\n```\n\n```\nServer = http://server-ip:port\n...\n```\n\nSi vous recherchez une solution plus autonome, darkhttpd offre un serveur web très minimal. Remplacez la commande python précédente par, par exemple :\n\n```\n$ sudo -u http darkhttpd /var/cache/pacman/pkg --no-server-id\n```\n\nVous pouvez également exécuter darkhttpd en tant que service systemd pour plus de commodité : consultez Systemd (Français)#Écrire des unités.\n\nminiserve, un petit serveur web écrit en Rust, peut également être utilisé :\n\n```\n$ miniserve /var/cache/pacman/pkg\n```\n\nÉditez ensuite /etc/pacman.d/mirrorlist comme ci-dessus avec la première url où miniserve est disponible.\n\nSi vous utilisez déjà un serveur web dans un autre but, vous pouvez le réutiliser comme serveur de dépôt local. Par exemple, si vous servez déjà un site avec nginx, vous pouvez ajouter un bloc serveur nginx écoutant sur le port 8080 :\n\n```\n/etc/nginx/nginx.conf\n```\n\n```\nserver {\n    listen 8080 ;\n    root /var/cache/pacman/pkg ;\n    server_name myarchrepo.localdomain ;\n    try_files $uri $uri/ ;\n}\n```\n\nSurtout redémarrez nginx.service après avoir effectué cette modification.\n\n"
    },
    {
      "title": "Montage en overlay d'un cache en lecture seule",
      "level": 4,
      "content": "Il est possible d'utiliser une machine sur un réseau local comme cache de paquets en lecture seule en montant en overlay son répertoire /var/cache/pacman/pkg. Une telle configuration est avantageuse si ce serveur a installé sur lui une sélection raisonnablement complète de paquets à jour qui sont également utilisés par d'autres machines. Ceci est utile pour la maintenance d'un certain nombre de machines avec une connexion à faible bande passante.\n\nA titre d'exemple, pour utiliser cette méthode :\n\n```\n# mkdir /tmp/remote_pkg /mnt/workdir_pkg /tmp/pacman_pkg.\n# sshfs remote_username@remote_pkgcache_addr:/var/cache/pacman/pkg /tmp/remote_pkg -C\n# mount -t overlay overlay -o lowerdir=/tmp/remote_pkg,upperdir=/var/cache/pacman/pkg,workdir=/mnt/workdir_pkg /tmp/pacman_pkg\n```\n\nAprès cela, lancez pacman en utilisant l'option --cachedir /tmp/pacman_pkg, par exemple :\n\n```\n# pacman -Syu --cachedir /tmp/pacman_pkg\n```\n\n"
    },
    {
      "title": "Cache en lecture seule distribué",
      "level": 4,
      "content": "Il existe des outils spécifiques à Arch pour découvrir automatiquement les autres ordinateurs de votre réseau offrant un cache de paquets. Essayez pacredir, pacserve, pkgdistcacheAUR, ou paclanAUR. pkgdistcache utilise Avahi au lieu du simple UDP ce qui peut mieux fonctionner dans certains réseaux domestiques qui routent au lieu de faire le pont entre WiFi et Ethernet.\n\nHistoriquement, il y avait PkgD et multipkg, mais ils ne sont plus maintenus.\n\n"
    },
    {
      "title": "Cache en lecture/écriture",
      "level": 4,
      "content": "Pour le partage de paquets entre plusieurs ordinateurs, partagez simplement /var/cache/pacman/ en utilisant n'importe quel protocole de montage réseau. Cette section montre comment utiliser Sshfs pour partager un cache de paquets et les répertoires de bibliothèque associés entre plusieurs ordinateurs sur le même réseau local. Gardez à l'esprit qu'un cache partagé en réseau peut être lent selon le choix du système de fichiers, parmi d'autres facteurs.\n\nInstallez tous les paquets de gestion de systèmes de fichiers en réseau: sshfs, curlftpfs, samba ou nfs-utils.\n\n- Pour utiliser sshfs pensez à consulter Using SSH Keys.\n- Par défaut, smbfs ne sert pas les noms de fichiers qui contiennent des deux-points, ce qui a pour conséquence que le client télécharge à nouveau le paquet en question. Pour éviter cela, utilisez l'option mapchars mount du client.\n\nPuis, pour partager les paquets actuels, montez /var/cache/pacman/pkg du serveur sur /var/cache/pacman/pkg de chaque machine cliente.\n\n"
    },
    {
      "title": "Double-sens avec rsync",
      "level": 4,
      "content": "Autre approche dans un environnement local par rsync. Choisir un serveur pour le cache, et activer le daemon rsync. Sur les machines clientes synchronisez ce partage en double-sens (two-way) par un protocole rsync. Les noms de fichiers contenant deux-points : ne posent pas de problème au protocole rsync.\n\nExemple de projet pour un client, l'utilisation de uname -m dans le nom du partage assure une synchronisation en fonction de l'architecture:\n\n```\n# rsync rsync://server/share_$(uname -m)/ /var/cache/pacman/pkg/ ...\n# pacman ...\n# paccache ...\n# rsync /var/cache/pacman/pkg/ rsync://server/share_$(uname -m)/  ...\n```\n\n"
    },
    {
      "title": "Cache de proxy inverse dynamique utilisant nginx",
      "level": 4,
      "content": "nginx peut être utilisé pour envoyer par proxy les demandes de paquets aux miroirs officiels en amont et mettre les résultats en cache sur le disque local. Toutes les demandes ultérieures pour ce paquet seront servies directement à partir du cache local, ce qui minimise la quantité de trafic Internet nécessaire pour mettre à jour un grand nombre d'ordinateurs.\n\nDans cet exemple, le serveur de cache sera exécuté à http://cache.domain.example:8080/ et stockera les paquets dans /srv/http/pacman-cache/.\n\nInstallez nginx sur l'ordinateur qui va héberger le cache. Créez le répertoire pour le cache et ajustez les permissions pour que nginx puisse y écrire des fichiers :\n\n```\n# mkdir /srv/http/pacman-cache\n# chown http:http /srv/http/pacman-cache\n```\n\nUtilisez la config de cache de pacman pour nginx comme point de départ pour /etc/nginx/nginx.conf. Vérifiez que la directive resolver fonctionne pour vos besoins. Dans les blocs de serveurs en amont, configurez les directives proxy_pass avec les adresses des miroirs officiels, consultez les exemples dans le fichier de configuration sur le format attendu. Une fois que vous êtes satisfait du fichier de configuration démarrez et activez nginx.\n\nAfin d'utiliser le cache, chaque ordinateur Arch Linux (y compris celui qui héberge le cache) doit avoir la ligne suivante en haut du fichier mirrorlist :\n\n```\n/etc/pacman.d/mirrorlist\n```\n\n```\nServer = http://cache.domain.example:8080/archlinux/$repo/os/$arch\n...\n```\n\n"
    },
    {
      "title": "Serveur proxy de cache Pacoloco",
      "level": 4,
      "content": "Pacoloco est un serveur proxy de cache facile à utiliser pour les dépôts pacman. Il permet également un «prefetching» automatique des paquets mis en cache.\n\nIl peut être installé avec pacoloco. Ouvrez le fichier de configuration et ajoutez les miroirs de pacman :\n\n```\n/etc/pacoloco.yaml\n```\n\n```\nport : 9129\nrepos :\n  mycopy :\n    urls :\n      - http://mirror.lty.me/archlinux\n      - http://mirrors.kernel.org/archlinux\n```\n\nRedémarrez pacoloco.service et le dépôt en proxy sera disponible à http://myserver:9129/repo/mycopy.\n\n"
    },
    {
      "title": "Serveur cache proxy Flexo",
      "level": 4,
      "content": "Flexo est encore un autre serveur proxy de cache pour les dépôts pacman. Flexo est disponible avec flexo-gitAUR. Une fois installé, démarrez l'unité flexo.service.\n\nFlexo fonctionne sur le port 7878 par défaut. Entrez Server = http://myserver:7878/$repo/os/$arch en haut de votre /etc/pacman.d/mirrorlist pour que pacman télécharge les paquets via Flexo.\n\n"
    },
    {
      "title": "Synchroniser le cache de pacman avec des programmes de synchronisation",
      "level": 4,
      "content": "Utiliser Syncthing ou Resilio Sync pour synchroniser les répertoires du cache de pacman (càd. /var/cache/pacman/pkg).\n\n"
    },
    {
      "title": "Prevention des purges involontaires du cache",
      "level": 4,
      "content": "Par défaut, pacman -Sc supprime du cache les archives de paquets correspondant aux paquets non installés sur la machine sur laquelle la commande a été émise. Comme pacman ne peut pas prédire quels paquets sont installés sur toutes les machines qui partagent le cache, il finira par supprimer les fichiers qui ne devraient pas l'être.\n\nPour nettoyer le cache afin que seules les archives périmées soient supprimées:\n\n```\n/etc/pacman.conf\n```\n\n```\n[options]\nCleanMethod = KeepCurrent\n```\n\n"
    },
    {
      "title": "Recréer un paquet depuis le système de fichiers",
      "level": 3,
      "content": "Pour recréer un paquet dpuis le système de fichiers servez-vous de fakepkgAUR. Les fichiers du système étant pris tels quels, toute modification sera présente dans le paquet assemblé. La distribution du paquet recréé est donc déconseillée; voir ABS et ALA pour des alternatives.\n\n"
    },
    {
      "title": "Liste des paquets installés",
      "level": 3,
      "content": "Il peut être utile de conserver la liste de tous les paquets installés explicitement, par exemple pour sauvegarder un système ou une installation plus rapide sur un nouveau système:\n\n```\n$ pacman -Qqe > pkglist.txt\n```\n\n- Avec l'option -t, les paquets déjà requis par d'autres paquets explicitement installés ne seront pas mentionnés. En cas de réinstallation depuis cette liste il seront bien installés, mais seulement en tant que dépendances.\n- Avec l'option -n, les paquets étrangers (ex. de AUR) seraient exclus de la liste.\n- Utiliser comm -13 <(pacman -Qqdt | sort) <(pacman -Qqdtt | sort) > optdeplist.txt pour créer aussi une liste des dépendances optionnelles installées qui pourront être réinstallées avec l'option --asdeps.\n- Utiliser pacman -Qqem > foreignpkglist.txt pour créer la liste des paquets AUR ou autres paquets étrangers, explicitement installés.\n\nPour garder à jour une liste de paquets installés explicitement (p. ex. en combinaison avec un fichier versionné dans /etc/), vous pouvez mettre en place un hook de pacman. Exemple:\n\n```\n[Trigger]\nOperation = Install\nOperation = Remove\nType = Package\nTarget = *\n\n[Action]\nWhen = PostTransaction\nExec = /bin/sh -c '/usr/bin/pacman -Qqe > /etc/pkglist.txt'\n```\n\n"
    },
    {
      "title": "Installer des paquets depuis une liste",
      "level": 3,
      "content": "Pour installer des paquets depuis une sauvegarde antérieure de la liste des paquets, tout en ne réinstallant pas ceux qui sont déjà installés et à jour, lancer:\n\n```\n# pacman -S --needed - < pkglist.txt\n```\n\nCependant, il est probable que des paquets étrangers, tels ceux de AUR ou installés localement, soient présents dans la liste. Pour filtrer à partir de la liste les paquets étrangers, la ligne de commande précédente peut être enrichie comme suit :\n\n```\n# pacman -S --needed $(comm -12 <(pacman -Slq | sort) <(sort pkglist.txt))\n```\n\nFinalement, pour s'assurer que les paquets installés de votre système correspondent à la liste et supprimer tous les paquets qui n'y sont pas mentionnés :\n\n```\n# pacman -Rsu $(comm -23 <(pacman -Qq | sort) <(sort pkglist.txt))\n```\n\n"
    },
    {
      "title": "Lister tout fichier modifié des paquets",
      "level": 3,
      "content": "Si vous suspectez une corruption des fichiers (par exemple après une défaillance logicielle/matérielle), mais n'êtes pas sûr si des fichiers ont été affectés, vous voudrez comparer la somme de hachage («hashsum») des paquets. Ceci peut-être fait avec pacutils:\n\n```\n# paccheck --md5sum --quiet\n```\n\nPour la restauration de la base de données de pacman voir #Sauvegarde de la base de données de pacman. Les fichiers mtree peuvent aussi être extraits sous la forme .MTREE depuis leurs paquets respectifs.\n\nNote: **pas** \n\n"
    },
    {
      "title": "Réinstallation de tous les paquets",
      "level": 3,
      "content": "Pour réinstaller tous les paquets d'origine, utiliser:\n\n```\n# pacman -Qqn | pacman -S -\n```\n\nLes paquets étrangers (AUR) doivent être réinstallés séparément; les lister par: pacman -Qqm.\n\nPacman préserve le motif d'installation (explicite, dépendance...) par défaut.\n\n"
    },
    {
      "title": "Restauration de la base de données locale de pacman",
      "level": 3,
      "content": "Voir Pacman/Restore local database.\n\n"
    },
    {
      "title": "Récupération d'une clé USB à partir d'une installation existante",
      "level": 3,
      "content": "Si vous avez installé Arch sur une clé USB et l'ayez endommagée (par exemple en la retirant en cours d'écriture), il est possible de réinstaller tous les paquets et, espérons-le, de la remettre en fonction (en admettant que la clé USB soit montée dans /newarch)\n\n```\n# pacman -S $(pacman -Qq --dbpath /newarch/var/lib/pacman) --root /newarch --dbpath /newarch/var/lib/pacman\n```\n\n"
    },
    {
      "title": "Affichage d'un seul fichier dans un fichier.pkg",
      "level": 3,
      "content": "Par exemple, si vous voulez voir le contenu de /etc/systemd/logind.conf, fourni par le paquet systemd :\n\n```\n$ bsdtar -xOf /var/cache/pacman/pkg/systemd-204-3-x86_64.pkg.tar.xz etc/systemd/logind.conf\n```\n\nOu utiliser vim pour parcourir l'archive:\n\n```\n$ vim /var/cache/pacman/pkg/systemd-250.4-2-x86_64.pkg.tar.zst\n```\n\n"
    },
    {
      "title": "Trouver les applications qui utilisent des bibliothèques d'anciens paquets",
      "level": 3,
      "content": "Les processus déjà en cours d'exécution ne remarquent pas automatiquement les changements causés par les mises à jour. Au lieu de cela, ils continuent à utiliser les anciennes versions des bibliothèques. Cela peut être indésirable, en raison des problèmes potentiels liés aux vulnérabilités de sécurité ou autres bogues, et de l'incompatibilité des versions.\n\nLes processus dépendant des bibliothèques mises à jour peuvent être trouvés en utilisant soit htop, qui met en évidence les noms des programmes affectés, soit avec un extrait basé sur lsof, qui affiche également les noms des bibliothèques :\n\n```\n# lsof +c 0 | grep -w DEL | awk '1 { print $1 \" : \" $NF }' | sort -u\n```\n\nCette solution ne détectera que les fichiers qui sont normalement maintenus ouverts par les processus en cours d'exécution, ce qui la limite essentiellement aux bibliothèques partagées (fichiers .so). Elle peut manquer certaines dépendances, comme celles des applications Java ou Python.\n\n"
    },
    {
      "title": "Installer le contenu uniquement dans les langues requises",
      "level": 3,
      "content": "De nombreux paquets installent la documentation et les traductions en plusieurs langues. Certains programmes sont conçus pour supprimer ces fichiers inutiles, comme localepurgeAUR, qui s'exécute après l'installation d'un paquet pour supprimer les fichiers locaux inutiles. Une approche plus préventive est fournie par la directive NoExtract dans pacman.conf, qui empêche l'installation de ces fichiers.\n\nPour empêcher l'installation de toutes les traductions des fichiers d'aide, à l'exception de la locale C, ajoutez :\n\n```\nNoExtract = usr/share/help/* !usr/share/help/C/*\n```\n\nPour empêcher l'installation de toute la documentation HTML dans les applications GTK, ajoutez :\n\n```\nNoExtract = usr/share/gtk-doc/html/*\n```\n\nNote: **toutes** \n\nPour empêcher l'installation des différentes locales, à l'exception de celles qui sont nécessaires, ajoutez :\n\n```\nNoExtract = usr/share/locale/* usr/share/X11/locale/* usr/share/i18n/locales/* opt/google/chrome/locales/* !usr/share/X11/locale/C/*\nNoExtract = !usr/share/X11/locale/compose.dir !usr/share/X11/locale/iso8859-1/*\nNoExtract = !*locale*/en*/* !usr/share/*locale*/locale.*\nNoExtract = !usr/share/*locales/en_ ?? !usr/share/*locales/i18n* !usr/share/*locales/iso*\nNoExtract = usr/share/i18n/charmaps/* !usr/share/i18n/charmaps/UTF-8.gz !usr/share/i18n/charmaps/ANSI_X3.4-1968.gz\nNoExtract = !usr/share/*locales/trans*\nNoExtract = !usr/share/*locales/C !usr/share/*locales/POSIX\n```\n\nPour empêcher l'installation des pages de manuel traduites, ajoutez :\n\n```\nNoExtract = usr/share/man/* !usr/share/man/man*\n```\n\nPour empêcher l'installation des fichiers de langue dans vim-runtime, ajoutez :\n\n```\nNoExtract = usr/share/vim/vim*/lang/*\n```\n\nPour empêcher l'installation de tout le contenu sauf l'anglais dans les applications Qt, ajoutez : NoExtract = usr/share/vim*/lang/* :\n\n```\nNoExtract = usr/share/*/translations/*.qm usr/share/*/nls/*.qm usr/share/qt/phrasebooks/*.qph usr/share/qt/translations/*.pak !*/en-US.pak\n```\n\nPour empêcher l'installation de tout le contenu sauf le contenu anglais dans les applications Electron, ajoutez :\n\n```\nNoExtract = usr/share/*/locales/*.pak opt/*/locales/*.pak usr/lib/*/locales/*.pak !*/en-US.pak\n```\n\nPour empêcher l'installation des fichiers d'aide en anglais dans LibreOffice, ajoutez :\n\n```\nNoExtract = usr/lib/libreoffice/help/en-US/*\n```\n\nPour empêcher l'installation de tout le contenu de OnlyOffice, à l'exception du contenu en anglais, ajoutez :\n\n```\nNoExtract = opt/onlyoffice/desktopeditors/dictionaries/* !opt/onlyoffice/desktopeditors/dictionaries/en_US/*\nNoExtract = opt/onlyoffice/desktopeditors/editors/web-apps/apps/*/main/locale/* !*/en.json\nNoExtract = opt/onlyoffice/desktopeditors/editors/web-apps/apps/*/main/resources/help/*/* !*/help/en/*\nNoExtract = opt/onlyoffice/desktopeditors/editors/web-apps/apps/*/main/resources/symboltable/* !*/en.json\nNoExtract = opt/onlyoffice/desktopeditors/editors/web-apps/apps/documenteditor/forms/locale/* !*/en.json\nNoExtract = opt/onlyoffice/desktopeditors/editors/web-apps/apps/spreadsheeteditor/main/resources/formula-lang/* !*/en.json !*/en_desc.json\nNoExtract = opt/onlyoffice/desktopeditors/converter/empty/*/* !opt/onlyoffice/desktopeditors/converter/empty/en-US/*\n```\n\nPour empêcher l'installation de tous les dictionnaires sauf le dictionnaire anglais iBus pour les emojis, ajoutez :\n\n```\nNoExtract = usr/share/ibus/dicts/emoji-*.dict !usr/share/ibus/dicts/emoji-en.dict\n```\n\n"
    },
    {
      "title": "Installation de paquets sur une mauvaise connexion",
      "level": 3,
      "content": "Lorsque vous essayez d'installer un paquet à partir d'une mauvaise connexion (par exemple, en train avec un téléphone portable), utilisez l'option --disable-download-timeout pour réduire le risque de recevoir des erreurs telles que :\n\n```\nerror: failed retrieving file […] Operation too slow. Less than 1 bytes/sec transferred the last 10 seconds\n```\n\nou\n\n```\nerror: failed retrieving file […] Operation timed out after 10014 milliseconds with 0 out of 0 bytes received\n```\n\n"
    },
    {
      "title": "Vitesse de téléchargement",
      "level": 3,
      "content": "Lors du téléchargement de paquets pacman' utilise les miroirs dans l'ordre dans lequel ils sont /etc/pacman.d/mirrorlist. Le miroir qui se trouve en haut de la liste par défaut n'est peut-être pas le plus rapide pour vous. Pour sélectionner un miroir plus rapide, voir Miroirs. La vitesse de téléchargement des paquets par Pacman peut également être améliorée par l'activation des téléchargements parallèles ou l'utilisation d'un programme de téléchargement différent de celui intégré de pacman.\n\nDans tous les cas assurez-vous d'avoir la dernière version de pacman avant toute modification, par:\n\n```\n# pacman -Syu\n```\n\n"
    },
    {
      "title": "Powerpill",
      "level": 4,
      "content": "Powerpill est une surcouche de pacman qui utilise le téléchargement parallèle et segmenté pour accélérer les téléchargements de pacman.\n\n"
    },
    {
      "title": "wget",
      "level": 4,
      "content": "Il est également très pratique si vous avez besoin de paramètres proxy plus puissants que les capacités intégrées de pacman.\n\nD'abord installez le paquet wget, puis modifiez /etc/pacman.conf en dé-commentant cette ligne de la section [options]:\n\n```\nXferCommand = /usr/bin/wget --passive-ftp --show-progress -c -q -N %u\n```\n\nAu lieu dé-commenter des paramètres de wget dans /etc/pacman.conf, vous pouvez directement modifier ses fichiers de configuration ( à l'échelle du système le fichier est /etc/wgetrc, pour l'utilisateur, $HOME/.wgetrc).\n\n"
    },
    {
      "title": "aria2",
      "level": 4,
      "content": "aria2 est un utilitaire de téléchargement léger prenant en charge les téléchargements HTTP / HTTPS et FTP pouvant être résumés et segmentés. aria2 permet plusieurs connexions simultanées HTTP / HTTPS et FTP à un miroir Arch, ce qui devrait entraîner une augmentation de la vitesse de téléchargement des fichiers et des packages.\n\nNote: **pas** \n\nInstaller aria2, puis éditer /etc/pacman.conf en ajoutant la ligne suivante dans la section [options]:\n\n```\nXferCommand = /usr/bin/aria2c --allow-overwrite=true --continue=true --file-allocation=none --log-level=error --max-tries=2 --max-connection-per-server=2 --max-file-not-found=5 --min-split-size=5M --no-conf --remote-time=true --summary-interval=60 --timeout=5 --dir=/ --out %o %u\n```\n\nVoir aria2c(1) § OPTIONS pour les options d'aria2c utilisées.\n\n- -d, --dir: Le répertoire dans lequel stocker le ou les fichiers téléchargés, comme spécifié par pacman.\n- -o, --out: Le nom du ou des fichiers de sortie du ou des fichiers téléchargés.\n- %o: Variable qui représente le ou les noms de fichiers locaux spécifiés par pacman .\n- %u: Variable représentant l'URL de téléchargement spécifiée par pacman .\n\n"
    },
    {
      "title": "Autres applications",
      "level": 4,
      "content": "Voici les autres applications de téléchargement que vous pouvez utiliser avec pacman , et leurs paramètres de la commande XferCommand associés:\n\n- snarf: XferCommand = /usr/bin/snarf -N %u\n- lftp: XferCommand = /usr/bin/lftp -c pget %u\n- axel: XferCommand = /usr/bin/axel -n 2 -v -a -o %o %u\n- hget: XferCommand = /usr/bin/hget %u -n 2 -skip-tls false (svp lire la documentation de la page de projet Github pour plus d'infos)\n\n"
    },
    {
      "title": "Utilitaires",
      "level": 2,
      "content": "- Lostfiles — Script pour identifier les fichiers n'appartenant à aucun paquet.\n\n- pacutils — Bibliothèque d'assistance pour les programmes basés sur libalpm.\n\n- pkgfile — Outil pour retrouver à quel paquet appartient un fichier - et aussi donner la liste des fichiers que le paquet installe.\n\n- pkgtools — Collection de scripts pour paquets Arch Linux.\n\n- pkgtop — Gestionnaire de paquets interactif et moniteur de ressources conçu pour GNU/Linux.\n\n- Powerpill — Utilise le téléchargement parallèle et segmenté via Aria2 et Reflector pour tenter d'accélérer la vitesse de téléchargement des paquets pour pacman.\n\n- repoctl — Outil d'aide à la gestion des dépôts locaux.\n\n- repose — Outil de construction d'un dépôt Arch Linux.\n\n- snap-pac — Permet à pacman d'utiliser automatiquement snapper pour créer des snapshots pré/post comme YaST d'openSUSE.\n\n- vrms-arch — Un Richard M. Stallman virtuel pour vous dire quels paquets non-libres sont installés.\n\n"
    },
    {
      "title": "Graphique",
      "level": 3,
      "content": "- Apper — Application Qt 5 et gestionnaire de paquets utilisant PackageKit écrit en C++. Prends en charge les metadata AppStream .\n\n- Deepin App Store — Magasin d'applications tiers pour DDE construit avec DTK, utilisant PackageKit. Prend en charge les metadata AppStream .\n\n- Discover — Gestionnaire d'application Qt 5 utilisant PackageKit écrit en C++/QML. Prends en charge les metadata AppStream , Flatpak and Fwupd.\n\n- GNOME PackageKit — Gestionnaire d'application GTK+ 3 utilisant PackageKit écrit en C.\n\n- GNOME Software — Gestionnaire d'application GTK+ 3 utilisant PackageKit écrit en C. Prends en charge les metadata AppStream , Flatpak and Fwupd.\n\n- pcurses — Habillage pacman Curses TUI écrit en C++.\n\n- tkPacman — Habillage pacman Tk écrit en Tcl.\n\n"
    }
  ]
}
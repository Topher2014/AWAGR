{
  "title": "MTP (日本語)",
  "url": "https://wiki.archlinux.org/title/MTP_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- Android#ファイル転送\n- USB ストレージデバイス\n\nメディア転送プロトコル (Media Transfer Protocol, MTP) は、多くの携帯電話 (全 Windows Phone 7/8/10 デバイスやほとんどの新しい Android デバイス) やメディアプレイヤ (例: Creative Zen) との間でメディアファイルの転送を行うために使用できます。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 接続\n- 2 FUSE ファイルシステム 2.1 Android File Transfer 2.2 MTPfs 2.3 jmtpfs 2.4 SIMPLE-MTPFS 2.5 go-mtpfs\n- 3 libmtp 3.1 フロントエンド\n- 4 メディアプレイヤー\n- 5 ファイルマネージャ統合 5.1 gvfs-mtp\n- 6 トラブルシューティング 6.1 libmtp (gvfs-mtp): ファイルマネージャ (nautilus、pcmanfm、vifm など) が Android デバイスの DCIM/Camera にアクセスする際にハングする 6.2 jmtpfs: 初回アクセス時に入出力エラー 6.3 kio-mtp: 「ファイルマネージャで開く」アクションを使用できない 6.4 kio-mtp が異なるサービスから同時に呼び出される 6.5 Android File Transfer: connect failed: no MTP device found\n\n- 2.1 Android File Transfer\n- 2.2 MTPfs\n- 2.3 jmtpfs\n- 2.4 SIMPLE-MTPFS\n- 2.5 go-mtpfs\n\n- 3.1 フロントエンド\n\n- 5.1 gvfs-mtp\n\n- 6.1 libmtp (gvfs-mtp): ファイルマネージャ (nautilus、pcmanfm、vifm など) が Android デバイスの DCIM/Camera にアクセスする際にハングする\n- 6.2 jmtpfs: 初回アクセス時に入出力エラー\n- 6.3 kio-mtp: 「ファイルマネージャで開く」アクションを使用できない\n- 6.4 kio-mtp が異なるサービスから同時に呼び出される\n- 6.5 Android File Transfer: connect failed: no MTP device found\n\n"
    },
    {
      "title": "接続",
      "level": 2,
      "content": "MTP を介してコンピュータをデバイスに接続するには:\n\n- 対象デバイスがあなたのコンピュータと USB で接続されている必要があります\n- MTP が対象デバイスで有効化されている必要があります\n- デバイスのスクリーンがアンロックされている必要があります (セキュリティ上の理由により)\n\n"
    },
    {
      "title": "FUSE ファイルシステム",
      "level": 2,
      "content": "以下のプログラムは、FUSE ファイルシステムを介して MTP デバイスにアクセスできるようにします。\n\nFUSE ベースのファイルシステムを使用する場合、まず先にマウントポイントのディレクトリを作成する必要があるかもしれません。以下の例では ~/mnt ディレクトリが使われています。\n\n通常、FUSE のマウントは fusermount -u マウントポイント を使ってアンマウントできます。\n\n"
    },
    {
      "title": "Android File Transfer",
      "level": 3,
      "content": "Android File Transfer — CLI、Qt UI、カスタムの MTP 実装を使用する FUSE ラッパを搭載している MTP クライアント\n\n~/mnt にデバイスをマウントするには:\n\n```\n$ aft-mtp-mount ~/mnt\n```\n\nアルバムアートを表示させたい場合は、albumart.xxx という名前にし、一番最初にマウント先のフォルダに配置しておかなければなりません。その後で、他のファイルをコピーしてください。また、fuse は ui/cli のファイル転送よりも 7~8 倍遅くなる可能性があることに注意してください。\n\nコマンドラインインターフェイスでデバイスと対話したい場合は、以下のコマンドを実行してください:\n\n```\n$ aft-mtp-cli\n```\n\nhelp と入力すると、利用可能な全コマンドが一覧表示されます。exit と入力すると終了します。\n\nグラフィカルユーザインターフェイスでデバイスと対話したい場合は、android-file-transfer アプリケーションを起動し、マウント先フォルダを選択して、ツールバーの任意のボタンを押してください。利用可能なオプションは、Upload Album、Upload Directory、Upload Files です。最後の2つは自明です。Upload album は、ソースディレクトリからアルバムカバーを検索し、利用可能な最も良いカバーを設定します。\n\n"
    },
    {
      "title": "MTPfs",
      "level": 3,
      "content": "MTPfs — libmtp ベース。任意の MTP デバイスに対して読み書きをサポートする FUSE ファイルシステムです\n\nまず、/etc/fuse.conf を編集して、以下の行をアンコメントしてください:\n\n```\nuser_allow_other\n```\n\n~/mnt にデバイスをマウントします:\n\n```\n$ mtpfs -o allow_other ~/mnt\n```\n\n"
    },
    {
      "title": "jmtpfs",
      "level": 3,
      "content": "jmtpfs — libmtp ベース。MTP (Media Transfer Protocol) デバイスにアクセスします。\n\n~/mnt にデバイスをマウントします:\n\n```\n$ jmtpfs ~/mnt\n```\n\n2つのステップを行うことにより、Linux の残りの部分と一致させます (通常の mount/umount コマンドを使用する):\n\n```\n$# ln -s <実際の mount コマンドのパス/名前>  <Linux の mount 規則と一致する名前>\n$  ln -s /sbin/jmtpfs                        /sbin/mount.jmtpfs\n```\n\n以下の行を /etc/fstab に追加してください:\n\n```\n#jmtpfs <mount path>        fuse nodev,allow_other,<other options>                             0    0\n  jmtpfs /home/sam/run/motog fuse nodev,allow_other,rw,user,noauto,noatime,uid=1000,gid=1000    0    0\n```\n\nそして、デバイスをマウントし、オプションが渡されていることを確認してください:\n\n```\n$ mount /home/sam/run/motog\n Device 0 (VID=22b8 and PID=2e82) is a Motorola Moto G (ID2).\n Android device detected, assigning default bug flags\n $ mount \n  ...\n  jmtpfs on /home/sam/run/motog type fuse.jmtpfs (rw,nosuid,nodev,noexec,noatime,user_id=1000,group_id=1000,allow_other,user=sam)\n```\n\n"
    },
    {
      "title": "SIMPLE-MTPFS",
      "level": 3,
      "content": "SIMPLE-MTPFS — libmtp ベース。Simple Media Transfer Protocol FileSystem は、USB でローカルマシンに接続された MTP デバイス上のファイルを操作できるファイルシステムです\n\n検出されたデバイスを一覧表示するには simple-mtpfs -l を実行してください。\n\nリストの最初のデバイスを ~/mnt にマウントするには、simple-mtpfs --device 1 ~/mnt を実行してください。\n\n"
    },
    {
      "title": "go-mtpfs",
      "level": 3,
      "content": "go-mtpfs — カスタムの MTP 実装を持つ、Go で書かれた FUSE ファイルシステム\n\nandroid-udev をインストールしてください。これは、/etc/udev/rules.d/51-android.rules を編集して、(mtp-detect を実行後に見られる) idVendor と idProduct に適用できるようにします。行の最後にはあなたのユーザ OWNER=\"<user>\" を追加してください。\n\n~/mnt 上にデバイスをマウントします:\n\n```\n$ go-mtpfs ~/mnt\n```\n\n- 複数のデバイスを使用する際は、-d フラグを使用してデバイスを指定する必要があるかもしれません (mtp-detect を実行することで id を調べられます)。\n- 外部 SD カードがあると、go-mtpfs でのマウントが失敗するかもしれません。SD カードが存在している状態でデバイスへアクセスしようとして go-mtpfs がエラーを吐く場合は、SD カードを取り出して、もう一度マウントしてみてください。\n\n"
    },
    {
      "title": "libmtp",
      "level": 2,
      "content": "libmtp はライブラリ MTP 実装です。いくつかのコマンドラインツールの例も付属しています (pacman -Ql libmtp でリストアップできます)。\n\nlibmtp パッケージをインストールしてください。\n\nデバイスを検出するには mtp-detect を実行してください。\n\nエラーが返ってくる場合、あなたのユーザが adbusers ユーザグループに属していることを確認してください。\n\nmtp-connect コマンドでファイルを転送できます。\n\n"
    },
    {
      "title": "フロントエンド",
      "level": 3,
      "content": "gMTP — libmtp のためのグラフィカルフロントエンド。デスクトップに依存しない GUI で Android デバイスに接続し、ファイルを管理できます。\n\n"
    },
    {
      "title": "メディアプレイヤー",
      "level": 2,
      "content": "Amarok などの音楽プレイヤーで MTP デバイスを使うこともできます。これには /etc/udev/rules.d/51-android.rules を編集する必要があります (以下では MTP デバイスの例として Galaxy Nexus を使っています):\n\n次を実行してください:\n\n```\n$ lsusb\n```\n\nあなたのデバイスを探してください。以下のように出力されるはずです:\n\n```\nBus 003 Device 011: ID 04e8:6860 Samsung Electronics Co., Ltd GT-I9100 Phone [Galaxy S II], GT-P7500 [Galaxy Tab 10.1]\n```\n\n/etc/udev/rules.d/51-android.rules へのエントリは以下のようになります:\n\n```\nSUBSYSTEM==\"usb\", ATTR{idVendor}==\"04e8\", ATTR{idProduct}==\"6860\", MODE=\"0666\", OWNER=\"[username]\"\n```\n\nudev ルールをリロードしてください:\n\n```\n# udevadm control --reload\n```\n\n"
    },
    {
      "title": "ファイルマネージャ統合",
      "level": 2,
      "content": "MTP で接続された Android デバイスのストレージのコンテンツをファイルマネージャで閲覧するには、対応するプラグインをインストールしてください:\n\n- GVFS (GNOME Files) を使用するファイルマネージャの場合は、MTP 用の gvfs-mtp か PTP サポート用の gvfs-gphoto2 をインストールしてください。\n- KIO (KDE の Dolphin) を使用するファイルマネージャの場合は、kio-extras (dolphin の依存パッケージ) に MTP サポートが含まれています。\n\n必要なパッケージをインストールしたら、デバイスがファイルマネージャに自動的に表示され、URL (例: mtp://[usb:002,013]/) からアクセスできるはずです。\n\n"
    },
    {
      "title": "gvfs-mtp",
      "level": 3,
      "content": "gvfs-mtp は公式リポジトリで利用可能です。\n\nlsusb を使うことで、あなたのデバイスの情報を取得できます。Bus 番号と Device 番号は、gvfs-mtp で使ったり、udev ルールを作成する際のデバイス ID として使ったりできます。\n\n```\nBus 002 Device 018: ID 04b7:88a9 Compal Electronics, Inc.\n```\n\n検出された、MTP が有効化されたデバイスを見るには\n\ngio mount を使うか:\n\n```\ngio mount -li | grep -e ^Volume -e activation_root\n```\n\n```\nVolume(0): MT65xx Android Phone\n  activation_root=mtp://[usb:002,018]/\n```\n\nlsusb を使ってください:\n\n```\nlsusb -v 2> /dev/null | grep -e Bus -e iInterface -e bInterfaceProtocol\n```\n\n```\n...\nBus 002 Device 018: ID 04b7:88a9 Compal Electronics, Inc. \n      bInterfaceProtocol      0 \n      iInterface              5 MTP\n...\n```\n\n利用可能なすべての接続済み MTP デバイスをマウントするには、インラインスクリプトを使用してください:\n\n```\ngio mount -li | awk -F= '{if(index($2,\"mtp\") == 1)system(\"gio mount \"$2)}'\n```\n\ngvfs-mtp でコマンドからマウント/ディスマウントするには、Bus 番号と Device 番号を使用してください。例えば、マウントする場合は gio mount mtp://[usb:001,007]/、アンマウントする場合は gio mount -u mtp://[usb:001,007]/ となります。マウント済みデバイスは mtp:host= で始まるディレクトリ内で利用でき、/run/user/$UID/gvfs/ 下に配置されています。\n\ngvfs で MTP デバイスの自動マウントを無効化するには、/usr/share/gvfs/mounts/mtp.mount 内の AutoMount 変数の値を true から false に変更してください。\n\nファイルマネージャにあなたのデバイスが表示されない場合、#libmtp にネイティブサポートが存在せず、サポートされているデバイスのリストに入っていません。コマンドラインを使ってマウントを試みる場合は、エラーが発生する場合もあります:\n\n```\nDevice 0 (VID=XXXX and PID=XXXX) is UNKNOWN.\nPlease report this VID/PID and the device model to the libmtp development team\n```\n\nデバイスをファイルマネージャに表示させるための回避策は、対象デバイス用の udev ルールを記述することです。しかし、MTP 接続を用いてデバイスをマウントできる保証はありません。\n\nvendorId:productID という形式の ID を使用してください (例: 04b7:88a9)。そして、設定ファイルを作成して udev ルールを作成してください:\n\n```\n/etc/udev/rules.d/51-android.rules\n```\n\n```\nSUBSYSTEM==\"usb\", ATTR{idVendor}==\"04b7\", ATTR{idProduct}==\"88a9\", MODE=\"0660\", GROUP=\"uucp\", ENV{ID_MTP_DEVICE}=\"1\", SYMLINK+=\"libmtp\"\n```\n\nudev ルールを再読込してください:\n\n```\n# udevadm control --reload\n```\n\ngvfs をサポートしているファイルマネージャは、MTP デバイスを表示でき、#libmtp によってサポートされていればマウントできます。しかし、サポートがなく、デバイスを開けない場合、携帯電話の設定を PTP に変更し、gvfs-gphoto2 をインストールして、最低限、写真へのアクセスをできるようにしてください。PTP のマウントを行うコマンドラインは MTP デバイスのそれに少し似ています: gio mount gphoto2://[usb:002,019]/。\n\n"
    },
    {
      "title": "libmtp (gvfs-mtp): ファイルマネージャ (nautilus、pcmanfm、vifm など) が Android デバイスの DCIM/Camera にアクセスする際にハングする",
      "level": 3,
      "content": "症状: DCIM/Camera ディレクトリに入る事以外、うまく機能する。この場合、ファイルマネージャがフリーズし、コマンドラインからそのディレクトリで ls を実行することさえできなくなるs。\n\n可能性の高い原因は libmtp のバグです。\n\nどうやら 20180915_180351(0).jpg のような名前のファイルが原因のようです。例として、Samsung の電話はそのような名前のファイルを作成する傾向にあります。\n\nこれに関するチケット (1、2 など) と質問 (1、2) が複数存在します。\n\n可能な回避策は、そのようなディレクトリに対しては #FUSE ファイルシステム にある go-mtpfs などの異なるオプションを使うか、あるいは、どうにかして携帯カメラのファイル命名ポリシーを変更する (または、Open Camera などの他のカメラアプリに変える) ことです。\n\n"
    },
    {
      "title": "jmtpfs: 初回アクセス時に入出力エラー",
      "level": 3,
      "content": "症状: jmtpfs はマウントに成功するが、デバイス上のファイルに (ls などで) アクセスすると、エラーが報告される:\n\n```\ncannot access <mount-point>: Input/output error\n```\n\nこれはセキュリティ機能のようです: 携帯電話がロックスクリーンによってロックされているとき、MTP は機能しません。電話をアンロックすれば、ケーブルで繋がっている限り再び機能するはずです。\n\n"
    },
    {
      "title": "kio-mtp: 「ファイルマネージャで開く」アクションを使用できない",
      "level": 3,
      "content": "「ファイルマネージャで開く」アクションを使うことができない場合、/usr/share/solid/actions/solid_mtp.desktop ファイルを編集することでこの問題を回避できます。\n\nExec=kioclient exec mtp:udi=%i/ の行を Exec=dolphin \"mtp:/\" に変更してください。\n\n"
    },
    {
      "title": "kio-mtp が異なるサービスから同時に呼び出される",
      "level": 3,
      "content": "このフォーラムで言及されている通り、mtpfs と kio-mtp (及び、音楽プレイヤを含む、kio-mtp を使用する、衝突するサービス) を並列に使用するのは避けるべきです。\n\n例えば、MTP サービス用の Amarok のプラグインは、Dolphin (plasma) が異なるモデルの電話のファイルにアクセスできなくするかもしれません。そのプラグインをオフにすることで、少なくとも1つのユーザに対してはこれを解決できます。\n\n"
    },
    {
      "title": "Android File Transfer: connect failed: no MTP device found",
      "level": 3,
      "content": "android-file-transfer をインストールした後に MTP デバイスをマウントしようとすると以下のエラーが発生する場合:\n\n```\n$ aft-mtp-mount /path/to/folder\n```\n\n```\nconnect failed: no MTP device found\n```\n\nandroid-udev をインストールしてください。このパッケージには製造業者/デバイス毎に対して MTP デバイスの udev ルールが含まれていて、ADB や MTP をより簡単に使えるようにします。\n\n"
    }
  ]
}
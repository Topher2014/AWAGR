{
  "title": "Tor Browser (Русский)",
  "url": "https://wiki.archlinux.org/title/Tor_Browser_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- GNUnet (Русский)\n- I2P (Русский)\n- Freenet\n\nTor Project (The onion routing) — открытая реализация луковой маршрутизации, предоставляющая доступ к анонимной прокси-сети. Основная цель — сохранить анонимность пользователя в интернете, обеспечив защиту от анализа трафика.\n\nПользователи сети Tor запускают на своих машинах «луковый прокси» (onion proxy), который предоставляет программам-клиентам SOCKS-интерфейс. Прокси подключается к сети Tor, периодически согласовывая виртуальный канал через неё. Tor использует многослойную криптографию (отсюда аналогия с луком), последовательно обеспечивая секретность на каждом промежуточном маршрутизаторе.\n\nВ процессе работы луковый прокси управляет сетевым трафиком, обеспечивая анонимность конечного пользователя. Трафик зашифровывается, пересылается через узлы сети Tor и дешифруется на последнем узле перед отправкой на целевой сервер. Цена обеспечения анонимности — низкая скорость работы по сравнению с обычным прямым соединением из-за большого количества перенаправлений трафика. Кроме того, хотя Tor обеспечивает защиту от анализа трафика, он не позволяет предотвратить атаки на опознание трафика (traffic confirmation) на границах сети Tor (то есть в точках входа и выхода из сети). Подробнее смотрите Wikipedia:ru:Tor.\n\nNote: **не** \n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет torbrowser-launcher для использования Tor Browser — это единственный официально поддерживаемый способ для анонимного веб-сёрфинга через Tor.\n\nЕсли вы планируете использовать Tor с другими приложениями или запустить свой собственный onion-сервис, установите пакет tor — данная статья в основном посвящена его использованию.\n\nNyx — консольная утилита для мониторинга Tor. Позволяет отслеживать использование пропускной способности, детали соединений, а также редактировать настройки на лету. Для её использования установите пакет nyx.\n\n"
    },
    {
      "title": "Использование",
      "level": 2,
      "content": "Запустите/включите службу tor.service. Также можно запустить вручную от имени пользователя tor:\n\n```\n[tor]$ /usr/bin/tor\n```\n\nЧтобы программа работала через Tor, настройте её использовать 127.0.0.1 или localhost в качестве SOCKS5-прокси на порте 9050 (для Tor со стандартными настройками).\n\nПрокси позволяет удалённо выполнять разрешение доменных имён: используйте socks5h://localhost:9050 для отправки DNS-запросов с выходного узла (вместо socks5 для локальных запросов).\n\nПроверить работу Tor можно на странице https://check.torproject.org/.\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "По умолчанию Tor считывает настройки из файла /etc/tor/torrc, а если он отсутствует, то из $HOME/.torrc. Информация о настройках доступна в руководстве tor(1). Настройки по умолчанию должны подходить для большинства пользователей.\n\nПосле изменения настроек службу tor.service необходимо перезагрузить.\n\n"
    },
    {
      "title": "Настройка Tor Relay",
      "level": 3,
      "content": "Максимальное доступное для Tor количество открытых файловых дескрипторов задаётся параметром LimitNOFILE в файле tor.service. Для быстрых ретрансляторов имеет смысл увеличить это значение.\n\nЕсли на вашей системе не запущен веб-сервер и вы не задавали значение AccountingMax (определяет максимальный объём передаваемых данных), рассмотрите возможность установки параметра ORPort в значение 443 и/или DirPort в значение 80. Многие пользователи Tor находятся за жёсткими межсетевыми экранами, которые разрешают им только веб-сёрфинг, и такая настройка позволит им использовать ваш ретранслятор. Если порты 80 и 443 уже заняты, то подойдут 22, 110, 143 и 9001 [1]. Порты с номерами до 1024 являются системными, и для их использования Tor должен быть запущен с привилегиями суперпользователя; задайте параметры User=root в юните tor.service и User tor в файле torrc.\n\nТакже будет полезно глянуть документацию Tor о жизненном цикле ретрансляторов.\n\n"
    },
    {
      "title": "Tor ControlPort",
      "level": 3,
      "content": "Как правило, особой необходимости открывать ControlPort не возникает, но некоторым программам это может потребоваться для получения низкоуровневого доступа к узлу.\n\nЧерез открытый ControlPort внешние приложения смогут отслеживать состояние вашего узла, корректировать настройки, а также получать информацию о состоянии сети Tor и виртуальных каналов.\n\nДобавьте следующую строку в файл torrc:\n\n```\nControlPort 9051\n```\n\nРазумеется, доступ к ControlPort должен предоставляться только доверенным пользователям. Ограничение доступа осуществляется либо с помощью cookie-файла, либо паролем, либо обоими способами одновременно.\n\n"
    },
    {
      "title": "Cookie-файл Tor Control",
      "level": 4,
      "content": "Добавьте к файлу torrc следующие строки:\n\n```\nCookieAuthentication 1\nCookieAuthFile /var/lib/tor/control_auth_cookie\nCookieAuthFileGroupReadable 1\nDataDirectoryGroupReadable 1\n```\n\nПерезапустите службу tor.service для применения изменений.\n\nДоступ к ControlPort будет ограничен набором файловых разрешений cookie-файла и каталога data.\n\nДобавьте нужных пользователей в группу tor, чтобы они получили доступ к cookie-файлу.\n\nПроверить права доступа можно такой командой:\n\n```\n$ stat -c%a /var/lib/tor /var/lib/tor/control_auth_cookie\n```\n\nОна должна вывести значения 750 и 640.\n\n"
    },
    {
      "title": "Пароль Tor Control",
      "level": 4,
      "content": "Преобразуйте пароль из представления в виде открытого текста в хэш:\n\n```\n$ set +o history                  # отключить историю команд bash\n$ tor --hash-password пароль\n$ set -o history                  # включить историю команд bash\n```\n\nДобавьте этот хэш к файлу torrc:\n\n```\nHashedControlPassword хэш\n```\n\nКоманда set +o history отключает сохранение истории в файл $HISTFILE, чтобы при выполнении команды tor --hash-password в нём не сохранилось значение пароля открытым текстом.\n\n"
    },
    {
      "title": "Tor ControlSocket",
      "level": 4,
      "content": "Tor ControlSocket имеет примерно то же назначение, что и #Tor ControlPort, с той лишь разницей, что прослушивается не TCP-сокет, а сокет домена Unix.\n\nЕсли какой-то программе нужен доступ к Tor ControlSocket, добавьте следующие строки к файлу torrc:\n\n```\nControlSocket /var/lib/tor/control_socket\nControlSocketsGroupWritable 1\nDataDirectoryGroupReadable 1\nCacheDirectoryGroupReadable 1             # обходное решение для бага #26913\n```\n\nДобавьте запускающего программу пользователя группу tor.\n\nЗатем перезапустите службу tor.service и саму программу.\n\nЧтобы проверить права доступа у сокета:\n\n```\n$ stat -c%a /var/lib/tor /var/lib/tor/control_socket\n```\n\nКоманда должна вывести значения 750 и 660.\n\n"
    },
    {
      "title": "Проверка Tor Control",
      "level": 4,
      "content": "Чтобы проверить ControlPort, используйте входящую в пакет gnu-netcat утилиту nc:\n\n```\n$ echo -e 'PROTOCOLINFO\\r\\n' | nc 127.0.0.1 9051\n```\n\nДля проверки ControlSocket можно использовать socat:\n\n```\n$ echo -e 'PROTOCOLINFO\\r\\n' | socat - UNIX-CLIENT:/var/lib/tor/control_socket\n```\n\nОбе команды должны вывести\n\n```\n250-PROTOCOLINFO 1\n250-AUTH METHODS=COOKIE,SAFECOOKIE,HASHEDPASSWORD COOKIEFILE=\"/var/lib/tor/control_auth_cookie\"\n250-VERSION Tor=\"0.4.8.12\"\n250 OK\n514 Authentication required.\n```\n\nИнформация о доступных командах есть в документации: The Tor Control Protocol.\n\n"
    },
    {
      "title": "Использование системной службы Tor в браузере",
      "level": 3,
      "content": "По умолчанию Tor Browser запускает свой собственный экземпляр Tor, но можно перенастроить его на использование системной службы Tor. Актуальная инструкция о том, как это сделать, есть в запускающем скрипте, который обычно находится в ~/.local/share/torbrowser/tbb/x86_64/tor-browser/Browser/start-tor-browser.\n\nПо состоянию на версию 0.3.7 действия такие:\n\n1. В файле /etc/tor/torrc возьмите адрес и порт из настройки SOCKSPort. Если адрес не указан, по умолчанию используется 127.0.0.1; если порт не указан, по умолчанию используется 9050.\n1. Выполните шаги, описанные в разделах #Tor ControlPort и #Пароль Tor Control, и скопируйте ControlPort и пароль для дальнейшего использования.\n1. В Tor Browser откройте about:config и измените следующие параметры:# ПАРАМЕТР ЗНАЧЕНИЕ # network.proxy.socks <адрес SOCKS> # network.proxy.socks_port <порт SOCKS> # extensions.torbutton.inserted_button true # extensions.torbutton.launch_warning false # extensions.torbutton.loglevel 2 # extensions.torbutton.logmethod 0 # extensions.torlauncher.control_port <ControlPort> # extensions.torlauncher.loglevel 2 # extensions.torlauncher.logmethod 0 # extensions.torlauncher.prompt_at_startup false # extensions.torlauncher.start_tor false\n1. В запускающем скрипте, который обычно находится в ~/.local/share/torbrowser/tbb/x86_64/tor-browser/Browser/start-tor-browser, найдите и измените строку с паролем, заменив secret на заданный вами пароль Tor Control: setControlPortPasswd ${TOR_CONTROL_PASSWD:='\"secret\"'}Важно: Не трогайте кавычки вокруг пароля, они должны быть именно в таком виде — двойные кавычки внутри одинарных кавычек.\n1. Перезапустите Tor Browser. Если всё хорошо, на странице запуска должно быть сообщение о том, что браузер не контролирует соединение Tor, а в журнале службы tor.service должна появиться строка New control connection opened from адрес.\n\n```\n# ПАРАМЕТР                                 ЗНАЧЕНИЕ\n# network.proxy.socks                      <адрес SOCKS>\n# network.proxy.socks_port                 <порт SOCKS>\n# extensions.torbutton.inserted_button     true\n# extensions.torbutton.launch_warning      false\n# extensions.torbutton.loglevel            2\n# extensions.torbutton.logmethod           0\n# extensions.torlauncher.control_port      <ControlPort>\n# extensions.torlauncher.loglevel          2\n# extensions.torlauncher.logmethod         0\n# extensions.torlauncher.prompt_at_startup false\n# extensions.torlauncher.start_tor         false\n```\n\n```\nsetControlPortPasswd ${TOR_CONTROL_PASSWD:='\"secret\"'}\n```\n\n"
    },
    {
      "title": "Запуск Tor в chroot",
      "level": 2,
      "content": "Для повышения безопасности вы можете захотеть запускать Tor в chroot. Следующий скрипт создаст подходящее окружение chroot в каталоге /opt/torchroot:\n\n```\n~/torchroot-setup.sh\n```\n\n```\n#!/bin/sh\nexport TORCHROOT=/opt/torchroot\n\nmkdir -p $TORCHROOT\nmkdir -p $TORCHROOT/etc/tor\nmkdir -p $TORCHROOT/dev\nmkdir -p $TORCHROOT/usr/bin\nmkdir -p $TORCHROOT/usr/lib\nmkdir -p $TORCHROOT/usr/share/tor\nmkdir -p $TORCHROOT/var/lib\nmkdir -p $TORCHROOT/var/log/tor/\n\nln -s /usr/lib  $TORCHROOT/lib\ncp /etc/hosts           $TORCHROOT/etc/\ncp /etc/host.conf       $TORCHROOT/etc/\ncp /etc/localtime       $TORCHROOT/etc/\ncp /etc/nsswitch.conf   $TORCHROOT/etc/\ncp /etc/resolv.conf     $TORCHROOT/etc/\n\ncp /usr/bin/tor         $TORCHROOT/usr/bin/\ncp /usr/share/tor/geoip* $TORCHROOT/usr/share/tor/\ncp /lib/libnss* /lib/libnsl* /lib/ld-linux-*.so* /lib/libresolv* /lib/libgcc_s.so* $TORCHROOT/usr/lib/\ncp $(ldd /usr/bin/tor | awk '{print $3}'|grep --color=never \"^/\") $TORCHROOT/usr/lib/\n\n### /var/log/tor/notices.log необходим только в том случае, если вы запускаете hidden service\n# cp /var/log/tor/notices.log $TORCHROOT/var/log/tor/\n\ncp -r /var/lib/tor      $TORCHROOT/var/lib/\ncp /etc/tor/torrc       $TORCHROOT/etc/tor/\n\nchown tor:tor $TORCHROOT\nchmod 700 $TORCHROOT\nchown -R tor:tor $TORCHROOT/var/lib/tor\nchown -R tor:tor $TORCHROOT/var/log/tor\n\nsh -c \"grep --color=never ^tor /etc/passwd > $TORCHROOT/etc/passwd\"\nsh -c \"grep --color=never ^tor /etc/group > $TORCHROOT/etc/group\"\n\nmknod -m 644 $TORCHROOT/dev/random c 1 8\nmknod -m 644 $TORCHROOT/dev/urandom c 1 9\nmknod -m 666 $TORCHROOT/dev/null c 1 3\n\nif [ \"$(uname -m)\" = \"x86_64\" ]; then\n  cp /usr/lib/ld-linux-x86-64.so* $TORCHROOT/usr/lib/.\n  ln -sr /usr/lib64 $TORCHROOT/lib64\n  ln -s $TORCHROOT/usr/lib ${TORCHROOT}/usr/lib64\nfi\n```\n\nПосле выполнения скрипта от пользователя root вы можете запустить Tor в окружении chroot командой:\n\n```\n# chroot --userspec=tor:tor /opt/torchroot /usr/bin/tor\n```\n\nИли, если вы запускаете Tor через systemd, вы можете создать drop-in файл для службы tor.service:\n\n```\n/etc/systemd/system/tor.service.d/chroot.conf\n```\n\n```\n[Service]\nUser=root\nExecStart=\nExecStart=/usr/bin/sh -c \"chroot --userspec=tor:tor /opt/torchroot /usr/bin/tor -f /etc/tor/torrc\"\nKillSignal=SIGINT\n```\n\n"
    },
    {
      "title": "Запуск Tor в контейнере systemd-nspawn",
      "level": 2,
      "content": "В этом примере мы создадим контейнер systemd-nspawn с виртуальным сетевым macvlan-интерфейсом. Контейнер будет называться tor-exit.\n\nВ статьях systemd-nspawn и systemd-networkd можно найти полную информацию о работе и настройке соответствующих программ.\n\n"
    },
    {
      "title": "Установка и настройка хоста",
      "level": 3,
      "content": "Контейнер будет размещаться в каталоге /srv/container:\n\n```\n# mkdir -p /srv/container/tor-exit\n```\n\nУстановите пакет arch-install-scripts, чтобы получить доступ к утилите pacstrap.\n\nС помощью pacstrap установите в каталог контейнера пакеты base, tor и nyx (подробнее см. статью об установке Arch Linux в контейнер):\n\n```\n# pacstrap -K -сi /srv/container/tor-exit base tor nyx\n```\n\nЕсли зарегистрировать контейнер на хосте, то в дальнейшем с ним можно будет взаимодействовать извне с помощью команды machinectl. Для этого необходимо создать символическую ссылку на контейнер в каталоге /var/lib/container/. Создайте каталог, если он отсутствует:\n\n```\n# mkdir -p /var/lib/container\n```\n\nи поместите в него символическую ссылку на контейнер (см. systemd-nspawn#Management):\n\n```\n# ln -s /srv/container/tor-exit /var/lib/container/tor-exit\n```\n\n"
    },
    {
      "title": "Виртуальный сетевой интерфейс",
      "level": 4,
      "content": "Создайте drop-in-файл настроек контейнера:\n\n```\n/etc/systemd/nspawn/tor-exit.nspawn\n```\n\n```\n[Service]\nMACVLAN=интерфейс\n\n[Exec]\nLimitNOFILE=65536\n```\n\nОпция MACVLAN=интерфейс создаёт macvlan-интерфейс с названием mv-интерфейс и привязывает его к контейнеру, подробнее см. systemd-nspawn#Use a \"macvlan\" or \"ipvlan\" interface. Это полезно с точки зрения безопасности, поскольку контейнеру можно назначить приватный IP-адрес, а настоящий адрес машины из контейнера виден не будет. Так можно, например, скрыть DNS-запросы.\n\nОпция LimitNOFILE=65536 позволит открывать большее #Количество соединений одновременно.\n\nНаконец, сохраните сетевые настройки systemd-networkd в файле /srv/container/tor-exit/etc/systemd/network/mv-интерфейс.network.\n\n"
    },
    {
      "title": "Запуск и включение systemd-nspawn",
      "level": 4,
      "content": "Запустите/включите службу systemd-nspawn@tor-exit.service.\n\n"
    },
    {
      "title": "Настройка контейнера",
      "level": 3,
      "content": "Чтобы войти в контейнер, выполните (см. systemd-nspawn#machinectl):\n\n```\n# machinectl login tor-exit\n```\n\n"
    },
    {
      "title": "Запуск и включение systemd-networkd",
      "level": 4,
      "content": "Запустите/включите службу systemd-networkd.service. Команда networkctl отобразит список сетевых интерфейсов контейнера, если systemd-networkd настроен корректно.\n\n"
    },
    {
      "title": "Настройка Tor",
      "level": 3,
      "content": "Смотрите раздел #Запуск сервера Tor.\n\n"
    },
    {
      "title": "Веб-сёрфинг",
      "level": 2,
      "content": "Единственный способ оставаться анонимным при просмотре страниц в интернете — использовать Tor Browser Bundle, который использует пропатченную версию Firefox. Его можно установить с помощью пакета torbrowser-launcher.\n\nТакже можно использовать Tor с обычными браузерами: в разделах #Firefox и #Chromium объясняется, как настроить их на работу через Tor. Обратите внимание, что даже в режиме приватного просмотра это не гарантирует анонимности: отпечатки, плагины, DNS-утечки и прочие недочёты могут привести к раскрытию вашего IP-адреса или личности [2].\n\n"
    },
    {
      "title": "Firefox",
      "level": 3,
      "content": "Настройки > Основные > Настройки сети > Настроить..., выберите пункт Ручная настройка прокси, после чего укажите узел SOCKS localhost на порте 9050 (SOCKS v5). Чтобы перенаправить все DNS-запросы в сеть Tor, выберите пункт Отправлять DNS-запросы через прокси при использовании SOCKS 5.\n\n"
    },
    {
      "title": "Chromium",
      "level": 3,
      "content": "Запустите Chromium с такими параметрами:\n\n```\n$ chromium --proxy-server=\"socks5://мой-прокси:8080\" --host-resolver-rules=\"MAP * ~NOTFOUND , EXCLUDE мой-прокси\"\n```\n\nФлаг --proxy-server=\"socks5://мой-прокси:8080\" означает, что все http:// и https:// запросы будут посылаться через прокси-сервер \"мой-прокси:8080\" посредством протокола SOCKS пятой версии. Разрешение имён для этих запросов будет выполняться прокси-сервером, а не браузером локально.\n\nФлаг --proxy-server влияет только на загрузку URL-страниц. Однако в Chromium есть и другие компоненты, которые могут попытаться выполнить DNS-разрешение напрямую. Наиболее важный их этих компонентов — DNS-prefetcher. Если DNS-prefetcher не отключён, то браузер будет посылать DNS-запросы напрямую, минуя SOCKS5-сервер. Prefetcher и другие компоненты можно отключить, но такой подход неудобен и ненадёжен, поскольку придётся отслеживать каждый элемент Chromium, который может захотеть посылать DNS-запросы самостоятельно.\n\nДля комплексного решения этой проблемы используется флаг --host-resolver-rules=\"MAP * ~NOTFOUND , EXCLUDE мой-прокси\", который представляет собой ловушку для посылаемых через обычную сеть DNS-запросов. Каждое выполняемое локально разрешение DNS теперь будет привязано к (нерабочему) адресу ~NOTFOUND (можно представить его как адрес 0.0.0.0). Указание \"EXCLUDE\" создаёт исключение для прокси-сервера \"мой-прокси\", потому что без этого Chromium не сможет выполнять разрешение адреса самого́ прокси-сервера SOCKS и все запросы будут завершаться неудачей с ответом PROXY_CONNECTION_FAILED.\n\nТакже, чтобы предотвратить утечки WebRTC, можно установить расширение браузера WebRTC Network Limiter.\n\n"
    },
    {
      "title": "Отладка",
      "level": 4,
      "content": "В случае возникновения каких-либо проблем в первую очередь нужно проверить настройки прокси, введя адрес chrome://net-internals/#proxy.\n\nЗатем нужно изучить вкладку настроек DNS, чтобы убедиться, что Chromium не выполняет локальное разрешение DNS: chrome://net-internals/#dns.\n\n"
    },
    {
      "title": "Расширения",
      "level": 4,
      "content": "Как и для Firefox, вы можете установить удобный переключатель прокси вроде Proxy SwitchySharp.\n\nПосле установки перейдите на его панель настроек. Под вкладкой Proxy Profiles добавьте новый профиль Tor, уберите отметку с опции Use the same proxy server for all protocols, затем добавьте localhost в качестве хоста SOCKS, порт 9050, и выберите SOCKS v5.\n\nПри желании можно включить опцию быстрого переключения на вкладке настроек General. Тогда переключаться между нормальной навигацией и сетью Tor можно будет одним кликом на иконке Proxy SwitchySharp.\n\n"
    },
    {
      "title": "Electron",
      "level": 4,
      "content": "Смотрите #Chromium.\n\n"
    },
    {
      "title": "Luakit",
      "level": 3,
      "content": "Выполните:\n\n```\n$ torsocks luakit\n```\n\n"
    },
    {
      "title": "HTTP-прокси",
      "level": 2,
      "content": "В Tor можно работать через встроенный туннелированный HTTP-прокси или сторонний прокси вроде Privoxy. Тем не менее, разработчики Tor рекомендуют использовать библиотеку SOCKS5, если ваш браузер её поддерживает.\n\n"
    },
    {
      "title": "Tor",
      "level": 3,
      "content": "Добавьте следующую строку в файл torrc, чтобы запустить HTTP-прокси на порте 8118 на localhost:\n\n```\nHTTPTunnelPort 127.0.0.1:8118\n```\n\nПодробнее смотрите руководство Tor.\n\n"
    },
    {
      "title": "Firefox",
      "level": 3,
      "content": "Расширение браузера FoxyProxy позволяет назначить несколько прокси-серверов как для всех HTTP-запросов в целом, так и для отдельных сайтов. После установки расширения перезапустите браузер и вручную настройте использование прокси по адресу localhost:8118, где должен работать Privoxy. Эти настройки находятся в меню Add > Standard proxy type. Выберите метку прокси-сервера (например, Tor) и введите хост и порт в поля HTTP Proxy и SSL Proxy. Для проверки правильности работы Tor посетите страницу Tor Check.\n\n"
    },
    {
      "title": "Privoxy",
      "level": 3,
      "content": "Privoxy также можно использовать с другими приложениями, например мессенджерами (Jabber, IRC). Приложения, которые поддерживают HTTP-прокси, можно подключить к Privoxy (то есть на адрес 127.0.0.1:8118). Чтобы использовать SOCKS-прокси напрямую, направьте ваше приложение в Tor (адрес по умолчанию 127.0.0.1:9050). Следует иметь в виду, что приложение может самостоятельно выполнять DNS-разрешение, что приведёт к утечке информации. В этом случае можно попробовать использовать SOCKS4A (например, с Privoxy).\n\n"
    },
    {
      "title": "Обмен мгновенными сообщениями",
      "level": 2,
      "content": "Для использования мессенджера через Tor не нужен HTTP-прокси вроде Privoxy. Мы используем напрямую демон Tor, по умолчанию прослушивающий порт 9050.\n\n"
    },
    {
      "title": "Pidgin",
      "level": 3,
      "content": "Pidgin можно настроить на работу через Tor глобально или для отдельных аккаунтов. Для глобальных настроек используйте пункт меню Средства -> Настройки -> Прокси. Чтобы настроить использование Tor для одного аккаунта, перейдите в Уч.записи > Управление учётными записями, выберите нужный аккаунт, нажмите Изменить, после чего на вкладке Прокси укажите следующие параметры:\n\n- Тип прокси: SOCKS 5\n- Узел: 127.0.0.1\n- Порт: 9050\n\n"
    },
    {
      "title": "Irssi",
      "level": 3,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nLibera Chat рекомендует подключаться напрямую к .onion. Для этого также потребуется SASL для идентификации NickServ в процессе соединения; подробности можно найти в статье Irssi#Authenticating with SASL. Запустите irssi:\n\n```\n$ torsocks irssi\n```\n\nЗадайте ваши идентификационные данные для сервиса nickserv, которые будут считываться при создании соединения. Поддерживаются механизмы аутентификации ECDSA-NIST256P-CHALLENGE (см. ecdsatool) и PLAIN. DH-BLOWFISH больше не поддерживается.\n\n```\n/sasl set сеть имя-пользователя пароль механизм\n```\n\nОтключите CTCP и DCC и задайте фальшивое имя хоста, чтобы скрыть настоящее: [4]\n\n```\n/ignore * CTCPS\n/ignore * DCC\n/set hostname фальшивый_хост\n```\n\nПодключитесь к Libera Chat:\n\n```\n/connect -network network libera75jm6of4wxpxt4aynol3xjmbtxgfyjpu34ss4d7r7q2v5zrpyd.onion\n```\n\nДополнительную информацию можно найти в статьях Accessing Libera.Chat Via Tor, Using SASL и IRC/SILC Wiki article.\n\n"
    },
    {
      "title": "Pacman",
      "level": 2,
      "content": "Через сеть Tor можно выполнять загрузочные операции pacman — синхронизировать базы данных репозиториев, скачивать пакеты и открытые ключи.\n\nПреимущества:\n\n- Если кто-то отслеживает интернет-соединение вашей машины, то он не увидит выполняемые обновления. Соответственно, нельзя будет определить, какие пакеты установлены, какие из них устарели и как часто выполняется обновление. Но следует учитывать, что атакующий всё ещё может опознать используемое программное обеспечение и узнать его версию другими способами. Например, проанализировав исходящие пакеты вашего HTTP-сервера и просканировав его порт, можно будет определить наличие работающего HTTP-сервера и его версию.\n- Если зеркало для скачивания находится не в onion-домене, то скомпрометированный выходной узел может обнаружить попытку обновления и решить атаковать вашу машину. Однако при этом атакующий скорее всего не будет знать, какую именно машину он атакует.\n- Атакующий может попытаться убедить вашу машину, что доступных обновлений нет, чтобы не позволить применить обновления безопасности. При обновлении через Tor сделать это будет крайне непросто, поскольку в анонимной сети почти невозможно определить конкретно вашу машину.\n\nНедостатки:\n\n- Более длительное время обновления из-за высокого значения задержки и низкой пропускной способности сети Tor. Это может быть значительным недостатком с точки зрения безопасности, если обновление нужно выполнить как можно быстрее, особенно на машинах, подключённых напрямую к интернету. Например, если уязвимость серьёзная и её легко обнаружить и использовать, то злоумышленники часто стараются атаковать как можно больше уязвимых систем максимально быстро, чтобы успеть до применения обновлений безопасности.\n\nНадёжность обновлений через Tor:\n\n- Не нужно полагаться на работоспособность DNS.\n- Вы зависите от состояния сети Tor и особенно выходных узлов (например, они могут блокировать обновления).\n- Вы зависите от правильной работы демона Tor. Например, если на диске закончилось свободное место, то демон Tor может отказаться работать. «Reserved blocks gid» в ext4, квоты на использование дискового пространства и некоторые другие меры помогут решить эту проблему.\n- Если вы находитесь в стране, где Tor блокируется или в которой почти или совсем нет пользователей Tor, то вам придётся использовать мост (Tor bridge).\n\nЗамечание по поводу GPG: по умолчанию pacman считает надёжными только те ключи, которые подписаны либо лично вами (делается командой pacman-key --lsign-key), либо тремя из пяти мастер-ключей Arch. Если вредоносный выходной узел попробует заменить пакет на другой, подписанный его ключом, pacman не позволит пользователю установить такой пакет.\n\n```\n/etc/pacman.conf\n```\n\n```\n...\nXferCommand = /usr/bin/curl --socks5-hostname localhost:9050 --location --continue-at - --fail --output %o %u\n...\n```\n\n"
    },
    {
      "title": "Java",
      "level": 2,
      "content": "Чтобы заставить приложение Java проксировать все соединения через Tor, задайте следующую опцию командной строки:\n\n```\nexport JAVA_OPTIONS=\"$JAVA_OPTIONS -DsocksProxyHost=localhost -DsocksProxyPort=9050\"\n```\n\n"
    },
    {
      "title": "Запуск сервера Tor",
      "level": 2,
      "content": "Сеть Tor существует благодаря пользователям, которые создают и обслуживают узлы сети, предоставляют свою пропускную способность и запускают onion-сервисы. Есть несколько способов внести свой вклад в работу сети.\n\n"
    },
    {
      "title": "Мост",
      "level": 3,
      "content": "Мост Tor (Tor bridge) — передающий узел сети, адрес которого не содержится в открытом каталоге узлов Tor. Благодаря этому мосты могут остаться доступны для желающих подключиться к Tor, даже если правительство или интернет-провайдер блокирует все публичные узлы Tor. На странице https://bridges.torproject.org/ объясняется, как узнать адреса мостов.\n\nДля запуска моста достаточно следующих четырёх строк в файле torrc:\n\n```\nSOCKSPort 0\nORPort 443\nBridgeRelay 1\nExitRelay 0\n```\n\nСмотрите также Running a Tor Bridge и пример запуска моста с obfs4.\n\n"
    },
    {
      "title": "Передающий узел",
      "level": 3,
      "content": "В режиме передатчика (relay) ваша машина будет работать в качестве входного (entry node) или промежуточного (forwarding relay) узла сети. В отличие от моста, адрес передающей машины будет опубликован в каталоге узлов Tor. Задача передающего узла заключается в пересылке пакетов к другим передатчикам или выходным узлам, но не напрямую в интернет.\n\nФайл настроек передающего узла с пропускной способностью не менее 20 Кбит/с должен выглядеть так:\n\n```\nNickname название-узла-Tor\nORPort 9001                    # Этот TCP-порт должен быть открыт или проброшен в вашем сетевом экране\nBandwidthRate 20 KB            # Ограничить скорость передачи величиной 20 Kбит/с\nBandwidthBurst 50 KB           # Но разрешить пиковые значения до 50 Kбит/с\nExitRelay 0                    # Запретить отправку пакетов в обычную сеть\n```\n\n"
    },
    {
      "title": "Выходной узел",
      "level": 3,
      "content": "Чтобы запрос из сети Tor попал в обычный интернет, необходим выходной узел (exit relay). Важно понимать, что кто бы ни посылал запрос, для получателя всё будет выглядеть так, будто отправителем является именно выходной узел. Поэтому запуск выходного узла считается наименее безопасным в плане возможных проблем с законом. Если вы размышляете над его запуском, то стоит изучить советы и рекомендации от создателей проекта.\n\n"
    },
    {
      "title": "Настройка",
      "level": 4,
      "content": "В файле torrc можно настроить перечень разрешённых на выходном узле сервисов.\n\nСделать узел выходным:\n\n```\nExitRelay 1\n```\n\nРазрешить весь трафик:\n\n```\nExitPolicy accept *:*\n```\n\nРазрешить только соединения через IRC-порты 6660-6667 и запретить всё остальное:\n\n```\nExitPolicy accept *:6660-6667,reject *:*\n```\n\nПо умолчанию Tor настроен блокировать определённые порты. В файле torrc можно внести корректировки в этот список. Пример разрешения порта NNTP:\n\n```\nExitPolicy accept *:119\n```\n\n"
    },
    {
      "title": "Пример настройки 100-мегабитного выходного узла",
      "level": 4,
      "content": "Если у вас скоростной выходной узел (более 100 Мбит/с) с ORPort 443 и DirPort 80, вам могут пригодиться следующие рекомендации по настройке Tor вместе с межсетевым экраном iptables и DNS-кэшем pdnsd. Настоятельно рекомендуется предварительно изучить статью Пост-установка и советы по обслуживанию.\n\nПо умолчанию Tor может обрабатывать до 8192 соединений одновременно. Можно увеличить это значение [5]:\n\n```\n/etc/systemd/system/tor.service.d/increase-file-limits.conf\n```\n\n```\n[Service]\nLimitNOFILE=65536\n```\n\nЧтобы увеличение лимита сработало, вам также может понадобиться добавить следующие строки:\n\n```\n/etc/security/limits.conf\n```\n\n```\n...\ntor     soft    nofile    65536\ntor     hard    nofile    65536\n@tor    soft    nofile    65536\n@tor    hard    nofile    65536\n```\n\nЧтобы узнать текущее значение nofile, выполните команду ulimit -Hn от имени пользователя tor.\n\nЧтобы разрешить Tor использовать привилегированные порты, службу tor.service нужно запускать от root. Не забудьте также добавить параметр User tor в файле /etc/tor/torrc, чтобы понизить привилегии после запуска.\n\n```\n/etc/systemd/system/tor.service.d/start-as-root.conf\n```\n\n```\n[Service]\nUser=root\n```\n\nОбразец файла настроек выходного узла Tor:\n\n```\n/etc/tor/torrc\n```\n\n```\nSOCKSPort 0                                       ## Только узел, без запуска локального прокси-сервера SOCKS\n\nLog notice stdout                                 ## Стандартное поведение Tor\n\nControlPort 9051                                  ## Для соединения nyx\nCookieAuthentication 1                            ## Для соединения nyx\n\nORPort 443                                        ## Служба tor.service должна быть запущена от root\n\nAddress $IP                                       ## IP-адрес или FQDN\nNickname $NICKNAME                                ## Название узла, отображаемое в Tor Relay Search\n\nRelayBandwidthRate 500 Mbits                      ## bytes/KBytes/MBytes/GBytes/KBits/MBits/GBits\nRelayBandwidthBurst 1000 MBits                    ## bytes/KBytes/MBytes/GBytes/KBits/MBits/GBits\n\nContactInfo $E-MAIL                               ## Tor Relay good practices предлагает указать email\n\nDirPort 80                                        ## Служба tor.service должна быть запущена от root\nDirPortFrontPage /etc/tor/tor-exit-notice.html    ## Оригинал\n\nMyFamily $($KEYID),$($KEYID)...                   ## Не забудьте знак $ перед keyid ;)\n\nExitPolicy reject XXX.XXX.XXX.XXX/XX:*            ## Заблокировать отдельный домен или IP-адрес в дополнение к стандартной политике\n\nUser tor                                          ## Изменяет пользователя на tor после запуска от root\n\nDisableDebuggerAttachment 0                       ## Для соединения nyx\n\n### Производительность ###\nAvoidDiskWrites 1                                 ## Уменьшение износа SSD\nDisableAllSwap 1                                  ## Служба tor.service должна быть запущена от root\nHardwareAccel 1                                   ## Использование аппаратной поддержки OpenSSL\nNumCPUs 2                                         ## Запуск в двух потоках\n```\n\nИнформацию об использованных здесь опциях можно найти в tor(1).\n\nTor по умолчанию запускает SOCKS-прокси на порте 9050 — даже если вы не говорили ему этого делать. Укажите параметр SOCKSPort 0, если планируете использовать Tor только в качестве передатчика без запуска работающих через прокси-сервер локальных приложений.\n\nLog notice stdout перенаправляет логи в поток стандартного вывода stdout, что тоже является настройкой Tor по умолчанию.\n\nControlPort 9051, CookieAuthentication 1 и DisableDebuggerAttachment 0 позволят использовать nyx для мониторинга.\n\nORPort 443 и DirPort 80 говорит Tor прослушивать порты 443 и 80.\n\nDirPortFrontPage выводит страницу приветствия при установлении соединения на порте 80.\n\nExitPolicy reject XXX.XXX.XXX.XXX/XX:* позволяет заблокировать соединения к определённым адресам; укажите здесь внешний IP-адрес и маску подсети вашего выходного узла (обычно можно узнать командой ip addr) для запрета подключения к нему и к соседним хостам через этот выходной узел, чтобы злоумышленник не смог воспользоваться ими для обхода правил сетевого экрана.\n\nAvoidDiskWrites 1 уменьшает количество записей на диск и износ SSD.\n\nDisableAllSwap 1 попытается заблокировать все текущие и будущие страницы памяти, чтобы их нельзя было выгрузить в подкачку.\n\nЕсли команда grep aes /proc/cpuinfo возвращает какой-то результат, то ваш CPU поддерживает AES-инструкции. Если соответствующий модуль был загружен (lsmod | grep aes), то параметр HardwareAccel 1 включит встроенное аппаратное ускорение шифрования, подробнее: https://www.torservers.net/wiki/setup/server#aes-ni_crypto_acceleration\n\nORPort 443, DirPort 80 и DisableAllSwap 1 требуют запуска службы Tor от root, как описано в разделе #Привилегированные порты.\n\nUser tor понижает привилегии после запуска службы от имени root.\n\nЕсли в файле /etc/tor/torrc указаны параметры ControlPort 9051 и CookieAuthentication 1, то можно запустить nyx от имени пользователя tor:\n\n```\n[tor]$ nyx\n```\n\nЧтобы просматривать список соединений Tor с помощью nyx, нужно также указать параметр DisableDebuggerAttachment 0.\n\nЧтобы запустить nyx от другого пользователя (не tor), изучите раздел #Cookie-файл Tor Control.\n\nУстановите и изучите работу с iptables. Вместо использования экрана с контекстной фильтрацией, которому на выходном узле пришлось бы отслеживать тысячи соединений, мы настроим межсетевой экран без отслеживания контекста.\n\n```\n/etc/iptables/iptables.rules\n```\n\n```\n*raw\n-A PREROUTING -j NOTRACK\n-A OUTPUT -j NOTRACK\nCOMMIT\n\n*filter\n:INPUT DROP [0:0]\n:FORWARD DROP [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -p tcp ! --syn -j ACCEPT\n-A INPUT -p udp -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -p tcp --dport 443 -j ACCEPT\n-A INPUT -p tcp --dport 80 -j ACCEPT\n-A INPUT -i lo -j ACCEPT\nCOMMIT\n```\n\n-A PREROUTING -j NOTRACK и -A OUTPUT -j NOTRACK отключит отслеживание соединений в таблице raw.\n\n:INPUT DROP [0:0] — цель (target) цепочки INPUT по умолчанию; отбрасывает входящий трафик, который не был отдельно разрешён опцией ACCEPT.\n\n:FORWARD DROP [0:0] — цель цепочки FORWARD по умолчанию; используется для обычных маршрутизаторов, но не подходит для «луковых».\n\n:OUTPUT ACCEPT [0:0] — цель цепочки OUTPUT по умолчанию; разрешает все исходящие соединения.\n\n-A INPUT -p tcp ! --syn -j ACCEPT разрешает уже установленные по перечисленным ниже правилам входящие TCP соединения, а также TCP соединения от выходного узла.\n\n-A INPUT -p udp -j ACCEPT разрешает все входящие UDP соединения, т.к. мы не используем отслеживание соединений (connection tracking).\n\n-A INPUT -p icmp -j ACCEPT разрешает ICMP-пакеты.\n\n-A INPUT -p tcp --dport 443 -j ACCEPT разрешает входящие соединения на ORPort.\n\n-A INPUT -p tcp --dport 80 -j ACCEPT разрешает входящие соединения на DirPort.\n\n-A INPUT -i lo -j ACCEPT разрешает входящие соединения на петлевой интерфейс.\n\nВы можете использовать pdnsd для локального кэширования DNS-запросов, тогда выходной узел сможет быстрее выполнять разрешение и посылать меньшее количество запросов внешнему DNS-серверу.\n\n```\n/etc/pdnsd.conf\n```\n\n```\n...\nperm_cache=102400                       ## (Значение по умолчанию)*100 = 1 Мбайт * 100 = 100 Мбайт\n...\nserver {\n    label= \"resolvconf\";\n    file = \"/etc/pdnsd-resolv.conf\";    ## Желательно не использовать файл /etc/resolv.conf\n    timeout=4;                          ## Период ожидания ответа сервера; может быть значительно меньше, чем глобальное время ожидания\n    uptest=query;                       ## Проверять доступность сервера, посылая пустые DNS-запросы\n    query_test_name=\".\";                ## Используется, если удалённый сервер игнорирует пустые запросы\n    interval=10m;                       ## Выполнять тестирование каждые 10 минут\n    purge_cache=off;                    ## Игнорировать параметр TTL\n    edns_query=yes;                     ## Использовать EDNS для исходящих запросов, чтобы разрешить UDP-сообщения длиннее 512 байт; может вызвать проблемы на некоторых устаревших системах\n    preset=off;                         ## Перед проверкой состояния сервера предполагать, что он выключен\n }\n...\n```\n\nТакая настройка позволит кэшировать локально до 100 Мбайт DNS-запросов.\n\nЕсли ваш обычный DNS-сервер каким-то образом цензурируется или работает нестабильно, вы можете выбрать альтернативный DNS-сервер; добавьте нужный в отдельный раздел server в файле /etc/pdnsd.conf (смотрите Pdnsd#DNS servers).\n\n"
    },
    {
      "title": "Проверка работоспособности узла",
      "level": 4,
      "content": "Сначала проверьте, запустился ли tor.service и нет ли в его журнале ошибок.\n\nЕсли ошибок нет, можно запустить nyx, чтобы убедиться, что узел устанавливает соединения. Не беспокойтесь, если поначалу ваш новый узел работает медленно; это нормально. Примерно через 3 часа узел должен быть опубликован и стать доступен для поиска через Relay Search.\n\n"
    },
    {
      "title": "TorDNS",
      "level": 2,
      "content": "Можно посылать DNS-запросы с помощью команды tor-resolve:\n\n```\n$ tor-resolve archlinux.org\n```\n\n```\n66.211.214.131\n```\n\nНачиная с версий 0.2.x в Tor появился механизм перенаправления DNS-запросов. Чтобы его включить, добавьте строки ниже в файл настроек и перезапустите демон Tor:\n\n```\n/etc/tor/torrc\n```\n\n```\nDNSPort 9053\nAutomapHostsOnResolve 1\nAutomapHostsSuffixes .exit,.onion\n```\n\nТеперь Tor будет принимать запросы на порт 9053 как обычный DNS-сервер и выполнять разрешение доменов через сеть Tor.\n\nОграничение TorDNS в том, что через него можно выполнить разрешение только A, AAAA и PTR записей; MX и NS запросы будут проигнорированы. Дополнительную информацию можно найти в документации TorDNS для Debian.\n\n"
    },
    {
      "title": "Перенаправление всех DNS-запросов через TorDNS",
      "level": 3,
      "content": "Вашу систему можно настроить посылать все запросы A, AAAA и PTR записей через TorDNS вне зависимости от того, используется ли Tor для соединения с конечной целью. Для этого настройте систему использовать адрес 127.0.0.1 в качестве DNS-сервера и отредактируйте строку DNSPort в файле /etc/tor/torrc:\n\n```\nDNSPort 53\n```\n\nАльтернативное решение — использовать локальный кэширующий DNS-сервер, вроде dnsmasq или pdnsd. Кэш DNS позволит несколько компенсировать низкую скорость TorDNS по сравнению с обычными DNS-серверами. Далее приведены инструкции по настройке dnsmasq. Имейте в виду, что если dnsmasq запускается через NetworkManager, то его настройки находятся в другом месте (смотрите раздел NetworkManager#dnsmasq).\n\nУкажите Tor прослушивать DNS-запросы на порте 9053 и установите пакет dnsmasq.\n\nЗадайте следующую конфигурацию dnsmasq:\n\n```\n/etc/dnsmasq.conf\n```\n\n```\nno-resolv\nport=53\nserver=127.0.0.1#9053\nlisten-address=127.0.0.1\n```\n\nТеперь dnsmasq будет принимать локальные запросы и использовать TorDNS в качестве посредника. Отредактируйте файл /etc/resolv.conf, чтобы система опрашивала только сервер dnsmasq:\n\n```\n/etc/resolv.conf\n```\n\n```\nnameserver 127.0.0.1\n```\n\nЗапустите демон dnsmasq.\n\nНаконец, если вы используете dhcpcd, укажите ему не изменять настройки в файле resolv.conf:\n\n```\n/etc/dhcpcd.conf\n```\n\n```\nnohook resolv.conf\n```\n\nЕсли строка nohook уже есть, то добавьте в неё resolv.conf через запятую.\n\n"
    },
    {
      "title": "Torsocks",
      "level": 2,
      "content": "torsocks позволяет заставить приложение работать через сеть Tor без необходимости корректировать настройки самого́ приложения. Выдержка из torsocks(1):\n\ntorsocks — обёртка между библиотекой torsocks и приложением с целью сделать каждое интернет-соединение проходящим через сеть Tor.\n\nИмейте в виду, что эта обёртка намеренно запрещает некоторые системные вызовы, поэтому некоторые приложения не смогут полноценно работать с ней. Смотрите torsocks-and-unsupported-syscalls.\n\nПримеры использования:\n\n```\n$ torsocks elinks checkip.dyndns.org\n$ torsocks wget -qO- https://check.torproject.org/ | grep -i congratulations\n```\n\n"
    },
    {
      "title": "«Торификация»",
      "level": 2,
      "content": "В некоторых случаях более безопасно (и часто проще) выполнить сквозную «торификацию» всей системы вместо настройки отдельных приложений на использование SOCKS-порта Tor и отслеживания утечек DNS. Для полной торификации сетевой экран iptables настраивают на пересылку всех исходящих пакетов (кроме собственно трафика Tor) на TransPort. В этом случае приложения не нужно настраивать для работы через Tor, хотя работа через SOCKSPort всё ещё возможна. Торификация также работает и для DNS (DNSPort), но при этом нужно учитывать, что Tor поддерживает только протокол TCP, и, за исключением DNS-запросов, UDP-пакеты через Tor посылаться не могут. Следовательно, они должны блокироваться для предотвращения утечек.\n\nТорификация через iptables даёт сравнительно надёжную защиту, но она не является полноценной заменой приложениям виртуализированной торификации вроде Whonix или TorVM [6]. Торификация также не позволяет скрыть отпечаток браузера (fingerprint), поэтому рекомендуется воспользоваться «амнезийным» решением вроде Tails. Приложения всё ещё могут узнать имя хоста, MAC-адрес, серийный номер, часовой пояс вашего компьютера и другие данные, а с root-привилегиями смогут даже отключить сетевой экран целиком. Другими словами, полная торификация через iptables защищает от случайных соединений и DNS-утечек неправильно настроенного программного обеспечения, но не от вредоносных программ или ПО с серьёзными уязвимостями.\n\nПри работе через прозрачный прокси-сервер появляется вероятность случайно запустить сеанс Tor дважды — на клиенте и на прокси, и таким образом получить «Tor поверх Tor». Такая схема работы обладает непредсказуемым поведением и потенциально небезопасна. В теории, трафик пользователя будет выполнять шесть прыжков вместо обычных трёх, но нет никакой гарантии, что дополнительные прыжки не совпадут с тремя изначальными — например, в другом порядке. Разработчики Tor считают, что это небезопасно [7] [8].\n\nНиже приведён файл настроек для утилит iptables-restore и ip6tables-restore (используются службами iptables.service и ip6tables.service соответственно).\n\nNote: Убедитесь, что в файле torrc есть следующие строки:\n\n- Флагами --ipv6 и --ipv4 задаются правила для конкретных версий протокола IP. Таким образом, утилиты iptables-restore и ip6tables-restore могут использовать один и тот же файл настроек.\n- В случае явного указания флага --ipv6 или --ipv4 утилита ip*tables-restore будет игнорировать правило, если оно установлено для другой версии протокола.\n- ip6tables не поддерживает флаг --reject-with.\n\nУбедитесь, что в файле torrc есть следующие строки:\n\n```\nSOCKSPort 9050\nDNSPort 5353\nTransPort 9040\n```\n\nПодробнее смотрите руководство iptables(8).\n\n```\n# modprobe ip_tables iptable_nat ip_conntrack iptable-filter ipt_state\n```\n\n```\n/etc/iptables/iptables.rules\n```\n\n```\n*nat\n:PREROUTING ACCEPT [6:2126]\n:INPUT ACCEPT [0:0]\n:OUTPUT ACCEPT [17:6239]\n:POSTROUTING ACCEPT [6:408]\n\n-A PREROUTING ! -i lo -p udp -m udp --dport 53 -j REDIRECT --to-ports 5353\n-A PREROUTING ! -i lo -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j REDIRECT --to-ports 9040\n-A OUTPUT -o lo -j RETURN\n--ipv4 -A OUTPUT -d 192.168.0.0/16 -j RETURN\n-A OUTPUT -m owner --uid-owner \"tor\" -j RETURN\n-A OUTPUT -p udp -m udp --dport 53 -j REDIRECT --to-ports 5353\n-A OUTPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j REDIRECT --to-ports 9040\nCOMMIT\n\n*filter\n:INPUT DROP [0:0]\n:FORWARD DROP [0:0]\n:OUTPUT DROP [0:0]\n\n-A INPUT -i lo -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\n--ipv4 -A INPUT -p tcp -j REJECT --reject-with tcp-reset\n--ipv4 -A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable\n--ipv4 -A INPUT -j REJECT --reject-with icmp-proto-unreachable\n--ipv6 -A INPUT -j REJECT\n--ipv4 -A OUTPUT -d 127.0.0.0/8 -j ACCEPT\n--ipv4 -A OUTPUT -d 192.168.0.0/16 -j ACCEPT\n--ipv6 -A OUTPUT -d ::1/8 -j ACCEPT\n-A OUTPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT\n-A OUTPUT -m owner --uid-owner \"tor\" -j ACCEPT\n--ipv4 -A OUTPUT -j REJECT --reject-with icmp-port-unreachable\n--ipv6 -A OUTPUT -j REJECT\nCOMMIT\n```\n\nДанный файл также подходит для утилиты ip6tables-restore. Создайте символическую ссылку на него:\n\n```\n# ln -s /etc/iptables/iptables.rules /etc/iptables/ip6tables.rules\n```\n\nУбедитесь, что Tor работает, и запустите/включите службы iptables и ip6tables.\n\nПри необходимости можно добавить указания Requires=iptables.service и Requires=ip6tables.service к любому юниту systemd (например, к экранному менеджеру), чтобы выбранный процесс запускался строго после включения межсетевого экрана.\n\n"
    },
    {
      "title": "Привилегии",
      "level": 3,
      "content": "Если необходимо запустить Tor от обычного пользователя и при этом использовать порты меньше 1024, то можно воспользоваться функциональностью ядра для выдачи процессу /usr/bin/tor привилегии прослушивать привилегированные порты:\n\n```\n# setcap CAP_NET_BIND_SERVICE=+eip /usr/bin/tor\n```\n\nЕсли вы используете службу systemd, то выдать Tor соответствующие разрешения можно также через настройки системного демона. Это удобно тем, что их не нужно восстанавливать после каждого обновления Tor:\n\n```\n/etc/systemd/system/tor.service.d/netcap.conf\n```\n\n```\n[Service]\nCapabilityBoundingSet=\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE\nAmbientCapabilities=\nAmbientCapabilities=CAP_NET_BIND_SERVICE\n```\n\nПодробности можно найти на странице superuser.com.\n\n"
    },
    {
      "title": "Проблема с параметром User",
      "level": 3,
      "content": "Если не удалось запустить демон Tor, выполните следующую команду от root (или воспользуйтесь утилитой sudo):\n\n```\n# tor\n```\n\nОшибка\n\n```\nMay 23 00:27:24.624 [warn] Error setting groups to gid 43: \"Operation not permitted\".\nMay 23 00:27:24.624 [warn] If you set the \"User\" option, you must start Tor as root.\nMay 23 00:27:24.624 [warn] Failed to parse/validate config: Problem with User value. See logs for details.\nMay 23 00:27:24.624 [err] Reading config failed--see warnings above.\n```\n\nозначает проблемы с параметром User. Скорее всего, один или несколько файлов/каталогов в каталоге /var/lib/tor не принадлежат пользователю tor. Это можно определить с помощью команды find:\n\n```\n# find /var/lib/tor/ '!' -user tor\n```\n\nДля всех выведенных файлов и каталогов нужно поменять параметр владельца. Можно сделать это индивидуально для каждого файла\n\n```\n# chown tor:tor /var/lib/tor/имя_файла\n```\n\nили отредактировать все сразу командой\n\n```\n# chown -R -v tor:tor /var/lib/tor\n```\n\nТеперь Tor должен запуститься без проблем.\n\nЕсли запустить службу всё же не удаётся, запустите её от root. Измените имя пользователя в файле /etc/tor/torrc:\n\n```\nUser tor\n```\n\nЗатем отредактируйте юнит tor.service:\n\n```\n[Service]\nUser=root\nGroup=root\nType=simple\n```\n\nВ дальнейшем процесс будет запускаться от пользователя tor, поэтому измените UID и GID файлов на tor и добавьте разрешение на запись:\n\n```\n# chown -R tor:tor /var/lib/tor/\n# chmod -R 700 /var/lib/tor\n```\n\nВыполните daemon-reload для применения изменений и, наконец, запустите tor.service.\n\n"
    },
    {
      "title": "Проблемы с прокси в Tor Browser",
      "level": 3,
      "content": "Tor Browser обычно нормально работает без дополнительных настроек. Если установленный/настроенный прокси выдаёт ошибку «Прокси-сервер отказывается принимать соединения» при попытке открытия любого сайта, попробуйте сбросить настройки, переместив или удалив каталог ~/.local/share/torbrowser/.\n\n"
    },
    {
      "title": "Пустой чёрный экран в tor-browser",
      "level": 3,
      "content": "При работе с AppArmor для доступа к ресурсам необходимо внести изменения в профиль Tor Browser [9], [10]:\n\n```\n/etc/apparmor.d/local/torbrowser.Browser.firefox\n```\n\n```\nowner /{dev,run}/shm/org.mozilla.*.* rw,\n```\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Как настроить свой onion-сервис\n- Использование подключаемых транспортов для обхода блокировки Tor\n- Tor Relay Operator best practices\n- Старая вики\n\n"
    }
  ]
}
{
  "title": "Profile-sync-daemon (Русский)",
  "url": "https://wiki.archlinux.org/title/Profile-sync-daemon_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Anything-sync-daemon (Русский)\n- Firefox (Русский)\n- Chromium (Русский)\n- Pdnsd\n- Твердотельные накопители\n\nprofile-sync-daemon (psd) — небольшой псевдо-демон, предназначенный для переноса профилей браузеров в tmpfs (ОЗУ) и их периодической синхронизации с постоянным хранилищем (HDD/SSD). Это достигается с помощью использования rsync для поддержания синхронизации между копией в tmpfs и резервными копиями в постоянном хранилище. Кроме того, в psd реализованы некоторые функции восстановления после сбоев.\n\nЦели и преимущества psd:\n\n1. Простота в использовании\n1. Уменьшение износа физических дисков\n1. Улучшение скорости работы\n\nПрофили, кэш, и прочие пользовательские данные браузера переносятся с помощью psd в tmpfs (ОЗУ), соответственно операции ввода-вывода браузера перенаправляются в оперативную память. Таким образом, уменьшается износ физического диска, повышается отказоустойчивость и скорость работы браузера: время доступа к оперативной памяти составляет порядка наносекунд, в то время как время доступа к обычному жёсткому диску примерно в 1,000,000 раз выше и составляет порядка миллисекунд.\n\nNote: **отдельном** \n\n- Некоторые браузеры (например, Chromium и Firefox) хранят файлы кеша в отдельном от профиля каталоге. Изменение этого поведения программы не входит в задачи profile-sync-daemon. Пользователям рекомендуется обратиться к разделу Chromium tweaks#Cache in tmpfs для Chromium и к статье Firefox (Русский)/Profile on RAM (Русский) для Firefox, где описаны возможные решения.\n- Иногда в файл конфигурации по умолчанию /usr/share/psd/psd.conf вносятся обновления/изменения. Пользовательская копия $XDG_CONFIG_HOME/psd/psd.conf должна быть обновлена. В Arch Linux pacman должен уведомить пользователя о необходимости сделать это.\n- psd может замедлить вход в систему, так как он копирует кэш браузера в память.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет profile-sync-daemon.\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "При первом запуске psd создаст файл настроек $XDG_CONFIG_HOME/psd/psd.conf. Можно просто выполнить команду psd без использования службы psd.service, чтобы создать этот файл без немедленного запуска синхронизации.\n\n- Опционально включите использование overlayfs для улучшения скорости синхронизации и уменьшения количества необходимой памяти. Для этого используйте переменную USE_OVERLAYFS. Пользователю понадобятся sudo права доступа к /usr/bin/psd-overlay-helper для использования этой опции, а также ядро должно поддерживать overlayfs версии 22 или новее. Смотрите раздел #Режим overlayfs ниже, чтобы узнать подробности.\n- Опционально укажите названия веб-браузеров, профили которых необходимо перенести в ОЗУ, в массиве BROWSERS. Если в этой переменной ничего не указано, по умолчанию перенесутся все найденные профили поддерживаемых браузеров.\n- Опционально можете отключить создание резервных копий профиля (не рекомендуется) с помощью переменной USE_BACKUPS.\n- Опционально можно указать число хранимых резервных копий с помощью переменной BACKUP_LIMIT.\n\nПример: допустим, что у вас установлены браузеры Chromium, Opera и Firefox, однако вы хотите перенести профили в ОЗУ только для Chromium и Opera:\n\n```\nBROWSERS=(chromium opera)\n```\n\nНачиная с версии 5.54, есть родная поддержка overlayfs. Для её использования требуется ядро версии 3.18.0 или новее.\n\n"
    },
    {
      "title": "Поддерживаемые браузеры",
      "level": 3,
      "content": "В настоящее время поддерживаются следующие браузеры:\n\n- Chromium\n- chromium-devAUR\n- conkeror-gitAUR\n- Epiphany\n- falkon\n- Firefox (все разновидности — stable, beta и nightly)\n- google-chromeAUR\n- google-chrome-betaAUR\n- google-chrome-devAUR\n- версия Aurora от hetfig: браузер для Arch Linux\n- icecatAUR\n- Luakit\n- Opera\n- Otter Browser\n- palemoonAUR\n- Qutebrowser\n- seamonkeyAUR\n- surfAUR\n- vivaldi\n\n"
    },
    {
      "title": "Использование",
      "level": 2,
      "content": "Запустите/включите пользовательскую службу psd.service. Также есть systemd-таймер, который запускает копирование данных из памяти на диск каждый час. Таймер запускается автоматически вместе со службой psd.service, так что запускать его вручную не нужно.\n\n"
    },
    {
      "title": "Проверка конфигурации",
      "level": 3,
      "content": "Команда psd parse покажет, что именно psd будет делать, основываясь на конфигурации в $XDG_CONFIG_HOME/psd/psd.conf, а также выведет прочую полезную информацию.\n\n"
    },
    {
      "title": "Установка частоты синхронизации",
      "level": 3,
      "content": "По умолчанию таймер настроен на синхронизацию с интервалом в один час. Пользователь может легко установить другой желаемый интервал, отредактировав файл юнита. В примере ниже создаётся drop-in файл, в котором таймер установлен на синхронизацию с интервалом в 10 минут (строка с пустым значением OnUnitActiveSec используется для удаления старого значения перед добавлением нового [1]):\n\n```\n~/.config/systemd/user/psd-resync.timer.d/frequency.conf\n```\n\n```\n[Unit]\nDescription=Timer for Profile-sync-daemon - 10min\n\n[Timer]\nOnUnitActiveSec=\nOnUnitActiveSec=10min\n```\n\nСмотрите systemd.timer(5) для получения дополнительной информации о настройке таймеров.\n\n"
    },
    {
      "title": "Режим overlayfs",
      "level": 3,
      "content": "Overlayfs — это простая файловая система, которая доступна в ядре Linux с версии 3.18.0. Начиная с версии 5.54, psd может использовать overlayfs, чтобы уменьшить потребление памяти в tmpfs и ускорить операции синхронизации с диском. Особенность метода в том, что overlayfs записывает только изменённые данные, а не весь профиль. Те же функции восстановления, которые использует psd в своём режиме по умолчанию, также активны при работе в режиме overlayfs. Чтобы включить режим overlayfs, раскомментируйте строку USE_OVERLAYFS=\"yes\" в файле $XDG_CONFIG_HOME/psd/psd.conf и затем перезапустите демон.\n\nНачиная с версии psd 6.05, пользователи, желающие использовать этот режим, ДОЛЖНЫ иметь права sudo (без запроса на ввод пароля) для файла /usr/bin/psd-overlay-helper или же глобально. Следующая строка в файле /etc/sudoers предоставит пользователю эти права. Добавьте её с помощью visudo:\n\n```\nпользователь ALL=(ALL) NOPASSWD: /usr/bin/psd-overlay-helper\n```\n\nСмотрите пример в разделе #Проверка конфигурации выше, в котором показана система, использующая overlayfs для иллюстрации возможностей экономии памяти. Обратите внимание на строку \"overlayfs size\" в сравнении со строкой \"profile size\" для каждого профиля. Имейте в виду, что эти цифры будут меняться в зависимости от объема данных, записываемых в профиль, но при обычном использовании размер overlayfs всегда будет меньше размера профиля.\n\nПринцип работы overlayfs заключается в монтировании базовой копии профиля (browser-back-ovfs), доступной только для чтения, и записи новых данных поверх неё. Чтобы избежать повторной синхронизации с файловой системой, доступной только для чтения, вместо неё используется копия. Таким образом, использование overlayfs — это компромисс: более быстрое время начальной синхронизации и меньшее использование памяти по сравнению с дисковым пространством в домашнем каталоге.\n\n"
    },
    {
      "title": "Добавление памяти для размещения профилей в /run/user/xxxx",
      "level": 3,
      "content": "Стандартный способ контроля размера /run/user — это директива RuntimeDirectorySize в /etc/systemd/logind.conf (смотрите logind.conf(5) для подробностей). По умолчанию используется 10% физической памяти, но можно её увеличить. Помните, что tmpfs занимает только ту память, которая реально используется файлами; указываемое здесь число просто ограничивает максимальный размер.\n\n"
    },
    {
      "title": "Снимки",
      "level": 3,
      "content": "Если случился сбой системы — скорее всего, \"последняя целая\" резервная копия профилей браузеров всё ещё в сохранности в файловой системе. При перезапуске psd (например, при перезагрузке системы) он выполняет проверку, действительна ли символическая ссылка вашего профиля на копию в tmpfs. Если она недействительна, psd создаст снимок \"последней целой\" резервной копии, прежде чем вернуть её на место. Эта опция больше для проверки, что psd работоспособен и любая потеря данных была по причине чего-то другого.\n\nНайти снимок можно в том же каталоге, что и профиль браузера, и он будет содержать отметку даты и времени, которая соответствует времени, когда был сделан снимок. Например, для chromium это будет ~/.config/chromium-backup-crashrecovery-20130912_153310 — конечно, отметка времени у вас будет своя.\n\nЧтобы восстановить данные из снимка:\n\n- Остановите пользовательскую службу psd.service.\n- Убедитесь, что нет символической ссылки на каталог профиля браузера в tmpfs. Если есть, значит psd не был завершён корректно по другим причинам.\n- Переместите \"плохую\" копию профиля куда-нибудь (не удаляйте ничего просто так).\n- Скопируйте каталог снимка на место профиля браузера.\n\nПример для браузера Chromium:\n\n```\n$ mv ~/.config/chromium ~/.config/chromium-bad\n$ cp -a ~/.config/chromium-backup-crashrecovery-20130912_153310 ~/.config/chromium\n```\n\nТеперь вы можете запустить Chromium, который будет использовать скопированный резервный снимок. Если все в порядке, закройте браузер и перезапустите psd. На этом этапе вы можете безопасно удалить ~/.config/chromium-backup-crashrecovery-20130912_153310.\n\n"
    },
    {
      "title": "Удаление всех снимков с помощью режима чистки",
      "level": 4,
      "content": "Команда psd clean удалит ВСЕ резервные копии. Запускайте этот режим, только если вы уверены, что собранные резервные копии больше не понадобятся.\n\n"
    },
    {
      "title": "Поддержка",
      "level": 2,
      "content": "Пишите в тему на форуме (англ.) для комментариев и прочих обсуждений.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Web Upd8 - Keep Your Browser Profiles In tmpfs (RAM) For Reduced Disk Writes And Increased Performance With Profile Sync Daemon\n- Nicolas Bernaerts - Tweaks for SSD drive\n\n"
    }
  ]
}
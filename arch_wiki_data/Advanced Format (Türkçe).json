{
  "title": "Advanced Format (Türkçe)",
  "url": "https://wiki.archlinux.org/title/Advanced_Format_(T%C3%BCrk%C3%A7e)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Bir sabit disk sürücüsünün (HDD) en küçük fiziksel depolama birimi sektör'dür. Bunun katı hal sürücüleri (SSD) için karşılığı ise page'dir.[1] Depolama aygıtı bellenimi, bu fiziksel sektörleri soyutlayarak üzerinde çalışabildiğimiz mantıksal sektörlere çevirirler. Bu sektörün boyutu, diskteki en küçük adreslenebilir birimin boyutunu ifade eder.\n\nFarklı \"katman\"lar, yani aygıtın kendisi, yığılı blok aygıtı ve dosya sistemleri, hepsi aynı sektör boyutundan faydalanmalı. Eğer yapmazlarsa bellenimdeki haritalama işlemi, genelde farkedilmeyecek kadar da olsa, önlenebilir bir ek yüke sebep olur.\n\nlsblk ile mevcut fiziksel ve mantıksal sektör boyutları listelenebilir:\n\n```\n$ lsblk -td\n```\n\n```\nNAME    ALIGNMENT MIN-IO OPT-IO PHY-SEC LOG-SEC ROTA SCHED       RQ-SIZE  RA WSAME\nsda             0   4096      0    4096    4096    1 mq-deadline      64 128    0B\nnvme1n1         0   4096      0    4096    4096    0 none           1023 128    0B\nnvme0n1         0   4096      0    4096    4096    0 none           1023 128    0B\n```\n\nPHY-SEC fiziksel sektör boyutunu gösterirken LOG-SEC mantıksal sektör boyutunu gösterir.\n\nAlternatif olarak, özel olarak bir sürücünün değerleri aşağıdaki sysfs girişlerinden okunabilir:\n\n```\n$ cat /sys/class/block/sürücü/queue/physical_block_size\n$ cat /sys/class/block/sürücü/queue/logical_block_size\n```\n\nSektör boyutları ayrıca fdisk, smartctl ve hdparm çıktısında da görülebilir.\n\n"
    },
    {
      "title": "Sektör boyutunun değiştirilmesi",
      "level": 2,
      "content": "Bazı NVMe sürücüler ve \"enterprise\" SATA sabit disk sürücüleri bildirilen sektör boyutunu, standart NVMe veya ATA komutları kullanarak değiştirmeye izin verir. (NVM Command Set Specification 1.0 ve daha sonraki sürümlerinde Format NVM, ATA Command Set - 4 ve daha sonraki sürümlerinde (SET SECTOR CONFIGURATION EXT, sırasıyla). Sabit diskler için bu mantıksal sektör boyutunu fiziksel sektör boyutuyla eşitleyerek optimum performansı sağlar. NVMe katı hal sürüclerinde ise hem mantıksal hem fiziksel sektör boyutları değiştirilir.\n\nSATA katı hal sürücüleri genel olarak sektör boyutunun değiştirilmesini destekler. Buna istisna ise bildirilen fiziksel sektör boyutunu değiştirmeye izin veren, ancak mantıksal sektör boyutunu değiştirmeyi izin vermeyen bazı Intel SATA SSD'leridir.[2] Bildirilen fiziksel sektör boyutunu değiştirmek için Advanced Format#Intel'i takip edin.\n\nBir diskin sektör boyutunu değiştirmek alt düzey biçimlendirme gerektiren kompleks bir işlemdir. Buna altenatif olarak optimum performans almak için dosya sistemi oluştururken istenilen sektör boyutunu belirtebilirsiniz. #dm-crypt ve #Dosya sistemleri'e bakınız.\n\n"
    },
    {
      "title": "Advanced Format sabit disk sürücüleri",
      "level": 3,
      "content": "Bir Advanced Format sabit disk sürücüsünün sektör boyutunun değiştirilip değiştirilmediğini belirlemek için hdparm aracını kullanın:\n\n```\n# hdparm -I /dev/sdX | grep 'Sector size:'\n```\n\nSektör Yapılandırma Günlüğü birden fazla mantıksal sektör boyutu sıralayan Advanced Format sürücüleri bunun bir listesini gösterir:\n\n```\nLogical  Sector size:                   512 bytes [ Supported: 512 4096 ]\n        Physical Sector size:                  4096 bytes\n```\n\nMantıksal sektör boyutunu değiştirmeyi desteklemeyen sabit disk sürücüleri ise sadece mevcut sektör boyutunu bildirir. Örneğin bir Advanced Format 512e sürücüsü:\n\n```\nLogical  Sector size:                   512 bytes\n        Physical Sector size:                  4096 bytes\n```\n\nBu tür sürücülerde optimum performans için #dm-crypt sektör boyutunun veya #Dosya sistemleri blok boyutunun en az 4096 byte olup sürücüyle hizalandığından emin olun.\n\nBir Advanced Format 4Kn sürücüsü:\n\n```\nLogical  Sector size:                  4096 bytes\n        Physical Sector size:                  4096 bytes\n```\n\n4Kn sürücüleri zaten optimum yapılandırmaya sahiptir ve bölümlendirme ve biçimlendirmede özel bir müdaheleye ihtiyaçları yoktur. Oldukları gibi kullanılabilirler.\n\nSATA HDD'niz birden fazla mantıksal sektör boyutunu destekliyorsa ve de ATA komutu SET SECTOR CONFIGURATION EXT'ı destekliyorsa (örneğin FastFormat destekleyen Seagate sürücüleri), hdparm kullanarak mantıksal sektör boyutları arasında geçiş yapabilirsiniz. Örneğin 4096 byte'a, yani 4Kn ayarlamak için şunu çalıştırın:\n\n```\n# hdparm --set-sector-size 4096 --please-destroy-my-drive /dev/sdX\n```\n\nBundan sonra, hdparm mantıksal sektör boyutunu 4096 byte olarak bildirmeli:\n\n```\n# hdparm -I /dev/sdX | grep 'Sector size:'\n```\n\n```\nLogical  Sector size:                  4096 bytes [ Supported: 512 4096 ]\n        Physical Sector size:                  4096 bytes\n```\n\n"
    },
    {
      "title": "NVMe katı hal sürücüleri",
      "level": 3,
      "content": "Çoğu katı hal sürücüsü (SSD) fiziksel blokların genelde daha büyük (4, 8 KiB ve daha büyük) olmasına rağmen mantıksal sektör boyutu olarak 512 byte bildirir.\n\nNVMe sürücünün biçimlendirilmiş mantıksal blok adres boyutuna (FLBAS) bakmak için Identify Namespace komutunu kullanın:\n\n```\n# nvme id-ns -H /dev/nvme0n1 | grep \"Relative Performance\"\n```\n\n```\nLBA Format  0 : Metadata Size: 0   bytes - Data Size: 512 bytes - Relative Performance: 0x2 Good (in use)\nLBA Format  1 : Metadata Size: 0   bytes - Data Size: 4096 bytes - Relative Performance: 0x1 Better\n```\n\n- Metadata Size mantıksal blok adresi (LBA) başına düşen ek önveri byte sayısıdır. Bu Linux'da iyi desteklenmediğinden dolayı, 0 değerinde bir biçimin seçilmesi tavsiye edilir.\n- Relative Performance hangi biçimin nasıl performans sunacağını gösterir.\n\nsmartctl de desteklenen mantıksal blok adresi boyutlarını gösterir, ancak kullanıcı dostu açıklamalar sağlamaz. Örneğin:\n\n```\n# smartctl -c /dev/nvme0n1\n```\n\n```\n...\nSupported LBA Sizes (NSID 0x1)\nId Fmt  Data  Metadt  Rel_Perf\n 0 +     512       0         2\n 1 -    4096       0         1\n```\n\nMantıksal blok adres boyutunu değiştirmek için nvme format kullanın ve --lbaf parametresi ile istenilen değeri belirtin:\n\n```\n# nvme format --lbaf=1 /dev/nvme0n1\n```\n\n```\nYou are about to format nvme0n1, namespace 0x1.\nWARNING: Format may irrevocably delete this device's data.\nYou have 10 seconds to press Ctrl-C to cancel this operation.\n\nUse the force [--force] option to suppress this warning.\nSending format operation ... \nSuccess formatting namespace:1\n```\n\nBu devam etmeden önce sadece birkaç saniye sürmeli.\n\n"
    },
    {
      "title": "Üreticiye spesifik programlar kullanarak",
      "level": 3,
      "content": "Eğer yukardaki genel araçlar sektör boyutunu değiştirmeye izin vermezse, yine de sürücünün üreticisinden olan bir programla değiştirmek mümkün olabilir.\n\n"
    },
    {
      "title": "Seagate",
      "level": 4,
      "content": "Seagate için openseachestAUR kullanın.\n\nDoğru olanı bulmak için bütün cihazları tarayın ve bulduğunuzla ilgili bilgi alın:\n\n```\n# openSeaChest_Basics --scan\n# openSeaChest_Basics -d /dev/sdX -i\n```\n\nSürücü hakkında bilgi vermeli. Seri numarasını kontrol ettiğinizden emin olun.\n\nSürücü tarafından desteklenen mantıksal blok boyutlarını kontrol edin:\n\n```\n# openSeaChest_Format -d /dev/sdX --showSupportedFormats\n```\n\nEğer listede 4096 varsa, mantıksal sektör boyutunu şu şekilde değiştirebilirsiniz:\n\n```\n# openSeaChest_Format -d /dev/sdX --setSectorSize=4096 --confirm this-will-erase-data\n```\n\nBu işlem birkaç dakika sürecektir ve işlem sonunda sürücünüz 4K sektör boyutu kullanacaktır.\n\n"
    },
    {
      "title": "Bölüm hizası",
      "level": 2,
      "content": "Bölümlerin doğru şekilde hizalanması gereksiz okuma-düzenleme-yazma döngülerini önler. Kişisel bilgisayarlarda yaygın bir uygulama her bölümü 1 MiB (1 048 576 bytes)'lik parçalara hizalamaktır. Bu yaygın olan bütün page ve blok boyutu senaryolarını kapsar ve kullanılan bütün boyutlara bölünebilir—1 MiB, 512 KiB, 128 KiB, 4 KiB ve 512 B.\n\n- fdisk, cfdisk ve sfdisk hizalamayı otomatik olarak yapar.\n- gdisk ve cgdisk hizalamayı otomatik olarak yapar. sgdisk varsayılan olarak yalnızca bölümlerin başlangıcını hizalar. -I/--align-end seçeneğini kullanarak bölüm boyutunun/sonunun da hizalanmasını sağlayın.\n- Parted yalnızca bölümlerin başını hizalayabilir, boyutunu yani sonunu hizalamaz. Bölüm oluştururken, bölüm sonunun mebibyte ile ya da daha büyük bir IEC binary birimi halinde belirttiğinzden emin olun.\n\n- sgdisk varsayılan olarak yalnızca bölümlerin başlangıcını hizalar. -I/--align-end seçeneğini kullanarak bölüm boyutunun/sonunun da hizalanmasını sağlayın.\n\n"
    },
    {
      "title": "dm-crypt",
      "level": 2,
      "content": "Cryptsetup 2.4.0 itibariyle, luksFormat LUKS2 biçimi için otomatik olarak optimum şifreleme sektör boyutunu tespit eder.[4].\n\nAncak, bunun çalışması için cihazın varsayılan sektör boyutunu doğru bildirmesi gerekmektedir, bakınız: #Sektör boyutunun değiştirilmesi.\n\ncryptsetup luksFormat kullanıldıktan sonra, LUKS2 birimi tarafından kullanılan sektör boyutunu şu şekilde kontrol edebilirsiniz:\n\n```\n# cryptsetup luksDump device | grep sector\n```\n\nEğer varsayılan sektör boyutu yanlışsa, LUKS2 birimini 4K sektör boyutuyla oluşturulmasını zorlayabilirsiniz:\n\n```\n# cryptsetup luksFormat --sector-size=4096 device\n```\n\nBu komut istenilen boyut cihazınkiyle uyuşmazsa hata verir:\n\n```\n# cryptsetup luksFormat --sector-size 4096 device\n(...)\nVerify passphrase: \nDevice size is not aligned to requested sector size.\n```\n\nAygıtı yanlış sektör boyutuyla şifrelediyseniz aygıt şu komutla yeniden şifrelenebilir:\n\n```\n# cryptsetup reencrypt --sector-size=4096 device\n```\n\n"
    },
    {
      "title": "Dosya sistemleri",
      "level": 2,
      "content": "mkfs.bcachefs, mkfs.btrfs(8), mkfs.jfs(8), mkfs.nilfs2(8), mkfs.reiserfs(8) ve mkswap(8) varsayılan olarak 4096 byte sektörler kullanır.\n\nmkfs.ext4(8) varsayılan olarak 512 MiB'den küçük dosya sistemlerinde 1024 byte, 512 MiB ve daha büyük dosya sistemlerinde 4096 byte sektörler kullanır.\n\nmkfs.xfs(8) varsayılan olarak 512 byte sektörler kullanır ancak 512e ve 4Kn diskleri için 4096 kullanır.\n\nmkfs.f2fs(8), mkfs.fat(8), mkfs.ntfs(8) ve mkfs.udf(8) cihazın mantıksal sektör boyutunu kullanır. Yani 512e cihazlarda 512 byte, 4Kn disklerde 4096 byte sektör kullanır.\n\nzpool-create(8) (from ZFS[broken link: invalid section]) varsayılan olarak 512 (2⁹) byte sektör kullanır, sektör boyutu advanced format disklerde -o ashift=12 (2¹², 4096 bytes) seçeneği ile pool oluşturulurken belirtilmelidir.\n\nEğer depolama aygıtı doğru sektör boyutunu bildirmiyorsa fiziksel sektör boyutunu kendiniz belirterek uygun şekilde biçimlendirebilirsiniz.\n\nÖzellikle bellenim tarafından yönetilen shingled magnetic recording (SMR) sürücüleri, fiziksel sektör boyutu 4096 byte iken 512 byte'lık mantıksal sektör boyutu kullanıldığında bundan ciddi ve negatif şekilde etkilenir. Bu sürücüler boştayken farklı performans yazma bölgelerine sahiptir ve yeniden-haritalandırma nadiren gerçekleşir. Ancak yük altında (örneğin RAID resilver'lama, yedekleme, çok fazla küçük boyutta dosya yazma, rsync vb.) farklı bir dosya sistemi sektör boyutu yazma hızını tek haneli megabyte/saniye'ye kadar indirebilir, yüksek performanslı yazma alanları bittiğinden ve çeviri katmanı bu küçük parçalarda fazla çalıştığından dolayı.\n\n4096 byte sektör boyutunu kendiniz belirtmenin birkaç örneği:\n\n- ext4: # mkfs.ext4 -b 4096 /dev/device\n- XFS: # mkfs.xfs -s size=4096 /dev/device\n- FAT: # mkfs.fat -S 4096 /dev/device\n- NTFS-3G: # mkfs.ntfs -Q -s 4096 /dev/device\n- UDF: # mkfs.udf -b 4096 /dev/device\n- ZFS[broken link: invalid section]: # zpool create -o ashift=12 poolname raidz device0 … deviceN\n\n```\n# mkfs.ext4 -b 4096 /dev/device\n```\n\n```\n# mkfs.xfs -s size=4096 /dev/device\n```\n\n```\n# mkfs.fat -S 4096 /dev/device\n```\n\n```\n# mkfs.ntfs -Q -s 4096 /dev/device\n```\n\n```\n# mkfs.udf -b 4096 /dev/device\n```\n\n```\n# zpool create -o ashift=12 poolname raidz device0 … deviceN\n```\n\n"
    },
    {
      "title": "Ayrıca bakınız",
      "level": 2,
      "content": "- Western Digital’s Advanced Format: The 4K Sector Transition Begins\n- White paper entitled \"Advanced Format Technology.\"\n- Bir HDD'nin hizalamasındaki hata düşük okuma yazma performansına yol açar. Spesifik örnekleri için: [5]\n\n"
    }
  ]
}
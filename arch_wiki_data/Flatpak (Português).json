{
  "title": "Flatpak (Português)",
  "url": "https://wiki.archlinux.org/title/Flatpak_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Snapd\n- bubblewrap\n\nDo README do projeto: \"Flatpak é um sistema para construção, distribuição e execução de aplicações desktop sandboxed no Linux.\"\n\nDe flatpak(1):\n\n"
    },
    {
      "title": "Instalação",
      "level": 2,
      "content": "Instale o pacote flatpak.\n\n"
    },
    {
      "title": "Adicionar um repositório",
      "level": 3,
      "content": "Para adicionar um repositório flatpak remoto faça:\n\n```\n$ flatpak remote-add nome localização\n```\n\nonde nome é o nome do novo remoto e localização é o caminho ou a URL do repositório.\n\nPor exemplo, para adicionar o repositório oficial Flathub:\n\n```\n$ flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo\n```\n\n"
    },
    {
      "title": "Deletar repositórios",
      "level": 3,
      "content": "Para deletar um repositório flatpak remoto faça:\n\n```\n$ flatpak remote-delete nome\n```\n\nonde nome é o nome do repositório remoto a ser deletado.\n\n"
    },
    {
      "title": "Listar repositórios",
      "level": 3,
      "content": "Para listar todos os repositórios adicionados faça:\n\n```\n$ flatpak remotes\n```\n\n"
    },
    {
      "title": "Procurar por um runtime ou aplicação",
      "level": 3,
      "content": "Antes de estar pronto para procurar por um runtime ou aplicação em um novo repositório remoto adicionado, nós precisamos recuperar os dados appstream. Para isso:\n\n```\n$ flatpak update\n```\n\n```\nProcurando por atualizações...\nAtualizando dados appstream para remote nome\n```\n\nEntão nós podemos proceder para procurar por um pacote com flatpak search nomedopacote, e.g. para procurar pelo pacote libreoffice com o flathub remoto configurado:\n\n```\n$ flatpak search libreoffice\n```\n\n```\nID de aplicativo              Versão Ramo Remotos Descrição                       \norg.libreoffice.LibreOffice         stable flathub The LibreOffice productivity suite\n```\n\n"
    },
    {
      "title": "Listar todos os runtime ou aplicações disponíveis",
      "level": 3,
      "content": "Para listar todos os runtimes e aplicações disponíveis em um repositório remoto nomeado como remoto faça:\n\n```\n$ flatpak remote-ls remoto\n```\n\n"
    },
    {
      "title": "Instalar um runtine ou aplicação",
      "level": 3,
      "content": "Para instalar umruntime ou aplicação faça:\n\n```\n$ flatpak install remoto nome\n```\n\nonde remoto é o nome do repositório remoto e nome é o nome da aplicação ou runtime a ser instalado.\n\n"
    },
    {
      "title": "Listar os runtimes e aplicações instalados",
      "level": 3,
      "content": "Para listar os runtimes e aplicações instaladas faça:\n\n```\n$ flatpak list\n```\n\n"
    },
    {
      "title": "Executar aplicações",
      "level": 3,
      "content": "Binários estão disponíveis em /var/lib/flatpak/exports/bin, o qual pode ser adicionado ao seu caminho:\n\n```\n$ PATH=\"/var/lib/flatpak/exports/bin:$PATH\"\n$ org.libreoffice.LibreOffice --calc\n```\n\nAplicações Flatpak também podem ser executadas com a linha de comando:\n\n```\n$ flatpak run nome\n```\n\n"
    },
    {
      "title": "Atualizar um runtime ou aplicação",
      "level": 3,
      "content": "Para atualizar um runtime ou aplicação nomeada como nome faça:\n\n```\n$ flatpak update name\n```\n\n"
    },
    {
      "title": "Desinstalar um runtime ou aplicação",
      "level": 3,
      "content": "Para desinstalar um runtime ou aplicação nomeado(a) como nome faça:\n\n```\n$ flatpak uninstall name\n```\n\n"
    },
    {
      "title": "Adicionando arquivos .desktop Flatpak ao seu menu",
      "level": 3,
      "content": "Flatpak espera que o gerenciador de janelas respeite a variável de ambiente XDG_DATA_DIRS para descobrir aplicações. Isso pode requerer que a sessão seja reiniciada ou o lançador pode não suportar isso. Nesse caso, onde você pode editar a lista de diretórios escaneados, adicionar isso a ela:\n\n```\n~/.local/share/flatpak/exports/share/applications\n/var/lib/flatpak/exports/share/applications\n```\n\nIsso é sabidamente necessário no Awesome.\n\n"
    },
    {
      "title": "Vendo as permissões sandbox da aplicação",
      "level": 3,
      "content": "Aplicações Flatpak vêm com regras sandbox pré-definidas que definem quais os recursos e os caminhos do sistema de arquivos a aplicação tem permissão para acessar. Para ver as permissões de uma aplicação específica faça:\n\n```\n$ flatpak info --show-permissions name\n```\n\nA referência para os nomes das permissões sandbox podem ser encontradas na documentação oficial do Flatpak.[link inativo 2024-07-30 ⓘ]\n\n"
    },
    {
      "title": "Sobrescrevendo permissões sandbox de aplicações",
      "level": 3,
      "content": "Se você acha que as permissões pré-definidas da aplicação é muito permissiva ou muito restritiva, você pode mudar para qualquer uma que quiser usando o comando flatpak override. Por exemplo:\n\n```\n$ flatpak override --nofilesystem=home name\n```\n\nIsso irá prevenir que a aplicação acesse a sua pasta home.\n\nTodo tipo de permissão como dispositivo, sistema de arquivo ou soquete tem um uma linha de comando que permite aquela permissão em particular e uma opção separada que nega. Por exemplo, no caso de acesso ao dispositivo --device=device_nome permite o acesso, --no-device=device_nome nega a permissão para acessar o dispositivo.\n\nPara todos os tipos de comandos de permissão consulte a página de manual: flatpak-override(1).\n\nSubstituições de permissão podem ser redefinidas para o padrão com o comando:\n\n```\n$ flatpak override --reset nome\n```\n\nFlatseal é um gerenciador de permissão por interface gráfica que oferece uma which offer simple point-and-click permissions operations.\n\n"
    },
    {
      "title": "Criar uma base de runtime customizada",
      "level": 2,
      "content": "- Você pode querer usar uma conta não confiável e desprivilegiadas para construir software não confiável porque o software não é sandboxed durante a criação do aplicativo e do runtime.\n- Quando distribuindo pacotes para outros, você pode ser legalmente obrigado a fornecer o código fonte de alguns dos softwares empacotados mediante solicitação. Vocẽ ode querer usar ABS para construir tais pacotes a partir da fonte.\n\nVocê pode criar uma runtime base e uma SDK base customizada com base no Arch para Flatpak usando o pacman. Você pode, então, usá-las para criação e empacotamento de aplicações. Isso é uma alternativa para uso pessoal para o padrão org.freedesktop.BasePlatform e org.freedesktop.BaseSdk runtimes.\n\nEm adição ao flatpak, você precisa ter instalado fakeroot e fakechroot, para suportar o pacman hooks.\n\nPrimeiro, comece criando um diretório para criação do runtime e, possivelmente, aplicações.\n\n```\n$ mkdir minhapastadecriacaoflatpak\n$ cd minhapastadecriacaoflatpak\n```\n\nVocê pode, então, preparar o diretório para a criação da plataforma base do runtime. Os arquivos do subdiretório irão conter o que depois será o diretório /usr no sandbox. Portanto, você precisará criar links simbólicos para o padrão /etc/share etc. do Arch ainda possa ser acessado no caminho usual.\n\n```\n$ mkdir -p meuruntime/files/var/lib/pacman\n$ touch meuruntime/files/.ref\n$ ln -s /usr/usr/share meuruntime/files/share\n$ ln -s /usr/usr/include meuruntime/files/include\n$ ln -s /usr/usr/local meuruntime/files/local\n```\n\nCertifique-se que as fontes disponíveis pelo seu sistema operacional host para o runtime do Arch:\n\n```\n$ mkdir -p meuruntime/files/usr/share/fonts\n$ ln -s /run/host/fonts meuruntime/files/usr/share/fonts/flatpakhostfonts\n```\n\nVocê precisa e talvez queira adaptar o seu pacman.conf antes de instalar pacotes no runtime. Copie o /etc/pacman.conf para o seu diretório de criação e então faça as seguintes mudanças:\n\n- Remova a opção CheckSpace e então o pacman não reclamará sobre erros ao encontrar a raiz do sistema de arquivo para checar o espaço de disco.\n- Remova quaisquer repositórios customizados indesejados e as configurações IgnorePkg, IgnoreGroup, NoUpgrade e NoExtract, que são necessárias somente para o sistema hospedeiro.\n\nAgora instale os pacotes para o runtime.\n\n```\n$ fakechroot fakeroot pacman -Syu --root meuruntime/files --dbpath meuruntime/files/var/lib/pacman --config pacman.conf base\n$ mv pacman.conf meuruntime/files/etc/pacman.conf\n```\n\nConfigure os locales a serem usados editando meuruntime/files/etc/locale.gen. Então, gere novamente os locales do runtime.\n\n```\n$ fakechroot chroot meuruntime/files locale-gen\n```\n\nA SDK base pode ser criada a partir da base runtime com adição de aplicações necessárias para a criação de pacotes e executar o pacman.\n\n```\n$ cp -r meuruntime mysdk\n$ fakechroot fakeroot pacman -S --root mysdk/files --dbpath mysdk/files/var/lib/pacman --config meusdk/files/etc/pacman.conf base-devel fakeroot fakechroot --needed\n```\n\nInsira metadados sobre runtime e SDK.\n\n```\nmeuruntime/metadados\n```\n\n```\n[Runtime]\nname=org.meudominio.BasePlatform\nruntime=org.meudominio.BasePlatform/x86_64/2016-06-26\nsdk=org.meudominio.BaseSdk/x86_64/2016-06-26\n```\n\n```\nmeusdk/metadados\n```\n\n```\n[Runtime]\nname=org.meudominio.BaseSdk\nruntime=org.meudominio.BasePlatform/x86_64/2016-06-26\nsdk=org.meudominio.BaseSdk/x86_64/2016-06-26\n```\n\nAdicione as bases runtime e SDK para um repositório local no diretório atual. Você pode querer dar para eles mensagens commit apropriadas como, por exemplo, “Minha runtime base Arch” e “Minha SDK base Arch”.\n\n```\n$ ostree init --mode archive-z2 --repo=.\n$ EDITOR=\"nano -w\" ostree commit -b runtime/org.meudominio.BasePlatform/x86_64/2016-06-26 --tree=dir=meuruntime\n$ EDITOR=\"nano -w\" ostree commit -b runtime/org.meudominio.BaseSdk/x86_64/2016-06-26 --tree=dir=meusdk\n$ ostree summary -u\n```\n\nInstale o runtime e o SDK.\n\n```\n$ flatpak remote-add --user --no-gpg-verify myarchos file://$(pwd)\n$ flatpak install --user myarchos org.meudominio.BasePlatform 2016-06-26\n$ flatpak install --user myarchos org.meudominio.BaseSdk 2016-06-26\n```\n\n"
    },
    {
      "title": "Criar aplicativos com o pacman",
      "level": 3,
      "content": "Como uma alternativa para a criação de aplicação da forma comum, nós podemos usar o pacman para criar uma versão em contêiner dos pacotes comuns do Arch. Note que /usr é somente-leitura quando criando aplicativos, então nós não podemos usar os pacotes do Arch quando da criação de um app. Para criar um aplicativo real com o pacman, nós podemos também:\n\n- Usar o pacman para criar um runtime contendo todas as dependências\n- e compilar os aplicativos como de costume ou talvez usando o pacman para criar um PKGBUILD customizado e adaptado ao Flatpak, o qual usa --prefix=/app para o script configure,\n\nou nós podemos\n\n- usar o pacman para criar o runtime contendo o aplicativo instalado com o pacman\n- e criar um aplicativo dummy para executá-lo.\n\nPor último, primeiro crie um runtime usando o pacman como esse para o gedit. O runtime é primeiramente inicializado e preparado para uso com o pacman.\n\n```\n$ flatpak build-init -w geditruntime org.meudominio.geditruntime org.meudominio.BaseSdk org.meudominio.BasePlatform 2016-06-26\n$ flatpak build geditruntime sed -i \"s/^#Server/Server/g\" /etc/pacman.d/mirrorlist\n$ flatpak build geditruntime ln -s /usr/var/lib /var/lib\n$ flatpak build geditruntime fakeroot pacman-key --init\n$ flatpak build geditruntime fakeroot pacman-key --populate archlinux\n```\n\nEntão o pacote está instalado. A conexão da rede hospedeira deve estar disponível para o pacman.\n\n```\n$ flatpak build --share=network geditruntime fakechroot fakeroot pacman --root /usr -S gedit\n```\n\nVocê pode testar a aplicação antes de finalizar o runtime (sem o sandboxing apropriado).\n\n```\n$ flatpak build --socket=x11 geditruntime gedit\n```\n\nAgora termine criando o runtime e exporte-o para um novo repositório local. As chaves GnuPG do pacman têm permissões que podem interferir e precisam ser removidas primeiro.\n\n```\n$ flatpak build geditruntime rm -r /etc/pacman.d/gnupg\n$ flatpak build-finish geditruntime\n$ sed -i \"s/\\[Application\\]/\\[Runtime\\]/;s/runtime=org.meudominio.BasePlatform/runtime=org.meudominio.geditruntime/\" geditruntime/metadata\n$ flatpak build-export -r geditrepo geditruntime\n```\n\nEntão crie o aplicativo dummy.\n\n```\n$ flatpak build-init geditapp org.gnome.gedit org.meudominio.BaseSdk org.meudominio.geditruntime\n```\n\nAgora termine criando o aplicativo dummy. Você pode ajustar as permissões de acesso quando sandboxed dando opções adicionais ao terminar de criar. Para possíveis opções veja a documentação do Flatpak e os arquivos de manifesto do GNOME. Alternativamente, adapte geditapp/metadata para as suas necessidades após terminar de criar, mas antes de exportar. Quando os arquivos de metadados estiver concluído, exporte o app para o repositório.\n\n```\n$ flatpak build-finish geditapp --socket=x11 [possivelmente outras opções] --command=gedit\n$ flatpak build-export geditrepo geditapp\n```\n\nInstale-o junto com o runtime.\n\n```\n$ flatpak --user remote-add --no-gpg-verify geditrepo geditrepo\n$ flatpak install --user geditrepo org.meudominio.geditruntime\n$ flatpak install --user geditrepo org.gnome.gedit\n$ flatpak run org.gnome.gedit\n```\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- Site oficial\n- Wiki oficial no GitHub\n- Página no Wikipédia\n- SandboxedApps no GNOME Wiki\n- Runtime e aplicativos de teste do KDE\n\n"
    }
  ]
}
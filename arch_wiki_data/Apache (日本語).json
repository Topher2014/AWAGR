{
  "title": "Apache (日本語)",
  "url": "https://wiki.archlinux.org/title/Apache_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- PHP\n- MySQL\n- PhpMyAdmin\n- Adminer\n- Xampp\n- mod_perl\n\nApache HTTP Server、略して Apache は Apache Software Foundation によって開発されている、人気のウェブサーバーです。\n\nApache は PHP などのスクリプト言語や MySQL などのデータベースと一緒に使われることがほとんどです。この組み合わせは LAMP (Linux, Apache, MySQL, PHP) と呼ばれています。この記事では Apache を設定する方法と PHP や MySQL と統合する方法を説明しています。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 設定 2.1 高度なオプション 2.2 ユーザーディレクトリ 2.3 TLS/SSL 2.4 バーチャルホスト 2.4.1 多数のバーチャルホストの管理\n- 3 拡張 3.1 PHP 3.1.1 libphp を使う 3.1.2 apache2-mpm-worker と mod_fcgid を使う 3.1.3 php-fpm と mod_proxy_fcgi を使う 3.1.4 PHP が動作するかテストする 3.2 HTTP2\n- 4 トラブルシューティング 4.1 Apache の状態とログ 4.2 Error: PID file /run/httpd/httpd.pid not readable (yet?) after start 4.3 /run/httpd が起動時に作成されない 4.4 Apache is running a threaded MPM, but your PHP Module is not compiled to be threadsafe 4.5 AH00534: httpd: Configuration error: No MPM loaded. 4.6 AH00072: make_sock: could not bind to address 4.7 AH01071: Got error 'Primary script unknown' 4.8 php.ini の max_execution_time を変更しても反映されない 4.9 PHP-FPM: エラーが仮想ホストごとに個別にログに記録されない\n- 5 参照\n\n- 2.1 高度なオプション\n- 2.2 ユーザーディレクトリ\n- 2.3 TLS/SSL\n- 2.4 バーチャルホスト 2.4.1 多数のバーチャルホストの管理\n\n- 2.4.1 多数のバーチャルホストの管理\n\n- 3.1 PHP 3.1.1 libphp を使う 3.1.2 apache2-mpm-worker と mod_fcgid を使う 3.1.3 php-fpm と mod_proxy_fcgi を使う 3.1.4 PHP が動作するかテストする\n- 3.2 HTTP2\n\n- 3.1.1 libphp を使う\n- 3.1.2 apache2-mpm-worker と mod_fcgid を使う\n- 3.1.3 php-fpm と mod_proxy_fcgi を使う\n- 3.1.4 PHP が動作するかテストする\n\n- 4.1 Apache の状態とログ\n- 4.2 Error: PID file /run/httpd/httpd.pid not readable (yet?) after start\n- 4.3 /run/httpd が起動時に作成されない\n- 4.4 Apache is running a threaded MPM, but your PHP Module is not compiled to be threadsafe\n- 4.5 AH00534: httpd: Configuration error: No MPM loaded.\n- 4.6 AH00072: make_sock: could not bind to address\n- 4.7 AH01071: Got error 'Primary script unknown'\n- 4.8 php.ini の max_execution_time を変更しても反映されない\n- 4.9 PHP-FPM: エラーが仮想ホストごとに個別にログに記録されない\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "公式リポジトリから apache をインストールしてください。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "Apache の設定ファイルは /etc/httpd/conf にあります。メインの設定ファイルは /etc/httpd/conf/httpd.conf で、他の様々な設定ファイルも含まれています。シンプルなセットアップであればデフォルトの設定で問題ありません。デフォルトでは、/srv/http ディレクトリがウェブサイトに訪れた人に見れるようになっています。\n\nApache を起動するには、systemd を使って httpd.service を起動してください。\n\nそれで Apache が実行されます。ウェブブラウザで http://localhost/ を開いて確認できます。シンプルなインデックスページが表示されるはずです。\n\n任意の設定については次のセクションを見て下さい。\n\n"
    },
    {
      "title": "高度なオプション",
      "level": 3,
      "content": "以下のオプションは /etc/httpd/conf/httpd.conf で設定できます:\n\n```\nUser http\n```\n\n```\nListen 80\n```\n\n```\nServerAdmin you@example.com\n```\n\n```\nDocumentRoot \"/srv/http\"\n```\n\n```\nAllowOverride None\n```\n\n/etc/httpd/conf/extra/httpd-default.conf では以下の設定が使えます:\n\nサーバーの署名を表示しないようにするには:\n\n```\nServerSignature Off\n```\n\nApache や PHP のバージョンなどのサーバー情報を表示しないようにするには:\n\n```\nServerTokens Prod\n```\n\n"
    },
    {
      "title": "ユーザーディレクトリ",
      "level": 3,
      "content": "デフォルトではユーザーディレクトリは http://localhost/~yourusername/ から見れるようになっており ~/public_html の中身が表示されます (これは /etc/httpd/conf/extra/httpd-userdir.conf で変更可能です)。\n\nウェブ上でユーザーディレクトリが見れないようにしたい場合は、/etc/httpd/conf/httpd.conf の以下の行をコメントアウトしてください:\n\n```\nInclude conf/extra/httpd-userdir.conf\n```\n\nApache が取得できるようにホームディレクトリのパーミッションが正しく設定されているか確認する必要があります。ホームディレクトリと ~/public_html/ は他者 (\"rest of the world\") にも実行可能でなければなりません。以下のコマンドでパーミッションを変更できます:\n\n```\n$ chmod o+x ~\n$ chmod o+x ~/public_html\n$ chmod -R o+r ~/public_html\n```\n\n変更を適用するために httpd.service を再起動して下さい。Umask#マスクの値を設定も参照。\n\n"
    },
    {
      "title": "TLS/SSL",
      "level": 3,
      "content": "TLS/SSL を使うには、openssl をインストールする必要があります。\n\n/etc/httpd/conf/httpd.conf の以下の3行をアンコメントしてください:\n\n```\nLoadModule ssl_module modules/mod_ssl.so\nLoadModule socache_shmcb_module modules/mod_socache_shmcb.so\nInclude conf/extra/httpd-ssl.conf\n```\n\n自己署名証明書を作成:\n\n```\n# cd /etc/httpd/conf\n# openssl req -new -x509 -nodes -newkey rsa:4096 -keyout server.key -out server.crt -days 1095\n# chmod 400 server.key\n# chmod 444 server.crt\n```\n\n/etc/httpd/conf/extra/httpd-ssl.conf の SSLCertificateFile と SSLCertificateKeyFile 行で作成した鍵と証明書を指定してください。\n\nCSR を作成する必要がある場合、上記のコマンドを以下のように変えてください:\n\n```\n# cd /etc/httpd/conf\n# openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:4096 -out server.key\n# chmod 400 server.key\n# openssl req -new -sha256 -key server.key -out server.csr\n# openssl x509 -req -days 1095 -in server.csr -signkey server.key -out server.crt\n```\n\nhttpd.service を再起動して変更を適用してください。\n\n"
    },
    {
      "title": "バーチャルホスト",
      "level": 3,
      "content": "複数のホストを使いたい場合は、/etc/httpd/conf/httpd.conf の次の行をアンコメントしてください:\n\n```\nInclude conf/extra/httpd-vhosts.conf\n```\n\n/etc/httpd/conf/extra/httpd-vhosts.conf でバーチャルホストを設定します。デフォルトのファイルには初めて設定するときに役立つ詳細な説明の入ったサンプルが含まれています。\n\nローカルマシンでバーチャルホストをテストするには、バーチャルネームを /etc/hosts ファイルに追加します:\n\n```\n127.0.0.1 domainname1.dom \n127.0.0.1 domainname2.dom\n```\n\nhttpd.service を再起動して変更を適用してください。\n\n"
    },
    {
      "title": "多数のバーチャルホストの管理",
      "level": 4,
      "content": "莫大なバーチャルホストを使う場合、簡単に有効化・無効化できるようにすると便利です。バーチャルホストごとに設定ファイルを作成してそれら全てを一つのフォルダに保存するのが推奨されています、例: /etc/httpd/conf/vhosts\n\nまずフォルダを作成:\n\n```\n# mkdir /etc/httpd/conf/vhosts\n```\n\n次にフォルダに個々の設定ファイルを配置:\n\n```\n# nano /etc/httpd/conf/vhosts/domainname1.dom\n# nano /etc/httpd/conf/vhosts/domainname2.dom\n...\n```\n\n最後に、/etc/httpd/conf/httpd.conf で設定を Include:\n\n```\n#Enabled Vhosts:\nInclude conf/vhosts/domainname1.dom\nInclude conf/vhosts/domainname2.dom\n```\n\n行をコメント・アンコメントすることでバーチャルホストを有効化・無効化することができます。\n\n基本的な vhost ファイルは以下のようになります:\n\n```\n/etc/httpd/conf/vhosts/domainname1.dom\n```\n\n```\n<VirtualHost domainname1.dom:80>\n    ServerAdmin webmaster@domainname1.dom\n    DocumentRoot \"/home/user/http/domainname1.dom\"\n    ServerName domainname1.dom\n    ServerAlias domainname1.dom\n    ErrorLog \"/var/log/httpd/domainname1.dom-error_log\"\n    CustomLog \"/var/log/httpd/domainname1.dom-access_log\" common\n\n    <Directory \"/home/user/http/domainname1.dom\">\n        Require all granted\n    </Directory>\n</VirtualHost>\n\n<VirtualHost domainname1.dom:443>\n    ServerAdmin webmaster@domainname1.dom\n    DocumentRoot \"/home/user/http/domainname1.dom\"\n    ServerName domainname1.dom:443\n    ServerAlias domainname1.dom:443\n    ErrorLog \"/var/log/httpd/domainname1.dom-error_log\"\n    CustomLog \"/var/log/httpd/domainname1.dom-access_log\" common\n\n    <Directory \"/home/user/http/domainname1.dom\">\n        Require all granted\n    </Directory>\n    \n    SSLEngine on\n    SSLCertificateFile \"/etc/httpd/conf/server.crt\"\n    SSLCertificateKeyFile \"/etc/httpd/conf/server.key\"\n</VirtualHost>\n```\n\n"
    },
    {
      "title": "PHP",
      "level": 3,
      "content": "まず PHP をインストール して実行します、次に以下の 3 つのサブセクションのいずれかに従ってください。最後に、最後のサブセクションの説明に従ってインストールをテストします。\n\n"
    },
    {
      "title": "libphp を使う",
      "level": 4,
      "content": "この方法はおそらく最も簡単ですが、スケーラビリティが最も低く、軽いリクエスト負荷に適しています。また、mpm モジュールを変更する必要があるため、他の拡張機能で問題が発生する可能性があります (たとえば、#HTTP/2 と互換性がありません)\n\nphp-apache を インストール してください。\n\n/etc/httpd/conf/httpd.conf の以下の行をコメントアウトしてください:\n\n```\n#LoadModule mpm_event_module modules/mod_mpm_event.so\n```\n\nそして次の行をアンコメントしてください:\n\n```\nLoadModule mpm_prefork_module modules/mod_mpm_prefork.so\n```\n\n```\nApache is running a threaded MPM, but your PHP Module is not compiled to be threadsafe.  You need to recompile PHP.\nAH00013: Pre-configuration failed\nhttpd.service: control process exited, code=exited status=1\n```\n\nPHP を有効にするには、以下の行を /etc/httpd/conf/httpd.conf に追加してください:\n\n- 次の行を LoadModule リストの LoadModule dir_module modules/mod_dir.so の後のどこかに記述:\n\n```\nLoadModule php_module modules/libphp.so\nAddHandler php-script .php\n```\n\n- 次の行を Include リストの最後に記述:\n\n```\nInclude conf/extra/php_module.conf\n```\n\nhttpd.service を 再起動 して下さい。\n\n"
    },
    {
      "title": "apache2-mpm-worker と mod_fcgid を使う",
      "level": 4,
      "content": "mod_fcgid と php-cgi パッケージをインストールしてください。\n\n必要なディレクトリと PHP ラッパーのシンボリックリンクを作成:\n\n```\n# mkdir /srv/http/fcgid-bin\n# ln -s /usr/bin/php-cgi /srv/http/fcgid-bin/php-fcgid-wrapper\n```\n\n/etc/conf.d/apache の以下の行をアンコメント:\n\n```\nHTTPD=/usr/bin/httpd.worker\n```\n\n以下の内容で /etc/httpd/conf/extra/php-fcgid.conf を作成:\n\n```\n/etc/httpd/conf/extra/php-fcgid.conf\n```\n\n```\n# Required modules: fcgid_module\n\n<IfModule fcgid_module>\n    AddHandler php-fcgid .php\n    AddType application/x-httpd-php .php\n    Action php-fcgid /fcgid-bin/php-fcgid-wrapper\n    ScriptAlias /fcgid-bin/ /srv/http/fcgid-bin/\n    SocketPath /var/run/httpd/fcgidsock\n    SharememPath /var/run/httpd/fcgid_shm\n        # If you don't allow bigger requests many applications may fail (such as WordPress login)\n        FcgidMaxRequestLen 536870912\n        # Path to php.ini – defaults to /etc/phpX/cgi\n        DefaultInitEnv PHPRC=/etc/php/\n        # Number of PHP childs that will be launched. Leave undefined to let PHP decide.\n        #DefaultInitEnv PHP_FCGI_CHILDREN 3\n        # Maximum requests before a process is stopped and a new one is launched\n        #DefaultInitEnv PHP_FCGI_MAX_REQUESTS 5000\n        <Location /fcgid-bin/>\n        SetHandler fcgid-script\n        Options +ExecCGI\n    </Location>\n</IfModule>\n```\n\n/etc/httpd/conf/httpd.conf を編集します:\n\n- actions モジュールの読み込みのコメントを解除します: LoadModule events_module modules/mod_actions.so\n- (依存する) unixd モジュールのロードの 後 に FCGID モジュールをロードします。これを <IfModule unixd_module> ブロック内に配置することもできます: LoadModule fcgid_module modules /mod_fcgid.so\n- MPM 設定のインクルードがコメント解除されていることを確認します (このファイルのデフォルトでインストールされたバージョンではコメントが解除されています): Include conf/extra/httpd-mpm.conf\n- 新しい FCGID 設定のインクルードを追加します: Include conf/extra/php-fcgid.conf\n\n```\nLoadModule events_module modules/mod_actions.so\n```\n\n```\nLoadModule fcgid_module modules /mod_fcgid.so\n```\n\n```\nInclude conf/extra/httpd-mpm.conf\n```\n\n```\nInclude conf/extra/php-fcgid.conf\n```\n\nhttpd.service を 再起動 してください。\n\n"
    },
    {
      "title": "php-fpm と mod_proxy_fcgi を使う",
      "level": 4,
      "content": "```\nProxyPassMatch ^/(.*\\.php(/.*)?)$ unix:/run/php-fpm/php-fpm.sock|fcgi://localhost/srv/http/$1\n```\n\nphp-fpm をインストールしてください。\n\n以下の内容で /etc/httpd/conf/extra/php-fpm.conf を作成:\n\n```\n/etc/httpd/conf/extra/php-fpm.conf\n```\n\n```\n<FilesMatch \\.php$>\n    SetHandler \"proxy:unix:/run/php-fpm/php-fpm.sock|fcgi://localhost/\"\n</FilesMatch>\n<Proxy \"fcgi://localhost/\" enablereuse=on max=10>\n</Proxy>\n<IfModule dir_module>\n    DirectoryIndex index.php index.html\n</IfModule>\n```\n\n/etc/httpd/conf/httpd.conf の最後に作成したファイルを追加してください:\n\n```\nInclude conf/extra/php-fpm.conf\n```\n\nPHP-FPM の設定は /etc/php/php-fpm.d/www.conf で行えます。特に変えなくても問題なく動作するはずです。\n\nhttpd.conf に以下の行を追加している場合、すでに必要ないので削除してかまいません:\n\n```\nLoadModule php7_module modules/libphp7.so\nInclude conf/extra/php7_module.conf\n```\n\nhttpd.service と php-fpm.service を再起動してください。\n\n"
    },
    {
      "title": "PHP が動作するかテストする",
      "level": 4,
      "content": "PHP が正しく設定されたかどうかテストするには: Apache の DocumentRoot ディレクトリ (例: /srv/http/ または ~/public_html) に以下の内容で test.php という名前のファイルを作成します:\n\n```\n<?php phpinfo(); ?>\n```\n\n動作するか確かめるために次のページを見て下さい: http://localhost/test.php もしくは http://localhost/~myname/test.php\n\n"
    },
    {
      "title": "HTTP2",
      "level": 3,
      "content": "- Apache は暗号化されていない HTTP/2 over TCP (h2c) をサポートしていますが、一般的なブラウザではサポートされていません [2] したがって、後者で使用するには、最初に #TLS を有効にする必要があります。\n- サポートしているクライアントが HTTP/1.1 ではなく HTTP/2 を使用しておらず、#TLS のセットアップに Mozilla の設定ジェネレーター (以下の Protocols 行がすでに含まれています) が使用されている場合は、後者の出力の後に httpd-ssl.conf を含めてみてください。\n- テスト方法には、curl -sI https://your.website または http インジケーター を使用する方法があります (Chrome ベースのブラウザと Firefox ベースのブラウザの両方をサポート)\n\nHTTP/2 over TLS サポートを有効にするには、httpd.conf 内の次の行のコメントを解除します:\n\n```\nLoadModule http2_module modules/mod_http2.so\n```\n\nそして、次の行を追加します:\n\n```\nProtocols h2 http/1.1\n```\n\nデバッグするには、サーバー全体ではなくモジュールのみを debug または info に設定します:\n\n```\n<IfModule http2_module>\n    LogLevel http2:info\n</IfModule>\n```\n\n追加の HTTP/2 機能設定を含む詳細については、mod_http2 ドキュメントを参照してください。\n\n"
    },
    {
      "title": "Apache の状態とログ",
      "level": 3,
      "content": "Apache デーモンの状態を表示: systemctl status httpd\n\nApache のログがある場所は: /var/log/httpd/\n\n"
    },
    {
      "title": "Error: PID file /run/httpd/httpd.pid not readable (yet?) after start",
      "level": 3,
      "content": "unique_id_module をコメントアウトしてください: #LoadModule unique_id_module modules/mod_unique_id.so\n\n"
    },
    {
      "title": "/run/httpd が起動時に作成されない",
      "level": 3,
      "content": "root ユーザーとしての systemd-tmpfiles --create が \"unsafe path transition\" について苦情を言った場合は、ルートディレクトリの所有権を確認してください。\n\n```\nls -la /\nchown root:root /\n```\n\n"
    },
    {
      "title": "Apache is running a threaded MPM, but your PHP Module is not compiled to be threadsafe",
      "level": 3,
      "content": "php7_module をロードする際に httpd.service が失敗して、journal で以下のようなエラーが表示される場合:\n\n```\nApache is running a threaded MPM, but your PHP Module is not compiled to be threadsafe.  You need to recompile PHP.\n```\n\nmpm_event_module を mpm_prefork_module で置き換える必要があります:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nLoadModule mpm_event_module modules/mod_mpm_event.so\nLoadModule mpm_prefork_module modules/mod_mpm_prefork.so\n```\n\nそして httpd.service を再起動してください。\n\n"
    },
    {
      "title": "AH00534: httpd: Configuration error: No MPM loaded.",
      "level": 3,
      "content": "アップグレードによってこのエラーが発生することがあります。httpd.conf の変化に対応してないのが原因です。修正するには、以下の行をアンコメントしてください:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nLoadModule mpm_prefork_module modules/mod_mpm_prefork.so\n```\n\nまた、他にもエラーが発生する場合は上記のセクションも参照。\n\n"
    },
    {
      "title": "AH00072: make_sock: could not bind to address",
      "level": 3,
      "content": "原因は複数考えられます。最も一般的な原因は既に別の何かがポートを listen している場合です。netstat で確認してください:\n\n```\n# netstat -lnp | grep -e :80 -e :443\n```\n\n何か出力された場合、ポートを占有しているサービスを停止してみてください。\n\n何らかの理由で Apache が root で起動していない可能性もあります。手動で起動してみて AH0072 エラーが発生しないか確認してください。\n\n```\n# /usr/bin/httpd -k start\n```\n\nあとは設定に問題があるためにポートに何度も listen しようとしている可能性があります。悪い設定の例:\n\n```\nListen 0.0.0.0:80\nListen [::]:80\n```\n\n"
    },
    {
      "title": "AH01071: Got error 'Primary script unknown'",
      "level": 3,
      "content": "これは、仮想ホスト環境などで /home でファイルを提供している場合、php-fpm systemd ユニットファイルの ProtectHome=true が原因である可能性があります。この機能を無効にするには、php-fpm ユニットファイルの編集 および php-fpm.service を 再起動 します。あるいは、ドキュメントルートを移動します。\n\n"
    },
    {
      "title": "php.ini の max_execution_time を変更しても反映されない",
      "level": 3,
      "content": "php.ini の max_execution_time を 30 (秒) 以上の値に設定しても、30秒後に Apache から 503 Service Unavailable が返ってくることがあります。この問題を解決するには、http 設定の <FilesMatch \\.php$> ブロックの直前に ProxyTimeout ディレクティブを追加してください:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nProxyTimeout 300\n```\n\nそして httpd.service を再起動してください。\n\n"
    },
    {
      "title": "PHP-FPM: エラーが仮想ホストごとに個別にログに記録されない",
      "level": 3,
      "content": "複数の仮想ホストがある場合は、(ErrorLog Apache ディレクティブを使用して) それぞれの仮想ホストでエラーログを別のファイルに出力することが望ましい場合があります。これが機能しない場合は、エラーを syslog に記録するように PHP-FPM が設定されていることを確認してください。\n\n```\n/etc/php/php-fpm.conf\n```\n\n```\nerror_log = syslog\n```\n\nプール設定がそれをオーバーライドしている可能性もあります。次の行がコメントアウトされていることを確認してください:\n\n```\n/etc/php/php-fpm.d/www.conf\n```\n\n```\n;php_admin_value[error_log] = /var/log/fpm-php.www.log\n```\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Apache 公式ウェブサイト\n- PHP 公式ウェブサイト\n- MariaDB 公式ウェブサイト\n- 自己署名証明書の作成チュートリアル\n- Apache Wiki トラブルシューティング\n\n"
    }
  ]
}
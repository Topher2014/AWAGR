{
  "title": "Screen capture (Русский)",
  "url": "https://wiki.archlinux.org/title/Screen_capture_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Горячие клавиши#Настройка\n\nВ данной статье описаны программы для создания скриншотов и скринкастов.\n\n"
    },
    {
      "title": "Самостоятельные программы",
      "level": 3,
      "content": "- CoreShot — Простая лёгкая утилита захвата экрана для X11. Входит в состав C-Suite.\n\n- Deepin Screenshot — Довольно простой в использовании инструмент для создания скриншотов. Объявлен устаревшим и был объединён с Deepin Screen Recorder. Известная проблема с функциональностью буфера обмена исправлена с помощью патча deepin-screenshot-copy-patchAUR[ссылка недействительна: package not found].\n\n- Escrotum — Программа для захвата экрана, использующая python и gtk3, вдохновлена scrot.\n\n- Flameshot — Программа на Qt5 для интерактивного создания скриншотов. Выберите нужную область, рисуйте с помощью различных инструментов и наслаждайтесь возможностями настройки.\n\n- GNOME Screenshot — Инструмент создания скриншотов для рабочего стола GNOME.\n\n- grim — Захват изображений из композитора Wayland.\n\n- gscreenshot — Простая утилита GTK для создания скриншотов с функциями задержки, выбора и копирования в буфер обмена.\n\n- HotShots — Приложение для захвата экранов и сохранения их в различных форматах изображений, а также добавления аннотаций и графических данных (стрелки, линии, тексты, ...).\n\n- imgur-screenshot — Делает скриншоты, загружает их на imgur + больше классных вещей\n\n- ksnip — Кроссплатформенный инструмент для создания скриншотов на базе Qt, предоставляющий множество функций аннотирования для ваших скриншотов.\n\n- Lightscreen — Простой инструмент для автоматизации утомительного процесса сохранения и каталогизации скриншотов. Он работает как скрытый фоновый процесс, который вызывается одной (или несколькими) горячими клавишами, а затем сохраняет файл скриншота на диск в соответствии с предпочтениями пользователя.\n\n- LXQt Screenshot — Инструмент создания скриншотов для LXQt. Запускается через lximage-qt --screenshot.\n\n- maim — Простая утилита командной строки для создания скриншотов. Она призвана заменить scrot и по многим параметрам работает лучше, чем scrot.\n\n- MATE Screenshot — Инструмент создания скриншотов для рабочего стола MATE.\n\n- menyoki — Инструмент командной строки для создания скриншотов и скринкастов, который также может выполнять некоторые операции над изображениями.\n\n- mss — Python-модуль для захвата экрана с простым интерфейсом командной строки, использующий xrandr.\n\n- Pantheon Screenshot — Инструмент создания скриншотов для elementary OS.\n\n- ScreenCloud — Позволяет сделать скриншот всего экрана или выделить область, а затем загрузить скриншот на imgur+auth. Есть плагины и значок в трее.\n\n- ScreenGrab — Кроссплатформенное приложение для быстрого создания скриншотов (Qt).\n\n- Scrot — Простая утилита для создания скриншотов из командной строки для X.\n\n- Shotgun — Минималистичная утилита для создания скриншотов X, написанная на Rust. По словам автора, она в два раза быстрее, чем maim.\n\n- Shutter — Многофункциональная программа для создания скриншотов и редактирования. Поддерживает задержку.\n\n- Spectacle — Приложение создания скриншотов для KDE. Оно может создавать снимки всего рабочего стола, отдельного окна, части окна, выделенной прямоугольной области или области со свободным контуром. Является частью kde-graphics.\n\n- Xfce4 Screenshooter — Приложение и плагин панели Xfce4 для создания скриншотов всего экрана, активного окна или выбранной области. Является частью xfce4-goodies.\n\n- xwd — Утилита для создания дампа изображения X Window System\n\n"
    },
    {
      "title": "xwd",
      "level": 4,
      "content": "xwd(1) предоставляется пакетом xorg-xwd.\n\nСкриншот корневого окна:\n\n```\n$ xwd -root -out screenshot.xwd\n```\n\n"
    },
    {
      "title": "scrot",
      "level": 4,
      "content": "scrot позволяет делать скриншоты из командной строки с заданной задержкой. Если не указано иное, файл будет создан в текущем рабочем каталоге.\n\n```\n$ scrot -t 20 -d 5\n```\n\nЭта команда создаст файл .png с датой в имени и с миниатюрой (20% от оригинала) для размещения в Интернете. Также будет 5-секундная задержка перед захватом.\n\nВы также можете использовать стандартное форматирование даты и времени при сохранении в файл. Например, команда\n\n```\n$ scrot ~/screenshots/%Y-%m-%d-%T-screenshot.png\n```\n\nсохраняет скриншот в файле с именем, содержащим текущий год, месяц, число, часы, минуты и секунды, в подкаталог «screenshots», находящийся в домашнем каталоге.\n\nСмотрите scrot(1) для более подробной информации.\n\n"
    },
    {
      "title": "escrotum",
      "level": 4,
      "content": "escrotum-gitAUR — это инструмент захвата экрана с использованием PyGTK, вдохновлённый scrot.\n\nОн был создан потому, что scrot имеет глюки, когда режим выбора используется с обновляющимися окнами.\n\nПоскольку интерфейс командной строки почти такой же, как у scrot, escrotum может быть использован в качестве его прозрачной замены.\n\n"
    },
    {
      "title": "maim",
      "level": 4,
      "content": "maim нацелен на то, чтобы стать улучшенным scrot.\n\nСохранение всего экрана в файл:\n\n```\n$ maim файл\n```\n\nВыбор окна или области для захвата и сохранение в файл:\n\n```\n$ maim --select файл\n```\n\nЗахват активного экрана (требуется xdotool):\n\n```\n$ maim --window $(xdotool getactivewindow) файл\n```\n\nВыбор, сохранение без курсора мыши и сохранение в буфер обмена (требуется xclip):\n\n```\n$ maim -s | xclip -selection clipboard -t image/png -i\n```\n\n"
    },
    {
      "title": "Spectacle",
      "level": 4,
      "content": "В среде KDE можно использовать Spectacle.\n\nОн предоставляется пакетом spectacle.\n\n"
    },
    {
      "title": "Xfce Screenshooter",
      "level": 4,
      "content": "В среде Xfce можно установить xfce4-screenshooter и назначить горячие клавиши:\n\nМеню > Настройки > Клавиатура > Комбинации клавиш\n\nКоманда xfce4-screenshooter -h выведет список доступных опций.\n\n"
    },
    {
      "title": "GNOME",
      "level": 4,
      "content": "Пользователи GNOME могут нажать PrintScreen или нажать на значок камеры в системном меню. Также можно установить gnome-screenshot и запустить его через меню Приложения > Утилиты > Снимок экрана.\n\nС помощью сочетания клавиш Ctrl+Shift+Alt+r можно запустить встроенную в GNOME запись экрана. Во время записи будет отображаться уведомление в верхней панели рядом с системным меню. После завершения записи в каталоге Видео будет сохранён файл Запись экрана от дата.webm. Для работы этой функции должны быть установлены пакеты gst-plugin-pipewire и gst-plugins-good.\n\n"
    },
    {
      "title": "Cinnamon",
      "level": 4,
      "content": "В стандартной установке Cinnamon нет программы для создания скриншотов, но можно установить gnome-screenshot и запустить его через меню или нажатием клавиши PrintScreen.\n\n"
    },
    {
      "title": "Другие среды рабочего стола или оконные менеджеры",
      "level": 4,
      "content": "Для других сред рабочего стола вроде LXDE или оконных менеджеров вроде Openbox или Compiz можно добавить сочетание клавиш для какой-нибудь команды создания скриншота, например:\n\n```\n$ import -window root ~/Изображения/$(date '+%Y%m%d-%H%M%S').png\n```\n\nКоманда import входит в состав пакета imagemagick. Назначение этой команды на клавишу PrintScreen в Compiz позволяет сделать снимок экрана в папку Изображения с датой и временем в имени файла. Обратите внимание, что файл rc.xml в Openbox не понимает запятых; поэтому, чтобы привязать эту команду к клавише PrintScreen в Openbox, вам нужно добавить следующее в раздел keyboard файла rc.xml file:\n\n```\nrc.xml\n```\n\n```\n<!-- Screenshot -->\n    <keybind key=\"Print\">\n      <action name=\"Execute\">\n        <command>sh -c \"import -window root ~/Pictures/$(date '+%Y%m%d-%H%M%S').png\"</command>\n      </action>\n    </keybind>\n```\n\nЕсли keybind Print не работает, прочтите статью Keyboard input (Русский) и попробуйте другие коды или символы клавиш.\n\n"
    },
    {
      "title": "ImageMagick/GraphicsMagick",
      "level": 4,
      "content": "Смотрите ImageMagick#Screenshot taking.\n\n"
    },
    {
      "title": "GIMP",
      "level": 4,
      "content": "Можно создавать скриншоты в GIMP (Файл > Создать > Снимок экрана...).\n\n"
    },
    {
      "title": "imlib2",
      "level": 4,
      "content": "imlib2 предоставляет программу imlib2_grab для создания скриншотов:\n\n```\n$ imlib2_grab screenshot.png\n```\n\n"
    },
    {
      "title": "FFmpeg",
      "level": 4,
      "content": "Смотрите FFmpeg#Screen capture.\n\n"
    },
    {
      "title": "Программы для записи скринкастов",
      "level": 2,
      "content": "Смотрите также FFmpeg#Screen capture и Wikipedia:Comparison of screencasting software.\n\nЭти программы позволяют записать видео происходящего на рабочем столе или в отдельных окнах.\n\n- Byzanz — Простой инструмент, создающий GIF-анимацию.\n\n- Deepin Screen Recorder — Приложение для записи экрана для рабочего стола Deepin.\n\n- FFcast — Инструмент для скринкастинга на основе FFmpeg, написанный на Bash.\n\n- Gpu Screen Recorder — Экранный рекордер, который использует только GPU для захвата, что значительно повышает производительность и делает её сравнимой с Nvidia ShadowPlay. Поддерживает потоковую передачу и буфер воспроизведения. В настоящее время ограничен NVIDIA.\n\n- Green Recorder — Простой, но функциональный инструмент записи экрана.\n\n- Kazam — Программа для скринкастинга с учётом дизайна. Работает с многоэкранными установками.\n\n- Kooha — Простая программа записи экрана с минимальным интерфейсом GTK.\n\n- menyoki — Инструмент командной строки для создания скриншотов и скринкастов, который также может выполнять некоторые операции над изображениями.\n\n- Open Broadcaster Software — Приложение для записи видео и стриминга.\n\n- obs-gnome-screencastAUR – плагин для функции GNOME screencast, поддерживает Wayland\n\n- Peek — Простой инструмент, который создаёт анимацию в форматах GIF, APNG, WebM или MP4.\n\n- RecApp — Дружественный скринкастер, написанный на GTK. Использует свободные модули GStreamer и не зависит от FFmpeg. Больше не разрабатывается.\n\n- RecordItNow — Рекордер рабочего стола на основе плагинов для KDE 4.\n\n- RecordMyDesktop — Простая в использовании утилита для записи рабочего стола в формат ogg с интерфейсом CLI, GTK или Qt. (разработка неактивна)\n\n- screencast — Интерфейс командной строки для записи рабочего стола X11 с помощью FFmpeg, с поддержкой автономной записи и стриминга.\n\n- Screencast — Простой рекордер скринкастов, разработанный для elementary OS.\n\n- SimpleScreenRecorder — Многофункциональный экранный рекордер, написанный на C++/Qt5, поддерживающий X11 и OpenGL.\n\n- VokoScreen — Простой графический инструмент для записи скринкастов с использованием GStreamer.\n\n- XVidCap — Приложение для записи скринкаста или цифровой записи экранного вывода X Window System со звуковым сопровождением.\n\n"
    },
    {
      "title": "Wayland",
      "level": 2,
      "content": "Если вы используете композитор, основанный на Wlroots, то сделать скриншот можно с помощью grim или grimshotAUR[ссылка недействительна: package not found] (пакет sway также предоставляет grimshot в каталоге /usr/share/sway/scripts/); записать скринкаст можно с помощью wf-recorder (или wf-recorder-gitAUR); wlrobs-hgAUR — плагин obs-studio, который позволяет делать захват экрана в композиторах на базе wlroots. Опционально можно использовать slurp для выделения части экрана, которую нужно захватить.\n\nСделать снимок всего экрана:\n\n```\n$ grim screenshot.png\n```\n\nСделать скриншот текущего окна:\n\n```\n$ grim -g \"$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | \"\\(.x),\\(.y) \\(.width)x\\(.height)\"')\" screenshot.png\n```\n\nСделать скриншот выделенной части экрана:\n\n```\n$ grim -g \"$(slurp)\" screenshot.png\n```\n\nСделать скриншот выделенной части экрана и поместить его в буфер обмена с помощью wl-clipboard:\n\n```\n$ grim -g \"$(slurp)\" - | wl-copy\n```\n\nЗаписать видео с экрана:\n\n```\n$ wf-recorder -f recording.mp4\n```\n\nЗаписать видео выделенной части экрана:\n\n```\n$ wf-recorder -g \"$(slurp)\"\n```\n\n- slurpshot — интерактивный инструмент для создания скриншотов, использующий bemenu.\n- Можно совместить создание скриншота с каким-нибудь инструментом для постобработки, например swappy: grim -g \"$(slurp)\" - | swappy -f -\n\nКроме того, некоторые программы из перечисленных выше могут работать в Wayland (например, ksnip, green-recorderAUR). Для корректной работы spectacle из KDE, возможно, понадобится удалить ~/.local/share/applications/org.kde.spectacle.desktop; в любом случае, Spectacle должен работать с режимом съёмки Окно под курсором мыши (Meta+Ctrl+Print).\n\n"
    },
    {
      "title": "С помощью GNOME screencast",
      "level": 4,
      "content": "green-recorderAUR, obs-gnome-screencastAUR и obs-studio поддерживают запись Wayland-экрана через GNOME screencast.\n\n"
    },
    {
      "title": "С помощью виртуальной камеры",
      "level": 4,
      "content": "- Этот метод был протестирован с zoomAUR (desktop-клиент работает через xorg-xwayland) и BigBlueButton под chromium (под firefox разрешение очень низкое); skypeforlinux-binAUR обнаруживает виртуальную камеру, но выводит пустоту.\n- В примере используется wf-recorder, но вы можете использовать любую программу, просто подайте вывод на виртуальное устройство.\n\nУстановите wf-recorder (или wf-recorder-gitAUR) и v4l2loopback-dkms. Загрузите модуль ядра v4l2loopback со следующими параметрами:\n\n```\n# modprobe v4l2loopback exclusive_caps=1 card_label=VirtualVideoDevice\n```\n\nПосле этого должна появиться виртуальная камера VirtualVideoDevice:\n\n```\n$ v4l2-ctl --list-devices\n```\n\n```\n...\nVirtualVideoDevice (platform:v4l2loopback-000):\n  /dev/video2\n...\n```\n\nТеперь запустите захват экрана с помощью wf-recorder и направьте его вывод в эту виртуальную камеру:\n\n```\n$ wf-recorder --muxer=v4l2 --codec=rawvideo --file=/dev/video2 -x yuv420p\n```\n\nИспользование yuv420p необходимо для совместимости с Zoom [1].\n\nТеперь в нужном вам приложении вы сможете выбрать эту виртуальную камеру, и она будет отображать ваш экран. Для проверки работоспособности можно использовать ffplay (из пакета ffmpeg), mpv или gst-launch (из пакета gstreamer):\n\n```\n$ ffplay /dev/video2\n```\n\n```\n$ mpv av://v4l2:/dev/video2\n```\n\n```\n$ gst-launch-1.0 -v v4l2src device=/dev/video2 ! glimagesink\n```\n\nЕсли Firefox не может захватить видео и пишет ошибку вроде «AbortError: Starting video failed», попробуйте подгрузить библиотеку v4l2compat.so:\n\n```\n$ LD_PRELOAD=/usr/lib/v4l1compat.so firefox\n```\n\nКак описывалось ранее, wf-recorder также позволяет записать часть экрана, которую можно выделить с помощью slurp. Поэтому можно использовать такую команду, чтобы в виртуальной камере отображалось только одно окно:\n\n```\n$ wf-recorder -g \"$(slurp)\" --muxer=v4l2 --codec=rawvideo --file=/dev/video2 -x yuv420p\n```\n\nПосле выделения нужной части экрана виртуальная камера /dev/video2 станет отображать её.\n\n"
    },
    {
      "title": "WebRTC",
      "level": 4,
      "content": "Смотрите PipeWire (Русский)#Демонстрация экрана WebRTC.\n\nПосле установки нужных пакетов захват экрана в Chromium и Firefox должен заработать. Это можно проверить на тестовой странице getUserMedia / getDisplayMedia от Mozilla.\n\n"
    },
    {
      "title": "Захват с кодами ANSI",
      "level": 3,
      "content": "Можно использовать команду script(1) из пакета util-linux. Просто выполните команду script, и она запустит новую командную оболочку, внутри которой весь вывод вместе с управляющими последовательностями ANSI будет записан в файл с именем typescript.\n\nДля завершения записи выйдите из этой командной оболочки. Получившийся файл можно сконвертировать в HTML с помощью ansi2htmlAUR (не путайте с другим пакетом python-ansi2html).\n\nНапример, чтобы преобразовать typescript в typescript.html, выполните следующую команду:\n\n```\n$ ansi2html --bg=dark < typescript > typescript.html\n```\n\nВывод некоторых команд можно перенаправить сразу в ansi2html:\n\n```\n$ ls --color|ansi2html --bg=dark >output.html\n```\n\nНо это сработает не всегда и может понадобиться всё равно использовать script.\n\n"
    },
    {
      "title": "Кадровый буфер",
      "level": 3,
      "content": "Установите кадровый буфер (framebuffer) и используйте fbgrab или fbdumpAUR, чтобы из его содержимого сделать скриншот.\n\n"
    },
    {
      "title": "Виртуальная консоль",
      "level": 3,
      "content": "Если вам нужен текст из консоли, а не изображение, можно использовать setterm из пакета util-linux. Следующая команда запишет текстовое содержимое виртуальной консоли 1 в файл screen.dump в текущем каталоге:\n\n```\n# setterm -dump 1 -file screen.dump\n```\n\nТребуются root-права для чтения /dev/vcs1.\n\n"
    }
  ]
}
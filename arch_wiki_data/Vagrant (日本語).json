{
  "title": "Vagrant (日本語)",
  "url": "https://wiki.archlinux.org/title/Vagrant_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- VirtualBox\n- Libvirt\n- KVM\n- Docker\n\nVagrant は仮想化された開発環境を管理・設定するためのツールです。\n\nVagrant には'プロバイダー'という概念があり、仮想化エンジンとその API を示します。一番人気があってサポートの手厚いプロバイダーは Virtualbox です。他に libvirt, kvm, lxc, vmware などのプラグインが存在します。\n\n基本的に Vagrant は Vagrantfile を使って仮想化するマシンを定義します。単一の Vagrantfile で複数のマシンを定義することができます。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 プラグイン 2.1 vagrant-libvirt 2.2 vagrant-lxc 2.3 vagrant-kvm (非推奨)\n- 3 プロビジョニング\n- 4 Vagrant の Base Box\n- 5 トラブルシューティング 5.1 ホストと vagrant ボックスで ping が通らない (ホストオンリーネットワーク) 5.2 ホストの Arch から仮想マシンでネットワークを使うことができない 5.3 NFS のマウント時に 'vagrant up' がフリーズする (Mounting NFS shared folders...) 5.4 Error starting network 'default': internal error: Failed to initialize a valid firewall backend 5.5 vagrant ゲストに ssh でログインできない\n- 6 参照\n\n- 2.1 vagrant-libvirt\n- 2.2 vagrant-lxc\n- 2.3 vagrant-kvm (非推奨)\n\n- 5.1 ホストと vagrant ボックスで ping が通らない (ホストオンリーネットワーク)\n- 5.2 ホストの Arch から仮想マシンでネットワークを使うことができない\n- 5.3 NFS のマウント時に 'vagrant up' がフリーズする (Mounting NFS shared folders...)\n- 5.4 Error starting network 'default': internal error: Failed to initialize a valid firewall backend\n- 5.5 vagrant ゲストに ssh でログインできない\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "vagrant パッケージをインストールしてください。\n\n"
    },
    {
      "title": "プラグイン",
      "level": 2,
      "content": "パワフルなプラグインをサポートするために Vagrant はミドルウェアアーキテクチャを採用しています。\n\nプラグインは Vagrant に組み込まれているプラグインマネージャでインストール可能です。インストールするプラグインを複数指定することもできます:\n\n```\n$ vagrant plugin install vagrant-vbguest vagrant-share\n```\n\n"
    },
    {
      "title": "vagrant-libvirt",
      "level": 3,
      "content": "このプラグインは Vagrant に libvirt プロバイダを追加します。プラグインをインストールする前に gcc と make パッケージをインストールする必要があり、libvirt プロバイダを使うには libvirt と関連するパッケージをインストール・設定する必要があります:\n\n```\n$ vagrant plugin install vagrant-libvirt\n```\n\n- 2017年11月現在 (Vagrant バージョン 2.0.1-1)、以下の方法はもはや必要ありません。通常通りにプラグインをインストールしてください。\n- 2016年9月現在 (Vagrant バージョン 1.8.5)、Arch Linux では通常にインストールすることができません。以下の方法でインストールしてください:\n\n```\n$ CONFIGURE_ARGS='with-ldflags=-L/opt/vagrant/embedded/lib with-libvirt-include=/usr/include/libvirt with-libvirt-lib=/usr/lib' \\\n  GEM_HOME=~/.vagrant.d/gems GEM_PATH=$GEM_HOME:/opt/vagrant/embedded/gems PATH=/opt/vagrant/embedded/bin:$PATH \\\n  vagrant plugin install vagrant-libvirt\n```\n\nincompatible library version によって vagrant up が失敗してしまうのは バグ #541 が原因です。reinstall-vagrant-libvirt.sh を作成・実行することで解決できます。\n\n- 2017年6月現在 (Vagrant バージョン 1.9.5-1)、プラグインの通常のインストールは失敗し、バージョン 1.8.5 用の解決方法は Arch Linux では上手く機能しません [1]。vagrant-substrate をダウングレードすることで問題は解決します。\n\nプラグインをインストールしたら libvirt プロバイダが使えるようになります:\n\n```\n$ vagrant up --provider=libvirt\n```\n\n"
    },
    {
      "title": "vagrant-lxc",
      "level": 3,
      "content": "まず lxc パッケージをインストールして、それから:\n\n```\n$ vagrant plugin install vagrant-lxc\n```\n\n次に、このコメントのようにして lxc と systemd ユニットファイルを設定してください。以下のような Vagrantfile でこのプラグインを使うことができます:\n\n```\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(\"2\") do |config|\n\n    config.vm.define \"main\" do |config|\n        config.vm.box = 'http://bit.ly/vagrant-lxc-wheezy64-2013-10-23'\n\n        config.vm.provider :lxc do |lxc|\n            lxc.customize 'cgroup.memory.limit_in_bytes', '512M'\n        end\n\n        config.vm.provision :shell do |shell|\n            shell.path = 'provision.sh'\n        end\n    end\nend\n```\n\nシェルスクリプトの provision.sh ファイルは Vagrantfile と同じ場所に配置する必要があります。適切な設定を行なって下さい。例えば、上記の box にパッケージされている puppet を削除するには:\n\n```\nrm /etc/apt/sources.list.d/puppetlabs.list\napt-get purge -y puppet facter hiera puppet-common puppetlabs-release ruby-rgen\n```\n\n"
    },
    {
      "title": "vagrant-kvm (非推奨)",
      "level": 3,
      "content": "このプラグインは仮想化プロバイダーとして KVM をサポートします。\n\nVagrant は必要なものが全て揃った多彩な環境を /opt にインストールしますが、これは Arch のシステムの Ruby やその他のライブラリと複雑に干渉します。（Ruby との問題、Curl ライブラリとの問題）\n\nvagrant-kvm wiki にある Arch Linux 向けの完全なインストールガイド を参照してインストールしてください。\n\n"
    },
    {
      "title": "プロビジョニング",
      "level": 2,
      "content": "プロビジョナーを使うことでソフトウェアを自動的にインストールして、vagrant up の中で行う設定を変更・自動化することができます。最もよく使われているプロビジョナーは puppet と chef-dkAUR パッケージの2つです。\n\n"
    },
    {
      "title": "Vagrant の Base Box",
      "level": 2,
      "content": "以下は色々な vagrant base box の入手場所の一覧で、目的は様々です: 開発, テスト, 本番環境。\n\n- 公式の Arch Linux vagrant boxes。ビルドするときに使用された packerfile とプロビジョニングスクリプトは GitHub プロジェクト にあります。\n\n- よくメンテされている最新の Vagrant 用 Arch Linux x86_64 base box\n\n- 同一の Arch Linux x86_64 base box は次を実行することで Vagrant Cloud から取得可能: vagrant init terrywang/archlinux\n\n- Vagrant Cloud は Vagrant box のための HashiCorp の公式サイトです。ユーザーが投稿した box を閲覧したり自分の box をアップロードすることができます。単一の Vagrant Cloud box で複数のプロバイダーとバージョニングをサポートすることができます。\n\n- vagrantbox.esvagrant base box のリスト。Gareth Rushgrove @garethr によって開始され Nginx を使って Heroku でホストされています。こちらのストーリーを見て下さい: Vagrantbox.es Story。\n\n- Opscode bento日本語で bento が何を意味するかは知っていますよね？ここでは、弁当箱ではなく cookbook や private chef (Chef Server と Client) をテストするのに使える極めて便利な base box を指します。含まれているディストリビューション: Ubuntu Server, Debian, CentOS, Fedora, FreeBSD。\n\n- Puppet Labs Vagrant Boxesすぐに使える vagrant box 集。Puppet Labs の人々によって作成。\n\n- Vagrant Ubuntu Cloud Images2013年1月から存在します。何らかの理由で Canonical は公式には喧伝していません、おそらくまだベータなのでしょう。バニラなイメージなので、Chef や Puppet がないとあまり役には立ちません。\n\n- GitHub の packer-arch プロジェクト は packer-io[リンク切れ: 置換パッケージ: packer] を使用して公式 iso イメージから軽量な Arch Linux の Vagrant イメージを作成する設定ファイルを提供しています。\n\n"
    },
    {
      "title": "ホストと vagrant ボックスで ping が通らない (ホストオンリーネットワーク)",
      "level": 3,
      "content": "ときどき、ホストオンリーネットワークが機能しないという問題が発生することがあります。ホストの vboxnet インターフェイスに ip が割り当てられず、ホストが vagrant ボックスに ping できなかったり、ボックスの方からホストに ping できなかったりします。この問題は net-tools をインストールすることで解決します。このスレッド を参照してください。\n\n"
    },
    {
      "title": "ホストの Arch から仮想マシンでネットワークを使うことができない",
      "level": 3,
      "content": "バージョン 1.8.4 現在、Vagrant は仮想マシンとブリッジ接続するのに古い route コマンドを使って仮想ネットワークインターフェイスのルーティングを設定します。route がインストールされていない場合、ホスト OS から仮想マシンにアクセスできなくなります。route コマンドが含まれている net-tools パッケージをインストールしてください。\n\n"
    },
    {
      "title": "NFS のマウント時に 'vagrant up' がフリーズする (Mounting NFS shared folders...)",
      "level": 3,
      "content": "nfs-utils パッケージをインストールすることで問題は解決します。\n\n"
    },
    {
      "title": "Error starting network 'default': internal error: Failed to initialize a valid firewall backend",
      "level": 3,
      "content": "ファイアウォールの依存パッケージがインストールされていません。ebtables と dnsmasq パッケージをインストールして systemd サービスの libvirtd を再起動してください。\n\n"
    },
    {
      "title": "vagrant ゲストに ssh でログインできない",
      "level": 3,
      "content": "BIOS で仮想化が有効になっているか確認してください。vagrant によって仮想マシンが起動したと表示されたために仮想化が上手くいっていると思われるかもしれませんが、一部の vagrant ボックス (例: tantegerda1/archlinux) では cpu の仮想化機能が足りないために ssh の起動まで進められないことがあります。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- 公式の Vagrant ドキュメント\n- Wikipedia:ja:Vagrant (ソフトウェア)\n\n"
    }
  ]
}
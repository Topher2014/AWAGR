{
  "title": "カーネルパラメータ",
  "url": "https://wiki.archlinux.org/title/%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "カーネルにオプションを渡してその動作を制御するには、3つの方法があります。\n\n1. カーネルを構築するとき、カーネルの config ファイルで。詳しくは カーネル#コンパイルを見てください。\n1. カーネルを起動する際に、コマンドラインパラメーターを使用します(通常は ブートローダ を介して、または ユニファイドカーネルイメージ 内でも同様です)\n1. 実行時に /proc/sys/ にあるファイルを通して実行する。(参照 sysctl) と /sys/ があります。\n\nこの3つの方式では、設定可能なオプションの有無、名称、指定方法が異なります。このページでは 2 番目の方法 (カーネルコマンドラインパラメータ) についてのみ説明し、Arch Linux で最もよく使われるカーネルパラメータの一覧を示します。\n\nほとんどのパラメータはサブシステムに関連しており、カーネルがそれらのサブシステムを組み込んで設定されている場合にのみ機能します。また、それらが関連するハードウェアの存在にも依存します。\n\nカーネルコマンドラインパラメータは parameter または parameter=value、module.parameter=value というフォーマットで表されます。\n\n- システムが起動時に使用したパラメーターは、cat /proc/cmdline を実行することで確認できます。これにより、変更が反映されているか確認できます。\n- すべてのカーネルパラメータは大文字と小文字を区別します。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 ブートローダーの設定 1.1 GRUB 1.2 GRUB Legacy 1.3 LILO 1.4 Limine 1.5 rEFInd 1.6 Syslinux 1.7 systemd-boot\n- 2 dracut\n- 3 EFI boot stub\n- 4 cmdline をハイジャック\n- 5 パラメータ一覧\n- 6 参照\n\n- 1.1 GRUB\n- 1.2 GRUB Legacy\n- 1.3 LILO\n- 1.4 Limine\n- 1.5 rEFInd\n- 1.6 Syslinux\n- 1.7 systemd-boot\n\n"
    },
    {
      "title": "ブートローダーの設定",
      "level": 2,
      "content": "カーネルパラメーターは、一時的にブートローダーのブート選択メニューでブートエントリーを編集して設定することも、永続的にブートローダーの設定ファイルを変更して設定することもできます。\n\n以下の例では、quiet および splash パラメーターを GRUB、GRUB Legacy、LILO、Limine、rEFInd、Syslinux、および systemd-boot ブートローダーに追加する方法を示します。\n\n"
    },
    {
      "title": "GRUB",
      "level": 3,
      "content": "- メニューが表示されたら e を押しパラメータを linux 行の後ろに加えます:\n\n```\nlinux /boot/vmlinuz-linux root=UUID=978e3e81-8048-4ae1-8a06-aa727458e8ff quiet splash\n```\n\n- 再起動後も変更を持続させるには、/boot/grub/grub.cfg を開いて上と同じ行を編集することもできますが、初心者におすすめの方法は:\n\n```\nGRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash\"\n```\n\n```\n# grub-mkconfig -o /boot/grub/grub.cfg\n```\n\nGRUB の設定について、詳しくは GRUB を見て下さい。\n\n"
    },
    {
      "title": "GRUB Legacy",
      "level": 3,
      "content": "- メニューが表示されたら e を押しパラメータを kernel 行の後ろに加えます:\n\n```\nkernel /boot/vmlinuz-linux root=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw quiet splash\n```\n\n- 再起動後も変更を持続させるには、/boot/grub/menu.lst を開いて上と同じように kernel 行にパラメータを追加します。\n\nGRUB Legacy の設定について詳しくは GRUB Legacy を見て下さい。\n\n"
    },
    {
      "title": "LILO",
      "level": 3,
      "content": "- パラメータを /etc/lilo.conf に追加します:\n\n```\nimage=/boot/vmlinuz-linux\n        ...\n        quiet splash\n```\n\nLILO の設定については LILO により多くの情報があります。\n\n"
    },
    {
      "title": "Limine",
      "level": 3,
      "content": "- カーネルパラメータを一時的に追加するには、ブートエントリの選択画面が表示されたときにeを押し、kernel_cmdline 行を変更します。\n\n```\nkernel_cmdline: root=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw quiet splash\n```\n\n- 変更を永続的に適用するには、esp/limine.conf の kernel_cmdline 行を編集します。\n\n```\n/+Arch Linux\n    ...\n    kernel_cmdline: root=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw quiet splash\n```\n\n"
    },
    {
      "title": "rEFInd",
      "level": 3,
      "content": "- 目的のメニューエントリで +、F2、または Insert を押し、サブメニューエントリでもう一度押します。文字列の最後にカーネルパラメータを追加します。\n\n```\nroot=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw initrd=\\boot\\initramfs-linux.img quiet splash\n```\n\n- 再起動後も変更を適用するには、/boot/EFI/arch/refind_linux.conf を編集して、パラメータを全ての(もしくは必要な)行に追加してください、例えば:\n\n```\n\"Boot using default options\"   \"root=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw quiet splash\"\n```\n\n- rEFInd で OS の自動検知を無効にしていて、代わりに /boot/EFI/refind/refind.conf で OS を定義して OS をロードしている場合、以下のように編集することができます:\n\n```\nmenuentry \"Arch Linux\" {\n\t...\n\toptions  \"root=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw quiet splash\"\n\t...\n}\n```\n\nrEFInd の構成の詳細については、rEFInd の記事を参照してください。\n\n"
    },
    {
      "title": "Syslinux",
      "level": 3,
      "content": "- メニューが表示されたら Tab を押してパラメータを文字列の最後に加える:\n\n```\nlinux /boot/vmlinuz-linux root=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw initrd=/boot/initramfs-linux.img quiet splash\n```\n\n- 再起動後も変更を持続させるには、/boot/syslinux/syslinux.cfg を開き、パラメータを APPEND 行に加えます:\n\n```\nAPPEND root=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw quiet splash\n```\n\nSyslinux の設定について、詳しくは Syslinux を見て下さい。\n\n"
    },
    {
      "title": "systemd-boot",
      "level": 3,
      "content": "- メニューが表示されたら e を押して一番末尾にパラメータを追加してください:\n\n```\ninitrd=\\initramfs-linux.img root=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw quiet splash\n```\n\n- メニュータイムアウトの値を設定していない場合、systemd-boot メニューを表示させるために、起動中に Space を押し続ける必要があります。\n- ブートメニューからパラメータを編集できない場合は、/boot/loader/loader.conf を編集して editor 1 を追加して編集可能にする必要があるかもしれません。\n\n- 再起動後も変更を永続的に適用するには、/boot/loader/entries/arch.conf (ビギナーズガイドの指示通りに EFI System Partition と設定ファイルを設定した場合) を編集して options 行に以下を追加してください:\n\n```\noptions root=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 rw quiet splash\n```\n\nsystemd-boot に関する詳細は systemd-boot の記事を見て下さい。\n\n"
    },
    {
      "title": "dracut",
      "level": 2,
      "content": "dracut はカーネルパラメータを initramfs に埋め込むことができるので、ブートローダの設定から省略することができます。dracut#カーネルコマンドラインオプション を参照してください。\n\n"
    },
    {
      "title": "EFI boot stub",
      "level": 2,
      "content": "EFISTUB#UEFI を直接使う を見て下さい。\n\n"
    },
    {
      "title": "cmdline をハイジャック",
      "level": 2,
      "content": "ブートローダーにアクセスすることすらできない場合でも、(root 権限があれば) カーネルパラメータを変更してデバッグを有効にできる可能性があります。その方法とは、カーネルパラメータが保存されている /proc/cmdline を上書きすることです。/proc/cmdline は root でも書き込むことができないので、バインドマウントを使ってパスをマスクすることでハイジャックします。\n\nまず、使用したいカーネルパラメータを記述したファイルを作成してください:\n\n```\n/root/cmdline\n```\n\n```\nroot=UUID=0a3407de-014b-458b-b5c1-848e92a327a3 ro console=tty1 logo.nologo debug\n```\n\n次に、バインドマウントを使ってパラメータを上書きします:\n\n```\n# mount -n --bind -o ro /root/cmdline /proc/cmdline\n```\n\n-n オプションは /etc/mtab へのマウントの追加をスキップするため、root が読み取り専用でマウントされていても機能します。cat /proc/cmdline を実行することでカーネルパラメータが変更されたか確認できます。\n\n"
    },
    {
      "title": "パラメータ一覧",
      "level": 2,
      "content": "以下のリストは完全ではありません。全てのオプションの一覧は、カーネルのドキュメントを見て下さい。\n\nTable content:\nパラメータ | 説明\ninit | /sbin/init ではなく指定されたバイナリを init プロセスとして実行します。systemd-sysvcompat パッケージは、/usr/lib/systemd/systemd へのシンボリックリンクを /sbin/init に作成して systemd を使用します。/bin/sh を指定することで、シェルを起動するように設定できます。\ninitrd | 初期 RAM ディスクの場所を指定します。UEFI ブートローダー や EFISTUB の場合、パスの区切り文字にはバックスラッシュ (\\) を使用しなければなりません。\ncryptdevice | dm-crypt で暗号化されたパーティションの場所とデバイスマッパー名を指定します。\ndebug | カーネルのデバッグ (イベントログレベル) を有効化します。\nlsm | Linux セキュリティモジュールの初期化順を設定します。AppArmor、SELinux、TOMOYO を有効化するために使用されます。\nmaxcpus | SMPカーネルが起動時に使用するプロセッサーの最大数を指定します。\nmem | 指定された量のメモリを強制的に使います\nnetdev | ネットワークデバイスのパラメータ。\nnomodeset | カーネルモード設定 を無効化します。\npanic | カーネルパニック時に自動的に再起動するまでの時間。\nresume | ハイバネートから復帰するときに使用するスワップデバイスを指定します。\nro | 起動時にルートデバイスを読み取り専用でマウントします (デフォルト1)。\nroot | ルートファイルシステム。カーネルのサポートされているデバイス名形式については init/do_mounts.c を見てください。initramfs と udev を使用する場合、さらに多くのデバイス名形式がサポートされていることに注意してください。\nrootflags | ルートファイルシステムのマウントオプション。再マウント (つまり、systemd-remount-fs.service(8)) によって適用できないオプションを設定するときに便利です。例えば、XFS ルートボリュームの discard オプションがあります。\nrw | 起動時にルートデバイスを読み書き可能でマウントします。\nsystemd.unit | 指定されたターゲットを起動します。\nvideo | フレームバッファビデオのデフォルト値を上書きします。\n\n1. ro も rw もカーネルコマンドラインで明示的に設定されていない場合、カーネルは rw を使用します (bootparam(7) § デバイス固有ではない全般を参照 ブート引数) ただし、mkinitcpio はカーネルのデフォルトをオーバーライドするデフォルト値として ro を使用します (mkinitcpio(8) § EARLY INIT ENVIRONMENT を参照) ブートローダーには、独自に設定されたデフォルトがある場合もあります。たとえば、grub-mkconfig は rw を使用します (リファレンスとして FS#36275 を参照) ノート: mkinitcpio の fsck フック ([1] を参照) を使う場合、または F2FS をルートファイルシステムとして使用する場合、rw が必要です。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- kernel-command-line(7)\n- 省電力設定#カーネルパラメータ\n- Kernel Boot Command-Line Parameter Reference—the chapter 9 of the Linux Kernel in a Nutshell by Greg Kroah-Hartman\n\n"
    }
  ]
}
{
  "title": "Xmonad (Français)",
  "url": "https://wiki.archlinux.org/title/Xmonad_(Fran%C3%A7ais)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- xmobar\n- Window manager (Français)\n\nxmonad est un gestionnaire de fenêtres pour X. Les fenêtres sont disposées automatiquement de manière à recouvrir l'écran sans espace ni chevauchement, ce qui optimise l'utilisation de l'écran. Les fonctionnalités du gestionnaire de fenêtres sont accessibles à partir du clavier : une souris est optionnelle.\n\nxmonad est écrit, configuré et extensible en Haskell. Des algorithmes de mise en page personnalisés, des liaisons de touches et d'autres extensions peuvent être écrits par l'utilisateur dans des fichiers de configuration.\n\nLes mises en page sont appliquées dynamiquement, et différentes mises en page peuvent être utilisées sur chaque espace de travail. Xinerama est entièrement pris en charge, permettant aux fenêtres d'être empilées sur plusieurs écrans physiques.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Installez le paquet xmonad qui fournit une configuration très basique, idéalement installez aussi xmonad-contrib pour une configuration de bureau plus utile ainsi que des algorithmes de tuilage, des configurations, des scripts, etc. supplémentaires.\n\nSinon, installez xmonad-gitAUR, la version de développement, avec quelques dépendances supplémentaires ; et de même xmonad-contrib-gitAUR.\n\n"
    },
    {
      "title": "Démarrage",
      "level": 2,
      "content": "Lancez xmonad avec xinit.\n\nAlternativement, sélectionnez Xmonad depuis le menu de la session dans le gestionnaire d'affichage de votre choix.\n\nAssurez-vous que le paquet xterm est installé ou que vous avez changé l'émulateur de terminal dans la configuration. Sinon, vous ne pourrez rien faire dans xmonad.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Créez le répertoire ~/.xmonad et le fichier ~/.xmonad/xmonad.hs et éditez-le comme décrit ci-dessous.\n\nAprès avoir apporté des modifications à ~/.xmonad/xmonad.hs, utilisez le raccourci Mod+q pour recompiler et faire en sorte qu'elles prennent effet.\n\nComme le fichier de configuration de xmonad est écrit en Haskell, les non-programmeurs peuvent avoir du mal à ajuster les paramètres. Pour un HOWTO détaillé et des exemples de configurations, nous vous renvoyons aux ressources suivantes :\n\n- wiki de xmonad\n- archive des configurations de xmonad\n- FAQ de xmonad\n- discussion sur le forum d'Arch Linux\n\nLa meilleure approche est de ne placer vos modifications et personnalisations que dans ~/.xmonad/xmonad.hs et de l'écrire de telle sorte que tous les paramètres non définis soient récupérés dans la fonction intégrée def.\n\nPour ce faire, écrivez un xmonad.hs comme ceci :\n\n```\nimport XMonad\n\nmain = xmonad def\n    { terminal    = \"urxvt\"\n    , modMask     = mod4Mask\n    , borderWidth = 3\n    }\n```\n\nCeci remplace simplement le terminal et la largeur de bordure par défaut tout en laissant tous les autres paramètres à leurs valeurs par défaut (héritées de la valeur def de XConfig).\n\nLorsque les choses deviennent plus compliquées, il peut être pratique d'appeler les options de configuration par nom de fonction à l'intérieur de la fonction principale, et de les définir séparément dans leurs propres sections de votre ~/.xmonad/xmonad.hs. Cela rend les grandes personnalisations comme la mise en page et les hooks de gestion plus faciles à visualiser et à maintenir.\n\nLe xmonad.hs simple ci-dessus aurait pu être écrit comme ceci :\n\n```\nimport XMonad\n\nmain = do\n  xmonad $ def\n    { terminal    = myTerminal\n    , modMask     = myModMask\n    , borderWidth = myBorderWidth\n    }\n\nmyTerminal    = \"urxvt\"\nmyModMask     = mod4Mask -- Win key or Super_L\nmyBorderWidth = 3\n```\n\nDe plus, l'ordre au niveau supérieur (main, myTerminal, myModMask etc.), ou à l'intérieur des {} n'a pas d'importance en Haskell, tant que les importations viennent en premier.\n\nL'exemple suivant est tiré du modèle de fichier de configuration de la version 0.9. Il s'agit d'un exemple des fonctions les plus courantes que l'on peut vouloir définir dans son bloc principal.\n\n```\n{\n  terminal           = myTerminal,\n  focusFollowsMouse  = myFocusFollowsMouse,\n  borderWidth        = myBorderWidth,\n  modMask            = myModMask,\n  -- numlockMask deprecated in 0.9.1\n  -- numlockMask        = myNumlockMask,\n  workspaces         = myWorkspaces,\n  normalBorderColor  = myNormalBorderColor,\n  focusedBorderColor = myFocusedBorderColor,\n\n  -- key bindings\n  keys               = myKeys,\n  mouseBindings      = myMouseBindings,\n\n  -- hooks, layouts\n  layoutHook         = myLayout,\n  manageHook         = myManageHook,\n  handleEventHook    = myEventHook,\n  logHook            = myLogHook,\n  startupHook        = myStartupHook\n}\n```\n\nLe paquet lui-même comprend également un xmonad.hs, qui est le dernier exemple officiel xmonad.hs fourni avec le module Haskell xmonad comme exemple de la façon de tout remplacer. Il ne doit pas être utilisé comme un modèle de configuration, mais comme des exemples de parties que vous pouvez choisir d'utiliser dans votre propre configuration. Il est situé dans un répertoire dépendant de l'architecture et de la version dans /usr/share/. (par exemple, find /usr/share -name xmonad.hs).\n\n"
    },
    {
      "title": "Une configuration de base du bureau",
      "level": 3,
      "content": "Dans xmonad-contrib se trouve une meilleure configuration par défaut pour une utilisation moyenne du bureau. Elle aide également à résoudre les problèmes de certains programmes modernes comme Chromium.\n\nElle peut être ajoutée comme suit\n\n```\nimport XMonad\nimport XMonad.Config.Desktop\n\nmain = xmonad desktopConfig\n    { terminal    = \"urxvt\"\n    , modMask     = mod4Mask\n    }\n```\n\n"
    },
    {
      "title": "Quitter xmonad",
      "level": 2,
      "content": "Pour terminer la session xmonad en cours, appuyez sur Mod+Shift+Q. Par défaut, Mod est la touche Alt. Pour confirmer la sortie à chaque fois,\n\n```\nxmonad.hs\n```\n\n```\n...\nimport XMonad.Prompt.ConfirmPrompt\n...\n\nmyKeys :: [(String, X ())]\nmyKeys = \n    ...\n    (\"M-S-q\", confirmPrompt defaultXPConfig \"exit\" $ io exitSuccess)\n    ...\n```\n\n"
    },
    {
      "title": "X-Selection-Paste",
      "level": 3,
      "content": "L'utilisation de xmonad centrée sur le clavier peut être accompagnée par un raccourci clavier pour coller la sélection de X.\n\nDe plus, il existe une fonction pasteSelection dans XMonad.Util.Paste qui peut être liée à une touche en utilisant une ligne comme :\n\n```\nxmonad.hs\n```\n\n```\nimport XMonad.Util.Paste -- Remember to include this line\n  \n  -- X-selection-paste buffer\n  , ((0, xK_Insert), pasteSelection)\n```\n\nEn appuyant sur la touche Insert, le tampon de la souris est maintenant collé dans la fenêtre active.\n\n- Notez que pasteSelection utilise getSelection de XMonad.Util.XSelection et est donc héritier de ses défauts.\n- getSelection \"est fondamentalement implémenté de manière incorrecte et peut, entre autres modes d'échec possibles, provoquer un blocage ou un crash\". Pour plus de détails, consultez [1].\n- Ces erreurs sont généralement très rares en pratique, mais elles existent quand même.\n\n"
    },
    {
      "title": "Raccourcis clavier",
      "level": 3,
      "content": "Les raccourcis clavier par défaut sont listés dans xmonad(1).\n\n"
    },
    {
      "title": "Utiliser des touches sans raccourcis",
      "level": 3,
      "content": "Si vous utilisez xmonad comme un gestionnaire de fenêtre autonome, vous pouvez modifier le fichier xmonad.hs pour ajouter des touches de clavier sans raccourcis. Il vous suffit de trouver le nom Xf86 de la touche (comme XF86PowerDown) et de le rechercher dans /usr/include/X11/XF86keysym.h. Cela vous donnera un code de touche (comme 0x1008FF2A) que vous pouvez utiliser pour ajouter une ligne comme la suivante dans la liste des liaisons de touches de votre xmonad.hs :\n\n```\n((0,               0x1008FF2A), spawn \"sudo systemctl suspend\")\n```\n\nVous pouvez également rechercher le nom de la touche Xf86 dans le module Graphics.X11.ExtraTypes.XF86, et utiliser sa constante KeySym (telle que xF86XK_PowerDown) au lieu d'un code de touche comme indiqué dans l'exemple précédent. Vous devrez également importer le module dans votre xmonad.hs pour que la constante key soit disponible. Consultez un exemple plus élaboré avec plusieurs clés au format utilisé par la fonction additionalKeys :\n\n```\nimport Graphics.X11.ExtraTypes.XF86\n\n...\n\nmyKeys = [\n   ((0, xF86XK_PowerDown),         spawn \"sudo systemctl suspend\")\n , ((0, xF86XK_AudioRaiseVolume),  spawn \"amixer -D pulse sset Master 10%+\")\n , ((0, xF86XK_AudioLowerVolume),  spawn \"amixer -D pulse sset Master 10%-\")\n , ((0, xF86XK_AudioMute),         spawn \"amixer -D pulse sset Master toggle\")\n , ((0, xF86XK_MonBrightnessUp),   spawn \"brightnessctl set +10%\")\n , ((0, xF86XK_MonBrightnessDown), spawn \"brightnessctl set 10%-\")\n ...\n ]\n```\n\n"
    },
    {
      "title": "Exécuter des actions X () en touchant le bord de votre écran avec votre souris",
      "level": 3,
      "content": "Avec XMonad.Hooks.ScreenCorners, les utilisateurs peuvent avoir des coins d'écran de type KDE avec XMonad.\n\n"
    },
    {
      "title": "Changer d'espace de travail avec ScreenCorners (semblable à KDE)",
      "level": 4,
      "content": "Définissez une série d'opérations dans le startupHook :\n\n```\nxmonad.hs\n```\n\n```\n...\nimport XMonad.Hooks.ScreenCorners\n...\n\nmystartupHook = do\n...\n... example ...\n     addScreenCorners [ (SCLowerLeft,  prevWS)\n                        , (SCLowerRight, nextWS)\n                        , (SCUpperLeft, spawnSelected' myAppGrid)\n                        , (SCUpperRight, goToSelected $ mygridConfig' myColorizer)\n                      ]\n...\n```\n\nPuis ajouter screenCornerEventHook à handleEventHook :\n\n```\nmyConfig = def {\n   ...\n       handleEventHook = ... <+> screenCornerEventHook <+> ...\n   ...\n   }\n```\n\nEnfin, ajoutez screenCornerLayoutHook :\n\n```\n...\n   myLayoutHook = screenCornerLayoutHook $ ......\n   ...\n   myConfig = def {\n   ...\n   layoutHook = myLayoutHook \n   ...\n   }\n```\n\n- Cette extension ajoute des coins d'écran de type KDE à XMonad.\n- En déplaçant votre curseur dans l'un de vos coins d'écran, vous pouvez déclencher une action X (), par exemple XMonad.Actions.GridSelect.goToSelected ou XMonad.Actions.CycleWS.nextWS, etc.\n\n"
    },
    {
      "title": "Augmenter le nombre d'espaces de travail",
      "level": 3,
      "content": "Par défaut, xmonad utilise un ensemble de 9 espaces de travail. Vous pouvez changer cela en modifiant le paramètre workspaces :\n\n```\nxmonad.hs\n```\n\n```\nimport XMonad\nimport XMonad.Util.EZConfig (additionalKeys)\n\nmain=do\n  xmonad $ def\n    { ...\n    , workspaces = myWorkspaces\n    , ...\n    } `additionalKeys` myAdditionalKeys\n\nmyWorkspaces = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"] ++ (map snd myExtraWorkspaces) -- you can customize the names of the default workspaces by changing the list\n\nmyExtraWorkspaces = [(xK_0, \"0\")] -- list of (key, name)\n\nmyAdditionalKeys =\n    [ -- ... your other hotkeys ...\n    ] ++ [\n        ((myModMask, key), (windows $ W.greedyView ws))\n        | (key, ws) <- myExtraWorkspaces\n    ] ++ [\n        ((myModMask .|. shiftMask, key), (windows $ W.shift ws))\n        | (key, ws) <- myExtraWorkspaces\n    ]\n```\n\n"
    },
    {
      "title": "Vérification des raccourcis clavier en double",
      "level": 3,
      "content": "Le paquet XMonad.Util.EZConfig fournit une fonction checkKeymap pour vérifier les raccourcis en double, sinon ceux-ci seront ignorés.\n\n```\nxmonad.hs\n```\n\n```\nmain = xmonad $ myConfig\n\nmyKeymap = [(\"S-M-c\", kill), ...]\nmyConfig = def {\n    ...\n    startupHook = do\n        return () >> checkKeymap myConfig myKeymap\n        ...other operation you defined here...\n    ...\n} `additionalKeysP` myKeymap\n```\n\n- return () dans l'exemple ci-dessus est très important ! Sinon, vous pourriez rencontrer des problèmes de récursion mutuelle infinie.\n- return () introduit suffisamment de paresse pour sortir de l'impasse : la définition de myConfig dépend de la définition de startupHook, qui dépend de la définition de myConfig, ..., etc.\n\n"
    },
    {
      "title": "Faire de la place pour les docks/panneaux/plateaux (Xmobar, Tint2, Conky, etc)",
      "level": 3,
      "content": "Enveloppez vos mises en page avec avoidStruts de XMonad.Hooks.ManageDocks pour un espacement automatique des docks/panneaux/tablettes :\n\n```\nimport XMonad\nimport XMonad.Hooks.ManageDocks\n\nmain=do\n  xmonad $ docks def\n    { ...\n    , layoutHook=avoidStruts $ layoutHook def\n    , manageHook=manageHook def <+> manageDocks\n    , ...\n    }\n```\n\nSi jamais vous voulez basculer les écarts, cette action peut être ajoutée à vos liaisons de touches :\n\n```\n,((modMask x, xK_b ), sendMessage ToggleStruts)\n```\n\n"
    },
    {
      "title": "Ajout de balises aux fenêtres",
      "level": 3,
      "content": "Avec XMonad.Actions.TagWindows, les utilisateurs peuvent opérer sur des fenêtres ayant les mêmes balises.\n\n```\nxmonad.hs\n```\n\n```\n...\nimport XMonad.Actions.TagWindows\n...\n\nmyKeys = \n... other key bindings ...\n-- Tag\n         --  , (\"M-C-t\", withFocused (addTag \"abc\")) -- add a specific tag \"abc\"\n         --  , (\"M-C-d\", withFocused (delTag \"abc\")) -- delete the tag \"abc\" from the focused window\n         --  , (\"M-C-h\", withTaggedGlobalP \"abc\" shiftHere) -- shift windows with tag \"abc\" here\n             , (\"M-C-a\", tagPrompt defaultXPConfig $ withFocused . addTag ) -- prompt for inputs of tag names\n             , (\"M-C-h\", tagPrompt defaultXPConfig (`withTaggedGlobalP` shiftHere))  -- shift windows with user defined tags (input) here\n             , (\"M-C-d\", tagDelPrompt defaultXPConfig)  -- delete a user-defined tag (input)\n             , (\"M-C-t\", tagPrompt defaultXPConfig  focusUpTaggedGlobal)  -- switch between windows in all workspaces with user-defined tags (input)\n             , (\"M-C-f\", tagPrompt defaultXPConfig (`withTaggedGlobal` float)) -- float windows with user-defined tags (input)\n```\n\n"
    },
    {
      "title": "Espaces de taille égale entre les fenêtres",
      "level": 3,
      "content": "Si votre objectif est d'avoir des espaces de taille égale entre les fenêtres individuelles et l'écran, le code suivant ne fonctionnera pas comme prévu :\n\n```\nlayoutHook = spacing 10 $ Tall (1 (3/100) (1/2)) ||| Full\n```\n\nAinsi, chaque fenêtre dispose de son propre espacement dans chaque direction. Si vous avez deux fenêtres côte à côte, l'espacement au milieu sera combiné, créant un espace deux fois plus grand que nécessaire.\n\nUne solution consiste à spécifier à la fois un espacement pour l'écran et pour la fenêtre, mais à n'utiliser que les marges supérieure et gauche pour l'écran et les marges inférieure et droite pour les fenêtres. Pour ce faire, modifiez le code ci-dessus en :\n\n```\nlayoutHook = spacingRaw False (Border 10 0 10 0) True (Border 0 10 0 10) True $ Tall (1 (3/100) (1/2)) ||| Full\n```\n\n"
    },
    {
      "title": "Utilisation de xmobar avec xmonad",
      "level": 3,
      "content": "xmobar est une barre de texte légère et minimaliste, conçue pour fonctionner avec xmonad. Pour utiliser xmobar avec xmonad, vous aurez besoin de deux paquets en plus du paquet xmonad. Ces paquets sont xmonad-contrib et xmobar, ou vous pouvez utiliser xmobar-gitAUR.\n\nIci, nous allons lancer xmobar depuis xmonad, qui recharge xmobar à chaque fois que vous rechargez xmonad.\n\nOuvrez ~/.xmonad/xmonad.hs dans votre éditeur préféré, et choisissez l'une des deux options suivantes :\n\n"
    },
    {
      "title": "Rapide, moins flexible",
      "level": 4,
      "content": "Importations courantes :\n\n```\nimport XMonad\nimport XMonad.Hooks.DynamicLog\n```\n\nL'action xmobar lance xmobar et renvoie une configuration modifiée qui inclut toutes les options décrites dans #Plus configurable.\n\n```\nmain = xmonad =<< xmobar def { modMask = mod4Mask {- ou toute autre configuration ici ... -}}\n```\n\n"
    },
    {
      "title": "Plus configurable",
      "level": 4,
      "content": "À partir de xmonad(-contrib) 0.9, il existe une nouvelle fonction statusBar dans XMonad.Hooks.DynamicLog. Elle vous permet d'utiliser votre propre configuration pour :\n\n- la commande utilisée pour exécuter la barre\n- Le PP qui détermine ce qui est écrit dans la barre.\n- La liaison des touches pour basculer l'écart de la barre.\n\nL'exemple suivant montre comment l'utiliser :\n\n```\n~/.xmonad/xmonad.hs\n```\n\n```\n-- Imports.\nimport XMonad\nimport XMonad.Hooks.DynamicLog\n\n-- The main function.\nmain = xmonad =<< statusBar myBar myPP toggleStrutsKey myConfig\n\n-- Command to launch the bar.\nmyBar = \"xmobar\"\n\n-- Custom PP, configure it as you like. It determines what is being written to the bar.\nmyPP = xmobarPP { ppCurrent = xmobarColor \"#429942\" \"\" . wrap \"<\" \">\" }\n\n-- Key binding to toggle the gap for the bar.\ntoggleStrutsKey XConfig {XMonad.modMask = modMask} = (modMask, xK_b)\n\n-- Main configuration, override the defaults to your liking.\nmyConfig = def { modMask = mod4Mask }\n```\n\n"
    },
    {
      "title": "Vérifier la configuration de XMobar",
      "level": 4,
      "content": "Le modèle et le xmobarrc par défaut contiennent ceci.\n\nEnfin, ouvrez ~/.xmobarrc et vérifiez que vous avez StdinReader dans le modèle et lancez le plugin. Par exemple\n\n```\n~/.xmobarrc\n```\n\n```\nConfig { ...\n       , commands = [ Run StdinReader .... ]\n         ...\n       , template = \" %StdinReader% ... \"\n       }\n```\n\nMaintenant, tout ce que vous avez à faire est de démarrer, ou de redémarrer, xmonad.\n\n"
    },
    {
      "title": "Contrôler xmonad avec des scripts externes",
      "level": 3,
      "content": "Voici quelques façons de le faire ,\n\n- utiliser l'extension xmonad suivante, XMonad.Hooks.ServerMode.\n\n- simuler des événements de pression de touche en utilisant xdotool ou des programmes similaires. Consultez ce fil de discussion sur les forums Ubuntu. La commande suivante simulerait l'appui sur la touche Super+n :\n\n```\nxdotool key Super+n\n```\n\n- wmctrl -Si vous avez configuré desktopConfig ou EwmhDesktops, c'est un utilitaire standard très facile à utiliser.\n\n"
    },
    {
      "title": "Lancement d'un autre gestionnaire de fenêtres dans xmonad",
      "level": 3,
      "content": "Si vous utilisez xmonad-gitAUR, à partir de Janvier 2011, vous pouvez redémarrer un autre gestionnaire de fenêtre depuis xmonad. Vous devez juste écrire un petit script, et ajouter des choses à votre ~/.xmonad/xmonad.hs. Voici le script.\n\n```\n~/bin/obtoxmd\n```\n\n```\n#!/bin/sh\nopenbox\nxmonad\n```\n\nEt voici les modifications que vous devez ajouter à votre ~/.xmonad/xmonad.hs :\n\n```\n~/.xmonad/xmonad.hs\n```\n\n```\nimport XMonad\n--You need to add this import\nimport XMonad.Util.Replace\n\nmain do\n    -- And this \"replace\"\n    replace\n    xmonad $ def\n    {\n    --Add the usual here\n    }\n```\n\nVous devez également ajouter le key binding suivant :\n\n```\n~/xmonad/xmonad.hs\n```\n\n```\n--Ajouter un raccourci clavier comme suit :\n((modm .|. shiftMask, xK_o ), restart \"/home/abijr/bin/obtoxmd\" True)\n```\n\nN'oubliez pas d'ajouter une virgule avant ou après et de changer le chemin pour votre chemin de script réel. Maintenant, il suffit de Mod+q (redémarrez xmonad pour rafraîchir la configuration), puis tapez Mod+Shift+o et vous devriez avoir Openbox en fonctionnement avec les mêmes fenêtres ouvertes que dans xmonad. Pour revenir à xmonad, il vous suffit de quitter Openbox. Voici un lien vers ~/.xmonad/xmonad.hs d'adamvo qui utilise cette configuration Adamvo's xmonad.hs\n\n"
    },
    {
      "title": "KDE et xmonad",
      "level": 3,
      "content": "Le wiki xmonad contient des instructions sur la façon de lancer xmonad dans KDE.\n\nC'est aussi une bonne idée de définir un raccourci clavier global dans KDE pour lancer xmonad au cas où il serait accidentellement tué ou fermé.\n\n"
    },
    {
      "title": "Désactiver plasmashell",
      "level": 4,
      "content": "Vous pourriez vouloir désactiver plasmashell (le truc de KDE5 responsable du fond d'écran, de la barre des tâches, de la zone de notification, etc.)\n\n```\ncp /etc/xdg/autostart/plasmashell.desktop ~/.config/autostart/\n```\n\nPuis éditez ~/.config/autostart/plasmashell.desktop et remplacez Exec=plasmashell par Exec=. Le résultat ressemblera à ceci :\n\n```\n~/.config/autostart/plasmashell.desktop\n```\n\n```\n[Desktop Entry]\nExec=\nName=Plasma Desktop Workspace\n... # plus de choses\n```\n\n"
    },
    {
      "title": "Mise en page de la messagerie instantanée pour Skype",
      "level": 3,
      "content": "Afin de créer une disposition de messagerie instantanée pour les nouvelles versions de Skype, le code suivant peut être utilisé :\n\n```\nxmonad.hs\n```\n\n```\n}\nmyIMLayout = withIM (1%7) skype Grid\n    where\n      skype = And (ClassName \"Skype\") (Role \"\")\n```\n\n"
    },
    {
      "title": "Exemples de configurations",
      "level": 3,
      "content": "Vous trouverez ci-dessous quelques exemples de configurations provenant d'autres utilisateurs de xmonad. N'hésitez pas à ajouter des liens vers les vôtres.\n\n- brisbin33 : : simple, utile, lisible : : config screenshot\n- jelly : : Configuration avec invite, différentes mises en page, twinview avec xmobar : : xmonad.hs\n- MrElendig : : Configuration simple, avec xmobar : : xmonad.hs, .xmobarrc, screenshot.\n- thayer : : Une configuration minimale pour la souris, idéale pour les netbooks : : configs screenshot\n- vicfryzel : : Une configuration de xmonad belle et utilisable, avec la configuration de xmobar, xinitrc, dmenu, et d'autres scripts qui rendent xmonad plus utilisable : : git repository, screenshot.\n- vogt : : Regardez la configuration d'adamvo et beaucoup d'autres dans l'archive officielle Xmonad/Config.\n- wulax : : Exemple d'utilisation de xmonad dans Xfce. : : xmonad.hs, screenshot.\n- alex-courtis : : Un xmonad propre, xmobar, media keys, screenshot, j4/dmenu ; polices rendues au DPI rapporté par le moniteur : : xmonad.hs, screenshot.\n- TobbeBob123 : : Config pour TobbeBob123 où vous pouvez voir tous les keybinding avec un simple keybinding (Mod4+s). Si vous voulez un Xmonad complet avec un thème et tout ce que vous voyez dans l'image en lien. Vous pouvez utiliser le script appelé TobbeOS. : : TobbeOS. Xmonad repository, Screenshot.\n- AzureOrange : : Configuration divisée pour xmonad construite avec stack (gaps, layouts, scratchpads, gestion des fenêtres et avalement des fenêtres etc.) avec xmobar, trayer et dmenu. : : xmonad.hs screenshot[dead link 2023-05-06 ⓘ]\n\n"
    },
    {
      "title": "Xfce 4 et xmonad",
      "level": 3,
      "content": "Utilisez xfceConfig au lieu de def après avoir importé XMonad.Config.Xfce dans ~/.xmonad/xmonad.hs, par exemple en adaptant la configuration minimale ci-dessus :\n\n```\nimport XMonad\nImportation de XMonad.Config.Xfce\n\nmain = xmonad xfceConfig\n    { terminal = \"urxvt\"\n    , modMask = mod4Mask\n    }\n```\n\nAjoutez également une entrée dans Settings > Session and Startup > Application Autostart qui exécute xmonad --replace.\n\n"
    },
    {
      "title": "Manque xmonad-x86_64-linux",
      "level": 3,
      "content": "xmonad devrait automatiquement créer le fichier xmonad-x86_64-linux (dans ~/.xmonad/). Si ce n'est pas le cas, récupérez un fichier de configuration sur le xmonad wiki ou créez votre own. Mettez le fichier .hs et tous les autres fichiers dans ~/.xmonad/ et lancez cette commande depuis le répertoire :\n\n```\nxmonad --recompile\n```\n\nMaintenant vous devriez consulter le fichier.\n\n"
    },
    {
      "title": "Problèmes avec les applications Java",
      "level": 3,
      "content": "Si vous rencontrez des problèmes, comme des fenêtres d'applications Java qui ne se redimensionnent pas, ou des menus qui se ferment immédiatement après un clic, consultez Java#Gray window, applications not resizing with WM, menus immediately closing.\n\n"
    },
    {
      "title": "Espace vide en bas de gvim ou des terminaux",
      "level": 3,
      "content": "Consultez Vim#Empty space at the bottom of gVim windows pour une solution qui fait correspondre la zone à la couleur de fond.\n\nPour rxvt-unicode, vous pouvez utiliser rxvt-unicode-patchedAUR[broken link: package not found].\n\nVous pouvez également configurer xmonad pour qu'il respecte les indications de taille, mais cela laissera un vide à la place. Consultez la documentation sur Xmonad.Layout.LayoutHints.\n\n"
    },
    {
      "title": "Chromium/Chrome ne passe pas en plein écran",
      "level": 3,
      "content": "Si Chrome ne passe pas en plein écran lorsque vous appuyez sur F11, vous pouvez utiliser l'extension XMonad.Hooks.EwmhDesktops qui se trouve dans le paquet xmonad-contrib. Ajoutez simplement l'instruction import à votre ~/.xmonad/xmonad.hs :\n\n```\nimport XMonad.Hooks.EwmhDesktops\n```\n\npuis ajoutez ewmhFullscreen . ewmh à l'endroit approprié ; par exemple :\n\n```\n...\n        main = xmonad $ ewmhFullscreen . ewmh $ def\n...\n```\n\nAprès une recompilation/redémarrage de xmonad, Chrome devrait maintenant répondre à F11 (plein écran) comme prévu.\n\n"
    },
    {
      "title": "Multitouch / touchegg",
      "level": 3,
      "content": "Touchégg interroge le gestionnaire de fenêtre pour la propriété _NET_CLIENT_LIST. (afin de récupérer la liste des fenêtres sur lesquelles il doit écouter les événements souris). Par défaut, xmonad ne fournit pas cette propriété. Pour l'activer, utilisez l'extension XMonad.Hooks.EwmhDesktops trouvée dans le paquet xmonad-contrib.\n\n"
    },
    {
      "title": "Problèmes raccourcis avec une disposition de clavier azerty",
      "level": 3,
      "content": "Les utilisateurs disposant d'un clavier à disposition azerty peuvent rencontrer des problèmes avec certains raccourcis. L'utilisation du paquet XMonad.Config.Azerty résoudra ce problème.\n\n"
    },
    {
      "title": "GNOME 3 mod4+p change la configuration de l'affichage au lieu de lancer dmenu",
      "level": 3,
      "content": "Si vous n'avez pas besoin de la possibilité de changer la configuration de l'affichage dans le centre de contrôle de gnome, exécutez simplement\n\n```\ndconf write /org/gnome/settings-daemon/plugins/xrandr/active false\n```\n\nen tant qu'utilisateur, pour désactiver le plugin xrandr qui récupère Super+p.\n\n"
    },
    {
      "title": "Chrome/Chromium n'affichant pas la couleur de bordure de fenêtre définie",
      "level": 3,
      "content": "Les fenêtres des navigateurs Chrome et Chromium n'ont pas la couleur de bordure définie par défaut mais une couleur transparente et floue. Ce problème est connu depuis longtemps time mais facile à corriger. L'activation de l'option \"Utiliser la barre de titre et les bordures du système\" dans les options du navigateur devrait le résoudre immédiatement.\n\n"
    },
    {
      "title": "Problèmes de bordure focalisée dans VirtualBox",
      "level": 3,
      "content": "Un problème connu avec Virtualbox (Ticket #6479) peut causer des problèmes avec la bordure de la fenêtre focalisée. Une solution peut être trouvée en installant un gestionnaire de composition comme xcompmgr qui remplace le comportement incorrect de vboxvideo.\n\n"
    },
    {
      "title": "Jeux Steam (Half-Life, Left 4 Dead, ...) et xmonad",
      "level": 3,
      "content": "Il semble y avoir quelques problèmes avec xmonad et les jeux basés sur le moteur Source comme Half-Life. S'ils ne démarrent pas ou restent bloqués avec un écran noir, une solution de contournement est de les démarrer en mode fenêtré. Pour ce faire, faites un clic droit sur le jeu dans votre bibliothèque Steam et choisissez Propriétés, cliquez sur Options de lancement et entrez [3] :\n\n```\n-windowed\n```\n\nUne autre solution consiste à faire flotter la fenêtre du jeu à l'aide du hook manage. Par exemple, la ligne suivante peut être utilisée pour Half-Life :\n\n```\nclassName = ? \"hl_linux\" --> doFloat\n```\n\nCeci peut également être contourné en faisant en sorte que xmonad prête attention aux indications de l'EWMH et en incluant son hook fullscreen [4] :\n\n```\nmain = xmonad $ ewmh def{ handleEventHook =\n           handleEventHook def <+> fullscreenEventHook }\n```\n\nCeci a quelques autres effets et le fait se comporter de manière plus proche des applications plein écran dans d'autres WMs.\n\n"
    },
    {
      "title": "LibreOffice - le focus bascule entre la fenêtre principale et la boîte de dialogue",
      "level": 3,
      "content": "L'interface utilisateur de LibreOffice utilise par défaut le moteur Gtk en dehors d'un environnement de bureau. Cela peut causer des problèmes avec certaines configurations de xmonad, ce qui fait que le focus bascule rapidement entre la fenêtre principale de LibreOffice et toute fenêtre de dialogue ouverte de LibreOffice. Verrouillage effectif de l'application. Dans ce cas, la variable d'environnement SAL_USE_VCLPLUGIN peut être définie pour forcer explicitement LibreOffice à utiliser un autre thème d'interface utilisateur comme indiqué dans LibreOffice#Theme. Par exemple\n\n```\nexport SAL_USE_VCLPLUGIN=gen lowriter\n```\n\npour utiliser l'interface utilisateur générale (QT).\n\n"
    },
    {
      "title": "Fenêtres de dialogue",
      "level": 4,
      "content": "IntelliJ IDEA prend mieux en charge les gestionnaires de fenêtres en pavage. Cependant, il y a encore quelques problèmes ennuyeux, dont certains ont des solutions simples :\n\n- La fenêtre de dialogue Find In Files se ferme immédiatement si le pointeur de la souris sort des limites de la fenêtre de dialogue. Cela ne se produit qu'avec la fenêtre de dialogue Find In Files, et n'est pas reproductible avec la fenêtre de dialogue Navigate to.... Le comportement de Find In Files est attendu, en supposant que la logique par défaut de xmonad est focus follows mouse. La fenêtre Find In Files se ferme lorsqu'elle perd le focus sur tous les systèmes.\n\nSolution : Vous pouvez le changer en \"épinglant\" la fenêtre contextuelle — il y a un bouton correspondant dans le coin supérieur droit [5].\n\n- Lors de l'affichage des fichiers modifiés entre les commits Git (en utilisant la boîte de dialogue Changes Between aaaa and local version bbbb), la fenêtre avec les différences au niveau du fichier s'ouvre derrière la fenêtre de dialogue.\n\n"
    },
    {
      "title": "Problèmes pour trouver les bibliothèques partagées après la mise à jour",
      "level": 3,
      "content": "L'exécutable de xmonad est situé dans ~/.xmonad/. Après la mise à jour de xmonad, un ancien exécutable peut persister et doit dans ce cas être supprimé pour que xmonad compile un nouvel exécutable. Alternativement, utilisez xmonad --recompile.\n\nLa recompilation peut être automatisée en ajoutant un hook pacman comme le suivant à /etc/pacman.d/hooks/xmonad.hook. (vous devrez peut-être d'abord créer le répertoire hooks) :\n\n```\n[Trigger]\nOperation = Upgrade\nType = Package\nTarget = xmonad\n\n[Action]\nDescription = Recompiling xmonad...\nWhen = PostTransaction\nExec = /usr/bin/sudo -u YOUR_USERNAME /usr/bin/xmonad --recompile\n```\n\nOù YOUR_USERNAME est le nom d'utilisateur à partir duquel vous exécutez xmonad.\n\nDans le cas où xmonad --recompile ne trouve aucun module (y compris XMonad lui-même), essayez de régénérer le cache de la base de données des paquets\n\n```\nsudo ghc-pkg recache\n```\n\n"
    },
    {
      "title": "Décorations cassées/manquantes de XMonad.Prompt et des fenêtres",
      "level": 3,
      "content": "XMonad utilise par défaut la police -misc-fixed-*-*-*-*-10-*-*-*-*-*-*-*. [6]. Si cette police est absente, ces fenêtres ne s'affichent pas du tout. La solution la plus simple est d'installer xorg-fonts-misc.\n\n"
    },
    {
      "title": "Voir aussi",
      "level": 2,
      "content": "- xmonad - Le site officiel de xmonad\n- xmonad.hs - Modèle xmonad.hs\n- xmonad : une visite guidée\n- dzen - Programme de messagerie et de notification d'usage général\n- dmenu - Menu dynamique X pour le lancement rapide de programmes\n- Comparison of tiling window managers - Article anglais du wiki fournissant une vue d'ensemble des principaux gestionnaires de fenêtres en pavage\n- Partagez votre bureau xmonad]\n- discussion sur le bidouillage de xmonad\n- xmonad-log-applet - Une applet pour le panneau GNOME, MATE ou Xfce.\n\n"
    }
  ]
}
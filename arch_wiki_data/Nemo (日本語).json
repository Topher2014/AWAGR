{
  "title": "Nemo (日本語)",
  "url": "https://wiki.archlinux.org/title/Nemo_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- Cinnamon\n- ファイルマネージャの機能\n- GNOME Files\n- Thunar\n- PCManFM\n\nNemo は GNOME Files のフォークです。Cinnamon デスクトップのデフォルトのファイルマネージャでもあります。Nemo は Nautilus 3.4 のコードをベースにしています。Nautilus 3.6 で type ahead find や分割ビューといった機能が削除されたことで Nemo が作成されました。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール 1.1 エクステンション\n- 2 設定 2.1 Nemo をデフォルトのファイルブラウザにする 2.2 デスクトップアイコンを表示・隠す 2.3 Nemo のデフォルトのターミナルエミュレータを変更する 2.4 \"Open in terminal\" のキーボードショートカットを変更する\n- 3 ヒントとテクニック 3.1 Nemo アクション 3.1.1 Clam スキャン 3.1.2 ファイルの移動 3.1.3 Meld による比較 3.1.4 空白を含むファイル名\n- 4 トラブルシューティング 4.1 コンソールにサムネイル生成に関するエラーが表示される 4.2 デスクトップアイコンが表示されない 4.3 (GNOME) 一つのファイルを開くとすべてのファイルが開かれる\n\n- 1.1 エクステンション\n\n- 2.1 Nemo をデフォルトのファイルブラウザにする\n- 2.2 デスクトップアイコンを表示・隠す\n- 2.3 Nemo のデフォルトのターミナルエミュレータを変更する\n- 2.4 \"Open in terminal\" のキーボードショートカットを変更する\n\n- 3.1 Nemo アクション 3.1.1 Clam スキャン 3.1.2 ファイルの移動 3.1.3 Meld による比較 3.1.4 空白を含むファイル名\n\n- 3.1.1 Clam スキャン\n- 3.1.2 ファイルの移動\n- 3.1.3 Meld による比較\n- 3.1.4 空白を含むファイル名\n\n- 4.1 コンソールにサムネイル生成に関するエラーが表示される\n- 4.2 デスクトップアイコンが表示されない\n- 4.3 (GNOME) 一つのファイルを開くとすべてのファイルが開かれる\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "公式リポジトリから nemo をインストールしてください。\n\n"
    },
    {
      "title": "エクステンション",
      "level": 3,
      "content": "Nemo に機能を追加できるプログラムがあります。そのようなことをするパッケージの一覧です:\n\n- Nemo File Roller — File Roller を Nemo に統合します。\n\n- Nemo Compare — meld を使って2つのファイルを比較するユーティリティ。\n\n- Nemo Preview — Nemo に GtkClutter と Javascript ベースのクイックプレビューを追加します。\n\n- Nemo Seahorse — GnuPG を使って OpenPGP ファイルの暗号化・復号化を可能にします。\n\n- Nemo Share — Nemo の Samba エクステンション。\n\n- Nemo Terminal — Nemo 用の組み込みターミナルウインドウ\n\n- RabbitVCS Nemo — RabbitVCS を Nemo に統合します。\n\n他のエクステンションは AUR や nemo-extensions github リポジトリ を見て下さい。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "Nemo はグラフィカルに設定をすることができますが、nautilus の設定メニューから行える設定は全てではありません。dconf-editor を使って、もっと多くのオプションが org.nemo 下で利用できます。\n\n"
    },
    {
      "title": "Nemo をデフォルトのファイルブラウザにする",
      "level": 3,
      "content": "Nemo をデフォルトのファイルブラウザにするには以下を実行してください:\n\n```\n$ xdg-mime default nemo.desktop inode/directory application/x-gnome-saved-search\n```\n\n"
    },
    {
      "title": "デスクトップアイコンを表示・隠す",
      "level": 3,
      "content": "nemo のデスクトップアイコン表示機能を有効・無効にするには、次の設定を true か false に変更してください (false で非表示、true で表示):\n\n```\n$ gsettings set org.nemo.desktop show-desktop-icons false\n```\n\n上記の設定を行うとタイル型ウィンドウマネージャ (i3 など) で表示される WARNING **: Can not determine workarea, guessing at layout という警告が消えます。\n\n"
    },
    {
      "title": "Nemo のデフォルトのターミナルエミュレータを変更する",
      "level": 3,
      "content": "デフォルトでは gnome-terminal が設定されています。このパッケージがインストールされていない場合、\"Open in terminal\" コンテキストメニューエントリを使用することはできず、Nemo からシェルスクリプトやターミナルアプリケーションを実行することもできません。\n\ngsettings を使えば、デフォルトの設定を変更してお好みのターミナルアプリケーションに設定できます。\n\n```\n$ gsettings set org.cinnamon.desktop.default-applications.terminal exec <terminal-name>\n```\n\nNemo からシェルスクリプトを実行できるようにするにはターミナルアプリケーションに渡す引数を正しく設定していることを確認してください(デフォルトでは gnome-terminal に -x を渡します)。\n\n```\n$ gsettings set org.cinnamon.desktop.default-applications.terminal exec-arg <argument>\n```\n\n```\n$ gsettings set org.cinnamon.desktop.default-applications.terminal exec urxvt\n$ gsettings set org.cinnamon.desktop.default-applications.terminal exec-arg -e\n```\n\n"
    },
    {
      "title": "\"Open in terminal\" のキーボードショートカットを変更する",
      "level": 3,
      "content": "キーボードショートカットを編集したいときは、Cinnamon デスクトップを使用している場合は /org/cinnamon/desktop/interface/can-change-accels を、Gnome デスクトップを使用している場合は /org/gnome/desktop/interface/can-change-accels を変更する必要があります。dconf-editor を使うか、以下のコードをターミナルから実行してください:\n\n```\n$ gsettings set org.cinnamon.desktop.interface can-change-accels true\n```\n\nGnome の場合は:\n\n```\n$ gsettings set org.gnome.desktop.interface can-change-accels true\n```\n\n~/.gnome2/accels/nemo を編集するか作成して、以下の行を追加してください(\"F4\" の部分はお好みのキーに変更してください):\n\n```\n~/.gnome2/accels/nemo\n```\n\n```\n(gtk_accel_path \"<Actions>/DirViewActions/OpenInTerminal\" \"F4\")\n```\n\n<Alt> や <Primary>、<Shift> が修飾キーとして使用できます(例: <Primary><Shift>t)。\n\n"
    },
    {
      "title": "Nemo アクション",
      "level": 3,
      "content": "Nemo では、ユーザーはコンテキストメニューに新しいエントリを追加することができます。ファイル /usr/share/nemo/actions/sample.nemo_action には Nemo のアクションのサンプルが含まれています。カスタムアクションファイルを配置するディレクトリは:\n\n- /usr/share/nemo/actions/ システム全体で使えるアクション\n- $HOME/.local/share/nemo/actions/ ユーザー別のアクション\n\n名前の規則に注意してください。あなたのファイルは末尾が .nemo_action でなければなりません。\n\n"
    },
    {
      "title": "Clam スキャン",
      "level": 4,
      "content": "```\n$HOME/.local/share/nemo/actions/clamscan.nemo_action\n```\n\n```\n[Nemo Action]\nName=Clam Scan\nComment=Clam Scan\n\nExec=gnome-terminal -x sh -c \"clamscan -r %F | less\"\n\nIcon-Name=bug-buddy\n\nSelection=Any\n\nExtensions=dir;exe;dll;zip;gz;7z;rar;\n```\n\n"
    },
    {
      "title": "ファイルの移動",
      "level": 4,
      "content": "```\n$HOME/.local/share/nemo/actions/archive.nemo_action\n```\n\n```\n[Nemo Action]\nActive=true\nName=Archive %N\nComment=Archiving %N will add .archive to the object.\nExec=<archive.py %F>\nSelection=S\nExtensions=any;\n```\n\n```\n$HOME/.local/share/nemo/actions/archive.py\n```\n\n```\n#! /usr/bin/python2 -OOt\nimport sys\nimport os\nimport shutil\n\nfilename = sys.argv[0]\nprint \"Running \" + filename\nprint \"With the following arguments:\"\nfor arg in sys.argv:\n    if filename == arg:\n        continue\n    else:\n        print arg\n        #os.rename('%s','%s.archive') % (arg,arg)\n        shutil.move(arg, arg+\".archive\")\n```\n\n"
    },
    {
      "title": "Meld による比較",
      "level": 4,
      "content": "```\n$HOME/.local/share/nemo/actions/compare-save-for-later.nemo_action\n```\n\n```\n[Nemo Action]\nActive=true\nName=Compare later\nComment=Save file for comparison later.\nExec=<compare.sh save %F>\nIcon-Name=meld\nSelection=S\nExtensions=any\n```\n\n```\n$HOME/.local/share/nemo/actions/compare-with-saved.nemo_action\n```\n\n```\n[Nemo Action]\nActive=true\nName=Compare with saved element\nComment=Compare %F saved file or directory.\nExec=<compare.sh compare %F>\nIcon-Name=meld\nSelection=S\nExtensions=any\n```\n\n```\n$HOME/.local/share/nemo/actions/compare.sh\n```\n\n```\n#!/bin/bash\nsavedfile=/var/tmp/compare-save-for-later.$USER\ncomparator=meld\nif [ \"$1\" == \"save\" ]; then\n\techo \"$2\" > \"$savedfile\"\nelse\n\t\"$comparator\" $(cat \"$savedfile\") \"$2\"\nfi\n```\n\n"
    },
    {
      "title": "空白を含むファイル名",
      "level": 4,
      "content": "デフォルトでは、Nemo はファイル名のエスケープをしません。つまり、複数のファイルを一度に扱うときにファイル名に空白が含まれていると上手くいきません。この問題を修正するには、Quote=double を使って下さい。\n\n"
    },
    {
      "title": "コンソールにサムネイル生成に関するエラーが表示される",
      "level": 3,
      "content": "ライセンスや特許の問題で、デフォルトでは Nemo は特定のビデオファイルのサムネイルを生成しません(例: AVC でエンコードされた mp4 や mkv ファイル)。よって、mp4 や 他のビデオファイルにおいて以下のようなエラーがコンソールに表示される場合があります:\n\n```\nCinnamonDesktop-WARNING **: Error creating thumbnail for file:///home/username/video.mp4: Unrecognized image file format\n```\n\nこれを修正するには、ビデオファイル用のサムネイラーをインストールしていることを確認してください(ファイルマネージャの機能#サムネイルプレビュー を見てください)。そして、ビデオファイルの再生に必須の GStreamer パッケージをインストールしていることを確認してください。\n\n"
    },
    {
      "title": "デスクトップアイコンが表示されない",
      "level": 3,
      "content": "Nemo v3.4.2 以降、デスクトップは nemo-desktop により管理されています。これを自動起動させるには、/usr/share/applications/nemo-autostart.desktop ファイルを ~/.config/autostart/nemo-autostart.desktop にコピーし、OnlyShowIn=X-Cinnamon; の行を削除してください。\n\n"
    },
    {
      "title": "(GNOME) 一つのファイルを開くとすべてのファイルが開かれる",
      "level": 3,
      "content": "v5.0.1 以降、Nemo は画像ビューアに複数のファイルを渡したときにソート順を維持するようになりました。これは新しい GNOME の設定で有効化/無効化できます。\n\nこれを修正するには以下を実行してください:\n\n```\n$ gsettings set org.nemo.preferences image-viewers-with-external-sort \"[]\"\n```\n\nさらなる情報については https://github.com/linuxmint/nemo/issues/2771 を見てください。\n\n"
    }
  ]
}
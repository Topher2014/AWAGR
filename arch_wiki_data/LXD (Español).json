{
  "title": "LXD (Español)",
  "url": "https://wiki.archlinux.org/title/LXD_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2021-01-30** \n\nArtículos relacionados\n\n- Linux Containers\n- Incus (Español)\n\nLXD es un es un administrador/hipervisor para contenedores (a través de LXC) y máquinas virtuales (a través de QEMU).\n\n"
    },
    {
      "title": "Instalación",
      "level": 2,
      "content": "Instale el paquete lxd, luego active lxd.socket.\n\nAlternativamente, puede activar/iniciar el lxd.service directamente, en caso de que desee que las instancias se inicien automáticamente, por ejemplo.\n\n"
    },
    {
      "title": "Contenedores sin privilegios",
      "level": 3,
      "content": "Se recomienda utilizar contenedores sin privilegios (véase Linux Containers#Privileged or unprivileged containers para obtener una explicación de la diferencia).\n\nPara esto, modifique /etc/subuid y /etc/subgid (si estos archivos no están presentes, créelos) para contener el mapeo de la asignación uid/gid en los contenedores para cada usuario que pueda ejecutar los contenedores. El siguiente ejemplo es simplemente para el superusuario root (y la unidad del sistema systemd):\n\nPuede utilizar usermod de la siguiente manera:\n\nusermod -v 1000000-1000999999 -w 1000000-1000999999 root\n\nO modifique los archivos mencionados anteriormente directamente de la siguiente manera:\n\n```\n/etc/subuid\n```\n\n```\nroot:1000000:1000000000\n```\n\n```\n/etc/subgid\n```\n\n```\nroot:1000000:1000000000\n```\n\nAhora, cada contenedor se iniciará unprivileged de forma predeterminada.\n\nPara conocer la alternativa, véase cómo configurar contenedores privilegiados.\n\n"
    },
    {
      "title": "Configurar LXD",
      "level": 3,
      "content": "En el primer arranque, es necesario configurar LXD.\n\nEjecute como superusuario:\n\n```\n# lxd init\n```\n\nEsto iniciará una configuración interactiva y guiada en el terminal, que cubre diferentes temas como almacenamientos, redes, etc.\n\nPuede encontrar una descripción general en Guía de inicio.\n\n"
    },
    {
      "title": "Accediendo a LXD como un usuario sin privilegios",
      "level": 3,
      "content": "Por defecto, el demonio LXD permite el acceso a los usuarios del grupo lxd, así que añada su usuario al grupo:\n\n```\n# usermod -a -G lxd usuario\n```\n\n"
    },
    {
      "title": "Utilización",
      "level": 2,
      "content": "LXD consta de dos partes:\n\n- el demonio (el binario lxd)\n- el cliente (el binario lxc)\n\nEl cliente se utiliza para controlar uno o varios demonios.\n\nEl cliente también se puede utilizar para controlar servidores LXD remotos.\n\n"
    },
    {
      "title": "Resumen de las órdenes",
      "level": 3,
      "content": "Puede obtener una descripción general de todas las órdenes disponibles escribiendo:\n\n```\n$ lxc\n```\n\n"
    },
    {
      "title": "Crear un contenedor",
      "level": 3,
      "content": "Puede crear un contenedor con lxc launch, por ejemplo:\n\n```\n$ lxc launch ubuntu:20.04\n```\n\nLos contenedores se basan en imágenes, que se descargan de servidores de imágenes o servidores LXD remotos.\n\nPuede ver la lista de servidores ya añadidos con:\n\n```\n$ lxc remote list\n```\n\nPuede listar todas las imágenes en un servidor con lxc image list, por ejemplo:\n\n```\n$ lxc image list images:\n```\n\nEsto le mostrará todas las imágenes en uno de los servidores predeterminados: images.linuxcontainers.org\n\nTambién puede buscar imágenes añadiendo términos como el nombre de la distribución:\n\n```\n$ lxc image list images:debian\n```\n\nLanza un contenedor con una imagen de un servidor específico con:\n\n```\n$ lxc launch servername:imagename\n```\n\nPor ejemplo:\n\n```\n$ lxc launch images:centos/8/amd64 centos\n```\n\nPara crear un contenedor Arch de amd64:\n\n```\n$ lxc launch images:archlinux/current/amd64 arch\n```\n\n"
    },
    {
      "title": "Crear una máquina virtual",
      "level": 3,
      "content": "Simplemente añada la opción --vm a lxc launch:\n\n```\n$ lxc launch ubuntu:20.04 --vm\n```\n\n- Por ahora, las máquinas virtuales admiten menos funciones que los contenedores (véase Detalles en máquinas virtuales por ejemplo).\n- Solo las variantes cloud de las imágenes oficiales activan el lxd-agent listo para usar (que es necesario para las órdenes habituales de lxc como lxc exec).Puede buscar imágenes en la nube con lxc image list images: cloud o lxc image list images: nombre-distribución cloud.Si utiliza otras imágenes o encuentra problemas, eche un vistazo a #lxd-agent dentro de una máquina virtual.\n\n"
    },
    {
      "title": "Utilizar y administrar un contenedor o VM",
      "level": 3,
      "content": "Véase \"Gestionar instancias\" en la Guía de introducción oficial de LXD.\n\n"
    },
    {
      "title": "Configuración de contenedor/VM",
      "level": 3,
      "content": "Puede añadir varias opciones a las instancias (contenedores y VM).\n\nVéase Configuración de instancias en la Guía avanzada oficial de LXD para obtener más detalles.\n\n"
    },
    {
      "title": "Acceder a los contenedores por nombre de host",
      "level": 3,
      "content": "Esto supone que está utilizando el puente predeterminado que se llama lxdbr0 y que está utilizando systemd-resolved.\n\n```\n# systemd-resolve --interface lxdbr0 --set-domain '~lxd' --set-dns $(lxc network get lxdbr0 ipv4.address | cut -d / -f 1)\n```\n\nAhora puede acceder a los contenedores por su nombre:\n\n```\n$ ping nombrecontenedor.lxd\n```\n\n"
    },
    {
      "title": "Otra solución",
      "level": 4,
      "content": "Parece que la solución systemd-resolve deja de funcionar después de un tiempo.\n\nOtra solución es utilizar systemd-networkd con el siguiente lxd.network (reemplace x y y para coincidir con la IP de su puente):\n\n```\n/etc/systemd/network/lxd.network\n```\n\n```\n[Match]\nName=lxdbr0\n\n[Network]\nDNS=10.x.y.1\nDomains=~lxd\nIgnoreCarrierLoss=yes\n\n[Address]\nAddress=10.x.y.1/24\nGateway=10.x.y.1\n```\n\n"
    },
    {
      "title": "Utilizar las aplicaciones Wayland y Xorg",
      "level": 3,
      "content": "Existen varios métodos para utilizar aplicaciones GUI dentro de contenedores, puede encontrar una descripción general en el Foro oficial de LXD.\n\nEl siguiente método otorga a los contenedores acceso a los sockets del host de Wayland (+Xwayland) o Xorg.\n\n"
    },
    {
      "title": "Añada los siguientes dispositivos a un perfil de contenedores",
      "level": 4,
      "content": "Véase también: Documentación LXD sobre dispositivos\n\nDispositivo general para la GPU:\n\n```\nmygpu:\n   type: gpu\n```\n\nDispositivo para Wayland Socket: Notas:\n\n- Ajuste la pantalla (wayland-0) en consecuencia.\n- Añada las carpetas en /mnt y /tmp dentro del contenedor, si aún no existen.\n\n```\nWaylandsocket:\n    bind: container\n    connect: unix:/run/user/1000/wayland-0\n    listen: unix:/mnt/wayland1/wayland-0\n    uid: \"1000\"\n    gid: \"1000\"\n    security.gid: \"1000\"\n    security.uid: \"1000\"\n    mode: \"0777\"\n    type: proxy\n```\n\nDispositivo para el socket Xorg (o Xwayland): 'Nota:' Ajuste el número de pantalla en consecuencia (por ejemplo, X1 en lugar de X0).\n\n```\nXsocket:\n    bind: container\n    connect: unix:/tmp/.X11-unix/X0\n    listen: unix:/mnt/xorg1/X0\n    uid: \"1000\"\n    gid: \"1000\"\n    security.gid: \"1000\"\n    security.uid: \"1000\"\n    mode: \"0777\"\n    type: proxy\n```\n\n2. Vincule los sockets a la ubicación correcta dentro del contenedor .\n\nNota: Estos scripts deben ejecutarse después de cada inicio del contenedor; puede automatizar esto con systemd, por ejemplo.\n\nShell-Script para vincular el socket Wayland:\n\n```\n#!/bin/sh\nmkdir /run/user/1000\nln -s /mnt/wayland1/wayland-0 /run/user/1000/wayland-0\n```\n\nVincula el socket Xorg (o Xwayland):\n\n```\n#!/bin/sh\nln -s /mnt/xorg1/X0 /tmp/.X11-unix/X0\n```\n\n3. Añada variables de entorno a la configuración de los usuarios dentro del contenedor.\n\nNota: Ajuste los números de pantalla y/o el nombre del archivo (.profile) según corresponda.\n\nPara Wayland:\n\n```\n$ echo \"export XDG_RUNTIME_DIR=/run/user/1000\" >> ~/.profile\n$ echo \"export WAYLAND_DISPLAY=wayland-0\" >> ~/.profile\n$ echo \"export QT_QPA_PLATFORM=wayland\" >> ~/.profile\n```\n\nPara Xorg (or Xwayland):\n\n```\n$ echo \"export DISPLAY=:0\" >> .profile\n```\n\nRecargue el .profile:\n\n```\n$ . .profile\n```\n\n4. Instale el software necesario en el contenedor.\n\n5. Inicie aplicaciones GUI.\n\nAhora debería poder iniciar aplicaciones GUI dentro del contenedor (a través del terminal, por ejemplo) y hacer que aparezcan como una ventana en la pantalla de su host.\n\nPuede probar \"glxgears\", por ejemplo.\n\n"
    },
    {
      "title": "Contenedores con privilegios",
      "level": 3,
      "content": "Note: El usuario root del contenedor es el usuario root del host.\n\nEl usuario root del contenedor es el usuario root del host.\n\nSi desea configurar un contenedor privilegiado, debe proporcionar la clave de configuración security.privileged=true.\n\nO durante la creación del contenedor:\n\n```\n$ lxc launch ubuntu:20.04 ubuntu -c security.privileged=true\n```\n\nO para un contenedor ya existente, puede editar la configuración:\n\n```\n$ lxc config edit ubuntu\n```\n\n```\nname: ubuntu\nprofiles:\n- default\nconfig:\n  ...\n  security.privileged: \"true\"\n  ...\n```\n\n"
    },
    {
      "title": "lxd-agent dentro de una máquina virtual",
      "level": 3,
      "content": "Dentro de algunas imágenes de máquinas virtuales, el lxd-agent no está activado de forma predeterminada.\n\nEn este caso, debe activarlo manualmente, por ejemplo, montando un recurso compartido de red 9p. Esto requiere acceso a la consola con un usuario válido.\n\nInicie sesión con lxc console y reemplace nombre-máquinavirtual en consecuencia:\n\n```\n$ lxc console nombre-máquinavirtual\n```\n\nInicie sesión como root:\n\n```\n$ su root\n```\n\nMonte el recurso compartido de red:\n\n```\n$ mount -t 9p config /mnt/\n```\n\nVaya a la carpeta y ejecute el script de instalación (esto activará el agente lxd dentro de la VM):\n\n```\n$ cd /mnt/\n$ ./install.sh\n```\n\nDespués de una instalación exitosa, reinicie con:\n\n```\n$ reboot\n```\n\nLuego, el lxd-agent estará disponible y lxc exec debería funcionar.\n\n"
    },
    {
      "title": "Verificar la configuración del kernel",
      "level": 3,
      "content": "Por defecto, el kernel de Arch Linux está compilado correctamente para contenedores de Linux y su interfaz LXD. Sin embargo, si está utilizando un kernel personalizado o ha cambiado las opciones del kernel, es posible que el kernel esté configurado incorrectamente. Verifique que su kernel esté configurado correctamente:\n\n```\n$ lxc-checkconfig\n```\n\n"
    },
    {
      "title": "Los límites de recursos no se aplican cuando se ven desde dentro de un contenedor",
      "level": 3,
      "content": "Instale lxcfs y inicie lxcfs.service.\n\nLXD deberá reiniciarse. Active lxcfs.service para que el servicio se inicie en el momento del arranque.\n\n"
    },
    {
      "title": "Falla el inicio de una máquina virtual",
      "level": 3,
      "content": "Si observa el error: Error: Required EFI firmware settings file missing: /usr/share/ovmf/x64/OVMF_VARS.ms.fd\n\nArch Linux no distribuye el firmware ovmf firmado para inicio seguro, así que para arrancar máquinas virtuales debe desactivar el arranque seguro por el momento.\n\n```\n$ lxc launch ubuntu:18.04 test-vm --vm -c security.secureboot=false\n```\n\nEsto también se puede añadir al perfil predeterminado haciendo:\n\n```\n$ lxc profile set default security.secureboot=false\n```\n\n"
    },
    {
      "title": "Sin IPv4 con systemd-networkd",
      "level": 3,
      "content": "A partir de la versión 244.1, systemd detecta si los contenedores pueden escribir en /sys. Si es así, udev se inicia automáticamente y rompe IPv4 en contenedores sin privilegios. Véase commit bf331d8 y el debate en linuxcontainers.\n\nEn los contenedores creados a partir de 2020, ya debería haber un anulador de systemd.networkd.service para solucionar este problema, debe crearlo si no es así:\n\n```\n/etc/systemd/system/systemd-networkd.service.d/lxc.conf\n```\n\n```\n[Service]\nBindReadOnlyPaths=/sys\n```\n\nTambién podría solucionar este problema estableciendo raw.lxc: lxc.mount.auto = proc:rw sys:ro en el perfil del contenedor para asegurarse de que /sys es de solo lectura para todo el contenedor, aunque esto podría ser problemático, según el debate vinculado arriba.\n\n"
    },
    {
      "title": "Desinstalar",
      "level": 2,
      "content": "Detenga y desactive lxd.service y lxd.socket. Luego desinstale el paquete lxd.\n\nSi desinstaló el paquete sin desactivar el servicio, es posible que tenga un enlace simbólico roto en /etc/systemd/system/multi-user.wants/lxd.service.\n\nSi desea eliminar todos los datos:\n\n```\n# rm -r /var/lib/lxd\n```\n\nSi utilizó alguna de las configuraciones de red de ejemplo, debería eliminarla también.\n\n"
    },
    {
      "title": "Véase también",
      "level": 2,
      "content": "- Página oficial de LXD\n- Documentación oficial\n- Guía de inicio\n- Guía avanzada\n- Foro oficial\n- La página en GitHub de LXD\n- Tutoriales en el foro de LXD\n- Notas de las versiones en el foro de LXD\n\n"
    }
  ]
}
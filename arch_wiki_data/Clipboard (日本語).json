{
  "title": "Clipboard (日本語)",
  "url": "https://wiki.archlinux.org/title/Clipboard_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- ターミナルからテキストをコピー\n- Firefox#中クリックの動作\n- GTK#マウスの貼り付け機能を無効化\n- Vim#クリップボード\n\nWikipedia より:\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 歴史\n- 2 セレクション\n- 3 中クリックの動作 3.1 全般 3.1.1 PRIMARY のクリア 3.1.2 sxhkd を使用する 3.2 アプリケーション固有\n- 4 ツール\n- 5 クリップボードマネージャ\n- 6 参照\n\n- 3.1 全般 3.1.1 PRIMARY のクリア 3.1.2 sxhkd を使用する\n- 3.2 アプリケーション固有\n\n- 3.1.1 PRIMARY のクリア\n- 3.1.2 sxhkd を使用する\n\n"
    },
    {
      "title": "歴史",
      "level": 2,
      "content": "カットバッファ が導入されたのは X10 (1985) でした。カットバッファは任意のテキストを保存する制限付きのバッファで、様々なアプリケーションによって使われました。しかしながら、カットバッファは使い物にならず実装も統一されてなかったので、セレクションが導入されました。久しくカットバッファは非推奨となっていますが、(xterm など) アプリケーションによってはカットバッファのサポートがまだされていることがあります。あまり好ましいことではないので、カットバッファもそれをサポートしているアプリケーションもどちらも推奨されません。\n\n"
    },
    {
      "title": "セレクション",
      "level": 2,
      "content": "Freedesktop.org は、主要な二つの 選択 について次のように説明しています:[1]\n\nXorg 用のプログラムの大多数、例えば Qt や GTK アプリケーションなどは、この動作に従います。ICCCM では SECONDARY 選択も定義されていますが、その用途については合意が得られていません。名称にかかわらず、これら三つの選択は基本的に \"クリップボード\" と同じものです。従来の \"カットバッファ\"システムでは、任意のアプリケーションがカットバッファに保存されたデータを変更できましたが、新しい選択システムでは、一度に一つのアプリケーションだけが選択を制御または \"所有\" できます。これにより、選択の動作における不整合を防いでいます。\n\n多くのプログラムのデフォルトのショートカット一覧をキーボードショートカットのページで参照してください。\n\n選択プロトコルによると、テキストは 貼り付けられる までコピーされない ことを理解しておくことも重要です。例えば、ターミナルウィンドウ内の単語を選択した後にターミナルを閉じてしまうと、別の場所に貼り付けようとしても機能しません。これは、ターミナルが閉じられた時点で、テキストがどこにもコピーされていないためです。ターミナルを閉じた後も単語を保持したい場合は、クリップボードマネージャをインストールすることを検討してください。\n\n"
    },
    {
      "title": "中クリックの動作",
      "level": 2,
      "content": "以下は、中クリックによるコピー&ペーストの動作を PRIMARY から変更するもので、中クリックを無効にしたり、新しいタブで開いたりスクロールしたりといった他の機能を変更したりすることはありません。\n\n"
    },
    {
      "title": "PRIMARY のクリア",
      "level": 4,
      "content": "スクリプトを実行する\n\n```\n#!/bin/sh\nwhile true; do\n    xsel -fin </dev/null\ndone\n```\n\n"
    },
    {
      "title": "sxhkd を使用する",
      "level": 4,
      "content": "sxhkd を使用して、設定ファイルに以下を追加します。\n\n```\nbutton2\n    echo -n | xclip -in\n```\n\n"
    },
    {
      "title": "アプリケーション固有",
      "level": 3,
      "content": "- GTK — GTK#マウス中ボタンでのペーストを無効化を参照\n- Firefox — Firefox#中クリックの動作を参照\n- LibreOffice — Tools > Options > LibreOffice > View > Mouse から無効にできます。\n\n"
    },
    {
      "title": "ツール",
      "level": 2,
      "content": "この章では、クリップボードを操作するためのコマンドラインツールを紹介します。\n\n- sselp — シンプルな X セレクションプリンター。 X 選択を stdout に出力します。\n\n- xclip — 軽量な、コマンドラインベースのクリップボードインターフェイス。\n\n- xsel — X セレクションの中身を取得・設定するためのコマンドラインプログラム。\n\n- wl-clipboard — Wayland コンポジタ用のシンプルなコピー/ペーストツール\n\n"
    },
    {
      "title": "クリップボードマネージャ",
      "level": 2,
      "content": "この章では、クリップボード履歴や同期などの追加機能を提供するクリップボードマネージャの一覧を示します。\n\n- Anamnesis — 全てのクリップボード履歴を保存しフルテキスト検索のインターフェースを備えたクリップボードマネージャ。コマンドライン、GUI 両方で使用可能。\n\n- Autocutsel — PRIMARY, CLIPBOARD とカットバッファの選択を同期するコマンドラインとデーモンのインターフェイス。\n\n- Clipboard — 複数の異なるクリップボード、固定クリップボード、および正規表現選択を備えたコマンドラインベースのの使いやすいクリップボードマネージャ。\n\n- Clipboard Indicator — GNOME Shell のクリップボードマネージャ拡張。トップパネルにクリップボードのインジケータを追加して、クリップボードの履歴をキャッシュします。\n\n- Clipcat — Rust で書かれたクリップボードマネージャー\n\n- ClipIt — Parcellite に機能の追加とバグフィックスをしたフォーク。\n\n- Clipman — Xfce のクリップボードマネージャ。通常は中身が失われてしまうアプリケーションの終了をしてもクリップボードの中身を保持し続けます。テキストと画像を処理することができ、正規表現にマッチさせて特定のテキストを選択したときにアクションを実行する機能があります。\n\n- ClipManager — Python と Qt で書かれたクロスプラットフォームのクリップボードマネージャ。\n\n- Clipmenu — Dmenu ベースのクリップボードマネージャ。\n\n- Clipmon — Wayland 用の軽量クリップボードマネージャ。アプリケーションが独自にクリップボードから貼り付けたときに通知を送信する監視ツールとして計画されています。(この機能は開発中です)\n\n- clipsim — C で書かれたシンプルで高速な X クリップボードマネージャ。\n\n- Clipster — 軽量でコマンドラインによって操作できるクリップボードマネージャ。Python で書かれています。\n\n- Clipton — Rofi をフロントエンドとしたクリップボードマネージャ。\n\n- CopyQ — 検索・編集できる履歴や、カスタムアクション、コマンドラインサポートのある賢いクリップボードマネージャ。\n\n- Gnome Clipboard History — Gnome Clipboard History は、コピーした内容に簡単にアクセスでき、検索可能な履歴パネルに保存する GNOME 拡張機能のクリップボードマネージャです。\n\n- Glipper — プラグインをサポートする高機能な GNOME 向けクリップボードマネージャ。\n\n- GPaste — 次世代の Parcellite になることを目指しているクリップボード管理システム。モジュール構造を取っており複数のライブラリとデーモンに分割されています。GNOME Shell 拡張と CLI インターフェイスを提供。\n\n- Greenclip — rofi ベースのシンプルなクリップボードマネージャ\n\n- Klipper — KDE デスクトップ向けのフル機能のクリップボードマネージャ。\n\n- Parcellite — 軽量かつ高機能なクリップボードマネージャ。\n\n- Qlipper — 軽量なクロスプラットフォームのクリップボード履歴アプレット、Qt ベース。\n\n- xclipboard — 公式の X クリップボードコマンドラインクライアント。\n\n- xcmenu — ウィンドウマネージャのユーザーのために開発されたクリップボードシンクロナイザー。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Cut-and-paste in X\n- X Selections, Cut Buffers, and Kill Rings.\n- X11: How does “the” clipboard work?\n- Wayland's Primary selection protocol\n\n"
    }
  ]
}
{
  "title": "Vulkan (Español)",
  "url": "https://wiki.archlinux.org/title/Vulkan_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2024-02-04** \n\nNote: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nDesde Wikipedia (Ingles):\n\nMás información en la pagina web de Khronos.\n\n"
    },
    {
      "title": "Instalación",
      "level": 2,
      "content": "- Vulkan no está actualmente soportado oficialmente por Bumblebee [1] pero funciona con primus_vk o primus-vk-gitAUR.\n- El controlador Vulkan de Radeon ahora es compatible con PRIME [2].\n\nPara ejecutar una aplicación Vulkan, necesitarás instalar el paquete vulkan-icd-loader (y lib32-vulkan-icd-loader si también quieres ejecutar aplicaciones de 32 bits), así como controladores Vulkan para tu(s) tarjeta(s) gráfica(s). Hay varios paquetes que proporcionan un vulkan-driver:\n\n- Intel: vulkan-intel (o lib32-vulkan-intel)\n- NVIDIA: nvidia-utils (o lib32-nvidia-utils)\n- AMD: hay tres implementaciones, que podrían instalarse simultáneamente: vulkan-radeon (o lib32-vulkan-radeon) - RADV (parte del proyecto Mesa) amdvlk (o lib32-amdvlk) - AMDVLK Abierto (mantenido por AMD) vulkan-amdgpu-proAUR (o lib32-vulkan-amdgpu-proAUR) - AMDVLK Cerrado (mantenido por AMD)\n\n- vulkan-radeon (o lib32-vulkan-radeon) - RADV (parte del proyecto Mesa)\n- amdvlk (o lib32-amdvlk) - AMDVLK Abierto (mantenido por AMD)\n- vulkan-amdgpu-proAUR (o lib32-vulkan-amdgpu-proAUR) - AMDVLK Cerrado (mantenido por AMD)\n\nLos siguientes son rasterizadores de software, para que pueda utilizarlo en dispositivos que no proporcionan soporte Vulkan.\n\n- Lavapipe: vulkan-swrast (o lib32-vulkan-swrast)\n- SwiftShader: swiftshader-gitAUR\n\nPara el desarrollo de aplicaciones Vulkan, instale vulkan-headers, y opcionalmente vulkan-validation-layers, vulkan-man-pagesAUR y vulkan-tools (puedes encontrar la herramienta vulkaninfo aquí).\n\n"
    },
    {
      "title": "Verificación",
      "level": 2,
      "content": "Para ver qué implementaciones de Vulkan están instaladas actualmente en tu sistema, utiliza el siguiente comando:\n\n```\n$ ls /usr/share/vulkan/icd.d/\n```\n\nPara asegurarte de que Vulkan funciona con tu hardware, instale vulkan-tools y use el comando vulkaninfo para obtener información relevante sobre su sistema. Si obtienes información sobre tu tarjeta gráfica, sabrás que Vulkan está funcionando.\n\n```\n$ vulkaninfo\n```\n\n"
    },
    {
      "title": "Alternar entre dispositivos",
      "level": 3,
      "content": "En sistemas con múltiples GPUs puede que necesites forzar el uso de una GPU específica. vkdevicechooserAUR proporciona una forma sencilla de hacerlo. Se instalará en el directorio de capas Vulkan del sistema, /usr/share/vulkan/implicit_layer.d/.\n\nPara ejecutar una aplicación Vulkan forzando el uso de un dispositivo específico, lánzala con estas variables de entorno:\n\n```\n$ ENABLE_DEVICE_CHOOSER_LAYER=1 VULKAN_DEVICE_INDEX=device_index\n```\n\nSustituye device_index por el GPU id del dispositivo deseado según vulkaninfo (sin el layer activado).\n\n"
    },
    {
      "title": "Alternar entre controladores AMD",
      "level": 3,
      "content": "En los sistemas AMD, es válido tener varios controladores Vulkan instalados a la vez, y puede ser conveniente cambiar entre ellos.\n\n"
    },
    {
      "title": "Selección mediante variable de entorno",
      "level": 4,
      "content": "A partir de amdvlk 2021.Q3.4, se ha implementado una nueva lógica de intercambio que establece AMDVLK como valor predeterminado y exige que o bien\n\n- establezca AMD_VULKAN_ICD=RADV para cambiar del valor por defecto AMDVLK,\n- o configure globalmente DISABLE_LAYER_AMD_SWITCHABLE_GRAPHICS_1=1 para volver a activar el método de carga ICD que se indica a continuación.\n\nCuando DISABLE_LAYER_AMD_SWITCHABLE_GRAPHICS_1=1, puede elegir su controlador preferido configurando la variable de entorno. VK_DRIVER_FILES. Por ejemplo, para ejecutar Steam con el controlador RADV se hace lo siguiente\n\n```\n$ VK_DRIVER_FILES=/usr/share/vulkan/icd.d/radeon_icd.i686.json:/usr/share/vulkan/icd.d/radeon_icd.x86_64.json steam\n```\n\nPara evitar fallos con juegos de 32 bits, es posible asignar la variante de 32 bits y la variante de 64 bits a la variable de entorno.\n\n"
    },
    {
      "title": "Selección mediante prefijos AMD Vulkan",
      "level": 4,
      "content": "AMD Vulkan Prefixes es un script para cambiar entre las tres implementaciones de Vulkan. Instale amd-vulkan-prefixesAUR, y antepone tu aplicación con el prefijo que quieras. Los ejecutables proporcionados son vk_radv, vk_amdvlk, y vk_pro. Por ejemplo, para utilizar los controladores cerrados AMDVLK:\n\n```\n$ vk_pro command\n```\n\n"
    },
    {
      "title": "Rendimiento del software",
      "level": 2,
      "content": "Note: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nPuedes instalar el rasterizador Vulkan por software conocido como lavapipe, por ejemplo para depurar problemas de hardware: vulkan-swrast (o lib32-vulkan-swrast para la versión de 32 bits).\n\nEl siguiente ejemplo muestra la ejecución de vulkaninfo con las variables de entorno necesarias para forzar un renderizado por software completo para Vulkan y OpenGL (con __GLX_VENDOR_LIBRARY_NAME=mesa asegurando que el comando también funciona para usuarios que utilizan PRIME):\n\n```\n$ LIBGL_ALWAYS_SOFTWARE=1 __GLX_VENDOR_LIBRARY_NAME=mesa VK_DRIVER_FILES=/usr/share/vulkan/icd.d/lvp_icd.i686.json:/usr/share/vulkan/icd.d/lvp_icd.x86_64.json vulkaninfo\n```\n\n"
    },
    {
      "title": "Base de datos de hardware Vulkan",
      "level": 2,
      "content": "La \"Vulkan Hardware Database\" proporciona combinaciones GPU/driver reportadas por los usuarios. Es posible proporcionar información propia utilizando vulkan-caps-viewer-waylandAUR o vulkan-caps-viewer-x11AUR.\n\n"
    },
    {
      "title": "Solución de Problemas",
      "level": 2,
      "content": "Note: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\n"
    },
    {
      "title": "NVIDIA - vulkan is not working and can not initialize",
      "level": 3,
      "content": "Check if you have any other vulkan driver installed, it may prevent NVIDIA's vulkan driver from being detected.\n\nAlternatively set the environment variable VK_DRIVER_FILES to /usr/share/vulkan/icd.d/nvidia_icd.json.\n\nIf you have a dual-graphics system, like NVIDIA Optimus, ensure that your system is using the graphics card that you installed Vulkan drivers for.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nNote: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\n```\noptimus-manager --status\n```\n\n```\nOptimus Manager (Client) version 1.4\n\nCurrent GPU mode : nvidia\nGPU mode requested for next login : no change\nGPU at startup : integrated\nTemporary config path: no\n```\n\n"
    },
    {
      "title": "No device for the display GPU found. Are the intel-mesa drivers installed?",
      "level": 3,
      "content": "Try to list both the intel_icd and primus_vk_wrapper configurations in VK_DRIVER_FILES\n\n```\nexport VK_DRIVER_FILES=/usr/share/vulkan/icd.d/intel_icd.x86_64.json:/usr/share/vulkan/icd.d/nv_vulkan_wrapper.json\n```\n\n"
    },
    {
      "title": "AMDGPU - ERROR_INITIALIZATION_FAILED after vulkaninfo",
      "level": 3,
      "content": "If after running vulkaninfo on AMD card from GCN1 or GCN2 family you got error message like:\n\n```\nERROR at /build/vulkan-tools/src/Vulkan-Tools-1.2.135/vulkaninfo/vulkaninfo.h:240:vkEnumerateInstanceExtensionProperties failed with ERROR_INITIALIZATION_FAILED\n```\n\nThen check if you have correctly enable support for this models of graphics cards (AMDGPU#Enable Southern Islands (SI) and Sea Islands (CIK) support).\n\nOne of possibility to check if gpu drivers are correctly loaded is lspci -k, after running this command check kernel driver of your gpu. It should be amdgpu.\n\n```\n$ lspci -k\n```\n\n```\n...\n01:00.0 VGA compatible controller: Advanced Micro Devices, Inc. [AMD/ATI] Curacao PRO [Radeon R7 370 / R9 270/370 OEM]\n\tSubsystem: Gigabyte Technology Co., Ltd Device 226c\n\tKernel driver in use: amdgpu\n\tKernel modules: radeon, amdgpu\n...\n```\n\nSome forum threads about this problem: [3] [4]\n\n"
    },
    {
      "title": "AMDGPU - Hangs when playing DirectX Vulkan games",
      "level": 3,
      "content": "Radeon-Vulkan seems to cause driver and/or GPU hangs when playing some games with usage of DirectX Vulkan.\n\n```\nkernel: [drm:amdgpu_dm_atomic_commit_tail [amdgpu]] *ERROR* Waiting for fences timed out!\nkernel: [drm:amdgpu_job_timedout [amdgpu]] *ERROR* ring gfx_0.0.0 timeout, signaled ..., emitted ...\nkernel: [drm:amdgpu_job_timedout [amdgpu]] *ERROR* Process information: process ... pid ... thread dxvk-submit pid\n...\n```\n\nSwitching to or enabling AMDVLK seems to fix the problem as discovered in BBS#275991.\n\n"
    },
    {
      "title": "AMDGPU - Crashes with DirectX Vulkan games",
      "level": 3,
      "content": "AMDVLK has been reported as causing crashes by multiple users (see BBS#284118, BBS#283008, BBS#274737): switching to or enabling the Radeon-Vulkan driver fixes the issue.\n\n"
    },
    {
      "title": "AMDGPU - Vulkan applications launch slowly",
      "level": 3,
      "content": "If you install cuda, you might find Vulkan applications, for example, Chromium, launch slowly. It's because nvidia-utils provides an Vulkan driver and Vulkan would try nvidia drivers before radeon drivers. To solve it, set the environment variable VK_DRIVER_FILES to /usr/share/vulkan/icd.d/radeon_icd.i686.json:/usr/share/vulkan/icd.d/radeon_icd.x86_64.json.\n\n"
    },
    {
      "title": "AMDGPU - Found no drivers!",
      "level": 3,
      "content": "When encountering Found no drivers!:\n\n```\n$ vulkaninfo\n```\n\n```\nWARNING: [Loader Message] Code 0 : terminator_CreateInstance: Failed to CreateInstance in ICD 0.  Skipping ICD.\nERROR: [Loader Message] Code 0 : terminator_CreateInstance: Found no drivers!\nCannot create Vulkan instance.\nThis problem is often caused by a faulty installation of the Vulkan driver or attempting to use a GPU that does not support Vulkan.\nERROR at /usr/src/debug/vulkan-tools/Vulkan-Tools-1.3.269/vulkaninfo/./vulkaninfo.h:688:vkCreateInstance failed with ERROR_INCOMPATIBLE_DRIVER\n```\n\nAMD has regularly dropped support for pre-Polaris and up to Vega. If your GPU support was removed from amdvlk, uninstall it and install vulkan-radeon.\n\n"
    }
  ]
}
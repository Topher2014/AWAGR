{
  "title": "Autofs (Русский)",
  "url": "https://wiki.archlinux.org/title/Autofs_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "AutoFS даёт возможность автоматического монтирования съёмных носителей и сетевых ресурсов при вставке или обращении к ним.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет autofsAUR.\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "AutoFS использует для конфигурирования шаблоны, расположенные в /etc/autofs. Основной шаблон называется auto.master, он может указывать на один или несколько других шаблонов для конкретных типов носителей.\n\n- Откройте /etc/autofs/auto.master своим любимым редактором. Вы увидите что-то подобное:\n\n```\n/etc/autofs/auto.master\n```\n\n```\n#/media /etc/autofs/auto.media\n```\n\nПервое значение в каждой строке определяет базовый каталог, в который носители будут монтироваться, второе значение - шаблон который будет использован. По умолчанию базовый путь /media, но вы можете изменить путь на любое другое значение по вашему желанию. Например:\n\n```\n/etc/autofs/auto.master\n```\n\n```\n/media/misc     /etc/autofs/auto.misc     --timeout=5\n/media/net      /etc/autofs/auto.net      --timeout=60\n```\n\nБазовый каталог будет создан, если он не существует. Он станет точкой монтирования, отображающей в себе динамически подключаемые носители, что означает, что существующее содержимое базового каталога будет недоступно, пока autofs работает. Однако это обратимо, так что если вы случайно настроили автомонтирование в непустой каталог, то можно просто прописать другой путь в auto.master и перезапустить AutoFS — содержимое существующего каталога вернётся на место.\n\nЕсли вы всё равно хотите автомонтирование в непустой каталог и при этом иметь доступ к его содержимому даже во время работы autofs, вы можете настроить autofs на другой каталог (например, /var/autofs/net) и создать символические ссылки на неё:\n\n```\n# ln -s /var/autofs/net/share_name /media/share_name\n```\n\nВ качестве альтернативы вы можете настроить монтирование носителей в конкретные каталоги вместо использования общего каталога:\n\n```\n/etc/autofs/auto.master\n```\n\n```\n/-     /etc/autofs/auto.template\n```\n\n```\n/etc/autofs/auto.template\n```\n\n```\n/path/to/folder     -options :/device/path\n/home/user/usbstick  -fstype=auto,async,nodev,nosuid,umask=000  :/dev/sdb1\n```\n\n- Откройте файл /etc/nsswitch.conf и добавьте запись для автоматического монтирования:\n\n```\nautomount: files\n```\n\n- Когда вы закончите настраивать шаблоны (см. ниже), запустите и включите службу autofs.service.\n\nТеперь устройства автоматически монтируются при обращении и остаются примонтированными всё то время, пока вы их используете.\n\n"
    },
    {
      "title": "Съёмные носители",
      "level": 3,
      "content": "Съемным устройствам назначаются имена блочных устройств в соответствии со следующим доступным местом, например если /dev/sd{a,b,c} уже заняты, съёмный носитель подключится как блочное устройство /dev/sdd. Вместо назначения точки монтирования на основе ненадежного пути к блочному устройству более надежным подходом является использование UUID или PARTUUID съемного носителя в качестве местоположения в map-файле.\n\nНапример, чтобы примонтировать определённый USB-диск в путь /mnt/black, настройте файл шаблона и map-файл:\n\n```\n/etc/autofs/auto.master\n```\n\n```\n# основной шаблон\n/mnt     /etc/autofs/auto.mnt   # [опции тут]\n```\n\nИспользуйте blkid чтобы найте UUID нужного раздела, затем сгенерируйте map-файл:\n\n```\n# _ID=$( blkid --output value --match-tag PARTUUID /dev/sdXY )\n # printf \"%s %s\\n\" \"black -fstype=auto :PARTUUID=\" \"${_ID}\" >/etc/autofs/auto.mnt\n```\n\n"
    },
    {
      "title": "Монтирование NFS",
      "level": 3,
      "content": "AutoFS предоставляет способ автоматического обнаружения и монтирования NFS-ресурсов на удалённых серверах (шаблон конфигурирования сетевых ресурсов /etc/autofs/auto.net был удалён в autofs5). Чтобы включить автоматическое обнаружение и монтирование сетевых ресурсов со всех доступных серверов без необходимости дополнительного конфигурирования, вам необходимо добавить следующее в файл /etc/autofs/auto.master:\n\n```\n/net -hosts --timeout=60\n```\n\nК примеру, есть удалённый сервер fileserver (название каталога является именем хоста сервера) с ресурсом NFS, который называется /home/share, вы можете получить доступ к ресурсу просто набрав:\n\n```\n# cd /net/fileserver/home/share\n```\n\nОпция -hosts использует механизм, похожий на команду showmount, для обнаружения удалённых ресурсов. Вы можете посмотреть экспортированные ресурсы с помощью этой команды:\n\n```\n# showmount <имясервера> -e\n```\n\nЗамените <имясервера> на имя вашего собственного сервера.\n\n"
    },
    {
      "title": "Ручная настройка NFS",
      "level": 4,
      "content": "Чтобы примонтировать NFS-ресурс file_server, располагаемый по удалённому пути /srv/shared_dir, в локальный путь /mnt/foo, добавьте новый файл конфигурации, например file_server.autofs:\n\n```\n/etc/autofs/auto.master.d/file_server.autofs\n```\n\n```\n/mnt   /etc/autofs/auto.file_server --timeout 60\n```\n\n```\n/etc/autofs/auto.file_server\n```\n\n```\nfoo  -rw,soft,rsize=8192,wsize=8192 file_server:/srv/shared_dir\n```\n\n"
    },
    {
      "title": "Одиночные ресурсы",
      "level": 4,
      "content": "Добавьте в /etc/autofs/auto.master:\n\n```\n/media/[мой_сервер] /etc/autofs/auto.[мой_сервер] --timeout 60 --browse\n```\n\nгде --timeout определяет, сколько секунд ждать перед размонтированием. Опция --browse создаёт пустые каталоги для каждой точки монтирования для избегания таймаута, если не удаётся связаться с сетевым ресурсом.\n\nЗатем создайте файл /etc/autofs/auto.[мой_сервер]\n\n```\n[любое_имя] -fstype=cifs,[другие_опции] ://[удалённый_сервер]/[имя_удалённого_ресурса]\n```\n\nМожно указать имя пользователя и пароль для общего ресурса в опциях:\n\n```\n[любое_имя] -fstype=cifs,username=[имя_пользователя],password=[пароль],[другие_опции] ://[remote_server]/[имя_удалённого_ресурса]\n```\n\n"
    },
    {
      "title": "Несколько ресурсов",
      "level": 4,
      "content": "Вы можете указать несколько общих ресурсов в /etc/autofs/auto.[мой_сервер], например:\n\n```\n[любое_имя] -fstype=cifs,[другие_опции] /photos ://[удалённый_сервер]/photos /music ://[удалённый_сервер]/music /video ://[удалённый_сервер]/video\n```\n\n"
    },
    {
      "title": "Автообнаружение",
      "level": 4,
      "content": "Смотрите комментарии в /etc/autofs/auto.smb.\n\n"
    },
    {
      "title": "FTP и SSH (через Fuse)",
      "level": 3,
      "content": "Доступ к удалённым FTP- и SSH-серверам может быть легко получен с AutoFS через FUSE, слой виртуальной файловой системы.\n\n"
    },
    {
      "title": "Удалённые FTP",
      "level": 4,
      "content": "Во-первых, установите пакет curlftpfs.\n\nЗагрузите модуль fuse:\n\n```\n# modprobe fuse\n```\n\nСоздайте файл /etc/modules-load.d/fuse.conf с содержимым fuse для загрузки его при каждом запуске компьютера.\n\nДалее, добавьте новую запись для FTP-серверов в /etc/autofs/auto.master:\n\n```\n/media/ftp        /etc/autofs/auto.ftp    --timeout=60\n```\n\nСоздайте файл /etc/autofs/auto.ftp и добавьте сервер в формате ftp://myuser:mypassword@host:port/path:\n\n```\nservername -fstype=curl,rw,allow_other,nodev,nonempty,noatime    :ftp\\://myuser\\:mypassword\\@remoteserver\n```\n\nЕсли Вы хотите немного больше безопасности, можете создать файл ~root/.netrc и указать пароли там. Пароли по-прежнему написаны в текстовом формате, но Вы можете задать права 600, и команда df их не покажет (неважно, примонтирован сервер или нет). Этот способ также менее чувствителен к специальным символам (которых иначе необходимо избегать) в паролях. Придерживайтесь такого формата:\n\n```\nmachine remoteserver  \nlogin myuser\npassword mypassword\n```\n\nСтрочка в /etc/autofs/auto.ftp выглядит как эта, без имени пользователя и пароля:\n\n```\nservername -fstype=curl,allow_other    :ftp\\://remoteserver\n```\n\nСоздайте файл /sbin/mount.curl с кодом:\n\n```\n/sbin/mount.curl\n```\n\n```\n#! /bin/sh\n curlftpfs $1 $2 -o $4,disable_eprt\n```\n\nСоздайте файл /sbin/umount.curl с кодом:\n\n```\n/sbin/umount.curl\n```\n\n```\n#! /bin/sh\n fusermount -u $1\n```\n\nУстановите права для обоих файлов:\n\n```\n# chmod 755 /sbin/mount.curl\n# chmod 755 /sbin/umount.curl\n```\n\nПосле перезапуска Ваш новый FTP-сервер должен быть доступен через /media/ftp/servername.\n\n"
    },
    {
      "title": "Удалённые SSH",
      "level": 4,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nЗдесь базовые инструкции по доступу к удалённой файловой системе через SSH с помощью AutoFS.\n\nУстановите пакет sshfs.\n\nЗагрузите модуль fuse:\n\n```\n# modprobe fuse\n```\n\nСоздайте файл /etc/modules-load.d/fuse.conf с содержимым fuse чтобы загружать его при каждом запуске системы, если вы не создали ранее.\n\nУстановите openssh.\n\nСгенерируйте ключ SSH:\n\n```\n$ ssh-keygen\n```\n\nКогда генератор запросит фразу-пароль, просто нажмите ENTER. Использование ключей SSH без фразы-пароля менее безопасно, однако запуск AutoFS с паролем приводит к некоторым дополнительным трудностям, которые (пока) не были освещены в этой статье.\n\nДалее, скопируйте публичный ключ на удалённый SSH сервер:\n\n```\n$ ssh-copy-id username@remotehost\n```\n\nСкопируйте личный ключ в домашнюю директорию пользователя root, чтобы AutoFS могла его найти:\n\n```\n# sudo cp ~/.ssh/id_rsa /root/.ssh/id_rsa\n```\n\nВышеприведённое работает, если AutoFS запускается с правами root и по умолчанию не имеет доступа в домашнюю директорию пользователя, содержащую личный ключ.\n\nКак root убедитесь, что вы можете войти на сервер:\n\n```\n# ssh username@remotehost\n```\n\nСоздайте новый вход для сервера SSH в /etc/autofs/auto.master:\n\n```\n/media/ssh\t\t/etc/autofs/auto.ssh\t--timeout=60\n```\n\nСоздайте файл /etc/autofs/auto.ssh и добавьте SSH:\n\n```\n/etc/autofs/auto.ssh\n```\n\n```\nservername     -fstype=fuse,rw,allow_other,IdentityFile=/home/username/.ssh/id_rsa :sshfs\\#username@host\\:/\n```\n\nПосле перезапуска Ваш сервер SSH должен быть доступен через /media/ssh/servername.\n\n"
    },
    {
      "title": "MTP",
      "level": 2,
      "content": "Media Transfer Protocol (MTP) используется на некоторых устройствах Android.\n\nУстановите пакет mtpfs.\n\nСоздайте новую запись для MTP в /etc/autofs/auto.misc:\n\n```\nandroid -fstype=fuse,allow_other,umask=000     :mtpfs\n```\n\n"
    },
    {
      "title": "Решение проблем и советы",
      "level": 2,
      "content": "Эта секция содержит несколько решений самых распространённых проблем с AutoFS.\n\n"
    },
    {
      "title": "Using NIS",
      "level": 3,
      "content": "AutoFS с версии 5.0.5 имеет более продвинутую поддержку NIS. Чтобы использовать AutoFS вместе с NIS, добавьте yp: в начало имён шаблонов в /etc/autofs/auto.master:\n\n```\n/home   yp:auto_home    --timeout=60 \n/sbtn   yp:auto_sbtn    --timeout=60\n+auto.master\n```\n\nВ более ранних версиях NIS (до 5.0.4), вам нужно добавить nis в /etc/nsswitch.conf:\n\n```\nautomount: files nis\n```\n\n"
    },
    {
      "title": "Опциональные параметры",
      "level": 3,
      "content": "Вы можете установить параметры, такие как timeout, на общесистемном уровне для всех медиаустройств AutoFS в /etc/default/autofs:\n\n- Откройте файл /etc/default/autofs и отредактируйте строку OPTIONS:\n\n```\nOPTIONS='--timeout=5'\n```\n\n- Чтобы сделать возможным ведение логов (по умолчанию его нет), добавьте --verbose в строку OPTIONS в /etc/default/autofs, например:\n\n```\nOPTIONS='--verbose --timeout=5'\n```\n\nПосле перезапуска демона autofs вы увидите подробный вывод в состоянии юнита или журнале.\n\n"
    },
    {
      "title": "Распознавание нескольких устройств",
      "level": 3,
      "content": "Если Вы используете несколько устройств USB и хотите легко отсоединять их, Вы можете использовать AutoFS чтобы определять точки монтирования и udev чтобы давать имена Вашим устройствам USB. Посмотрите udev#О правилах udev для инструкций по настройке правил udev.\n\n"
    },
    {
      "title": "Права доступа AutoFS",
      "level": 3,
      "content": "Если AutoFS не работает правильно, убедитесь в том, что права доступа для файлов шаблонов установлены правильно, иначе AutoFS не будет запускаться. Это может случиться, если Вы сделали резервную копию способом, который не сохраняет права. Вот как должны быть установлены права доступа для файлов конфигурации:\n\n- 0644 - /etc/autofs/auto.master\n- 0644 - /etc/autofs/auto.media\n- 0644 - /etc/autofs/auto.misc\n- 0644 - /etc/conf.d/autofs\n\nВ общем, скрипты (такие как вышеупомянутый auto.net) должны быть исполняемыми, а списки монтируемых устройств не должны.\n\nЕсли Вы получаете ошибки в /var/log/daemon.log, подобные этим, значит у Вас проблемы с правами доступа:\n\n```\nMay  7 19:44:16 peterix automount[15218]: lookup(program): lookup for petr failed\nMay  7 19:44:16 peterix automount[15218]: failed to mount /media/cifs/petr\n```\n\n"
    },
    {
      "title": "Проблемы с fusermount",
      "level": 3,
      "content": "В некоторых версиях util-linux у вас может не получиться размонтировать файловую систему fuse, которую примонтировал autofs, даже с опцией \"user=\". Смотрите обсуждение здесь: https://sourceforge.net/p/fuse/mailman/fuse-devel/thread/k3a8pi%2457r%241%40ger.gmane.org/\n\n"
    },
    {
      "title": "Отладка проблем с автомонтированием",
      "level": 3,
      "content": "Для более удобной отладки вы можете запустить automount на переднем плане (не как демон).\n\nОстановите службу autofs.service, затем выполните:\n\n```\n# automount -f -v\n```\n\nИли если вы хотите больше отладочной информации:\n\n```\n# automount -f --debug\n```\n\n"
    },
    {
      "title": "Альтернативы",
      "level": 2,
      "content": "- Systemd может автоматически монтировать файловые системы по запросу; смотрите see здесь для описания и статью sshfs как пример.\n- Thunar Volume Manager — система автомонтирования для пользователей файлового менеджера Thunar.\n- PCManFM — легковесный файловый менеджер с встроенной поддержкой удалённых общих ресурсов.\n- udisks — минималистичная служба автоматического монтирования дисков.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Информация об использовании FTP и SFTP с AutoFS основана на этой статье из Gentoo Wiki: https://web.archive.org/web/20130414074212/http://en.gentoo-wiki.com/wiki/Mounting_SFTP_and_FTP_shares\n- Больше информации о SSH можно найти на страницах SSH и SSH Keys этого wiki.\n- Ubuntu's Autofs help wiki: https://help.ubuntu.com/community/Autofs\n- Опции монтирования, специфичные для определённых файловых систем: mount(8) § FILESYSTEM-SPECIFIC MOUNT OPTIONS\n- Опции монтирования, специфичные для fuse: mount.fuse(8)\n\n"
    }
  ]
}
{
  "title": "Dm-crypt (Português)/Criptografando um sistema de arquivos não raiz",
  "url": "https://wiki.archlinux.org/title/Dm-crypt_(Portugu%C3%AAs)/Criptografando_um_sistema_de_arquivos_n%C3%A3o_raiz",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Os seguintes exemplos são para criptografar um sistema de arquivos secundário, não raiz, com dm-crypt.\n\n"
    },
    {
      "title": "Visão geral",
      "level": 2,
      "content": "Criptografar um sistema de arquivos secundário normalmente protege somente dados sensíveis, enquanto deixa o sistema operacional e programas sem encriptação. Isto é somente útil para dispositivos removíveis, como um USB, para então este ser usado em outros computadores com segurança. Também, é possível criptografar conjuntos separados de dados de acordo com quem possui acesso.\n\nDevido ao dm-crypt ser uma camada de encriptação a nível de blocos, ele somente criptografa os dispositivos, partições e dispositivos de loop. Para criptografar arquivos indíviduais é necessário uma camada de encriptação a nível de sistema de arquivos, como eCryptfs or EncFS. Veja Criptografia de dados em repouso para informações gerais sobre como proteger dados privados.\n\n"
    },
    {
      "title": "Partição",
      "level": 2,
      "content": "Este exemplo detalha a encriptação da partição /home, mas pode ser aplicado para qualquer outra partição similar, não raiz, que contém dados do usuário.\n\nPrimeiro tenha certeza que a partição está vazia (sem sistema de arquivos). Delete a partição e crie uma nova se ela possui um sistema de arquivos. Então apague com segurança, veja apagando o disco com segurança.\n\nCrie a partição que vai conter o container criptografado.\n\nEntão configure o cabeçalho LUKS com:\n\n```\n# cryptsetup opções luksFormat dispositivo\n```\n\nMude dispositivo para a nova partição. Veja Opções de encriptação para o modo LUKS para detalhes tais como as opções disponíveis.\n\nPara acessar a partição criptografada, desbloqueie ela com o mapeador de dispositivos, usando:\n\n```\n# cryptsetup open dispositivo nome\n```\n\nDepois de desbloquear a partição, ela estará disponível em /dev/mapper/nome. Agora crie um sistema de arquivos de sua escolha com:\n\n```\n# mkfs.tipo_do_sistema_de_arquivos /dev/mapper/nome\n```\n\nMonte o sistema de arquivos em /home, ou se deve ser somente acessível a um usuário em /home/nome do usuário, veja #Montando e desmontando manualmente.\n\n"
    },
    {
      "title": "Montando e desmontando manualmente",
      "level": 3,
      "content": "Para montar a partição:\n\n```\n# cryptsetup open dispositivo nome\n# mount -t tipo_do_sistema_de_arquivos /dev/mapper/nome /mnt/home\n```\n\nPara desmontar:\n\n```\n# umount /mnt/home\n# cryptsetup close nome\n```\n\n"
    },
    {
      "title": "Desbloqueio e montagem automatizados",
      "level": 3,
      "content": "Existem três diferentes soluções para automaticamente desbloquear a partição e montar seu sistema de arquivos.\n\n"
    },
    {
      "title": "Na inicialização do sistema",
      "level": 4,
      "content": "Usando o arquivo de configuração /etc/crypttab, o desbloqueio ocorre no momento de inicialização fazendo uso do parsing automático do systemd. Esta é a solução recomendada se você deseja usar uma partição home comum para os diretórios de todos os usuários ou automaticamente montar outro dispositivo de bloco encriptado.\n\nVeja Dm-crypt/Configuração do sistema#crypttab para referências e Montando na inicialização do sistema para um exemplo prático.\n\n"
    },
    {
      "title": "No login do usuário",
      "level": 4,
      "content": "Usando pam_exec é possível desbloquear (cryptsetup open) a partição no login do usuário: esta é a solução recomendada se deseja um diretório home de somente um usuário em uma partição. Veja dm-crypt/Montagem no login.\n\nO desbloqueio no login do usuário também é possível com pam_mount.\n\n"
    },
    {
      "title": "Dispositivo de loop",
      "level": 2,
      "content": "Existem dois métodos para usar um dispositivo de loop como um container criptografado, um usando losetup diretamente e outro não.\n\n"
    },
    {
      "title": "Sem losetup",
      "level": 3,
      "content": "Usar diretamente o losetup pode ser evitado completamente ao fazer o seguinte[1]:\n\n```\n$ dd if=/dev/urandom of=grande_segredo.img bs=100M count=1 iflag=fullblock\n$ cryptsetup luksFormat grande_segredo.img\n```\n\nNeste caso cryptsetup vai encontrar um dispositivo de loop livre, adicionar o arquivo para ele, e também desanexá-lo quando cryptsetup close for invocado.\n\nTenha certeza de não omitir a opção iflag=fullblock, de outro modo dd pode retornar uma leitura parcial. Veja dd#Leitura parcial para detalhes.\n\nAntes de executar cryptsetup, veja Opções de encriptação para o modo LUKS e cifras criptográficas e modos de operação primeiro para selecionar configurações adicionais do seu interesse.\n\nAs instruções para abrir o dispositivo e criar o sistema de arquivos são do mesmo jeito que em #Partição.\n\nO procedimento de montagem e desmontagem manual é igual a #Montando e desmontando manualmente.\n\n"
    },
    {
      "title": "Com losetup",
      "level": 3,
      "content": "Um dispositivo de loop permite mapear um dispositivo de bloco para um arquivo com a ferramenta padrão do util-linux losetup. O arquivo pode então conter um sistema de arquivos, que pode ser usado como qualquer outro. Vários usuários conhecem TrueCrypt como uma ferramenta para criar containers criptografados. É possível conseguir essa mesma funcionalidade com um sistema de arquivos de looback criptografado com LUKS, como é mostrado no exemplo a seguir.\n\nPrimeiro, crie um container criptografado com dd, usando um gerador de números aleatórios apropriado:\n\n```\n# dd if=/dev/urandom of=grande_segredo.img bs=100M count=1 iflag=fullblock\n```\n\nO arquivo grande_segredo.img vai ser criado com o tamanho de 100 mebibytes.\n\nDepois, crie um dispositivo de nó, agora podemos montar/usar nosso container:\n\n```\n# losetup /dev/loop0 grande_segredo.img\n```\n\nA partir de agora, o procedimento é o mesmo que o especificado em #Partição, exceto pelo fato que o container já está com dados aleatórios e não será necessário apagar com segurança.\n\n"
    },
    {
      "title": "Montando e desmontando manualmente",
      "level": 4,
      "content": "Para desmontar o container:\n\n```\n# umount /mnt/segredo\n# cryptsetup close segredo\n# losetup -d /dev/loop0\n```\n\nPara montar o container novamente:\n\n```\n# losetup /dev/loop0 grande_segredo.img\n# cryptsetup open /dev/loop0 segredo\n# mount -t ext4 /dev/mapper/segredo /mnt/segredo\n```\n\n"
    }
  ]
}
{
  "title": "GStreamer (日本語)",
  "url": "https://wiki.archlinux.org/title/GStreamer_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "GStreamer は GObject の型システムを使って C プログラミング言語で書かれたパイプラインベースのマルチメディアフレームワークです。\n\nプログラマーは GStreamer を使うことで、単純な音声再生や動画再生から録画・録音、ストリーミング、編集まで、様々なメディア処理コンポーネントを作成することができます。パイプライン設計により、動画エディタやストリーミングメディアの配信プログラム、メディアプレイヤーまで幅広いマルチメディアアプリケーションの基礎となります。\n\nクロスプラットフォームになるように設計されているので Linux (x86, PowerPC, ARM), Solaris (Intel, SPARC), macOS, Microsoft Windows, OS/400 上で動作します。GStreamer には Python, C++, Perl, GNU Guile (guile), Ruby などのプログラミング言語用のバインディングが用意されています。GStreamer はフリーソフトウェアであり、GNU Lesser General Public License でライセンスされています。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 Usage 2.1 gst-launch-1.0 の使用方法 2.2 gst-discoverer-1.0 の使用方法\n- 3 統合 3.1 PulseAudio 3.2 PipeWire 3.3 KDE / Phonon の統合 3.4 ハードウェアアクセラレーション 3.4.1 VA-API のサポート状況を確認する 3.4.2 NVDECODE/NVENCODE サポートを確認する 3.4.3 デコーダーランクを設定する\n- 4 参照\n\n- 2.1 gst-launch-1.0 の使用方法\n- 2.2 gst-discoverer-1.0 の使用方法\n\n- 3.1 PulseAudio\n- 3.2 PipeWire\n- 3.3 KDE / Phonon の統合\n- 3.4 ハードウェアアクセラレーション 3.4.1 VA-API のサポート状況を確認する 3.4.2 NVDECODE/NVENCODE サポートを確認する 3.4.3 デコーダーランクを設定する\n\n- 3.4.1 VA-API のサポート状況を確認する\n- 3.4.2 NVDECODE/NVENCODE サポートを確認する\n- 3.4.3 デコーダーランクを設定する\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "gstreamer パッケージをインストールしてください。\n\nGStreamer を便利にするには、必要なプラグインパッケージをインストールして下さい。各プラグインの機能のリストについては、公式ドキュメント を参照してください。\n\n- gst-libav - 多くのデコーダとエンコーダが含まれている Libav-based ベースのプラグイン。\n- gst-plugins-bad - 品質テストやドキュメントが必要とされるプラグイン。\n- gst-plugins-base - 重要で典型的な基本セット。\n- gst-plugins-good - LGPL ライセンスで配布されている高品質のプラグイン。\n- gst-plugins-ugly - 配布に問題がある高品質のプラグイン。\n\n"
    },
    {
      "title": "gst-launch-1.0 の使用方法",
      "level": 3,
      "content": "GStreamer の便利なツールに gst-launch-1.0(1) コマンドがあります。これは GStreamer のパイプラインを作成するための非常に多機能なコマンドラインツールです。これは FFmpeg コマンドと非常によく似ており、多くのことができます。以下はその例です。\n\nMP4 ファイルを MKV に変換する。\n\n```\n$ gst-launch-1.0 filesrc location=source.mp4 ! qtdemux name=demux matroskamux name=mux ! filesink location=dest.mkv  demux.audio_0 ! queue ! aacparse ! queue ! mux.audio_0  demux.video_0 ! queue ! h264parse ! queue ! mux.video_0\n```\n\n"
    },
    {
      "title": "gst-discoverer-1.0 の使用方法",
      "level": 3,
      "content": "もう一つの有用なツールは gst-discoverer-1.0(1) で、これは FFmpeg の ffprobe(1) に相当します。\n\nビデオファイルの情報を取得する。\n\n```\n$ gst-discoverer-1.0 file.mp4\n```\n\n```\nProperties:\n  Duration: 0:02:55.613000000\n  Seekable: yes\n  Live: no\n  container: Quicktime\n    audio: MPEG-4 AAC\n      Stream ID: c910ef2fa357f9f4ad365aebc98cfca88d23fdca99d832645f5113efa43b0cd3/002\n      Language: <unknown>\n      Channels: 2 (front-left, front-right)\n      Sample rate: 44100\n      Depth: 16\n      Bitrate: 125588\n      Max bitrate: 125588\n    video: H.264 (Constrained Baseline Profile)\n      Stream ID: c910ef2fa357f9f4ad365aebc98cfca88d23fdca99d832645f5113efa43b0cd3/001\n      Width: 192\n      Height: 144\n      Depth: 24\n      Frame rate: 15000/1001\n      Pixel aspect ratio: 1/1\n      Interlaced: false\n      Bitrate: 107884\n      Max bitrate: 107884\n```\n\n"
    },
    {
      "title": "PulseAudio",
      "level": 3,
      "content": "PulseAudio のサポートは gst-plugins-good パッケージによって提供されます。\n\n"
    },
    {
      "title": "PipeWire",
      "level": 3,
      "content": "PipeWire のサポートは gst-plugin-pipewire パッケージで提供されます。\n\n"
    },
    {
      "title": "KDE / Phonon の統合",
      "level": 3,
      "content": "KDE#Phonon を見て下さい。\n\n"
    },
    {
      "title": "ハードウェアアクセラレーション",
      "level": 3,
      "content": "参照 ハードウェアビデオアクセラレーション\n\nGStreamer は、正しい API [1] を自動的に検出して使用します。システムの インストール に応じて、次のようになります:\n\n- VA-API サポート用の gst-plugin-va\n- NVDECODE/NVENCODE サポート用の gst-plugins-bad および nvidia-utils\n\nパッケージをインストールした後に新しい要素が表示されない場合は、プラグインレジストリを削除して再構築することをお勧めします。通常はこれで十分です。\n\n```\n$ rm ~/.cache/gstreamer-1.0/registry.*.bin\n```\n\nGstreamer は次回の呼び出し時にレジストリを再構築します。これには通常数秒かかります。\n\n"
    },
    {
      "title": "VA-API のサポート状況を確認する",
      "level": 4,
      "content": "VA-API サポートを確認するには:\n\n```\n$ gst-inspect-1.0 va\n```\n\n```\nPlugin Details:\n  Name                     va\n  Description              VA-API codecs plugin\n  Filename                 /usr/lib/gstreamer-1.0/libgstva.so\n  Version                  version\n  License                  LGPL\n  Source module            gst-plugins-bad\n  Documentation            https://gstreamer.freedesktop.org/documentation/va/\n  Source release date      date\n  Binary package           Arch Linux gst-plugins-bad version\n  Origin URL               https://archlinux.org/\n\n  vaav1dec: VA-API AV1 Decoder\n  vacompositor: VA-API Video Compositor\n  vadeinterlace: VA-API Deinterlacer\n  vah264dec: VA-API H.264 Decoder\n  vah264enc: VA-API H.264 Encoder\n  vah264lpenc: VA-API H.264 Low Power Encoder\n  vah265dec: VA-API H.265 Decoder\n  vah265enc: VA-API H.265 Encoder\n  vah265lpenc: VA-API H.265 Low Power Encoder\n  vajpegdec: VA-API JPEG Decoder\n  vampeg2dec: VA-API Mpeg2 Decoder\n  vapostproc: VA-API Video Postprocessor\n  vavp8dec: VA-API VP8 Decoder\n  vavp9dec: VA-API VP9 Decoder\n\n  14 features:\n  +-- 14 elements\n```\n\n```\n$ gst-inspect-1.0 vaapi\n```\n\n```\nPlugin Details:\n  Name                     vaapi\n  Description              VA-API based elements\n  Filename                 /usr/lib/gstreamer-1.0/libgstvaapi.so\n  Version                  version\n  License                  LGPL\n  Source module            gstreamer-vaapi\n  Documentation            https://gstreamer.freedesktop.org/documentation/vaapi/\n  Source release date      date\n  Binary package           gstreamer-vaapi\n  Origin URL               https://archlinux.org/\n\n  vaapiav1dec: VA-API AV1 decoder\n  vaapidecodebin: VA-API Decode Bin\n  vaapih264dec: VA-API H264 decoder\n  vaapih264enc: VA-API H264 encoder\n  vaapih265dec: VA-API H265 decoder\n  vaapih265enc: VA-API H265 encoder\n  vaapijpegdec: VA-API JPEG decoder\n  vaapijpegenc: VA-API JPEG encoder\n  vaapimpeg2dec: VA-API MPEG2 decoder\n  vaapimpeg2enc: VA-API MPEG-2 encoder\n  vaapioverlay: VA-API overlay\n  vaapipostproc: VA-API video postprocessing\n  vaapisink: VA-API sink\n  vaapivc1dec: VA-API VC1 decoder\n  vaapivp8dec: VA-API VP8 decoder\n  vaapivp9dec: VA-API VP9 decoder\n  vaapivp9enc: VA-API VP9 encoder\n\n  17 features:\n  +-- 17 elements\n```\n\n"
    },
    {
      "title": "NVDECODE/NVENCODE サポートを確認する",
      "level": 4,
      "content": "NVDECODE/NVENCODE の対応状況を確認するには:\n\n```\n$ gst-inspect-1.0 nvcodec\n```\n\n```\nPlugin Details:\n  Name                     nvcodec\n  Description              GStreamer NVCODEC plugin\n  Filename                 /usr/lib/gstreamer-1.0/libgstnvcodec.so\n  Version                  version\n  License                  LGPL\n  Source module            gst-plugins-bad\n  Source release date      date\n  Binary package           GStreamer Bad Plugins (Arch Linux)\n  Origin URL               https://archlinux.org/\n\n  cudadownload: CUDA downloader\n  cudaupload: CUDA uploader\n  nvautogpuh264enc: NVENC H.264 Video Encoder Auto GPU select Mode\n  nvautogpuh265enc: NVENC H.265 Video Encoder Auto GPU select Mode\n  nvav1dec: NVDEC AV1 Decoder\n  nvcudah264enc: NVENC H.264 Video Encoder CUDA Mode\n  nvcudah265enc: NVENC H.265 Video Encoder CUDA Mode\n  nvh264dec: NVDEC h264 Video Decoder\n  nvh264enc: NVENC H.264 Video Encoder\n  nvh264sldec: NVDEC H.264 Stateless Decoder\n  nvh265dec: NVDEC h265 Video Decoder\n  nvh265enc: NVENC HEVC Video Encoder\n  nvh265sldec: NVDEC H.265 Stateless Decoder\n  nvjpegdec: NVDEC jpeg Video Decoder\n  nvmpeg2videodec: NVDEC mpeg2video Video Decoder\n  nvmpeg4videodec: NVDEC mpeg4video Video Decoder\n  nvmpegvideodec: NVDEC mpegvideo Video Decoder\n  nvvp8dec: NVDEC vp8 Video Decoder\n  nvvp8sldec: NVDEC VP8 Stateless Decoder\n  nvvp9dec: NVDEC vp9 Video Decoder\n  nvvp9sldec: NVDEC VP9 Stateless Decoder\n\n  21 features:\n  +-- 21 elements\n```\n\n"
    },
    {
      "title": "デコーダーランクを設定する",
      "level": 4,
      "content": "一部の NVIDIA ユーザーは gst-libav が nvcodec デコーダよりも Libav デコーダを優先してしまい、ハードウェアアクセラレーションを阻害してしまうことがあります。その為 GST_PLUGIN_FEATURE_RANK があります。環境変数 を使ってデコーダーのランク付けを行い、この問題を緩和することができます。詳しくは ドキュメント の \"GST_PLUGIN_FEATURE_RANK\" をご覧ください。例えば:\n\n```\nGST_PLUGIN_FEATURE_RANK=nvmpegvideodec:MAX,nvmpeg2videodec:MAX,nvmpeg4videodec:MAX,nvh264sldec:MAX,nvh264dec:MAX,nvjpegdec:MAX,nvh265sldec:MAX,nvh265dec:MAX,nvvp9dec:MAX\n```\n\nAV1 ハードウェアをサポートしていない場合や、無効にしたい場合、上記のリストに avdec_av1:NONE と av1dec:NONE を追加して下さい。(例えば webkit2gtk 上の YouTube などで) 無効にできます。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- サウンドシステム\n- http://gstreamer.freedesktop.org/\n\n"
    }
  ]
}
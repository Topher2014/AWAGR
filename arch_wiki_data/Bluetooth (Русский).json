{
  "title": "Bluetooth (Русский)",
  "url": "https://wiki.archlinux.org/title/Bluetooth_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Bluetooth мышь\n- Bluetooth клавиатура\n- Bluetooth наушники\n- Blueman\n- ObexFTP\n\nBluetooth — стандарт для беспроводного соединения малой дальности сотовых телефонов, компьютеров и других электронных устройств. В Linux канонической реализацией стека протоколов Bluetooth является BlueZ.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "1. Установите пакет bluez, который предоставляет стек протоколов Bluetooth.\n1. Установите bluez-utils, предоставляющий утилиту bluetoothctl. Также можно установить bluez-deprecated-tools, который содержит устаревшие инструменты BlueZ.\n1. Универсальный драйвер Bluetooth находится в модуле ядра btusb. Проверьте, что он загружен. Если нет, то загрузите его вручную.\n1. Запустите и включите службу bluetooth.service.\n\n- По умолчанию демон Bluetooth разрешит использовать устройства bnep0 только пользователям, входящим в системную группу lp. Добавьте себя в эту группу, если вы собираетесь использовать Bluetooth. Вы можете изменить требуемую группу в файле /etc/dbus-1/system.d/bluetooth.conf.\n- Некоторые адаптеры Bluetooth встроены в платы Wi-Fi (например, Intel Centrino[устаревшая ссылка 2023-05-06 ⓘ]). В этих случаях необходимо, чтобы сперва была включена плата Wi-Fi (обычно при помощи сочетания клавиш на ноутбуке), после чего ядро сможет увидеть адаптер Bluetooth.\n- Некоторые карты Bluetooth (например, Broadcom) конфликтуют с сетевыми адаптерами. В этом случае вам необходимо удостовериться, что устройство Bluetooth подключается до начала загрузки сетевых служб.\n- Некоторые утилиты вроде hcitool и hciconfig объявлены устаревшими и больше не поставляются в пакете bluez-utils. Так как они не получают обновления, рекомендуется избегать их использования. Если они вам всё ещё нужны, установите bluez-deprecated-tools. Подробнее смотрите FS#53110 и Bluez mailing list.\n- Начиная с этого коммита, bluez-obex и bluez-mesh отделены от пакета bluez. Поэтому, если вы планируете передавать файлы по Bluetooth, также установите bluez-obex.\n\n"
    },
    {
      "title": "Консольные",
      "level": 4,
      "content": "- bluetoothctl — Сопряжение устройств через командную строку является одним из самых простых и надёжных вариантов.\n\n- bluetuith — TUI-менеджер bluetooth для облегчения сопряжения и управления устройствами/адаптерами, с передачей файлов OBEX и поддержкой мыши.\n\n"
    },
    {
      "title": "Графические",
      "level": 4,
      "content": "Следующие пакеты позволяют настраивать Bluetooth с помощью графического интерфейса.\n\n- GNOME Bluetooth — Инструмент Bluetooth в GNOME. gnome-bluetooth-3.0 предоставляет бэкенд (gnome-bluetooth — старая версия) gnome-shell предоставляет апплет мониторинга статуса gnome-control-center предоставляет графический интерфейс настройки, для открытия которого можно ввести Bluetooth в поиске или выполнить команду gnome-control-center bluetooth. Также можно использовать команду bluetooth-sendto напрямую для отправки файлов на удалённое устройство. nautilus-bluetoothAUR добавляет пункт отправки по Bluetooth в контекстное меню файлов Для получения файлов откройте панель настроек Bluetooth; принимать файлы можно только при открытых настройках. Для добавления пункта отправки файла по Bluetooth в контекстном меню Thunar смотрите инструкции здесь (укажите команду bluetooth-sendto %F).\n\n- gnome-bluetooth-3.0 предоставляет бэкенд (gnome-bluetooth — старая версия)\n- gnome-shell предоставляет апплет мониторинга статуса\n- gnome-control-center предоставляет графический интерфейс настройки, для открытия которого можно ввести Bluetooth в поиске или выполнить команду gnome-control-center bluetooth.\n- Также можно использовать команду bluetooth-sendto напрямую для отправки файлов на удалённое устройство.\n- nautilus-bluetoothAUR добавляет пункт отправки по Bluetooth в контекстное меню файлов\n- Для получения файлов откройте панель настроек Bluetooth; принимать файлы можно только при открытых настройках.\n- Для добавления пункта отправки файла по Bluetooth в контекстном меню Thunar смотрите инструкции здесь (укажите команду bluetooth-sendto %F).\n\n- Bluedevil — Инструмент Bluetooth в KDE. Если нет иконки в Dolphin и системном трее, включите её в настройках трея или добавьте виджет. Настроить Bluedevel и обнаружить устройства Bluetooth можно кликом по иконке. Интерфейс также доступен через настройки KDE.\n\n- Blueberry — Инструмент в Linux Mint, надстройка над GNOME Bluetooth, работает во всех средах рабочего стола. Blueberry не поддерживает приём файлов через Obex Object Push.\n\n- Blueman — Полнофункциональный менеджер Bluetooth.\n\n- ObexFTP — Инструмент для обмена файлами с устройствами через OBEX.\n\n- Overskride — Простой, но мощный клиент bluetooth.\n\n"
    },
    {
      "title": "Сопряжение",
      "level": 2,
      "content": "Этот раздел описывает прямую настройку bluez5 через утилиту командной строки bluetoothctl. Это необязательно, если вы используете какой-нибудь другой инструмент (например, GNOME Bluetooth).\n\nТочная процедура зависит от особенностей конкретного устройства; эта инструкция описывает сопряжение с устройством при помощи bluetoothctl лишь в общих чертах.\n\nЗапустите интерактивную команду bluetoothctl. После этого можно ввести help для получения списка доступных команд.\n\n1. (необязательно) Выберите контроллер по умолчанию командой select MAC-адрес.\n1. (необязательно) Включите питание контроллера, введя power on, если он выключен. По умолчанию он включен; смотрите #Состояние питания адаптера по умолчанию.\n1. Введите devices, чтобы увидеть MAC-адрес устройства для сопряжения.\n1. Войдите в режим обнаружения устройств при помощи команды scan on, если нужного вам устройства нет в списке.\n1. Включите агент при помощи agent on или выберите конкретный агент: если вы введёте agent и дважды нажмёте Tab, будет отображён список доступных вариантов. Агент Bluetooth управляет кодом сопряжения. default-agent должен подойти в большинстве случаев. [1]\n1. Введите pair MAC-адрес, чтобы осуществить сопряжение (работает автодополнение по tab).\n1. При использовании устройства без PIN, возможно, потребуется подтверждение, прежде чем оно сможет успешно переподключиться. Для этого введите trust MAC-адрес.\n1. Наконец, используйте connect MAC-адрес для установки соединения.\n\nСеанс будет выглядеть примерно так:\n\n```\n$ bluetoothctl\n```\n\n```\n[NEW] Controller 00:10:20:30:40:50 hostname [default]\n[bluetooth]# agent KeyboardOnly\nAgent registered\n\n[bluetooth]# default-agent\nDefault agent request successful\n\n[bluetooth]# power on\nChanging power on succeeded\n[CHG] Controller 00:10:20:30:40:50 Powered: yes\n\n[bluetooth]# scan on\nDiscovery started\n[CHG] Controller 00:10:20:30:40:50 Discovering: yes\n[NEW] Device 00:12:34:56:78:90 device name\n[CHG] Device 00:12:34:56:78:90 LegacyPairing: yes\n\n[bluetooth]# pair 00:12:34:56:78:90\nAttempting to pair with 00:12:34:56:78:90\n[CHG] Device 00:12:34:56:78:90 Connected: yes\n[CHG] Device 00:12:34:56:78:90 Connected: no\n[CHG] Device 00:12:34:56:78:90 Connected: yes\nRequest PIN code\n[agent] Enter PIN code: 1234\n[CHG] Device 00:12:34:56:78:90 Paired: yes\nPairing successful\n[CHG] Device 00:12:34:56:78:90 Connected: no\n\n[bluetooth]# connect 00:12:34:56:78:90\nAttempting to connect to 00:12:34:56:78:90\n[CHG] Device 00:12:34:56:78:90 Connected: yes\nConnection successful\n```\n\n"
    },
    {
      "title": "Сопряжение при двойной загрузке",
      "level": 3,
      "content": "Чтобы сопряжение работало во всех установленных операционных системах, необходимо изменить ключи сопряжения так, чтобы они были одинаковыми во всех системах.\n\nНиже описан ручной способ изменения. Для автоматизации можно использовать bt-dualboot.\n\n"
    },
    {
      "title": "Подготовка",
      "level": 4,
      "content": "Чтобы сделать это, сперва сделайте сопряжение в вашем Arch Linux. Потом перезагрузитесь в другую ОС и сделайте сопряжение там. Теперь нужно извлечь ключи сопряжения, но сперва отключите Bluetooth-устройства, чтобы не было ненужных попыток подключения до завершения настройки.\n\n"
    },
    {
      "title": "Для Windows",
      "level": 4,
      "content": "Загрузитесь в Windows.\n\nЗапись реестра, содержащая ключи, доступна только пользователю SYSTEM, в которого нельзя выполнить вход. Поэтому понадобится утилита PsExec с официального сайта Windows Sysinternals для запуска regedit.exe от имени SYSTEM.\n\nСкачайте архив PsTools и извлеките из него файл PsExec64.exe.\n\nЗапустите командную строку от имени администратора, перейдите в папку с извлечённым exe-файлом и запустите редактор реестра:\n\n```\n.\\PsExec64.exe -s -i regedit.exe\n```\n\nВ редакторе перейдите к этому разделу:\n\n```\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\BTHPORT\\Parameters\\Keys\n```\n\nВ нём содержатся подразделы для каждого Bluetooth-адаптера, названные по их MAC-адресам. Если их несколько и вы не знаете, какой из них вам нужен, смотрите эту инструкцию для выяснения MAC-адреса нужного вам Bluetooth-адаптера.\n\nРазделы Bluetooth-адаптеров содержат параметры для каждого сопряжённого устройства, причём имена этих параметров являются MAC-адресами. Также могут присутствовать подразделы, названные по MAC-адресам сопряжённых устройств, и каждый такой подраздел будет содержать ключи с именами вроде LTK или IRK. Эти подразделы (если они есть) соответствуют устройствам Bluetooth 5.1. Если для нужного вам устройства такой подраздел есть, это устройство Bluetooth 5.1. Если подраздела нет, а есть только параметр, это не устройство Bluetooth 5.1.\n\nНажмите правой кнопкой мыши на раздел адаптера и экспортируйте его в файл .reg. Это текстовый файл, из которого можно копировать ключи. Как описано выше, он содержит параметры с ключами сопряжения для устройств без Bluetooth 5.1 и подразделы с ключами сопряжения (и другой информацией) для устройств Bluetooth 5.1. Сделайте этот файл доступным для вашей установки Linux и перезагрузитесь в него.\n\nЕсли нужное устройство не является устройством Bluetooth 5.1, перейдите к разделу #Завершение. Если устройство является устройством Bluetooth 5.1, нужно внести некоторые изменения в ключи сопряжения и связанную с ними информацию, как описано в разделе #Подготовка ключей Bluetooth 5.1.\n\nПерезагрузитесь в Arch. Установите chntpw. Примонтируйте ваш Windows-раздел.\n\n```\n$ cd /путь/к/windows/диску/Windows/System32/config\n$ chntpw -e SYSTEM\n```\n\nВ окружении chntpw выполните\n\n```\n> cd CurrentControlSet\\Services\\BTHPORT\\Parameters\\Keys\n```\n\nили\n\n```\n> cd ControlSet00X\\Services\\BTHPORT\\Parameters\\Keys\n```\n\nЗатем узнайте MAC-адрес вашего Bluetooth-адаптера и перейдите в соответствующий раздел:\n\n```\n> ls\n> cd mac-адрес\n```\n\nСделайте то же самое для сопряжённых устройств. Если устройство не является устройством Bluetooth 5.1, вы увидите только ключ сопряжения:\n\n```\n> ls\n```\n\n```\nNode has 0 subkeys and 1 values\nsize  type        value name    [value if type DWORD]\n16    REG_BINARY <123456789876>\n```\n\nВ таком случае можно просто получить ключ устройства командой hex:\n\n```\n> hex 123456789876\n```\n\n```\n:00000 XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX (всякие другие символы)\n```\n\n«XX»ы и являются ключом сопряжения. Запомните, какие ключи каким MAC-адресам соответствуют.\n\nЕсли устройство является устройством Bluetooth 5.1, вы увидите несколько разных ключей:\n\n```\nNode has 0 subkeys and 8 values\n  size     type              value name             [value if type DWORD]\n    16  3 REG_BINARY         <LTK>\n     4  4 REG_DWORD          <KeyLength>               16 [0x10]\n     8  b REG_QWORD          <ERand>\n     4  4 REG_DWORD          <EDIV>                 37520 [0x9290]\n    16  3 REG_BINARY         <IRK>\n     8  b REG_QWORD          <Address>\n     4  4 REG_DWORD          <AddressType>              1 [0x1]\n     4  4 REG_DWORD          <AuthReq>                 45 [0x2d]\n```\n\nИх использование описано в разделе #Подготовка ключей Bluetooth 5.1. Для получения значений параметров используйте команду hex value_name.\n\nНаконец, импортируйте ключи в вашу установку Linux, как описано в разделе #Завершение.\n\n"
    },
    {
      "title": "Для macOS",
      "level": 4,
      "content": "Загрузитесь в macOS:\n\n- Для macOS Monterey или новее: Откройте «Связку ключей» и в строку поиска введите Bluetooth. Отсортируйте по дате. Если переподключение устройства выполнялось недавно, можно просто отсортировать ключи по дате и выбрать самый свежий. Скорее всего он будет иметь название MobileBluetooth (для старых устройств) или просто UUID (для Bluetooth 5.1+). Дважды щёлкните по записи. Проверьте, что в качестве учётной записи указан MAC-адрес вашего устройства. Поставьте галочку «Показать пароль». Система попросит вас ввести свой пароль. Скопируйте показанный пароль, который по сути является XML-файлом (⌘+a ⌘+c) Вставьте и сохраните его в файл bt_keys.txt в вашем домашнем каталоге.\n- Для High Sierra или новее выполните в терминале: # defaults read /private/var/root/Library/Preferences/com.apple.bluetoothd.plist LinkKeys > ~/bt_keys.txt\n- Для Sierra или более старых систем выполните в терминале: # defaults read /private/var/root/Library/Preferences/blued.plist LinkKeys > ~/bt_keys.txt\n\n1. Откройте «Связку ключей» и в строку поиска введите Bluetooth.\n1. Отсортируйте по дате.\n1. Если переподключение устройства выполнялось недавно, можно просто отсортировать ключи по дате и выбрать самый свежий. Скорее всего он будет иметь название MobileBluetooth (для старых устройств) или просто UUID (для Bluetooth 5.1+).\n1. Дважды щёлкните по записи. Проверьте, что в качестве учётной записи указан MAC-адрес вашего устройства.\n1. Поставьте галочку «Показать пароль». Система попросит вас ввести свой пароль.\n1. Скопируйте показанный пароль, который по сути является XML-файлом (⌘+a ⌘+c)\n1. Вставьте и сохраните его в файл bt_keys.txt в вашем домашнем каталоге.\n\n```\n# defaults read /private/var/root/Library/Preferences/com.apple.bluetoothd.plist LinkKeys > ~/bt_keys.txt\n```\n\n```\n# defaults read /private/var/root/Library/Preferences/blued.plist LinkKeys > ~/bt_keys.txt\n```\n\nТеперь в файле ~/.bt_keys.txt находятся ключи Bluetooth. Для старых версий macOS (High Sierra и старше) нужно перевернуть ключи перед продолжением. Например, 98 54 2f aa bb cc dd ee ff gg hh ii jj kk ll mm нужно изменить на MM LL KK JJ GG FF EE DD CC BB AA 2F 54 98.\n\n```\n>>> key = \"98 54 2f aa bb cc dd ee ff gg hh ii jj kk ll mm\"\n>>> \" \".join(reversed(key.strip().split()))\n```\n\nЕсли это устройство Bluetooth 5.1, то у одного устройства будет несколько ключей. Перейдите к разделу #Подготовка ключей Bluetooth 5.1 для работы с ними.\n\nНаконец, импортируйте ключи в вашу установку Linux, как описано в разделе #Завершение.\n\n"
    },
    {
      "title": "Подготовка ключей Bluetooth 5.1",
      "level": 4,
      "content": "Если во время выполнения описанных выше шагов вы получили ключи для устройств Bluetooth 5.1, то перед импортом в Linux необходимо преобразовать значения определённым образом для последующего использования на этапе #Завершение. Процесс преобразования зависит от конкретного устройства; примеры для некоторых устройств приведены ниже.\n\nTable content:\nУстройство | Источник ключа и преобразования (Windows) | Источник ключа и преобразования (macOS) | Название получаемого значения\nLogitech MX Master 3 Logitech MX Master 3S Logitech MX Keys Logitech MX Mechanical Xbox One S Wireless Controller | Скопируйте IRK. Уберите пробелы между октетами. | ? | IdentityResolvingKey.Key\nСкопируйте LTK. Уберите пробелы между октетами. | ? | SlaveLongTermKey.Key и PeripheralLongTermKey.Key\nERand и EDIV должны быть 0 | Random Number и Encrypted Diversifier должны быть 0. | –\nLogitech MX Anywhere 2S | Скопируйте IRK. Уберите пробелы между октетами. | ? | IdentityResolvingKey.Key\nСкопируйте CSRK. Уберите пробелы между октетами. | ? | LocalSignatureKey.Key\nСкопируйте LTK. Уберите пробелы между октетами. | ? | LongTermKey.Key\nСкопируйте KeyLength. Преобразуйте число в десятичное. | ? | LongTermKey.EncSize\nСкопируйте EDIV. Преобразуйте число в десятичное. | ? | LongTermKey.EDiv\nСкопируйте ERand. Измените порядок октетов на обратный. Преобразуйте число в десятичное. | ? | LongTermKey.Rand\nThinkPad TrackPoint Keyboard II Pebble M350 mouse Logitech G604 Lightspeed mouse | Скопируйте IRK. Измените порядок октетов на обратный. | Скопируйте Remote IRK. Преобразуйте из base64 в hex. | IdentityResolvingKey.Key\nСкопируйте LTK. Уберите пробелы между октетами. | Скопируйте Remote Encryption > Long-term Key. Преобразуйте из base64 в hex. | LongTermKey.Key\nСкопируйте ERand. Измените порядок октетов на обратный. Преобразуйте число в десятичное. | Скопируйте Remote Encryption > Random Number. Преобразуйте из base64 в little-endian десятичное число (смотрите Python-код ниже). | LongTermKey.Rand\nСкопируйте EDIV. Измените порядок октетов на обратный. Преобразуйте число в десятичное. | Скопируйте Remote Encryption > Encrypted Diversifier. Преобразуйте из base64 в little-endian десятичное число (смотрите Python-код ниже). | LongTermKey.EDiv\nДругие устройства | Скопируйте LTK. Уберите пробелы между октетами. | Скопируйте Remote IRK. Преобразуйте из base64 в hex. | LongTermKey.Key\nСкопируйте ERand. Измените порядок октетов на обратный. Преобразуйте число в десятичное. | Скопируйте Remote Encryption > Long-term Key. Преобразуйте из base64 в hex. | LongTermKey.Rand\nСкопируйте EDIV. Уберите пробелы между октетами. | Скопируйте Remote Encryption > Encrypted Diversifier. Преобразуйте из base64 в hex. Измените порядок октетов на обратный. | LongTermKey.EDiv\nXbox wireless controller | Скопируйте LTK. Уберите пробелы между октетами. | ? | SlaveLongTermKey.Key\n\n- Logitech MX Master 3\n- Logitech MX Master 3S\n- Logitech MX Keys\n- Logitech MX Mechanical\n- Xbox One S Wireless Controller\n\n- Скопируйте IRK.\n- Уберите пробелы между октетами.\n\n- Скопируйте LTK.\n- Уберите пробелы между октетами.\n\n- Logitech MX Anywhere 2S\n\n- Скопируйте IRK.\n- Уберите пробелы между октетами.\n\n- Скопируйте CSRK.\n- Уберите пробелы между октетами.\n\n- Скопируйте LTK.\n- Уберите пробелы между октетами.\n\n- Скопируйте KeyLength.\n- Преобразуйте число в десятичное.\n\n- Скопируйте EDIV.\n- Преобразуйте число в десятичное.\n\n- Скопируйте ERand.\n- Измените порядок октетов на обратный.\n- Преобразуйте число в десятичное.\n\n- ThinkPad TrackPoint Keyboard II\n- Pebble M350 mouse\n- Logitech G604 Lightspeed mouse\n\n- Скопируйте IRK.\n- Измените порядок октетов на обратный.\n\n- Скопируйте Remote IRK.\n- Преобразуйте из base64 в hex.\n\n- Скопируйте LTK.\n- Уберите пробелы между октетами.\n\n- Скопируйте Remote Encryption > Long-term Key.\n- Преобразуйте из base64 в hex.\n\n- Скопируйте ERand.\n- Измените порядок октетов на обратный.\n- Преобразуйте число в десятичное.\n\n- Скопируйте Remote Encryption > Random Number.\n- Преобразуйте из base64 в little-endian десятичное число (смотрите Python-код ниже).\n\n- Скопируйте EDIV.\n- Измените порядок октетов на обратный.\n- Преобразуйте число в десятичное.\n\n- Скопируйте Remote Encryption > Encrypted Diversifier.\n- Преобразуйте из base64 в little-endian десятичное число (смотрите Python-код ниже).\n\n- Скопируйте LTK.\n- Уберите пробелы между октетами.\n\n- Скопируйте Remote IRK.\n- Преобразуйте из base64 в hex.\n\n- Скопируйте ERand.\n- Измените порядок октетов на обратный.\n- Преобразуйте число в десятичное.\n\n- Скопируйте Remote Encryption > Long-term Key.\n- Преобразуйте из base64 в hex.\n\n- Скопируйте EDIV.\n- Уберите пробелы между октетами.\n\n- Скопируйте Remote Encryption > Encrypted Diversifier.\n- Преобразуйте из base64 в hex.\n- Измените порядок октетов на обратный.\n\n- Скопируйте LTK.\n- Уберите пробелы между октетами.\n\n- Чтобы просто удалить пробелы из значения, можно использовать этот онлайн-инструмент или такой код Python:\n\n```\n>>> \"значение с пробелами\".replace(\" \", \"\")\n```\n\n- Вот так можно изменить порядок октетов на обратный (обратите внимание, что в итоге получится список строк с октетами):\n\n```\n>>> ERand=\" 63 02 84 B8 5D 40 44 DF   \"\n>>> ERand=list(reversed(ERand.strip().split()))\n```\n\n- Вот так можно преобразовать этот список в десятичное число, если требуется:\n\n```\n>>> int(\"\".join(ERand), 16)\n16088054540146049635\n```\n\n- Преобразование base64 в hex (перед этим импортируйте модули командой import binascii, base64):\n\n```\nbinascii.hexlify(base64.decodebytes(b'...')).upper()\n```\n\n- Преобразование macOS Encrypted Diversifier (тоже импортируйте модуль командой import struct):\n\n```\nstruct.unpack('<H', base64.decodebytes(b'...'))\n```\n\n- Преобразование macOS Random Number:\n\n```\nstruct.unpack('<Q', base64.decodebytes(b'...'))\n```\n\nПримеры в общем случае:\n\n- Из LTK со значением 48 4D AF CD 0F 92 22 88 0A 52 9A F4 76 DA 8B 94 должен получиться LongTermKey.Key со значением 484DAFCD0F9222880A529AF476DA8B94.\n- Из ERand со значением 63 02 84 B8 5D 40 44 DF должен получиться Rand со значением 16088054540146049635.\n- Из EDIV со значением 37520 должен получиться EDiv со значением 37520.\n\n"
    },
    {
      "title": "Завершение",
      "level": 4,
      "content": "Теперь, когда у вас есть нужные ключи, войдите как root и перейдите в каталог:\n\n```\n# cd /var/lib/bluetooth/MAC-адрес-адаптера\n```\n\nЗдесь вы найдёте подкаталоги для каждого сопряжённого устройства. Для каждого нужного устройства перейдите в его подкаталог:\n\n```\n# cd MAC-адрес-устройства\n```\n\nЕсли у вас есть только один ключ сопряжения (то есть устройство не является устройством Bluetooth 5.1), измените файл info и подставьте ключ под [LinkKey], например:\n\n```\ninfo\n```\n\n```\n[LinkKey]\nKey=XXXXXXXXXXXXXXX\n```\n\nЕсли у вас несколько ключей, то есть устройство является устройством Bluetooth 5.1, измените файл info, прописав в нём значения, которые вы получили после выполнения описанных выше преобразований. Пример для Xbox One S Wireless Controller:\n\n```\ninfo\n```\n\n```\n[IdentityResolvingKey]\nKey=<IdentityResolvingKey.Key>\n\n[PeripheralLongTermKey]\nKey=<PeripheralLongTermKey.Key>\n\n[SlaveLongTermKey]\nKey=<SlaveLongTermKey.Key>\n```\n\nЗатем перезапустите bluetooth.service и pulseaudio (командой pulseaudio -k && pulseaudio --start).\n\nТеперь устройство должно успешно подключаться.\n\n"
    },
    {
      "title": "Состояние питания адаптера по умолчанию",
      "level": 3,
      "content": "С версии bluez 5.65 питание всех Bluetooth-адаптеров по умолчанию включается при запуске службы или после пробуждения из сна. [2]\n\nЕсли вы хотите, чтобы адаптер не включался автоматически (например, на портативном устройстве, на котором вы хотите сэкономить заряд батареи), в файле /etc/bluetooth/main.conf в разделе [Policy] пропишите AutoEnable=false:\n\n```\n/etc/bluetooth/main.conf\n```\n\n```\n[Policy]\nAutoEnable=false\n```\n\nАдаптер можно будет включить вручную командой power on, как упоминалось в разделе #Сопряжение.\n\n"
    },
    {
      "title": "Видимость при запуске системы",
      "level": 3,
      "content": "Если вы хотите, чтобы ваше устройство всегда было видимо и доступно для подключения:\n\n```\n/etc/bluetooth/main.conf\n```\n\n```\n[General]\nDiscoverableTimeout = 0\n```\n\n"
    },
    {
      "title": "Пробуждение из сна",
      "level": 3,
      "content": "Чтобы разрешить Bluetooth-клавиатурам, мышам и т. д. пробуждать систему из сна, сначала проверьте настройки BIOS и убедитесь, что функция пробуждения от USB включена. Во многих случаях Bluetooth на материнской плате является USB-устройством.\n\nНайдите ID производителя и ID устройства для адаптера Bluetooth.\n\n```\n$ lsusb | grep bluetooth -i\n```\n\n```\nBus 001 Device 002: ID 8087:0039 Intel Corp. AX200 Bluetooth\n```\n\nДобавьте новое правило udev для указанных ID производителя и ID устройства, чтобы включить для этого устройства пробуждение из сна.\n\n```\n/etc/udev/rules.d/91-keyboard-mouse-wakeup.rules\n```\n\n```\nSUBSYSTEM==\"usb\", ATTRS{idVendor}==\"8087\", ATTRS{idProduct}==\"0039\" RUN+=\"/bin/sh -c 'echo enabled > /sys$env{DEVPATH}/../power/wakeup;'\"\n```\n\nЧтобы автоматически изменить настройки Bluetooth-клавиатуры после пробуждения, например раскладку или частоту повторения зажатых клавиш (смотрите Конфигурация клавиатуры в Xorg#Регулировка задержки и скорости автоповтора и xmodmap (Русский)), создайте такой скрипт и сделайте его исполняемым:\n\n```\nconfigure_keyboard.sh\n```\n\n```\n#!/bin/sh\nexport DISPLAY=:0\nxset r rate 220 30\nxmodmap /путь/к/.Xmodmap\n```\n\nИ добавьте ещё одно правило, подобное приведённому выше, для запуска этого скрипта:\n\n```\n/etc/udev/rules.d/92-keyboard-reconfiguration-wakeup.rules\n```\n\n```\nSUBSYSTEM==\"usb\", ATTRS{idVendor}==\"8087\", ATTRS{idProduct}==\"0039\" RUN+=\"/путь/к/configure_keyboard.sh\"\n```\n\n"
    },
    {
      "title": "Включение экспериментальных функций",
      "level": 3,
      "content": "В стеке Bluez новые функции, потенциально имеющие ошибки, спрятаны за опциями Experimental и KernelExperimental. Набор функций, управляемых этими опциями, меняется со временем; некоторые функции могут стать стабильными и больше не требовать включения этих опций. Пример: включение экспериментальных интерфейсов D-Bus в настоящее время позволяет сообщать об уровне заряда батареи для старых гарнитур. Для включения раскомментируйте соответствующие строки в файле настроек:\n\n```\n/etc/bluetooth/main.conf\n```\n\n```\n...\n\n# Enables D-Bus experimental interfaces\n# Possible values: true or false\n#Experimental = true\n\n# Enables kernel experimental features, alternatively a list of UUIDs\n# can be given.\n# Possible values: true,false,<UUID List>\n# Possible UUIDS:\n...\n# Defaults to false.\n#KernelExperimental = true\n```\n\nДругой способ — отредактировать юнит bluetooth.service, создав drop-in файл и добавив флаг --experimental или --kernel для запускаемой команды:\n\n```\n/etc/systemd/system/bluetooth.service.d/override.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/lib/bluetooth/bluetoothd --experimental\n```\n\nВ обоих случаях перезапустите bluetooth.service после внесения изменений.\n\n"
    },
    {
      "title": "Аудио",
      "level": 2,
      "content": "Обычно нужны дополнительные шаги для интеграции аудиосервера с Bluetooth. Подробнее это описано ниже.\n\nСмотрите также Bluetooth наушники для информации о подключении Bluetooth-гарнитуры.\n\n"
    },
    {
      "title": "PulseAudio",
      "level": 3,
      "content": "Установите пакет pulseaudio-bluetooth. Не забудьте перезапустить PulseAudio после переустановки: pulseaudio -k. При стандартной установке PulseAudio (то есть при использовании пользовательской службы со стандартным default.pa) после этого у вас сразу должна появиться возможность использования Bluetooth-устройств. [3]\n\nЕсли ваш PulseAudio работает как общесистемная служба, убедитесь, что пользователь, от имени которого запущен демон (обычно pulse), состоит в группе lp, и не забудьте загрузить нужные модули:\n\n```\n/etc/pulse/system.pa\n```\n\n```\n...\nload-module module-bluetooth-policy\nload-module module-bluetooth-discover\n...\n```\n\nТакже можно добавить модуль load-module module-switch-on-connect, если вы хотите автоматически переключать все звуки на устройство Bluetooth.\n\n"
    },
    {
      "title": "PipeWire",
      "level": 3,
      "content": "PipeWire с версии 0.3.19 включает свою поддержку Bluetooth по умолчанию.\n\n"
    },
    {
      "title": "ALSA",
      "level": 3,
      "content": "Сперва убедитесь, что ваше аудиоустройство Bluetooth подключено и сопряжено с системой.\n\nЗатем установите bluez-alsa-gitAUR, запустите (и включите) службу bluealsa и добавьте своего пользователя в группу audio.\n\nВыполните следующую команду для проверки, что всё работает (замените XX:XX:XX:XX:XX:XX и ФАЙЛ.wav на нужные значения):\n\n```\n$ aplay -D bluealsa:SRV=org.bluealsa,DEV=XX:XX:XX:XX:XX:XX,PROFILE=a2dp ФАЙЛ.wav\n```\n\nВ завершение добавьте эти строки в ~/.asoundrc:\n\n```\n~/.asoundrc\n```\n\n```\ndefaults.bluealsa {\n    service \"org.bluealsa\"\n    device \"XX:XX:XX:XX:XX:XX\"\n    profile \"a2dp\"\n}\n```\n\nТеперь можно использовать устройство bluealsa для доступа к аудиоустройству Bluetooth. Управление громкостью обычно осуществляется через alsamixer с опцией -D bluealsa.\n\n"
    },
    {
      "title": "Bluetooth serial",
      "level": 2,
      "content": "Чтобы получить последовательную связь на Bluetooth-to-Serial модулях (HC-05, HC-06), выполните следующие шаги:\n\nВыполните сопряжение с вашим устройством Bluetooth с помощью bluetoothctl, как описано в разделе #Сопряжение.\n\nУстановите bluez-deprecated-tools, поскольку он предоставляет функции, отсутствующие в более новых инструментах.\n\nПривяжите MAC-адрес сопряжённого устройства к терминула tty:\n\n```\n# rfcomm bind rfcomm0 MAC-адрес-устройства\n```\n\nТеперь можно открыть /dev/rfcomm0 для последовательной связи:\n\n```\n$ picocom /dev/rfcomm0 -b 115200\n```\n\n"
    },
    {
      "title": "Отладка",
      "level": 4,
      "content": "Для отладки сперва остановите bluetooth.service.\n\nЗатем запустите его напрямую с параметром -d:\n\n```\n# /usr/lib/bluetooth/bluetoothd -n -d\n```\n\nДругой вариант — использовать инструмент btmon.\n\n"
    },
    {
      "title": "Устаревшие инструменты BlueZ",
      "level": 4,
      "content": "Восемь инструментов BlueZ объявлены устаревшими и удалены из bluez-utils, хотя не для всех из них есть замена среди новых инструментов. Пакет bluez-deprecated-tools предоставляет эти устаревшие инструменты.\n\nTable content:\nУстаревший инструмент | Ближайшая замена\ngatttool | btgatt-client, D-Bus Gatt API[устаревшая ссылка 2023-10-29 ⓘ]\nhciattach | btattach\nhciconfig | btmgmt (и bluetoothctl?)\nhcidump | btmon (и btsnoop)\nhcitool | отсутствует, есть D-Bus Device API[устаревшая ссылка 2023-10-29 ⓘ]\nrfcomm | отсутствует, сделать с D-Bus Profile1 API[устаревшая ссылка 2023-10-29 ⓘ]?\nciptool\nsdptool | отсутствует, функциональность кажется разбросанной по разным объектам DBus: Profile[устаревшая ссылка 2023-10-29 ⓘ], Advertising[устаревшая ссылка 2023-10-29 ⓘ], и массивы UUID в device[устаревшая ссылка 2023-10-29 ⓘ] и adapter[устаревшая ссылка 2023-10-29 ⓘ].\n\n"
    },
    {
      "title": "systemd: Condition check resulted in Bluetooth service being skipped",
      "level": 4,
      "content": "bluetooth.service требует только существование каталога /sys/class/bluetooth, который создаётся модулем ядра bluetooth, который автоматически загружается через systemd-udev, если он находит работающее устройство Bluetooth.\n\nЕсли у вас /sys/class/bluetooth не существует, проверьте, что модуль Bluetooth загружен, командой lsmod. Если нет, и вы уверены, что у вас есть устройство Bluetooth, попробуйте загрузить его вручную и перезапустить службу bluetooth.service.\n\nТакже нужно загрузить соответствующий драйвер Bluetooth, чаще всего btusb, но иногда могут понадобиться btrtl,btintel,btbcm,bnep,btusb и т.д.\n\nПроверьте статус службы bluetooth.service, чтобы убедиться, что она запущена.\n\nСмотрите также Debian Bug report logs - #853207.\n\nЕсли bluetooth.service успешно запускается, но нормально использовать Bluetooth всё равно не получается (например, bluetoothctl говорит что-то вроде org.Bluez.Error.NotReady при выполнении scan on), попробуйте перезагрузить компьютер и дважды проверьте: каталог /sys/class/bluetooth существует; lsmod содержит нужные модули Bluetooth; сообщения в журнале; и т.д. systemd-udev должен подхватить ваше устройство Bluetooth автоматически.\n\n"
    },
    {
      "title": "Bluetooth сразу пробуждает систему из режима suspend-to-idle",
      "level": 4,
      "content": "На системах с поддержкой suspend-to-idle/S2idle/S0ix/Modern Standby Bluetooth-контроллеры остаются включенными в этом режиме сна. Это обычно приводит к тому, что система просыпается сразу после перехода в сон, если подключено какое-либо устройство Bluetooth.\n\nЧтобы предотвратить это, вы можете полностью отключить Bluetooth перед переходом в сон. Установите bluez-utils и создайте файл:\n\n```\n/etc/systemd/system/bluetooth-disable-before-sleep.service\n```\n\n```\n[Unit]\nDescription=Disable Bluetooth before going to sleep\nBefore=sleep.target\nBefore=suspend.target\nBefore=hybrid-sleep.target\nBefore=suspend-then-hibernate.target\nStopWhenUnneeded=yes\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n\nExecStart=/usr/bin/bluetoothctl power off\nExecStop=/usr/bin/bluetoothctl power on\n\n[Install]\nWantedBy=sleep.target\nWantedBy=suspend.target\nWantedBy=hybrid-sleep.target\nWantedBy=suspend-then-hibernate.target\n```\n\nВключите эту службу и проверьте, что Bluetooth отключается при переходе в сон и включается обратно после пробуждения.\n\nПри использовании этого обходного решения #Пробуждение из сна с помощью клавиатуры или мыши не будет работать.\n\n"
    },
    {
      "title": "Bluetooth отключается после выхода на headless-системе или сервере",
      "level": 4,
      "content": "Это может быть вызвано различными причинами:\n\n- И PulseAudio, и PipeWire по умолчанию работают как пользовательские службы, которые завершают работу после завершения последнего сеанса. Чтобы этого не происходило, включите lingering для пользователя.\n- Кроме того, при использовании WirePlumber с PipeWire (что обычно и происходит) WirePlumber запускает «logind-monitor», который включает Bluetooth при входе и отключает его при выходе. Решение описано в разделе WirePlumber#Keep Bluetooth running after logout / Headless Bluetooth.\n\n"
    },
    {
      "title": "hcitool scan: Устройство не найдено",
      "level": 4,
      "content": "- На некоторых ноутбуках Dell (например, Studio 15) вы должны переключить режим Bluetooth с HID на HCI. Установите пакет bluez-hid2hci, после чего udev будет делать это автоматически. В качестве альтернативы вы можете выполнить эту команду для переключения на HCI вручную:\n\n```\n# /usr/lib/udev/hid2hci\n```\n\n- Если устройство не появится, а на вашей машине есть операционная система Windows, попробуйте загрузиться в её и включить адаптер Bluetooth через Windows.\n\n- Иногда также помогает эта простая команда:\n\n```\n# bluetoothctl power on\n```\n\n"
    },
    {
      "title": "bluetoothctl: No default controller available",
      "level": 4,
      "content": "В Bluetooth-контроллерах некоторых материнских плат есть ошибка. Чтобы проверить, столкнулись ли вы с такой ошибкой, выполните journalctl | grep hci. Если в журнале есть записи вроде «command tx timeout» или «Reading Intel version command failed», выключите компьютер и физически отсоедините кабель питания на несколько секунд. Таким образом прошивка контроллера будет принудительно перезагружена (в то время как стандартная перезагрузка системы этого не сделает). Сообщение об ошибке.\n\nЭта ошибка может случаться, если устройство заблокировано через rfkill.\n\nТакже это случается с некоторыми картами intel (такими как 8260), которые не распознаются корректно службой Bluetooth. Иногда использование устаревшего bluez-deprecated-tools, как сообщалось, решает проблему.\n\nЭто также может быть вызвано мерами по энергосбережению, тогда добавление параметра ядра btusb.enable_autosuspend=n может помочь. Смотрите также Red Hat Bugzilla – Bug 1573562.\n\nИногда выгрузка и загрузка модуля btusb без параметров помогает вернуть контроллер:\n\n```\n# modprobe -r btusb\n# modprobe btusb\n```\n\nЭто также может случиться с клоном CSR.\n\n"
    },
    {
      "title": "rfkill unblock: не происходит разблокировка",
      "level": 4,
      "content": "Если ваше устройство по-прежнему программно блокируется и у вас запущен ConnMan, попробуйте это:\n\n```\n$ connmanctl enable bluetooth\n```\n\n"
    },
    {
      "title": "Bluetooth USB донгл",
      "level": 4,
      "content": "Если вы пользуетесь USB донглом, вы должны проверить, что ваш Bluetooth донгл распознан системой. Это можно сделать с помощью команды journalctl -f, после того как вы воткнёте USB донгл (или заглянув в /var/log/messages.log). Должно появиться что-то вроде следующего (ищите hci):\n\n```\nFeb 20 15:00:24 hostname kernel: [ 2661.349823] usb 4-1: new full-speed USB device number 3 using uhci_hcd\nFeb 20 15:00:24 hostname bluetoothd[4568]: HCI dev 0 registered\nFeb 20 15:00:24 hostname bluetoothd[4568]: Listening for HCI events on hci0\nFeb 20 15:00:25 hostname bluetoothd[4568]: HCI dev 0 up\nFeb 20 15:00:25 hostname bluetoothd[4568]: Adapter /org/bluez/4568/hci0 has been enabled\n```\n\nЕсли вы получили только первые две строки, значит донгл распознан, но вам необходимо его активировать (поднять). Пример:\n\n```\n# btmgmt\n```\n\n```\n[mgmt]# info\nIndex list with 1 item\nhci0:\tPrimary controller\n\taddr 00:1A:7D:DA:71:10 version 6 manufacturer 10 class 0x000000\n\tsupported settings: powered connectable fast-connectable discoverable bondable link-security ssp br/edr hs le advertising secure-conn debug-keys privacy static-addr\n\tcurrent settings: connectable discoverable bondable ssp br/edr le secure-conn\n\tname Mozart\n\tshort name\n\n[mgmt]# select hci0\nSelected index 0\n\n[hci0]# power up\nhci0 Set Powered complete, settings: powered connectable discoverable bondable ssp br/edr le secure-conn\n\n[hci0]# info\nhci0:\tPrimary controller\n\taddr 00:1A:7D:DA:71:10 version 6 manufacturer 10 class 0x1c0104\n\tsupported settings: powered connectable fast-connectable discoverable bondable link-security ssp br/edr hs le advertising secure-conn debug-keys privacy static-addr\n\tcurrent settings: powered connectable discoverable bondable ssp br/edr le secure-conn\n```\n\nИли\n\n```\n# bluetoothctl\n```\n\n```\n[bluetooth]# show\nController 00:1A:7D:DA:71:10 (public)\n\tName: Mozart\n\tAlias: Mozart\n\tClass: 0x0000095c\n\tPowered: no\n\tDiscoverable: yes\n\tPairable: yes\n\n[bluetooth]# power on\n[CHG] Controller 00:1A:7D:DA:71:10 Class: 0x001c0104\nChanging power on succeeded\n[CHG] Controller 00:1A:7D:DA:71:10 Powered: yes\n\n[bluetooth]# show\nController 00:1A:7D:DA:71:10 (public)\n\tName: Mozart\n\tAlias: Mozart\n\tClass: 0x001c0104\n\tPowered: yes\n\tDiscoverable: yes\n\tPairable: yes\n```\n\nЧтобы убедиться, что устройство было определено, вы можете использовать команду btmgmt, являющуюся частью bluez-utils. Получить список доступных устройств, их идентификаторов и MAC-адресов можно так:\n\n```\n$ btmgmt info\n```\n\n```\nIndex list with 1 item\nhci0:\tPrimary controller\n\taddr 00:1A:7D:DA:71:10 version 6 manufacturer 10 class 0x1c0104\n\tsupported settings: powered connectable fast-connectable discoverable bondable link-security ssp br/edr hs le advertising secure-conn debug-keys privacy static-addr\n\tcurrent settings: powered connectable discoverable bondable ssp br/edr le secure-conn\n```\n\nДля проверки версии Bluetooth можно сопоставить её с версией HCI по таблице из официальной спецификации. Например, в предыдущем выводе HCI version 6 означает Bluetooth 4.0.\n\nБолее детальная информация об устройстве может быть получена с помощью устаревшего инструмента hciconfig. (bluez-deprecated-tools)\n\n```\n$ hciconfig -a hci0\n```\n\n```\nhci0:   Type: USB\n        BD Address: 00:1B:DC:0F:DB:40 ACL MTU: 310:10 SCO MTU: 64:8\n        UP RUNNING PSCAN ISCAN\n        RX bytes:1226 acl:0 sco:0 events:27 errors:0\n        TX bytes:351 acl:0 sco:0 commands:26 errors:0\n        Features: 0xff 0xff 0x8f 0xfe 0x9b 0xf9 0x00 0x80\n        Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3\n        Link policy: RSWITCH HOLD SNIFF PARK\n        Link mode: SLAVE ACCEPT\n        Name: 'BlueZ (0)'\n        Class: 0x000100\n        Service Classes: Unspecified\n        Device Class: Computer, Uncategorized\n        HCI Ver: 2.0 (0x3) HCI Rev: 0xc5c LMP Ver: 2.0 (0x3) LMP Subver: 0xc5c\n        Manufacturer: Cambridge Silicon Radio (10)\n```\n\nЕсли другие устройства работают через тот же USB-хост, они могут прерывать связь с устройствами аудио. Убедитесь, что к USB-шине, к которой подключен Bluetooth, больше не подключено никаких других устройств. Например:\n\n```\n$ lsusb\n```\n\n```\nBus 002 Device 002: ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode)\nBus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\nBus 001 Device 004: ID 048d:1345 Integrated Technology Express, Inc. Multi Cardreader\nBus 001 Device 003: ID 0424:a700 Standard Microsystems Corp. 2 Port Hub\nBus 001 Device 002: ID 8087:0024 Intel Corp. Integrated Rate Matching Hub\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n```\n\nС устройством ID 0a12:0001 Cambridge Silicon Radio, Ltd Bluetooth Dongle (HCI mode) есть баг, и оно сейчас работает только в версиях ядра 5.17 и < 6.0. Подробнее смотрите Kernel Bug 60824.\n\n"
    },
    {
      "title": "Logitech Bluetooth USB донгл",
      "level": 4,
      "content": "Существуют Logitech донглы (например, Logitech MX5000), которые могут работать в двух режимах: встроенный (Embedded) и HCI. Во встроенном режиме донгл эмулирует устройство USB так, что ваш компьютер думает, что вы используете обычную USB мышь/клавиатуру.\n\nЕсли вы зажмёте маленькую красную кнопку на USB BT мини-приёмнике, включится другой режим. Удерживайте красную кнопку на BT донгле и вставьте его в компьютер, и через 3-5 секунд удерживания кнопки в системном трее появится иконка Bluetooth (обсуждение).\n\nВ качестве альтернативы вы можете установить пакет bluez-hid2hci. Когда вы подключите ваш Logitech донгл, он автоматически переключится.\n\n"
    },
    {
      "title": "Foxconn / Hon Hai / Lite-On Broadcom",
      "level": 4,
      "content": "Некоторые из этих устройств необходимо прошивать при загрузке.\n\nНекоторые прошивки можно найти в AUR по запросу broadcom. В частности, стоит упомянуть broadcom-bt-firmwareAUR, который содержит файлы для большого числа карт.\n\nЕсли готовых файлов прошивок не нашлось, их можно сконвертировать из Windows-файлов .hex в .hcd с помощью hex2hcd (входит в состав пакета bluez-utils).\n\nЧтобы получить нужный .hex файл, попробуйте поискать vendor:product (производитель:продукт) из lsusb, например:\n\n```\nBus 002 Device 004: ID 04ca:2006 Lite-On Technology Corp. Broadcom BCM43142A0 Bluetooth Device\n```\n\nили\n\n```\nBus 004 Device 004: Id 0489:e031 Foxconn / Hon Hai\n```\n\nВ качестве альтернативы можно загрузиться в Windows (виртуальная машина тоже подойдёт) и посмотреть название прошивки в «Диспетчере устройств». Если вы хотите знать модель устройства, но не видите его в lsusb, его можно увидеть в lsusb -v как iProduct.\n\nФайл .hex можно извлечь из скачанного драйвера Windows без необходимости загружаться в Windows. Скачайте правильный драйвер, например Bluetooth Widcomm[устаревшая ссылка 2023-09-16 ⓘ]. Для извлечения файлов может понадобиться unrar или cabextract в зависимости от формата. Чтобы найти, какой из .hex файлов нужен вам, смотрите Win32/bcbtums-win7x86-brcm.inf и ищите строку [RAMUSBE031.CopyList], где E031 следует заменить на product code вашего устройства (второе hex-число из lsusb) в верхнем регистре. Сразу под этой строкой вы увидите имя нужного .hex файла.\n\nКогда вы сконвертируете его в .hcd, скопируйте его в /lib/firmware/brcm/BCM.hcd — это имя файла предлагает dmesg и может быть другим, так что проверьте вывод dmesg у себя. Затем перезагрузите модуль\n\n```\n# rmmod btusb\n# modprobe btusb\n```\n\nТеперь устройство должно быть доступно. Смотрите BBS#162688 для информации о том, как сделать эти изменения постоянными.\n\n"
    },
    {
      "title": "Комбинированные WiFi-Bluetooth карты Intel",
      "level": 4,
      "content": "See Wireless network configuration (Русский)#Bluetooth Coexistence.\n\n"
    },
    {
      "title": "Mediatek MT7921 или MT7961 при двойной загрузке с Windows",
      "level": 4,
      "content": "В системах с двойной загрузкой, если версии прошивок Bluetooth отличаются в Windows и Linux, адаптер Bluetooth не заработает после перезагрузки в Windows.\n\nЛучший способ предотвратить это — обновить драйверы (и особенно прошивку) Bluetooth до последней версии в каждой ОС.\n\nЕсли вы не можете найти свежий драйвер (или прошивку) для Windows, можно скопировать файл прошивки /usr/lib/firmware/mediatek/BT_RAM_CODE_MT7961_1_2_hdr.bin.xz из Arch Linux и распаковать в Windows (например, C:\\WINDOWS\\system32\\DRIVERS\\, точный путь к файлу прошивки можно найти в диспетчере устройств).\n\n"
    },
    {
      "title": "Адаптер пропадает после ждущего режима",
      "level": 4,
      "content": "Сперва найдите product ID адаптера. Например:\n\n```\n$ lsusb -tv\n```\n\n```\n/:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/12p, 480M\n    ID 1d6b:0002 Linux Foundation 2.0 root hub\n    ...\n    |__ Port 3: Dev 3, If 0, Class=Wireless, Driver=btusb, 12M\n        ID 8087:0025 Intel Corp.\n    |__ Port 3: Dev 3, If 1, Class=Wireless, Driver=btusb, 12M\n        ID 8087:0025 Intel Corp.\n    ...\n```\n\nВ данном случае vendor ID — 8087, product ID — 0025.\n\nЗатем используйте usb_modeswitch для сброса адаптера:\n\n```\n# usb_modeswitch -R -v vendor_ID -p product_ID\n```\n\n"
    },
    {
      "title": "Мой компьютер невидим",
      "level": 4,
      "content": "Включите режим обнаружения:\n\n```\n# bluetoothctl discoverable on\n```\n\nУбедитесь, что он включен:\n\n```\n# bluetoothctl show\n```\n\n```\nPowered: yes\n\tDiscoverable: yes\n\tPairable: yes\n```\n\nЕсли компьютер всё равно невидим, попробуйте изменить класс устройства в /etc/bluetooth/main.conf как показано ниже:\n\n```\n# Default device class. Only the major and minor device class bits are\n# considered.\n#Class = 0x000100 # Computer Type (from default config)\nClass = 0x100100 # (Object-Transfer Service & Computer Type)\n```\n\nПользователь сообщал, что это было единственное решение, сделавшее его компьютер видимым для телефона. Телевизоры LG (и некоторые другие) видимы с других устройств аудио, так что использование класса 000414 (soundbar) заставит такие устройства появиться.\n\nСмотрите https://bluetooth-pentest.narod.ru/software/bluetooth_class_of_device-service_generator.html для генерации классов устройств/служб Bluetooth.\n\n"
    },
    {
      "title": "Устройство подключается и затем отключается спустя мгновение",
      "level": 4,
      "content": "Если вы видите в журнале подобные сообщения и устройство не может подключиться или отключается вскоре после подключения:\n\n```\nbluetoothd: Unable to get connect data for Headset Voice gateway: getpeername: Transport endpoint is not connected (107)\nbluetoothd: connect error: Connection refused (111)\n```\n\nЭто может быть из-за того, что вы уже настроили сопряжение с этим устройством в другой операционной системе с тем же Bluetooth-адаптером (например, в случае двойной загрузки). Некоторые устройства не могут обрабатывать несколько сопряжений с одним и тем же MAC-адресом. Смотрите #Сопряжение при двойной загрузке для решения этой проблемы.\n\n"
    },
    {
      "title": "Устройство не видно при сканировании",
      "level": 4,
      "content": "Некоторые устройства Bluetooth low energy не отображаются при сканировании в bluetoothctl, например Logitech MX Master. Для их поиска можно использовать transport le.\n\n```\n# bluetoothctl\n```\n\n```\n[bluetooth]# menu scan\n[bluetooth]# transport le\n[bluetooth]# back\n[bluetooth]# scan on\n[bluetooth]# devices\n...\nDevice XX:XX:XX:XX:XX:XX DA V2 X <---- low energy device here\n```\n\nДругой способ — установить bluez-deprecated-tools, запустить службу bluetooth.service и выполнить:\n\n```\n# bluetoothctl\n```\n\n```\n[NEW] Controller (MAC) myhostname [default]\n\n[bluetooth]# power on\n[CHG] Controller (MAC) Class: 0x0c010c\nChanging power on succeeded\n[CHG] Controller (MAC) Powered: yes\n\n[bluetooth]# scan on\nDiscovery started\n[CHG] Controller (MAC) Discovering: yes\n```\n\nВ другом терминале:\n\n```\n# hcitool lescan\n```\n\nДождитесь появления устройства и затем прервите hcitool с помощью Ctrl+c. Теперь bluetoothctl должен увидеть ваше устройство и позволить нормально настроить сопряжение.\n\n"
    },
    {
      "title": "Устройства BLE не видны на Intel Corp. AX200 Bluetooth",
      "level": 4,
      "content": "Похоже, что пассивное сканирование BLE на этом устройстве не работает; смотрите сообщение об ошибке.\n\n"
    },
    {
      "title": "Не удаётся переподключиться после сна",
      "level": 4,
      "content": "Вы можете заметить, что не удаётся переподключиться к устройству после того, как оно перешло в спящий режим, или после пробуждения компьютера из сна.\n\nНапример, вы можете увидеть в журнале следующие ошибки:\n\n```\nbluetoothd[487]: Authentication attempt without agent\nbluetoothd[487]: Access denied: org.bluez.Error.Rejected\n```\n\nЭто может быть связано с тем, что устройство не отмечено как доверенное (trusted). Смотрите раздел #Сопряжение.\n\n"
    },
    {
      "title": "Bluetooth-мышь тормозит / отключается / зависает",
      "level": 4,
      "content": "Смотрите Bluetooth мышь#Решение проблем.\n\n"
    },
    {
      "title": "Аудиоустройство не может подключиться с ошибкой br-connection-profile-unavailable",
      "level": 4,
      "content": "Bluetooth-аудио не сможет подключиться, если используется pipewire (вместо pulseaudio-bluetooth), а экземпляр pipewire не запущен. Запустите пользовательскую службу pipewire.service или воспроизведите какой-нибудь звук, чтобы запустился демон pipewire, а затем попробуйте подключить устройство снова.\n\n"
    },
    {
      "title": "Интерференция между наушниками и мышью",
      "level": 4,
      "content": "Если аудио заикается при одновременном использовании Bluetooth-мыши и клавиатуры, попробуйте это, как указано на странице https://bugs.launchpad.net/ubuntu/+source/bluez/+bug/424215 в комментарии #23:\n\n```\n# hciconfig hci0 lm ACCEPT,MASTER\n# hciconfig hci0 lp HOLD,SNIFF,PARK\n```\n\n"
    },
    {
      "title": "Постоянное переподключение с TP-LINK UB400 и контроллером Xbox",
      "level": 4,
      "content": "Используйте такие настройки:\n\n```\n/etc/bluetooth/main.conf\n```\n\n```\n...\n[General]\nJustWorksRepairing = always\nFastConnectable = true\nClass = 0x000100\n...\n[GATT]\nReconnectIntervals=1,1,2,3,5,8,13,21,34,55\nAutoEnable=true\n...\n```\n\nПерезапустите службу bluetooth.service после внесения изменений.\n\nСмотрите также обсуждение в проекте xpadneo (но использовать сам xpadneo не требуется).\n\n"
    },
    {
      "title": "gnome-bluetooth",
      "level": 4,
      "content": "Если вы видите это при попытке включить получение файлов в настройках bluetooth:\n\n```\nBluetooth OBEX start failed: Invalid path\nBluetooth FTP start failed: Invalid path\n```\n\nТо убедитесь, что пользовательские каталоги XDG существуют.\n\n"
    },
    {
      "title": "Не удаётся получить файлы из-за символической ссылки",
      "level": 4,
      "content": "Если передача файла обрывается, хотя во всём остальном Bluetooth-соединение нормально работает, проблема может быть из-за символических ссылок в пути. В журнале могут появиться примерно такие записи:\n\n```\nJun 18 11:18:13 ember obexd[3338969]: open(/home/me/.cache/obexd/MOC740): Operation not permitted (1)\n```\n\nЕсли показанный здесь путь содержит символическую ссылку, то obexd по умолчанию не примет его. Поведение можно переопределить с помощью drop-in файла для пользовательской службы obex.service:\n\n```\n~/.config/systemd/user/obex.service.d/10-symlink.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/lib/bluetooth/obexd --symlinks\n```\n\nЗатем выполните systemctl daemon-reload --user от имени нужного пользователя и перезапустите пользовательский юнит obex.service.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Keeping Bluetooth devices paired between Linux and Windows\n- Bluetooth link keys on dual-boot systems\n\n"
    }
  ]
}
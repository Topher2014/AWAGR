{
  "title": "NVIDIA (Русский)",
  "url": "https://wiki.archlinux.org/title/NVIDIA_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- NVIDIA/Советы и рекомендации\n- NVIDIA/Решение проблем\n- Nouveau (Русский)\n- NVIDIA Optimus (Русский)\n- PRIME\n- Bumblebee (Русский)\n- nvidia-xrun (Русский)\n- Xorg (Русский)\n- Vulkan (Русский)\n\nДанная статья описывает процесс установки и настройки официального драйвера графических карт NVIDIA. Для получения информации о неофициальном свободном драйвере обратитесь к статье Nouveau (Русский). Также есть отдельная статья для обладателей ноутбуков с гибридной графикой Intel и NVIDIA, смотрите NVIDIA Optimus (Русский).\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Сперва узнайте архитектуру и семейство видеокарты (например, NV110, NVC0 и т. п.), найдя название модели на странице nouveau wiki с кодовыми именами — от архитектуры зависит, какую именно версию драйвера нужно установить. Узнать название модели можно командой:\n\n```\n$ lspci -k | grep -A 2 -E \"(VGA|3D)\"\n```\n\nЗатем установите драйвер, подходящий для вашей видеокарты:\n\nTable content:\nСемейство | Драйвер | Статус\nTuring (NV160/TUXXX)[устаревшая ссылка 2025-04-06 ⓘ] и более новые | nvidia-open для ядра linux nvidia-open-dkms для других ядер | Текущая версия, поддерживается1\nОт Maxwell (NV110/GMXXX)[устаревшая ссылка 2025-04-06 ⓘ] до Ada Lovelace (NV190/ADXXX)[устаревшая ссылка 2025-04-06 ⓘ] включительно | nvidia для ядра linux nvidia-lts для ядра linux-lts nvidia-dkms для других ядер\nKepler (NVE0/GKXXX)[устаревшая ссылка 2025-04-06 ⓘ] | nvidia-470xx-dkmsAUR | Старая версия, не поддерживается2,3\nFermi (NVC0/GF1XX)[устаревшая ссылка 2025-04-06 ⓘ] | nvidia-390xx-dkmsAUR\nTesla (NV50/G80-90-GT2XX)[устаревшая ссылка 2025-04-06 ⓘ] | nvidia-340xx-dkmsAUR\nCurie (NV40/G70)[устаревшая ссылка 2025-04-06 ⓘ] и более старые | Нет пакетов для Arch\n\n1. Если у вас новая видеокарта и стабильная версия драйвера ещё не поддерживает её, попробуйте пакет nvidia-open-betaAUR, в котором может быть более новый драйвер с поддержкой вашей видеокарты.\n1. Старые версии драйвера могут работать некорректно на системах с процессором Intel 11 поколения и новее и ядром 5.18 (или новее) из-за несовместимости с функцией безопасности Indirect Branch Tracking. Вы можете отключить её, добавив параметр ядра ibt=off в настройках загрузчика. Имейте в виду, что она отвечает за защиту от целого класса уязвимостей.\n1. Если у вас совсем старая видеокарта, NVIDIA больше не поддерживает драйвера для неё. Это означает, что последние доступные для неё драйвера могут не поддерживать текущую версию Xorg. В таком случае может оказаться проще использовать драйвер nouveau, который поддерживает старые видеокарты и текущую версию Xorg. Однако устаревшие драйверы NVIDIA всё ещё доступны и могут предоставлять более хорошую стабильность или производительность 3D.\n\nДля поддержки 32-разрядных приложений также необходимо установить соответствующий пакет nvidia lib32 из репозитория multilib (например, lib32-nvidia-utils).\n\nУдалите kms из массива HOOKS в файле /etc/mkinitcpio.conf и пересоберите образ initramfs. Это предотвратит добавление модуля nouveau в initramfs. Пакет nvidia-utils содержит файл, который запрещает загрузку модуля nouveau, так что запланируйте перезагрузку для его применения.\n\nПосле установки драйвера можно перейти к разделу #Настройка Xorg или #Wayland.\n\n"
    },
    {
      "title": "Собственное ядро",
      "level": 3,
      "content": "Убедитесь, что ядро собрано с опцией CONFIG_DRM_SIMPLEDRM=y, а при использовании CONFIG_DEBUG_INFO_BTF в PKGBUILD должно быть это (начиная с ядра 5.16):\n\n```\ninstall -Dt \"$builddir/tools/bpf/resolve_btfids\" tools/bpf/resolve_btfids/resolve_btfids\n```\n\n"
    },
    {
      "title": "DRM kernel mode setting",
      "level": 3,
      "content": "Поскольку NVIDIA не поддерживает автоматический поздний запуск KMS, для корректной работы композиторов Wayland или для запуска Xorg без прав root необходимо включить DRM (Direct Rendering Manager) kernel mode setting.\n\nС версии nvidia-utils 560.35.03-5 DRM включен по умолчанию.[1] В более старых версиях для включения добавьте параметр модуля ядра modeset=1 для модуля nvidia_drm.\n\nЧтобы проверить, что DRM действительно включен, можно выполнить команду:\n\n```\n# cat /sys/module/nvidia_drm/parameters/modeset\n```\n\nКоманда должна вывести Y.\n\n"
    },
    {
      "title": "Ранняя загрузка",
      "level": 4,
      "content": "Для базовой функциональности достаточно добавить параметр ядра. Если вы хотите, чтобы он загружался как можно раньше, или замечаете проблемы с запуском (например, модуль ядра nvidia загружается после экранного менеджера), вы можете добавить nvidia, nvidia_modeset, nvidia_uvm и nvidia_drm в initramfs.\n\nЕсли вы используете mkinitcpio, добавьте модули как описано в разделе mkinitcpio (Русский)#MODULES.\n\nПосле добавления не забывайте запускать mkinitcpio каждый раз после обновления пакета nvidia. Можно использовать #Хук pacman для автоматизации этого действия.\n\nЕсли вы используете Booster, смотрите Booster#Early module loading.\n\nЕсли вы используете dracut, смотрите dracut#Early kernel module loading.\n\nЧтобы не забывать обновлять initramfs после обновления драйвера NVIDIA, вы можете использовать хук pacman:\n\n```\n/etc/pacman.d/hooks/nvidia.hook\n```\n\n```\n[Trigger]\nOperation=Install\nOperation=Upgrade\nOperation=Remove\nType=Package\n# Раскомментируйте строку, которая соответствует установленному пакету\nTarget=nvidia\n#Target=nvidia-open\n#Target=nvidia-lts\n# Если вы используете другой пакет ядра, пропишите его в строке ниже\nTarget=linux\n\n[Action]\nDescription=Updating NVIDIA module in initcpio\nDepends=mkinitcpio\nWhen=PostTransaction\nNeedsTargets\nExec=/bin/sh -c 'while read -r trg; do case $trg in linux*) exit 0; esac; done; /usr/bin/mkinitcpio -P'\n```\n\n"
    },
    {
      "title": "Аппаратное декодирование видео",
      "level": 3,
      "content": "Аппаратное декодирование видео с помощью VDPAU поддерживается на картах серии GeForce 8 и новее. Аппаратное декодирование видео с помощью NVDEC поддерживается на картах Fermi (~400 серии) и новее. Подробности смотрите в статье Аппаратное ускорение видео.\n\n"
    },
    {
      "title": "Аппаратное кодирование видео с помощью NVENC",
      "level": 3,
      "content": "Для NVENC нужен модуль nvidia_uvm и файлы устройств в /dev.\n\nПакеты с последней версией драйвера содержат правила udev, которые создают нужные файлы автоматически, так что дополнительные действия не требуются.\n\nЕсли у вас старый драйвер (например, nvidia-340xx-dkmsAUR), вам нужно создать файлы устройств самостоятельно. Вызов утилиты nvidia-modprobe создаст их. Вы можете создать /etc/udev/rules.d/70-nvidia.rules для автоматического её запуска:\n\n```\n/etc/udev/rules.d/70-nvidia.rules\n```\n\n```\nACTION==\"add\", DEVPATH==\"/bus/pci/drivers/nvidia\", RUN+=\"/usr/bin/nvidia-modprobe -c 0 -u\"\n```\n\n"
    },
    {
      "title": "Настройка Xorg",
      "level": 2,
      "content": "Проприетарный драйвер NVIDIA не нуждается в файле конфигурации сервера Xorg. Вы можете запустить X для проверки корректной работы сервера Xorg без файла конфигурации. Однако может потребоваться создать файл (предпочтительнее /etc/X11/xorg.conf.d/20-nvidia.conf, чем /etc/X11/xorg.conf) для тонкой настройки некоторых параметров. Его можно сгенерировать инструментом конфигурации Xorg от NVIDIA или создать вручную. Если он создаётся вручную, конфигурация в нём может быть минимальной (в том смысле, что она будет содержать только базовые настройки сервера Xorg), или она может включать в себя ряд настроек, которые могут обходить автоматически найденные или предварительно заданные настройки.\n\n"
    },
    {
      "title": "Автоматическая настройка",
      "level": 3,
      "content": "Пакет NVIDIA включает в себя автоматический инструмент для создания файла конфигурации сервера Xorg (xorg.conf) и может быть запущен путём выполнения:\n\n```\n# nvidia-xconfig\n```\n\nДанная команда автоматически обнаруживает и создаёт (или изменяет существующую) конфигурацию /etc/X11/xorg.conf в соответствии с текущим аппаратным обеспечением.\n\nЕсли есть строка с указанием загрузки DRI, убедитесь, что она закомментирована:\n\n```\n#    Load        \"dri\"\n```\n\nПроверьте ещё раз /etc/X11/xorg.conf и убедитесь, что глубина по умолчанию, горизонтальная синхронизация, частота кадров и разрешение допустимы.\n\n"
    },
    {
      "title": "nvidia-settings",
      "level": 3,
      "content": "Инструмент nvidia-settings позволяет редактировать большинство опций через консоль или графический интерфейс. Запуск nvidia-settings без параметров запустит графический интерфейс; доступные опции командной строки описаны в nvidia-settings(1).\n\nТакже вы можете запустить nvidia-settings от имени обычного пользователя и сохранить настройки в ~/.nvidia-settings-rc, используя кнопку Save Current Configuration на вкладке nvidia-settings Configuration.\n\nЧтобы загрузить настройки из ~/.nvidia-settings-rc для текущего пользователя:\n\n```\n$ nvidia-settings --load-config-only\n```\n\nМожно добавить эту команду в автозапуск.\n\n- Xorg может перестать запускаться после сохранения изменений в nvidia-settings. Изменение или удаление сгенерированных файлов ~/.nvidia-settings-rc и/или Xorg поможет восстановить работоспособность.\n- Cinnamon может переопределять настройки, сделанные в nvidia-settings. Вы можете настроить запуск Cinnamon, чтобы предотвратить это.\n\n"
    },
    {
      "title": "Ручная настройка",
      "level": 3,
      "content": "Некоторые настройки (которые не могут быть включены автоматически или с помощью nvidia-settings) можно изменить через файл конфигурации. Для применения изменений нужно будет перезапустить сервер Xorg.\n\nПодробности и доступные опции описаны в NVIDIA Accelerated Linux Graphics Driver README and Installation Guide.\n\n"
    },
    {
      "title": "Минимальная настройка",
      "level": 4,
      "content": "Минимальный блок настроек 20-nvidia.conf может выглядеть так:\n\n```\n/etc/X11/xorg.conf.d/20-nvidia.conf\n```\n\n```\nSection \"Device\"\n        Identifier \"NVIDIA Card\"\n        Driver \"nvidia\"\n        VendorName \"NVIDIA Corporation\"\n        BoardName \"GeForce GTX 1050 Ti\"\nEndSection\n```\n\n"
    },
    {
      "title": "Отключение лого при запуске",
      "level": 4,
      "content": "Если вы используете старый драйвер (nvidia-340xx-dkmsAUR), который ещё отображает логотип NVIDIA при запуске X, вы можете отключить его отображение, добавив \"NoLogo\" в секцию Device:\n\n```\nOption \"NoLogo\" \"1\"\n```\n\n"
    },
    {
      "title": "Переопределение обнаружения монитора",
      "level": 4,
      "content": "Опция \"ConnectedMonitor\" в секции Device позволяет переопределить обнаружение монитора при запуске X-сервера, что может сэкономить значительное количество времени при запуске. Доступными опциями являются: \"CRT\" для аналоговых подключений, \"DFP\" для цифровых мониторов и \"TV\" для телевизоров.\n\nСледующая опция заставит драйвер NVIDIA обойти проверки при запуске и распознать монитор как DFP:\n\n```\nOption \"ConnectedMonitor\" \"DFP\"\n```\n\n"
    },
    {
      "title": "Включение SLI",
      "level": 4,
      "content": "В официальной документации указано, что Option \"SLI\" управляет настройкой SLI на поддерживаемых конфигурациях. «Поддерживаемая конфигурация» — это компьютер с материнской платой, имеющей сертификацию SLI и 2 или 3 GPU GeForce с сертификацией SLI.\n\nНайдите идентификатор PCI-шины первого GPU с помощью lspci:\n\n```\n# lspci | grep -E \"VGA|3D controller\"\n```\n\n```\n00:02.0 VGA compatible controller: Intel Corporation Xeon E3-1200 v2/3rd Gen Core processor Graphics Controller (rev 09)\n03:00.0 VGA compatible controller: NVIDIA Corporation GK107 [GeForce GTX 650] (rev a1)\n04:00.0 VGA compatible controller: NVIDIA Corporation GK107 [GeForce GTX 650] (rev a1)\n08:00.0 3D controller: NVIDIA Corporation GM108GLM [Quadro K620M / Quadro M500M] (rev a2)\n```\n\nДобавьте BusID (в данном примере 3) в секцию Device:\n\n```\nBusID \"PCI:3:0:0\"\n```\n\nДобавьте нужное значение режима рендеринга SLI в секции Screen:\n\n```\nOption \"SLI\" \"AA\"\n```\n\nТаблица доступных режимов рендеринга:\n\nTable content:\nЗначение | Поведение\n0, no, off, false, Single | Использовать только один GPU при рендеринге.\n1, yes, on, true, Auto | Включить SLI и позволить драйверу автоматически выбрать подходящий режим рендеринга.\nAFR | Включить SLI и использовать режим рендеринга чередующихся кадров (alternate frame rendering mode).\nSFR | Включить SLI и использовать режим рендеринга с разделением кадров (split frame rendering mode).\nAA | Включить SLI и использовать сглаживание SLI. Используйте это в сочетании с полным сглаживанием сцены для улучшения качества изображения.\n\nТакже можно использовать nvidia-xconfig для внесения этих изменений в xorg.conf одной командой:\n\n```\n# nvidia-xconfig --busid=PCI:3:0:0 --sli=AA\n```\n\nПроверка режима SLI:\n\n```\n$ nvidia-settings -q all | grep SLIMode\n```\n\n```\nAttribute 'SLIMode' (arch:0.0): AA\n    'SLIMode' is a string attribute.\n    'SLIMode' is a read-only attribute.\n    'SLIMode' can use the following target types: X Screen.\n```\n\nЕсли эта конфигурация не работает, может понадобиться использовать PCI Bus ID, который выдаст nvidia-settings,\n\n```\n$ nvidia-settings -q all | grep -i pcibus\n```\n\n```\nAttribute 'PCIBus' (host:0[gpu:0]): 101.\n  'PCIBus' is an integer attribute.\n  'PCIBus' is a read-only attribute.\n  'PCIBus' can use the following target types: GPU, SDI Input Device.\nAttribute 'PCIBus' (host:0[gpu:1]): 23.\n  'PCIBus' is an integer attribute.\n  'PCIBus' is a read-only attribute.\n  'PCIBus' can use the following target types: GPU, SDI Input Device.\n```\n\nи закомментировать опцию Primary GPU в настройках xorg,\n\n```\n/usr/share/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf\n```\n\n```\n...\n\nSection \"OutputClass\"\n...\n    # Option \"PrimaryGPU\" \"yes\"\n...\n```\n\nИспользование этой конфигурации также может решить проблемы с графической загрузкой.\n\n"
    },
    {
      "title": "Несколько мониторов",
      "level": 3,
      "content": "Смотрите Multihead для получения основной информации.\n\n"
    },
    {
      "title": "Использование nvidia-settings",
      "level": 4,
      "content": "Можно использовать nvidia-settings для настройки нескольких мониторов.\n\nДля настройки через командную строку сперва узнайте CurrentMetaMode:\n\n```\n$ nvidia-settings -q CurrentMetaMode\n```\n\n```\nAttribute 'CurrentMetaMode' (hostnmae:0.0): id=50, switchable=no, source=nv-control :: DPY-1: 2880x1620 @2880x1620 +0+0 {ViewPortIn=2880x1620, ViewPortOut=2880x1620+0+0}\n```\n\nСохраните всё после символов :: и до конца атрибута (в данном примере DPY-1: 2880x1620 @2880x1620 +0+0 {ViewPortIn=2880x1620, ViewPortOut=2880x1620+0+0}) и используйте для перенастройки мониторов с помощью nvidia-settings --assign \"CurrentMetaMode=your_meta_mode\".\n\n"
    },
    {
      "title": "ConnectedMonitor",
      "level": 4,
      "content": "Если драйвер не определил второй монитор, вы можете принудительно указать его с помощью опции ConnectedMonitor.\n\n```\n/etc/X11/xorg.conf\n```\n\n```\nSection \"Monitor\"\n    Identifier     \"Monitor1\"\n    VendorName     \"Panasonic\"\n    ModelName      \"Panasonic MICRON 2100Ex\"\n    HorizSync       30.0 - 121.0 # this monitor has incorrect EDID, hence Option \"UseEDIDFreqs\" \"false\"\n    VertRefresh     50.0 - 160.0\n    Option         \"DPMS\"\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Monitor2\"\n    VendorName     \"Gateway\"\n    ModelName      \"GatewayVX1120\"\n    HorizSync       30.0 - 121.0\n    VertRefresh     50.0 - 160.0\n    Option         \"DPMS\"\nEndSection\n\nSection \"Device\"\n    Identifier     \"Device1\"\n    Driver         \"nvidia\"\n    Option         \"NoLogo\"\n    Option         \"UseEDIDFreqs\" \"false\"\n    Option         \"ConnectedMonitor\" \"CRT,CRT\"\n    VendorName     \"NVIDIA Corporation\"\n    BoardName      \"GeForce 6200 LE\"\n    BusID          \"PCI:3:0:0\"\n    Screen          0\nEndSection\n\nSection \"Device\"\n    Identifier     \"Device2\"\n    Driver         \"nvidia\"\n    Option         \"NoLogo\"\n    Option         \"UseEDIDFreqs\" \"false\"\n    Option         \"ConnectedMonitor\" \"CRT,CRT\"\n    VendorName     \"NVIDIA Corporation\"\n    BoardName      \"GeForce 6200 LE\"\n    BusID          \"PCI:3:0:0\"\n    Screen          1\nEndSection\n```\n\nДублирование устройств с опцией Screen описывает использование сервером Xorg двух мониторов на одной карте без технологии TwinView. Учтите, что nvidia-settings будет вырезать любое упоминание опции ConnectedMonitor.\n\n"
    },
    {
      "title": "TwinView",
      "level": 4,
      "content": "Если вы хотите только один большой экран вместо двух, установите значение опции TwinView в 1. Эта опция должна использоваться, если вы хотите композитинг. Технология TwinView работает только на базе одной карты, когда все мониторы подключены к одной карте.\n\n```\nOption \"TwinView\" \"1\"\n```\n\nПример конфигурации:\n\n```\n/etc/X11/xorg.conf.d/10-monitor.conf\n```\n\n```\nSection \"ServerLayout\"\n    Identifier     \"TwinLayout\"\n    Screen         0 \"metaScreen\" 0 0\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Monitor0\"\n    Option         \"Enable\" \"true\"\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Monitor1\"\n    Option         \"Enable\" \"true\"\nEndSection\n\nSection \"Device\"\n    Identifier     \"Card0\"\n    Driver         \"nvidia\"\n    VendorName     \"NVIDIA Corporation\"\n\n    #refer to the link below for more information on each of the following options.\n    Option         \"HorizSync\"          \"DFP-0: 28-33; DFP-1: 28-33\"\n    Option         \"VertRefresh\"        \"DFP-0: 43-73; DFP-1: 43-73\"\n    Option         \"MetaModes\"          \"1920x1080, 1920x1080\"\n    Option         \"ConnectedMonitor\"   \"DFP-0, DFP-1\"\n    Option         \"MetaModeOrientation\" \"DFP-1 LeftOf DFP-0\"\nEndSection\n\nSection \"Screen\"\n    Identifier     \"metaScreen\"\n    Device         \"Card0\"\n    Monitor        \"Monitor0\"\n    DefaultDepth    24\n    Option         \"TwinView\" \"True\"\n    SubSection \"Display\"\n        Modes          \"1920x1080\"\n    EndSubSection\nEndSection\n```\n\nДополнительная информация о технологии TwinView (англ.).\n\nЕсли вы имеете несколько карт, которые совместимы с технологией SLI, вы можете использовать несколько мониторов, присоединённых к разным картам (пример: две карты в режиме SLI с подключением монитора на каждой карте). Опция \"MetaModes\" совместно с режимом SLI Mosaic позволяет это. Ниже указана конфигурация, которая работает для вышеупомянутого примера и безупречно запускает GNOME.\n\n```\n/etc/X11/xorg.conf.d/10-monitor.conf\n```\n\n```\nSection \"Device\"\n        Identifier      \"Card A\"\n        Driver          \"nvidia\"\n        BusID           \"PCI:1:00:0\"\nEndSection\n\nSection \"Device\"\n        Identifier      \"Card B\"\n        Driver          \"nvidia\"\n        BusID           \"PCI:2:00:0\"\nEndSection\n\nSection \"Monitor\"\n        Identifier      \"Right Monitor\"\nEndSection\n\nSection \"Monitor\"\n        Identifier      \"Left Monitor\"\nEndSection\n\nSection \"Screen\"\n        Identifier      \"Right Screen\"\n        Device          \"Card A\"\n        Monitor         \"Right Monitor\"\n        DefaultDepth    24\n        Option          \"SLI\" \"Mosaic\"\n        Option          \"Stereo\" \"0\"\n        Option          \"BaseMosaic\" \"True\"\n        Option          \"MetaModes\" \"GPU-0.DFP-0: 1920x1200+4480+0, GPU-1.DFP-0:1920x1200+0+0\"\n        SubSection      \"Display\"\n                        Depth           24\n        EndSubSection\nEndSection\n\nSection \"Screen\"\n        Identifier      \"Left Screen\"\n        Device          \"Card B\"\n        Monitor         \"Left Monitor\"\n        DefaultDepth    24\n        Option          \"SLI\" \"Mosaic\"\n        Option          \"Stereo\" \"0\"\n        Option          \"BaseMosaic\" \"True\"\n        Option          \"MetaModes\" \"GPU-0.DFP-0: 1920x1200+4480+0, GPU-1.DFP-0:1920x1200+0+0\"\n        SubSection      \"Display\"\n                        Depth           24\n        EndSubSection\nEndSection\n\nSection \"ServerLayout\"\n        Identifier      \"Default\"\n        Screen 0        \"Right Screen\" 0 0\n        Option          \"Xinerama\" \"0\"\nEndSection\n```\n\nЕсли вы используете TwinView и вертикальную синхронизацию (опция \"Sync to VBlank\" в nvidia-settings), вы заметите, что только один экран корректно использует синхронизацию, если у вас нет двух одинаковых мониторов. Несмотря на то, что nvidia-settings имеет необходимую опцию для выбора, какой именно экран синхронизировать (опция \"Sync to this display device\"), это не всегда работает. Решением будет добавить следующие переменные окружения при запуске, например в /etc/profile:\n\n```\nexport __GL_SYNC_TO_VBLANK=1\nexport __GL_SYNC_DISPLAY_DEVICE=DFP-0\nexport VDPAU_NVIDIA_SYNC_DISPLAY_DEVICE=DFP-0\n```\n\nВы можете изменить DFP-0 на ваш используемый монитор (DFP-0 это DVI порт, а CRT-0 - VGA порт). Идентификатор для вашего монитора можно найти с помощью nvidia-settings в секции \"X Server XVideoSettings\".\n\nЕсли вы захотите сыграть в полноэкранные игры при использовании TwinView, вероятно вы заметите, что игры распознают два экрана как один большой экран. Хотя это технически правильно (виртуальный экран X в действительности соответствует размеру ваших экранов вместе), вы, вероятно, не захотите так играть.\n\nЧтобы исправить это для SDL, попробуйте:\n\n```\nexport SDL_VIDEO_FULLSCREEN_HEAD=1\n```\n\nДля OpenGL добавьте Metamodes в свой xorg.conf в секции Device и перезапустите X:\n\n```\nOption \"Metamodes\" \"1680x1050,1680x1050; 1280x1024,1280x1024; 1680x1050,NULL; 1280x1024,NULL;\"\n```\n\nЕщё один метод, который может работать самостоятельно или в сочетании с упомянутыми выше — запуск игр в отдельном X-сервере.\n\n"
    },
    {
      "title": "Режим Mosaic",
      "level": 4,
      "content": "Режим Mosaic — единственный способ использовать более чем два монитора на нескольких видеокартах с использованием композитинга. Ваш оконный менджер может распознать, а может и не распознать различия между мониторами. Режим Mosaic требует правильной конфигурации SLI. Даже если используется режим Base без SLI, видеокарты должны быть совместимы с SLI.\n\nРежим Base Mosaic работает с картами Geforce 8000 series или выше. Его нельзя включить через графический интерфейс nvidia-setting. Вы должны использовать команду nvidia-xconfig либо отредактировать xorg.conf самостоятельно. Опция Metamodes должна быть указана. Следующий пример для четырёх DFP мониторов в конфигурации 2х2, каждый запущен в разрешении 1920x1024, по два подключенных DFP монитора на две карты:\n\n```\n$ nvidia-xconfig --base-mosaic --metamodes=\"GPU-0.DFP-0: 1920x1024+0+0, GPU-0.DFP-1: 1920x1024+1920+0, GPU-1.DFP-0: 1920x1024+0+1024, GPU-1.DFP-1: 1920x1024+1920+1024\"\n```\n\nЕсли вы имеете конфигурацию SLI и все графические ускорители серии Quadro FX 5800, Quadro Fermi или новее, тогда вы можете использовать режим SLI Mosaic. он может быть включен через графический интерфейс nvidia-settings или через командную строку:\n\n```\n$ nvidia-xconfig --sli=Mosaic --metamodes=\"GPU-0.DFP-0: 1920x1024+0+0, GPU-0.DFP-1: 1920x1024+1920+0, GPU-1.DFP-0: 1920x1024+0+1024, GPU-1.DFP-1: 1920x1024+1920+1024\"\n```\n\n"
    },
    {
      "title": "Wayland",
      "level": 2,
      "content": "Для работы Wayland необходимо включить #DRM kernel mode setting. Смотрите также Wayland (Русский)#Требования.\n\nДополнительные параметры конфигурации можно найти на страницах вики или в документации соответствующего композитора.\n\nИнформацию об Xwayland смотрите в разделе Wayland (Русский)#Xwayland.\n\nЕсли вы используете GDM, смотрите GDM#Wayland and the proprietary NVIDIA driver.\n\n"
    },
    {
      "title": "NVswitch",
      "level": 2,
      "content": "Для систем с NVswitch, таких как H100x8 на AWS, нужно в дополнение к драйверу установить fabricmanager. Без него pytorch не заработает с сообщением об отсутствующем GPU.\n\nДля установки fabricmanager нужно скачать архив, соответствующий версии установленного драйвера, и исправить путь установки файла в sbin/fm_run_package_installer.sh.\n\nПосле установки запустите и включите службу nvidia-fabricmanager.service, и pytorch должен заработать.\n\n"
    },
    {
      "title": "Советы и рекомендации",
      "level": 2,
      "content": "Смотрите NVIDIA/Советы и рекомендации.\n\n"
    },
    {
      "title": "Решение проблем",
      "level": 2,
      "content": "Смотрите NVIDIA/Решение проблем.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Информация о текущих версиях драйверов на официальном форуме NVIDIA\n- NVIDIA Developers Forum - Linux Subforum\n\n"
    }
  ]
}
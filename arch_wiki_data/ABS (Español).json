{
  "title": "ABS (Español)",
  "url": "https://wiki.archlinux.org/title/ABS_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs to be translated.** This article or section needs to be translated.\n\nThis article or section needs to be translated.\n\nNote: **2022-10-21** \n\nArtículos relacionados\n\n- Estándares de empaquetado en Arch\n- Repositorio de usuarios de Arch\n- Crear paquetes\n- Compilación del kernel con ABS\n- makepkg\n- Repositorios oficiales\n- pacman\n- PKGBUILD\n- Parchear en ABS\n\nEl sistema de compilación Arch (Arch build system ó ABS) es un sistema parecido a ports para compilar y empaquetar software a partir del código fuente. Si bien pacman es la herramienta especializada de Arch para la administración de paquetes binarios (incluidos los paquetes creados con ABS), ABS es una colección de herramientas para compilar el código fuente en paquetes instalables .pkg.tar.zst.\n\nPorts es un sistema utilizado por *BSD para automatizar el proceso de creación de software a partir del código fuente. El sistema utiliza un port para descargar, desempaquetar, parchear, compilar e instalar el software dado. Un port es simplemente un pequeño directorio en la computadora del usuario, llamado así por el software correspondiente a instalar, que contiene algunos archivos con las instrucciones para construir e instalar el software desde la fuente. Esto hace que la instalación del software sea tan simple como escribir make o make install clean dentro del directorio del port.\n\nABS es un concepto similar. Una parte de ABS es un repositorio SVN y un repositorio Git equivalente. El repositorio contiene un directorio correspondiente a cada paquete disponible en Arch Linux. Los directorios del repositorio contienen un archivo PKGBUILD (y a veces otros archivos), y no contienen la fuente del software ni el binario. Al emitir makepkg dentro de un directorio, las fuentes del software se descargan, el software se compila y luego se empaqueta dentro del directorio de compilación. Entonces puedes utilizar pacman para instalar el paquete.\n\n"
    },
    {
      "title": "Visión general",
      "level": 2,
      "content": "'ABS' puede utilizarse como un término general, ya que incluye y se basa en otros componentes; por lo tanto, aunque no es técnicamente exacto, 'ABS' puede referirse a las siguientes herramientas como un conjunto de herramientas (toolkit) completo:\n\n"
    },
    {
      "title": "Árbol del repositorio",
      "level": 3,
      "content": "Los repositorios oficiales principales, adicionales y de prueba se encuentran en el repositorio de paquetes para consultar. Los repositorios community y multilib están en el repositorio community.\n\nCada paquete tiene su propio subdirectorio. Dentro de él hay directorios repos y trunk. repos se desglosa aún más por nombre de repositorio (por ejemplo, core) y arquitectura. Los PKGBUILD y los archivos que se encuentran en repos se utilizan en compilaciones oficiales. Los desarrolladores utilizan los archivos que se encuentran en trunk para prepararlos antes de copiarlos en repos.\n\nPor ejemplo, el árbol para acl se ve así:\n\n```\nacl\nacl/repos\nacl/repos/core-x86_64\nacl/repos/core-x86_64/PKGBUILD\nacl/trunk\nacl/trunk/PKGBUILD\n```\n\nEl código fuente del paquete no está presente en el directorio ABS. En cambio, PKGBUILD contiene una URL que descargará el código fuente cuando se construya el paquete.\n\n"
    },
    {
      "title": "Casos de uso",
      "level": 2,
      "content": "ABS automatiza ciertas tareas relacionadas con la compilación desde la fuente. Sus casos de uso son:\n\n- Cualquier caso de uso que requiera compilar o recompilar un paquete.\n- Crear e instalar nuevos paquetes desde la fuente del software para el que aún no hay paquetes disponibles (véase Creación de paquetes).\n- Personalizar los paquetes existentes para que se ajusten a sus necesidades (por ejemplo, activar o desactivar opciones, aplicar parches).\n- Reconstruir todo su sistema utilizando las banderas (flags) de su compilador, \"al estilo FreeBSD\".\n- Crear e instalar limpiamente su propio kernel personalizado (véase Compilación del kernel).\n- Obtener módulos de kernel que funcionen con un kernel personalizado.\n- Compilar e instalar fácilmente una versión más reciente, anterior, beta o de desarrollo de un paquete de Arch modificando el número de versión en PKGBUILD.\n\n"
    },
    {
      "title": "Recuperar la fuente PKGBUILD",
      "level": 3,
      "content": "Para recuperar el archivo PKGBUILD necesario para compilar un determinado paquete desde la fuente, puede utilizar SVN o un enfoque basado en Git.\n\n"
    },
    {
      "title": "Recuperar la fuente PKGBUILD utilizando Git",
      "level": 4,
      "content": "Como condición previa, instale el paquete aspAUR. Asp es una herramienta para recuperar los archivos fuente de compilación para los paquetes de Arch Linux utilizando la interfaz de Git. Véase también el hilo del foro Arch Linux BBS [2].\n\nPara clonar el repositorio svntogit para un paquete específico, utilice:\n\n```\n$ asp checkout nombre_del_paquete\n```\n\nEsto clonará el repositorio de git para el paquete dado en un directorio llamado como el paquete.\n\nPara actualizar el repositorio de git clonado, ejecute asp update seguido de git pull dentro del repositorio de git.\n\nAdemás, puede utilizar todos las demás órdenes de git para obtener una versión anterior del paquete o para realizar un seguimiento de los cambios personalizados. Para obtener más información sobre el uso de git, véase la página git.\n\nSi solo desea copiar una instantánea del PKGBUILD actual para un paquete específico, utilice:\n\n```\n$ asp export nombre_del_paquete\n```\n\nUtilice la siguiente orden git para clonar solo una rama específica. De esta manera evitará copiar todo el repositorio:\n\n```\n$ git clone --branch rama/paquete --single-branch https://github.com/archlinux/svntogit-packages.git\n```\n\nPor ejemplo, para copiar los archivos de compilación de Apache:\n\n```\n$ git clone --branch packages/apache --single-branch https://github.com/archlinux/svntogit-packages.git\n```\n\n"
    },
    {
      "title": "Recuperar la fuente PKGBUILD utilizando SVN",
      "level": 4,
      "content": "Instale el paquete subversion.\n\nPara consultar los repositorios oficiales core, extra y testing:\n\n```\n$ svn checkout --depth=empty svn://svn.archlinux.org/packages\n```\n\nPara consultar los repositorios community y multilib:\n\n```\n$ svn checkout --depth=empty svn://svn.archlinux.org/community\n```\n\nEn ambos casos, simplemente crea un directorio vacío, pero sabe que es una comprobación svn.\n\nEn el directorio que contiene el repositorio svn que comprobó (es decir, packages o community), haga lo siguiente:\n\n```\n$ svn update nombre_del_paquete\n```\n\nEsto llevará el paquete que solicitó a su comprobación. De ahora en adelante, cada vez que haga svn update en el nivel superior, esto también se actualizará.\n\nSi especifica un paquete que no existe, svn no le avisará. Simplemente imprimirá algo como \"At revision 115847\", sin crear ningún archivo. Si eso pasa:\n\n- compruebe como escribió el nombre del paquete\n- verifique que el paquete no se haya movido a otro repositorio (es decir, de la comunidad al repositorio principal)\n- compruebe https://archlinux.org/packages para ver si el paquete se crea a partir de otro paquete base (por ejemplo, python-tensorflow se crea a partir de tensorflow PKGBUILD)\n\nDebe actualizar periódicamente todos sus paquetes extraídos si desea realizar reconstrucciones en revisiones más recientes de los repositorios. Para esto, haga:\n\n```\n$ svn update\n```\n\nDentro del repositorio svn que desprotegió como se describe en #Consultar un repositorio (es decir, \"packages\" o \"community\"), primero examine el registro:\n\n```\n$ svn log nombre_del_paquete\n```\n\nAverigüe la revisión que desea examinando el historial, luego especifique la revisión que desea verificar. Por ejemplo, para comprobar la revisión r1729 haría lo siguiente:\n\n```\n$ svn update -r1729 nombre_del_paquete\n```\n\nEsto actualizará una copia del trabajo existente de nombre_del_paquete a la revisión elegida.\n\nTambién puede especificar una fecha. Si no existe una revisión ese día, svn tomará el paquete más reciente antes de esa hora. El siguiente ejemplo comprueba la revisión de 2009-03-03:\n\n```\n$ svn update -r'{20090303}' nombre_del_paquete\n```\n\nEs posible retirar paquetes en versiones antes de que se movieran a otro repositorio; revise los registros a fondo para ver la fecha en que se movieron o el último número de revisión.\n\n"
    },
    {
      "title": "Construir el paquete",
      "level": 3,
      "content": "Configure makepkg para construir paquetes a partir de los PKGBUILD que ha extraído, como se explica en makepkg#Configuration.\n\nLuego, copie el directorio que contiene el PKGBUILD que desea modificar a una nueva ubicación. Realice las modificaciones deseadas allí y utilice allí makepkg como se describe en makepkg#Usage para crear e instalar el nuevo paquete.\n\n"
    },
    {
      "title": "Conservar paquetes modificados",
      "level": 3,
      "content": "Actualizar el sistema con pacman reemplazará un paquete modificado de ABS con el paquete del mismo nombre de los repositorios oficiales. Véase las siguientes instrucciones para descubrir cómo evitarlo.\n\nInserte una matriz de grupo en PKGBUILD y agregue el paquete a un grupo llamado modified.\n\n```\nPKGBUILD\n```\n\n```\ngroups=('modified')\n```\n\nAgregue este grupo a la sección IgnoreGroup en /etc/pacman.conf.\n\n```\n/etc/pacman.conf\n```\n\n```\nIgnoreGroup = modified\n```\n\nSi hay nuevas versiones disponibles en los repositorios oficiales durante una actualización del sistema, pacman imprime una nota de que se salta esta actualización porque está en la sección IgnoreGroup. En este punto, el paquete modificado debe reconstruirse a partir de ABS para evitar actualizaciones parciales.\n\n"
    },
    {
      "title": "Otras herramientas",
      "level": 2,
      "content": "- pbget - recupera PKGBUILDs para paquetes individuales directamente desde la interfaz web. Incluye soporte AUR.\n\n"
    }
  ]
}
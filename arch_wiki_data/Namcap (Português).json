{
  "title": "Namcap (Português)",
  "url": "https://wiki.archlinux.org/title/Namcap_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Namcap é uma ferramenta para verificar pacotes binários e PKGBUILDs fonte para erros comuns de empacotamento, que também pode ser habilitado automaticamente. Ele foi criado por Jason Chu.\n\nAlterações: O arquivo NEWS no repositório Git contém as alterações em relação versões anteriores de forma concisa.\n\nRamo de desenvolvimento: https://gitlab.archlinux.org/pacman/namcap\n\nPara fazer um relato de erro ou requisição de recurso para o namcap, preencha um relatório na seção Packages:Extra do rastreador de erros do Arch Linux e defina a importância conforme o caso. Se você está relatando um erro, por favor forneça exemplos concretos de pacotes nos quais o problema ocorra e lembre-se de inserir o número de versão.\n\nSe você tem um patch (corrigindo um erro ou adicionando um novo módulo para o namcap), você pode enviá-lo para a lista de discussão arch-projects. O desenvolvimento do namcap é gerenciado com git, então patches formatados em git são preferíveis.\n\n"
    },
    {
      "title": "Instalação",
      "level": 2,
      "content": "Instale o pacote namcap.\n\n"
    },
    {
      "title": "Como usá-lo",
      "level": 2,
      "content": "Para executar o namcap em um arquivo, sendo nome_de_arquivo o PKGBUILD ou o nome de um binário pkg.tar.xz:\n\n```\n$ namcap nome_de_arquivo\n```\n\nSe você deseja ver mensagens informacionais extras, chame o namcap com a opção -i:\n\n```\n$ namcap -i nome_de_arquivo\n```\n\nPara mais informações sobre uso, veja a página man namcap(1).\n\n"
    },
    {
      "title": "Entendendo a saída",
      "level": 2,
      "content": "O namcap usa um sistema de tags para classificar a saída. Atualmente, as tags são de três tipos, erros (denotados por E), avisos (denotados por W) e informativo (denotado por I). Um erro é importante e deve ser corrigido imediatamente; principalmente se eles referem a segurança insuficiente, falta de licença ou problemas de permissão.\n\nNormalmente, o namcap imprime uma explicação legível por humanos (às vezes com sugestões sobre como solucionar o problema). Se quiser saída que pode ser facilmente analisada por um programa, passe a opção -m (legível para máquina) para o namcap (esse recurso está atualmente no ramo de desenvolvimento).\n\n"
    },
    {
      "title": "Links simbólicos",
      "level": 3,
      "content": "- symlink-found (informacional) Relata quaisquer links simbólicos presentes no pacote.\n- hardlink-found (informacional) Relata quaisquer links absolutos presentes no pacote.\n- dangling-symlink (erro) Relata ocorrências de links simbólicos que apontam para um arquivo que não está presente no pacote.\n- dangling-hardlink (erro) Relata ocorrências de links absolutos que apontam para um arquivo que não está presente no pacote.\n\n"
    },
    {
      "title": "Depedências",
      "level": 3,
      "content": "- link-level-dependence (informacional) Informa sobre uma biblioteca à qual um pacote está dinamicamente vinculado.\n- dependency-is-testing-release (aviso) A dependência do pacote listada está no repositório [core-testing] ou [extra-testing]. Enquanto os pacotes estão sendo criados para os repositórios oficiais do Arch Linux (core e extra), eles não devem ser compilados contra pacotes do [core-testing] ou [extra-testing]. Para os pacotes do [core] e [extra], os pacotes comilados contra [core-testing] ou [extra-testing] devem ser colocados no repositório [core-testing] ou [extra-testing].\n- dependency-covered-by-link-dependence (informacional) Dependência coberta por dependências da dependência de links. Portanto, esta é uma dependência redundante.\n- dependency-detected-not-included (erro) O arquivo referido tem uma dependência que não está listada no vetor depends. Ignore este erro se a dependência mencionada estiver listada na matriz optdepends.\n\n- dependency-already-satisfied (aviso) A dependência já está satisfeita (como a dependência de algum pacote já listado como uma dependência, por exemplo) e, portanto, é redundante. Você pode usar a ferramenta pactree de pacman para ver a árvore de dependências do seu pacote.\n- dependency-not-needed (aviso) Essa dependência não é necessária por nenhum arquivo presente no programa (até onde o namcap pode deduzir). Isso ainda não funciona corretamente para scripts (como pacotes Python ou perl); lá, você terá que descobrir as dependências por conta própria.\n- depends-by-namcap-sight (informacional) Uma lista de dependências de acordo com o namcap.\n\n"
    },
    {
      "title": "Licenças",
      "level": 3,
      "content": "- missing-license (erro) Esse pacote carece de uma licença. Licenças devem ser colocadas no vetor license=() do PKGBUILD. Veja os Padrões de empacotamento do Arch para mais informações. É muito importante corrigir esse erro assim que possível, já que não incluir uma lista uma licença é, em muitos casos, uma violação de copyright.\n- missing-custom-license-dir (erro) A licença especificada é custom (personalizada), mas nenhum diretório de licença foi encontrado sob /usr/share/licenses/, conforme especificado nas diretrizes de empacotamento.\n- missing-custom-license-file (erro) A licença especificada é custom, mas nenhum arquivo de licença foi localizado em /usr/share/licenses/$pkgname.\n- not-a-common-license (erro) A licença especificada não é custom, mas não está presente no pacote licenses (contendo licenças comuns), fornecido na distribuição do Arch Linux.\n\n"
    },
    {
      "title": "Arquivos",
      "level": 3,
      "content": "Esta seção descreve as tags que se relacionam com permissões incorretas de arquivos ou arquivos que não estão sendo instalados de acordo com as diretrizes do FHS.\n\n- script-link-detected (informacional) O arquivo a seguir é um script.\n- file-in-non-standard-dir (aviso) O arquivo a seguir está em um diretório fora do padrão, conforme definido nas diretrizes do FHS. Os diretórios permitidos são: bin/, etc/, usr/bin/, usr/sbin/, usr/lib, usr/include/, usr/share/, opt/, lib/, sbin/, srv/, var/lib/, var/opt/, var/spool/, var/lock/, var/state/, var/run/, var/log/.\n- elffile-not-in-allowed-dirs (erro) Arquivos ELF devem estar somente nesses diretórios: /lib, /bin, /sbin, /usr/bin, /usr/sbin, /lib, /usr/lib, /opt/$pkgname/.\n- empty-directory (aviso) O diretório a seguir no pacote está vazio.\n- non-fhs-man-page (erro) O pacote instala páginas de manual em uma localização diferente de /usr/share/man, que é o diretório para páginas de manual conforme as diretrizes do FHS.\n- potential-non-fhs-man-page (aviso) Esse arquivo parece ser uma página de manual que não está instalada em /usr/share/man, mas o namcap não tem certeza disso.\n- non-fhs-info-page (erro) O pacote instala páginas info em em uma localização diferente de /usr/share/info, que é onde dados independentes de arquitetura devem ser instalados, conforme as diretrizes do FHS\n- potential-non-fhs-info-page (aviso) Esse arquivo parece ser uma página info que não está instalada em /usr/share/info, mas o namcap não tem certeza sobre isso.\n- incorrect-permissions (erro) Esse arquivo possui dono incorreto. O dono dos arquivos em pacotes binários deve ser root/root.\n- file-not-world-readable (aviso) O arquivo não é legível por todos; geralmente, isso não é o desejado.\n- file-world-writable (aviso) Qualquer pessoa pode escrever nesse arquivo; novamente, não é um caso comum.\n- directory-not-world-executable (aviso) O diretório não tem o bit de executável por todos definido. Isso impede o acesso ao diretório para programas que estejam sob privilégios de usuário.\n- incorrect-library-permissions (aviso) O arquivo de biblioteca estática (.a) não tem permissão 644 (legível e gravável pelo root, legível por qualquer pessoa).\n- libtool-file-present (aviso) Esse arquivo é um arquivo libtool (.la) e normalmente não deve estar presente. Pode-se usar a opção !libtool no vetor options do PKGBUILD para remover esses arquivos automaticamente.\n- perllocal-pod-present (erro) O arquivo perllocal.pod não deve estar presente em um pacote perl; veja as diretrizes de pacotes Perl para mais informações.\n- scrollkeeper-dir-exists (erro) Um diretório scrollkeeper foi localizado no pacote. scrollkeeper não deve ser executado até pós-{instalação,atualização,remoção}.\n- info-dir-file-present (erro) O arquivo de diretório info /usr/share/info/dir estava presente no pacote. Esse arquivo não deve estar presente.\n- gnome-mime-file (erro) O arquivo é um arquivo MIME autogerado do GNOME e não deveria estar presente no pacote.\n\n"
    },
    {
      "title": "Diversos",
      "level": 3,
      "content": "- insecure-rpath (erro) Um RPATH (para um executável) está fora de /usr/lib. Um RPATH para uma localização insegura é um risco de segurança em potencial. Veja FS#14049 para uma discussão sobre isso.\n\n"
    },
    {
      "title": "PKGBUILDs",
      "level": 3,
      "content": "Essas são tags relacionadas aos PKGBUILDs. Algumas dessas podem também se aplicar a pacotes binários.\n\n- variable-not-array (aviso) A variável deve ser um vetor de bash em vez de uma string. Essas são as variáveis que devem ser escritas em vetores: arch, license, depends, makedepends, optdepends, provides, conflicts, replaces, backup, source, noextract, md5sums\n- backups-preceding-slashes (erro) O arquivo mencionado no vetor backup inicia com uma barra ('/').\n- package-name-in-uppercase (erro) Não deve haver letras maiúsculas em nomes de pacotes.\n- specific-host-type-used (aviso) Em vez de usar um tipo de host específico (como i686 ou x86_64) use a variável genérica $CARCH variable.\n- extra-var-begins-without-underscore (aviso) A variável não é uma da variáveis padrões definidas no manual do PKGBUILD e, mesmo assim, não inicia com sublinhado.\n- file-referred-in-startdir (erro) Um arquivo foi referenciado em $startdir fora de $startdir/pkg e $startdir/src.\n- missing-md5sums (erro) MD5sums correspondentes aos arquivos fonte estão faltando. Esses podem ser adicionados ao PKGBUILD usando updpkgsums (do pacman-contrib).\n- not-enough-md5sums (erro) Há mais arquivos fontes do que MD5sums fornecidos no PKGBUILD.\n- too-many-md5sums (erro) Há mais MD5sums do que arquivos fontes no PKGBUILD.\n- improper-md5sum (erro) Um MD5sum impróprio foi localizado. MD5sums são de 32 caracteres de tamanho.\n- specific-sourceforge-mirror (aviso) O PKGBUILD usa um espelho específico de servidor do sourceforge. https://downloads.sourceforge.net deve ser usado.\n- using-dl-sourceforge (aviso) O domínio obsoleto http://dl.sourceforge.net está sendo usado no vetor fonte. https://downloads.sourceforge.net deve ser usado.\n- missing-contributor (aviso) A tag contributor está faltando.\n- missing-maintainer (aviso) A tag maintainer está faltando.\n- missing-url (erro) O pacote não tem uma página web de upstream definida. Use a variável url para isso.\n- pkgname-in-description (aviso) A descrição não deve conter o nome do pacote.\n- recommend-use-pkgdir (informacional) $startdir/pkg está obsoleto, use $pkgdir.\n- recommend-use-srcdir (informacional) $startdir/src está obsoleto, use $srcdir.\n\n"
    },
    {
      "title": "Não lançadas",
      "level": 3,
      "content": "Não há novas tags na versão de desenvolvimento.\n\n"
    },
    {
      "title": "Fazendo um módulo de namcap",
      "level": 2,
      "content": "Esta seção documenta as partes internas do namcap e especifica como criar um novo módulo namcap.\n\nO programa principal do namcap, o namcap.py, toma como parâmetros o nome de arquivo de um pacote ou um PKGBUILD e faz um objeto pkginfo, o qual ele passa para uma lista de regras definidas em __tarball__ e __pkgbuild__.\n\n- __tarball__ define as regras que processam os pacotes binários.\n- __pkgbuild__ define as regras que processam os PKGBUILDs\n\nUma vez que seu módulo esteja finalizado, lembre-se de adicioná-lo para o vetor apropriado (__tarball__ ou __pkgbuild__) definido em Namcap/__init__.py\n\nUm exemplo de módulo de namcap é assim:\n\n```\nnamcap/url.py\n```\n\n```\nimport pacman\n\n  class package:\n  \tdef short_name(self):\n\t\treturn \"url\"\n\tdef long_name(self):\n\t\treturn \"Verifies url is included in a PKGBUILD\"\n\tdef prereq(self):\n\t\treturn \"\"\n\tdef analyze(self, pkginfo, tar):\n\t\tret = [[],[],[]]\n\t\tif not hasattr(pkginfo, 'url'):\n\t\t\tret[0].append((\"missing-url\", ()))\n\t\treturn ret\n\tdef type(self):\n\t\treturn \"pkgbuild\"\n```\n\nEm sua maioria, o código é autoexplicatório. A seguir segue a lista de métodos que cada módulo do namcap deve ter:\n\n- short_name(self) Retorna uma string contendo um nome curto do módulo. Geralmente, isso é o mesmo que o nome base do arquivo do módulo.\n- long_name(self) Retorna uma string contendo uma descrição concisa do módulo. Essa descrição é usada ao listar todas as regras usando namcap -r list.\n- prereq(self) Retorna uma string contendo os pré-requisitos necessários para o módulo funcionar corretamente. Geralmente \"\" para módulos processando PKGBUILDs e \"tar\" por módulos processando arquivos de pacote. \"extract\" deve ser especificado se o conteúdo do pacote deve ser extraído para um diretório temporário antes de processamento adicional.\n- analyze(self, pkginfo, tar) Deve retornar uma lista que inclua, por sua vez, três listas: de tags de erro, tags de aviso e tags de informações, respectivamente. Cada membro dessas listas de tags deve ser uma tupla consistindo de dois componentes: a forma curta e hifenizada da tag com os especificadores de formato apropriado (%s, etc). A primeira palavra desta string deve ser o nome da tag. A forma legível por humanos desta tag deve ser coloca no arquivo de tags. O formato do arquivo de tags é descrito abaixo; e os parâmetros que devem substituir os tokens especificadores de formato na saída final.\n- type(self) \"pkgbuild\" para um módulos processando PKGBUILDs, \"tarball\" para um módulo processando um arquivo de pacote binário.\n\nO arquivo de tags consiste de linhas especificando a forma legível por humanos das tags hifenizadas usadas no código do namcap. Uma linha começando com um '#' é tratada como um comentário. Do contrário, o formato do arquivo é:\n\n```\nmachine-parseable-tag %s :: This is machine parseable tag %s\n```\n\nNote que uma dupla de caracteres de dois pontos (::) é usada para separar a tag hifenizada da descrição legível por humanos.\n\n"
    },
    {
      "title": "Relatórios do namcap",
      "level": 2,
      "content": "namcap-reports é um relatório gerado automaticamente obtido após executar o namcap nas árvores dos repositórios core e extra.\n\nComo ele funciona:\n\n- O namcap é executado em toda árvore do ABS para criar namcap.log.\n- Os pacotes nos repositórios core e extra são colocados em arquivos com nomes core e extra, respectivamente (usando pacman -Slq).\n- namcap-report.py leva o código e prepara o relatório e feeds RSS, que é então copiado para o servidor web.\n\n"
    }
  ]
}
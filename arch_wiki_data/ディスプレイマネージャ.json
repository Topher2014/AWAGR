{
  "title": "ディスプレイマネージャ",
  "url": "https://wiki.archlinux.org/title/%E3%83%87%E3%82%A3%E3%82%B9%E3%83%97%E3%83%AC%E3%82%A4%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- ログイン時に X を起動\n\nディスプレイマネージャ、もしくはログインマネージャは、起動の最後に標準のシェルにかわって表示されるグラフィカルユーザーインターフェイスです。ウィンドウマネージャとデスクトップ環境の数が多くあるように、様々な種類のディスプレイマネージャがあります。さらに、それぞれのマネージャをカスタマイズしたりテーマを選択したりすることが可能です。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 ディスプレイマネージャ一覧 1.1 コンソール 1.2 グラフィカル 1.3 ログインデーモン\n- 2 ディスプレイマネージャをロードする 2.1 systemd-logind を使う\n- 3 セッション設定 3.1 セッションとして ~/.xinitrc を実行 3.2 ウィンドウマネージャを使わずにアプリケーションを起動\n- 4 ヒントとテクニック 4.1 自動起動 4.2 ユーザセッションで使う言語を設定する 4.3 LUKS で自動ログイン時に Gnome Keyring / KDE KWalletを自動的に解除する\n- 5 参照\n\n- 1.1 コンソール\n- 1.2 グラフィカル\n- 1.3 ログインデーモン\n\n- 2.1 systemd-logind を使う\n\n- 3.1 セッションとして ~/.xinitrc を実行\n- 3.2 ウィンドウマネージャを使わずにアプリケーションを起動\n\n- 4.1 自動起動\n- 4.2 ユーザセッションで使う言語を設定する\n- 4.3 LUKS で自動ログイン時に Gnome Keyring / KDE KWalletを自動的に解除する\n\n"
    },
    {
      "title": "コンソール",
      "level": 3,
      "content": "- CDM — Bash で記述されたログインマネージャー。\n\n- Console TDM — Bash だけで書かれた xinit の拡張。\n\n- nodm — 自動ログイン用のディスプレイマネージャ。2017 以降、開発中止。\n\n- Ly — Linux と BSD のための TUI (ncurses ライクな) ディスプレイマネージャ。X と Wayland のセッションをサポートします。\n\n- tbsm — Bash セッションまたはアプリケーションランチャー。X と Wayland のセッションをサポートします。\n\n- emptty — X と Wayland をサポートする TTY 上のシンプルな CLI ディスプレイマネージャー。\n\n- loginx — getty/login/xinit の組み合わせ。ユーザフレンドリーな curses ui。\n\n- Lemurs — Rust で書かれた、Linux 用 TUI ディスプレイマネージャ。X、Wayland、TTY シェルのセッションをサポートします。\n\n"
    },
    {
      "title": "グラフィカル",
      "level": 3,
      "content": "- Entrance — Enlightenment のディスプレイマネージャ。非常に実験的で、適切な systemd サポートがありません。\n\n- GDM — GNOME のディスプレイマネージャ。\n\n- LightDM — クロスデスクトップのディスプレイマネージャ、様々なツールキットを使って書かれたフロントエンドを使用できます。\n\n- LXDM — LXDE のディスプレイマネージャ。LXDE とは別個に使うことも可能。\n\n- SDDM — QML ベースのディスプレイマネージャ (KDM の後継)。Plasma や LXQt の推奨ディスプレイマネージャ。\n\n- SLiM — 軽量でエレガントなグラフィカルログインのソリューション。2013 年以降、開発中止。systemd とは完全な互換性がありません。\n\n- XDM — XDMCP をサポートした X ディスプレイマネージャ、ホストが選べる。\n\n"
    },
    {
      "title": "ログインデーモン",
      "level": 3,
      "content": "- greetd — コンソールの greeter とグラフィカルな greeter の両方をサポートするログインデーモン。\n\n"
    },
    {
      "title": "ディスプレイマネージャをロードする",
      "level": 2,
      "content": "グラフィカルログインを有効にするには、適切な systemd サービスを有効化してください。例えば、SDDM の場合、sddm.service を有効にします。\n\nこれだけで動くはずですが、動かない場合、カスタム default.target シンボリックリンクをリセットして、デフォルトの graphical.target を指すようにする必要があるかもしれません。systemd#起動するデフォルトターゲットを変更 を参照してください。\n\nSDDM を有効にすると、シンボリックリンク display-manager.service が /etc/systemd/system/ で設定されているはずです。古いシンボリックリンクを上書きするために、--force を使う必要があるかもしれません。\n\n```\n$ file /etc/systemd/system/display-manager.service\n```\n\n```\n/etc/systemd/system/display-manager.service: symbolic link to /usr/lib/systemd/system/sddm.service\n```\n\n"
    },
    {
      "title": "systemd-logind を使う",
      "level": 3,
      "content": "ユーザーセッションの状態を確認するには loginctl を使います。サスペンドや外部デバイスのマウントなどの全ての polkit アクションはそのまま動きます。\n\n```\n$ loginctl show-session $XDG_SESSION_ID\n```\n\n"
    },
    {
      "title": "セッション設定",
      "level": 2,
      "content": "多くのディスプレイマネージャは /usr/share/xsessions/ ディレクトリから利用できるセッションを読み込みます。このディレクトリには DM/WM のための標準の デスクトップエントリファイル が入っています。一部のディスプレイマネージャは、Wayland 固有のセッションをリストアップするために、別のディレクトリ /usr/share/wayland-sessions/ を使用します。\n\nディスプレイマネージャのセッションリストにエントリを追加・削除するには、/usr/share/xsessions/ にある .desktop ファイルを必要に応じて作成・削除してください。典型的な .desktop ファイルは以下のようになります:\n\n```\n[Desktop Entry]\nName=Openbox\nComment=Log in using the Openbox window manager (without a session manager)\nExec=/usr/bin/openbox-session\nTryExec=/usr/bin/openbox-session\nIcon=openbox.png\nType=Application\n```\n\n"
    },
    {
      "title": "セッションとして ~/.xinitrc を実行",
      "level": 3,
      "content": "xinit-xsessionAUR をインストールすることで xinitrc をセッションとして実行することができるようになります。ディスプレイマネージャに対して xinitrc をセッションとして設定してください。この時、~/.xinitrc が実行可能であることを確認してください。\n\n"
    },
    {
      "title": "ウィンドウマネージャを使わずにアプリケーションを起動",
      "level": 3,
      "content": "ウィンドウ装飾やデスクトップ、ウィンドウ管理を省いて、アプリケーションを起動することもできます。例えば google-chromeAUR を起動するには、以下のように /usr/share/xsessions/ に web-browser.desktop ファイルを作成します:\n\n```\n[Desktop Entry]\nName=Web Browser\nComment=Use a web browser as your session\nExec=/usr/bin/google-chrome --auto-launch-at-startup\nTryExec=/usr/bin/google-chrome --auto-launch-at-startup\nIcon=google-chrome\nType=Application\n```\n\nこの場合、ログイン時に、Exec で設定したアプリケーションがすぐに起動します。アプリケーションを閉じると、ログインマネージャに復帰します (DE/WM からログアウトしたときと同じ)。\n\nこの方法で起動することを、ほとんどのグラフィカルアプリケーションは想定していないため、上手く行くように設定が必要になるかもしれません (ウィンドウマネージャが存在しないため、ウィンドウの移動やサイズ変更はできず、ダイアログも使えません。アプリケーションの設定ファイルでウィンドウの配置を設定しておかなくてはならないでしょう)。\n\nxinitrc#ウィンドウマネージャを使わずにアプリケーションを起動 も参照。\n\n"
    },
    {
      "title": "自動起動",
      "level": 3,
      "content": "ほとんどのディスプレイマネージャは /etc/xprofile, ~/.xprofile, /etc/X11/xinit/xinitrc.d/ を実行します。詳しくは xprofile を見て下さい。\n\n"
    },
    {
      "title": "ユーザセッションで使う言語を設定する",
      "level": 3,
      "content": "AccountsService を使用するディスプレイマネージャの場合、/var/lib/AccountsService/users/$USER を編集することでユーザセッションのロケールを設定できます:\n\n```\n/var/lib/AccountsService/users/$USER\n```\n\n```\n[User]\nLanguage=your_locale\n```\n\nyour_locale を ja_JP.UTF-8 といった値に置き換えて下さい。\n\nまたは、D-Bus を使用してこれを実現できます: busctl call org.freedesktop.Accounts /org/freedesktop/Accounts/User$UID org.freedesktop.Accounts.User SetLanguage s your_locale\n\nログアウトして再びログインし直せば、変更が適用されます。\n\n"
    },
    {
      "title": "LUKS で自動ログイン時に Gnome Keyring / KDE KWalletを自動的に解除する",
      "level": 3,
      "content": "systemd バージョン255 以降、pam_systemd_loadkey を使用することで、ユーザーのパスワードがシステムの LUKS パスフレーズと一致している場合に、GNOME Keyring や KWallet を解除できます。この機能を利用するには、ディスプレイマネージャで自動ログインを有効にする必要があります。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Login managers: An introduction - Discusses implementation of a login manager\n\n"
    }
  ]
}
{
  "title": "Emacs (Français)",
  "url": "https://wiki.archlinux.org/title/Emacs_(Fran%C3%A7ais)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Emacs est un éditeur d'affichage en temps réel extensible, personnalisable et auto-documenté. Au cœur d'Emacs se trouve un interprète Emacs Lisp, le langage dans lequel la majorité des fonctionnalités intégrées et des extensions d'Emacs sont implémentées. GNU Emacs utilise GTK comme sa boîte à outils X, bien qu'il fonctionne aussi bien dans un environnement CLI.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Pour la version stable de GNU Emacs, installez le paquet emacs. Les variantes incluent :\n\n- emacs28-gitAUR[broken link: package not found] : Pré-test pour la future version 28.1 d'Emacs. Inclut la prise en charge de la compilation native, qui a été fusionnée en amont. En février 2022, il est assez stable.\n- emacs-gitAUR : Branche de développement de GNU Emacs. Depuis juin 2021, elle prend en charge la compilation native fusionnée depuis la branche d'Emacs feature/native-comp.\n- emacs-pgtk-native-comp-gitAUR[broken link: package not found] ou emacs-native-comp-git-enhancedAUR[broken link: package not found] : Un fork non officiel combinant la branche de développement de GNU Emacs (y compris la compilation native) avec le nouveau moteur de rendu PGTK.\n- emacs-nox : GNU Emacs sans prise en charge de X11, pour une utilisation dans un terminal. Cette variante a des limitations, notamment moins de couleurs, moins de fonctionnalités pour la gestion des polices (changement de taille en direct, différentes tailles dans un document, etc.), et des limitations avec des fonctionnalités avancées comme la barre de vitesse ou GUD (l'environnement de débogage). Elle est également plus lente lors de la manipulation de faces complexes (l'apparence visuelle du texte dans Emacs).\n\n"
    },
    {
      "title": "Exécuter Emacs",
      "level": 2,
      "content": "Avant de lancer emacs, vous devez savoir comment le fermer (surtout si vous l'exécutez dans un terminal) : utilisez la séquence de touches Ctrl+xCtrl+c séquence de touches.\n\nPour lancer Emacs, exécutez :\n\n```\n$ emacs\n```\n\nou, pour l'utiliser depuis la console :\n\n```\n$ emacs -nw\n```\n\nou, pour un chargement rapide (sans .emacs) et une édition dans la CLI :\n\n```\n$ emacs -Q -nw\n```\n\nSi vous avez installé la version nox, 'emacs' et 'emacs -nw' seront les mêmes.\n\nUn nom de fichier peut également être fourni pour ouvrir ce fichier immédiatement :\n\n```\n$ emacs nomfichier.txt\n```\n\n"
    },
    {
      "title": "Sans couleurs",
      "level": 3,
      "content": "Par défaut, Emacs démarre avec un thème de couleurs montrant les hyperliens en bleu foncé. Pour démarrer Emacs sur un terminal texte sans aucun thème ou schéma de couleurs :\n\n```\n$ emacs -nw --color=no\n```\n\nCeci fera apparaître tout le texte dans la couleur de premier plan du terminal — normalement du texte blanc sur un fond noir, ou du texte noir sur un fond blanc.\n\n"
    },
    {
      "title": "En tant que daemon",
      "level": 3,
      "content": "Afin d'éviter de recharger le fichier de configuration d'Emacs à chaque fois qu'Emacs démarre, vous pouvez exécuter Emacs en tant que daemon :\n\n```\n$ emacs --daemon\n```\n\nVous pouvez ensuite vous connecter au daemon en exécutant :\n\n```\n$ emacsclient -nc\n```\n\nCe qui crée un nouveau cadre -c (utilisez -t si vous préférez l'utiliser dans le terminal) et ne monopolise pas le terminal -n (--no-wait). Notez que certains programmes comme Mutt ou Git (pour les messages de commit) attendent que l'éditeur se termine, vous ne pouvez donc pas utiliser le paramètre -n. Si votre éditeur par défaut est configuré pour l'utiliser, vous devrez spécifier un éditeur alternatif (e.g. emacsclient -a \"\" -t) pour ces programmes.\n\n"
    },
    {
      "title": "En tant qu'unité de systemd",
      "level": 3,
      "content": "Une unité systemd est incluse dans Emacs 26.1. L'unité est installée avec Emacs, mais elle doit être activée en tant qu'unité utilisateur (et non pas à l'échelle du système) après avoir installé Emacs.\n\nAprès le démarrage du service, Emacs est prêt.\n\nNotez que les unités utilisateur de systemd n'héritent pas des variables d'environnement d'un shell de connexion (comme ~/.bash_profile). Consultez Systemd (Français)/User (Français)#Variables d'environnement pour plus d'informations.\n\nSi vous démarrez emacs en tant que daemon, vous pouvez définir les variables d'environnement VISUAL et EDITOR à emacsclient afin que les programmes qui démarrent un éditeur utilisent emacsclient au lieu de démarrer une nouvelle instance complète de l'éditeur. Les programmes qui utilisent un éditeur externe comprennent les programmes de messagerie (pour éditer le message), Git (pour éditer le message commit) et less (la commande v pour éditer le fichier affiché). N'utilisez pas la commande -n (--nowait) à emacsclient, car les programmes s'attendent généralement à ce que l'édition soit terminée lorsque l'éditeur se termine.\n\nIl est également recommandé de modifier toute entrée du menu de démarrage de l'interface graphique (ou équivalent) pour Emacs afin de pointer vers emacsclient au lieu d'emacs, de sorte que le daemon emacs soit utilisé au lieu de démarrer un nouveau processus emacs.\n\n"
    },
    {
      "title": "Obtenir de l'aide",
      "level": 2,
      "content": "Emacs a un tutoriel intégré auquel on peut accéder en cliquant sur le premier lien de l'écran d'accueil et en sélectionnant Aide->Tutoriel Emacs dans le menu ou en appuyant sur C-h t.\n\nEmacs est auto-documenté par conception. En tant que tel, une grande quantité d'informations est disponible pour déterminer le nom d'une commande spécifique ou sa combinaison de touches, par exemple. Consultez tous les raccourcis d'aide contextuelle avec C-h C-h.\n\nEmacs comprend également un ensemble de cartes de référence, utiles pour les débutants comme pour les experts, consultez /usr/share/emacs/<version>/etc/refcards/ (remplacez <version> par votre version d'emacs).\n\n"
    },
    {
      "title": "Les manuels",
      "level": 3,
      "content": "Si vous voulez vraiment maîtriser Emacs, la source de documentation la plus recommandée reste les manuels officiels :\n\n- Emacs : le manuel complet de l'utilisateur d'Emacs.\n- Emacs FAQ.\n- Emacs Lisp Intro : si vous n'avez jamais utilisé de langage de programmation auparavant.\n- Elisp : si vous êtes déjà familier avec un langage de programmation.\n\nVous pouvez y accéder en tant que PDF à partir de GNU.org ou directement à partir d'Emacs lui-même grâce au lecteur 'info' intégré : C-h i. Appuyez sur m pour choisir un livre.\n\nCertains utilisateurs préfèrent lire des livres en utilisant 'info' à cause de ses raccourcis pratiques, de ses paragraphes qui s'adaptent à la largeur de la fenêtre et de la police adaptée à la résolution de l'écran. Certains la trouvent moins irritante pour les yeux. Enfin, vous pouvez facilement copier le contenu du livre dans n'importe quel tampon Emacs, et vous pouvez même exécuter des extraits de code Lisp directement à partir des exemples.\n\nVous pouvez lire le livre Info pour en savoir plus : C-h i m info <RET>. Appuyez sur ? en mode info pour obtenir une liste rapide de raccourcis.\n\n"
    },
    {
      "title": "Personnalisation",
      "level": 2,
      "content": "L'une des principales caractéristiques d'Emacs est son extensibilité et sa facilité de configuration. Emacs a un moteur de personnalisation intégré. Vous pouvez faire M-x customize qui affiche une liste d'options de personnalisation. Pour savoir comment utiliser cette interface, consultez le noeud d'information sur la personnalisation facile : (info \"(emacs) Easy Customization\"). Vous pouvez définir les options de personnalisation ouvertes pour une seule session Emacs ou les enregistrer dans un #Fichier de configuration afin qu'elles soient sauvegardées dans toutes les sessions Emacs. Notez que c'est ce que fait l'interface de personnalisation si vous sélectionnez \"Appliquer et sauvegarder\".\n\n"
    },
    {
      "title": "Fichier de configuration",
      "level": 3,
      "content": "Quand Emacs est lancé, il essaie normalement de charger un programme Lisp à partir d'un \"fichier d'initialisation\", ou \"fichier init\" pour faire court. Ce fichier, s'il existe, spécifie comment initialiser Emacs pour vous. Emacs recherche votre fichier d'initialisation en utilisant les noms de fichiers '~/.emacs', '~/.emacs.el', '~/.emacs.d/init.el', ou '~/.config/emacs/init.el'. Consultez le nœud d'information \"Fichier d'initialisation\" pour en savoir plus : (info \"(emacs) Init File\")\n\n"
    },
    {
      "title": "TRAMP",
      "level": 3,
      "content": "TRAMP (Transparent Remote Access, Multiple Protocols) est une extension qui, comme son nom l'indique, fournit un accès transparent aux fichiers distants à travers un certain nombre de protocoles. Lorsqu'on vous demande un nom de fichier, la saisie d'un formulaire spécifique invoquera TRAMP. Quelques exemples :\n\nPour demander le mot de passe root avant d'ouvrir /etc/hosts avec les droits root :\n\n```\nC-x C-f /sudo::/etc/hosts\n```\n\nPour se connecter à 'remotehost' en tant que 'vous' via SSH et ouvrir le fichier ~/exemple.txt :\n\n```\nC-x C-f /ssh:you@remotehost:~/exemple.txt\n```\n\nLe chemin d'accès de TRAMP est généralement de la forme '/[protocole] :[[user@]host]:<file>'.\n\nPour se connecter à 'myhost' en tant que 'you' et éditer /etc/hosts avec sudo :\n\n```\n/ssh:you@remotehost|sudo:remotehost:/etc/hosts\n```\n\nTRAMP prend en charge bien plus que ce que les exemples ci-dessus pourraient indiquer. Pour plus d'informations, reportez-vous au manuel TRAMP info, qui est distribué avec Emacs.\n\n"
    },
    {
      "title": "Utilisation d'Emacs comme git mergetool",
      "level": 3,
      "content": "Par défaut, Git prend en charge l'utilisation du mode Emerge d'Emacs comme outil de fusion. Cependant, vous pouvez préférer le mode Ediff. Malheureusement, ce mode n'est pas pris en charge par git pour des raisons techniques. Il existe néanmoins un moyen de l'utiliser en évaluant du code elisp lors de l'appel à Emacs.\n\n```\n.gitconfig\n```\n\n```\n[mergetool.ediff]\n    cmd = emacs --eval \\\" (progn (defun ediff-write-merge-buffer () (let ((file ediff-merge-store-file)) (set-buffer ediff-buffer-C) (write-region (point-min) (point-max) file) (message \\\\\\\"Merge buffer saved in: %s\\\\\\\" file) (set-buffer-modified-p nil) (sit-for 1))) (setq ediff-quit-hook 'kill-emacs ediff-quit-merge-hook 'ediff-write-merge-buffer) (ediff-merge-files-with-ancestor \\\\\\\"$LOCAL\\\\\\\" \\\\\\\"$REMOTE\\\\\\\" \\\\\\\"$BASE\\\\\\\" nil \\\\\\\"$MERGED\\\\\\\"))\\\" \n\n[merge]\n\ttool = ediff\n```\n\nNotez que la commande doit être sur une seule ligne. Dans l'exemple ci-dessus, nous lançons une nouvelle instance d'Emacs. Vous pourriez vouloir utiliser emacsclient pour un démarrage plus rapide ; ce n'est cependant pas recommandé car l'appel à Ediff n'est pas vraiment propre : il pourrait perturber votre session Emacs actuelle.\n\nSi vous voulez un démarrage instantané, vous pouvez utiliser le paramètre -q. Si vous voulez lancer Emacs rapidement tout en préservant au moins une partie de votre configuration, vous pouvez appeler Emacs avec\n\n```\nemacs -q -l ~/.emacs-light\n```\n\noù le fichier de configuration light ne charge que ce dont vous avez besoin pour Ediff.\n\nConsultez kerneltrap.org et stackoverflow pour plus de détails sur cette astuce et le problème Ediff.\n\n"
    },
    {
      "title": "Utilisation du verrouillage des majuscules comme touche de contrôle",
      "level": 3,
      "content": "Certains utilisateurs apprécient ce comportement pour éviter le fameux \"pinky\" d'emacs. Si vous voulez l'essayer sous X, exécutez simplement\n\n```\n$ setxkbmap -option ctrl:nocaps.\n```\n\nAlternativement, pour intervertir ces touches, lancez\n\n```\n$ setxkbmap -option 'ctrl:swapcaps'.\n```\n\nPour définir cette option de manière permanente, pensez à l'ajouter à votre fichier .xinitrc.\n\nMaintenant, si vous avez besoin de mettre en valeur une région, utilisez simplement le raccourci clavier par défaut C-x C-u, qui appelle la fonction upcase-region.\n\nConsultez [1] pour une approche alternative.\n\nSi la fonction de verrouillage des majuscules vous manque, mappez-la en tant que \"Shift\" en même temps.\n\n```\n$ setxkbmap -option \"shift:both_capslock\" (en anglais)\n```\n\nCertains environnements de bureau incluent des outils graphiques pour simplifier les réaffectations de clavier. Par exemple, dans Plasma 5, ouvrez les Paramètres système et cliquez sur Périphériques d'entrée. Sélectionnez Clavier et dans l'onglet Avancé, vous trouverez le paramètre Comportement du verrouillage des majuscules sous lequel vous pouvez sélectionner Caps Lock is also a Ctrl.\n\n"
    },
    {
      "title": "Multiplexage d'emacs et d'emacsclient",
      "level": 3,
      "content": "L'ouverture d'un nouveau fichier dans la même emacs-session nécessite l'utilisation de emacsclient. La commande emacs peut être elle-même enveloppée pour faire le travail plus intelligent d'ouvrir le fichier si la session existe.\n\nPour démarrer la session, vous devez utiliser start-server. Cet extrait va créer un serveur dans la première session d'emacs. Ajoutez ceci à votre fichier de configuration emacs.\n\n```\n.emacs or .emacs.d/init.el\n```\n\n```\n(require 'server)\n(unless (server-running-p)\n  (server-start))\n```\n\nLa méthode de l'alias du shell n'est pas adéquate pour cela puisque vous devez également passer des variables ou démarrer une session indépendante de votre propre chef. Ajoutez ceci au .bashrc ou à tout fichier rc de votre shell. Cela fera en sorte que votre commande $ emacs se comporte comme emacsclient si l'argument est passé.\n\n```\nfunction emacs {\n    if [[ $# -eq 0 ]]; then\n        /usr/bin/emacs # \"emacs\" is function, will cause recursion\n        return\n    fi\n    args=($*)\n    for ((i=0; i <= ${#args}; i++)); do\n        local a=${args[i]}\n        # NOTE: -c for creating new frame\n        if [[ ${a:0:1} == '-' && ${a} != '-c' && ${a} != '--' ]]; then\n            /usr/bin/emacs ${args[*]}\n            return\n        fi\n    done\n    setsid emacsclient -n -a /usr/bin/emacs ${args[*]}\n}\n```\n\nSi vous voulez l'exécuter dans une nouvelle session, faites simplement emacs <file> -.\n\n"
    },
    {
      "title": "Configurations multiples",
      "level": 3,
      "content": "Vous pouvez utiliser plusieurs configurations et dire à Emacs de charger l'une ou l'autre.\n\nPar exemple, définissons deux fichiers de configuration.\n\n```\n.emacs\n```\n\n```\n(load \"~/.emacs.d/main\" nil t)\n(load \"~/.emacs.d/functions\" nil t)\n(load \"~/.emacs.d/modes\" nil t)\n(load \"~/.emacs.d/plugins\" nil t)\n(load \"~/.emacs.d/theme\" nil t)\n```\n\nC'est la configuration complète que nous chargeons pour le daemon. Mais le fichier plugins est énorme et lent à charger. Si nous voulons créer une nouvelle instance d'Emacs qui n'a pas besoin des fonctionnalités des plugins, il peut être fastidieux de le charger à chaque fois à la longue.\n\n```\n.emacs-light\n```\n\n```\n].\n(load \"~/.emacs.d/main\" nil t)\n(load \"~/.emacs.d/functions\" nil t)\n(load \"~/.emacs.d/modes\" nil t)\n(load \"~/.emacs.d/theme\" nil t)\n```\n\nEt maintenant nous lançons Emacs avec\n\n```\nemacs -q -l ~/.emacs-light\n```\n\nVous pouvez créer un alias pour faciliter l'appel.\n\n"
    },
    {
      "title": "Variables locales et personnalisées",
      "level": 3,
      "content": "Vous pouvez définir des variables dans votre fichier de configuration qui pourront être modifiées ultérieurement en local pour un fichier.\n\n```\n(defcustom my-compiler \"gcc\" \"Some documentation\")\n```\n\nMaintenant, dans n'importe quel fichier, vous pouvez définir des variables locales de deux manières, consultez le manuel pour plus de détails.\n\n- En utilisant M-x add-file-local-variable-prop-line, qui ajoute une ligne commentée au début similaire à :\n\n```\n// -*- my-compiler:g++; mode:c++ -*-\n```\n\n- Ou vous pouvez utiliser M-x add-file-local-variable pour ajouter des lignes vers la fin du fichier :\n\n```\n// Local Variables:\n// my-compiler: g++\n// mode: c++\n// End:\n```\n\nNotez que pour que les valeurs prennent effet, vous devrez appeler M-x revert-buffer.\n\nLes variables personnalisées sont considérées comme non sûres par défaut. Si vous essayez d'ouvrir un fichier qui contient des variables locales redéfinissant des variables personnalisées, Emacs vous demandera une confirmation.\n\nVous pouvez déclarer la variable comme sûre, supprimant ainsi la demande de confirmation d'Emacs. Vous devez spécifier un prédicat que toute nouvelle valeur doit vérifier pour qu'elle puisse être considérée comme sûre.\n\n```\n(defcustom my-compiler \"gcc\" \"Some documentation\" :safe 'stringp)\n```\n\nDans l'exemple précédent, si vous tentez de définir autre chose qu'une chaîne de caractères, Emacs le considérera comme non sécurisé.\n\n"
    },
    {
      "title": "Couleurs et thème personnalisés",
      "level": 3,
      "content": "Les couleurs peuvent être facilement personnalisées en utilisant la fonction face.\n\n```\n(set-face-background 'region \"color-17\")\n(set-face-foreground 'region \"white\")\n(set-face-bold-p 'font-lock-builtin-face t )\n```\n\nVous pouvez laisser Emacs vous indiquer le nom de la face où se trouve le point. Utilisez la fonction customize-face pour cela. Cette fonction vous montrera comment définir les couleurs, le gras, le soulignement, etc.\n\nEmacs en console peut gérer 256 couleurs, mais vous devrez utiliser un terminal approprié pour cela. Par exemple, URxvt prend en charge 256 couleurs. Vous pouvez utiliser la fonction list-colors-display pour obtenir une liste complète des couleurs prises en charge. Ceci est fortement dépendant du terminal.\n\nConsultez également\n\n- https://www.emacswiki.org/emacs/ColorThemes\n- https://www.gnu.org/software/emacs/manual/html_node/emacs/Custom-Themes.html\n\n"
    },
    {
      "title": "Prise en charge de SyncTeX",
      "level": 3,
      "content": "Emacs est un puissant éditeur LaTeX. Ceci est principalement dû au fait que vous pouvez adapter ou créer un mode LaTeX pour répondre au mieux à vos besoins.\n\nNéanmoins, il peut y avoir quelques défis, comme la prise en charge de SyncTeX. Vous devez d'abord vous assurer que votre distribution TeX en dispose. Si vous avez installé TeX Live manuellement, vous devrez peut-être installer le paquet synctex.\n\n```\n# umask 022 && tlmgr install synctex\n```\n\nLa prise en charge de SyncTeX dépend de la visionneuse. Ici nous utiliserons Zathura comme exemple, donc le code doit être adapté si vous voulez utiliser un autre visualisateur de PDF.\n\n```\n(defcustom tex-my-viewer \"zathura --fork -s -x \\\"emacsclient --eval '(progn (switch-to-buffer  (file-name-nondirectory \\\"'\\\"'\\\"%{input}\\\"'\\\"'\\\")) (goto-line %{line}))'\\\"\" \n  \"PDF Viewer for TeX documents. You may want to fork the viewer\nso that it detects when the same document is launched twice, and\npersists when Emacs gets closed.\n\nSimple command:\n\n  zathura --fork\n\nWe can use\n\n  emacsclient --eval '(progn (switch-to-buffer  (file-name-nondirectory \\\"%{input}\\\")) (goto-line %{line}))'\n\nto reverse-search a pdf using SyncTeX. Note that the quotes and double-quotes matter and must be escaped appropriately.\"\n:safe 'stringp)\n```\n\nNous définissons ici notre variable personnalisée. Si vous utilisez AucTeX ou le mode LaTeX par défaut d'Emacs, vous devrez définir le visualisateur en conséquence.\n\nMaintenant, ouvrez un fichier source LaTeX avec Emacs, compilez le document, et lancez le visualisateur. Zathura apparaîtra. Si vous appuyez sur Ctrl+Clic gauche. Emacs devrait placer le point à la position correspondante.\n\n"
    },
    {
      "title": "Coloration syntaxique pour les fichiers systemd",
      "level": 3,
      "content": "Vous pouvez utiliser systemd-mode.\n\nAlternativement, vous pouvez simplement indiquer à emacs de colorer les fichiers systemd (services, timer, etc.), en ajoutant ceci à votre fichier init :\n\n```\n(add-to-list 'auto-mode-alist '(\"\\\\.service\\\\'\" . conf-unix-mode))\n (add-to-list 'auto-mode-alist '(\"\\\\.timer\\\\'\" . conf-unix-mode))\n (add-to-list 'auto-mode-alist '(\"\\\\.target\\\\'\" . conf-unix-mode))\n (add-to-list 'auto-mode-alist '(\"\\\\.mount\\\\'\" . conf-unix-mode))\n (add-to-list 'auto-mode-alist '(\"\\\\.automount\\\\'\" . conf-unix-mode))\n (add-to-list 'auto-mode-alist '(\"\\\\.slice\\\\'\" . conf-unix-mode))\n (add-to-list 'auto-mode-alist '(\"\\\\.socket\\\\'\" . conf-unix-mode))\n (add-to-list 'auto-mode-alist '(\"\\\\.path\\\\'\" . conf-unix-mode))\n (add-to-list 'auto-mode-alist '(\"\\\\.netdev\\\\'\" . conf-unix-mode))\n (add-to-list 'auto-mode-alist '(\"\\\\.network\\\\'\" . conf-unix-mode))\n (add-to-list 'auto-mode-alist '(\"\\\\.link\\\\'\" . conf-unix-mode))\n```\n\n"
    },
    {
      "title": "Prise en charge du presse-papiers pour emacs-nox",
      "level": 3,
      "content": "Pour utiliser le presse-papiers de Xorg dans emacs-nox, installez xclip et ajoutez la fonction suivante à ~/.emacs [2]\n\n```\n;; use xclip to copy/paste in emacs-nox\n(unless window-system\n  (when (getenv \"DISPLAY\")\n    (defun xclip-cut-function (text &optional push)\n      (with-temp-buffer\n\t(insert text)\n\t(call-process-region (point-min) (point-max) \"xclip\" nil 0 nil \"-i\" \"-selection\" \"clipboard\")))\n    (defun xclip-paste-function()\n      (let ((xclip-output (shell-command-to-string \"xclip -o -selection clipboard\")))\n\t(unless (string= (car kill-ring) xclip-output)\n\t  xclip-output )))\n    (setq interprogram-cut-function 'xclip-cut-function)\n    (setq interprogram-paste-function 'xclip-paste-function)\n    ))\n```\n\n```\n;; xterm mouse support\n(require 'mouse)\n(xterm-mouse-mode t)\n```\n\n"
    },
    {
      "title": "Paquets",
      "level": 2,
      "content": "Les fonctionnalités d'Emacs peuvent être étendues avec des paquets tiers. Le gestionnaire de paquets intégré package.el est le moyen officiellement pris en charge pour ce faire, bien qu'il existe plusieurs autres gestionnaires de paquets écrits par des membres de la communauté Emacs. package.el s'appuie sur la variable package-archives pour trouver des paquets. Par défaut, il s'agit de Emacs Lisp Package Archive (ELPA). M-x list-packages créera un tampon listant tous les paquets connus de votre Emacs. Le manuel ((info \"(emacs) Packages\")) contient beaucoup plus d'informations.\n\nDes archives de paquets tiers peuvent être ajoutées. La plus utilisée d'entre elles est MELPA.\n\nUn certain nombre d'extensions populaires sont disponibles sous forme de paquets dans les dépôts officiels, et plus encore, via l'AUR. Le nom de ces paquets a généralement un préfixe 'emacs-' (par exemple, emacs-lua-mode), mais pas toujours (par exemple, auctexAUR).\n\nCertains paquets peuvent nécessiter des modifications de votre fichier de configuration afin de les activer pour que leurs fonctionnalités soient disponibles pendant une session Emacs. Par exemple, si vous installez auctexAUR, vous devrez ajouter\n\n```\n(load \"auctex.el\" nil t t)\n(load \"preview-latex.el\" nil t t)\n```\n\nà votre fichier de configuration. Les autres paquets devraient vous indiquer comment les activer dans la section commentaire de leur code source ou dans leur README.\n\n"
    },
    {
      "title": "Emacs ne démarre pas avec le message d'erreur 'Undefined color : \"WINDOW_FOREGROUND\"'",
      "level": 3,
      "content": "Vous devez installer soit le paquet mcpp, soit le paquet gcc. Le préprocesseur C cpp est utilisé pour prétraiter les X resources par xrdb. Si un préprocesseur C n'est pas installé sur le système, xrdb ignore silencieusement l'exécution du préprocesseur C et le symbole WINDOW_FOREGROUND n'est pas développé en un code couleur hexadécimal.\n\n"
    },
    {
      "title": "Le service Emacs systemd ne démarre pas lors de l'utilisation de Gccemacs",
      "level": 3,
      "content": "Lorsque vous utilisez Gccemacs (soit la branche emacs-native-comp ou pgtk-nativecomp) et que vous essayez de démarrer un service systemd pour celui-ci, un message d'erreur indiquant qu'un fichier .eln n'a pas été trouvé peut être enregistré :\n\n```\n$ journalctl --user -xb -g eln\n```\n\n```\nemacs[7507]: emacs: ../native-lisp/28.0.50-x86_64-pc-linux-gnu-fc9c33938bf279333039c28064d363e8/lisp-mode-410874a46ab8852855281f021ca61fe7-1738806322de892570d69dfc55b437c2.eln: cannot open shared object file: No such file or directory\n```\n\nComme palliatif, éditez la ligne WorkingDirectory de emacs.service dans la section [Service].\n\n```\nemacs.service\n```\n\n```\n[Service]\n...\nWorkingDirectory=/usr/lib/emacs/28.0.50/x86_64-pc-linux-gnu/\n...\n```\n\n"
    },
    {
      "title": "Problèmes de sortie colorée",
      "level": 3,
      "content": "Par défaut, le shell Emacs affiche les séquences d'échappement brutes utilisées pour imprimer des couleurs. En d'autres termes, il affichera des symboles étranges à la place de la sortie colorée souhaitée.\n\nL'inclusion de ce qui suit dans ~/.emacs résout le problème :\n\n```\n(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)\n```\n\n"
    },
    {
      "title": "Problèmes d'affichage des caractères dans X Windows",
      "level": 3,
      "content": "Si lorsque vous démarrez emacs dans X windows, tous les caractères de la fenêtre principale sont des boîtes blanches avec des bordures noires (celles que vous consultez si vous essayez d'afficher des caractères pour lesquels vous n'avez pas installé la bonne police), vous devez installer xorg-fonts-75dpi et/ou xorg-fonts-100dpi et redémarrer X windows.\n\n"
    },
    {
      "title": "Démarrage lent",
      "level": 3,
      "content": "Les temps de démarrage lents sont souvent causés par l'une des deux choses suivantes.\n\nPour déterminer laquelle, exécutez Emacs avec :\n\n```\n$ emacs -q\n```\n\n- Des erreurs, particulièrement dans /etc/hosts, résulteront souvent en un délai de 5+ secondes au démarrage d'Emacs. Reportez-vous à Network configuration#Set the hostname pour plus d'informations.\n\n- Vous devrez peut-être surveiller les paquets réseau envoyés depuis votre ordinateur (à l'aide d'un programme comme Wireshark) pour consulter tout comportement étrange.\n\n- Une manière simple de rechercher la cause est de commenter (c'est-à-dire de préfixer les lignes par \" ;\") les sections suspectes de votre ~/.emacs. (ou ~/.emacs.d/init.el) puis de relancer Emacs pour consulter les changements éventuels. Gardez à l'esprit que l'utilisation de \"require\" et \"load\" peut ralentir le démarrage, surtout lorsqu'ils sont utilisés avec des extensions plus importantes. Ils ne devraient, en règle générale, être utilisés que lorsque leur cible est soit : nécessaire une fois qu'Emacs démarre ou fournit un peu plus que des \"autoloads\" pour une extension. Sinon, utilisez directement la fonction 'autoload. Par exemple, au lieu de :\n\n```\n(require 'anything)\n```\n\nvous pouvez utiliser :\n\n```\n(autoload 'anything \"anything\" \"Select anything\" t)\n```\n\n"
    },
    {
      "title": "Impossible d'ouvrir le fichier de chargement : ...",
      "level": 3,
      "content": "La cause la plus fréquente de cette erreur est que la variable 'load-path' n'inclut pas le chemin du répertoire dans lequel se trouve l'extension. Pour résoudre ce problème, ajoutez le chemin approprié à la liste à rechercher avant de tenter de charger l'extension :\n\n```\n(add-to-list 'load-path \"/path/to/directory/\")\n```\n\nSi vous tentez d'utiliser des paquets pour des extensions et qu'Emacs a été configuré avec un préfixe autre que '/usr', le chemin de chargement devra être mis à jour. Placez ce qui suit dans ~/.emacs avant les instructions fournies par le paquet :\n\n```\n(add-to-list 'load-path \"/usr/share/emacs/site-lisp\")\n```\n\nSi vous compilez Emacs à la main, gardez à l'esprit que le préfixe par défaut est '/usr/local'.\n\n"
    },
    {
      "title": "Problème des touches d'accentuation morte : '<dead-acute> is undefined'",
      "level": 3,
      "content": "En cherchant ce bug sur Google, on trouve ce lien : https://lists.gnu.org/archive/html/help-gnu-emacs/2009-05/msg00167.html\n\nExplication du problème : dans les versions récentes de b72\n\n```\nEmacs, the normal way to use accent keys does not work as expected. Trying to accent a word like 'fiancé' will produce the message above.\n```\n\nUne façon de résoudre ce problème est de mettre la ligne ci-dessus dans votre fichier de démarrage, ~/.emacs :\n\n```\n(require 'iso-transl)\n```\n\nEt non, ce n'est pas un bug, mais une fonctionnalité des nouvelles versions d'Emacs. En lisant les messages ultérieurs à ce sujet sur la liste de diffusion, on trouve ceci (https://lists.gnu.org/archive/html/help-gnu-emacs/2009-05/msg00179.html) :\n\n"
    },
    {
      "title": "C-M-% et certaines autres raccourcis ne fonctionnent pas dans emacs nox",
      "level": 3,
      "content": "C'est parce que les terminaux sont plus limités que Xorg. Certains terminaux peuvent cependant gérer plus de raccourcis que d'autres. Deux solutions :\n\n- soit utiliser la version graphique,\n- soit changer le raccourcis pour un raccourcis prise en charge.\n\nExemple :\n\n```\n.emacs\n```\n\n```\n(global-set-key (kbd \"C-M-y\") 'query-replace-regexp)\n```\n\n"
    },
    {
      "title": "Emacs s'arrête",
      "level": 3,
      "content": "En raison de sa nature «single-thread», de nombreuses opérations bloquent Emacs. Cela peut se produire de plusieurs façons. Par exemple, Emacs peut être en attente d'une entrée de votre part (par exemple, vous avez ouvert le minibuffer dans une image mais vous essayez de travailler dans une autre). Il se peut aussi qu'Emacs soit en train d'exécuter un code qui prend simplement du temps à se terminer. Ou peut-être avez-vous rencontré un bogue. Il existe plusieurs façons d'essayer de débloquer Emacs sans tuer le processus Emacs.\n\n- Essayez d'appuyer sur C-g. Selon ce que fait Emacs, vous devrez peut-être appuyer plusieurs fois sur cette touche.\n- Essayez d'appuyer sur ESC ESC ESC.\n- Depuis un autre terminal, exécutez killall -SIGUSR2 emacs.\n\n"
    },
    {
      "title": "La sortie d'Emacs-nox devient désordonnée",
      "level": 3,
      "content": "Lorsque vous travaillez dans un terminal, la couleur, l'indentation, ou tout ce qui est lié à la sortie peut devenir fou. C'est (probablement ?) parce qu'Emacs a reçu un caractère spécial à un moment donné qui peut entrer en conflit avec le terminal actuel. Si cela arrive, vous pouvez faire M-x redraw-display, qui redessinera l'affichage du terminal. Si ce problème se produit fréquemment, vous pouvez lier la commande à une touche, par exemple en mettant quelque chose comme\n\n```\n(global-set-key (kbd \"<f7>\") 'redraw-display)\n```\n\ndans votre fichier .emacs.\n\nEmacs graphique ne souffre pas de ce problème.\n\n"
    },
    {
      "title": "Affichage des nombres échappés étranges (utf-8) dans le terminal emacs",
      "level": 3,
      "content": "Exportez ces valeurs dans votre .bashrc ou .zshrc :\n\n```\n$ ~/.bashrc ou ~/.zshrc\n```\n\n```\nexport LANG\\='en_US.UTF-8'\nexport LC_ALL\\=\"en_US.UTF-8\"\nexport TERM\\=xterm-256color\n```\n\nCela peut être une source d'erreurs car dans les distributions Linux, les valeurs correctes utilisent utf en minuscule (par exemple, en_US.utf-8).\n\nPour afficher toutes les locales disponibles, utilisez locale -a.\n\n"
    },
    {
      "title": "Les touches Shift + Flèche ne fonctionnent pas dans emacs avec tmux",
      "level": 3,
      "content": "Activez les touches xterm dans votre configuration tmux :\n\n```\n~/.tmux.conf\n```\n\n```\nsetw -g xterm-keys on\n```\n\nComme cela va casser d'autres combinaisons de touches, mettez ce qui suit dans votre configuration emacs.\n\n```\n~/.emacs\n```\n\n```\n(defadvice terminal-init-screen\n  ;; The advice is named `tmux', and is run before `terminal-init-screen' runs.\n  (before tmux activate)\n  ;; Docstring.  This describes the advice and is made available inside emacs;\n  ;; for example when doing C-h f terminal-init-screen RET\n  \"Apply xterm keymap, allowing use of keys passed through tmux.\"\n  ;; This is the elisp code that is run before `terminal-init-screen'.\n  (if (getenv \"TMUX\")\n    (let ((map (copy-keymap xterm-function-map)))\n    (set-keymap-parent map (keymap-parent input-decode-map))\n(set-keymap-parent input-decode-map map))))\n```\n\nConsultez la FAQ de tmux pour plus de détails.\n\n"
    },
    {
      "title": "Redimensionnement incorrect des fenêtres dans KDE",
      "level": 3,
      "content": "Les utilisateurs de KDE peuvent observer que la fenêtre Emacs ne se redimensionne pas correctement, mais plutôt que la partie redimensionnée est transparente et les clics de souris sont envoyés à la fenêtre sous-jacente. Pour corriger ce comportement, modifiez le thème GTK3 de KDE à quelque chose d'autre que oxygen-gtk. Par exemple, utilisez le thème Emacs qui est inclus dans gtk3.\n\nPour forcer Emacs à s'agrandir complètement dans KDE, cliquez sur l'icône Emacs dans la barre de titre, et sélectionnez More Actions > Special Window Settings. Ensuite, dans l'onglet \"Size & Position\", sélectionnez \"Obey geometry restrictions\", choisissez \"Force\" dans le menu déroulant et sélectionnez \"No\" dans les boutons radio à droite.\n\n"
    },
    {
      "title": "Alternatives",
      "level": 2,
      "content": "Il existe de nombreuses \"petites\" implémentations d'Emacs. GNU/Emacs est probablement la plus populaire. Quelques alternatives légères compatibles avec Emacs sont listées ici :\n\n- mg — implémentation légère d'Emacs écrite en C. Notez qu'elle ne prend pas en charge UTF-8.\n\n- Zile — \"Zile Is Lossy Emacs\", un clone léger écrit pour être aussi similaire que possible à Emacs. Zile ne prend pas en charge UTF-8.\n\n- uemacs — Une version de \"Micro-emacs\" personnalisée par Linus Torvalds.\n\n- emacs-ng — Une nouvelle approche d'Emacs - incluant TypeScript, Threading, Async I/O, et WebRender.\n\n"
    },
    {
      "title": "Voir aussi",
      "level": 2,
      "content": "- Page d'accueil de GNU Emacs\n- Manuel de GNU Emacs\n- Wiki d'Emacs\n- WikEmacs - un wiki Emacs plus lisible, mais moins complet.\n- Introduction utile à Emacs et à ses raccourcis.\n- L'Église d'Emacs (via Google drive)\n- Carte de référence officielle\n- EXWM, le gestionnaire de fenêtres X d'Emacs\n\n"
    }
  ]
}
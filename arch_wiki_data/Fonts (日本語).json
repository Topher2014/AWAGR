{
  "title": "Fonts (日本語)",
  "url": "https://wiki.archlinux.org/title/Fonts_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- フォント設定\n- アプリケーション一覧/ユーティリティ#Font viewers\n- Java Runtime Environment のフォント\n- Linux コンソール#フォント\n- メトリック互換フォント\n- Microsoft フォント\n\nWikipedia:Computer font (日本語版) より: 「コンピュータのフォントは、グラフィカルなグリフのセットを含むデジタルデータファイルとして実装されている。コンピュータフォントは、フォントエディタを用いて設計・作成される。コンピュータの画面用に特別に設計されたフォントで、印刷用ではないものをスクリーンフォントという。」\n\nなお、フォントのライセンスによっては、法的な制約を受ける場合があります。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 フォントフォーマット 1.1 ビットマップフォーマット 1.2 アウトラインフォーマット 1.3 他のフォーマット\n- 2 インストール 2.1 Pacman 2.2 パッケージを作成する 2.3 手動インストール 2.4 古いアプリケーション 2.5 Pango の警告\n- 3 フォントパッケージ 3.1 ビットマップ 3.2 ラテン文字 3.2.1 ファミリー 3.2.2 等幅 3.2.3 サンセリフ 3.2.4 セリフ 3.2.5 手書き 3.2.6 未分類 3.3 非ラテン文字 3.3.1 古代文字 3.3.2 アラビア文字 3.3.3 ベンガル文字 3.3.4 点字 3.3.5 中国語、日本語、韓国語、ベトナム語 3.3.5.1 汎 CJK 3.3.5.2 中国語 3.3.5.3 日本語 3.3.5.4 韓国語 3.3.5.5 ベトナム語 3.3.6 キリル文字 3.3.7 ギリシャ文字 3.3.8 ヘブライ文字 3.3.8.1 等幅 3.3.9 インド語群 3.3.10 クメール文字 3.3.11 モンゴル・ツングース語族 3.3.12 ペルシア文字 3.3.13 タイ・カダイ語族 3.3.14 チベット・ビルマ語派 3.4 絵文字と記号 3.5 数学 3.6 他のオペレーティングシステムのフォント\n- 4 代替フォントの順番\n- 5 フォントエイリアス\n- 6 ヒントとテクニック 6.1 インストールした全てのフォントを一覧する 6.2 特定の言語のインストール済みフォントを一覧する 6.3 特定の Unicode 文字を持つインストール済みフォントを一覧表示する 6.4 アプリケーション固有のフォントキャッシュ 6.5 双方向テキストのサポート 6.6 点字フォントがターミナル内で正しく表示されない 6.7 フォント設定に関するアプリケーション固有のヒント 6.7.1 Emacs 6.7.2 Visual Studio Code\n- 7 参照\n\n- 1.1 ビットマップフォーマット\n- 1.2 アウトラインフォーマット\n- 1.3 他のフォーマット\n\n- 2.1 Pacman\n- 2.2 パッケージを作成する\n- 2.3 手動インストール\n- 2.4 古いアプリケーション\n- 2.5 Pango の警告\n\n- 3.1 ビットマップ\n- 3.2 ラテン文字 3.2.1 ファミリー 3.2.2 等幅 3.2.3 サンセリフ 3.2.4 セリフ 3.2.5 手書き 3.2.6 未分類\n- 3.3 非ラテン文字 3.3.1 古代文字 3.3.2 アラビア文字 3.3.3 ベンガル文字 3.3.4 点字 3.3.5 中国語、日本語、韓国語、ベトナム語 3.3.5.1 汎 CJK 3.3.5.2 中国語 3.3.5.3 日本語 3.3.5.4 韓国語 3.3.5.5 ベトナム語 3.3.6 キリル文字 3.3.7 ギリシャ文字 3.3.8 ヘブライ文字 3.3.8.1 等幅 3.3.9 インド語群 3.3.10 クメール文字 3.3.11 モンゴル・ツングース語族 3.3.12 ペルシア文字 3.3.13 タイ・カダイ語族 3.3.14 チベット・ビルマ語派\n- 3.4 絵文字と記号\n- 3.5 数学\n- 3.6 他のオペレーティングシステムのフォント\n\n- 3.2.1 ファミリー\n- 3.2.2 等幅\n- 3.2.3 サンセリフ\n- 3.2.4 セリフ\n- 3.2.5 手書き\n- 3.2.6 未分類\n\n- 3.3.1 古代文字\n- 3.3.2 アラビア文字\n- 3.3.3 ベンガル文字\n- 3.3.4 点字\n- 3.3.5 中国語、日本語、韓国語、ベトナム語 3.3.5.1 汎 CJK 3.3.5.2 中国語 3.3.5.3 日本語 3.3.5.4 韓国語 3.3.5.5 ベトナム語\n- 3.3.6 キリル文字\n- 3.3.7 ギリシャ文字\n- 3.3.8 ヘブライ文字 3.3.8.1 等幅\n- 3.3.9 インド語群\n- 3.3.10 クメール文字\n- 3.3.11 モンゴル・ツングース語族\n- 3.3.12 ペルシア文字\n- 3.3.13 タイ・カダイ語族\n- 3.3.14 チベット・ビルマ語派\n\n- 3.3.5.1 汎 CJK\n- 3.3.5.2 中国語\n- 3.3.5.3 日本語\n- 3.3.5.4 韓国語\n- 3.3.5.5 ベトナム語\n\n- 3.3.8.1 等幅\n\n- 6.1 インストールした全てのフォントを一覧する\n- 6.2 特定の言語のインストール済みフォントを一覧する\n- 6.3 特定の Unicode 文字を持つインストール済みフォントを一覧表示する\n- 6.4 アプリケーション固有のフォントキャッシュ\n- 6.5 双方向テキストのサポート\n- 6.6 点字フォントがターミナル内で正しく表示されない\n- 6.7 フォント設定に関するアプリケーション固有のヒント 6.7.1 Emacs 6.7.2 Visual Studio Code\n\n- 6.7.1 Emacs\n- 6.7.2 Visual Studio Code\n\n"
    },
    {
      "title": "フォントフォーマット",
      "level": 2,
      "content": "今日使われるほとんどのコンピュータフォントのデータフォーマットは、ビットマップかアウトラインのどちらかです。\n\n"
    },
    {
      "title": "ビットマップフォーマット",
      "level": 3,
      "content": "- Adobe による Bitmap Distribution Format (BDF)\n- Xorg による Portable Compiled Format (PCF)\n- カーネルがコンソールフォントで使用する PC Screen Font (PSF) (Xorg はサポートしていません。Unicode PSF ファイルの拡張子は psfu です)。\n- OpenType ビットマップフォント (OTB) [1]\n\n上記のフォーマットは gzip で圧縮することもできます。利用可能なビットマップフォントは#ビットマップを見てください。\n\n"
    },
    {
      "title": "アウトラインフォーマット",
      "level": 3,
      "content": "- Adobe による PostScript フォント – 様々なフォーマットがあります。例: Printer Font ASCII (PFA) と Printer Font Binary (PPB)。\n- Apple と Microsoft による TrueType (ファイル拡張子: ttf)\n- TrueType を基に Microsoft によって開発された OpenType (ファイル拡張子: otf、ttf)\n\n多くの場合、TrueType と OpenType の技術的な差異は無視することができます。\n\n"
    },
    {
      "title": "他のフォーマット",
      "level": 3,
      "content": "組版アプリケーションの TeX と、それに組み合わせるフォントソフトウェアの Metafont は、従来から独自の方法で文字をレンダリングします。この2つのプログラムでフォントとして使われるファイル拡張子に *pk、*gf、mf、vf があります。最近のバージョンでは、TrueType フォントと OpenType フォントを使うこともできます。\n\nFontForge (fontforge) はフォント編集アプリケーションであり、独自のネイティブなテキストベースのフォーマット sfd (spline font database) でフォントを保存できます。\n\nSVG にも独自のフォント表現方式があります。\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "フォントをインストールする方法は複数あります。\n\n"
    },
    {
      "title": "Pacman",
      "level": 3,
      "content": "有効化されているリポジトリ内のフォント及びフォントコレクションは pacman でインストールできます。\n\n利用可能なフォントはパッケージをクエリすることで確認できます (例えば、font や ttf といった単語で検索するなど)。\n\n"
    },
    {
      "title": "パッケージを作成する",
      "level": 3,
      "content": "フォントの管理は pacman からできるようにしたほうが良いでしょう。Arch のパッケージを作成することで、pacman に管理させることができます。また、パッケージは Arch コミュニティと AUR で共有することもできます。フォントをインストールするパッケージは特に似ています (フォントパッケージガイドライン を参照してください)。\n\nフォントファイルのファミリー名は fc-query を使うことで確認できます (例: fc-query -f '%{family[0]}\\n' /path/to/file)。フォーマットについては FcPatternFormat(3) で説明されています。\n\n"
    },
    {
      "title": "手動インストール",
      "level": 3,
      "content": "システムで設定されているリポジトリに存在しないフォントを追加する際に推奨される方法は #パッケージを作成する で説明されています。この方法では、後にフォントパッケージの削除と更新を pacman で行うことができます。\n\nまたは、フォントを手動でインストールすることもできます:\n\n- シングルユーザーの場合、フォントは ~/.local/share/fonts/ にインストールします。 多くの場合、他のユーザーとしてグラフィカルなアプリケーションを実行しない限り、これで十分です。 過去には ~/.fonts/ が使われていましたが、現在は非推奨です。\n- システム全体 (全ユーザー) にインストールする場合は、/usr/local/share/fonts/ の下にフォントを配置します。 先にディレクトリを作成する必要があるかもしれません: mkdir -p /usr/local/share/fonts /usr/share/fonts/ はパッケージマネージャの権限下にあり、手動で変更するべきではありません。\n\n- 多くの場合、他のユーザーとしてグラフィカルなアプリケーションを実行しない限り、これで十分です。\n- 過去には ~/.fonts/ が使われていましたが、現在は非推奨です。\n\n- 先にディレクトリを作成する必要があるかもしれません: mkdir -p /usr/local/share/fonts\n- /usr/share/fonts/ はパッケージマネージャの権限下にあり、手動で変更するべきではありません。\n\nサブディレクトリ構造の作成はユーザー次第であり、Linux ディストリビューションによって異なります。わかりやすくするために、各フォントをそれ自身のディレクトリに置くとよいでしょう。Fontconfig はデフォルトのパスを再帰的に検索し、ネストしたファイルを確実に拾います。\n\n構造の例は次のとおりです:\n\n```\n/usr/local/share/fonts/\n├── otf\n│   └── SourceCodeVariable\n│       ├── SourceCodeVariable-Italic.otf\n│       └── SourceCodeVariable-Roman.otf\n└── ttf\n    ├── AnonymousPro\n    │   ├── Anonymous-Pro-B.ttf\n    │   ├── Anonymous-Pro-I.ttf\n    │   └── Anonymous-Pro.ttf\n    └── CascadiaCode\n        ├── CascadiaCode-Bold.ttf\n        ├── CascadiaCode-Light.ttf\n        └── CascadiaCode-Regular.ttf\n```\n\nフォントファイルには、すべてのユーザーに対して十分な読み取り権限を与える必要があります。少なくとも、ファイルの場合は 444、ディレクトリの場合は 555 に chmod しておく必要があります。\n\nXserver がフォントを直接読み込むためには (フォントサーバ の使用とは対照的に)、新しく追加したフォントのディレクトリを FontPath エントリで追加する必要があります。このエントリは Xorg 設定ファイルの Files セクションにあります (例: /etc/X11/xorg.conf や /etc/xorg.conf)。詳しくは #古いアプリケーション を見て下さい。\n\n最後に、fontconfig キャッシュをアップデートします (通常は fontconfig ライブラリを使用するアプリケーションが実行するため必要ありません):\n\n```\n$ fc-cache\n```\n\n"
    },
    {
      "title": "古いアプリケーション",
      "level": 3,
      "content": "fontconfig をサポートしていない古いアプリケーション (例: GTK 1.x アプリケーションや xfontsel) では、インデックスをフォントディレクトリ内に作成しておく必要があります:\n\n```\n$ mkfontscale\n$ mkfontdir\n```\n\nまたは、ワンライナーで複数のフォルダを追加するには:\n\n```\n$ for dir in /font/dir1/ /font/dir2/; do xset +fp $dir; done && xset fp rehash\n```\n\nまたは、フォントが、/usr/share/fonts などのディレクトリ内の異なるサブフォルダ内にそれぞれインストールされている場合は:\n\n```\n$ for dir in * ; do if [  -d  \"$dir\"  ]; then cd \"$dir\";xset +fp \"$PWD\" ;mkfontscale; mkfontdir;cd .. ;fi; done && xset fp rehash\n```\n\nX サーバーがフォントディレクトリの読み込みに失敗したときは全ての fonts.dir ファイルを再スキャンしてください:\n\n```\n# xset +fp /usr/share/fonts/misc # Inform the X server of new directories\n# xset fp rehash                # Forces a new rescan\n```\n\nフォントが読み込まれたのかチェックするには:\n\n```\n$ xlsfonts | grep fontname\n```\n\nこれは、/etc/X11/xorg.conf や /etc/X11/xorg.conf.d でグローバルに設定することもできます。\n\n以下は、/etc/X11/xorg.conf に追加すべきセクションの例です。必要なフォントに合わせてパスを削除または追加してください。\n\n```\n# Let X.Org know about the custom font directories\nSection \"Files\"\n    FontPath    \"/usr/share/fonts/100dpi\"\n    FontPath    \"/usr/share/fonts/75dpi\"\n    FontPath    \"/usr/share/fonts/cantarell\"\n    FontPath    \"/usr/share/fonts/cyrillic\"\n    FontPath    \"/usr/share/fonts/encodings\"\n    FontPath    \"/usr/share/fonts/misc\"\n    FontPath    \"/usr/share/fonts/truetype\"\n    FontPath    \"/usr/share/fonts/TTF\"\n    FontPath    \"/usr/share/fonts/util\"\nEndSection\n```\n\n"
    },
    {
      "title": "Pango の警告",
      "level": 3,
      "content": "システムで Pango が使用されている場合に、pango は fontconfig から読み込んでフォントを読み込む場所を分類します。\n\n```\n(process:5741): Pango-WARNING **: failed to choose a font, expect ugly output. engine-type='PangoRenderFc', script='common'\n(process:5741): Pango-WARNING **: failed to choose a font, expect ugly output. engine-type='PangoRenderFc', script='latin'\n```\n\n上記のようなエラーや、アプリケーションで文字の代わりに豆腐が表示された場合、フォントを追加してフォントキャッシュをアップデートする必要があります。この例では ttf-liberation フォントがあげられていて root 権限でシステム全体で有効にします。\n\n```\n# fc-cache\n```\n\n```\n/usr/share/fonts: caching, new cache contents: 0 fonts, 3 dirs\n/usr/share/fonts/TTF: caching, new cache contents: 16 fonts, 0 dirs\n/usr/share/fonts/encodings: caching, new cache contents: 0 fonts, 1 dirs\n/usr/share/fonts/encodings/large: caching, new cache contents: 0 fonts, 0 dirs\n/usr/share/fonts/util: caching, new cache contents: 0 fonts, 0 dirs\n/var/cache/fontconfig: cleaning cache directory\nfc-cache: succeeded\n```\n\nデフォルトのフォントが設定されたか確認するには:\n\n```\n$ fc-match\n```\n\n```\nLiberationMono-Regular.ttf: \"Liberation Mono\" \"Regular\"\n```\n\n"
    },
    {
      "title": "フォントパッケージ",
      "level": 2,
      "content": "以下は、公式リポジトリや AUR から入手できる多くのフォントパッケージを精選したリストです。幅広い Unicode サポートのあるフォントには \"Unicode\" とマークしています。\n\n"
    },
    {
      "title": "ビットマップ",
      "level": 3,
      "content": "- デフォルト 8×16\n- Berry (pcf-spectrum-berryAUR) – 8px\n- Dina (dina-fontAUR) – Proggy プログラミングフォントベース、6pt、8pt、9pt、10pt、等幅\n- Efont (efont-unicode-bdfAUR) – 10px、12px、14px、16px、24px、ノーマル、太字、イタリック\n- Gohu (gohufontAUR) – 11px、14px、ノーマル、太字\n- Kissinger 2 – 8×16、16×16 (Unifont の競合)\n- Lime (artwiz-fontsAUR)\n- ProFont (ttf-profont-iixAUR) – 10px、11px、12px、15px、17px、22px、29px、ノーマル\n- Proggy (proggyfontsAUR) – 複数のバリアントあり\n- Tamsyn (tamsyn-fontAUR)\n- Tewi (bdf-tewi-gitAUR)\n- Unifont – 8×16、16×16 (Unicode のカバー率が最も高いフォント) (bdf-unifontAUR)\n\nPango 1.44 及びそれ以降で機能するフォント:\n\n- ProFont (profont-otbAUR) – ProFont の OpenType Bitmap (OTB) バリアント\n- Misc Fixed xorg-fonts-misc-otbAUR\n- Gohufont (gohufont-otbAUR)\n- Cozette (cozette-otbAUR)\n- Terminus (terminus-font)\n- AUR 上の他の OTB フォント\n\n"
    },
    {
      "title": "ファミリー",
      "level": 4,
      "content": "基本のフォントセットを提供するパッケージ:\n\n- Bitstream Vera (ttf-bitstream-vera) – サンセリフ体、セリフ体、等幅フォントを含んでいます。Bitstream Vera Sans は Verdana のメトリック互換版です。\n- Croscore fonts (ttf-croscore) – Helvetica、Times、Courier、Georgia のメトリック互換フォント。それぞれ、Arimo、Tinos、Cousine、Gelasio という名前が付けられています。Chrome OS に同梱されています。\n- DejaVu フォント (ttf-dejavu) – Unicode カバー率を高めるように修正された Bitstream Vera。\n- Droid (ttf-droid) – 古い Android バージョンのデフォルトフォント。Unicode カバー率は高く、CJK 文字を含んでいますが、記号や絵文字はありません。\n- GNU FreeFont (gnu-free-fonts) – Helvetica、Times、Courier のクローンである3つのフォント (それぞれ FreeSans、FreeSerif、FreeMono) が含まれています。ほとんどのラテン文字は URW Ghostscript フォント (例: Nimbus Roman、Nimbus Sans) 由来で、非ラテン文字は Unicode カバー率の高い多くのソース由来です。ただし、CJK 文字は含まれていません。\n- IBM Plex (ttf-ibm-plex) – セリフ体、サンセリフ体、コンデンスドサンセリフ (condensed sans-serif)、等幅。True italics あり。\n- Input (ttf-input) – DJR & Font Bureau 由来のコード用フォント群\n- Liberation fonts (ttf-liberation) – Helvetica、Times、Courier のメトリック互換フォント。しかし、見た目が異なります。\n- Libertinus Fonts (otf-libertinus) – Linux Libertine と Linux Biolinum のフォーク。拡張数学記号サポートあり。#数学 を参照。\n- Microsoft フォント (ttf-ms-win11AUR) – Windows 11 のフォント群 (Windows 11 環境かインストールメディアが必要)。\n- Noto フォント (noto-fonts) – Google のフォントファミリ。任意の依存関係である絵文字と CJK のパッケージもインストールすれば、Unicode を完全にカバーできます。\n\n基本のフォントセットを提供しないパッケージ:\n\n- B612 (ttf-b612AUR) – Airbus が提供するオープンソースのフォントファミリ (サンセリフと等幅)。飛行機のコクピット画面で読みやすいようにデザインされています。\n- Ghostscript (gsfonts) – URW によって寄付された Ghostscript フォント。Helvetica、Times、Courier などのクローンを含んでいます。GNU FreeFont (gnu-free-fonts) と TeX Gyre フォント (tex-gyre-fonts) は両方とも部分的にこの Ghostscript フォントをベースとしています。\n- Luxi fonts (font-bh-ttfAUR) – Lucida に似ている X.Org フォントファミリ\n- Roboto (ttf-roboto) – 最近の Android バージョンのデフォルトフォント。CJK などサポートされていない言語に関しては Noto フォントによって補完されます。\n- TeX Gyre フォント群 (tex-gyre-fonts) – TeX ユーザーの Polish GUST association によって作成されました。ほとんどは URW Ghostscript フォントをベースとしており、Helvetica、Times、Courier などのクローンを含んでいます。一部のフォントは独自の数学関連のフォントを含んでいます (#数学 を参照)。\n- Ubuntu フォントファミリ (ttf-ubuntu-font-family)\n\nレガシーな Microsoft フォントパッケージ:\n\n- Microsoft フォント (ttf-ms-fontsAUR) – Andalé Mono、Courier New、Arial、Arial Black、Comic Sans、Impact、Lucida Sans、Microsoft Sans Serif、Trebuchet、Verdana、Georgia、Times New Roman\n- Vista フォント (ttf-vista-fontsAUR) – Consolas、Calibri、Candara、Corbel、Cambria、Constantia\n\n"
    },
    {
      "title": "等幅",
      "level": 4,
      "content": "以下では、\"プログラミングリガチャ\" (例えば \"->\" という文字列が \"⟶\" という2文字分の幅のグリフとして表示される機能のこと) をサポートしているフォントには ⟶ という印をつけています。その他の等幅フォントは #ビットマップ と #ファミリー も見てください。\n\n- Anonymous Pro (ttf-anonymous-pro、ttf-google-fonts-gitAUR に含まれています)\n- Cascadia Code (ttf-cascadia-code) ⟶ – Open Font License の下で Microsoft によってリリースされ、プログラミング合字を使用して Windows Terminal の外観を向上させるようにデザインされています。\n- Courier Prime (ttf-courier-primeAUR) – サンセリフフォントとプログラミング用に最適化されたバージョンで補完された Courier の代替品で、Open Font License の下でリリースされています。\n- Envy Code R (ttf-envy-code-rAUR) – プログラマのためのフォント\n- Fantasque Sans Mono (ttf-fantasque-sans-mono、otf-fantasque-sans-mono)\n- Fira Mono (ttf-fira-mono、otf-fira-mono) – 小さい画面に最適化され、Mozilla によって Firefox OS に採用されたフォント。\n- Fira Code (ttf-fira-code) ⟶ – 一般的な複数文字のリガチャが追加された、Fira Mono の拡張。\n- Hack (ttf-hack) - KDE Plasma でデフォルトとして使用されるオープンソースの等幅フォント\n- Hasklig (otf-haskligAUR) - 等幅リガチャのあるコードフォント\n- Hermit (otf-hermit) - プログラマによる、プログラマのためのフォント。\n- Inconsolata (ttf-inconsolata、ttf-google-fonts-gitAUR に含まれています) – ソースコードの閲覧用にデザインされたフォント。Consolas と Letter Gothic からインスパイアされました。\n- Inconsolata-g (ttf-inconsolata-gAUR) – プログラマ向けの改修が加えられています。\n- Iosevka (ttc-iosevka) ⟶ – Pragmata Pro、M+、および PF DIN Mono に触発された、プログラミングに理想的なフォントとして設計された細いサンセリフおよびスラブセリフ書体。プログラミング合字と2000以上のラテン文字、ギリシャ文字、キリル文字、発音記号、PowerLine グリフをサポートします\n- JetBrains Mono (ttf-jetbrains-mono) ⟶ – JetBrains によってはい削されている、フリーでオープンソースなフォント。\n- Lilex (ttf-lilexAUR) ⟶ – プログラミングで一般的に使われる複数文字のリガチャが含まれている、フリーでオープンソースなモダンなプログラミングフォント。\n- Lucida Typewriter (jreAUR パッケージに含まれています)\n- Menlo (ttf-mesloAUR) – OS X のための Apple の Menlo Regular フォントのカスタマイズされたバージョン。垂直方向のギャップが大きくなっています。\n- Monaco (ttf-monacoAUR) – Apple デザインされた、OS X のためのプロプライエタリなフォント。\n- Monofur (ttf-monofur)\n- Mononoki (ttf-mononokiAUR) – プログラミングやコードレビューのためのフォント。\n- Roboto Mono (ttf-roboto-mono) – Roboto (ttf-roboto) をベースとしています。\n- Source Code Pro (adobe-source-code-pro-fonts、ttf-google-fonts-gitAUR に含まれています)\n- Comic Mono (ttf-comic-mono-gitAUR) 読みやすい等幅フォント。子供の頃から親しんできたあの字面、Comic Sans。\n\n関連するウェブサイト:\n\n- Trevor Lowing のフォントリスト\n- Slant: What are the best programming fonts?\n- Stack Overflow: Recommended fonts for programming\n- Programming Fonts - Test Drive\n- Programming Fonts Compare\n- Typogram による Coding Font\n\n"
    },
    {
      "title": "サンセリフ",
      "level": 4,
      "content": "- Andika[リンク切れ 2024-03-03] (ttf-andikaAUR)\n- Cantarell (cantarell-fonts) – GNOME と共に提供されるデフォルトフォント。GNOME 及び GTK 3 関連のパッケージで必要です。\n- DMCA Sans Serif (ttf-dmcasansserifAUR) – 汎用のサンセリフフォント。Microsoft Consolas とメトリック互換性あり。\n- Fira Sans (ttf-fira-sans、otf-fira-sans) – Erik Spiekermann によって Mozilla と Firefox OS のためにデザインされたサンセリフフォント。Fira Mono と Fira Code は Fira Sans の等幅バージョンです (#等幅 を参照)。\n- FreeSans (gnu-free-fonts) – Helvetica と見た目が似ていますが、メトリクスが異なります。#ファミリー を参照。\n- Inter (inter-font) – ユーザーインターフェイス用にデザインされた、幾何学的なネオグロテスクフォント。\n- Jost* (otf-jostAUR) – Futura をベースとしたオープンソース書体。\n- Liberation Sans (ttf-liberation) – Helvetica とメトリック互換性がありますが、見た目が異なります。#ファミリー を参照。\n- Montserrat (otf-montserrat) – Gotham と Proxima Nova と似ている部分のあるオープンソースフォント。\n- Nunito (ttf-nunito) – 文字の端が丸いオープンソースフォント。なので、Gotham Rounded や Proxima Soft と似ています。\n- Open Sans (ttf-opensans) – Google から委託されたサンセリフフォント。Droid sans をベースとしていますが、少し幅広くなっています。\n- PT Sans (ttf-google-fonts-gitAUR) – 3つの主要なバリアント (normal、narrow、caption) があります。Unicode: ラテン文字、キリル文字\n- Source Sans (adobe-source-sans-fonts) – Adobe のオープンソースのサンセリフフォント。News Gothic と Franklin Gothic をベースとしています。\n- Tahoma (Wine 用の代替版) (ttf-tahomaAUR) – Tahoma に対するオープンソースな代替のフォントです。Wine プロジェクトによって開発されました。多くの Windows アプリケーションは Tahoma が利用可能であることを期待するので作成されました。\n\n"
    },
    {
      "title": "セリフ",
      "level": 4,
      "content": "- Bitstream Charter (ttf-bitstream-charterAUR、otf-bitstream-charterAUR) – 元は Matthew Carter によってデザインされた商用フォントでした。フリーなライセンスのバージョンがリリースされ、後にモダンな形式に変換されました (前述のパッケージで提供されています)。\n- Bodoni* (otf-bodoniAUR) – オープンソースな Bodoni の復刻版。\n- Crimson (otf-crimson) – Minion と似ている部分のあるオープンソースなフォント。\n- EB Garamond (ebgaramond-otfAUR) – オープンソースな Garamond の復刻版。前述のパッケージは Octavio Pardo によって開発されたバージョンです。\n- FreeSerif (gnu-free-fonts) – Times New Roman と見た目が似ていますが、メトリクスが異なります。#ファミリー を参照。\n- Gentium (ttf-gentium-plus) – Unicode。ラテン文字、ギリシャ文字、キリル文字、国際音声記号 (IPA) 文字への包括的なサポートあり。\n- Heuristica (ttf-heuristicaAUR) – フリーなライセンスでリリースされた Utopia のバージョンの1つをベースとしています。\n- Liberation Serif (ttf-liberation) – Times New Roman とメトリック互換性がありますが、見た目が異なります。#ファミリー を参照。\n- Libre Baskerville (ttf-librebaskervilleAUR) – オープンソースな Baskerville の復刻版。Impallari Type によってデザインされました。\n- Libre Caslon (otf-libre-caslonAUR) – オープンソースな Caslon の復刻版。Impallari Type によってデザインされました。\n- Linux Libertine (ttf-linux-libertine) – Times New Roman の代替として開発されましたが、見た目が異なり、さらにメトリクスも異なります (メトリクスの違いはイタリックと太字のフォントでより顕著です)。フォークの Libertinus Fonts (otf-libertinus) は活発に開発されているバージョンです。\n- TeX Gyre Termes (tex-gyre-fonts) – Times New Roman と見た目が似ています (しかし、メトリクスのマイナーな違いがあります)。#ファミリー を参照。\n- Tinos (ttf-croscore) – Times New Roman とメトリック互換性がありますが、見た目が異なります (Liberation Serif に似ています)。#ファミリー を参照。\n\n"
    },
    {
      "title": "手書き",
      "level": 4,
      "content": "- ttf-nothingyoucoulddoAUR – フォトグラファーの手書きフォント\n- ttf-indieflowerAUR – 活力のある丸みを帯びた手書きサンセリフフォント\n- ttf-pacificoAUR – 1950年代のアメリカサーフカルチャーからインスピレーションを得た、毛筆手書きフォント。キリル文字に拡張されています。\n- otf-londrinaAUR – ブラジル、サンパウロの通りからインスピレーションを得た、手書きフォント。\n- otf-teslaAUR – ニコラテスラの手書きの再構築結果をベースとしたスクリプトフォント。\n- ttf-architects-daughterAUR – 建築関連文書の見た目と四角い見た目、そして日常の手書きの自然な感じを取り入れたフォント。\n\n"
    },
    {
      "title": "未分類",
      "level": 4,
      "content": "- all-repository-fontsAUR – 公式リポジトリ内の全フォントをインストールするメタパッケージ。\n- ttf-cheapskateAUR – dustismo.com のフォントコレクション\n- ttf-google-fonts-gitAUR – フリーフォント (Ubuntu、Inconsolata、Roboto などを含む) の巨大なコレクション。 ノート: 100以上のフォントが追加されるため、フォントダイアログが非常に長くなるかもしれません。\n- ttf-junicode – 中世のラテン文字をほぼ完全に収録している Junius フォント\n- ttf-mph-2b-damaseAUR – 第1面全てといくつかの文体をカバーしているフォント\n- xorg-fonts-type1 – PostScript フォントの Adobe Utopia と IBM Courier のセット。\n\n"
    },
    {
      "title": "古代文字",
      "level": 4,
      "content": "- ttf-ancient-fontsAUR – エーゲ文明やエジプト文明の文字、楔形文字、アナトリア半島の諸文明やマヤ文明の古代文字などの Unicode 記号が含まれているフォント。\n\n"
    },
    {
      "title": "アラビア文字",
      "level": 4,
      "content": "en:Localization/Arabic#Fonts を参照。\n\n"
    },
    {
      "title": "ベンガル文字",
      "level": 4,
      "content": "en:Localization/Bengali#Fonts を参照。\n\n"
    },
    {
      "title": "点字",
      "level": 4,
      "content": "- ttf-ubrailleAUR – 点字 の Unicode 記号が入っているフォント\n\n"
    },
    {
      "title": "中国語、日本語、韓国語、ベトナム語",
      "level": 4,
      "content": "Adobe Source Han フォントと Noto CJK フォントには同一のグリフとメトリックが含まれていますが、プロジェクトが Adobe と Google の両方によって委託されたため、異なるブランドがつけられています。\n\nこれらのコレクションは両方とも簡体字、繁体字、日本語、韓国語を包括的にサポートしており、デザインと見た目は統一されています。Noto Sans CJK フォントにはローカライズされたメニュー名がありません。これは必須ではありませんが、フォントの対象言語を話す客にとってはフォントがユーザーフレンドリーになります。\n\n- Adobe Source Han フォント Source Han Sans (源ノ角ゴシック) (adobe-source-han-sans-otc-fonts) Source Han Serif (源ノ明朝) (adobe-source-han-serif-otc-fonts)\n- Noto CJK フォント (noto-fonts-cjk) – Noto Sans CJK と Noto Serif CJK の両方を含んでいます。\n\n- Source Han Sans (源ノ角ゴシック) (adobe-source-han-sans-otc-fonts)\n- Source Han Serif (源ノ明朝) (adobe-source-han-serif-otc-fonts)\n\nen:Localization/Chinese#Fonts を参照\n\nローカリゼーション#フォント を参照。\n\nen:Localization/Korean#Fonts を参照。\n\n- ttf-hannom – チュノム用のベトナム語 TrueType フォント\n\n"
    },
    {
      "title": "キリル文字",
      "level": 4,
      "content": "#ラテン文字 も参照。\n\n- ttf-paratypeAUR – ParaType によるフォントファミリ: サンセリフ、セリフ、等幅、拡張キリル文字・ラテン文字を含む。OFL ライセンス。\n- otf-russkopisAUR – キリル文字のフリーな OpenType 筆記体フォント\n\n"
    },
    {
      "title": "ギリシャ文字",
      "level": 4,
      "content": "ほとんど全ての Unicode 対応フォントにはギリシア文字セットが (アクセント注記式も) 含まれています。追加フォントパッケージには、Unicode 文字に完全には対応していないながらも高品質なギリシア文字 (もちろんラテン文字も) 活字を使えるパッケージがあります:\n\n- otf-gfsAUR – Greek Font Society による OpenType フォントのセレクション\n- ttf-mgopenAUR – Magenta によるプロフェッショナル TrueType フォント\n- ttf-sbl-greekAUR – SBL Greek。Society of Biblical Literature (SBL) により作成されました。\n- ttf-sbl-biblitAUR – SBL BibLit。SBL Greek と SBL Hebrew の文字を含んでいます。\n\n"
    },
    {
      "title": "ヘブライ文字",
      "level": 4,
      "content": "- opensiddur-hebrew-fontsAUR – オープンソースなヘブライフォントの大規模なコレクション。少数のラテン文字、ギリシャ文字、アラビア文字、アムハラ文字も含んでいます。\n- culmusAUR – フリーなヘブライフォントの良質なコレクション。\n- alefbetAUR – 2つのヘブライフォント (現時点では): 一般的に使用されている \"David Libre\" と、手書きフォントの \"Gveret Levin\"。\n- ttf-ms-fontsAUR – Arial フォントなどが含まれています。\n- ttf-sbl-hebrewAUR – SBL Hebrew。Society of Biblical Literature (SBL) によって作成されました。\n- ttf-sbl-biblitAUR – SBL BibLit。SBL Hebrew と SBL Greek の両方の文字を含んでいます。\n\n- Cousine (ttf-croscore) – Chrome OS Core Fonts に含まれています。\n- Everson Mono (ttf-everson-monoAUR) – は Courier よりも軽量で、より緩やかで、より幅広い Unicode ブロックのサポートがあります。\n- FreeMono (gnu-free-fonts) – GNU FreeFont に含まれています。\n\n"
    },
    {
      "title": "インド語群",
      "level": 4,
      "content": "en:Localization/Indic#Fonts を参照。\n\n"
    },
    {
      "title": "クメール文字",
      "level": 4,
      "content": "- ttf-khmer – クメール語のグリフをカバーするフォント。\n- Hanuman (ttf-google-fonts-gitAUR)\n\n"
    },
    {
      "title": "モンゴル・ツングース語族",
      "level": 4,
      "content": "- ttf-abkaiAUR – シベ文字・満州文字・ダウール文字フォント (開発途中で不完全です)\n\n"
    },
    {
      "title": "ペルシア文字",
      "level": 4,
      "content": "ttf-scheherazade-new のようなアラビア文字フォントにはペルシア文字も含まれています。アラビア文字フォントは en:Localization/Arabic#Fonts で確認できます。\n\n- persian-fontsAUR – AUR に存在する全てのペルシア語フォントをインストールするためのメタパッケージ。\n- borna-fontsAUR – Borna Rayaneh Co. 製のペルシア文字 B フォントシリーズ。\n- iran-nastaliq-fontsAUR – フリーの Unicode 対応ペルシア文字筆記体フォント。\n- iranian-fontsAUR – Iranian-Sans と Iranian-Serif のペルシア文字フォントファミリー。\n- ir-standard-fontsAUR – イラン通信情報技術最高評議会 (SCICT) による標準ペルシア語フォント。\n- persian-hm-ftx-fontsAUR – X Series 2、Metafont、FarsiTeX フォントから派生して作られたカシーダが使えるペルシア文字フォントシリーズ。\n- persian-hm-xs2-fontsAUR – X Series 2 フォントから派生して作られたカシーダが使えるペルシア文字フォントシリーズ。\n- gandom-fontsAUR、parastoo-fontsAUR、sahel-fontsAUR、samim-fontsAUR、shabnam-fontsAUR、tanha-fontsAUR、vazirmatn-fontsAUR、vazir-code-fontsAUR –\n\nSaber RastiKerdar によって作られた美麗なペルシア語フォント。\n\n- ttf-yasAUR – Yas Persian フォントシリーズ (hollow zero あり)。\n- ttf-x2AUR – ペルシア語、アラビア語、ウルドゥー語、パシュトゥー語、ダリー語、ウズベク語、クルド語、ウイグル語、古代トルコ語 (オスマン語)、現代トルコ語 (ローマ字) までをサポートしているフリーフォント。\n\n"
    },
    {
      "title": "タイ・カダイ語族",
      "level": 4,
      "content": "- fonts-tlwgAUR – スケーラブルなタイ語フォントのコレクション\n- ttf-google-thaiAUR – Google による高品質なタイ語フォントと Thai National Fonts の改良。\n- ttf-laoAUR – ラオス語 TTF フォント (Phetsarath_OT)\n\n"
    },
    {
      "title": "チベット・ビルマ語派",
      "level": 4,
      "content": "- ttf-tibetan-machine – チベット語 Machine TTFont\n- ttf-sil-padaukAUR – ビルマ文字を使用する多くの派生言語をサポートする Unicode フォント。\n\n"
    },
    {
      "title": "絵文字と記号",
      "level": 3,
      "content": "Unicode 規格には「絵文字」と呼ばれる画像文字のためにあてられたセクションが存在します。\n\n絵文字フォントには様々なフォーマットが存在します: CBDT/CBLC (Google)、SBIX (Apple)、COLR/CPAL (Microsoft)、SVG (Mozilla/Adobe)。\n\nサポートされているフォーマットの絵文字フォントが少なくとも1つインストールされていれば、特に設定せずとも絵文字は表示されるはずです。しかし、一部の絵文字フォントはグリフを巨大な固定サイズのビットマップとしてエンコードするので、意図したサイズで表示するためにビットマップフォントのダウンスケーリングを使用する必要があります (これはデフォルトで有効化されています)。\n\nUnicode 規格に従った絵文字フォントのフォールバックは、絵文字を扱うための追加のコードを必要とします。\n\n絵文字を見つけて入力する方法については アプリケーション一覧/ユーティリティ#Text input を参照してください。\n\nTable content:\nソフトウェア | CBDT/CBLC | SBIX | COLR/CPAL | SVG | 絵文字フォントフォールバック\nFreeType | Yes | Yes | Yes | No | –\nChromium | FreeType | – | Yes\nFirefox | FreeType | Yes | No。回避策は Firefox#フォントのトラブルシューティング を参照。\nPango | FreeType | – | Yes\nQt | FreeType | – | No [2] [3] [4]\nWebKitGTK | FreeType | – | Yes\n\nCBDT/CBLC:\n\n- noto-fonts-emoji – Google のオープンソース絵文字 15.1。\n- ttf-joypixels – EmojiOne creator のプロプライエタリな絵文字 15.0。\n- ttf-twemojiAUR – Twitter のオープンソース絵文字 15.0。\n\nSVG:\n\n- Font Awesome (ttf-font-awesome) – 象徴的な SVG フォント。\n- otf-openmojiAUR – Schwäbisch Gmünd の German University of Design のオープンソース絵文字 15.0。\n- ttf-twemoji-colorAUR – Twitter のオープンソース絵文字 14.0。\n\nアウトラインのみ:\n\n- ttf-symbolaAUR – 多くの Unicode 記号 (絵文字を含む) を提供します。\n\n顔文字は様々な文字セット (CJK フォントやインド語群フォントを含む) からなります。例えば、次のパッケージは既存の顔文字をほぼカバーします: gnu-free-fonts、ttf-arphic-uming、ttf-indic-otf。\n\nTeranoptia (ttf-teranoptia-furiaeAUR) – 文字が含まれていない typeface フォント (イラストフォント)。キーボードで文字を入力するだけでキメラ生物を作ることのできる奇妙な仕掛けがあります。\n\n"
    },
    {
      "title": "数学",
      "level": 3,
      "content": "- Computer Modern (ttf-cm-unicodeAUR、otf-cm-unicodeAUR)\n- Computer Modern (otf-latin-modern、otf-latinmodern-math) – Improved version used in LaTeX\n- Libertinus Math (otf-libertinus) – Linux Libertine (ttf-linux-libertine) のフォークである Libertinus Serif をベースとした数学フォント。\n- STIX フォント (otf-stixAUR) – STIX は、Times New Roman に似ている、ロイヤリティフリーな代替となるべくデザインされました。現在のバージョンは STIX Two と呼ばれていて、STIX Two Math という数学版が含まれています。\n- TeX Gyre math fonts (tex-gyre-math-fontsAUR) – TeX Gyre フォントの数学版 (#ファミリー を参照)。TeX Gyre Termes Math は Times New Roman の数学版です。\n\n加えて、texlive-basic と texlive-fontsextra には Latin Modern Math や STIX フォントといった多くの数学フォントが含まれています。設定については TeX Live#Fontconfig でフォントを利用可能にする を参照してください。\n\n"
    },
    {
      "title": "他のオペレーティングシステムのフォント",
      "level": 3,
      "content": "- ttf-mac-fontsAUR - Apple MacOS TrueType フォント\n\n"
    },
    {
      "title": "代替フォントの順番",
      "level": 2,
      "content": "Fontconfig は自動的に要求にあったフォントを選びだします。例えば、英語と日本語が含まれるウィンドウを表示しようとすると、デフォルトのフォントが日本語をサポートしていない場合、日本語を表示できるフォントに切り替わります。\n\nFontconfig では、各ユーザーは $XDG_CONFIG_HOME/fontconfig/fonts.conf で代替フォントの順番を設定することができます。 他の Serif フォントが表示できない場合、特定の日本語フォントを選ぶようにしてほしいときは、ファイルを次のようにします:\n\n```\n<?xml version=\"1.0\"?>\n<!DOCTYPE fontconfig SYSTEM \"fonts.dtd\">\n<fontconfig>\n<alias>\n   <family>serif</family>\n   <prefer>\n     <family>好みのラテン文字 Serif フォント名</family>\n     <family>日本語フォント名</family>\n   </prefer>\n </alias>\n</fontconfig>\n```\n\n- 日本語ロケールを使用する場合、この設定を機能させるには LC_LANG を und に設定する必要があります。さもないと、英語と日本語のテキストの両方とも日本語フォントで描画されます。\n- Fontconfig 設定を変更した後は fc-match -a monospace | head を実行して、代替フォントが正しく設定されていることを確認してください。\n\n同じように Sans-serif や monospace 用のセクションを作ることもできます。詳しくは fontconfig マニュアルを見て下さい。\n\nフォント設定#デフォルトまたは代替フォントを設定する も参照。\n\n"
    },
    {
      "title": "フォントエイリアス",
      "level": 2,
      "content": "アプリケーションが似たフォントを使えるようにするために、他のフォントを表すフォントエイリアスが複数用意されています。最も一般的なエイリアスは、セリフ体のフォントを表す serif (例: DejaVu Serif)、サンセリフ体のフォントを表す sans-serif (例: DejaVu Sans)、等幅フォントを表す monospace (例: DejaVu Sans Mono) があります。しかし、エイリアスが表すフォントは変わることがあり、KDE などのデスクトップ環境にあるようなフォント管理ツールでは対応関係が示されないことがしばしばです。\n\nエイリアスがどのフォントを示しているのか調べるには次を実行します:\n\n```\n$ fc-match monospace\n```\n\n```\nDejaVuSansMono.ttf: \"DejaVu Sans Mono\" \"Book\"\n```\n\nこの場合 DejaVuSansMono.ttf が monospace エイリアスによって表示されるフォントです。\n\n"
    },
    {
      "title": "インストールした全てのフォントを一覧する",
      "level": 3,
      "content": "以下のコマンドを使うことで、システム上で利用可能な全ての Fontconfig フォントを一覧表示できます:\n\n```\n$ fc-list\n```\n\n"
    },
    {
      "title": "特定の言語のインストール済みフォントを一覧する",
      "level": 3,
      "content": "アプリケーションやブラウザは、fontconfig の設定と、Unicode テキスト用の利用可能なフォントグリフに基づいて、フォントを選択し描画します。特定の言語用のインストール済みフォントを一覧表示するには、fc-list :lang=\"2文字の言語コード\" を実行してください。\n\n例えば、インストール済みのアラビア語フォント及びアラビア語グリフをサポートしているフォントを一覧表示するには:\n\n```\n$ fc-list -f '%{file}\\n' :lang=ar\n```\n\n```\n/usr/share/fonts/TTF/FreeMono.ttf\n/usr/share/fonts/TTF/DejaVuSansCondensed.ttf\n/usr/share/fonts/truetype/custom/DroidKufi-Bold.ttf\n/usr/share/fonts/TTF/DejaVuSansMono.ttf\n/usr/share/fonts/TTF/FreeSerif.ttf\n```\n\n"
    },
    {
      "title": "特定の Unicode 文字を持つインストール済みフォントを一覧表示する",
      "level": 3,
      "content": "特定の Unicode コードポイントをサポートする等幅フォントを検索するには:\n\n```\n$ fc-match -s monospace:charset=1F4A9\n```\n\n"
    },
    {
      "title": "アプリケーション固有のフォントキャッシュ",
      "level": 3,
      "content": "Matplotlib (python-matplotlib) は独自のフォントキャッシュを使用するので、フォントを更新したら、キャッシュを再生成して新しいフォントを検出させるために、~/.matplotlib/fontList.cache、~/.cache/matplotlib/fontList.cache、~/.sage/matplotlib-1.2.1/fontList.cache などを削除するのを忘れないでください。[6]\n\n"
    },
    {
      "title": "双方向テキストのサポート",
      "level": 3,
      "content": "右横書き言語に関連するトラブルシューティングについては 双方向テキスト を参照してください。\n\n"
    },
    {
      "title": "点字フォントがターミナル内で正しく表示されない",
      "level": 3,
      "content": "点字のレンダリングの問題がターミナル内で発生する場合は、点字フォントをインストールして gnu-free-fonts をアンインストールしてみてください。\n\n"
    },
    {
      "title": "Emacs",
      "level": 4,
      "content": "Emacs は Linux の標準的なデスクトップアプリケーションとは異なったサイズ計算を行い、Emacs 関連のパッケージは同じ設定フォーマットを使うとは限りません。なので、ポイントサイズや生のピクセルサイズは利用できません。他の値を使ってみてください。\n\n"
    },
    {
      "title": "Visual Studio Code",
      "level": 4,
      "content": "等幅フォントで特定の文字のスケーリングが正しく行われない問題が発生する場合は、Editor: Experimental Whitespace Rendering を \"svg\" から \"font\" に変更してください。これは \"Terminus (TTF)\" フォントや \"IBM 3270\" フォントで問題を解決することが知られています。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- State of Text Rendering\n- Font Library — フリーライセンスのフォントライブラリ\n\n"
    }
  ]
}
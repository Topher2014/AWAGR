{
  "title": "Irssi (Français)",
  "url": "https://wiki.archlinux.org/title/Irssi_(Fran%C3%A7ais)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Arch IRC channels (Français)\n- IRC\n- WeeChat\n- HexChat\n- irssi/irssi-otr\n\nIrssi est un client IRC (Internet Relay Chat) modulaire, basé sur ncurses. Il prend également en charge les protocoles SILC et ICB via des plugins.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Installez le paquet irssi.\n\nPlusieurs scripts sont disponibles dans l'AUR sous irssi-script, et dans le dépôt de scripts Irssi.\n\n"
    },
    {
      "title": "Utilisation",
      "level": 2,
      "content": "Pour une introduction détaillée, consultez la documentation officielle.\n\nUn multiplexeur de terminal tel que tmux ou GNU Screen est recommandé. Il permet à l'utilisateur de se déconnecter et de se reconnecter facilement à une session, et des scripts tels que nicklist.pl dépendent d'une fenêtre secondaire. Pour démarrer irssi, exécutez :\n\n```\n$ irssi\n```\n\nConsultez également irssi(1).\n\n"
    },
    {
      "title": "Commandes",
      "level": 3,
      "content": "Les commandes d'Irssi commencent par un slash et sont insensibles à la casse. L'auto-complétion est prise en charge. Vous pouvez les découvrir grâce aux pages /help intégrées, qui sont également available online.\n\nTable content:\nCommande | Description | Description\n/help | Lister toutes les commandes ou décrire une commande donnée.\n/network | Gérer vos réseaux IRC.\n/server | Gérer vos serveurs IRC.\n/connect | Se connecter à un serveur ou à un réseau.\n/disconnect | Ferme la connexion actuelle à un serveur.\nALT+(1-0,q-p,etc) | Change la fenêtre actuellement active. Ctrl+n passe à la fenêtre suivante, Ctrl+p à la fenêtre précédente.\n/window | Gérer vos fenêtres irssi.\n/layout | Sauvegarder ou supprimer la configuration de vos fenêtres.\n/statusbar | Gérer les barres d'état.\n/set | Afficher ou modifier les paramètres.\n/alias | Gérer vos alias.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Irssi installe sa configuration par défaut dans /etc/irssi.conf, et la copie dans ~/.irssi/config si elle n'est pas présente. La configuration par défaut contient plusieurs serveurs, chatnets et canaux. Vous pouvez lancer irssi avec un autre fichier de configuration en utilisant l'option --config.\n\n- Vous pouvez utiliser /save pour sauvegarder votre configuration actuelle dans le fichier de configuration.\n- Vous pouvez sauvegarder l'emplacement de vos fenêtres actuellement ouvertes en entrant /layout save.\n\n"
    },
    {
      "title": "Authentification avec SASL",
      "level": 3,
      "content": "Irssi prend en charge la Simple Authentication and Security Layer (SASL).\n\nVous pouvez ajouter un réseau avec le mécanisme SASL comme suit :\n\n```\n/SERVER ADD -ssl -ssl_verify -ssl_capath /etc/ssl/certs -network liberachat -port 6697 irc.libera.chat\n/NETWORK ADD -sasl_mechanism plain -sasl_username username -sasl_password password liberachat\n```\n\n- Veillez à utiliser la capitalisation correcte pour le nom du réseau.\n- La première ligne de commande sert à ajouter un serveur avec une #Connexion TLS.\n- Si vous avez un réseau existant, tapez uniquement la deuxième ligne de commande.\n- Si votre mot de passe contient $, vous devez le préfixer avec un autre $ pour que irssi puisse l'analyser correctement.\n\nRedémarrez Irssi, connectez le réseau et cherchez SASL authentication succeeded.\n\n"
    },
    {
      "title": "Connexion automatique à #archlinux au démarrage",
      "level": 3,
      "content": "Démarrez Irssi et tapez ce qui suit :\n\n```\n/server add -auto -network liberachat irc.libera.chat\n```\n\nliberachat peut être remplacé par tout mot préféré, comme l'abréviation courante lc.\n\nAssurez-vous que SASL est configuré correctement. Vous pouvez utiliser NickServ manuellement avec -autosendcmd au lieu de SASL, mais cela provoque une concurrence lors de la connexion automatique à des canaux. Si vous le souhaitez, authentifiez-vous en utilisant des certificats SSL, au lieu de mots de passe avec NickServ.\n\n```\n/canal add -auto #archlinux liberachat\n/canal add -auto #archlinux-offtopic liberachat\n```\n\n"
    },
    {
      "title": "Connexion TLS",
      "level": 3,
      "content": "Libera.chat utilise le port 6697 pour les connexions SSL/TLS (pas 6667). Pour vous connecter au réseau IRC Libera.chat via TLS, vous devez établir une nouvelle connexion. Lancez irssi et exécutez :\n\n```\n/server add -auto -tls -tls_verify -network liberachat -port 6697 irc.libera.chat\n```\n\nSauvegardez vos nouveaux paramètres avec :\n\n```\n/save\n```\n\nSi tout fonctionne, vous consulterez le mode \"Z\". Cela devrait ressembler à ceci : \"Changement de mode (+Zi) pour l'utilisateur votre-nick\"\n\n"
    },
    {
      "title": "Certificats des clients",
      "level": 4,
      "content": "Libera Chat et OFTC prennent en charge l'authentification à l'aide de certificats SSL, offrant une alternative aux mots de passe en texte clair. Consultez le site de Libera Chat Using CertFP pour plus de détails.\n\nPour créer un certificat sans mot de passe, valable 730 jours (lorsqu'il vous est demandé d'entrer des détails comme l'état ou même le nom commun (CN), vous pouvez remplir ce que vous voulez) :\n\n```\n$ openssl req -newkey rsa:4096 -days 730 -x509 -keyout irssi.key -out irssi.crt -nodes \n$ cat irssi.crt irssi.key > ~/.irssi/irssi.pem\n$ chmod 600 ~/.irssi/irssi.pem\n$ rm irssi.crt irssi.key\n```\n\nEnsuite, trouvez l'empreinte correspondante :\n\n```\n$ openssl x509 -sha512 -fingerprint -noout -in ~/.irssi/irssi.pem | sed -e 's/^.*=//;s/://g;y/ABCDEF/abcdef/'\n```\n\nCeci écrira l'empreinte SHA512 sur stdout. Si vous avez besoin de l'empreinte SHA1, remplacez -sha512 par -sha1. La commande sed est là pour formater correctement l'empreinte en supprimant le texte et les caractères indésirables.\n\nCopiez la chaîne de l'empreinte car vous allez l'enregistrer dans Irssi sous peu.\n\nDans irssi, déconnectez-vous du réseau et ajoutez le certificat et les clés du client. Omettez l'option -ssl_pass si votre certificat a été construit sans mot de passe :\n\n```\n/disconnect liberachat\n/server add -ssl_cert ~/.irssi/irssi.pem -ssl_pass irssi.pem_password -network liberachat irc.libera.chat 6697\n```\n\nMaintenant connectez-vous (pas /reconnect) et enregistrez votre empreinte\n\n```\n/connect liberachat\n/msg NickServ identify YOUR_PASSWORD (identification de votre mot de passe)\n/msg NickServ cert add YOUR_FINGERPRINT (Votre empreinte)\n```\n\nÀ ce stade, vous pouvez supprimer votre mot de passe du fichier de configuration (si vous l'y avez enregistré) et sauvegarder votre configuration avec :\n\n```\n/save\n```\n\n"
    },
    {
      "title": "Journalisation automatique",
      "level": 3,
      "content": "```\n/SET autolog ON\n/save\n```\n\n"
    },
    {
      "title": "Masquer les arrivées, les départs et les déconnexions",
      "level": 3,
      "content": "Afin d'ignorer l'affichage de l'arrivée, du départ et de la déconnexion des utilisateurs pour tous les canaux, tapez ce qui suit dans irssi :\n\n```\n/ignore * joins parts quits\n```\n\nConsultez smartfilter pour limiter les messages d'arrivée aux utilisateurs actifs.\n\n"
    },
    {
      "title": "Défilement de la souris",
      "level": 3,
      "content": "Pour activer la souris, tapez ce qui suit dans irssi :\n\n```\n/run scriptassist\n/script install mouse.pl\n```\n\nPour l'activer de façon permanente au démarrage :\n\n```\n/script autorun mouse.pl\n```\n\nSi ce qui précède ne fonctionne pas, vous pouvez charger manuellement les scripts de ~/.irssi/scripts ou ~/.irssi/scripts/autorun avec ce qui suit :\n\n```\n/script load mouse.pl\n```\n\n"
    },
    {
      "title": "Proxy HTTP",
      "level": 3,
      "content": "Pour utiliser irssi derrière un proxy HTTP, les commandes suivantes sont nécessaires :\n\n```\n/SET use_proxy ON\n/SET proxy_address <Proxy host address>\n/SET proxy_port <Proxy port>\n/SET -clear proxy_string\n/SET proxy_string_after conn %s %d\n/EVAL SET proxy_string CONNECT %s:%d HTTP/1.0\\n\\n\n```\n\nirssi devrait alors modifier son fichier de configuration en conséquence ; si le proxy n'est pas nécessaire, mettez simplement use_proxy à OFF.\n\nSi le proxy nécessite un mot de passe, essayez :\n\n```\n/SET proxy_password your_pass\n```\n\nSinon :\n\n```\n/SET -clear proxy_password\n```\n\n"
    },
    {
      "title": "Irssi avec nicklist dans tmux",
      "level": 3,
      "content": "Le plugin irssi 'nicklist' propose d'ajouter un panneau listant les utilisateurs de la chaîne actuellement regardée. Il a deux méthodes pour le faire :\n\n- screen, qui ajoute simplement la liste à la droite de irssi, mais présente l'inconvénient que la fenêtre entière est redessinée à chaque fois que irssi imprime une ligne.\n\n- fifo, qui comme son nom l'indique écrit la liste dans un fifo qui peut ensuite être lu continuellement avec par exemple cat ~/.irssi/nicklistfifo.\n\nnicklist utilisera une fifo plus efficace avec :\n\n```\n/NICKLIST FIFO\n```\n\nCette fifo peut être utilisée dans une fenêtre tmux divisée verticalement avec irssi dans son panneau de gauche et le cat du dessus dans un petit panneau de droite. Comme le volet dépend de la géométrie de la session tmux qui l'a créé, une session ultérieure avec un volet différent doit le recréer (ce qui implique aussi un changement de fenêtre irssi pour remplir le fifo).\n\nPar exemple, le script suivant vérifie d'abord s'il existe un irssi en cours d'exécution, supposé avoir été lancé par une exécution précédente de lui-même. S'il n'est pas trouvé, il crée une nouvelle session tmux, une fenêtre nommée d'après et exécutant irssi et ensuite le panneau avec cat. Si toutefois irssi a été trouvé, il s'attache simplement à la session et recrée le panneau cat.\n\n```\n#!/bin/sh\n\nT3=$(pgrep -u \"$USER\" -x irssi)\n\nirssi_nickpane() {\n    tmux setw main-pane-width $(( $(tput cols) - 21)) ;\n    tmux splitw -v \"cat ~/.irssi/nicklistfifo\" ;\n    tmux selectl main-vertical ;\n    tmux selectw -t irssi ;\n    tmux selectp -t 0 ;\n}\n\nirssi_repair() {\n    tmux selectw -t irssi\n    [ \"$(tmux lsp | wc -l)\" -gt 1 ] && tmux killp -a -t 0\n    irssi_nickpane\n}\n\nif [ -z \"$T3\" ] ; then\n    tmux new-session -d -s main ;\n    tmux new-window -t main -n irssi irssi ;\n    irssi_nickpane ;\nfi\n    tmux attach-session -d -t main ;\n    irssi_repair ;\nexit 0\n```\n\n"
    },
    {
      "title": "Nom d'hôte virtuel (vhost)",
      "level": 3,
      "content": "Un vhost peut être utilisé pour changer votre nom d'hôte lorsque vous êtes connecté à un serveur IRC, ce qui est généralement le cas lorsque vous rejoignez/partagez ou faites un whois. Cela se fait le plus souvent sur un serveur qui a une adresse IP statique. Sans vhost, le nom d'hôte ressemblerait à ceci lorsqu'on fait un \"whois\" :\n\n```\nnick@123.456.78.90.isp.com\n```\n\nLe résultat d'un serveur virtuel réussi pourrait ressembler à ceci si vous avez le domaine exemple.com disponible :\n\n```\nnick@example.com\n```\n\nGardez à l'esprit que tous les serveurs IRC ne prennent pas en charge l'utilisation de vhost. Cela peut être défini individuellement entre les serveurs et non sur le réseau, donc si vous rencontrez des problèmes avec un serveur, essayez-en un autre sur le même réseau.\n\n"
    },
    {
      "title": "Préconfigurations requises",
      "level": 4,
      "content": "Irssi prend en charge l'utilisation d'un serveur virtuel pour autant que les configurations requises aient été définies. Cela inclut notamment que votre hôte prenne en charge reverse DNS lookup (rDNS) en utilisant pointer record (PTR). De plus, vous devez ajouter une ligne appropriée à votre fichier /etc/hosts.\n\nPour consulter si cela fonctionne, testez avec l'utilitaire de recherche DNS host(1) inclus dans bind comme suit (où ip est une adresse IPv4 normale) :\n\n```\n$ host ip\n```\n\nSi vous obtenez quelque chose du genre de ceci, vous savez que votre rDNS fonctionne.\n\n```\nip.in-addr.arpa domain name pointer example.com\n```\n\n"
    },
    {
      "title": "Activer le serveur virtuel",
      "level": 4,
      "content": "Il y a plusieurs façons de se connecter à un serveur avec un nom d'hôte donné. La première consiste à utiliser la commande 'server' avec l'argument -host comme suit :\n\n```\n/server -host exemple.com irc.libera.chat\n```\n\nUne autre méthode consiste à définir votre nom d'hôte (vhost) avec la commande 'set' qui enregistrera votre nom d'hôte dans ~/.irssi/config :\n\n```\n/set hostname exemple.com\n/save\n/server irc.libera.chat\n```\n\n"
    },
    {
      "title": "Voir aussi",
      "level": 2,
      "content": "- Site web officiel\n- Dépôt officiel des scripts Irssi\n- Configuration d'Irssi\n- Guide de l'utilisation efficace de l'Irssi et screen par Matt Sparks\n- Notifications IRC avec dzen2 par Jason Ryan\n- Irssi's /channel, /network, /server and /connect - Signification par Aaron Toponce\n- awesome Wiki Irssi tips (Wayback Machine)\n- unité systemd irssi GitHub gist\n\n"
    }
  ]
}
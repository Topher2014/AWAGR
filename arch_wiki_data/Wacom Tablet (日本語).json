{
  "title": "Wacom Tablet (日本語)",
  "url": "https://wiki.archlinux.org/title/Wacom_Tablet_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- タブレット PC\n\nWikipedia:Graphics tablet より:\n\nほとんどのグラフィックタブレットは、Arch Linux でそのまま動作します。ボタンのリマップやタブレットのアスペクト比の調整など、特定の追加機能には追加の設定が必要です。この記事では、Xorg でタブレットを設定する方法を説明します。Wayland での設定については、#Wayland と libinput を参照してください。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール 1.1 ユーティリティ 1.2 代替ドライバー 1.3 Weylus\n- 2 設定 2.1 全体的な概念 2.1.1 一時的な設定 2.1.2 永続的な設定 2.1.3 向きを変更する 2.1.4 ボタンの再マッピング 2.1.4.1 ボタン ID を見つけ出す 2.1.4.2 構文 2.1.4.3 サンプル 2.1.4.4 カスタムコマンドの実行 2.1.5 LED 2.1.6 TwinView セットアップ 2.1.6.1 TwinView の一時的なセットアップ 2.1.7 Xrandr の設定 2.2 筆圧曲線 2.3 縦横比を保持 2.4 kcm-wacomtablet を使う\n- 3 特定のアプリケーションの設定 3.1 Blender 3.2 GIMP 3.3 Inkscape 3.4 Krita 3.5 VirtualBox 3.6 ウェブブラウザのプラグイン\n- 4 Wayland と libinput 4.1 Sway 4.1.1 出力へのマップ 4.1.2 出力領域へのマップ\n- 5 トラブルシューティング 5.1 Device not recognized by the kernel 5.2 Tablet recognized but xsetwacom and similar tools do not display it 5.3 Manual setup 5.3.1 USB-devices 5.3.2 Static setup 5.3.3 Xorg configuration 5.4 Mouse moving erratically due to proximity sensor 5.5 Touch arbitration not working on graphic tablets 5.6 Reporting issues with non-Wacom tablets\n- 6 参照\n\n- 1.1 ユーティリティ\n- 1.2 代替ドライバー\n- 1.3 Weylus\n\n- 2.1 全体的な概念 2.1.1 一時的な設定 2.1.2 永続的な設定 2.1.3 向きを変更する 2.1.4 ボタンの再マッピング 2.1.4.1 ボタン ID を見つけ出す 2.1.4.2 構文 2.1.4.3 サンプル 2.1.4.4 カスタムコマンドの実行 2.1.5 LED 2.1.6 TwinView セットアップ 2.1.6.1 TwinView の一時的なセットアップ 2.1.7 Xrandr の設定\n- 2.2 筆圧曲線\n- 2.3 縦横比を保持\n- 2.4 kcm-wacomtablet を使う\n\n- 2.1.1 一時的な設定\n- 2.1.2 永続的な設定\n- 2.1.3 向きを変更する\n- 2.1.4 ボタンの再マッピング 2.1.4.1 ボタン ID を見つけ出す 2.1.4.2 構文 2.1.4.3 サンプル 2.1.4.4 カスタムコマンドの実行\n- 2.1.5 LED\n- 2.1.6 TwinView セットアップ 2.1.6.1 TwinView の一時的なセットアップ\n- 2.1.7 Xrandr の設定\n\n- 2.1.4.1 ボタン ID を見つけ出す\n- 2.1.4.2 構文\n- 2.1.4.3 サンプル\n- 2.1.4.4 カスタムコマンドの実行\n\n- 2.1.6.1 TwinView の一時的なセットアップ\n\n- 3.1 Blender\n- 3.2 GIMP\n- 3.3 Inkscape\n- 3.4 Krita\n- 3.5 VirtualBox\n- 3.6 ウェブブラウザのプラグイン\n\n- 4.1 Sway 4.1.1 出力へのマップ 4.1.2 出力領域へのマップ\n\n- 4.1.1 出力へのマップ\n- 4.1.2 出力領域へのマップ\n\n- 5.1 Device not recognized by the kernel\n- 5.2 Tablet recognized but xsetwacom and similar tools do not display it\n- 5.3 Manual setup 5.3.1 USB-devices 5.3.2 Static setup 5.3.3 Xorg configuration\n- 5.4 Mouse moving erratically due to proximity sensor\n- 5.5 Touch arbitration not working on graphic tablets\n- 5.6 Reporting issues with non-Wacom tablets\n\n- 5.3.1 USB-devices\n- 5.3.2 Static setup\n- 5.3.3 Xorg configuration\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "Arch Linux カーネル には、linux-wacom および DIGImend プロジェクトによるドライバーが含まれています。linux-wacom は Wacom デバイスをサポートし、DIGImend は他のメーカーのデバイスをサポートします。どちらのプロジェクトも、サポートされているデバイスのリストを公開しています: linux-wacom、[1] USB または Bluetooth 経由でタブレットを接続した後、root として dmesg を実行すると表示され、/proc/bus/input/devices にリストされます。USB デバイスの場合、usbutils の lsusb コマンドでもタブレットが表示されます。タブレットが表示されない場合、または特定の機能が動作しない場合は、#デバイスがカーネルに認識されない を参照してください。\n\nxf86-input-wacom を インストール します。Xorg ドライバです。Wacom デバイスを接続すると、同梱の /usr/share/X11/xorg.conf.d/70-wacom.conf ファイルが自動的に wacom(4) ドライバを読み込むので、追加の設定は必要ありません。デバイスが他のメーカーのものである場合、手動で configure を行う必要があります。Xorg を wacom ドライバで使うようにし、xsetwacom を使って設定できるようにします。ここで VID:PID は lsusb から見たあなたの USB ID です:\n\n```\n/etc/X11/xorg.conf.d/10-tablet.conf\n```\n\n```\nSection \"InputClass\"\n    Identifier \"Tablet\"\n    Driver \"wacom\"\n    MatchDevicePath \"/dev/input/event*\"\n    MatchUSBID \"VID:PID\"\nEndSection\n```\n\nX を再起動した後、xsetwacom list devices コマンドを実行すると、いくつかのデバイスが一覧表示されるはずです。そうでない場合は、#手動設定 を参照してください。\n\n"
    },
    {
      "title": "ユーティリティ",
      "level": 3,
      "content": "- kcm-wacomtablet は KDE 構成モジュール で、ボタンの再マッピングとタブレットのモニターへのマッピングを可能にします。また、タブレット固有のプロファイルとホットプラグもサポートしています。 wacom Xorg ドライバーが必要なため、Wayland では動作しません。\n- mapwacom は、#画面領域幅の縮小 方式でアスペクト比を保ったままタブレットをモニターにマッピングすることを自動化するスクリプトです。\n- wacom2monitor.sh は、#タブレットをモニタにマッピング メソッドを使用してすべての Wacom デバイスをマッピングし、利用可能な出力間のサイクルを可能にするスクリプトです。Xbindkeys や sxhkd を使って起動するように設計されています。\n\n- ptxconf-gitAUR はタブレットをモニタにマッピングするための GTK2 GUIです。タブレットの座標変換行列を xinput で変更することで動作するので、使用する Xorg ドライバに関係なく動作します (wacom または libinput のどちらか))\n\n"
    },
    {
      "title": "代替ドライバー",
      "level": 3,
      "content": "- Bamboo Spark や Bamboo Slate などのワコムのスマートパッドから図面をダウンロードすることができるアプリケーションです。\n- huiontabletAUR は Huion の公式でプロプライエタリな Linux ドライバです。\n- xp-pen-tabletAUR は、XP-Pen の公式プロプライエタリな Linux ドライバです。\n- opentabletdriverAUR は、いくつかの異なるタブレットモデル用のクロスプラットフォームユーザースペースドライバです。より詳しい情報は プロジェクトのウェブサイト で見ることができます。\n\n"
    },
    {
      "title": "Weylus",
      "level": 3,
      "content": "Weylus は、スマートフォンやタブレットをコンピュータ上でグラフィックタブレットとして使用できるようにするプロジェクトです。weylusAUR または weylus-binAUR として提供されています。\n\n"
    },
    {
      "title": "全体的な概念",
      "level": 3,
      "content": "設定方法は2つあり、一時的な設定には xf86-input-wacom に含まれている `xsetwacom` ツールを使い、永続的な設定には xorg.conf もしくは /etc/X11/xorg.conf.d 内のファイルを使います。 利用できるオプションは同じため、まずは `xsetwacom` を使ってテストし、それから最終的な設定を Xorg の設定ファイルに追加するのを推奨します。\n\n"
    },
    {
      "title": "一時的な設定",
      "level": 4,
      "content": "初めにデフォルトの設定と利用できるオプションを全て確認すると良いでしょう。以下のコマンドを使います。\n\n```\n$ xsetwacom --list devices                    # get/set コマンドで利用できるデバイスを一覧します\nWacom Bamboo 16FG 4x5 Finger touch\tid: 12\ttype: TOUCH\nWacom Bamboo 16FG 4x5 Finger pad\tid: 13\ttype: PAD       \nWacom Bamboo 16FG 4x5 Pen stylus\tid: 17\ttype: STYLUS    \nWacom Bamboo 16FG 4x5 Pen eraser\tid: 18\ttype: ERASER\n$ xsetwacom --get \"Wacom Bamboo 16FG 4x5\" all # デバイスの名前を使います\n$ xsetwacom --get 17 all                      # もしくはデバイス id を使います\n$ xsetwacom --list parameters                 # オプションの説明を表示します\n$ man wacom                                   # さらに詳しい説明を表示します\n```\n\nオプションは --set フラグを使って変更できます。例えば:\n\n```\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger touch\" ScrollDistance 50  # スクロールの速度を変更します\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger touch\" Gesture off        # マルチタッチジェスチャーを無効にします\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger touch\" Touch off          # タッチを無効にします\n```\n\n詳しい設定については下の #特定の設定のヒント を見て下さい。\n\n- タブレットを一旦切断してからもう一度接続することでいつでも一時的な設定をリセットできます。\n- xsetwacom によって動的にしか設定できないオプションも存在します。そのような場合、デバイスが接続されたときにスクリプトを実行することで xsetwacom を呼び出してデバイスを設定できます。詳しくは [2] を参照。\n\n"
    },
    {
      "title": "永続的な設定",
      "level": 4,
      "content": "Xorg 1.8 以上で永続的な設定をするときは /etc/X11/xorg.conf.d に新しいファイルを作成するのが推奨されています (例: 52-wacom-options.conf)。\n\n```\n/etc/X11/xorg.conf.d/52-wacom-options.conf\n```\n\n```\nSection \"InputClass\"\n    Identifier \"Wacom Bamboo stylus options\"\n    MatchDriver \"wacom\"\n    MatchProduct \"Pen\"\n    \n    # Apply custom Options to this device below.\n    Option \"Rotate\" \"none\"\n    Option \"RawSample\" \"20\"\n    Option \"PressCurve\" \"0,10,90,100\"\nEndSection\n\nSection \"InputClass\"\n    Identifier \"Wacom Bamboo eraser options\"\n    MatchDriver \"wacom\"\n    MatchProduct \"eraser\"\n    \n    # Apply custom Options to this device below.\n    Option \"Rotate\" \"none\"\n    Option \"RawSample\" \"20\"\n    Option \"PressCurve\" \"5,0,100,95\"\nEndSection\n\nSection \"InputClass\"\n    Identifier \"Wacom Bamboo touch options\"\n    MatchDriver \"wacom\"\n    MatchProduct \"Finger\"\n    \n    # Apply custom Options to this device below.\n    Option \"Rotate\" \"none\"\n    Option \"ScrollDistance\" \"18\"\n    Option \"TapTime\" \"220\"\nEndSection\n\nSection \"InputClass\"\n    Identifier \"Wacom Bamboo pad options\"\n    MatchDriver \"wacom\"\n    MatchProduct \"pad\"\n    \n    # Apply custom Options to this device below.\n    Option \"Rotate\" \"none\"\n    \n    # Setting up buttons\n    Option \"Button1\" \"1\"\n    Option \"Button2\" \"2\"\n    Option \"Button3\" \"3\"\n    Option \"Button4\" \"0\"\nEndSection\n```\n\nidentifier は自由に設定することができます。オプションの名前は xsetwacom --list parameters で表示されるものや man wacom で説明されているものと (ボタンを除いて) 同じです。#ボタンの再マッピング で説明しているとおり、ボタンの id は xsetwacom のものと異なるようです。\n\n"
    },
    {
      "title": "向きを変更する",
      "level": 4,
      "content": "タブレットを異なる向きで使いたいときはドライバーに向きの設定をする必要があります。そうしないと動きがおかしなことになってしまいます。 全てのデバイスに Rotate オプションを設定することで向きを変更できます。利用できる方向は none,cw,ccw, half です。 例えば:\n\n```\n$ for i in 12 13 17 18; do xsetwacom --set $i Rotate half; done   # remember the ids might change when hotplugging\n```\n\nもしくは ./wacomrot.sh half のように以下のスクリプトを使って下さい:\n\n```\nwacomrot.sh\n```\n\n```\n#!/bin/bash\ndevice=\"Wacom Bamboo 16FG 4x5\"\nstylus=\"$device Pen stylus\"\neraser=\"$device Pen eraser\"\ntouch=\"$device Finger touch\"\npad=\"$device Finger pad\"\n\nxsetwacom --set \"$stylus\" Rotate $1\nxsetwacom --set \"$eraser\" Rotate $1\nxsetwacom --set \"$touch\"  Rotate $1\nxsetwacom --set \"$pad\"    Rotate $1\n```\n\n"
    },
    {
      "title": "ボタンの再マッピング",
      "level": 4,
      "content": "ボタンとホットキーのマッピングを変更することが可能です。\n\n場合によって適切なボタン ID を見つけるために試行錯誤が必要です。例えばボタン ID が xsetwacom や xorg.conf の設定と異なることがあります。そういう場合 xev や xbindkeys -mk などのツールがとても役に立ちます。一時的にキーストロークをタブレットのボタンに割り当てるには:\n\n```\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 1 'key a'\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 2 'key b'\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 3 'key c'\n$ # and so on\n```\n\nターミナルウィンドウから xev を立ち上げ、ウィンドウ上にマウスカーソルを移動してボタンを押すと id が書き出されます:\n\n```\n$ xev | grep KeyPress -A 5\n```\n\nxsetwacom の構文は柔軟性がありますが、あまりドキュメントがまとまっていません。xsetwacom 0.17.0 の一般的なマッピングの構文は以下の通りです (ソースコードより)。\n\n```\nKEYWORD [ARGS...] [KEYWORD [ARGS...] ...]\n\nKEYWORD + ARGS:\n  key [+,-]KEY [[+,-]KEY ...]  where +:key down, -:key up, no prefix:down and up\n  button BUTTON [BUTTON ...]   (1=left,2=middle,3=right mouse button, 4/5 scroll mouse wheel)\n  modetoggle                   toggle absolute/relative tablet mode \n  displaytoggle                toggle cursor movement among all displays which include individual screens\n                               plus the whole desktop for the selected tool if it is not a pad.\n                               When the tool is a pad, the function applies to all tools that are asssociated\n                               with the tablet\n\nBUTTON: button ID as integer number\n\nKEY: MODIFIER, SPECIALKEY or ASCIIKEY\nMODIFIER: (each can be prefix with an l or an r for the left/right modifier (no prefix = left)\n   ctrl=ctl=control, meta, alt, shift, super, hyper\nSPECIALKEY: f1-f35, esc=Esc, up,down,left,right, backspace=Backspace, tab, PgUp,PgDn\nASCIIKEY: (usual characters the key produces, e.g. a,b,c,1,2,3 etc.)\n```\n\n```\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 1 3 # 右マウスボタン\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 1 \"key +ctrl z -ctrl\"\n$ xsetwacom --get \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 1\nkey +Control_L +z -z -Control_L\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 1 \"key +shift button 1 key -shift\"\n```\n\nマクロを使うこともできます:\n\n```\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 1 \"key +shift h -shift e l l o\"\n```\n\n```\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 1 \"key a b c\" # press button 1 -> abc\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 1 \"key d\"     # press button 1 -> dbc  WRONG!\n```\n\nマッピングを \"\" に設定してリセットすることで解決できます:\n\n```\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 1 \"\"          # to reset the mapping\n$ xsetwacom --set \"Wacom Bamboo 16FG 4x5 Finger pad\" Button 1 \"key d\"     # press button 1 -> d\n```\n\nボタンにカスタムコマンドをマップするのは少々厄介ですが実際はとてもシンプルです。xbindkeys が必要になるので次のコマンドでインストールしてください:\n\n```\n# pacman -S xbindkeys\n```\n\nボタンのコードを定義するには、以下を永続的な設定ファイルに追加してください (例: /etc/X11/xorg.conf.d/52-wacom-options.conf の pad デバイスの InputClass セクション)。タブレットのボタンを使用していないボタンの id にマップします:\n\n```\n# Setting up buttons (preferably choose the correct button order, so the topmost key is mapped to 10 and so on)\nOption \"Button1\" \"10\"\nOption \"Button2\" \"11\"\nOption \"Button3\" \"12\"\nOption \"Button4\" \"13\"\n```\n\nそして Xorg サーバーを再起動して xev や xbindkeys -mk でボタンを確認してください。\n\nそれから xbindkeys の設定を行います。デフォルトの設定ファイルが存在しない場合は作成すると良いでしょう:\n\n```\n$ xbindkeys --defaults > ~/.xbindkeysrc\n```\n\nそれからカスタムキーマップを ~/.xbindkeysrc に追加してください。例:\n\n```\n\"firefox\"\n    m:0x10 + b:10   (mouse)\n\"xterm\"\n    m:0x10 + b:11   (mouse)\n\"xdotool key ctrl-z\"\n    m:0x10 + b:12   (mouse)\n\"send-notify Test \"No need for escaping the quotes\"\"\n    m:0x10 + b:13   (mouse)\n```\n\n"
    },
    {
      "title": "LED",
      "level": 4,
      "content": "sysfs-driver-wacom ドキュメントを見て下さい。root 権限なしで変更できるようにするには以下のような udev ルールを作成します:\n\n```\n/etc/udev/rules.d/99-wacom.rules\n```\n\n```\n# Give the users group permissions to set Wacom device LEDs.\nACTION==\"add\", SUBSYSTEM==\"hid\", DRIVERS==\"wacom\", RUN+=\"/usr/bin/sh -c 'chown :users /sys/%p/wacom_led/*'\"\n```\n\nIntuos の OLED は AUR の i4oledAUR を使って設定できます。\n\n"
    },
    {
      "title": "TwinView セットアップ",
      "level": 4,
      "content": "2つのモニターでタブレットを使用するとアスペクト比が不自然に感じられることがあります。これを修正するには xorg.conf ファイルの全ての Wacom-InputDevice エントリに以下を追加してください:\n\n```\nOption \"TwinView\" \"horizontal\"\n```\n\n詳しくは こちら を参照。\n\nアスペクト比を維持しつつ、一時的に Wacom デバイスをシングルディスプレイにマッピングしたい場合、このスクリプト を使うことができます。ディスプレイ上に入力が引き伸ばされないように、必要に応じてデバイスにレターボックスを設定します。.xinitrc ファイルなどから自動的に実行させることも可能です。\n\n"
    },
    {
      "title": "Xrandr の設定",
      "level": 4,
      "content": "xrandr は2つのモニターを1つの大きな画面として設定するので、仮想スクリーン全体にタブレットをマップするとアスペクト比が変形してしまいます。解決方法は次のスレッドを見て下さい: archlinux forum。\n\nタブレットをディスプレイのどちらかにマッピングしたい場合、まずディスプレイの名前を確認してください:\n\n```\n$ xrandr\nScreen 0: minimum 320 x 200, current 3840 x 1080, maximum 16384 x 16384\nHDMI-0 disconnected (normal left inverted right x axis y axis)\nDVI-0 connected 1920x1080+0+0 (normal left inverted right x axis y axis) 477mm x 268mm\n  1920x1080      60.0*+\n  1680x1050      60.0  \n  ...\nVGA-0 connected 1920x1080+1920+0 (normal left inverted right x axis y axis) 477mm x 268mm\n  1920x1080      60.0*+\n  1680x1050      60.0  \n  ...\n```\n\nそしてタブレットの ID を確認してください:\n\n```\n$ xsetwacom --list devices\nWALTOP International Corp. Slim Tablet stylus   id: 12  type: STYLUS\n```\n\n例えばタブレット (ID: 12) を右側のディスプレイ (\"VGA-0\") にマッピングするには:\n\n```\n$ xsetwacom --set 12 MapToOutput \"VGA-0\"\n```\n\n上記のコマンドはすぐに適用されます。root は不要です。\n\nxsetwacom が \"Unable to find an output ...\" と返してくる場合、ディスプレイの識別子のかわりに WIDTHxHEIGHT+X+Y という形式で X11 のジオメトリを指定します。例:\n\n```\n$ xsetwacom --set 12 MapToOutput \"1920x1080+1920+0\"\n```\n\n上記のコマンドでタブレットが右のディスプレイにマップされるはずです。\n\nもしくは bash スクリプト を使用してタブレットを素早くマッピングしたりアスペクト比を修正することもできます。\n\n"
    },
    {
      "title": "筆圧曲線",
      "level": 3,
      "content": "Wacom Pressure Demo を使って望ましい曲線の P1=red (例: 50,0), P2=purple (例: 100,80), Threshold=green (例: 27) を見つけてください。X 軸はあなたがペンにかける入力圧で、Y 軸はアプリケーションが感知する出力圧です (サンプル曲線)。\n\n以下のコマンドを使うことで、即座に値をデバイスでテストすることができます (例: \"Wacom Intuos4 6x9 stylus\"):\n\n```\n$ xsetwacom --set \"Wacom Intuos4 6x9 stylus\" PressureCurve \"50\" \"0\" \"100\" \"80\"\n$ xsetwacom --set \"Wacom Intuos4 6x9 stylus\" Threshold \"27\"\n```\n\n満足のいく値が見つかったら以下のように /etc/X11/xorg.conf で適用するか、スタートアップスクリプトで上のシェルコマンドを実行するようにします:\n\n```\n/etc/X11/xorg.conf\n```\n\n```\nOption        \"PressCurve\"    \"50,0,100,80\"         # Custom preference\nOption        \"Threshold\"     \"27\"                  # sensitivity to do a \"click\"\n```\n\n"
    },
    {
      "title": "縦横比を保持",
      "level": 3,
      "content": "ワイドスクリーンディスプレイ (16:9) で Wacom のタブレットを使用する場合、入力が物理的な縦横比よりも横に長くなってしまうことが問題になります (例えばペンで円を描いてもコンピュータに表示されるのは楕円になります)。ペンタブの縦軸比がモニターと異なるためです。強制的に入力範囲をモニターのアスペクト比にあわせて入力面の下端を取り除くことで問題を解決できます。Windows ドライバーの設定にある \"Force Proportions\" オプションと同じです。タブレットからの入力をできるだけ正確になぞるために推奨される設定です。\n\nタブレットのデフォルト値を確認するには以下のコマンドを実行 ( \"device name or ID\" はスタイラスの名前に置き換えてください):\n\n```\n$ xsetwacom --get \"device name or ID\" Area\n```\n\n値を 11.25 で割ることでタブレットの解像度を弾き出すことができます (例: 21600/11.25=1920 と 13500/11.25=1200)。それからディスプレイの解像度である 1920x1080 (16:9) に変換して、1080*11.25=12150 を xsetwacom で新しく設定します:\n\n```\n$ xsetwacom --set \"device name or ID\" Area 0 0 21600 12150\n```\n\nxorg の設定ファイルでは以下のようにして同じ設定ができます:\n\n```\nOption \"BottomX\" \"21600\"\nOption \"BottomY\" \"12150\"\n```\n\n"
    },
    {
      "title": "kcm-wacomtablet を使う",
      "level": 3,
      "content": "KDE の設定モジュール kcm-wacomtablet (もしくは Plasma 5 を使っている場合、kcm-wacomtablet-frameworks-gitAUR[リンク切れ: パッケージが存在しません]) を使うことでグラフィカルなユーザーインターフェイスでタブレットの簡単な設定を行うことができます。プロファイルを変更したりホットプラグの適切なサポートができます。タブレットのタイプが自動で検出され、タブレットが接続されたときに自動で設定プロファイルがロードされます。\n\n"
    },
    {
      "title": "Blender",
      "level": 3,
      "content": "Blender でパッドのボタンやペンのボタンを有効にするには、xsetwacom のラッパーを作成して、Blender が起動している間だけ一時的にボタンをリマップします。\n\nSculpt モードに適合させた例 (Bamboo Fun の場合): blender_sculpt.sh\n\n- 左のタブレットボタンを Shift と Control (pan/tilt/zoom/smooth/invert) にマップ\n- 右のタブレットボタンを F (brush size/strenght) と Control-z (undo) にマップ\n- 上のペンのボタンを m (mask control) にマップ\n\n"
    },
    {
      "title": "GIMP",
      "level": 3,
      "content": "GIMP で適切な使用法や、筆圧感知を有効にするには 設定 → 入力デバイス → 追加された入力デバイスの設定... を見て下さい。eraser, stylus, cursor の各デバイスのモードをスクリーンに設定して保存してください。\n\n- GIMP は pad device をサポートしていないので、存在する場合、無効にするようにしてください。もしくは、機能を使いたい場合 Wacom ExpressKeys などのプログラムを使ってキーボードのコマンドにマッピングしてください。\n\n- stylus で選択されたツールは eraser のツールとは独立していることに注意してください。これはかなり便利に使うことができます。eraser を自由なツールに設定できるからです。\n\n詳しくは GIMP Talk - Community - Install Guide: Getting Wacom Drawing Tablets To Work In Gimp の Setting up GIMP セクションを参照してください。\n\n上記の設定で不満の場合、xinput create-master と xinput reattach コマンドを使ってタブレットの stylus (と eraser) を2番目のマウスポインタとして設定してみてください。スタイラスペンでタブレットに触っても GIMP で絵を描けない場合に役立ちます。\n\n"
    },
    {
      "title": "Inkscape",
      "level": 3,
      "content": "GIMP と同じように、ファイル → 入力デバイス... を見て下さい。eraser, stylus, cursor の各デバイスのモードをスクリーンに設定して保存してください。\n\n"
    },
    {
      "title": "Krita",
      "level": 3,
      "content": "Krita でタブレットを使って絵を描けない場合 (クリックや筆圧が反映されない)、ブラシ選択ダイアログの小さなスクラッチパッドは使えるときは、Krita をフルスクリーンまたはキャンバスオンリーモードにしてみてください。\n\nKrita ではタブレットを使うために Qt を正しく設定する必要があります。タブレットが Krita で動作しない場合、まず Qt でタブレットがちゃんと動作するか確認してください。タブレットの筆圧の効果は painttop 設定で調整することができます。例えば透明度や筆圧、カーブなどを設定できます。\n\n"
    },
    {
      "title": "VirtualBox",
      "level": 3,
      "content": "まず、Arch でタブレットが問題なく動作しているか確認してください。それから、Wacom のウェブサイト からゲスト OS の最新ドライバーをダウンロード・インストールしてください。仮想マシンをシャットダウンして、Settings > USB を開いて下さい。Add Filter From Device を選択してあなたの使っているタブレットを選びます (例: WACOM CTE-440-U V4.0-3 [0403])。Edit Filter を選択して、最後のアイテム Remote を Any に変更してください。\n\n"
    },
    {
      "title": "ウェブブラウザのプラグイン",
      "level": 3,
      "content": "公式の Wacom ウェブプラグインと同じような機能を提供するプラグインが AUR に wacomwebpluginAUR[リンク切れ: アーカイブ: aur-mirror] としてあります。Chromium と Firefox で動くことが確認されています。\n\nこのプラグインを使うことで deviantART の Muro といったオンラインツールを利用することが可能です。プラグインの開発はまだ初期段階なので、上手く動くか保証はできません。\n\n"
    },
    {
      "title": "Wayland と libinput",
      "level": 2,
      "content": "Wayland を使用している場合、グラフィックタブレットは libinput によって処理されます。このシナリオでは、xsetwacom による設定はできません。デスクトップ環境 または Wayland compositor で利用可能な設定を通じてのみ、タブレットを設定できます。\n\n- GNOME は、ボタンの設定とタブレットのモニターへのマッピングを完全にサポートしています。 [3]\n- KDE Plasma は、ボタンの構成とタブレットのモニターへのマッピングを完全にサポートしています。 [4] [5]\n- Sway は、タブレットのモニターまたは領域へのマッピングのみをサポートします。#Sway および sway-input(5) § MAPPING CONFIGURATION を参照してください。\n\n- libinput または Wayland を使用している場合、特定の 入力リマップユーティリティ を使用してタブレットボタンをリマップできます。\n- Wayland 環境にタブレットオプションがない場合は、OpenTabletDriver を使用することもできます。#代替ドライバー を参照してください。\n\n"
    },
    {
      "title": "出力へのマップ",
      "level": 4,
      "content": "これは、#タブレットをモニターにマッピングする と同じ効果があり、タブレットのアスペクト比が出力と正確に一致しないことを意味します。\n\n次の行を sway 構成ファイルに追加します。\n\n```\n~/.config/sway/config\n```\n\n```\ninput Identifier map_to_output Display-Name\n```\n\nここで、Identifier は、swaymsg -t get_inputs によって読み取られるタブレットの識別子です。\n\n```\n$ swaymsg -t get_inputs\n```\n\n```\nInput device: Wacom One by Wacom S Pen\n Type: Tablet tool\n Identifier: 1386:890:Wacom_One_by_Wacom_S_Pen\n Product ID: 890\n Vendor ID: 1386\n Libinput Send Events: enabled\n ...\n```\n\nDisplay-Name は、swaymsg -t get_outputs によって読み取られる出力の識別子です。\n\n```\n$ swaymsg -t get_outputs\n```\n\n```\nOutput HDMI-A-1 'Samsung Electric Company ...'\n Current mode: 1920x1080 @ 60.000 Hz\n Position: 0,0\n Scale factor: 1.000000\n Scale filter: nearest\n ...\n```\n\n"
    },
    {
      "title": "出力領域へのマップ",
      "level": 4,
      "content": "#画面領域の幅を狭くする と同じ効果があります。まず、タブレットのアクティブ領域を把握する必要があります。:\n\n```\n# libinput debug-tablet\n```\n\nタブレットのスタイラスを右下隅に移動して最大の ABS_X および ABS_Y 値を取得してから、sway 構成に次の行を追加します。\n\n```\n~/.config/sway/config\n```\n\n```\ninput Identifier map_to_region X Y width output_height\n```\n\nwidth は output_height * (ABS_X / ABS_Y) で計算され、X と Y は領域の開始座標です。\n\nたとえば、1920x1080 のモニターが 2 台並んでいて、タブレットを右端のモニターの領域にマップする場合は、次の行を使用します。\n\n```\n~/.config/sway/config\n```\n\n```\ninput Identifier map_to_region 1920 0 width 1080\n```\n\n"
    },
    {
      "title": "Device not recognized by the kernel",
      "level": 3,
      "content": "Some tablets may be too recent to be supported by your current kernel. On Wacom devices, this is represented by a \"Unknown device_type\" message in your dmesg output. In this scenario, it is possible that the out-of-tree version of the drivers have support for your tablet before it is upstreamed to the kernel.\n\nInstall input-wacom-dkms-gitAUR if you have a Wacom tablet, or digimend-kernel-drivers-dkms-gitAUR if you have a tablet from another manufacturer.\n\n"
    },
    {
      "title": "Tablet recognized but xsetwacom and similar tools do not display it",
      "level": 3,
      "content": "Your logs indicate that the correct driver is selected, and the tablet works. However, when running xsetwacom list devices or use similar tools that depend on the correct driver, you get an empty list.\n\nA reason might be the execution order of your xorg configuration. /usr/share/X11/xorg.conf.d gets executed first, then /etc/X11/xorg.conf.d. The package xf86-input-wacom contains the file /usr/share/X11/xorg.conf.d/70-wacom.conf. If there is a catchall for tablets, executed after this file, the previously selected wacom driver will be overwritten with a generic one that does not work with xsetwacom et. al.\n\nTo make sure, check the rules contained in the files executed after /usr/share/X11/xorg.conf.d/70-wacom.conf for anything that looks like graphics tablets.\n\n"
    },
    {
      "title": "Manual setup",
      "level": 3,
      "content": "A manual configuration is done in /etc/X11/xorg.conf or in a separate file in the /etc/X11/xorg.conf.d/ directory. The Wacom tablet device is accessed using an input event interface in /dev/input/ which is provided by the kernel driver. The interface number event?? is likely to change when unplugging and replugging into the same or especially a different USB port. Therefore it is wise to not refer to the device using its concrete event?? interface (static configuration) but by letting udev dynamically create a symbolic link to the correct event file (dynamic configuration).\n\n"
    },
    {
      "title": "USB-devices",
      "level": 4,
      "content": "After (re-)plugging in your USB-tablet (or at least after rebooting) some symbolic links should appear in /dev/input referring to your tablet device.\n\n```\n$ ls /dev/input/wacom*\n```\n\n```\n/dev/input/wacom  /dev/input/wacom-stylus  /dev/input/wacom-touch\n```\n\nIf not, your device is likely to be not yet included in the udev configuration from wacom-udev which resides in /usr/lib/udev/rules.d/wacom.rules. Copy the file to /etc/udev/rules.d/wacom.rules and modify it there.\n\nAdd your device to the file by duplicating some line of another device and adapting idVendor,idProduct and the symlink name to your device. The two id's can be determined using\n\n```\n$ lsusb | grep -i wacom\n```\n\n```\nBus 002 Device 007: ID 056a:0062 Wacom Co., Ltd\n```\n\nIn this example idVendor is 056a and idProduct 0062. In case you have device with touch (e.g. Bamboo Pen&Touch) you might need to add a second line for the touch input interface. For details check the linuxwacom wiki Fixed device files with udev.\n\nSave the file and reload udev's configuration profile using the command udevadm control --reload-rules Check again the content of /dev/input to make sure that the wacom symlinks appeared. Note that you may need to plug-in the tablet again for the device to appear.\n\nThe files of further interest for the Xorg configuration are /dev/input/wacom and for a touch-device also /dev/input/wacom_touch.\n\n"
    },
    {
      "title": "Static setup",
      "level": 4,
      "content": "Usually it is recommended to rely on Xorg's auto-detection or to use a dynamic setup. However for an internal tablet device one might consider a static Xorg setup in case autodetection does not work. A static Xorg setup is usually not able to recognize your Wacom tablet when it is connected to a different USB port or even after unplugging and replugging it into the same port, and as such it should be considered as deprecated.\n\nIf you insist in using a static setup just refer to your tablet in the Xorg configuration in the next section using the correct /dev/input/event?? files as one can find out by looking into /proc/bus/input/devices.\n\n"
    },
    {
      "title": "Xorg configuration",
      "level": 4,
      "content": "In either case, dynamic or static setup you got now one or two files in /dev/input/ which refer to the correct input event devices of your tablet. All that is left to do is add the relevant information to /etc/X11/xorg.conf, or a dedicated file under /etc/X11/xorg.conf.d/. The exact configuration depends on your tablet's features of course. xsetwacom list devices might give helpful information on what InputDevice sections are needed for your tablet.\n\nAn example configuration for a Volito2 might look like this\n\n```\nSection \"InputDevice\"\n    Driver        \"wacom\"\n    Identifier    \"stylus\"\n    Option        \"Device\"       \"/dev/input/wacom\"   # or the corresponding event?? for a static setup\n    Option        \"Type\"         \"stylus\"\n    Option        \"USB\"          \"on\"                 # USB ONLY\n    Option        \"Mode\"         \"Relative\"           # other option: \"Absolute\"\n    Option        \"Vendor\"       \"WACOM\"\n    Option        \"tilt\"         \"on\"  # add this if your tablet supports tilt\n    Option        \"Threshold\"    \"5\"   # the official linuxwacom howto advises this line\nEndSection\nSection \"InputDevice\"\n    Driver        \"wacom\"\n    Identifier    \"eraser\"\n    Option        \"Device\"       \"/dev/input/wacom\"   # or the corresponding event?? for a static setup\n    Option        \"Type\"         \"eraser\"\n    Option        \"USB\"          \"on\"                  # USB ONLY\n    Option        \"Mode\"         \"Relative\"            # other option: \"Absolute\"\n    Option        \"Vendor\"       \"WACOM\"\n    Option        \"tilt\"         \"on\"  # add this if your tablet supports tilt\n    Option        \"Threshold\"    \"5\"   # the official linuxwacom howto advises this line\nEndSection\nSection \"InputDevice\"\n    Driver        \"wacom\"\n    Identifier    \"cursor\"\n    Option        \"Device\"       \"/dev/input/wacom\"   # or the corresponding event?? for a static setup\n    Option        \"Type\"         \"cursor\"\n    Option        \"USB\"          \"on\"                  # USB ONLY\n    Option        \"Mode\"         \"Relative\"            # other option: \"Absolute\"\n    Option        \"Vendor\"       \"WACOM\"\nEndSection\n```\n\nMake sure that you also change the path (\"Device\") to your mouse, as it will be /dev/input/mouse_udev now.\n\n```\nSection \"InputDevice\"\n    Identifier  \"Mouse1\"\n    Driver      \"mouse\"\n    Option      \"CorePointer\"\n    Option      \"Device\"             \"/dev/input/mouse_udev\"\n    Option      \"SendCoreEvents\"     \"true\"\n    Option      \"Protocol\"           \"IMPS/2\"\n    Option      \"ZAxisMapping\"       \"4 5\"\n    Option      \"Buttons\"            \"5\"\nEndSection\n```\n\nAdd this to the ServerLayout section\n\n```\nInputDevice \"cursor\" \"SendCoreEvents\" \nInputDevice \"stylus\" \"SendCoreEvents\"\nInputDevice \"eraser\" \"SendCoreEvents\"\n```\n\nAnd finally make sure to update the identifier of your mouse in the ServerLayout section – as mine went from\n\n```\nInputDevice    \"Mouse0\" \"CorePointer\"\n```\n\nto\n\n```\nInputDevice    \"Mouse1\" \"CorePointer\"\n```\n\n"
    },
    {
      "title": "Mouse moving erratically due to proximity sensor",
      "level": 3,
      "content": "You can disable the mouse jumping due to a proximity sensor detecting a non-existing stylus. You can find your device with xinput --list, and after spotting the stylus, disable it with:\n\n```\n$ xinput disable device\n```\n\nThis only works if you are not currently using a stylus.\n\n"
    },
    {
      "title": "Touch arbitration not working on graphic tablets",
      "level": 3,
      "content": "If you are using libinput, graphic tablets that have a stylus and a touchscreen might not support touch arbitration out of the box because the devices are not grouped into the same libinput device group. You can fix this by writing udev rules. For example, if the touchscreen is recognized with 0001:000a and the Wacom tablet with 0002:000b, you can create /etc/udev/rules.d/80-touch-arbitration.rules as a rule that groups these devices into the group f865e87b:\n\n```\n/etc/udev/rules.d/80-touch-arbitration.rules\n```\n\n```\nSUBSYSTEMS==\"usb\", ATTRS{idVendor}==\"0001\", ATTRS{idProduct}==\"000a\", ENV{LIBINPUT_DEVICE_GROUP}=\"f865e87b\"\nSUBSYSTEMS==\"usb\", ATTRS{idVendor}==\"0002\", ATTRS{idProduct}==\"000b\", ENV{LIBINPUT_DEVICE_GROUP}=\"f865e87b\"\n```\n\n"
    },
    {
      "title": "Reporting issues with non-Wacom tablets",
      "level": 3,
      "content": "If you have a non-Wacom tablet that has missing features, you can report a tablet test to DIGImend drivers authors in order to include its functionalities into the driver. The DIGImend diagnostic tools are available on the AUR as uclogic-toolsAUR. You will also need the lsusb and usbhid-dump programs available in usbutils.\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Linux Wacom Project Wiki\n- GIMP Talk - Community - Install Guide: Getting Wacom Drawing Tablets To Work In Gimp\n- Ubuntu Help: Wacom\n- Ubuntu Forums - Install a LinuxWacom Kernel Driver for Tablet PC's\n\n"
    }
  ]
}
{
  "title": "OpenLDAP (日本語)",
  "url": "https://wiki.archlinux.org/title/OpenLDAP_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- LDAP 認証\n- LDAP ホスト\n\nOpenLDAP は LDAP プロトコルのオープンソースの実装です。LDAP サーバーは基本的に、データの書き込みではなくアクセスに最適化されたリレーショナルでないデータベースです。主として (メールクライアントなどの) アドレス帳や様々なサービス (ドメインコントローラをエミュレートするのに使われる Samba や、/etc/passwd を置き換える Linux システム認証など) の認証バックエンドとして使われ、ユーザーデータを保持します。\n\nこのページではその入り口として基本的な OpenLDAP をインストールしてサニティチェックを行います。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 設定 2.1 サーバー 2.2 クライアント 2.3 最初のエントリを作成 2.4 OpenLDAP をテストする 2.5 OpenLDAP over TLS 2.5.1 自己署名証明書の作成 2.5.2 SSL を使うように slapd を設定 2.5.3 SSL で slapd を起動\n- 3 次のステップ\n- 4 ヒントとテクニック 4.1 LDAP のバックアップ 4.1.1 設定のエクスポート 4.1.2 データベースのエクスポート\n- 5 トラブルシューティング 5.1 slapd 設定のチェック 5.2 クライアント認証のチェック 5.3 LDAP サーバーが突然停止する 5.4 LDAP サーバーを起動できない\n- 6 参照\n\n- 2.1 サーバー\n- 2.2 クライアント\n- 2.3 最初のエントリを作成\n- 2.4 OpenLDAP をテストする\n- 2.5 OpenLDAP over TLS 2.5.1 自己署名証明書の作成 2.5.2 SSL を使うように slapd を設定 2.5.3 SSL で slapd を起動\n\n- 2.5.1 自己署名証明書の作成\n- 2.5.2 SSL を使うように slapd を設定\n- 2.5.3 SSL で slapd を起動\n\n- 4.1 LDAP のバックアップ 4.1.1 設定のエクスポート 4.1.2 データベースのエクスポート\n\n- 4.1.1 設定のエクスポート\n- 4.1.2 データベースのエクスポート\n\n- 5.1 slapd 設定のチェック\n- 5.2 クライアント認証のチェック\n- 5.3 LDAP サーバーが突然停止する\n- 5.4 LDAP サーバーを起動できない\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "OpenLDAP には LDAP サーバーとクライアントの両方が含まれています。公式リポジトリの openldap パッケージでインストールしてください。\n\n"
    },
    {
      "title": "サーバー",
      "level": 3,
      "content": "サーバーの設定ファイルは /etc/openldap/slapd.conf です。\n\nsuffix と rootdn を編集してください。suffix は基本的にドメイン名を使いますが、そうである必要はありません。ディレクトリは使い様です。ここではドメイン名には example を、tld には com を使うこととします。rootdn は LDAP の管理者の名前です (ここでは root を使います)。\n\n```\nsuffix     \"dc=example,dc=com\"\nrootdn     \"cn=root,dc=example,dc=com\"\n```\n\nそしてデフォルトの root パスワードを削除して強固なパスワードを作成します:\n\n```\n# sed -i \"/rootpw/ d\" /etc/openldap/slapd.conf #find the line with rootpw and delete it\n# echo \"rootpw    $(slappasswd)\" >> /etc/openldap/slapd.conf  #add a line which includes the hashed password output from slappasswd\n```\n\nよく使われる schema を slapd.conf の一番上に追加すると良いでしょう:\n\n```\n# cp /usr/share/doc/samba/examples/LDAP/samba.schema /etc/openldap/schema\n```\n\n```\ninclude         /etc/openldap/schema/cosine.schema\ninclude         /etc/openldap/schema/inetorgperson.schema\ninclude         /etc/openldap/schema/nis.schema\n#include        /etc/openldap/schema/samba.schema\n```\n\nよく使われる index を slapd.conf の一番下に追加すると良いでしょう:\n\n```\nindex   uid             pres,eq\nindex   mail            pres,sub,eq\nindex   cn              pres,sub,eq\nindex   sn              pres,sub,eq\nindex   dc              eq\n```\n\nLDAP サーバーを使って認証したい場合、LDAP 認証#LDAP サーバーのセットアップに書かれているようにアクセス制御の設定をしてください。\n\nデータベースディレクトリを準備します。デフォルトの設定ファイルの名前を変更してください:\n\n```\n# cp /var/lib/openldap/openldap-data/DB_CONFIG.example /var/lib/openldap/openldap-data/DB_CONFIG\n```\n\nslapd.conf の変更を新しい /etc/openldap/slapd.d/ の設定に保存するには、まず古い設定ファイルを削除する必要があります。設定を変更するたびに実行してください:\n\n```\n# rm -rf /etc/openldap/slapd.d/*\n```\n\n(データベースがまだない場合は、systemd を使って slapd.service を起動・停止することでデータベースを作成してください。)\n\n次のコマンドで新しい設定を生成します:\n\n```\n# slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/\n```\n\n上のコマンドは slapd.conf を変更する度に実行する必要があります。全てが問題ないか確認してください。\"bdb_monitor_db_open: monitoring disabled; configure monitor database to enable\" というメッセージは無視してください。\n\n/etc/openldap/slapd.d の新しいファイルとディレクトリの所有権を再帰的に変更:\n\n```\n# chown -R ldap:ldap /etc/openldap/slapd.d\n```\n\n- Berkeley DB (BDB) は使用するべきではありません。通常の slapd データベースのバックエンドとしては slapd(8) の mdb バックエンドが推奨されます。OpenLDAP の Lightning Memory-Mapped Database (LMDB) ライブラリを使用してデータを保存し、Berkeley DB バックエンドを置き換えます。OpenLDAP の公式パッケージはデフォルトで mdb を使用します。\n- ディレクトリを作成した後はインデックスを作成してください。インデックスは作成する前に slapd を停止する必要があります。\n\n```\n# slapindex\n# chown ldap:ldap /var/lib/openldap/openldap-data/*\n```\n\nもしくは $ sudo -u ldap slapindex を実行。\n\n最後に、systemd を使って slapd.service で slapd デーモンを起動してください。\n\n"
    },
    {
      "title": "クライアント",
      "level": 3,
      "content": "クライアントの設定ファイルは /etc/openldap/ldap.conf です。\n\n設定はとてもシンプルです: BASE をサーバーの suffix に、URI をサーバーのアドレスに変更するだけです、例:\n\n```\n/etc/openldap/ldap.conf\n```\n\n```\nBASE            dc=example,dc=com\nURI             ldap://localhost\n```\n\nSSL を使う場合は:\n\n- URI エントリのプロトコル (ldap または ldaps) は slapd の設定と一致しなくてはなりません。\n- 自己署名証明書を使う場合は、ldap.conf に TLS_REQCERT allow という行を追加してください。\n- 認証局により署名された証明書を使う場合、ldap.conf に TLS_CACERTDIR /usr/share/ca-certificates/trust-source という行を追加してください。\n\n"
    },
    {
      "title": "最初のエントリを作成",
      "level": 3,
      "content": "クライアントを設定したら、root の役割をするエントリである root エントリを作成することを推奨します:\n\n```\n$ ldapadd -x -D 'cn=root,dc=example,dc=com' -W\ndn: dc=example,dc=com\nobjectClass: dcObject\nobjectClass: organization\ndc: example\no: Example\ndescription: Example directory\n\ndn: cn=root,dc=example,dc=com\nobjectClass: organizationalRole\ncn: root\ndescription: Directory Manager\n^D\n```\n\n最初の行の後のテキストは標準入力で入力していますが、-f オプションやファイルリダイレクトを使うことでファイルから読み込むこともできます。\n\n"
    },
    {
      "title": "OpenLDAP をテストする",
      "level": 3,
      "content": "下のコマンドを実行するだけで、簡単にテストできます:\n\n```\n$ ldapsearch -x '(objectclass=*)'\n```\n\nもしくは、上記の設定例を使って、rootdn で認証するには (-x を -D <user> -W で置き換える):\n\n```\n$ ldapsearch -D \"cn=root,dc=example,dc=com\" -W '(objectclass=*)'\n```\n\nデータベースに関する情報が表示されるはずです。\n\n"
    },
    {
      "title": "OpenLDAP over TLS",
      "level": 3,
      "content": "ネットワークを介して OpenLDAP サーバーにアクセスする場合、特にサーバー上に極秘のデータを保存するときは、クリアテキストで送られたデータを盗聴される恐れがあります。次のパートでは LDAP サーバーとクライアントの間に SSL 接続をセットアップしてデータを暗号化して送信する方法を説明します。\n\nTLS を使うには、証明書が必要になります。テスト目的なら、自己署名証明書で足りるでしょう。証明書について詳しく知るには、OpenSSL を見て下さい。\n\n"
    },
    {
      "title": "自己署名証明書の作成",
      "level": 4,
      "content": "自己署名証明書を作成するには、次を入力:\n\n```\n$ openssl req -new -x509 -nodes -out slapdcert.pem -keyout slapdkey.pem -days 365\n```\n\nLDAP サーバーに関する情報の入力が求められます。ほとんどの情報は空のままでも大丈夫です。一番重要な情報はコモンネームです。コモンネームは LDAP サーバーの DNS 名に設定してください。LDAP サーバーの IP アドレスが example.org で解決できてもサーバーの証明書の CN が bad.example.org の場合、LDAP クライアントは証明書を拒否してしまうため TLS 接続をネゴシエートできなくなります (全く予期できない結果になります)。\n\nそれから、作成された証明書ファイルを /etc/openldap/ssl/ (ディレクトリが存在しない場合は作成してください) にコピーしてパーミッションを設定します。slapdcert.pem は公開鍵なので誰からでも読み込めるようにしてください。逆に slapdkey.pem は ldap ユーザーだけが読み込めるようにしてください:\n\n```\n# mv slapdcert.pem slapdkey.pem /etc/openldap/ssl/\n# chmod -R 755 /etc/openldap/ssl/\n# chmod 400 /etc/openldap/ssl/slapdkey.pem\n# chmod 444 /etc/openldap/ssl/slapdcert.pem\n# chown ldap /etc/openldap/ssl/slapdkey.pem\n```\n\n"
    },
    {
      "title": "SSL を使うように slapd を設定",
      "level": 4,
      "content": "デーモンの設定ファイル (/etc/openldap/slapd.conf) を編集して以下の行を追加することで LDAP に証明書ファイルの場所を指定してください:\n\n```\n# Certificate/SSL Section\nTLSCipherSuite DEFAULT\nTLSCertificateFile /etc/openldap/ssl/slapdcert.pem\nTLSCertificateKeyFile /etc/openldap/ssl/slapdkey.pem\n```\n\nLet’s Encrypt のような認証局により署名された SSL 証明書を用いる場合、ルート証明書データベースと中間証明書のパスを指定する必要があります。また、ユーザー ldap が読み込めるように .pem ファイルと途中のディレクトリの所有者情報を変更する必要もあるでしょう:\n\n```\n# Certificate/SSL Section\nTLSCipherSuite DEFAULT\nTLSCertificateFile /etc/letsencrypt/live/ldap.my-domain.com/cert.pem\nTLSCertificateKeyFile /etc/letsencrypt/live/ldap.my-domain.com/privkey.pem\nTLSCACertificateFile /etc/letsencrypt/live/ldap.my-domain.com/chain.pem\nTLSCACertificatePath /usr/share/ca-certificates/trust-source\n```\n\nTLSCipherSuite は slapd が TLS 接続をネゴシエートするときに使用する OpenSSL の暗号方式のリストを指定します。優先度が高い順です。特定の暗号を指定するかわりに、OpenSSL によってサポートされているワイルドカードを使うことができます。\n\n- DEFAULT はワイルドカードです。サポートされている暗号方式やワイルドカード、オプションについては ciphers(1ssl) の説明を読んでください。\n- ローカルの OpenSSL によってサポートされている暗号を確認するには、次を実行: openssl ciphers -v ALL:COMPLEMENTOFALL。OpenSSL コマンドを使えば実際に TLSCipherSuite によって有効になる暗号は何なのかテストできます: openssl ciphers -v 'DEFAULT'。\n\n設定ディレクトリを再生成:\n\n```\n# rm -rf /etc/openldap/slapd.d/*                                  # erase old config settings\n# slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/  # generate new config directory from config file\n# chown -R ldap:ldap /etc/openldap/slapd.d                        # Change ownership recursively to ldap on the config directory\n```\n\n"
    },
    {
      "title": "SSL で slapd を起動",
      "level": 4,
      "content": "slapd.service を編集して slapd が使用するプロトコルを変更してください。\n\n上書きユニットを作成:\n\n```\nsystemctl edit slapd.service\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/bin/slapd -u ldap -g ldap -h \"ldaps:///\"\n```\n\nローカルホスト接続は SSL を使う必要がありません。ローカルのサーバーにアクセスしたいときは ExecStart 行を以下のように変更してください:\n\n```\nExecStart=/usr/bin/slapd -u ldap -g ldap -h \"ldap://127.0.0.1 ldaps:///\"\n```\n\nそして slapd.service を再起動してください。サービスを有効にしていた場合は、再有効化もしてください。\n\n"
    },
    {
      "title": "次のステップ",
      "level": 2,
      "content": "これで基本的な LDAP のインストールは完了です。次はディレクトリを自分で設計してください。LDAP を何のために使うのかによって大きく変わってきます。LDAP を初めて使う場合は、まずはディレクトリを使用するクライアントサービス (PAM や Postfix など) によって推奨されている設定から始めると良いでしょう。\n\nシステム認証の方法は LDAP 認証の記事に書かれています。\n\nLDAP のフロントエンドとして phpLDAPadmin も存在します。\n\n"
    },
    {
      "title": "LDAP のバックアップ",
      "level": 3,
      "content": "LDAP データベースと設定をバックアップすることで後で何かあったときに復元することができます。\n\n"
    },
    {
      "title": "設定のエクスポート",
      "level": 4,
      "content": "```\n$ slapcat -F /etc/openldap/slapd.d -n 0 -l \"$(hostname)-ldap-mdb-config-$(date '+%F').ldif\"\n```\n\n"
    },
    {
      "title": "データベースのエクスポート",
      "level": 4,
      "content": "```\n$ slapcat -l \"$(hostname)-ldap-database-$(date '+%F').ldif\"\n```\n\n"
    },
    {
      "title": "slapd 設定のチェック",
      "level": 3,
      "content": "以下のコマンドで設定をチェックできます:\n\n```\n$ slaptest -f /etc/openldap/slapd.conf -v\n```\n\n"
    },
    {
      "title": "クライアント認証のチェック",
      "level": 3,
      "content": "セキュアでない認証でサーバーに接続できない場合:\n\n```\n$ ldapsearch -x -H ldap://ldaservername:389 -D cn=Manager,dc=example,dc=exampledomain\n```\n\nTLS によって暗号化された認証で接続をする場合:\n\n```\n$ ldapsearch -x -H ldaps://ldaservername:636 -D cn=Manager,dc=example,dc=exampledomain\n```\n\n"
    },
    {
      "title": "LDAP サーバーが突然停止する",
      "level": 3,
      "content": "slapd を起動しても停止してしまう場合、以下を実行して \"ldap\" ユーザーからデータディレクトリに書き込むことができるようにしてみてください:\n\n```\n# chown -R ldap:ldap /var/lib/openldap\n```\n\n"
    },
    {
      "title": "LDAP サーバーを起動できない",
      "level": 3,
      "content": "コマンドラインからデバッグ出力を有効にしてLDAPサーバーを起動してみてください:\n\n```\n# slapd -u ldap -g ldap -h ldaps://ldaservername:636 -d Config,Stats\n```\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Official OpenLDAP Software 2.4 Administrator's Guide\n- phpLDAPadmin phpMyAdmin 風のウェブインターフェイスツール\n- apachedirectorystudioAUR Eclipse ベースの LDAP ビューア (AUR)。OpenLDAP でも問題なく動作します\n\n"
    }
  ]
}
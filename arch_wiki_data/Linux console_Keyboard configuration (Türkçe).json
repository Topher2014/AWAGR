{
  "title": "Linux console/Keyboard configuration (Türkçe)",
  "url": "https://wiki.archlinux.org/title/Linux_console/Keyboard_configuration_(T%C3%BCrk%C3%A7e)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "İlgili makaleler\n\n- Xorg/Keyboard configuration\n- Keyboard input\n- Linux konsolu#Yazı tipleri\n\nKlavye eşlemeleri (tuş eşlemi), konsol yazı tipleri ve Linux konsolu için konsol eşlemeleri, metin konsolunu yönetmek için birçok düşük seviyeli araç da sağlayan systemd'nin bir bağımlılığı olan kbd paketi tarafından sağlanır. Buna ek olarak, systemd hem konsol hem de Xorg için sistem yerelleştirmesini ve klavye düzeni ayarlarını kontrol edebilen localectl aracını sağlar.\n\n"
    },
    {
      "title": "Klavye ayarlarını görüntüleme",
      "level": 2,
      "content": "Geçerli klavye ayarlarını görüntülemek için localectl status komutunu kullanabilirsiniz.\n\n"
    },
    {
      "title": "Tuş eşlemleri",
      "level": 2,
      "content": "Tuş eşlem dosyaları /usr/share/kbd/keymaps/ dizininde saklanır. Genellikle bir tuş eşlem dosyası bir klavye düzenine karşılık gelir (ortak parçaları paylaşmak için include kullanılabilir ve bir tuş eşlem dosyası geçiş için kullanılan bazı tuş kombinasyonlarıyla birden fazla düzen içerebilir). Daha fazla ayrıntı için keymaps(5) bölümüne bakınız.\n\n"
    },
    {
      "title": "Tuş eşlemlerini listeleme",
      "level": 3,
      "content": "Konsol tuş eşlemlerinin adlandırma kuralları biraz keyfidir, ancak genellikle şunlara dayanır:\n\n- Dil kodları: dil kodunun ülke koduyla aynı olduğu durumlarda (örneğin Almanca için de veya Fransızca için fr).\n- Ülke kodları: farklı ülkelerde aynı dilin varyasyonlarının kullanıldığı yerler (örneğin, Birleşik Krallık İngilizcesi için uk veya Amerika Birleşik Devletleri İngilizcesi için us); ülke kodlarının bir listesi #Resmi olarak atanmış kod unsurları burada da bulunabilir.\n- Klavye düzenleri: düzeninin belirli bir ülke veya dille ilgili olmadığı durumlarda (örneğin Dvorak klavye düzeni için dvorak).\n\nMevcut tüm tuş eşlemlerinin bir listesi için şu komutu kullanın:\n\n```\n$ localectl list-keymaps\n```\n\nBir tuş eşlemini aramak için, arama yerine dilinizin, ülkenizin veya düzeninizin kodunu yazarak aşağıdaki komutu kullanın:\n\n```\n$ localectl list-keymaps | grep -i arama\n```\n\nAlternatif olarak, find kullanarak:\n\n```\n$ find /usr/share/kbd/keymaps/ -type f -name \"*search_term*\"\n```\n\n"
    },
    {
      "title": "Loadkeys komutu",
      "level": 3,
      "content": "Sadece mevcut oturum için bir tuş eşlemi ayarlamak mümkündür. Bu, farklı tuş eşlemelerini test etmek, sorunları çözmek vb. için kullanışlıdır. Bu amaçla loadkeys aracı kullanılır:\n\n```\n# loadkeys tuş eşlemi\n```\n\nDetaylar için loadkeys(1) bölümüne bakabilirsiniz. Aynı araç /etc/vconsole.conf içinde ayarlanan tuş eşlemini yüklerken systemd-vconsole-setup(8) tarafından olarak kullanılır.\n\n"
    },
    {
      "title": "Kalıcı yapılandırma",
      "level": 3,
      "content": "Başlangıçta systemd tarafından okunan /etc/vconsole.conf dosyasında kalıcı bir tuş eşlemi ayarlanabilir. Tuş eşlemini belirtmek için KEYMAP değişkeni kullanılır. Değişken boşsa veya ayarlanmamışsa, us tuş eşlemi varsayılan değer olarak kullanılır. Tüm seçenekler için vconsole.conf(5) bölümüne bakabilirsiniz. Örneğin:\n\n```\n/etc/vconsole.conf\n```\n\n```\nKEYMAP=uk\n```\n\nKolaylık için, konsol tuş eşlemini ayarlamak için localectl kullanılabilir. Bu, /etc/vconsole.conf içindeki KEYMAP değişkenini değiştirecek ve aynı zamanda mevcut oturum için tuş eşlemini ayarlayacaktır:\n\n```\n# localectl set-keymap --no-convert tuş eşlemi\n```\n\n--no-convert seçeneği localectl'in Xorg tuşeşlemini otomatik olarak en yakın eşleşmeye değiştirmesini önlemek için kullanılır. Daha fazla bilgi için localectl(1) bölümüne bakabilirsiniz.\n\nEğer gerekirse, /etc/vconsole.conf yapılandırma dosyasındaki tuş eşlemi, mkinitcpio sayesinde tuş eşlemi erken kullanıcı alanı sırasında yüklenebilir.\n\n- Özel tuş eşleminizi /usr/share/kbd/keymaps/ dışında bir yere kaydettiyseniz, vconsole.conf yapılandırma dosyasına özel tuş eşleminizin tam yolunu veya yukarıdaki localectl komutunu kullanırken belirtmelisiniz.\n- /etc/vconsole.conf içindeki XKB* değişkenleri Xorg'un klavye yapılandırması içindir. Fakat ne loadkeys ne de Xorg bu değişkenleri kullanmayı desteklemiyor. Bakınız: [1]\n\n"
    },
    {
      "title": "Özel bir tuş eşlemi oluşturma",
      "level": 3,
      "content": "Konsolu kullanırken, belirli bir karakteri yazdırmak için kısayol tuşlarını kullanabilirsiniz. Ayrıca bir dizi karakteri ve bazı çıkış dizilerini de yazdırabiliriz. Böylece, bir komutu oluşturan karakter dizisini ve ardından yeni bir satır için bir çıkış karakterini yazdırırsak, bu komut çalıştırılacaktır.\n\nBunu yapmanın bir yolu tuş eşlem dosyasını düzenlemektir. Ancak, ait olduğu paket her güncellendiğinde yeniden yazılacağından, bu dosyayı düzenlemeniz önerilmez. Mevcut tuş eşlemini kişisel bir tuş eşlemi ile birleştirmek daha iyidir. Bunu loadkeys komutu ile yapabilirsiniz.\n\nİlk olarak, bir tuş eşlem dosyası oluşturun.Bu tuş eşlem dosyası herhangi bir yerde olabilir, ancak bir yol /usr/local dizinini taklit etmektir:/usr/local/share/kbd/keymaps dizinini oluşturun, ardından /usr/local/share/kbd/keymaps/personal.map dosyasını düzenleyin.\n\nBir not olarak, bir kişisel tuş eşleminin, varsayılan tuş eşlemi tarafından zaten işlenen tuşların davranışını yeniden tanımlamak için de yararlı olduğunu belirtmek gerekir. loadkeys ile yüklendiğinde, varsayılan tuş eşlemindeki yönergeler yeni yönergelerle çakıştığında değiştirilecek ve aksi takdirde korunacaktır. Bu şekilde, kişisel tuş eşleminde yalnızca tuş eşlemindeki değişiklikler belirtilmelidir.\n\n- Ayrıca /usr/share/kbd/keymaps/ dizininde bulunan bir tuş eşlemini de düzenleyebilirsiniz. Tuş eşlemleri .map.gz ile biter. Örneğin us.map.gz Amerikan tuş eşlemidir. Tuş eşlemini /usr/local/share/kbd/keymaps/personal.map.gz dizinine kopyalayın ve gunzip komutunu çalıştırın.\n- Özel tuş eşlemi /etc/vconsole.conf içinde ayarlanarak kalıcı hale getirilebilir. mkinitcpio.conf yapılandırma dosyasının HOOKS kısmında eğer keymap yerine sd-vconsole kullanıyorsanız, özel tuş eşlem dosyanızı /usr/share/kbd/keymaps/ içine yerleştirebilirsiniz. Bu şekilde /usr/share/kbd/keymaps'deki bağımlılıklar mkinitcpio tarafından otomatik olarak ramdisk imajına eklenecektir. Öte yandan, özel tuş eşlem dosyanızı /usr/local/ altına yerleştirirseniz, bağımlılıklarını mkinitcpio.conf yapılandırma dosyasının içindeki FILES kısmında belirtmeniz gerekecektir.\n\n"
    },
    {
      "title": "Adding directives",
      "level": 4,
      "content": "Two kinds of directives are required in this personal keymap. First of all, the keycode directives, which matches the format seen in the default keymaps. These directives associate a keycode with a keysym. Keysyms represent keyboard actions. The actions available include outputting character codes or character sequences, switching consoles or keymaps, booting the machine, and many other actions. The full currently active keymap can be obtained with\n\n```\n# dumpkeys -l\n```\n\nMost keysyms are intuitive. For example, to set key 112 to output an 'e', the directive will be:\n\n```\nkeycode 112  = e\n```\n\nTo set key 112 to output a euro symbol, the directive will be:\n\n```\nkeycode 112 = euro\n```\n\nSome keysym are not immediately connected to a keyboard actions. In particular, the keysyms prefixed by a capital F and one to three digits (F1-F246) constituting a number greater than 30 are always free. This is useful directing a hotkey to output a sequence of characters and other actions:\n\n```\nkeycode 112 = F70\n```\n\nThen, F70 can be bound to output a specific string:\n\n```\nstring F70 = \"Hello\"\n```\n\nWhen key 112 is pressed, it will output the contents of F70. In order to execute a printed command in a terminal, a newline escape character must be appended to the end of the command string. For example, to enter a system into hibernation, the following keymap is added:\n\n```\nstring F70 = \"sudo systemctl hibernate\\n\"\n```\n\n"
    },
    {
      "title": "Other examples",
      "level": 4,
      "content": "- To make the Right Alt key same as Left Alt key (for Emacs), use the following line in your keymap. It will include the file /usr/share/kbd/keymaps/i386/include/linux-with-two-alt-keys.inc, check it for details.\n\n```\ninclude \"linux-with-two-alt-keys\"\n```\n\n- To swap CapsLock with Escape (for Vim), remap the respective keycodes:\n\n```\nkeycode 1 = Caps_Lock\nkeycode 58 = Escape\n```\n\n- To make CapsLock another Control key, remap the respective keycode:\n\n```\nkeycode 58 = Control\n```\n\n- To swap CapsLock with Left Control key, remap the respective keycodes:\n\n```\nkeycode 29 = Caps_Lock\nkeycode 58 = Control\n```\n\n"
    },
    {
      "title": "Saving changes",
      "level": 4,
      "content": "In order to make use of the personal keymap, it must be loaded with loadkeys:\n\n```\n# loadkeys /usr/local/share/kbd/keymaps/personal.map\n```\n\nHowever this keymap is only active for the current session. In order to load the keymap at boot, specify the full path to the file in the KEYMAP variable in /etc/vconsole.conf. The file does not have to be gzipped as the official keymaps provided by kbd.\n\n"
    },
    {
      "title": "Adjusting typematic delay and rate",
      "level": 2,
      "content": "The typematic delay indicates the amount of time (typically in milliseconds) a key needs to be pressed and held in order for the repeating process to begin. After the repeating process has been triggered, the character will be repeated with a certain frequency (usually given in Hz) specified by the typematic rate. These values can be changed using the kbdrate command. Note that these settings are configured separately for the console and for Xorg.\n\n```\n# kbdrate [-d delay] [-r rate]\n```\n\nFor example to set a typematic delay to 200ms and a typematic rate to 30Hz, use the following command:\n\n```\n# kbdrate -d 200 -r 30\n```\n\nIssuing the command without specifying the delay and rate will reset the typematic values to their respective defaults; a delay of 250ms and a rate of 11Hz:\n\n```\n# kbdrate\n```\n\n"
    },
    {
      "title": "Systemd service",
      "level": 3,
      "content": "A systemd service can be used to set the keyboard rate. For example:\n\n```\n/etc/systemd/system/kbdrate.service\n```\n\n```\n[Unit]\nDescription=Keyboard repeat rate in tty.\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nStandardInput=tty\nStandardOutput=tty\nExecStart=/usr/bin/kbdrate --silent --delay 250 --rate 30\n\n[Install]\nWantedBy=multi-user.target\n```\n\nThen start/enable the kbdrate.service systemd service.\n\n"
    },
    {
      "title": "Layout switching",
      "level": 2,
      "content": "Note: **some main layouts will not allow this at all** \n\nLayout switching can only be simulated by establishing a different layout on one of the higher layers (typically the 3rd, AltGr).\n\nFor a list of layouts that likely support this, run\n\n```\n$ find /usr/share/kbd/keymaps -exec zgrep -l 'AltGr_Lock' '{}' ';'\n```\n\nYou can test this by passing main and augmenting layout to loadkeys, e.g.\n\n```\n# loadkeys us mk\n```\n\nIf it worked, the 3rd level shift (AltGr) will allow you to access the second layout, the AltGr_Lock (often Alt+Shift, you will have to inspect the keymap file with zless) will provide an effective toggle.\n\nFor a permanent configuration, set the KEYMAP_TOGGLE next to the KEYMAP in /etc/vconsole.conf.\n\n"
    }
  ]
}
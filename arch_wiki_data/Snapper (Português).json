{
  "title": "Snapper (Português)",
  "url": "https://wiki.archlinux.org/title/Snapper_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Btrfs\n- mkinitcpio\n\nSnapper é uma ferramenta criada por Arvin Schnell, do openSUSE, que ajuda no gerenciamento de snapshots de subvolumes do Btrfs e volumes LVM com provisionamento thin. Ele pode criar e comparar snapshots, reverter entre snapshots e oferecer suporte a linhas de tempo de snapshots automáticos.\n\n"
    },
    {
      "title": "Instalação",
      "level": 2,
      "content": "Instale o pacote snapper. A versão de desenvolvimento snapper-gitAUR também está disponível.\n\nAdicionalmente, interfaces gráficas estão disponíveis com snapper-gui-gitAUR e btrfs-assistantAUR.\n\n"
    },
    {
      "title": "Criando uma nova configuração",
      "level": 2,
      "content": "Antes de criar uma configuração do snapper para um subvolume Btrfs, o subvolume já deve existir. Caso contrário você deve criá-lo antes de gerar uma configuração do snapper.\n\nPara criar uma nova configuração do snapper chamada config para o subvolume Btrfs em /caminho/para/subvolume, execute:\n\n```\n# snapper -c config create-config /caminho/para/subvolume\n```\n\nIsso vai:\n\n- Criar um arquivo de configuração em /etc/snapper/configs/config com base no modelo padrão de /usr/share/snapper/config-templates.\n- Criar um subvolume em /caminho/para/subvolume/.snapshots onde serão armazenados futuros snapshots para esta configuração. O caminho de um snapshot é /caminho/para/subvolume/.snapshots/#/snapshot, onde # é o número do snapshot.\n- Adicionar config a SNAPPER_CONFIGS em /etc/conf.d/snapper.\n\nPor exemplo, para criar um arquivo de configuração para o subvolume montado em /, execute:\n\n```\n# snapper -c root create-config /\n```\n\nNeste ponto, a configuração está ativa. Se seu daemon cron estiver em execução, o snapper fará #Snapshots automáticos da linha do tempo. Se você não usar um daemon cron, precisará usar o serviço e o timer do systemd. Consulte #Ativar/desativar.\n\nVeja também snapper-configs(5).\n\n"
    },
    {
      "title": "Snapshots automáticos da linha do tempo",
      "level": 3,
      "content": "Uma linha do tempo de snapshots pode ser criada com um número configurável de snapshots mantidos de hora em hora, diariamente, semanalmente, mensalmente e anualmente. Quando a linha do tempo está habilitada, por padrão, um snapshot é criado uma vez por hora. Uma vez por dia, os snapshots são limpos pelo algoritmo de limpeza da linha do tempo. Consulte as variáveis TIMELINE_* em snapper-configs(5) para detalhes.\n\n"
    },
    {
      "title": "Ativar/desativar",
      "level": 4,
      "content": "Se você tiver um daemon cron, esse recurso deve iniciar automaticamente. Para desativá-lo, edite o arquivo de configuração correspondente ao subvolume que você não deseja que tenha esse recurso e defina:\n\n```\nTIMELINE_CREATE=\"no\"\n```\n\nSe você não tiver um daemon cron, poderá usar os units fornecidos pelo systemd. Inicie e habilite snapper-timeline.timer para iniciar a linha de tempo automática do snapshot. Além disso, inicie e habilite snapper-cleanup.timer para limpar periodicamente os snapshots mais antigos.\n\n"
    },
    {
      "title": "Definir limites de snapshots",
      "level": 4,
      "content": "As configuração padrão manterá 10 snapshots por hora, 10 diários, 10 mensais e 10 anuais. Você pode querer mudar isso na configuração, especialmente em subvolumes ocupados como /. Consulte #Evitando lentidão.\n\nAqui está uma seção de exemplo de uma configuração chamada config com apenas 5 snapshots por hora, 7 diários, nenhum mensal e nenhum anual:\n\n```\n/etc/snapper/configs/config\n```\n\n```\nTIMELINE_MIN_AGE=\"1800\"\nTIMELINE_LIMIT_HOURLY=\"5\"\nTIMELINE_LIMIT_DAILY=\"7\"\nTIMELINE_LIMIT_WEEKLY=\"0\"\nTIMELINE_LIMIT_MONTHLY=\"0\"\nTIMELINE_LIMIT_YEARLY=\"0\"\n```\n\n"
    },
    {
      "title": "Alterar as frequências de snapshot e limpeza",
      "level": 4,
      "content": "Se você estiver usando os timers fornecidos pelo systemd, você pode editá-los para alterar a frequência de snapshots e limpeza.\n\nPor exemplo, ao editar o snapper-timeline.timer, adicione o seguinte para tornar a frequência a cada cinco minutos, em vez de por hora:\n\n```\n[Timer]\nOnCalendar=\nOnCalendar=*:0/5\n```\n\nAo editar snapper-cleanup.timer, você precisa alterar OnUnitActiveSec. Para que as limpezas ocorram a cada hora em vez de todos os dias, adicione:\n\n```\n[Timer]\nOnUnitActiveSec=1h\n```\n\nVeja systemd/Timers e systemd#Arquivos drop-in.\n\n"
    },
    {
      "title": "Snapshots individuais",
      "level": 4,
      "content": "Por padrão, o snapper tira snapshots do tipo single, não tendo nenhum relação especial com outros snapshots.\n\nPara tirar um snapshot de um subvolume manualmente, faça:\n\n```\n# snapper -c config create --description desc\n```\n\nO comando acima não usa nenhum algoritmo de limpeza, portanto, o snapshot é armazenado permanentemente ou até ser excluído.\n\nPara definir um algoritmo de limpeza, use o sinalizador -c após create e escolha number, timeline, pre, ou post. number configura o snapper para remover periodicamente snapshots que excederam um número definido no arquivo de configuração. Por exemplo, para criar um snapshot que usa o algoritmo number para limpeza, faça:\n\n```\n# snapper -c config create -c number\n```\n\nVeja #Snapshots automáticos da linha do tempo para saber como os snapshots timeline funcionam e veja #Snapshots pré/pós sobre como pre e post funcionam.\n\n"
    },
    {
      "title": "Snapshots pré/pós",
      "level": 4,
      "content": "O outro tipo de snapshots - snapshots pré/pós - devem ser criados como um par, um antes e outro depois de uma alteração significativa (como uma atualização do sistema).\n\nSe a mudança significativa é/pode ser invocada por um único comando, então snapper create --command pode ser usado para invocar o comando e criar automaticamente snapshots pré/pós:\n\n```\n# snapper -c config create --command comando\n```\n\nAlternativamente, os snapshots pré/pós podem ser criados manualmente.\n\nPrimeiro crie um snapshot pré:\n\n```\n# snapper -c config create -t pre -p\n```\n\nAnote o número do novo snapshot (é necessário para criar o instantâneo pós).\n\nAgora execute as ações que irão modificar o sistema de arquivos (por exemplo, instalar um novo programa, atualizar, etc.).\n\nFinalmente, crie o snapshot pós, substituindo N pelo número do snapshot pré:\n\n```\n# snapper -c config create -t post --pre-number N\n```\n\nVeja também #Envolvendo transações do pacman em snapshots.\n\n"
    },
    {
      "title": "Snapshots na inicialização",
      "level": 3,
      "content": "Para que o snapper tire um snapshot da configuração do root, habilite snapper-boot.timer. (Esses snapshots são do tipo single.)\n\n"
    },
    {
      "title": "Listar configurações",
      "level": 3,
      "content": "Para listar todas as configurações que foram criadas faça:\n\n```\n# snapper list-configs\n```\n\n"
    },
    {
      "title": "Listar snapshots",
      "level": 3,
      "content": "Para listar os snapshots tirados para uma determinada configuração config, faça:\n\n```\n# snapper -c config list\n```\n\n"
    },
    {
      "title": "Excluir um snapshot",
      "level": 3,
      "content": "Para excluir um snapshot de número N faça:\n\n```\n# snapper -c config delete N\n```\n\nVários snapshots podem ser excluídos de uma só vez. Por exemplo, para excluir os snapshots 65 e 70 da configuração root, faça:\n\n```\n# snapper -c root delete 65 70\n```\n\nPara excluir um intervalo de snapshots, neste exemplo entre os snapshots 65 e 70 da configuração root, faça:\n\n```\n# snapper -c root delete 65-70\n```\n\nPara imediatamente liberar o espaço usado pelo(s) snapshot(s), use --sync:\n\n```\n# snapper -c root delete --sync 65\n```\n\n"
    },
    {
      "title": "Acesso para usuários não root",
      "level": 3,
      "content": "Cada configuração é criada com o usuário root e, por padrão, apenas o root pode vê-la e acessá-la.\n\nPara poder listar os snapshots de uma determinada configuração para um usuário específico, basta alterar o valor de ALLOW_USERS em seu arquivo /etc/snapper/configs/config. Agora você deve ser capaz de executar snapper -c config list como um usuário normal.\n\nEventualmente, você deseja poder navegar no diretório .snapshots com um usuário, mas o proprietário deste diretório deve permanecer como root. Portanto, você deve alterar o proprietário do grupo por um grupo contendo o usuário de seu interesse, como users por exemplo:\n\n```\n# chmod a+rx .snapshots\n# chown :users .snapshots\n```\n\n"
    },
    {
      "title": "Envolvendo transações do pacman em snapshots",
      "level": 3,
      "content": "Existem alguns pacotes usados para criar snapshots automaticamente em uma transação do pacman:\n\n- snap-pac — Faz com que o pacman use automaticamente o snapper para criar snapshots pré/pós como o YaST do openSUSE. Usa hooks do pacman.\n\n- snap-pac-grub — Adicionalmente atualiza as entradas do GRUB para o grub-btrfs depois que o snap-pac fez os snapshots. Também usa hooks do pacman.\n\n- refind-btrfs — Adiciona entradas ao rEFInd depois que snap-pac fez os snapshots.\n\n- snp — Envolve qualquer comando shell em um snapshot pré-pós do snapper, por exemplo snp pacman -Syu.\n\n"
    },
    {
      "title": "Backup de partições boot não Btrfs em transações do pacman",
      "level": 4,
      "content": "Se sua partição /boot estiver em um sistema de arquivos não Btrfs (por exemplo, um ESP), você não poderá fazer backups do snapper com ela. Veja Backup do sistema#Snapshots e partição /boot para copiar a partição de inicialização automaticamente em uma atualização do kernel para sua raiz Btrfs com um hook. Isso também funciona bem junto com snap-pac.\n\n"
    },
    {
      "title": "Backup incremental para unidade externa",
      "level": 3,
      "content": "Algumas ferramentas podem usar o snapper para automatizar backups. Consulte Backup incremental para unidade externa.\n\n"
    },
    {
      "title": "Layout do sistema de arquivos sugerido",
      "level": 3,
      "content": "Aqui está um layout de sistema de arquivos sugerido para restaurar facilmente o subvolume @ que está montado na raiz de um snapshot anterior:\n\nTable content:\nSubvolume | Ponto de montagem\n@ | /\n@home | /home\n@snapshots | /.snapshots\n@var_log | /var/log\n\n```\nsubvolid=5\n  |\n  ├── @ -|\n  |     diretórios contidos:\n  |       ├── /usr\n  |       ├── /bin\n  |       ├── /.snapshots\n  |       ├── ...\n  |\n  ├── @home\n  ├── @snapshots\n  ├── @var_log\n  └── @...\n```\n\nOs subvolumes @... são montados em qualquer outro diretório que deva ter seu próprio subvolume.\n\nNote: **não** \n\n- Ao tirar um snapshot de @ (montado na raiz /), outros subvolumes não são incluídos no snapshot. Mesmo que um subvolume esteja aninhado abaixo de @, um snapshot de @ não o incluirá. Crie configurações de snapper para subvolumes adicionais além de @ dos quais você deseja manter snapshots.\n- Devido a uma limitação do Btrfs, os volumes de snapshot não podem conter arquivos swap. Coloque o arquivo swap em outro subvolume ou crie uma partição swap.\n\nSe você restaurar seu sistema para um snapshot anterior de @, esses outros subvolumes não serão afetados. Por exemplo, isso permite que você restaure @ para um snapshot anterior enquanto mantém seu /home inalterado, devido ao subvolume que está montado em /home.\n\nEsse layout permite que o utilitário snapper tire snapshots regulares de /, ao mesmo tempo que facilita a restauração de / de um Arch Live CD se ele não inicializar.\n\nNesse cenário, após a configuração inicial, o snapper não precisa de alterações e funcionará conforme o esperado.\n\n"
    },
    {
      "title": "Configuração do snapper e do ponto de montagem",
      "level": 4,
      "content": "Supõe-se que o subvolume @ esteja montado na raiz /. Também é assumido que /.snapshots não é montado e não existe como pasta, isso pode ser garantido pelos comandos:\n\n```\n# umount /.snapshots\n# rm -r /.snapshots\n```\n\nEntão crie uma nova configuração para /. O Snapper create-config cria automaticamente um subvolume .snapshots com o subvolume raiz @ como seu pai, que não é necessário para o layout do sistema de arquivos sugerido e pode ser excluído.\n\n```\n# btrfs subvolume delete /.snapshots\n```\n\nApós excluir o subvolume, recrie o diretório /.snapshots.\n\n```\n# mkdir /.snapshots\n```\n\nAgora monte @snapshots em /.snapshots. Por exemplo, para um sistema de arquivos localizado em /dev/sda1:\n\n```\n# mount -o subvol=@snapshots /dev/sda1 /.snapshots\n```\n\nPara tornar esta montagem permanente, adicione uma entrada ao seu fstab.\n\nOu se você tiver uma entrada fstab existente, remonte o subvolume do snapshot:\n\n```\n# mount -a\n```\n\nDê à pasta a permissão 750.\n\nIsso fará com que todos os snapshots criados pelo snapper sejam armazenados fora do subvolume @, para que @ possa ser facilmente substituído a qualquer momento sem perder os snapshots do snapper.\n\n"
    },
    {
      "title": "Restaurando / para seu snapshot anterior",
      "level": 4,
      "content": "Para restaurar o / usando um dos snapshots do snapper, primeiro inicialize em um USB/CD live do Arch Linux.\n\nMonte o subvolume de nível superior (subvolid=5). Ou seja, omita quaisquer sinalizadores de montagem subvolid ou subvol.\n\nEncontre o número do snapshot que você deseja recuperar:\n\n```\ngrep -r '<date>' /mnt/@snapshots/*/info.xml\n```\n\nA saída deve se parecer com isso, há uma linha para cada snapshot, para que você possa combinar facilmente o número e a data de cada snapshot.\n\n```\n/mnt/@snapshots/número/info.xml: <date>2021-07-26 22:00:00</date>\n```\n\nLembre-se do número.\n\nAgora, mova @ para outro local (por ex. /@.broken) para salvar uma cópia do sistema atual. Alternativamente, simplesmente delete @ usando btrfs subvolume delete /mnt/@.\n\nCrie um snapshot de leitura e gravação (read-write) do snapshot somente leitura (read-only) que o snapper tirou:\n\n```\n# btrfs subvolume snapshot /mnt/@snapshots/número/snapshot /mnt/@\n```\n\nOnde número é o número do snapshot do snapper que você deseja restaurar.\n\nSe subvolid foi usado para a opção de entrada de montagem / no fstab, em vez de /caminho/para/subvolume, altere subvolid no para o novo subvolid.\n\n```\n# btrfs subvolume list /mnt | grep @$ # Verifique o novo subvolid\n# grep \"/ \" /mnt/@/etc/fstab          # Verifique o subvolid antigo\n# vim /mnt/@/etc/fstab                # Edite\n```\n\nAltere também a configuração do bootloader, como refind_linux.conf, se ele contiver o subvolid.\n\n"
    },
    {
      "title": "Excluindo arquivos de snapshots",
      "level": 3,
      "content": "Se você deseja excluir um arquivo ou pasta específica de snapshots anteriores sem excluir os próprios snapshots, snappersAUR é um script que adiciona essa funcionalidade ao Snapper. Esse script também pode ser usado para manipular snapshots anteriores de várias outras maneiras que o Snapper não suporta atualmente.\n\nSe você deseja remover um arquivo sem usar um script extra, basta fazer com que seu subvolume do snapshot tenha permissões de leitura e escrita, o que você pode fazer com:\n\n```\n# btrfs property set /caminho/para/.snapshots/<num_do_snapshot>/snapshot ro false\n```\n\nVerifique se ro=false:\n\n```\n# btrfs property get /caminho/para/.snapshots/<num_do_snapshot>/snapshot\nro=false\n```\n\nAgora você pode modificar arquivos em /caminho/para/.snapshots/<num_do_snapshot>/snapshot normalmente. Você pode usar um loop de shell para trabalhar em seus snapshots em massa.\n\n"
    },
    {
      "title": "Evitando lentidão",
      "level": 3,
      "content": "Manter muitos snapshots por um longo período de tempo em um sistema de arquivos ocupado como /, onde muitas atualizações do sistema acontecem ao longo do tempo, pode causar lentidão séria. Você pode evitar isso:\n\n- Criando subvolumes para coisas que não valem a pena serem capturadas, como /var/cache/pacman/pkg, /var/abs, /var/tmp e /srv.\n- Editando as configurações padrão para snapshots por hora/diário/mensal/anual ao usar #Snapshots automáticos da linha do tempo.\n\n"
    },
    {
      "title": "updatedb",
      "level": 4,
      "content": "Por padrão, updatedb (veja locate) também indexará o diretório .snapshots criado pelo snapper, o que pode causar lentidão grave e uso excessivo de memória se você tiver muitos snapshots. Você pode impedir que updatedb indexe sobre ele editando:\n\n```\n/etc/updatedb.conf\n```\n\n```\nPRUNENAMES = \".snapshots\"\n```\n\n"
    },
    {
      "title": "Desativar grupos de cotas",
      "level": 4,
      "content": "Há relatos de lentidão significativa causada por grupos de cotas, se, por exemplo, snapper ls levar muitos minutos para retornar um resultado, essa pode ser a causa. Consulte [2].\n\nPara determinar se os grupos de cotas estão ou não habilitados, use o seguinte comando:\n\n```\n# btrfs qgroup show /\n```\n\nOs grupos de cotas podem ser desativados com:\n\n```\n# btrfs quota disable /\n```\n\n"
    },
    {
      "title": "Contar o número de snapshots",
      "level": 4,
      "content": "Se a desativação de grupos de cotas não ajudou na lentidão, pode ser útil contar o número de snapshots, isso pode ser feito com:\n\n```\n# btrfs subvolume list -s / | wc -l\n```\n\n"
    },
    {
      "title": "Preservando arquivos de log",
      "level": 3,
      "content": "É recomendado criar um subvolume para /var/log para que os snapshots de / o excluam. Dessa forma, se um snapshot de / for restaurado, seus arquivos de log também não serão revertidos para o estado anterior. Isso facilita a solução de problemas.\n\n"
    },
    {
      "title": "Logs do snapper",
      "level": 3,
      "content": "O Snapper grava todas as atividades em /var/log/snapper.log - verifique este arquivo primeiro se achar que algo está errado.\n\nSe você tiver problemas com snapshots de hora em hora/diários/semanais, a causa mais comum para isso até agora foi que o serviço cronie (ou qualquer daemon cron que você está usando) não estava em execução.\n\n"
    },
    {
      "title": "Erro de E/S",
      "level": 3,
      "content": "Se você receber um 'IO Error' ao tentar criar um snapshot, certifique-se de que o diretório .snapshots associado ao subvolume que você está tentando fazer o snapshot é um subvolume por si só.\n\nOutra causa possível é que o diretório .snapshots não tem root como proprietário (Você encontrará Btrfs.cc(openInfosDir):219 - .snapshots must have owner root em /var/log /snapper.log).\n\n"
    },
    {
      "title": "Snapshots órfãos causando desperdício de espaço em disco",
      "level": 3,
      "content": "É possível que os instantâneos sejam 'perdidos', onde ainda existem no disco, mas não são rastreados pelo snapper. Isso pode resultar em uma grande quantidade de espaço em disco desperdiçado e não contabilizado. Para verificar isso, compare a saída de\n\n```\n# snapper -c <config> list\n```\n\ncom\n\n```\n# btrfs subvolume list -o <subvolume pai>/.snapshots\n```\n\nQualquer subvolume na segunda lista que não esteja presente na primeira é órfão e pode ser excluído manualmente.\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- Página inicial do Snapper\n- Portal openSUSE Snapper\n- Página inicial do Btrfs\n- Linux.com: Snapper: o Ultimate Btrfs Snapshot Manager do SUSE\n\n"
    }
  ]
}
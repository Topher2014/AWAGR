{
  "title": "Dm-crypt (Español)/Encrypting an entire system (Español)",
  "url": "https://wiki.archlinux.org/title/Dm-crypt_(Espa%C3%B1ol)/Encrypting_an_entire_system_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2019-09-20** \n\nLos siguientes son ejemplos de escenarios comunes en el cifrado completo de un sistema con dm-crypt. Se explican todas las adaptaciones que se necesitan introducir en el proceso de instalación. Todas las herramientas necesarias para ello están presentes en la imagen de instalación.\n\n"
    },
    {
      "title": "Descripción general",
      "level": 2,
      "content": "Asegurar un sistema de archivos raíz es donde dm-crypt sobresale, en cuanto a características y rendimiento. Cuando el sistema de archivos de un sistema (raíz) está en un dispositivo dm-crypt, prácticamente todos los archivos del sistema están cifrados. A diferencia del cifrado de forma selectiva de los sistemas de archivos no raíz, un sistema de archivos raíz cifrado puede ocultar información, tales como qué programas se instalan, los nombres de los usuarios y todas sus cuentas, y los vectores de vuelcos de datos comunes, tales como locate y /var/log/. Además, un sistema de archivos raíz cifrado hace que la manipulación del sistema sea mucho más difícil, al estar todo cifrado, con las excepciones del gestor de arranque y (normalmente) el kernel.\n\nEn la siguiente tabla se ilustran las ventajas de todos los escenarios posibles, diferenciando los pros y contras de cada uno:\n\nTable content:\nEscenarios | Ventajas | Desventajas\n#LUKS sobre una partición muestra una configuración sencilla y básica de una partición raíz completamente cifrada con LUKS. | Particionado y configuración sencilla | Rigidez; el espacio del disco a cifrar debe estar preasignado\n#LVM sobre LUKS logra un particionado flexible usando LVM dentro de una única partición cifrada con LUKS. | Particionado sencillo con la ductilidad de LVM Solo es necesaria una clave para desbloquear todos los volúmenes (por ejemplo, configuración fácil para restaurar desde disco) El esquema del volumen no es transparente cuando está bloqueado El método más fácil para permitir la suspensión en el disco | LVM añade una capa y un hook adicional de mapeo Poco útil si un volumen particular necesita una clave separada\n#LUKS sobre LVM utiliza dm-crypt solo después de configurar LVM. | LVM puede utilizarse para tener cifrado volúmenes que abarquen varios discos Facilidad para mezclar grupos de volúmenes cifrados/descifrados | Complejo; cambiar volúmenes requiere cambiar demasiados mapeados cifrados Los volúmenes requieren claves propias cada uno El esquema LVM es transparente cuando está bloqueado\n#LUKS sobre RAID por software utiliza dm-crypt solo después de configurar RAID. | Similar a #LUKS sobre LVM | Similar a #LUKS sobre LVM\n#Modalidad plain de dm-crypt utiliza la modalidad plain de dm-crypt, es decir, sin una cabecera LUKS y sus opciones para múltiples claves. Este escenario también permite emplear dispositivos USB para /boot y almacenamiento de claves, que se puede aplicar a los otros escenarios. | Capacidad de recuperación de los datos para los casos en que pueda dañarse un encabezado LUKS Permite el cifrado completo de disco Ayuda a abordar problemas con unidades SSD | Es necesaria una alta competencia en todos los parámetros de cifrado Clave de cifrado única y sin opción de cambiarla\n#Cifrar partición de arranque (GRUB) muestra cómo cifrar la partición de arranque utilizando el gestor de arranque GRUB. Este escenario también emplea una partición ESP, que se puede aplicar a los otros escenarios. | Las mismas ventajas que las descritas para el escenario de la instalación basada en LVM sobre LUKS (para este ejemplo en particular) Se dejan menos datos sin cifrar, es decir, el gestor de arranque y la partición ESP, si está presente | Las mismas desventajas que las descritas para el escenario de la instalación basada en LVM sobre LUKS (para este ejemplo en particular) Configuración más complicada No es compatible con otros gestores de arranque\n#Subvolúmenes btrfs con espacio de intercambio muestra cómo cifrar un sistema Btrfs, incluyendo el directorio /boot, también agrega una partición de intercambio, en el hardware UEFI. | Ventajas similares a #Cifrar partición de arranque (GRUB) Disponibilidad de las características de Btrfs | Desventajas similares a #Cifrar partición de arranque (GRUB)\n\nmuestra una configuración sencilla y básica de una partición raíz completamente cifrada con LUKS.\n\n- Particionado y configuración sencilla\n\n- Rigidez; el espacio del disco a cifrar debe estar preasignado\n\nlogra un particionado flexible usando LVM dentro de una única partición cifrada con LUKS.\n\n- Particionado sencillo con la ductilidad de LVM\n- Solo es necesaria una clave para desbloquear todos los volúmenes (por ejemplo, configuración fácil para restaurar desde disco)\n- El esquema del volumen no es transparente cuando está bloqueado\n- El método más fácil para permitir la suspensión en el disco\n\n- LVM añade una capa y un hook adicional de mapeo\n- Poco útil si un volumen particular necesita una clave separada\n\nutiliza dm-crypt solo después de configurar LVM.\n\n- LVM puede utilizarse para tener cifrado volúmenes que abarquen varios discos\n- Facilidad para mezclar grupos de volúmenes cifrados/descifrados\n\n- Complejo; cambiar volúmenes requiere cambiar demasiados mapeados cifrados\n- Los volúmenes requieren claves propias cada uno\n- El esquema LVM es transparente cuando está bloqueado\n\nutiliza dm-crypt solo después de configurar RAID.\n\n- Similar a #LUKS sobre LVM\n\n- Similar a #LUKS sobre LVM\n\nutiliza la modalidad plain de dm-crypt, es decir, sin una cabecera LUKS y sus opciones para múltiples claves. Este escenario también permite emplear dispositivos USB para /boot y almacenamiento de claves, que se puede aplicar a los otros escenarios.\n\n- Capacidad de recuperación de los datos para los casos en que pueda dañarse un encabezado LUKS\n- Permite el cifrado completo de disco\n- Ayuda a abordar problemas con unidades SSD\n\n- Es necesaria una alta competencia en todos los parámetros de cifrado\n- Clave de cifrado única y sin opción de cambiarla\n\nmuestra cómo cifrar la partición de arranque utilizando el gestor de arranque GRUB. Este escenario también emplea una partición ESP, que se puede aplicar a los otros escenarios.\n\n- Las mismas ventajas que las descritas para el escenario de la instalación basada en LVM sobre LUKS (para este ejemplo en particular)\n- Se dejan menos datos sin cifrar, es decir, el gestor de arranque y la partición ESP, si está presente\n\n- Las mismas desventajas que las descritas para el escenario de la instalación basada en LVM sobre LUKS (para este ejemplo en particular)\n- Configuración más complicada\n- No es compatible con otros gestores de arranque\n\nmuestra cómo cifrar un sistema Btrfs, incluyendo el directorio /boot, también agrega una partición de intercambio, en el hardware UEFI.\n\n- Ventajas similares a #Cifrar partición de arranque (GRUB)\n- Disponibilidad de las características de Btrfs\n\n- Desventajas similares a #Cifrar partición de arranque (GRUB)\n\nSi bien todos los escenarios anteriores proporcionan una protección mucho mayor contra las amenazas externas que los sistemas de archivos cifrados secundariamente, también comparten una desventaja común: cualquier usuario en posesión de la clave de cifrado puede descifrar toda la unidad y, por lo tanto, puede acceder a los datos de otros usuarios. Si esto es motivo de preocupación, es posible utilizar una combinación de cifrado de dispositivos de bloques y sistema de archivos apilados, y recoger las ventajas de ambos. Véase Disk encryption (Español) para planificar las opciones.\n\nVéase dm-crypt (Español)/Drive preparation (Español)#Particionar para tener una visión general de las estrategias de particionado utilizados en los escenarios.\n\nOtra área a considerar es si se debe configurar una partición de intercambio cifrado y de qué tipo. Véase dm-crypt (Español)/Swap encryption (Español) para conocer alternativas.\n\nSi quiere avanzar en la protección de los datos del sistema no solo contra el robo físico, sino también previniéndose contra la manipulación lógica, vea dm-crypt (Español)/Specialties (Español)#Asegurar la partición de arranque no cifrada para conocer más posibilidades después de seguir uno de los escenarios.\n\nPara solid state drives es posible que desee considerar activar la compatibilidad con TRIM, pero tenga en cuenta que existen posibles implicaciones de seguridad. Consulte dm-crypt (Español)/Specialties (Español)#Soporte Discard/TRIM para unidades de estado sólido (SSD) para obtener más información.\n\n- En cualquier situación, nunca utilice software de reparación del sistema de archivos como fsck directamente sobre un volumen cifrado, o destruirá cualquier medio para recuperar la clave utilizada para descifrar sus archivos. En su lugar, utilice estas herramientas en el dispositivo una vez desencriptado (abierto).\n- Sobre el formato LUKS2: GRUB (Español) no es compatible con LUKS2.[1] Utilice LUKS1 en particiones a las que GRUB necesita acceder. El formato LUKS2 tiene un alto uso de RAM por diseño, con un valor predeterminado de 1 GB por mapeador cifrado. Las máquinas con poca RAM y/o múltiples particiones LUKS2 desbloqueadas en paralelo pueden producir un error al arrancar. Consulte la opción --pbkdf-memory para controlar el uso de la memoria.[2]\n\n- GRUB (Español) no es compatible con LUKS2.[1] Utilice LUKS1 en particiones a las que GRUB necesita acceder.\n- El formato LUKS2 tiene un alto uso de RAM por diseño, con un valor predeterminado de 1 GB por mapeador cifrado. Las máquinas con poca RAM y/o múltiples particiones LUKS2 desbloqueadas en paralelo pueden producir un error al arrancar. Consulte la opción --pbkdf-memory para controlar el uso de la memoria.[2]\n\n"
    },
    {
      "title": "LUKS sobre una partición",
      "level": 2,
      "content": "Este ejemplo explica cómo cifrar un sistema completo con dmcrypt + LUKS en un esquema de particionado simple:\n\n```\n+----------------------+--------------------------+-------------------------------+\n | Partición de arranque| Partición del sistema    |Espacio libre opcional         |\n |                      | cifrada con LUKS2        |para configurar posteriormente |\n |                      |                          |particiones de intercambio     |\n | /boot                | /                        |o particiones adicionales      |\n |                      |                          |                               |\n |                      | /dev/mapper/cryptroot    |                               |\n |                      |--------------------------|                               |\n | /dev/sda1            | /dev/sda2                |                               |\n +----------------------+--------------------------+-------------------------------+\n```\n\nLos primeros pasos se pueden realizar directamente después de arrancar la imagen de instalación de Arch Linux.\n\n"
    },
    {
      "title": "Preparar el disco",
      "level": 3,
      "content": "Antes de crear las particiones, debe informarse sobre la importancia y los métodos para borrar de forma segura el disco, descrito en dm-crypt (Español)/Drive preparation (Español).\n\nA continuación, cree las particiones necesarias, al menos una para / (por ejemplo, /dev/sda2) y otra para /boot (/dev/sda1). Véase Partitioning (Español).\n\n"
    },
    {
      "title": "Preparar las particiones que no son de arranque (boot)",
      "level": 3,
      "content": "Las siguientes órdenes crean y montan la partición raíz cifrada. Se corresponden con el proceso descrito con detalle en dm-crypt (Español)/Encrypting a non-root file system (Español)#Partición (que, a pesar del título, se puede aplicar a particiones raíz, siempre y cuando mkinitcpio y el gestor de arranque estén configurados correctamente). Si desea utilizar determinadas opciones de cifrado no predeterminadas (por ejemplo, respecto al algoritmo de cifrado, longitud de la clave, etc.), consulte opciones de cifrado antes de ejecutar la primera orden:\n\n```\n# cryptsetup -y -v luksFormat /dev/sda2\n# cryptsetup open /dev/sda2 cryptroot\n# mkfs.ext4 /dev/mapper/cryptroot\n# mount /dev/mapper/cryptroot /mnt\n```\n\nCompruebe que el mapeado funciona según lo previsto:\n\n```\n# umount /mnt\n# cryptsetup close cryptroot\n# cryptsetup open /dev/sda2 cryptroot\n# mount /dev/mapper/cryptroot /mnt\n```\n\nSi ha creado particiones separadas (por ejemplo, /home), estos pasos tienen que ser adaptados y repetidos para todas ellas, a excepción de /boot. Véase dm-crypt (Español)/Encrypting a non-root file system (Español)#Desbloqueo y montaje automatizados para saber cómo manejar particiones adicionales en el arranque.\n\nTenga en cuenta que cada dispositivo de bloque requiere su propia contraseña. Esto puede ser un inconveniente, porque da lugar a una frase de acceso separada para cada uno, que hay que introducir durante el inicio. Una alternativa es utilizar un archivo de claves almacenada en la partición del sistema para desbloquear la partición separada mediante crypttab. Vease dm-crypt (Español)/Device encryption (Español)#Utilizar LUKS para formatear particiones con un archivo de claves para obtener instrucciones.\n\n"
    },
    {
      "title": "Preparar la partición de arranque",
      "level": 3,
      "content": "Lo que tiene que hacer es configurar la partición /boot sin cifrar, que se necesita para una partición raíz cifrada. Para una partición /boot normal sobre sistemas BIOS, por ejemplo, ejecute:\n\n```\n# mkfs.ext4 /dev/sda1\n```\n\no para una EFI system partition (Español) en sistemas UEFI:\n\n```\n# mkfs.fat -F32 /dev/sda1\n```\n\nLuego cree el directorio para el punto de montaje y monte la partición:\n\n```\n# mkdir /mnt/boot\n# mount /dev/sda1 /mnt/boot\n```\n\n"
    },
    {
      "title": "Montar los dispositivos",
      "level": 3,
      "content": "Como en Installation guide (Español)#Montar los sistemas de archivos, hay que montar los dispositivos mapeados, no las particiones subyacentes. En cambio /boot, al no estar cifrado, se monta directamente como de costumbre.\n\n"
    },
    {
      "title": "Configurar mkinitcpio",
      "level": 3,
      "content": "Añada los hooks keyboard, keymap y encrypt a mkinitcpio (Español). Si la distribución de teclado predeterminado de EE.UU. está bien para usted, puede omitir el hook keymap .\n\n```\nHOOKS=(base udev autodetect keyboard keymap consolefont modconf block encrypt filesystems fsck)\n```\n\nSi utiliza el hook sd-encrypt con initramfs basado en systemd, en su lugar debe establecerse lo siguiente:\n\n```\nHOOKS=(base systemd autodetect keyboard sd-vconsole modconf block sd-encrypt filesystems fsck)\n```\n\nDependiendo de qué otros hooks se utilicen, el orden de los mismos puede ser relevante. Véase dm-crypt/System configuration#mkinitcpio para conocer más detalles y otros hooks que pueda necesitar.\n\n"
    },
    {
      "title": "Configurar el gestor de arranque",
      "level": 3,
      "content": "Con el fin de desbloquear en el arranque la partición raíz cifrada, es necesario pasar los siguientes parámetros del kernel al gestor de arranque:\n\n```\ncryptdevice=UUID=UUID-del-dispositivo:cryptroot root=/dev/mapper/cryptroot\n```\n\nSi utiliza el hook sd-encrypt con initramfs basado en systemd, en su lugar debe establecerse lo siguiente:\n\n```\nrd.luks.name=UUID-del-dispositivo=cryptroot root=/dev/mapper/cryptroot\n```\n\nVéase dm-crypt (Español)/System configuration (Español)#Cargador de arranque para conocer más detalles.\n\nEl UUID-del-dispositivo se está refiriendo al UUID de /dev/sda2 (la partición física donde reside el sistema, no el dispositivo mapeado). Véase Persistent block device naming (Español) para conocer más detalles.\n\n"
    },
    {
      "title": "LVM sobre LUKS",
      "level": 2,
      "content": "El método sencillo es crear LVM (Español) sobre la partición cifrada y no al revés. Técnicamente, LVM se configura sobre un gran dispositivo cifrado. Por lo tanto, LVM no es transparente hasta que el dispositivo de bloque se desbloquea y la estructura del volumen subyacente se escanea y se monta durante el arranque.\n\nEl esquema de particionado del disco en este ejemplo sería:\n\n```\n+-----------------------------------------------------------------------+ +-----------------------+\n| Volumen lógico 1      | Volumen lógico 2      | Volumen lógico 3      | | Partición de arranque |     \n|                       |                       |                       | |                       |\n| [SWAP]                | /                     | /home                 | | /boot                 |\n|                       |                       |                       | |                       |\n| /dev/MyVolGroup/swap  | /dev/MyVolGroup/root  | /dev/MyVolGroup/home  | |                       |\n|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _|_ _ _ _ _ _ _ _ _ _ _ _| | (puede estar en otro  |\n|                                                                       | | dispositivo)          |\n|                         Partición cifrada con LUKS                    | |                       |\n|                         /dev/sda1                                     | | /dev/sdb1             |\n+-----------------------------------------------------------------------+ +-----------------------+\n```\n\n- las instrucciones de dm-crypt (Español)/Specialties (Español)#Sistema cifrado usando un encabezado LUKS separado utilizan esta configuración con un encabezado LUKS remoto sobre un dispositivo USB para lograr una autenticación de dos factores con él;\n- las instrucciones de dm-crypt (Español)/Specialties (Español)#/boot cifrado y un encabezado LUKS separado en USB usan esta configuración con un encabezado LUKS separado, una partición /boot cifrada y un archivo de claves encriptado, todo en un dispositivo USB.\n\n"
    },
    {
      "title": "Preparar el disco",
      "level": 3,
      "content": "Antes de crear las particiones, debe informarse sobre la importancia y los métodos sobre cómo borrar de forma segura el disco, descrito en dm-crypt (Español)/Drive preparation (Español).\n\nCree una partición con punto de montaje en /boot con un tamaño de 200 MiB o más.\n\nCree una partición que luego contendrá el contenedor cifrado.\n\nCree un contenedor cifrado con LUKS en la partición del «sistema». Introduzca la contraseña elegida dos veces.\n\n```\n# cryptsetup luksFormat /dev/sda1\n```\n\nPara obtener más información sobre las opciones disponibles de cryptsetup vea las opciones de cifrado de LUKS antes de ejecutar la orden de arriba.\n\nAbra el contenedor:\n\n```\n# cryptsetup open --type luks /dev/sdaX lvm\n```\n\nEl contenedor descifrado estará ahora disponible como /dev/mapper/lvm.\n\n"
    },
    {
      "title": "Preparar los volúmenes lógicos",
      "level": 3,
      "content": "Cree un volumen físico sobre el contenedor LUKS abierto:\n\n```\n# pvcreate /dev/mapper/cryptlvm\n```\n\nCree un grupo de volúmenes llamado (por ejemplo) MyVolGroup, sobre el volumen físico creado con anterioridad:\n\n```\n# vgcreate MyVolGroup /dev/mapper/cryptlvm\n```\n\nCree varios volúmenes lógicos en el grupo de volúmenes:\n\n```\n# lvcreate -L 8G MyVolGroup -n swap\n# lvcreate -L 32G MyVolGroup -n root\n# lvcreate -l 100%FREE MyVolGroup -n home\n```\n\nCree un sistema de archivos para cada volumen lógico:\n\n```\n# mkfs.ext4 /dev/MyVolGroup/root\n# mkfs.ext4 /dev/MyVolGroup/home\n# mkswap /dev/MyVolGroup/swap\n```\n\nMonte los sistemas de archivos:\n\n```\n# mount /dev/MyVolGroup/root /mnt\n# mkdir /mnt/home\n# mount /dev/MyVolGroup/home /mnt/home\n# swapon /dev/MyVolGroup/swap\n```\n\n"
    },
    {
      "title": "Preparar la partición de arranque",
      "level": 3,
      "content": "El gestor de arranque carga el kernel, mkinitcpio (Español) y sus propios archivos de configuración desde el directorio /boot. Cualquier sistema de archivos que pueda ser leído por el gestor de arranque vale.\n\nCree un sistema de archivos en la partición destinada a /boot:\n\n```\n# mkfs.ext4 /dev/sdb1\n```\n\n```\n# mkfs.fat -F32 /dev/sdb1\n```\n\nCree el directorio /mnt/boot:\n\n```\n# mkdir /mnt/boot\n```\n\nMonte la partición para /mnt/boot:\n\n```\n# mount /dev/sdb1 /mnt/boot\n```\n\n"
    },
    {
      "title": "Configurar mkinitcpio",
      "level": 3,
      "content": "Añada los hooks keyboard, encrypt y lvm2 a mkinitcpio.conf:\n\n```\nHOOKS=(base udev autodetect keyboard keymap consolefont modconf block encrypt lvm2 filesystems fsck)\n```\n\nSi utiliza el hook sd-encrypt, se debe configurar lo siguiente en su lugar:\n\n```\nHOOKS=(base systemd autodetect keyboard sd-vconsole modconf block sd-encrypt sd-lvm2 filesystems fsck)\n```\n\nVéase dm-crypt (Español)/System configuration (Español)#mkinitcpio para conocer más detalles y otros hooks que se puedan necesitar.\n\n"
    },
    {
      "title": "Configurar el gestor de arranque",
      "level": 3,
      "content": "Con el fin de desbloquear en el arranque la partición raíz cifrada, es necesario pasar los siguientes parámetros del kernel al gestor de arranque:\n\n```\ncryptdevice=UUID=UUID-del-dispositivo:cryptlvm root=/dev/MyVolGroup/root\n```\n\nSi utiliza el hook sd-encrypt, lo siguiente debe establecerse en su lugar:\n\n```\nrd.luks.name=UUID-del-dispositivo=cryptlvm root=/dev/MyVolGroup/root\n```\n\nEl UUID-del-dispositivo se refiere al UUID de /dev/sda1 (la partición física a cifrar, no el dispositivo mapeado resultante). Véase Persistent block device naming (Español) para más detalles.\n\nVéase dm-crypt/System configuration#Kernel parameters para más detalles.\n\n"
    },
    {
      "title": "LUKS sobre LVM",
      "level": 2,
      "content": "Para utilizar el cifrado sobre LVM (Español), los volúmenes LVM se establecen primero y luego se usan como base para las particiones cifradas. De esta manera, es posible mezclar particiones/volúmenes cifrados/sin cifrar.\n\nEl siguiente ejemplo se crea una configuración LUKS sobre LVM, donde se entremezcla el uso de un archivo de claves para desbloquear la partición /home, por un lado, con volúmenes temporales cifrados para /tmp y /swap, por otro. Esto último se considera deseable desde una perspectiva de seguridad, ya que ningún dato temporal potencialmente sensible sobrevivirá al reinicio, cuando el cifrado se reinicializa. Si tiene experiencia con LVM, podrá ignorar/reemplazar LVM y otros detalles de acuerdo con su plan.\n\nSi desea que un volumen lógico abarque varios discos que ya se han configurado, o ampliar el volumen lógico para /home (o cualquier otro volumen), en dm-crypt (Español)/Specialties (Español)#Expandir LVM en varios discos se describe un procedimiento para hacerlo. Es importante tener en cuenta que el contenedor cifrado con LUKS también debe redimensionarse.\n\n"
    },
    {
      "title": "Preparar el disco",
      "level": 3,
      "content": "Esquema de particionado:\n\n```\n+-----------------------+--------------------------------------------------------------------------------------------------------------+\n| Partición de arranque | Volumen cifrado con plain dm-crypt | Volumen cifrado con LUKS2          | Volumen cifrado con LUKS2          |\n|                       |                                    |                                    |                                    |\n| /boot                 | [SWAP]                             | /                                  | /home                              |\n|                       |                                    |                                    |                                    |\n|                       | /dev/mapper/swap                   | /dev/mapper/root                   | /dev/mapper/home                   |\n|                       |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |\n|                       | Volumen lógico 1                   | Volumen lógico 2                   | Volumen lógico 3                   |\n|                       | /dev/MyVolGroup/cryptswap          | /dev/MyVolGroup/cryptroot          | /dev/MyVolGroup/crypthome          |\n|                       |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ |\n|                       |                                                                                                              |\n|     /dev/sda1         |                                               /dev/sda2                                                      |\n+-----------------------+--------------------------------------------------------------------------------------------------------------+\n```\n\nEscriba aleatóriamente la partición /dev/sda2 como indica el artículo dm-crypt (Español)/Drive preparation (Español)#Limpiar un disco o partición vacíos con dm-crypt.\n\n"
    },
    {
      "title": "Preparar los volúmenes lógicos",
      "level": 3,
      "content": "```\n# pvcreate /dev/sda2\n# vgcreate MyVolGroup /dev/sda2\n# lvcreate -L 32G -n cryptroot MyVolGroup\n# lvcreate -L 500M -n cryptswap MyVolGroup\n# lvcreate -L 500M -n crypttmp MyVolGroup\n# lvcreate -l 100%FREE -n crypthome MyVolGroup\n```\n\n```\n# cryptsetup luksFormat /dev/MyVolGroup/cryptroot\n# cryptsetup open /dev/MyVolGroup/cryptroot root\n# mkfs.ext4 /dev/mapper/root\n# mount /dev/mapper/root /mnt\n```\n\nMás información acerca de las opciones de cifrado se puede encontrar en dm-crypt (Español)/Device encryption (Español)#Opciones de cifrado para la modalidad LUKS. Tenga en cuenta se indicará cómo cifrar /home en #Cifrar el volúmen lógico /home.\n\n"
    },
    {
      "title": "Preparar la partición de arranque",
      "level": 3,
      "content": "```\n# dd if=/dev/zero of=/dev/sda1 bs=1M status=progress\n# mkfs.ext4 /dev/sda1\n# mkdir /mnt/boot\n# mount /dev/sda1 /mnt/boot\n```\n\n"
    },
    {
      "title": "Configurar mkinitcpio",
      "level": 3,
      "content": "Añada los hooks keyboard, lvm2 y encrypt a mkinitcpio (Español):\n\n```\nHOOKS=(base udev autodetect keyboard keymap consolefont modconf block lvm2 encrypt filesystems fsck)\n```\n\nSi usa el hook sd-encrypt con initramfs basado en systemd, en su lugar debe establecerse lo siguiente:\n\n```\nHOOKS=(base systemd autodetect keyboard sd-vconsole modconf block sd-encrypt sd-lvm2 filesystems fsck)\n```\n\nVéase dm-crypt (Español)/System configuration (Español)#mkinitcpio para conocer más detalles y otros hooks que se puedan necesitar.\n\n"
    },
    {
      "title": "Configurar el gestor de arranque",
      "level": 3,
      "content": "Con el fin de desbloquear en el arranque la partición raíz cifrada, es necesario pasar los siguientes parámetros del kernel al gestor de arranque:\n\n```\ncryptdevice=UUID=UUID-del-dispositivo:root root=/dev/mapper/root\n```\n\nSi utiliza el hook sd-encrypt, se debe configurar lo siguiente en su lugar:\n\n```\nrd.luks.name=UUID-del-dispositivo=root root=/dev/mapper/root\n```\n\nEl UUID-del-dispositivo hace referencia al UUID de /dev/MyVolGroup/cryptroot (el volumen raíz a cifrar, no el dispositivo mapeado resultante). Consulte Persistent block device naming (Español) para más detalles.\n\nVéase dm-crypt (Español)/System configuration (Español)#Cargador de arranque para conocer más detalles.\n\n"
    },
    {
      "title": "Configurar fstab y crypttab",
      "level": 3,
      "content": "Ambas entradas, para crypttab y fstab, son necesarias tanto para desbloquear el dispositivo como para montar los sistemas de archivos, respectivamente. Las siguientes líneas volverán a reencriptar los sistemas de archivos temporales en cada reinicio:\n\n```\n/etc/crypttab\n```\n\n```\nswap\t/dev/MyVolGroup/cryptswap\t/dev/urandom\tswap,cipher=aes-xts-plain64,size=256\ntmp\t/dev/MyVolGroup/crypttmp\t/dev/urandom\ttmp,cipher=aes-xts-plain64,size=256\n```\n\n```\n/etc/fstab\n```\n\n```\n/dev/mapper/root        /       ext4            defaults        0       1\n/dev/sda1               /boot   ext4            defaults        0       2\n/dev/mapper/tmp         /tmp    tmpfs           defaults        0       0\n/dev/mapper/swap        none    swap            sw              0       0\n```\n\n"
    },
    {
      "title": "Cifrar el volúmen lógico /home",
      "level": 3,
      "content": "Desde este escenario se utiliza LVM como el primer mapeador y dm-crypt como el segundo, cada volumen lógico cifrado requiere su propio cifrado. Sin embargo, a diferencia de los sistemas de archivos temporales configurados con cifrado volátil anteriormente, el volumen lógico para /home debe ser persistente, por supuesto. Lo siguiente asume que se ha reiniciado el sistema instalado, de lo contrario se tienen que ajustar las rutas. Para asegurarnos de que se introduce una segunda frase de acceso en el arranque para dicho volumen, creamos un archivo de claves:\n\n```\n# mkdir -m 700 /etc/luks-keys\n# dd if=/dev/random of=/etc/luks-keys/home bs=1 count=256 status=progress\n```\n\nEl volumen lógico se cifra con dicho archivo de clave:\n\n```\n# cryptsetup luksFormat -v /dev/MyVolGroup/crypthome /etc/luks-keys/home\n# cryptsetup -d /etc/luks-keys/home open /dev/MyVolGroup/crypthome home\n# mkfs.ext4 /dev/mapper/home\n# mount /dev/mapper/home /home\n```\n\nEl montaje encriptado será configurado tanto en crypttab como en fstab:\n\n```\n/etc/crypttab\n```\n\n```\nhome\t/dev/MyVolGroup/crypthome   /etc/luks-keys/home\n```\n\n```\n/etc/fstab\n```\n\n```\n/dev/mapper/home        /home   ext4        defaults        0       2\n```\n\n"
    },
    {
      "title": "LUKS sobre RAID por software",
      "level": 2,
      "content": "Este ejemplo se basa en una configuración real para un portátil destinado a funcionar como una estación de trabajo equipado con dos unidades SSD de igual tamaño y una unidad de disco duro (HDD) adicional para almacenamiento masivo. El resultado final es el cifrado del disco completo basado en LUKS1 (incluyendo /boot) para todas las unidades, con las unidades SSD en una matriz RAID0 y los archivos de clave utilizados para desbloquear toda la encriptación después de que GRUB (Español) recibe una frase de contraseña correcta en el arranque.\n\nEsta configuración utiliza un esquema de particionado muy simplificado, con todo el almacenamiento RAID disponible montado en / (sin partición /boot separada, y el disco HDD descifrado montado en /data.\n\nTenga en cuenta que es muy importante en este tipo de configuraciones realizar copias de seguridad del sistema regulares. Si cualquiera de los SSD falla, los datos contenidos en el conjunto RAID serán prácticamente imposibles de recuperar. Es posible que desee seleccionar un nivel RAID diferente si la tolerancia a los fallos es importante para usted.\n\nEl cifrado no es denegable en esta configuración.\n\nPara el ejemplo de las siguientes instrucciones, se utilizan los siguientes dispositivos de bloques:\n\n```\n/dev/sda = primer SSD\n/dev/sdb = segundo SSD\n/dev/sdc = HDD\n```\n\n```\n+---------------------+---------------------------+---------------------------+ +---------------------+---------------------------+---------------------------+ +---------------------------+\n| BIOS boot partition | EFI system partition (ESP)| volumen cifrado con LUKS1 | | BIOS boot partition | EFI system partition (ESP)| volumen cifrado con LUKS1 | | volumen cifrado con LUKS2 |\t\n|                     |                           |                           | |                     |                           |                           | |                           |\t\n|                     | /efi                      | /                         | |                     | /efi                      | /                         | | /data                     |\t\n|                     |                           |                           | |                     |                           |                           | |                           |\t\n|                     |                           | /dev/mapper/cryptroot     | |                     |                           | /dev/mapper/cryptroot     | |                           |\t\n|                     +---------------------------+---------------------------+ |                     +---------------------------+---------------------------+ |                           |\n|                     | matriz RAID1 (parte 1/2)  | matriz RAID0 (parte 1/2   | |                     | matriz RAID1 (parte 2/2)  | matriz RAID0 (parte 2/2)  | |                           |\n|                     |                           |                           | |                     |                           |                           | |                           |\t\n|                     | /dev/md/ESP               | /dev/md/root              | |                     | /dev/md/ESP               | /dev/md/root              | | /dev/mapper/cryptdata     |\t\n|                     +---------------------------+---------------------------+ |                     +---------------------------+---------------------------+ +---------------------------+\t\n| /dev/sda1           | /dev/sda2                 | /dev/sda3                 | | /dev/sdb1           | /dev/sdb2                 | /dev/sdb3                 | | /dev/sdc1                 |\n+---------------------+---------------------------+---------------------------+ +---------------------+---------------------------+---------------------------+ +---------------------------+\n```\n\nAsegúrese de sustituirlos por las designaciones de dispositivo apropiadas para su configuración, ya que pueden ser diferentes.\n\n"
    },
    {
      "title": "Preparar los discos",
      "level": 3,
      "content": "Antes de crear cualquier partición, debe informarse acerca de la importancia y los métodos para borrar de forma segura el disco, descrito en dm-crypt (Español)/Drive preparation (Español).\n\nPara sistemas BIOS con GPT, cree una BIOS boot partition (Español) con un tamaño de 1 MiB para que GRUB almacene la segunda etapa del cargador de arranque de BIOS. No monte dicha partición.\n\nFor sistemas UEFI cree una EFI system partition (Español) con un tamaño apropiado, luego móntela en /efi.\n\nEn el espacio restante en la unidad, cree una partición (/dev/sda3 en este ejemplo) para «Linux RAID.» Elija el ID del tipo de partición fd para MBR o el tipo de partición GUID A19D880F-05FC-4D3B-A006-743F0F84911E para GPT.\n\nUna vez que se ha creado las particiones en /dev/sda, se pueden usar las siguientes órdenes para clonarlas en /dev/sdb\n\n```\n# sfdisk -d /dev/sda > sda.dump\n# sfdisk /dev/sdb < sda.dump\n```\n\nEl disco HDD está preparado con una sola partición de Linux que cubre todo el disco en /dev/sdc1.\n\n"
    },
    {
      "title": "Compilar la matriz RAID",
      "level": 3,
      "content": "Cree la matriz RAID para las unidades SSD.\n\n- Todas las partes de una matriz RAID en una EFI system partition deben poder usarse individualmente, eso significa que ESP solo puede colocarse en una matriz RAID1;\n- El superbloque RAID debe colocarse al final de la partición del sistema EFI utilizando --metadata=1.0, de lo contrario, el firmware no podrá acceder a la partición.\n\n```\n# mdadm --create --verbose --level=0 --metadata=1.2 --raid-devices=2 /dev/md/root /dev/sda3 /dev/sdb3\n```\n\nEste ejemplo utiliza RAID0 para root, es posible que desee sustituir un nivel diferente según sus preferencias o requisitos.\n\n```\n# mdadm --create --verbose --level=0 --metadata=1.2 --raid-devices=2 /dev/md/root /dev/sda3 /dev/sdb3\n```\n\n"
    },
    {
      "title": "Preparar los dispositivos de bloque",
      "level": 3,
      "content": "Como se explica en dm-crypt (Español)/Drive preparation (Español), los dispositivos se limpian con datos aleatorios utilizando /dev/zero y un dispositivo de cifrado con una clave aleatoria. Alternativamente, puede usar dd con /dev/random o /dev/urandom, aunque será mucho más lento.\n\n```\n# cryptsetup open --type plain /dev/md0 container --key-file /dev/random\n# dd if=/dev/zero of=/dev/mapper/container bs=1M status=progress\n# cryptsetup close container\n```\n\nY repita lo anterior para la unidad HDD (/dev/sdc1 en este ejemplo).\n\nConfigure el cifrado para /dev/md/root :\n\n```\n# cryptsetup -y -v luksFormat --type luks1 /dev/md/root\n# cryptsetup open /dev/md/root cryptroot\n# mkfs.ext4 /dev/mapper/cryptroot\n# mount /dev/mapper/cryptroot /mnt\n```\n\nY repítalo para la unidad HDD:\n\n```\n# cryptsetup -y -v luksFormat /dev/sdc1\n# cryptsetup open /dev/sdc1 cryptdata\n# mkfs.ext4 /dev/mapper/cryptdata\n# mkdir /mnt/data\n# mount /dev/mapper/cryptdata /mnt/mnt/data\n```\n\nPara sistemas UEFI, configure la partición del sistema EFI:\n\n```\n# mkfs.fat -F32 /dev/md/ESP\t\n# mount /dev/md/ESP /mnt/efi\n```\n\n"
    },
    {
      "title": "Configurar GRUB",
      "level": 3,
      "content": "Configure GRUB (Español) para el sistema cifrado con LUKS1, modificando /etc/default/grub con lo siguiente:\n\n```\nGRUB_CMDLINE_LINUX=\"cryptdevice=/dev/md/root:cryptroot\"\nGRUB_ENABLE_CRYPTODISK=y\n```\n\nConsulte dm-crypt (Español)/System configuration (Español)#Cargador de arranque y GRUB (Español)#/boot cifrado para obtener más detalles.\n\nComplete la instalación de GRUB en ambas unidades SSD (en realidad, la instalación solo funcionará para /dev/sda).\n\n```\n# grub-install --target=i386-pc /dev/sda\n# grub-install --target=i386-pc /dev/sdb\n# grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB\n# grub-mkconfig -o /boot/grub/grub.cfg\n```\n\n"
    },
    {
      "title": "Crear los archivos de claves",
      "level": 3,
      "content": "Los próximos pasos le ahorran que tenga que ingresar su contraseña dos veces cuando inicia el sistema (una vez para que GRUB pueda desbloquear el dispositivo LUKS1, y la segunda vez cuando initramfs asume el control del sistema). Esto se hace creando un archivo de claves para el cifrado y añadiéndolo a la imagen de initramfs para permitir que el hook encrypt desbloquee el dispositivo raíz. Consulte dm-crypt (Español)/Device encryption (Español)#Con un archivo de clave incrustado en initramfs para más detalles.\n\n- Cree el archivo de claves y agregue la clave para /dev/md/root.\n- Cree otro archivo de claves para la unidad HDD (/dev/sdc1) para que también se pueda desbloquear al arrancar. Para su comodidad, deje la contraseña creada anteriormente en su lugar, ya que esto puede facilitar la recuperación si alguna vez la necesita. Modifique /etc/crypttab para descifrar la unidad HDD al arrancar. Vea dm-crypt (Español)/System configuration (Español)#Desbloquear con archivo de claves.\n\n"
    },
    {
      "title": "Configurar el sistema",
      "level": 3,
      "content": "Modifique fstab para montar los dispositivos de bloques cryptroot y cryptdata y la ESP:\n\n```\n/dev/mapper/cryptroot  /           ext4    rw,noatime  0   1 \n/dev/mapper/cryptdata  /mnt/data   ext4    defaults            0   2  \n/dev/md/ESP            /efi        vfat    rw,relatime,codepage=437,iocharset=iso8859-1,shortname=mixed,utf8,tz=UTC,errors=remount-ro  0   2\n```\n\nGuarde la configuración de RAID:\n\n```\n# mdadm --detail --scan >> /etc/mdadm.conf\n```\n\nModifique mkinitcpio (Español) para incluir su archivo de claves y agregar los hooks adecuados:\n\n```\nFILES=(/crypto_keyfile.bin)\nHOOKS=(base udev autodetect keyboard keymap consolefont modconf block mdadm_udev encrypt filesystems fsck)\n```\n\nConsulte dm-crypt (Español)/System configuration (Español)#mkinitcpio para conocer más detalles.\n\n"
    },
    {
      "title": "Modalidad plain de dm-crypt",
      "level": 2,
      "content": "Contrariamente a LUKS, la modalidad plain de dm-crypt no requiere una cabecera en el disco cifrado: esto significa que un disco cifrado sin particionar será indistinguible de un disco lleno con datos aleatorios, que podría permitir cifrado negable. Véase también Wikipedia:es:Cifrado de disco#Completo cifrado de disco.\n\nTenga en cuenta que si no necesita cifrar el disco completo, los métodos que utilizan LUKS descritos anteriormente son las mejores opciones para el cifrado del sistema y de las particiones. Características de LUKS como la gestión de claves con múltiples frases de contraseñas/archivos de claves no están disponibles con la modalidad plain.\n\nLos discos cifrados con la modalidad plain de dm-crypt pueden ser más resistentes a los daños que los discos cifrados con LUKS, ya que no se basan en una clave maestra de cifrado, la cual constituye un punto vulnerable único de fallo si se daña. Sin embargo, utilizando el modo plain también se requiere una configuración más manual de las opciones de cifrado para lograr la misma fuerza criptográfica. Véase también Disk encryption (Español)#Metadatos criptográficos. También se puede considerar el uso de la modalidad plain si se trata de los problemas explicados en dm-crypt (Español)/Specialties (Español)#Soporte Discard/TRIM para unidades de estado sólido (SSD).\n\n- tcplay que ofrece cifrado sin cabeceras, pero con la función PBKDF2, o\n- la modalidad LUKS de dm-crypt utilizando la opción --header de cryptsetup. No se podrá utilizar el hook estándar encrypt, pero dicho hook puede ser modificado.\n\nEl escenario utiliza una memoria USB:\n\n- una para el dispositivo de arranque que también permite almacenar las opciones necesarias para abrir/desbloquear el dispositivo cifrado simple en la configuración del gestor de arranque, ya que escribirlos en cada arranque sería propenso a errores;\n- y otra para almacenar la clave de cifrado asumiendo que está almacenada como bits en bruto de modo que a los ojos de un atacante que no esté al tanto que quiera obtener la clave usb, la clave de cifrado se mostrará como datos aleatorios en lugar de ser visible como un archivo normal. Véase también Wikipedia:es:Seguridad por oscuridad, y siga con dm-crypt/Device encryption#Keyfiles para preparar el archivo de claves.\n\nEl esquema de particionado del disco es:\n\n```\n+----------------------+----------------------+----------------------+ +-------------------------+ +--------------------------+\n| Volumen lógico 1     | Volumen lógico 2     | Volumen lógico 3     | | Dispositivo de arranque | | Depósito para el archivo |\n|                      |                      |                      | |                         | | de claves de cifrado     |\n| /                    | [SWAP]               | /home                | | /boot                   | | (sin particionar         |\n|                      |                      |                      | |                         | | en el ejemplo)           |\n| /dev/MyVolGroup/root | /dev/MyVolGroup/swap | /dev/MyVolGroup/home | | /dev/sdb1               | | /dev/sdc                 |\n|----------------------+----------------------+----------------------| |-------------------------| |--------------------------|\n| unidad/disco /dev/sda cifrado con modo plain y LVM                 | | USB 1                   | | USB 2                    |\n+--------------------------------------------------------------------+ +-------------------------+ +--------------------------+\n```\n\n- También es posible utilizar una sola llave USB física: mediante la coloación de la clave en otra partición (/dev/sdb2) del dispositivo de almacenamiento USB (/dev/sdb); mediante la copia del archivo de claves a la imagen initramfs directamente. Un ejemplo de archivo de claves /etc/keyfile copiado a la imagen initramfs se hace estableciendo FILES=\"/etc/keyfile\" en /etc/mkinitcpio.conf. La manera de instruir al hook encrypt para que lea el archivo de claves en la imagen initramfs es utilizando el prefijo rootfs: delante del nombre del archivo, por ejemplo cryptkey=rootfs:/etc/keyfile.\n- Otra opción es usar una frase de acceso con buena entropía.\n\n- mediante la coloación de la clave en otra partición (/dev/sdb2) del dispositivo de almacenamiento USB (/dev/sdb);\n- mediante la copia del archivo de claves a la imagen initramfs directamente. Un ejemplo de archivo de claves /etc/keyfile copiado a la imagen initramfs se hace estableciendo FILES=\"/etc/keyfile\" en /etc/mkinitcpio.conf. La manera de instruir al hook encrypt para que lea el archivo de claves en la imagen initramfs es utilizando el prefijo rootfs: delante del nombre del archivo, por ejemplo cryptkey=rootfs:/etc/keyfile.\n\n"
    },
    {
      "title": "Preparar el disco",
      "level": 3,
      "content": "Es de vital importancia que el dispositivo mapeado está lleno de datos aleatorios. En particular, esto se aplica al caso que nos afecta.\n\nVéase dm-crypt (Español)/Drive preparation (Español) y dm-crypt (Español)/Drive preparation (Español)#Métodos específicos de dm-crypt\n\n"
    },
    {
      "title": "Preparar las particiones que no son de arranque (boot)",
      "level": 3,
      "content": "Consulte dm-crypt (Español)/Device encryption (Español)#Opciones de cifrado para la modalidad plain para más detalles.\n\nUtilizando el dispositivo /dev/sda, con el cifrado aes-xts con un tamaño de clave de 512 bits, y un archivo de clave, tenemos las siguientes opciones para este escenario:\n\n```\n# cryptsetup --cipher=aes-xts-plain64 --offset=0 --key-file=/dev/sdc --key-size=512 open --type plain /dev/sda cryptlvm\n```\n\nA diferencia del cifrado con LUKS, la orden anterior se debe ejecutar en su totalidad siempre que sea necesario restablecer el mapeado, por lo que es importante recordar los detalles del cifrado, el hash y el archivo de claves.\n\nAhora podemos comprobar que se ha realizado una entrada de mapeo para /dev/mapper/cryptlvm:\n\n```\n# fdisk -l\n```\n\nA continuación, configuramos volúmenes lógicos LVM (Español) en el dispositivo mapeado. Consulte LVM (Español)#Instalar Arch Linux sobre LVM para obtener más detalles:\n\n```\n# pvcreate /dev/mapper/cryptlvm\n# vgcreate MyVolGroup /dev/mapper/cryptlvm\n# lvcreate -L 32G MyVolGroup -n root\n# lvcreate -L 10G MyVolGroup -n swap\n# lvcreate -l 100%FREE MyVolGroup -n home\n```\n\n] Formateamos y montamos y, luego, activamos el espacio de intercambio. Consulte File systems (Español)#Crear un sistema de archivos para más detalles:\n\n```\n# mkfs.ext4 /dev/MyVolGroup/root\n# mkfs.ext4 /dev/MyVolGroup/home\n# mount /dev/MyVolGroup/root /mnt\n# mkdir /mnt/home\n# mount /dev/MyVolGroup/home /mnt/home\n# mkswap /dev/MyVolGroup/swap\n# swapon /dev/MyVolGroup/swap\n```\n\n"
    },
    {
      "title": "Preparar la partición de arranque",
      "level": 3,
      "content": "La partición /boot se puede instalar en la partición vfat estándar de una memoria USB, si es necesario. Pero si se ve en la necesidad de realizar el particionado manualmente, entonces podría crear una pequeña partición de 200 MiB, lo que sería suficiente. Cree la partición utilizando una utilidad de particionado de su elección.\n\nCree un sistema de archivos en la partición destinada a /boot, si no está ya formateada como vfat:\n\n```\n# mkfs.ext4 /dev/sdb1\n# mkdir /mnt/boot\n# mount /dev/sdb1 /mnt/boot\n```\n\n"
    },
    {
      "title": "Configurar mkinitcpio",
      "level": 3,
      "content": "Añada los hooks keyboard, encrypt and lvm2 a mkinitcpio (Español):\n\n```\nHOOKS=(base udev autodetect keyboard keymap consolefont modconf block encrypt lvm2 filesystems fsck)\n```\n\nVéase dm-crypt (Español)/System configuration (Español)#mkinitcpio para conocer más detalles y otros hooks que pueda necesitar.\n\n"
    },
    {
      "title": "Configurar el gestor de arranque",
      "level": 3,
      "content": "Con el fin de desbloquear la partición raíz cifrada en el arranque, es necesario pasar los siguientes parámetros del kernel al gestor de arranque (tenga en cuenta que 64 es el número de bytes en 512 bits)::\n\n```\ncryptdevice=/dev/disk/by-id/disk-ID-of-sda:cryptlvm cryptkey=/dev/disk/by-id/disk-ID-of-sdc:0:64 crypto=:aes-xts-plain64:512:0:\n```\n\nEl disk-ID-of-disk se refiere a la identificación del disco al que se hace referencia. Véase Persistent block device naming (Español) par más detalles.\n\nVéase dm-crypt (Español)/System configuration (Español)#Cargador de arranque para conocer más detalles y otros parámetros que pueda necesitar\n\n```\n# grub-install --recheck /dev/sdb\n```\n\n"
    },
    {
      "title": "Posinstalación",
      "level": 3,
      "content": "Podemos retirar la memoria USB después de arrancar. Ya que la partición /boot, generalmente, no se necesita, la opción noauto se puede agregar en la línea correspondiente de /etc/fstab:\n\n```\n/etc/fstab\n```\n\n```\n# /dev/sdb1\n/dev/sdb1 /boot ext4 noauto,rw,noatime 0 2\n```\n\nSin embargo, cuando se requiere una actualización de cualquier cosa utilizada en initramfs, o un kernel, o el gestor de arranque, la partición /boot debe estar presente y montada. Como la entrada en fstab ya existe, se puede montar de forma sencilla con:\n\n```\n# mount /boot\n```\n\n"
    },
    {
      "title": "Cifrar partición de arranque (GRUB)",
      "level": 2,
      "content": "Esta configuración utiliza el mismo diseño y configuración de partición que la sección anterior #LVM sobre LUKS, con la diferencia de que se utiliza el cargador de arranque GRUB (Español) ya que es capaz de arrancar desde un volumen lógico LVM y un /boot cifrado con LUKS1. Véase también GRUB (Español)#/boot cifrado.\n\nLa distribución del disco en este ejemplo es:\n\n```\n+---------------------+----------------------+----------------------+----------------------+----------------------+\n| Partición           | Partición            | Volumen lógico 1     | Volumen lógico 2     | Volumen lógico 3     |\n| BIOS boot partition | EFI system particion |                      |                      |                      |\n|                     | /efi                 | /                    | [SWAP]               | /home                |\n|                     |                      |                      |                      |                      |\n|                     |                      | /dev/MyVolGroup/root | /dev/MyVolGroup/swap | /dev/MyVolGroup/home |\n| /dev/sda1           | /dev/sda2            +----------------------+----------------------+----------------------+\n| sin cifrar          | sin cifrar           | /dev/sda3 cifrado usando LVM sobre LUKS1                           |\n+---------------------+----------------------+--------------------------------------------------------------------+\n```\n\n- Todos los escenarios tienen el propósito de ejemplos. Es, por supuesto, posible combinar los dos pasos anteriores de las distintas instalaciones con otros escenarios posibles. Ver también las variantes asociadas a #LVM sobre LUKS;\n- Puede utilizar el script cryptboot del paquete cryptbootAUR para una administración de arranque cifrada simplificada (montaje, desmontaje, actualización de paquetes) y como defensa contra ataques de Evil Maid con Secure Boot de UEFI. Para obtener más información y limitaciones, consulte la página cryptboot project.\n\n"
    },
    {
      "title": "Preparar el disco",
      "level": 3,
      "content": "Antes de crear las particiones, debe informarse sobre la importancia y los métodos para borrar de forma segura el disco, descrito en dm-crypt (Español)/Drive preparation (Español).\n\nPara sistemas BIOS cree una BIOS boot partition con tamaño de 1 MiB para GRUB para almacenar la segunda etapa del gestor de arranque BIOS. No monte la partición.\n\nPara sistemas UEFI cree una EFI system partition (Español) con un tamaño apropiado, para luego montarla en /efi.\n\nCree una partición del tipo 8309, which will later contain the encrypted container for the LVM.\n\nCree el contenedor cifrado con LUKS:\n\n```\n# cryptsetup luksFormat --type luks1 /dev/sda3\n```\n\nPara obtener más información sobre las opciones disponibles de cryptsetup vea LUKS encryption options antes de ejecutar la orden anterior.\n\nSu esquema de particinado debería ser similar a esto:\n\n```\n# gdisk -l /dev/sda\n```\n\n```\nNumber  Start (sector)    End (sector)  Size       Code  Name\n   1            2048            4095   1024.0 KiB  EF02  BIOS boot partition\n   2            4096         1130495   550.0 MiB   EF00  EFI System\n   3         1130496        68239360   32.0 GiB    8309  Linux LUKS\n```\n\nAbra el contenedor:\n\n```\n# cryptsetup open /dev/sda3 cryptlvm\n```\n\nEl contenedor desbloqueado estará ahora disponible como /dev/mapper/cryptlvm.\n\n"
    },
    {
      "title": "Preparar los volúmenes lógicos",
      "level": 3,
      "content": "Los volúmenes lógicos LVM de este ejemplo siguen el mismo esquema descrito en el escenario #LVM sobre LUKS. Por lo tanto, siga la sección #Preparar los volúmenes lógicos de arriba o haga los ajustes necesarios.\n\nIf you plan to boot in UEFI mode, create a mountpoint for the EFI system partition (Español) at /efi for compatibility with grub-install and mount it:\n\n```\n# mkdir /mnt/efi\n# mount /dev/sda2 /mnt/efi\n```\n\nEn este punto, debe tener las siguientes particiones y volúmenes lógicos dentro de /mnt:\n\n```\n$ lsblk\n```\n\n```\nNAME                  MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT\nsda                   8:0      0   200G  0 disk\n├─sda1                8:1      0     1M  0 part\n├─sda2                8:2      0   550M  0 part  /mnt/efi\n├─sda3                8:3      0   200M  0 part\n  └─cryptlvm          254:0    0   198M  0 crypt /boot\n    ├─MyVolGroup-swap 254:1    0     8G  0 lvm   [SWAP]\n    ├─MyVolGroup-root 254:2    0    32G  0 lvm   /\n    └─MyVolGroup-home 254:3    0    60G  0 lvm   /mnt/home\n```\n\n"
    },
    {
      "title": "Configurar mkinitcpio",
      "level": 3,
      "content": "Añada los hooks keyboard, encrypt y lvm2 a mkinitcpio (Español):\n\n```\nHOOKS=(base udev autodetect keyboard keymap consolefont modconf block encrypt lvm2 filesystems fsck)\n```\n\nSi utiliza el hook sd-encrypt con initramfs basado en systemd se debe establecer lo siguiente en su lugar:\n\n```\nHOOKS=(base systemd autodetect keyboard sd-vconsole modconf block sd-encrypt sd-lvm2 filesystems fsck)\n```\n\nVéase dm-crypt (Español)/System configuration (Español)#mkinitcpio para más detalles y otros hooks que pueda necesitar.\n\n"
    },
    {
      "title": "Configurar GRUB",
      "level": 3,
      "content": "Configure GRUB para que reconozca la partición /boot cifrada con LUKS1:\n\n```\n/etc/default/grub\n```\n\n```\nGRUB_ENABLE_CRYPTODISK=y\n```\n\nEstablezca los parámetros del kernel para que initramfs pueda desbloquear la partición raíz cifrada. Usando el hook encrypt:\n\n```\n/etc/default/grub\n```\n\n```\nGRUB_CMDLINE_LINUX=\"... cryptdevice=UUID=UUID-del-dispositivo:cryptlvm ...\"\n```\n\nSi utiliza el hook sd-encrypt, se debe configurar lo siguiente en su lugar:\n\n```\n/etc/default/grub\n```\n\n```\nGRUB_CMDLINE_LINUX=\"... rd.luks.name=UUID-del-dispositivo=cryptlvm\" ...\n```\n\nVéase Dm-crypt (Español)/System configuration (Español)#Cargador de arranque y GRUB (Español)#/boot cifrado para obtener más detalles. El UUID-del-dispositivo hace referencia al UUID de /dev/sda4 (la partición física que aloja el volumen, la cual contiene a su vez el sistema de archivos raíz, no es dispositivo mapeado resultante del cifrado). Vea Persistent block device naming (Español).\n\nInstale GRUB con la ESP montada para arrancar UEFI:\n\n```\n# grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB --recheck\n```\n\nInstale GRUB en el disco para arrancar BIOS:\n\n```\n# grub-install --target=i386-pc --recheck /dev/sda\n```\n\nGenere el archivo de configuration de GRUB :\n\n```\n# grub-mkconfig -o /boot/grub/grub.cfg\n```\n\nSi todos las órdenes terminaron sin errores, GRUB le pedirá la contraseña para desbloquear la partición /dev/sda3 en el siguiente reinicio.\n\n"
    },
    {
      "title": "Evitar tener que ingresar la frase de contraseña dos veces",
      "level": 3,
      "content": "Si bien GRUB solicita una frase de contraseña para desbloquear la partición cifrada con LUKS1m siguiendo las instrucciones anteriores, el desbloqueo de la partición no se transfiere a initramfs. Por lo tanto, debe ingresar la frase de contraseña dos veces en el arranque: una para GRUB y otra para initramfs.\n\nEsta sección trata sobre la configuración adicional para permitir que el sistema arranque solo ingresando la frase de contraseña una vez, en GRUB. Esto se logra mediante un archivo de claves incrustado en initramfs.\n\nPrimero cree un archivo de claves y añádalo como clave de LUKS:\n\n```\n# dd bs=512 count=4 if=/dev/random of=/root/cryptlvm.keyfile iflag=fullblock\n# chmod 000 /root/cryptlvm.keyfile\n# chmod 600 /boot/initramfs-linux*\t\n# cryptsetup -v luksAddKey /dev/sda3 /root/cryptlvm.keyfile\n```\n\nAñada el archivo de claves a la imagen initramfs:\n\n```\n/etc/mkinitcpio.conf\n```\n\n```\nFILES=(/root/cryptlvm.keyfile)\n```\n\nEstablezca los siguientes parámetros del kernel para desbloquear la partición LUKS con el archivo de claves. Usando el hook encrypt:\n\n```\nGRUB_CMDLINE_LINUX=\"... cryptkey=rootfs:/root/cryptlvm.keyfile\"\n```\n\nO, usando el hook sd-encrypt:\n\n```\nGRUB_CMDLINE_LINUX=\"... rd.luks.key=UUID-del-dispositivo=/root/cryptlvm.keyfile\"\n```\n\nSi por alguna razón el archivo de claves no puede desbloquear la partición de arranque, systemd se repliega para pedir una contraseña para desbloquear y, en caso de que sea correcta, continuar el arranque.\n\n"
    },
    {
      "title": "Subvolúmenes btrfs con espacio de intercambio",
      "level": 2,
      "content": "El siguiente ejemplo crea un cifrado completo del sistema con LUKS1 utilizando subvolúmenes Btrfs como una simulación de particiones.\n\nSi utiliza UEFI, se requiere una EFI system partition (Español) (siglas en inglés ESP). El mismo /boot puede residir en la raíz / y estar cifrado; sin embargo, la ESP no puede cifrase. En este esquema propuesto de ejemplo, la ESP es /dev/sda1 y está montada en /efi. /boot se encuentra en la partición del sistema, /dev/sda2.\n\nDado que /boot reside en la raiz / cifrada con LUKS1, GRUB (Español) debe usarse como gestor de arranque, porque solo GRUB puede cargar los módulos necesarios para descifrar /boot (por ejemplo, crypto.mod, cryptodisk.mod y luks.mod).\n\nAdemás, se el esquema muestra una partición opcional de swap cifrada con plain.\n\n```\n+----------------------------------+-------------------------------+--------------------------+\n| Partición «EFI system partition» | Partición del sistema         | Partición de intercambio |\n| sin cifrar                       | cifrada con LUKS1             | cifrada con plain        |\n|                                  |                               |                          |\n| /efi                             | /                             | [SWAP]                   |\n| /dev/sda1                        | /dev/sda2                     | /dev/sda3                |\n|----------------------------------+-------------------------------+--------------------------+\n```\n\n"
    },
    {
      "title": "Preparar el disco",
      "level": 3,
      "content": "Antes de crear cualquier partición, debe informarse acerca de la importancia y los métodos para borrar de forma segura el disco, descrito en dm-crypt (Español)/Drive preparation (Español). Si está utilizando UEFI (Español), cree una EFI system partition (Español) con un tamaño apropiado. Posteriormente se montará en /efi. Si va a crear una partición de intercambio cifrada, crea la partición para ella, pero no la marque como swap, ya que se usará la modalidad plain de dm-crypt para cifrar la partición.\n\nCree las particiones necesarias, al menos una para la raíz / (por ejemplo, /dev/sda2). Vea el artículo Partitioning (Español).\n\n"
    },
    {
      "title": "Crear contenedor LUKS",
      "level": 4,
      "content": "Siga la sección dm-crypt (Español)/Device encryption (Español)#Opciones de cifrado para la modalidad LUKS para configurar /dev/sda2 para LUKS. Consulte dm-crypt (Español)/Device encryption (Español)#Opciones de cifrado para la modalidad LUKS antes de hacerlo para obtener una lista de opciones de cifrado.\n\n"
    },
    {
      "title": "Desbloquear el contenedor LUKS",
      "level": 4,
      "content": "Ahora siga las instrucciones de dm-crypt (Español)/Device encryption (Español)#Desbloquear/mapear particiones LUKS con el mapeador de dispositivos para desbloquear el contenedor LUKS y mapearlo.\n\n"
    },
    {
      "title": "Formatear el dispositivo mapeado",
      "level": 4,
      "content": "Proceda a formatear el dispositivo mapeado como se describe en Btrfs (Español)#Sistema de archivos en un único dispositivo, donde /dev/partition es el nombre del dispositivo mapeado (es decir, cryptroot) y no /dev/sda2.\n\n"
    },
    {
      "title": "Montar el dispositivo mapeado",
      "level": 4,
      "content": "Finalmente, monte el dispositivo mapeado ahora formateado (es decir, /dev/mapper/cryptroot) en /mnt.\n\n"
    },
    {
      "title": "Esquema",
      "level": 4,
      "content": "Los subvolúmenes se usarán para simular particiones, pero también se crearán otros subvolúmenes (anidados). Aquí hay una representación parcial de lo que generará el siguiente ejemplo:\n\n```\nsubvolid=5 (/dev/sda2)\n   |\n   ├── @ (montado como /)\n   |       |\n   |       ├── /bin (directorio)\n   |       |\n   |       ├── /home (montado subvolumen @home)\n   |       |\n   |       ├── /usr (directorio)\n   |       |\n   |       ├── /.snapshots (montado subvolumen @snapshots)\n   |       |\n   |       ├── /var/cache/pacman/pkg (subvolumen anidado)\n   |       |\n   |       ├── ... (otros directorios y subvolúmenes anidados)\n   |\n   ├── @snapshots (montado como /.snapshots)\n   |\n   ├── @home (montado como /home)\n   |\n   └── @... (subvolúmenes adicionales que desee usar como puntos de montaje)\n```\n\nEsta sección sigue la sección Snapper#Suggested filesystem layout, que es más útil cuando se usa con Snapper. También debe consultar Btrfs Wiki SysadminGuide#Layout.\n\n"
    },
    {
      "title": "Crear subvolúmenes de nivel superior",
      "level": 4,
      "content": "Aquí estamos usando la convención de prefijo @ para los nombres de subvolumen que se usarán como puntos de montaje, y @ será el subvolumen que se monta como /.\n\nSiguiendo el artículo Btrfs (Español)#Crear un subvolumen, cree subvolúmenes en /mnt/@, /mnt/@snapshots, y /mnt/@home.\n\nCree cualquier subvolúmenes adicional que desee usar como puntos de montaje ahora.\n\n"
    },
    {
      "title": "Montar subvolúmenes de nivel superior",
      "level": 4,
      "content": "Desmonte la partición del sistema de /mnt.\n\nAhora monte el subvolumen @ recién creado que servirá como raíz / en /mnt utilizando la opción de montaje subvol=. Suponiendo que el dispositivo mapeado se llama cryptroot, la orden se emitiría así:\n\n```\n# mount -o compress=lzo,subvol=@ /dev/mapper/cryptroot /mnt\n```\n\nVéase Btrfs (Español)#Montar subvolúmenes para obtener más detalles.\n\nMonte también los otros subvolúmenes en sus respectivos puntos de montaje: @home en /mnt/home y @snapshots en /mnt/.snapshots.\n\n"
    },
    {
      "title": "Crear subvolúmenes anidados",
      "level": 4,
      "content": "Cree cualquier subvolumen del que no quiera tener instantáneas de cuando haga instantánea de la raíz /. Por ejemplo, probablemente no desee tomar instantáneas de /var/cache/pacman/pkg. Estos subvolúmenes estarán anidados bajo el subvolumen @, pero con la misma facilidad podrían haber sido creados anteriormente al mismo nivel que @ de acuerdo con sus preferencia.\n\nDado que el subvolumen @ está montado en /mnt, necesitará crear un subvolumen en /mnt/var/cache/pacman/pkg para este ejemplo. Es posible que primero tenga que crear cualquier directorio padre.\n\nOtros directorios con los que puede hacer esto son /var/abs, /var/tmp, and /srv.\n\n"
    },
    {
      "title": "Montar ESP",
      "level": 4,
      "content": "Si preparó una partición de sistema EFI anteriormente, cree su punto de montaje y móntela ahora.\n\nEn el paso de la instalación con pacstrap, debe instalarse el paquete btrfs-progs además del grupo base.\n\n"
    },
    {
      "title": "Crear archivo de claves",
      "level": 4,
      "content": "Para que GRUB abra la partición LUKS sin que el usuario tenga que ingresar dos veces su contraseña, usaremos un archivo de clave incrustado en initramfs. Siga dm-crypt (Español)/Device encryption (Español)#Con un archivo de clave incrustado en initramfs y asegúrese de agregar la clave de /dev/sda2 en el paso luksAddKey.\n\n"
    },
    {
      "title": "Editar mkinitcpio.conf",
      "level": 4,
      "content": "Después de crear, agregar e incrustar la clave como se describe arriba, añada el hook encrypt en mkinitcpio (Español), así como cualquier otro hook que necesite. Consulte dm-crypt (Español)/System configuration (Español)#mkinitcpio para obtener información detallada.\n\n"
    },
    {
      "title": "Configurar el gestor de arranque",
      "level": 3,
      "content": "Instale GRUB (Español) en /dev/sda. A continuación, modifique /etc/default/grub como se indica en el artículo GRUB (Español)#Argumentos adicionales and GRUB (Español)#/boot cifrado, siguiendo las instrucciones de una partición raíz y de arranque cifradas. Finalmente, genere el archivo de configuración GRUB.\n\n"
    },
    {
      "title": "Configurar el espacio de intercambio",
      "level": 3,
      "content": "Si creó una partición de intercambio cifrada, ahora es el momento de configurarla. Siga las instrucciones dadas en dm-crypt (Español)/Swap encryption (Español).\n\n"
    }
  ]
}
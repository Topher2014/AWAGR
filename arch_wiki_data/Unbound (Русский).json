{
  "title": "Unbound (Русский)",
  "url": "https://wiki.archlinux.org/title/Unbound_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Domain name resolution (Русский)\n\nUnbound это удостоверяющий, рекурсивный и кеширующий DNS сервер. Согласно Википедии:\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет unbound.\n\nДополнительно, пакет expat требуется для #Проверка достоверности DNSSEC.\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "Стандартные настройки уже находятся в файле /etc/unbound/unbound.conf. Следующие разделы освещают различные настройки для файла конфигурации. Подробности и другие настройки смотреть в unbound.conf(5).\n\nЕсли не указано другое, все нижеописанные опции находятся в секции server конфигурационного файла таким образом:\n\n```\n/etc/unbound/unbound.conf\n```\n\n```\nserver:\n  ...\n  setting: value\n  ...\n```\n\n"
    },
    {
      "title": "Локальный DNS сервер",
      "level": 3,
      "content": "Если вы хотите использовать unbound как ваш локальный DNS сервер, установите в строке nameserver loopback адреса 127.0.0.1 и ::1:\n\n```\n/etc/resolv.conf\n```\n\n```\nnameserver ::1\nnameserver 127.0.0.1\noptions trust-ad\n```\n\nУдостоверьтесь, что файл /etc/resolv.conf защищен от записи как описано в Domain name resolution (Русский)#Перезапись файла /etc/resolv.conf.\n\nNote: Затем выполнить resolvconf -u чтобы сгенерировать /etc/resolv.conf.\n\n```\n/etc/resolvconf.conf\n```\n\n```\nname_servers=\"::1 127.0.0.1\"\nresolv_conf_options=\"trust-ad\"\n```\n\nЗатем выполнить resolvconf -u чтобы сгенерировать /etc/resolv.conf.\n\nПросмотрите Domain name resolution (Русский)#Утилиты для различных способов проверить ваши настройки\n\nПри проверке, удостоверьтесь, что используемый сервер имеет адрес 127.0.0.1 или ::1 после применения изменений в resolv.conf.\n\nВ разделе #Переадресация запросов вы можете настроить unbound для переадресации запросов к нужным DNS серверам, если требуется.\n\n"
    },
    {
      "title": "Корневые подсказки (Root hints)",
      "level": 3,
      "content": "Для рекурсивных запросов хоста который не имеет требуемого адреса в кеше, вашему DNS серверу нужно знать адреса корневых DNS серверов, у которых он будет запрашивать адреса DNS серверов доменов верхнего уровня и далее по цепочке, пока не будет достигнут именной сервер, обслуживающий запрашиваемый домен. Для этого требуются корневые подсказки (Root hints), файл содержащий в себе IP адреса корневых DNS серверов. Unbound имеет встроенные корневые подсказки, и если он обновляется регулярно, вмешательства не требуется. С другой стороны хорошей практикой является самостоятельное сопровождение корневых подсказок, так как встроенные могут потерять актуальность.\n\nДля начала укажите unbound путь к файлу root.hints:\n\n```\nroot-hints: root.hints\n```\n\nЗатем, поместите файл root.hints в директорию unbound. Простой способ сделать это можно этой командой:\n\n```\n# curl --output /etc/unbound/root.hints https://www.internic.net/domain/named.cache\n```\n\nЕсли вы все таки используете этот файл вместо встроенных корневых подсказок, для поддержания актуальности нужно обновлять root.hints как минимум раз в шесть месяцев. Вы можете делать это вручную или используя Systemd/Timers. Смотрите пример файла службы в разделе #Служба systemd для обновления корневых подсказок.\n\n"
    },
    {
      "title": "Проверка достоверности DNSSEC",
      "level": 3,
      "content": "Для того, чтобы проверять достоверность домена с помощью DNSSEC, в файле конфигурации требуется указать путь файла trust anchor:\n\n```\n/etc/unbound/unbound.conf\n```\n\n```\ntrust-anchor-file: trusted-key.key\n```\n\nЭта опция включена по умолчанию[1]. /etc/unbound/trusted-key.key копируется из файла /etc/trusted-key.key, предоставленного зависимостью dnssec-anchors, которой PKGBUILD (Русский) генерирует этот файл, подробнее unbound-anchor(8).\n\nПроверка достоверности DNSSEC будет выполнятся только если запрашиваемый DNS сервер поддерживает эту технологию. Если в #Переадресация запросов были указаны сервера, не поддерживающие DNSSEC, все их ответы на запросы будут рассматриваться как небезопасные, так как невозможно доказать обратное.\n\n"
    },
    {
      "title": "Тестирование работоспособности",
      "level": 4,
      "content": "Для проверки работоспособности DNSSEC, после запуска службы unbound.service выполните:\n\n```\n$ unbound-host -C /etc/unbound/unbound.conf -v sigok.verteiltesysteme.net\n```\n\nВ ответе должен быть IP адрес и (secure) после него.\n\n```\n$ unbound-host -C /etc/unbound/unbound.conf -v sigfail.verteiltesysteme.net\n```\n\nЭтот ответ должен содержать (BOGUS (security failure)).\n\nТак же вы можете использовать drill для проверки вашего сервера следующими командами:\n\n```\n$ drill sigfail.verteiltesysteme.net\n$ drill sigok.verteiltesysteme.net\n```\n\nПервая команда должна в переменной rcode выдать SERVFAIL. Вторая команда должна выдать NOERROR.\n\n"
    },
    {
      "title": "Переадресация запросов",
      "level": 3,
      "content": "Если вам необходимо только перенаправлять DNS запросы на внешний DNS сервер, можете сразу перейти к #Переадресация остальных запросов.\n\n"
    },
    {
      "title": "Доступ локальной сети к DNS",
      "level": 4,
      "content": "Если ваш сетевой менеджер поддерживает Openresolv (Русский), вы можете настроить его для предоставления доступа локальных DNS серверов и доменов к Unbound:\n\n```\n/etc/resolvconf.conf\n```\n\n```\n...\nprivate_interfaces=\"*\"\n\n# Путь к конфигурационному файлу для Unbound\nunbound_conf=/etc/unbound/resolvconf.conf\n```\n\nВыполните resolvconf -u для внесения изменений.\n\nНастройте Unbound для чтения файла, сгенерированного openresolv и разрешите содержать в ответных сообщениях диапазоны частных IP-адресов[2]:\n\n```\n/etc/unbound/unbound.conf\n```\n\n```\ninclude: \"/etc/unbound/resolvconf.conf\"\n...\nserver:\n...\n\tprivate-domain: \"intranet\"\n\tprivate-domain: \"internal\"\n\tprivate-domain: \"private\"\n\tprivate-domain: \"corp\"\n\tprivate-domain: \"home\"\n\tprivate-domain: \"lan\"\n\n\tunblock-lan-zones: yes\n\tinsecure-lan-zones: yes\n...\n```\n\nВы также можете выключить проверку достоверности DNSSEC для локальных доменов, так как они не могут подтвердить свою достоверность (подробнее RFC 6762 Appendix G):\n\n```\n/etc/unbound/unbound.conf\n```\n\n```\n...\nserver:\n...\n\tdomain-insecure: \"intranet\"\n\tdomain-insecure: \"internal\"\n\tdomain-insecure: \"private\"\n\tdomain-insecure: \"corp\"\n\tdomain-insecure: \"home\"\n\tdomain-insecure: \"lan\"\n...\n```\n\nБудет полезным исключить из ответов DNS сервера адреса из диапазонов частных IP-адресов, так как это защитит от уязвимости перепривязывания DNS. По умолчанию данная функция не включена, что бы добавить нужную подсеть в список исключения из ответа DNS сервера используйте данный шаблон:\n\n```\nprivate-address: локальная_подсеть/маска_подсети\n```\n\nВы можете добавить эти строки в ваш конфигурационный файл для исключения всего диапазона частных адресов:\n\n```\nprivate-address:  10.0.0.0/8\nprivate-address:  172.16.0.0/12\nprivate-address:  192.168.0.0/16\nprivate-address:  169.254.0.0/16\nprivate-address:  fd00::/8\nprivate-address:  fe80::/10\n```\n\nСтоит заметить, что блокированные с помощью параметра private-address адреса все еще можно получить в ответах от DNS сервера, если они принадлежат доменам из private-domain, либо содержаться в local-data. Поэтому для работоспособности запросов локальных доменов настройте Unbound как указано этом разделе #Используя openresolv.\n\nДля использования локального DNS сервер для прямого и обратного поиска локальных адресов добавьте нужные зоны как показано ниже (выберите нужный IP адрес DNS сервера локальной сети вместо адреса 10.0.0.1 указанного ниже):\n\n```\nlocal-zone: \"10.in-addr.arpa.\" transparent\n```\n\nДанные строки необходима для работы обратного поиска.\n\n```\nforward-zone:\nname: \"mynetwork.com.\"\nforward-addr: 10.0.0.1\n```\n\n```\nforward-zone:\nname: \"10.in-addr.arpa.\"\nforward-addr: 10.0.0.1\n```\n\nВы так же можете добавить localhost для переадресации и обратного поиска с помощью следующих строк:\n\n```\nlocal-zone: \"localhost.\" static\nlocal-data: \"localhost. 10800 IN NS localhost.\"\nlocal-data: \"localhost. 10800 IN SOA localhost. nobody.invalid. 1 3600 1200 604800 10800\"\nlocal-data: \"localhost. 10800 IN A 127.0.0.1\"\nlocal-zone: \"127.in-addr.arpa.\" static\nlocal-data: \"127.in-addr.arpa. 10800 IN NS localhost.\"\nlocal-data: \"127.in-addr.arpa. 10800 IN SOA localhost. nobody.invalid. 2 3600 1200 604800 10800\"\nlocal-data: \"1.0.0.127.in-addr.arpa. 10800 IN PTR localhost.\"\n```\n\n"
    },
    {
      "title": "Переадресация остальных запросов",
      "level": 4,
      "content": "Если ваш сетевой менеджер поддерживает Openresolv (Русский), вы можете настроить его для предоставления внешних DNS серверов для Unbound:\n\n```\n/etc/resolvconf.conf\n```\n\n```\n...\n# Путь к конфигурационному файлу для Unbound\nunbound_conf=/etc/unbound/resolvconf.conf\n```\n\nВыполните resolvconf -u для внесения изменений.\n\nЗатем настройте Unbound для чтения сгенерированного openresolv файла[3]:\n\n```\ninclude: \"/etc/unbound/resolvconf.conf\"\n```\n\nДля использования серверов для стандартных зон переадресации, которые находятся за пределами локальной машины и сети, добавьте зону переадресации с именем . в ваш конфигурационный файл. В этом примере все запросы переадресуются на DNS сервера Google:\n\n```\nforward-zone:\n  name: \".\"\n  forward-addr: 8.8.8.8\n  forward-addr: 8.8.4.4\n```\n\n"
    },
    {
      "title": "Переадресация через DNS over TLS",
      "level": 4,
      "content": "Для использования DNS over TLS необходимо указать параметру tls-cert-bundle путь до системного корневого набора сертификатов, что позволит Unbound переадресовывать TLS запросы и использовать сервера с технологией DNS over TLS .\n\nДля каждого сервера нужно указать используемый порт с помощью символа @ и требуется указать домен через символ #. Несмотря на то, что домен выглядит как комментарий, это позволяет имени TLS аутентификации быть использованным для зон заглушек (stub-zones) и командой unbound-control forward control. Удостоверьтесь в отсутствии пробелов до и после символов @ и #.\n\n```\n/etc/unbound/unbound.conf\n```\n\n```\n...\nserver:\n...\n\ttls-cert-bundle: /etc/ssl/certs/ca-certificates.crt\n...\nforward-zone:\n        name: \".\"\n        forward-tls-upstream: yes\n        forward-addr: 1.1.1.1@853#cloudflare-dns.com\n```\n\n"
    },
    {
      "title": "Контроль доступа",
      "level": 3,
      "content": "Вы можете указать интерфейсы, на которые будет отвечать сервер с помощью IP адреса. По умолчанию принимает запросы только от localhost.\n\nДля прослушивания всех интерфейсов, используйте следующую строку:\n\n```\ninterface: 0.0.0.0\n```\n\nДля определения доступа к серверу определенным IP адресам используйте опцию access-control:\n\n```\naccess-control: подсеть действие\n```\n\nНапример:\n\n```\naccess-control: 192.168.1.0/24 allow\n```\n\nдействие может быть одним из: deny (игнорирует запросы), refuse (отвечает ошибкой), allow (разрешает рекурсивные запросы), allow_snoop (разрешает рекурсивные и остальные запросы) По умолчанию игнорируются все запросы, кроме от localhost.\n\n"
    },
    {
      "title": "Запуск Unbound",
      "level": 3,
      "content": "Запустите и включите службу unbound.service.\n\n"
    },
    {
      "title": "Удаленное управление Unbound",
      "level": 3,
      "content": "В составе unbound присутствует утилита unbound-control которая позволяет удаленно контролировать сервер unbound. Команды схожи с pdnsd-ctl пакета pdnsd.\n\n"
    },
    {
      "title": "Настройка unbound-control",
      "level": 4,
      "content": "Перед тем, как начать, необходимо выполнить следующие шаги:\n\n1) Для начала выполните следующую команду\n\n```\n# unbound-control-setup\n```\n\nкоторая сгенерирует пару самоподписанных сертификатов и ключей для сервера и клиента. Они будут находится в директории /etc/unbound.\n\n2) После, отредактируйте /etc/unbound/unbound.conf используя следующий пример. Опция control-enable: yes обязательная, остальное можете настроить как необходимо вам.\n\n```\nremote-control:\n    # Включает удаленный доступ с помощью unbound-control(8).\n    # настройте ключи и сертификаты с помощью команды unbound-control-setup.\n    control-enable: yes\n   \n    # Интерфейс, с которого будет происходить управление\n    # задайте 0.0.0.0 и ::0 для прослушивания всех интерфейсов.\n    control-interface: 127.0.0.1\n   \n    # номер порта для удаленного доступа.\n    control-port: 8953\n   \n    # ключ unbound сервера.\n    server-key-file: \"/etc/unbound/unbound_server.key\"\n   \n    # сертификат unbound сервера.\n    server-cert-file: \"/etc/unbound/unbound_server.pem\"\n   \n    # ключ для unbound-control.\n    control-key-file: \"/etc/unbound/unbound_control.key\"\n   \n    # сертификат для unbound-control.\n    control-cert-file: \"/etc/unbound/unbound_control.pem\"\n```\n\n"
    },
    {
      "title": "Использование unbound-control",
      "level": 4,
      "content": "Список команд, которые вы можете использовать для unbound-control:\n\n- выводит статистику не сбрасывая ее\n\n```\n# unbound-control stats_noreset\n```\n\n- выводит кеш в стандартный вывод\n\n```\n# unbound-control dump_cache\n```\n\n- Очищает кеш и перезагружает настройки\n\n```\n# unbound-control reload\n```\n\nОбратитесь к unbound-control(8) для подробностей и поддерживаемых команд.\n\n"
    },
    {
      "title": "Черный список доменов",
      "level": 3,
      "content": "Для добавления домена в черный список, используйте строку local-zone: \"домен\" always_refuse.\n\nСохраните черный список как отдельный файл (например /etc/unbound/blacklist.conf) для удобности и включите его в файл конфигурации /etc/unbound/unbound.conf, например:\n\n```\n/etc/unbound/blacklist.conf\n```\n\n```\nlocal-zone: \"blacklisted.example\" always_refuse\nlocal-zone: \"anotherblacklisted.example\" always_refuse\n```\n\n```\n/etc/unbound/unbound.conf\n```\n\n```\nserver:\n...\n  include: /etc/unbound/blacklist.conf\n```\n\n- Если вы хотите возвращать статус OK на определенные имена, вы можете поменять переадресацию с 127.0.0.1 на ваш HTTP сервер который будет отвечать пустым ответом 204, подробнее здесь.\n- Для конвертации стороннего hosts файла в формат unbound, воспользуйтесь следующей командой: $ grep '^0\\.0\\.0\\.0' путь_к_hosts_файлу | awk '{print \"local-zone: \\\"\"$2\"\\\" always_refuse\"}' > /etc/unbound/blacklist.conf\n- Список источников для черного списка можно взять со страницы пакета adblock для OpenWrt.\n\n```\n$ grep '^0\\.0\\.0\\.0' путь_к_hosts_файлу | awk '{print \"local-zone: \\\"\"$2\"\\\" always_refuse\"}' > /etc/unbound/blacklist.conf\n```\n\n"
    },
    {
      "title": "Использование вместе с авторитетный DNS сервером",
      "level": 3,
      "content": "Для пользователей, которые желают иметь подтверждающий, рекурсивный и кеширующий DNS сервер вместе с авторитетным на одной машине, может быть полезно обратиться к странице NSD в которой описан пример такой конфигурации. Наличие одного сервера как авторитетный и отдельного для выполнения подтверждения, рекурсии и кеширования повышает уровень безопасности по отношению к единому DNS серверу выполняющему эти функции. Многие пользователи используют Bind в этом случае как единый DNS сервер, и пример для миграции на комбинацию Bind и NDS серверов предоставлен на странице NSD.\n\n"
    },
    {
      "title": "Доступ к DNS серверу через WAN интерфейс",
      "level": 3,
      "content": "Вы можете поменять настройки и прослушиваемые интерфейсы для нужного сервера, чтобы машины за пределами локальной сети могли получить доступ к определенным машинам внутри локальной сети. Это будет полезно для различных веб-сервисов которым нужен доступ извне. Похожий способ использовался с помощью сервера bind в комбинации с использованием перенаправления портов на машинах принимающих запросы для переадресации запросов на нужные машины.\n\n"
    },
    {
      "title": "Служба systemd для обновления корневых подсказок",
      "level": 3,
      "content": "Можете использовать эти примеры для создания systemd службы которая будет обновлять root.hints ежемесячно методом, описанным в разделе #Корневые подсказки (Root hints):\n\n```\n/etc/systemd/system/roothints.service\n```\n\n```\n[Unit]\nDescription=Update root hints for unbound\nAfter=network.target\n\n[Service]\nExecStart=/usr/bin/curl -o /etc/unbound/root.hints https://www.internic.net/domain/named.cache\n```\n\n```\n/etc/systemd/system/roothints.timer\n```\n\n```\n[Unit]\nDescription=Run root.hints monthly\n\n[Timer]\nOnCalendar=monthly\nPersistent=true\n \n[Install]\nWantedBy=timers.target\n```\n\nЗапустите и включите службу roothints.timer.\n\n"
    },
    {
      "title": "Определение нужного количества потоков (num-threads)",
      "level": 3,
      "content": "В странице man руководства для unbound.conf говорится:\n\n```\noutgoing-range: <кол-во>\n       Количество портов для работы. Это число файлов-дескрипторов которые могут быть использованы на один поток.\n```\n\nи другие источники предполагают, что параметр num-threads должен быть равен количеству ядер процессора. Пример конфигурации в {ic|unbound.conf.example}} имеет:\n\n```\n# количество потоков для использования. 1 отключает многопоточность.\n       # num-threads: 1\n```\n\nТем не менее невозможно установить количество потоков больше 1 в строке num-threads без вызывания предупреждений в логах от unbound о превышении количества файлов-дескрипторов. На самом деле для пользователей, использующих unbound для небольших сетей или на одной системе, нет необходимости стремится к увеличению производительности путем включения многопоточности параметром num-threads. Но если вы все таки желаете это сделать, рекомендуется обратиться к официальной документации и выбрать подходящие параметры:\n\nУстановите параметр outgoing-range насколько можно большим, смотрите упомянутую выше страницу каким можно преодолеть лимит в 1024. Это позволяет обслуживать большее количество клиентов в единицу времени. Для одного ядра попробуйте 950, для двух 450, для четырех 200. Параметр num-queries-per-thread лучше всего установить в половину от велечины outgoing-range.\n\nПотому как ограничение outgoing-range также ограничивает num-queries-per-thread, лучше всего использовать unbound вместе с библиотекой libevent, тогда не будет ограничения в 1024 параметра outgoing-range. Если вам нужен DNS сервер для большой нагрузки, вам потребуется скомпилировать собственный экземпляр, вместо использования unbound из репозиториев.\n\n"
    },
    {
      "title": "Смотреть также",
      "level": 2,
      "content": "- Списки блокировки рекламных адресов для Unbound\n\n"
    }
  ]
}
{
  "title": "VirtualBox (日本語)",
  "url": "https://wiki.archlinux.org/title/VirtualBox_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- VirtualBox/ヒントとテクニック\n- Category:ハイパーバイザ\n- PhpVirtualBox\n- RemoteBox\n- 既存環境を仮想マシンに (から) 移動\n\nVirtualBox は 既存のオペレーティングシステム上で仮想マシンと 呼ばれる特別な環境でオペレーティングシステムを実行するために使用される ハイパーバイザ です。VirtualBoxは常に開発されており、新機能は継続的に実装されています。Qt GUIインターフェイスに加えて、仮想マシンを管理および実行するためのヘッドレスおよび SDL コマンドラインツールが付属しています。\n\n共有フォルダーやクリップボード、ビデオアクセラレーション、シームレスウィンドウ統合モードなど、ホストシステムの機能をゲストに統合するために、一部のゲストオペレーティングシステムにゲストの追加機能が提供されています。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 ホストとしてインストール 1.1 コアパッケージのインストール 1.2 モジュールに署名する 1.3 カーネルモジュールのロード 1.4 ユーザー名を vboxusers グループに追加 1.5 Guest additions ディスク 1.6 無人テンプレート 1.7 拡張パック 1.8 フロントエンド\n- 2 Arch Linux をゲストにする\n- 3 仮想ディスクの管理 3.1 VirtualBox によってサポートされているフォーマット 3.2 ディスクイメージフォーマットの変換 3.2.1 QCOW 3.3 仮想ディスクのマウント 3.3.1 VDI 3.3.2 VHD 3.4 仮想ディスクの縮小 3.5 仮想ディスクの拡大 3.5.1 一般的な方法 3.5.2 VDI ディスクの容量を拡大 3.6 .vbox ファイルから仮想ディスクを手動で交換 3.6.1 Linux ホストと他のホスト間で転送 3.7 仮想ディスクを複製して新しい UUID を割り当てる\n- 4 ヒントとテクニック\n- 5 トラブルシューティング 5.1 キーボードとマウスが仮想マシンにロックされる 5.2 64ビット OS のクライアントオプションが表示されない 5.3 VirtualBox の GUI がホストの GTK テーマと一致しない 5.4 Ctrl+Alt+Fn をゲストに送信できない 5.5 USB サブシステムがホスト側もしくはゲスト側で動かない 5.6 USB モデム 5.7 USBデバイスがゲストをクラッシュさせる 5.8 仮想マシン起動時にホストがフリーズする 5.9 ゲストでアナログマイクロフォンが使えない 5.9.1 アップグレード後に音声入力 (マイクロフォン) が使えなくなった 5.10 ISO に変換されたイメージに関する問題 5.11 ホストオンリーのネットワークインターフェースを作成できない 5.12 Failed to insert module 5.13 VBOX_E_INVALID_OBJECT_STATE (0x80BB0007) 5.14 \"NS_ERROR_FAILURE\" が表示されメニューアイテムが表示されない 5.15 仮想化命令が使用できない場合の OpenBSD の使用不可 5.16 Windows ゲストで \"The specified path does not exist. Check the path and then try again.\" エラー 5.17 Windows 8.x Error Code 0x000000C4 5.18 Windows 8, 8.1, 10 がインストール・起動できない、あるいは \"ERR_DISK_FULL\" エラーが表示される 5.19 WinXP: ビット深度を 16 より上げることができない 5.20 Windows: 3D アクセラレーションが有効な場合の画面のちらつき 5.21 Wayland で VirtualBox を起動できない: Segmentation fault 5.22 Intel グラフィックスを使用したゲストでのランダムフリーズ 5.23 フルスクリーンモードでゲストの画面が表示されない 5.24 Intel Tiger Lake チップセット搭載の Windows 10 ゲスト OS でランダムクラッシュが発生する 5.25 第11世代Intel CPUでの仮想マシン起動時のフリーズ 5.26 セキュアブートを有効にすると、設定の保存に失敗する\n- 6 参照\n\n- 1.1 コアパッケージのインストール\n- 1.2 モジュールに署名する\n- 1.3 カーネルモジュールのロード\n- 1.4 ユーザー名を vboxusers グループに追加\n- 1.5 Guest additions ディスク\n- 1.6 無人テンプレート\n- 1.7 拡張パック\n- 1.8 フロントエンド\n\n- 3.1 VirtualBox によってサポートされているフォーマット\n- 3.2 ディスクイメージフォーマットの変換 3.2.1 QCOW\n- 3.3 仮想ディスクのマウント 3.3.1 VDI 3.3.2 VHD\n- 3.4 仮想ディスクの縮小\n- 3.5 仮想ディスクの拡大 3.5.1 一般的な方法 3.5.2 VDI ディスクの容量を拡大\n- 3.6 .vbox ファイルから仮想ディスクを手動で交換 3.6.1 Linux ホストと他のホスト間で転送\n- 3.7 仮想ディスクを複製して新しい UUID を割り当てる\n\n- 3.2.1 QCOW\n\n- 3.3.1 VDI\n- 3.3.2 VHD\n\n- 3.5.1 一般的な方法\n- 3.5.2 VDI ディスクの容量を拡大\n\n- 3.6.1 Linux ホストと他のホスト間で転送\n\n- 5.1 キーボードとマウスが仮想マシンにロックされる\n- 5.2 64ビット OS のクライアントオプションが表示されない\n- 5.3 VirtualBox の GUI がホストの GTK テーマと一致しない\n- 5.4 Ctrl+Alt+Fn をゲストに送信できない\n- 5.5 USB サブシステムがホスト側もしくはゲスト側で動かない\n- 5.6 USB モデム\n- 5.7 USBデバイスがゲストをクラッシュさせる\n- 5.8 仮想マシン起動時にホストがフリーズする\n- 5.9 ゲストでアナログマイクロフォンが使えない 5.9.1 アップグレード後に音声入力 (マイクロフォン) が使えなくなった\n- 5.10 ISO に変換されたイメージに関する問題\n- 5.11 ホストオンリーのネットワークインターフェースを作成できない\n- 5.12 Failed to insert module\n- 5.13 VBOX_E_INVALID_OBJECT_STATE (0x80BB0007)\n- 5.14 \"NS_ERROR_FAILURE\" が表示されメニューアイテムが表示されない\n- 5.15 仮想化命令が使用できない場合の OpenBSD の使用不可\n- 5.16 Windows ゲストで \"The specified path does not exist. Check the path and then try again.\" エラー\n- 5.17 Windows 8.x Error Code 0x000000C4\n- 5.18 Windows 8, 8.1, 10 がインストール・起動できない、あるいは \"ERR_DISK_FULL\" エラーが表示される\n- 5.19 WinXP: ビット深度を 16 より上げることができない\n- 5.20 Windows: 3D アクセラレーションが有効な場合の画面のちらつき\n- 5.21 Wayland で VirtualBox を起動できない: Segmentation fault\n- 5.22 Intel グラフィックスを使用したゲストでのランダムフリーズ\n- 5.23 フルスクリーンモードでゲストの画面が表示されない\n- 5.24 Intel Tiger Lake チップセット搭載の Windows 10 ゲスト OS でランダムクラッシュが発生する\n- 5.25 第11世代Intel CPUでの仮想マシン起動時のフリーズ\n- 5.26 セキュアブートを有効にすると、設定の保存に失敗する\n\n- 5.9.1 アップグレード後に音声入力 (マイクロフォン) が使えなくなった\n\n"
    },
    {
      "title": "ホストとしてインストール",
      "level": 2,
      "content": "Arch Linux 上で VirtualBox の仮想マシンを起動するには、以下のインストール手順に従いってください。\n\n"
    },
    {
      "title": "コアパッケージのインストール",
      "level": 3,
      "content": "virtualbox パッケージをインストールしてください。さらに、ホストモジュールのパッケージを選択してインストールしてください:\n\n- linux カーネルを使用している場合 virtualbox-host-modules-arch を選択してください。\n- 他のカーネルを使っている場合 virtualbox-host-dkms を選択してください。\n\nvirtualbox-host-dkms によって提供される virtualbox モジュールをコンパイルするには、インストールしているカーネルにあわせて適切なヘッダーパッケージをインストールする必要があります (例: linux-lts なら linux-lts-headers パッケージ、linux-zen なら linux-zen-headers パッケージ) [1]。VirtualBox かカーネルのどちらかがアップデートされると、DKMS の Pacman フックによって自動的にカーネルモジュールが再コンパイルされます。\n\n"
    },
    {
      "title": "モジュールに署名する",
      "level": 3,
      "content": "CONFIG_MODULE_SIG_FORCE オプションを有効にしたカスタムカーネルを使っている場合、カーネルのコンパイル時に生成される鍵を使ってモジュールに署名する必要があります。\n\nカーネルツリーのフォルダに移動して、以下のコマンドを実行してください:\n\n```\n# for module in `ls /lib/modules/$(uname -r)/kernel/misc/{vboxdrv.ko,vboxnetadp.ko,vboxnetflt.ko,vboxpci.ko}` ; do ./scripts/sign-file sha1 certs/signing_key.pem certs/signing_key.x509 $module ; done\n```\n\n"
    },
    {
      "title": "カーネルモジュールのロード",
      "level": 3,
      "content": "virtualbox-host-modules-arch と virtualbox-host-dkms は systemd-modules-load サービスを使用して起動時にモジュールをロードします。インストール後にモジュールをロードするには、再起動するか、モジュールを手動で一回ロードします。モジュールのリストは、/usr/lib/modules-load.d/virtualbox-host-modules-arch.conf または /usr/lib/modules-load.d/virtualbox-host-dkms.conf にあります。\n\nVirtualBox が使っているカーネルモジュールの中には vboxdrv と呼ばれる必須モジュールがあり、仮想マシンを起動する前にロードする必要があります。\n\n手動でモジュールをロードするには:\n\n```\n# modprobe vboxdrv\n```\n\n次のモジュールは、高度な構成でのみ必要です。\n\n- vboxnetadp と vboxnetflt はどちらも \"ホストオンリーネットワーク\" 機能を使うときに必要になります。正確に言えば、vboxnetadp は VirtualBox のグローバル設定でホストインターフェイスを作成するのに必要で、vboxnetflt はそのネットワークインターフェイスを使って仮想マシンを起動するのに必要です。\n\n"
    },
    {
      "title": "ユーザー名を vboxusers グループに追加",
      "level": 3,
      "content": "利用するユーザー名を vboxusers グループに追加してください。追加しなくても問題なく動作しますが、共有フォルダなどの任意機能を動かすためには必要です。新しいグループは自動では現在のセッションに適用されません; ユーザーは一度ログインしなおすか newgrp や sudo -u $USER -s などのコマンドで新しい環境を始める必要があります。現在のユーザーを vboxusers グループに追加するには、次を入力してください:\n\n```\n# gpasswd -a $USER vboxusers\n```\n\n"
    },
    {
      "title": "Guest additions ディスク",
      "level": 3,
      "content": "VirtualBox を動かすホスト側 (Arch Linux) には、virtualbox-guest-iso もインストールすることが推奨されています。これはゲスト OS に guest additions をインストールするために使われるディスクイメージです。.iso ファイルは /usr/lib/virtualbox/additions/VBoxGuestAdditions.iso に配置され、仮想マシンの中から手動でマウントする必要があります。マウントしたら、ゲストの中で guest additions インストーラーを実行できます。\n\n"
    },
    {
      "title": "無人テンプレート",
      "level": 3,
      "content": "ゲストシステムを手動でインストールする必要をなくすために、一部の OS では 無人インストール がサポートされています。これにより、ユーザーは、マシンを起動する前に、VirtualBox のインターフェイスにインストールされるようにシステムを構成できます。セットアッププロセスの最後に、それ以上のユーザー操作を必要とせずに OS がインストールされます。この機能には virtualbox-unattended-templatesAUR パッケージが必要です。\n\n"
    },
    {
      "title": "拡張パック",
      "level": 3,
      "content": "VirtualBox 4.0 から、GPL ではないコンポーネントはアプリケーションから分割されるようになりました。フリーでない、個人利用においてのみ利用可能なライセンスでリリースされていますが、追加機能が入っている Oracle Virtualbox 拡張パックに興味をひかれるかもしれません。手動でインストールする代わりに、AUR には virtualbox-ext-oracleAUR パッケージが存在します。ビルド済みのバージョンは seblu リポジトリにあります。\n\n伝統的な手動のインストールをしたい場合: 拡張パックを手動でインストールして GUI (File > Preferences > Extensions) または VBoxManage extpack install <.vbox-extpack> でインストールしてください。VirtualBox に特権アクセスを与えるためのツールキット (Polkit や gksu など) が必須です。このエクステンションのインストールには root 権限が必要になります。\n\n"
    },
    {
      "title": "フロントエンド",
      "level": 3,
      "content": "VirtualBox には複数のフロントエンドが存在しています:\n\n- 普通の GUI で VirtualBox を使いたい場合は VirtualBox を使ってください。\n- コマンドライン内だけで VirtualBox を使いたい場合 (起動と既存の仮想マシンの設定変更だけ)、VBoxSDL コマンドが使えます。VBoxSDL はメニューやコントロールがない、ピュアな仮想マシンだけを含んだシンプルなウィンドウのみを表示します。\n- GUI を (サーバーなどで) 実行せずにコマンドラインで VirtualBox を使って仮想マシンを作成・起動・設定したい場合、ホスト側で全く目に見える出力を行わず VRDP データだけを送信する VBoxHeadless を使います。\n\nWayland のセキュリティ機能 (つまり GDM を使用する場合) は VirtualBox がすべてのキーボード入力を取得することを禁止しています。これはゲスト OS にウィンドウマネージャのショートカットを渡したいときに厄介です。これは VirtualBox をホワイトリスト化することで回避できます。\n\n```\n$ gsettings get org.gnome.mutter.wayland xwayland-grab-access-rules\n$ gsettings set org.gnome.mutter.wayland xwayland-grab-access-rules \"['VirtualBox Machine']\"\n```\n\n最初のコマンドは、他のアプリケーションがすでにホワイトリストに登録されているかどうかを表示します。もしあれば、'VirtualBox Machine'をそのリストに追加してください（唯一のリストにするのではありません）。\n\nまた、PhpVirtualBox を使えばウェブインターフェイスで仮想マシンを管理することが可能です。\n\n仮想マシンを作成する方法は VirtualBox マニュアルを参照してください。\n\n"
    },
    {
      "title": "Arch Linux をゲストにする",
      "level": 2,
      "content": "VirtualBox/Arch Linux をゲストにする を参照してください。\n\n"
    },
    {
      "title": "仮想ディスクの管理",
      "level": 2,
      "content": "VirtualBox/ヒントとテクニック#VirtualBox の仮想マシンを他のハイパーバイザにインポート・エクスポートも参照。\n\n"
    },
    {
      "title": "VirtualBox によってサポートされているフォーマット",
      "level": 3,
      "content": "VirtualBox は以下の仮想ディスクフォーマットをサポートしています:\n\n- VDI (Virtual Disk Image): VirtualBox で仮想マシンを作成したときにデフォルトで使用されるオープンなコンテナです。\n\n- VMDK (Virtual Machine Disk): VMware によって開発されたフォーマットです。最初は仕様が公開されていませんでしたが、今では VirtualBox でサポートされるオープンなフォーマットになっています。VMDK では 2GB のファイルに分割することができます。巨大なファイルをサポートしていない環境に仮想マシンを保存したい場合に有用です。Parallels の HDD フォーマット以外で、このような機能を提供するフォーマットはありません。\n\n- VHD (Virtual Hard Disk): Microsoft によって Windows Virtual PC や Hyper-V で使用されているフォーマットです。Microsoft 製品を使用する場合、このフォーマットを選択する必要があります。\n\n- VHDX (読み取り専用): Microsoft によって開発された Virtual Hard Disk フォーマットの拡張版です。2012年9月4日に Windows Server 2012 に搭載された Hyper-V 3.0 と一緒にリリースされました。VHDX は (ブロックアライメントの改善により) パフォーマンスが向上しており、大きなブロックサイズとジャーナルをサポートしています。VirtualBox は読み取り専用で VHDX をサポートしています [2]。\n\n- HDD (バージョン 2): Parallels Inc によって開発されている HDD フォーマットは Parallels Desktop for Mac などのハイパーバイザ製品で使われています。プロプライエタリなフォーマットで、ドキュメントがないために、新しいバージョンの HDD (バージョン 3 と 4) はサポートされていません。 ノート: バージョン 1 のサポートに関しては論争が存在します。公式 VirtualBox マニュアルでは HDD ファイルフォーマットのバージョン 2 しかサポートしていない と書かれていますが、Wikipedia の投稿者によればバージョン 1 も使えるという話です。\n\n- QED (QEMU Enhanced Disk): オープンソースのハイパーバイザである QEMU で使われていた古いファイルフォーマットです。2010年に設計されたフォーマットで、今では QCOW2 などに取って代わられています。特徴として完全な非同期 I/O パス、強力なデータ整合性、バッキングファイル、スパースファイルなどがあります。QED フォーマットは古いバージョンの QEMU で作成された仮想マシンとの互換性のためだけにサポートされています。\n\n- QCOW (QEMU Copy On Write): QEMU の現行フォーマットです。QCOW フォーマットは zlib ベースの透過圧縮や暗号化をサポートしています (暗号化は問題があるため推奨されていません)。QCOW にはふたつのバージョンが存在します: QCOW と QCOW2 です。QCOW2 は QCOW よりも優れています。VirtualBox が完全にサポートしているのは QCOW です [3]。QCOW2 にはリビジョン違いがふたつあります: QCOW2 0.10 と QCOW2 1.1 になります (QEMU で仮想ディスクを作成した場合、後者がデフォルトです)。VirtualBox は QCOW2 をサポートしていません。\n\n- OVF (Open Virtualization Format): 異なるハイパーバイザ間での仮想マシンの相互運用性を考えて設計されたオープンなフォーマットです。VirtualBox は VBoxManage のインポート・エクスポート機能によって OVF フォーマットをサポートしています [4]。ただし 既知の制限 が存在します。\n\n- RAW: 特定のファイルフォーマットのコンテナに格納せず直接ディスクに仮想ディスクを配置するモードです。VirtualBox は複数の方法で RAW 機能をサポートしています: RAW ディスクを 特定のフォーマット に変換、ディスクを RAW にクローン、あるいは物理ディスクやファイルを指し示す VMDK ファイルを直接使用する [5]。\n\n"
    },
    {
      "title": "ディスクイメージフォーマットの変換",
      "level": 3,
      "content": "VBoxManage clonemedium を使うことで VDI, VMDK, VHD, RAW を相互に変換することができます。\n\n```\n$ VBoxManage clonemedium disk inputfile outputfile --format outputformat\n```\n\n例えば VDI を VMDK に変換するには:\n\n```\n$ VBoxManage clonemedium disk source.vdi destination.vmdk --format VMDK\n```\n\n"
    },
    {
      "title": "QCOW",
      "level": 4,
      "content": "VirtualBox は QEMU の QCOW2 ディスクイメージフォーマットをサポートしていません。VirtualBox で QCOW2 ディスクイメージを使うには変換する必要があります。qemu の qemu-img コマンドを使うことで変換できます。qemu-img は QCOW を VDI, VMDK, VHDX, RAW などのフォーマットに変換します (qemu-img --help を実行することで変換可能なフォーマットを確認できます)。\n\n```\n$ qemu-img convert -O output_fmt inputfile outputfile\n```\n\n例えば QCOW2 を VDI に変換するには:\n\n```\n$ qemu-img convert -O vdi source.qcow2 destination.vdi\n```\n\nQCOW2 には 0.10 と 1.1 がありますが、-o compat=revision でどちらを使うか指定できます。\n\n"
    },
    {
      "title": "VDI",
      "level": 4,
      "content": "VDI イメージのマウントは容量固定のイメージ (静的イメージ) でしか使えません。動的 (動的容量割当) イメージのマウントは簡単にできません。\n\nマウントするには (VDI 内の) パーティションのオフセットが必要です。それから offData の値を 32256 に追加してください (例: 69632 + 32256 = 101888):\n\n```\n$ VBoxManage internalcommands dumphdinfo <storage.vdi> | grep \"offData\"\n```\n\nそうしたら以下のコマンドでマウントできます:\n\n```\n# mount -t ext4 -o rw,noatime,noexec,loop,offset=101888 <storage.vdi> /mntpoint/\n```\n\nmount.vdi スクリプトを使うこともできます (スクリプトを /usr/bin/ にインストールしてください):\n\n```\n# mount -t vdi -o fstype=ext4,rw,noatime,noexec vdi_file_location /mnt/\n```\n\nもしくは qemu のカーネルモジュールを使う方法もあります [6]:\n\n```\n# modprobe nbd max_part=16\n# qemu-nbd -c /dev/nbd0 <storage.vdi>\n# mount /dev/nbd0p1 /mnt/dir/\n```\n\nアンマウントするには:\n\n```\n# umount /mnt/dir/\n# qemu-nbd -d /dev/nbd0\n```\n\nパーティションノードが反映されない場合、partprobe /dev/nbd0 を使ってみてください。VDI パーティションは直接ノードにマッピングすることもできます: qemu-nbd -P 1 -c /dev/nbd0 <storage.vdi>。\n\n"
    },
    {
      "title": "VHD",
      "level": 4,
      "content": "VDI と同様に、VHD イメージも QEMU の nbd モジュールでマウントできます。\n\n```\n# modprobe nbd\n# qemu-nbd -c /dev/nbd0 storage.vhd\n# mount /dev/nbd0p1 /mnt\n```\n\nunmount は以下の通り。\n\n```\n# umount /mnt\n# qemu-nbd -d /dev/nbd0\n```\n\n"
    },
    {
      "title": "仮想ディスクの縮小",
      "level": 3,
      "content": "仮想ディスクの縮小は .vdi ファイルでしか行うことができません。\n\n仮想マシンを起動して無駄なファイルを削除してください。bleachbit などのツールを使うことができます (Windows でも利用できます)。\n\n空き領域をゼロ埋めするツールは複数存在します:\n\n- Bleachbit を使用する場合、GUI で System > Free disk space にチェックを入れるか、CLI で bleachbit -c system.free_disk_space を使ってください。\n- UNIX ベースの環境の場合、dd または dcflddAUR を使います (違いについては こちら を参照):\n\n```\n# dcfldd if=/dev/zero of=/fillfile bs=4M\n```\n\n- Windows の場合、以下のツールが存在します:\n\n- Sysinternals Suite の sdelete を使う場合、仮想マシンに存在するドライブごとに sdelete -s -z c: を実行してください。\n- スクリプトを使いたい場合、PowerShell を使う方法 が存在します (全てのドライブで繰り返してください)。\n\n```\nPS> ./Write-ZeroesToFreeSpace.ps1 -Root c:\\ -PercentFree 0\n```\n\n空きディスク領域を消去できたら、仮想マシンをシャットダウンしてください。\n\n仮想マシンを起動したら、ファイルシステムのチェックを実行することを推奨します。\n\n- UNIX ベースのシステムの場合、fsck を手動で使うことができます。\n\n- カーネルパラメータを設定することで起動時に強制的にディスクチェックを行うことができます。\n\n- Windows システムの場合:\n\n- chkdsk c: /F を実行する (c: はスキャンを行いたいディスクに置き換えてください)。\n- こちら の FsckDskAll を使う。chkdsk と基本的に同じソフトウェアですが、全てのドライブで繰り返し実行する必要がありません。\n\nVBoxManage modifymedium を使って .vdi からゼロ領域を削除:\n\n```\n$ VBoxManage modifymedium disk your_disk.vdi --compact\n```\n\n"
    },
    {
      "title": "一般的な方法",
      "level": 4,
      "content": "仮想マシンを作成したときに選択したハードドライブのサイズが小さすぎて、容量一杯まで使い切ってしまった場合、VirtualBox マニュアルでは VBoxManage modifymedium を使うことが推奨されています。しかしながら、このコマンドは VDI と VHD ディスクで動的にサイズを割り当てているときしか機能しません。固定サイズの仮想ディスクのサイズを変更したい場合、以下の手順に従ってください。\n\nまず、拡大したいディスクのとなりに新しく仮想ディスクを作成:\n\n```\n$ VBoxManage createmedium disk -filename new.vdi --size 10000\n```\n\nサイズは MiB で指定します。例えば 10000MiB ~= 10GiB です。new.vdi は新しく作成するハードドライブの名前になります。\n\n次に、古い仮想ディスクを新しい仮想ディスクに複製します (しばらく時間がかかります):\n\n```\n$ VBoxManage clonemedium disk old.vdi new.vdi --existing\n```\n\n古いハードドライブを取り外して新しいドライブを接続してください (斜体の引数は適当な文字列に置き換えてください):\n\n```\n$ VBoxManage storageattach VM_name --storagectl SATA --port 0 --medium none\n$ VBoxManage storageattach VM_name --storagectl SATA --port 0 --medium new.vdi --type hdd\n```\n\nストレージコントローラとポート番号を確認するには、VBoxManage showvminfo VM_name コマンドを使います。以下のように出力されます (斜字に注目):\n\n```\n[...]\nStorage Controller Name (0):            IDE\nStorage Controller Type (0):            PIIX4\nStorage Controller Instance Number (0): 0\nStorage Controller Max Port Count (0):  2\nStorage Controller Port Count (0):      2\nStorage Controller Bootable (0):        on\nStorage Controller Name (1):            SATA\nStorage Controller Type (1):            IntelAhci\nStorage Controller Instance Number (1): 0\nStorage Controller Max Port Count (1):  30\nStorage Controller Port Count (1):      1\nStorage Controller Bootable (1):        on\nIDE (1, 0): Empty\nSATA (0, 0): /home/wget/IT/Virtual_machines/GNU_Linux_distributions/ArchLinux_x64_EFI/Snapshots/{6bb17af7-e8a2-4bbf-baac-fbba05ebd704}.vdi (UUID: 6bb17af7-e8a2-4bbf-baac-fbba05ebd704)\n[...]\n```\n\nGParted live イメージ をダウンロードして仮想 CD/DVD ディスクファイルとしてマウントし、仮想マシンを起動して、パーティションを拡大・移動してください。そして GParted live をアンマウントして再起動してください。\n\n最後に、VirtualBox から仮想ディスクの登録を解除してファイルを削除してください:\n\n```\n$ VBoxManage closemedium disk old.vdi\n$ rm old.vdi\n```\n\n"
    },
    {
      "title": "VDI ディスクの容量を拡大",
      "level": 4,
      "content": "仮想ディスクが VDI の場合、以下のコマンドを実行:\n\n```\n$ VBoxManage modifymedium disk your_virtual_disk.vdi --resize the_new_size\n```\n\n実行したら上記と同じように Gparted を使ってパーティションのサイズを変更してください。\n\n"
    },
    {
      "title": ".vbox ファイルから仮想ディスクを手動で交換",
      "level": 3,
      "content": "GUI や VBoxManage を使うよりも XML ファイルを編集するほうが簡単だという場合、仮想マシンの .vbox ファイルで仮想ディスクを交換(あるいは追加)することができます。GUID とフォーマットを必要に応じて置き換えるだけです:\n\n```\nArchLinux_vm.vbox\n```\n\n```\n<HardDisk uuid=\"{670157e5-8bd4-4f7b-8b96-9ee412a712b5}\" location=\"ArchLinux_vm.vdi\" format=\"VDI\" type=\"Normal\"/>\n```\n\n<StorageController> のサブタグ <AttachedDevice> の GUID も新しく置き換えてください:\n\n```\nArchLinux_vm.vbox\n```\n\n```\n<AttachedDevice type=\"HardDisk\" port=\"0\" device=\"0\">\n  <Image uuid=\"{670157e5-8bd4-4f7b-8b96-9ee412a712b5}\"/>\n</AttachedDevice>\n```\n\n"
    },
    {
      "title": "Linux ホストと他のホスト間で転送",
      "level": 4,
      "content": "ハードディスクとスナップショットが保存されるパスの情報は .vbox 拡張子のファイルの <HardDisks> .... </HardDisks> タグにあります。手動で編集したりスクリプトを使うことで必要な変更を行うことができます。\n\n```\n#!/bin/bash\nNewPath=\"${PWD}/\"\nSnapshots=\"Snapshots/\"\nFilename=\"$1\"\n\n awk -v SetPath=\"$NewPath\" -v SnapPath=\"$Snapshots\" '{if(index($0,\"<HardDisk uuid=\") != 0){A=$3;split(A,B,\"=\");\nL=B[2];\n gsub(/\\\"/,\"\",L);\n  sub(/^.*\\//,\"\",L);\n  sub(/^.*\\\\/,\"\",L);\n if(index($3,\"{\") != 0){SnapS=SnapPath}else{SnapS=\"\"};\n  print $1\" \"$2\" location=\"\\\"SetPath SnapS L\"\\\" \"$4\" \"$5}\nelse print $0}' \"$Filename\"\n```\n\n- Windows ホストで使用する仮想マシンを準備する場合は、パス名の末尾に/ではなくバックスラッシュ\\を使用する必要があります。\n- スクリプトは、ファイル名で { を検索してスナップショットを検出します。\n- 新しいホストで実行するには、まず Machine -> Add... をクリックしてレジスタに追加するか、ホットキー Ctrl + A を使用して 設定も含む \".vbox\" を参照するか。コマンドライン VBoxManage registervm \"filename\" '.vbox を使用します。\n\n"
    },
    {
      "title": "仮想ディスクを複製して新しい UUID を割り当てる",
      "level": 3,
      "content": "UUID は VirtualBox で広く使われています。仮想マシンと仮想ディスクにはそれぞれ異なる UUID が存在します。VirtualBox で仮想マシンを起動すると、VirtualBox は仮想マシンのインスタンスの全ての UUID を記録します。VirtualBox で登録されるアイテムを確認するには VBoxManage list を参照してください。\n\n仮想ディスクファイルを手動でコピーして仮想ディスクを複製した場合、同じ仮想マシンでディスクを使うときは複製した仮想ディスクに新しい UUID を割り当てる必要があります。\n\n以下のコマンドを使って新しい UUID を仮想ディスクに割り当てられます:\n\n```\n$ VBoxManage internalcommands sethduuid /path/to/disk.vdi\n```\n\n"
    },
    {
      "title": "ヒントとテクニック",
      "level": 2,
      "content": "高度な設定については、VirtualBox/ヒントとテクニック を見てください。\n\n"
    },
    {
      "title": "キーボードとマウスが仮想マシンにロックされる",
      "level": 3,
      "content": "これは、仮想マシンがキーボードとマウスの入力をキャプチャしたことを意味します。右の Ctrl キーを押すだけで、入力は再びホストを制御することができます。\n\nキーを押すことなくマウスでホストを行ったり来たりして仮想マシンを透過的にコントロールし、シームレスに統合するには、guest addtions をゲスト内にインストールします。VirtualBox/Arch Linux をゲストにする#Guest Additions をインストールを読んで下さい、あなたのゲストが Arch Linux ならば、公式の VirtualBox ヘルプを読んで下さい。\n\n"
    },
    {
      "title": "64ビット OS のクライアントオプションが表示されない",
      "level": 3,
      "content": "VM クライアントを起動したときに、64ビットオプションが使えない場合、CPU の仮想化機能 (VT-x) が BIOS で有効になっていることを確認してください。\n\nWindows をホストとして使っている場合、Hyper-V を無効化する必要があります。Hyper-V が有効になっていると VirtualBox が VT-x を使えなくなります [7]。\n\n"
    },
    {
      "title": "VirtualBox の GUI がホストの GTK テーマと一致しない",
      "level": 3,
      "content": "VirtualBox のような Qt ベースのアプリケーションのテーマ化に関する情報については、Qt と GTK アプリケーションの外観の統合を参照してください。\n\n"
    },
    {
      "title": "Ctrl+Alt+Fn をゲストに送信できない",
      "level": 3,
      "content": "ゲスト OS が GNU/Linux ディストリビューションで、Ctrl+Alt+F2 で新しい TTY シェルを開きたい、または Ctrl+Alt+Backspace で現在の X セッションを終了したい場合、これらのキーボードショートカットを適応させずに入力すると、ゲストは入力を受け取らず、ホスト (GNU/Linux ディストリビューションの場合) はこれらのショートカットキーをインターセプトしてしまいます。例えば Ctrl+Alt+F2 をゲストに送るには、単にあなたの Host Key (通常は右の Ctrl キー) と F2 を同時に押してください。\n\n"
    },
    {
      "title": "USB サブシステムがホスト側もしくはゲスト側で動かない",
      "level": 3,
      "content": "時々 usb サブシステムが自動で検知されずホスト側の USB ドライブが表示されなかったりエラーが出ることがあります (例: Could not load the Host USB Proxy service: VERR_NOT_FOUND)。これはユーザーが vboxusers グループになっていても起こります。詳しくは [8] を見て下さい。\n\n~/.bashrc に以下を加え再起動するか新しいインスタンスを開始すれば USB サブシステムが動作します。\n\n```\nVBOX_USB=usbfs\n```\n\nまた、あなたのユーザーを storage グループのメンバーに追加してください。\n\n"
    },
    {
      "title": "USB モデム",
      "level": 3,
      "content": "USB モデムをゲスト OS で使っている場合、ゲスト OS を終了するとホスト環境からモデムが使えなくなることがあります。VBoxSVC を終了・再起動すれば問題は解決します。\n\n"
    },
    {
      "title": "USBデバイスがゲストをクラッシュさせる",
      "level": 3,
      "content": "USB デバイスをゲストに取り付けるとクラッシュやその他の異常な動作が発生する場合は、USB コントローラを USB 2 (EHCI)から USB 3 (xHCI)、またはその逆に切り替えてみてください。\n\n"
    },
    {
      "title": "仮想マシン起動時にホストがフリーズする",
      "level": 3,
      "content": "一般的に、VirtualBox や Linux カーネルをアップグレードした後に、このような問題が発生することがあります。これらを以前のバージョンにダウングレードすると解決する場合があります。\n\n"
    },
    {
      "title": "ゲストでアナログマイクロフォンが使えない",
      "level": 3,
      "content": "アナログマイクロフォンからの音声入力がホストでは上手くできるのに、ゲストでは音声が録音できない場合、ホストに PulseAudio などのサウンドサーバーをインストールすることで問題は解決します。\n\n"
    },
    {
      "title": "アップグレード後に音声入力 (マイクロフォン) が使えなくなった",
      "level": 4,
      "content": "5.1.x バージョンには音声入力まわりに問題が存在しています [9]。\n\nVirtualBox をダウングレードすることで問題は解決します。\n\n"
    },
    {
      "title": "ISO に変換されたイメージに関する問題",
      "level": 3,
      "content": "一部のイメージ形式は、確実に ISO に変換できません。たとえば、ccd2iso は .ccd および .sub ファイルを無視するため、破損したファイルを含むディスクイメージが作成される可能性があります。\n\nこの場合、VirtualBox 内で CDemu for Linux を使用するか、ディスク イメージのマウントに使用する他のユーティリティを使用する必要があります。\n\n"
    },
    {
      "title": "ホストオンリーのネットワークインターフェースを作成できない",
      "level": 3,
      "content": "Host-Only Network Adapter や Bridged Network Adapter を作るためには、カーネルモジュールの vboxnetadp と vboxnetflt をロードする必要があります。また、net-tools パッケージがインストールされているか確認してください。これらのカーネルモジュールを手動でロードするには:\n\n```\n# modprobe -a vboxnetadp vboxnetflt\n```\n\n起動時に自動でロードするには /etc/modules-load.d/virtualbox.conf にモジュール毎に新しい行を追加してください:\n\n```\nvboxdrv\nvboxnetadp\nvboxnetflt\n```\n\nこのトピックについて詳しい情報がここにあります。\n\n"
    },
    {
      "title": "Failed to insert module",
      "level": 3,
      "content": "モジュールをロードしようとすると以下のような問題が発生する場合:\n\n```\nFailed to insert 'vboxdrv': Required key not available\n```\n\nモジュールが署名されていること、あるいはカーネルコンフィグで CONFIG_MODULE_SIG_FORCE が無効になっていることを確認してください。\n\n"
    },
    {
      "title": "VBOX_E_INVALID_OBJECT_STATE (0x80BB0007)",
      "level": 3,
      "content": "これは VM を正常終了しないと発生することがあります。VM をアンロックしてください:\n\n```\nVBoxManage controlvm nArch poweroff\n```\n\n"
    },
    {
      "title": "\"NS_ERROR_FAILURE\" が表示されメニューアイテムが表示されない",
      "level": 3,
      "content": "仮想マシンの最初の起動時に以下のエラーメッセージが表示される場合:\n\n```\nFailed to open a session for the virtual machine debian.\nCould not open the medium '/home/.../VirtualBox VMs/debian/debian.qcow'.\nQCow: Reading the L1 table for image '/home/.../VirtualBox VMs/debian/debian.qcow' failed (VERR_EOF).\nVD: error VERR_EOF opening image file '/home/.../VirtualBox VMs/debian/debian.qcow' (VERR_EOF).\n\nResult Code: \nNS_ERROR_FAILURE (0x80004005)\nComponent: \nMedium\n```\n\nVirtualBox を終了して新しいマシンのファイルを全て削除して、virtualbox の設定ファイルから MachineRegistry メニュー (あるいはあなたが作成した問題のマシン) の最後の行を削除してください:\n\n```\n~/.config/VirtualBox/VirtualBox.xml\n```\n\n```\n...\n<MachineRegistry>\n  <MachineEntry uuid=\"{00000000-0000-0000-0000-000000000000}\" src=\"/home/void/VirtualBox VMs/debian/debian.vbox\"/>\n  <MachineEntry uuid=\"{00000000-0000-0000-0000-000000000000}\" src=\"/home/void/VirtualBox VMs/ubuntu/ubuntu.vbox\"/>\n  <MachineEntry uuid=\"{00000000-0000-0000-0000-000000000000}\" src=\"/home/void/VirtualBox VMs/lastvmcausingproblems/lastvmcausingproblems.qcow\"/>\n</MachineRegistry>\n...\n```\n\n新しい仮想ディスクを作成するときに QCOW/QCOW2/QED ディスク形式を選択すると時々発生します。\n\n"
    },
    {
      "title": "仮想化命令が使用できない場合の OpenBSD の使用不可",
      "level": 3,
      "content": "OpenBSD は、仮想化命令 (VT-x AMD-V) が有効になっていない他のハイパーバイザー上では正常に動作すると報告されていますが、これらの命令がない VirtualBox 上で実行される OpenBSD 仮想マシンは、 多くのセグメンテーションフォールトを発生させて使用不能になるでしょう。VirtualBox を -norawr0 引数で起動すれば、この問題は解決するかもしれません。このようにしてみてください。\n\n```\n$ VBoxSDL -norawr0 -vm name_of_OpenBSD_VM\n```\n\n"
    },
    {
      "title": "Windows ゲストで \"The specified path does not exist. Check the path and then try again.\" エラー",
      "level": 3,
      "content": "管理者権限を必要とする .exe ファイルを Windows ゲストの共有フォルダから実行するとエラーメッセージが発生します。詳しくは バグレポート を見てください。\n\n複数の対処方法があります:\n\n1. Control Panel -> Action Center -> \"Change User Account Control settings\" の左側 -> スライダーを \"Never notify\" に設定 -> OK して再起動することで UAC を無効化する\n1. 共有フォルダからゲストのフォルダにファイルをコピーしてから実行する\n\nインターネット上には信頼されるサイトのリストに VBOXSVR を追加するように書かれていることもありますが、その方法は Windows 7 以上では上手く行きません。\n\n"
    },
    {
      "title": "Windows 8.x Error Code 0x000000C4",
      "level": 3,
      "content": "OS Type で Win 8 を選んだのに、起動時に以下のエラーコードが表示される場合、CMPXCHG16B CPU 命令を有効化してみてください:\n\n```\n$ vboxmanage setextradata virtual_machine_name VBoxInternal/CPUM/CMPXCHG16B 1\n```\n\n"
    },
    {
      "title": "Windows 8, 8.1, 10 がインストール・起動できない、あるいは \"ERR_DISK_FULL\" エラーが表示される",
      "level": 3,
      "content": "Settings > Storage > Controller:SATA から \"Use Host I/O Cache\" にチェックを入れて VM の設定を更新してください。\n\n"
    },
    {
      "title": "WinXP: ビット深度を 16 より上げることができない",
      "level": 3,
      "content": "16-ビット色深度で動作させている場合、アイコンの見た目が毛羽立ったりむらがでるかもしれません。しかし、色深度をもっと高く変えようとすると、システムの解像度が低くなってしまったり、もしくは全く深度が変えられないかもしれません。これを修正するには、regedit を起動し次のキーをゲスト側の Windows XP レジストリに追加します:\n\n```\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services]\n\"ColorDepth\"=dword:00000004\n```\n\nそれからデスクトップのプロパティウィンドウから色深度を変えてください。何も怒らない場合、強制的に画面を再描写させてください（つまり、Host+F で再描写するか、フルスクリーンにしてください）。\n\n"
    },
    {
      "title": "Windows: 3D アクセラレーションが有効な場合の画面のちらつき",
      "level": 3,
      "content": "VirtualBox > 4.3.14 には、3D アクセラレーションを使用する Windows ゲストがちらつくリグレッションがあります。r120678 以降、環境変数の設定を認識するパッチが実装されているため、次のように VirtualBox を起動します。\n\n```\n$ CR_RENDER_FORCE_PRESENT_MAIN_THREAD=0 VirtualBox\n```\n\nVirtualBox サービスがまだ実行されていないことを確認します。VirtualBox bug 13653 を参照してください。\n\n"
    },
    {
      "title": "Wayland で VirtualBox を起動できない: Segmentation fault",
      "level": 3,
      "content": "この問題は、Qt が Wayland を検出する (例えば、XDG_SESSION_TYPE=wayland)一方で、VirtualBox がまだ Wayland で動作しないために発生します。FS#58761 と upstream bug を参照してください。\n\n環境変数 QT_QPA_PLATFORM=xcb を設定することで、Qt のプラットフォーム検出を無効にし、Wayland 上で X11 を強制的に動作させることができます。他の Qt アプリケーション (通常は Wayland でうまく動作する) に影響を与えないように、QT_QPA_PLATFORM=xcb は VirtualBox 起動時のみ設定されるべきです。\n\nデスクトップエントリから起動する場合は、デスクトップエントリ#環境変数の修正の指示に従い、Exec=VirtualBox ... で始まる行を Exec=env QT_QPA_PLATFORM=xcb VirtualBox ... に変更してください。シェルから起動する場合は、エイリアス(Bash#エイリアス) を virtualbox から env QT_QPA_PLATFORM=xcb virtualbox に変更します。\n\n"
    },
    {
      "title": "Intel グラフィックスを使用したゲストでのランダムフリーズ",
      "level": 3,
      "content": "Intel CPU およびグラフィックスでは、ゲストに多くのプロセッサを割り当てるとレンダリングパフォーマンスが低下し、ランダムフリーズが発生する可能性があります。より少ないプロセッサまたは 1 つのプロセッサを割り当てることで解決できます。\n\n"
    },
    {
      "title": "フルスクリーンモードでゲストの画面が表示されない",
      "level": 3,
      "content": "ウィンドウマネージャによっては (例: i3)、オーバーレイバーが原因で VirtualBox のフルスクリーンモードで問題が発生します。この問題を回避するには、\"Guest Settings --> User Interface --> Mini ToolBar\" から \"Show in Full-screen/Seamless\" オプションを無効にしてください。詳しくは 上流のバグレポート を参照。\n\n"
    },
    {
      "title": "Intel Tiger Lake チップセット搭載の Windows 10 ゲスト OS でランダムクラッシュが発生する",
      "level": 3,
      "content": "カーネルパラメータに split_lock_detect=off を追加して、スプリットロック検出を無効にする。\n\n詳細は VirtualBox の Ticket #20180 に記載されています。\n\n"
    },
    {
      "title": "第11世代Intel CPUでの仮想マシン起動時のフリーズ",
      "level": 3,
      "content": "traps: Missing ENDBR と kernel BUG at arch/x86/kernel/traps.c というメッセージが journal に表示されたら、カーネルパラメータとして ibt=off を追加してみるとよいでしょう。FS#74891 にリンクしているようです。\n\n"
    },
    {
      "title": "セキュアブートを有効にすると、設定の保存に失敗する",
      "level": 3,
      "content": "VirtualBox 7.0.0 では、以前のバージョンの VirtualBox で作成された仮想マシンで Secure Boot を有効にすると、nondescript エラー (FS#76234) が発生して失敗することがあります。\n\n```\nFailed to save the settings.\n```\n\n解決方法するには、Enable Secure Boot チェックボックスのすぐ下にある Reset Keys to Default ボタンをクリックします。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- VirtualBox User Manual\n- Wikipedia:VirtualBox\n\n"
    }
  ]
}
{
  "title": "Pacmatic (日本語)",
  "url": "https://wiki.archlinux.org/title/Pacmatic_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- 一般的な推奨事項\n\n長期にわたって Arch を適切に機能させるには定期的なシステムメンテナンスが不可欠です。暇があるときにメンテナンスするのは多くのユーザーの習慣となっています。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 エラーの確認 1.1 systemd サービスの失敗 1.2 ログファイル\n- 2 バックアップ 2.1 設定ファイル 2.2 インストールされているパッケージのリスト 2.3 Pacman データベース 2.4 暗号化メタデータ 2.5 システムおよびユーザーデータ\n- 3 システムのアップグレード 3.1 システムをアップグレードする前に読んでください 3.2 特定の pacman コマンドを避けてください 3.3 部分的なアップグレードはサポートされていません 3.4 アップグレード中のアラートに対応 3.5 新しい設定ファイルを迅速に処理する 3.6 アップグレード後に再起動 3.7 壊れた更新を元に戻す 3.8 孤立したパッケージとドロップされたパッケージを確認します\n- 4 パッケージマネージャーを使用してソフトウェアをインストールする 4.1 オープンソースドライバーを選択してください 4.2 非公式パッケージに注意してください 4.3 ミラーリストを更新します\n- 5 ファイルシステムの掃除 5.1 パッケージキャッシュ 5.2 (孤立) した未使用のパッケージ 5.3 ホームディレクトリの掃除 5.4 壊れたシンボリックリンク\n- 6 ヒントとテクニック 6.1 実績のあるソフトウェアパッケージを使用する 6.2 linux-lts パッケージをインストールします\n- 7 参照\n\n- 1.1 systemd サービスの失敗\n- 1.2 ログファイル\n\n- 2.1 設定ファイル\n- 2.2 インストールされているパッケージのリスト\n- 2.3 Pacman データベース\n- 2.4 暗号化メタデータ\n- 2.5 システムおよびユーザーデータ\n\n- 3.1 システムをアップグレードする前に読んでください\n- 3.2 特定の pacman コマンドを避けてください\n- 3.3 部分的なアップグレードはサポートされていません\n- 3.4 アップグレード中のアラートに対応\n- 3.5 新しい設定ファイルを迅速に処理する\n- 3.6 アップグレード後に再起動\n- 3.7 壊れた更新を元に戻す\n- 3.8 孤立したパッケージとドロップされたパッケージを確認します\n\n- 4.1 オープンソースドライバーを選択してください\n- 4.2 非公式パッケージに注意してください\n- 4.3 ミラーリストを更新します\n\n- 5.1 パッケージキャッシュ\n- 5.2 (孤立) した未使用のパッケージ\n- 5.3 ホームディレクトリの掃除\n- 5.4 壊れたシンボリックリンク\n\n- 6.1 実績のあるソフトウェアパッケージを使用する\n- 6.2 linux-lts パッケージをインストールします\n\n"
    },
    {
      "title": "systemd サービスの失敗",
      "level": 3,
      "content": "systemd サービスが failed 状態になってないか確認:\n\n```\n$ systemctl --failed\n```\n\n詳しくは systemd#ユニットを使う を参照。\n\n"
    },
    {
      "title": "ログファイル",
      "level": 3,
      "content": "/var/log/ にあるログファイルのエラーを確認し、systemd ジャーナルに記録されたメッセージも確認してください:\n\n```\n# journalctl -b\n```\n\n詳しくは systemd/ジャーナル を見て下さい。\n\nXorg のエラーについては Xorg#トラブルシューティングを見てください。\n\n"
    },
    {
      "title": "バックアップ",
      "level": 2,
      "content": "重要なデータのバックアップを定期的に作成します。ケースにより適した多くの代替アプリケーションについては、同期およびバックアッププログラム を参照してください。その他の興味深い記事については カテゴリ:システムリカバリ を参照してください。\n\nバックアップは systemd/タイマー で自動化できます。\n\n"
    },
    {
      "title": "設定ファイル",
      "level": 3,
      "content": "設定ファイルを編集する前に、問題が発生した場合に作業バージョンに戻すことができるようにバックアップを作成してください。 vim や emacs のようなエディターはこれを自動的に行うことができ、 etckeeper のようなツールは /etc を バージョン管理システム (VCS) に保持します。 :詳細については、 gitignore を使う を参照してください。\n\n"
    },
    {
      "title": "インストールされているパッケージのリスト",
      "level": 3,
      "content": "インストールされているすべてのパッケージのリストを維持して、完全な再インストールが避けられない場合に、元の環境を簡単に再作成できるようにします。\n\n詳しくは リストからパッケージをインストールする をご覧ください。\n\n"
    },
    {
      "title": "Pacman データベース",
      "level": 3,
      "content": "pacman データベースをバックアップ を参照してください。\n\n"
    },
    {
      "title": "暗号化メタデータ",
      "level": 3,
      "content": "Backup for disk encryption scenarios を参照してください。\n\n"
    },
    {
      "title": "システムおよびユーザーデータ",
      "level": 3,
      "content": "システムバックアップ を参照してください。\n\n"
    },
    {
      "title": "システムのアップグレード",
      "level": 2,
      "content": "パッケージのアップグレード を介して定期的にシステム全体のアップグレードを実行し、最新のバグ修正とセキュリティ更新の両方を楽しんだり、一度に手動で介入する必要のあるパッケージのアップグレードが多すぎたりしないようにすることをお勧めします。コミュニティにサポートを要求する場合、通常、システムは最新であると見なされます。\n\n更新後に問題が発生した場合にシステムを簡単に救出できるように、Archインストールメディアまたは別の Linux ライブ CD/USB を用意してください。 Arch を実稼働環境で実行している場合、または何らかの理由でダウンタイムを許容できない場合は、最初に、重要ではない複製システムで設定ファイルの変更とソフトウェアパッケージの更新をテストします。その後、問題が発生しない場合は、本番システムに変更をロールアウトします。\n\nシステムに AUR のパッケージがある場合は、それらすべてを慎重にアップグレードしてください。\n\npacman は強力なパッケージ管理ツールですが、すべてのケースを処理しようとするわけではありません。ユーザーは用心深く、自分のシステムを維持する責任を負わなければなりません。\n\n"
    },
    {
      "title": "システムをアップグレードする前に読んでください",
      "level": 3,
      "content": "アップグレードする前に、ユーザーは Arch Linuxホームページ にアクセスして最新ニュースを確認するか、RSS フィード を購読する必要があります、 または メーリングリスト 更新に通常とは異なるユーザーの介入が必要な場合 (pacman の指示に従うだけで処理できる以上の) 適切なニュース投稿が行われます。\n\n基本的なソフトウェア (カーネル、 xorg、 systemd、 glibc など) を新しいバージョンにアップグレードする前に、適切な フォーラム で、問題が報告されているかどうかを確認します。\n\nユーザーは、パッケージをアップグレードすると、即時の介入が必要になる可能性のある 予期しない 問題が発生する可能性があることにも同様に注意する必要があります。したがって、重要なタスクを実行するために必要になる直前に、安定したシステムをアップグレードすることはお勧めしません。アップグレード後の問題に対処できるように、代わりに十分な時間をとって待つことをお勧めします。\n\n"
    },
    {
      "title": "特定の pacman コマンドを避けてください",
      "level": 3,
      "content": "部分的なアップグレード は避けてください。つまり、 pacman -Sy を実行しないでください。代わりに、常に pacman -Syu を使用してください。\n\n通常、pacman で --overwrite オプションを使用することは避けてください。 --overwrite オプションは、 glob を含む引数を取ります。 pacman を使用すると、globに一致するファイルのファイル競合チェックがバイパスされます。適切に保守されたシステムでは、Arch 開発者によって明示的に推奨された場合にのみ使用する必要があります。 システムをアップグレードする前に読んでください セクションを参照してください。\n\npacman で -d オプションを使用することは避けてください。 pacman -Rdd package は、パッケージの削除中に依存関係のチェックをスキップします。その結果、重大な依存関係を提供するパッケージが削除され、システムが破損する可能性があります。\n\n"
    },
    {
      "title": "部分的なアップグレードはサポートされていません",
      "level": 3,
      "content": "Arch Linux はローリングリリースのディストリビューションです。つまり、新しいライブラリのバージョンがリポジトリにプッシュされると、開発者やパッケージメンテナーが、それらのライブラリに対して再ビルドが必要なすべてのパッケージをリポジトリ内で再構築します。 例えば、2つのパッケージが同じライブラリに依存している場合、一方のパッケージをアップグレードすると、その依存関係としてライブラリもアップグレードされる可能性があります。その結果、古いバージョンのライブラリに依存しているもう一方のパッケージが動作しなくなることがあります。\n\nそのため、部分的なアップグレードはサポートされていません 絶対に使用しないでください:\n\n- pacman -Sy package\n- pacman -Sy の後に pacman -S package を実行する方法 (パッケージのインストール時に -Su がない点に注意)\n- pacman -Syuw (pacman -Syuw も pacman -Sy と同様のリスクを伴い、pacman の同期データベースを更新するものの、新しいパッケージをインストールしないため注意が必要)\n\nパッケージデータベースを更新する際は、必ず pacman -Syu を使用して完全なアップグレードを行ってください。 なお、pacman -Syu がエラーによってアップグレードを実行できなかった場合、その結果は pacman -Sy を実行したのと同じになります。したがって、エラーを解決し、できるだけ早くアップグレードを完了させる必要があります。\n\n同じ理由で、IgnorePkg や IgnoreGroup を使用する際も十分注意してください。 システムにローカルでビルドされたパッケージ(例えば AUR パッケージ)がある場合、それらの依存関係がsonameの変更(バンプ)を受けた際には、ユーザーが再ビルドする必要があります。\n\nもし部分的なアップグレードが行われ、バイナリがリンク先のライブラリを見つけられずに壊れてしまった場合、シンボリックリンクを作成して \"修正\" しようとしてはいけません。 ライブラリが soname の変更を受けるのは、後方互換性がない場合です。 適切に同期されたミラーに対してシンプルに pacman -Syu を実行すれば、pacman 自体が壊れていない限り問題は解決します。\n\nまた、pacman-contrib パッケージに含まれる bash スクリプト checkupdates を使用すると、システム全体の更新を行わずにインストール済みパッケージのアップグレードを安全に確認できます。さらに、同期データベースを変更せずに、保留中のアップデートを pacman のキャッシュにダウンロードするオプションも提供されています。\n\n"
    },
    {
      "title": "アップグレード中のアラートに対応",
      "level": 3,
      "content": "システムをアップグレードするときは、pacmanが提供するアラート通知に注意してください。ユーザーが追加のアクションを必要とする場合は、すぐに対処してください。パックマンアラートがわかりにくい場合は、フォーラムと最近のニュース投稿で詳細な手順を検索してください。\n\n"
    },
    {
      "title": "新しい設定ファイルを迅速に処理する",
      "level": 3,
      "content": "pacman を呼び出すと、 .pacnew ファイルと .pacsave ファイルを作成できます。パックマンはこれが発生したときに通知を提供し、ユーザーはこれらのファイルを迅速に処理する必要があります。詳細な手順については、 Pacnew と Pacsave ファイル wiki ページを参照してください。\n\nまた、コピーまたは作成した可能性のある他の設定ファイルについても検討してください。パッケージにホームディレクトリにコピーした設定例がある場合は、新しいパッケージが作成されているかどうかを確認してください。\n\n"
    },
    {
      "title": "アップグレード後に再起動",
      "level": 3,
      "content": "通常、アップグレードは既存のプロセスには適用されません。アップグレードを完全に適用するには、プロセスを再起動する必要があります。\n\narchlinux-contrib パッケージには checkservices というスクリプトが含まれています。このスクリプトは pacdiff を実行して .pacnew ファイルをマージし、その後、更新前のライブラリで動作しているプロセスの存在をチェックして、そのプロセスを再起動するかをユーザに確認します。\n\nカーネルは、再起動せずにパッチを適用するのが特に困難です。再起動は常に最も安全なオプションですが、これが非常に不便な場合は、 カーネルライブパッチ を使用して再起動せずにアップグレードを適用できます。\n\n"
    },
    {
      "title": "壊れた更新を元に戻す",
      "level": 3,
      "content": "パッケージの更新によって問題が発生することが予想される/わかっている場合、パッケージャーは、パッケージが更新されたときに pacman が適切なメッセージを表示するようにします。更新後に問題が発生した場合は、 /var/log/pacman.log を参照して、 pacman の出力を再確認してください。\n\nこの時点で、pacmanを通じて入手できる情報がないこと、https://www.archlinux.org/ に相対的なニュースがないこと、および更新に関するフォーラムの投稿がないことを確認した後で、問題の パッケージのダウングレード して フォーラム、 IRC で支援を求めることを検討してください。\n\n"
    },
    {
      "title": "孤立したパッケージとドロップされたパッケージを確認します",
      "level": 3,
      "content": "アップグレード後、不要になったパッケージや、公式リポジトリから削除されたパッケージが存在する可能性があります。\n\npacman -Qtd を使用すると、依存関係としてインストールされたものの、現在は他のパッケージから依存されていないパッケージを確認できます。 もし孤立した (orphan) パッケージがまだ必要な場合は、インストール理由を明示的 (explicit) に変更することを推奨します。 一方で、不要になった場合は削除できます。詳細は pacman/ヒントとテクニック#使用していないパッケージ (孤立したパッケージ) の削除 を参照してください。\n\nさらに、一部のパッケージはリモートリポジトリには存在しなくなったものの、ローカルシステムには残っている場合があります。 すべての外部(foreign)パッケージを一覧表示するには、pacman -Qm を使用します。 ただし、このリストには手動でインストールしたパッケージ (例: AUR からインストールしたもの) も含まれます。 AUR で現在も利用可能なパッケージを除外するには、BBS#288205 のスクリプトを使用するか、ancient-packagesAUR ツールを試してみてください。\n\n"
    },
    {
      "title": "パッケージマネージャーを使用してソフトウェアをインストールする",
      "level": 2,
      "content": "Pacman は、ファイルを追跡する上であなたよりもはるかに優れた仕事をします。手動でインストールすると、遅かれ早かれ、何をしたかを忘れたり、インストールした場所を忘れたり、競合するソフトウェアをインストールしたり、間違った場所にインストールしたりします。\n\n- パッケージのインストール セクションの方法を使用して公式リポジトリからパッケージをインストールします。\n- ご希望のプログラムがない場合は、 AUR で誰かがパッケージを作成していないか確認してください。その記事の方法に従ってインストールしてください。\n- 最後に、必要なプログラムが公式リポジトリまたは AUR にない場合は、そのプログラムのパッケージの作成方法を学習してください。\n\n不適切にインストールされたファイルをクリーンアップするには、pacman/ヒントとテクニック#どのパッケージにも所有されていないファイルを特定する を参照してください。\n\n"
    },
    {
      "title": "オープンソースドライバーを選択してください",
      "level": 3,
      "content": "プロプライエタリドライバに頼る前に、常にオープンソースドライバを試してください。ほとんどの場合、オープンソースドライバーはプロプライエタリドライバーよりも安定していて信頼性があります。オープンソースドライバーのバグは、より簡単かつ迅速に修正されます。プロプライエタリドライバーはより多くの機能を提供できますが、これには安定性が犠牲になる可能性があります。このジレンマを回避するには、完全な機能を備えた成熟したオープンソースドライバーをサポートしていることがわかっているハードウェアコンポーネントを選択してみてください。オープンソースのLinuxドライバーを備えたハードウェアに関する情報は、 linux-drivers.org で入手できます。\n\n"
    },
    {
      "title": "非公式パッケージに注意してください",
      "level": 3,
      "content": "AUR または 非公式ユーザーリポジトリ のパッケージを使用する場合は注意が必要です。ほとんどは通常のユーザーによって提供されているため、公式リポジトリの標準と同じ基準ではない場合があります。 AUR パッケージのインストールを自動化する AUR ヘルパー は避けてください。 常にパッケージをビルドおよび/またはインストールする前に、 PKGBUILD の正常性、間違いまたは悪意のあるコードの兆候を確認してください。\n\nメンテナンスを簡素化するために、使用する非公式パッケージの量を制限してください。実際に使用されているものを定期的にチェックし、他のものを削除(または公式の対応物と交換)します。便利なコマンドについては、 Pacman メンテナンス を参照してください。\n\n"
    },
    {
      "title": "ミラーリストを更新します",
      "level": 3,
      "content": "ミラーの品質は時間の経過とともに変化する可能性があり、一部がオフラインになったり、ダウンロード速度が低下したりする可能性があるため、pacmanのミラーリストを更新してください。\n\n詳細については、 ミラー を参照してください。\n\n"
    },
    {
      "title": "ファイルシステムの掃除",
      "level": 2,
      "content": "削除するファイルを探すときは、一番ディスク容量を取っているファイルを見つけるのが重要です。この作業に役立つプログラムは以下に載っています:\n\n- アプリケーション一覧#ディスク使用量表示プログラム。\n- アプリケーション一覧#ディスクの消去。\n\n"
    },
    {
      "title": "パッケージキャッシュ",
      "level": 3,
      "content": "/var/cache/pacman/pkg/ から不要な .pkg ファイルを削除して、ディスク領域を解放します。\n\n詳細については、 パッケージキャッシュの削除 を参照してください。\n\n"
    },
    {
      "title": "(孤立) した未使用のパッケージ",
      "level": 3,
      "content": "システムから未使用のパッケージを削除して、ディスクスペースを解放し、メンテナンスを簡素化します。\n\n詳細については、 使用していないパッケージの削除 (孤立したパッケージ) を参照してください。\n\n"
    },
    {
      "title": "ホームディレクトリの掃除",
      "level": 3,
      "content": "古い設定ファイルは、新しいソフトウェアのバージョンと競合したり、時間の経過とともに破損する可能性があります。 不要な設定ファイルは定期的に削除しましょう。特に、ホームディレクトリや ~/.config 内の設定ファイルを整理することを推奨します。 同様の理由から、異なるインストール環境間でホームディレクトリを共有する際も注意が必要です。\n\n以下のディレクトリを確認してください:\n\n- ~/.config/ -- アプリケーションが設定を保存するフォルダ\n- ~/.cache/ -- プログラムのキャッシュによって巨大化することがあります\n- ~/.local/share/ -- 古いファイルがここに保存されていることがあります\n\n詳細については、XDG Base Directory を参照してください。\n\nホームディレクトリに不要な一時ファイルが誤った場所に作成されるのを防ぐために、不要なファイルのリストを管理し、定期的に削除することをおすすめします。 例えば、rmshit.py を使用すると便利です。\n\nrmlint-gitAUR を使用すると、重複ファイル、空のファイル、再帰的な空ディレクトリ、壊れたシンボリックリンクを検出し、必要に応じて削除できます。\n\n"
    },
    {
      "title": "壊れたシンボリックリンク",
      "level": 3,
      "content": "古い、壊れたシンボリックリンクがシステムの周りにある可能性があります。 それらを削除する必要があります。 これらを参照して下さい、 こちら および こちら しかし、壊れたシンボリックリンクの中には目的を果たすものもあるのでやみくもに削除しないでください [1]\n\nシステムの壊れたシンボリックリンクをすべてすばやく一覧表示するには、次を使用します。\n\n```\n# find / -type d \\( -path \"/dev\" -o -path \"/proc\" -o -path \"/run\" -o -path \"/sys\" \\) -prune -o -xtype l -print\n```\n\n次に、このリストから不要なエントリを調べて削除します。\n\n"
    },
    {
      "title": "ヒントとテクニック",
      "level": 2,
      "content": "以下のヒントは通常は必要ありませんが、特定のユーザーはそれらが役立つと感じるかもしれません。\n\n"
    },
    {
      "title": "実績のあるソフトウェアパッケージを使用する",
      "level": 3,
      "content": "Arch のローリングリリースは、最新の機能を試し、できるだけ早くアップストリームの更新を取得したいユーザーにとっては朗報ですが、システムのメンテナンスをより困難にする可能性もあります。メンテナンスを簡素化し、安定性を向上させるには、最先端のソフトウェアを避け、成熟した実績のあるソフトウェアのみをインストールするようにしてください。このようなパッケージは、主要な構成の変更や機能の削除など、難しいアップグレードを受け取る可能性が低くなります。問題が発生した場合のサポートを簡素化するために、強力で活発な開発コミュニティと多数の有能なユーザーがいるソフトウェアを優先します。\n\nテストからの個々のパッケージであっても、テストリポジトリの使用は避けてください。これらのパッケージは実験的なものであり、安定したシステムには適していません。同様に、アップストリームの開発ソースから直接ビルドされたパッケージは避けてください。これらは通常 AUR にあり、dev、devel、svn、cvs、git などの名前が付いています。\n\n"
    },
    {
      "title": "linux-lts パッケージをインストールします",
      "level": 3,
      "content": "linux-lts パッケージは代替の Arch カーネルパッケージであり、 core リポジトリで入手できます。この特定のカーネルバージョンには、セキュリティ修正や一部の機能バックポートなど、アップストリームからの長期サポート (LTS) があります。頻度の低いカーネル更新と安定性が必要な場合、または新しいカーネルバージョンで問題が発生した場合に備えて、フォールバックカーネルが必要な場合に役立ちます。\n\nブートオプションとして使用できるようにするには、 ブートローダ の設定ファイルを更新して LTS カーネルと RAM ディスクを使用する必要があります: vmlinuz-linux-lts と initramfs -linux-lts.img\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Arch News Bash Script\n- fwupd\n\n"
    }
  ]
}
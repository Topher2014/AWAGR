{
  "title": "Wireshark (Français)",
  "url": "https://wiki.archlinux.org/title/Wireshark_(Fran%C3%A7ais)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Wireshark est un analyseur de paquets gratuit et open-source. Il est utilisé pour le dépannage des réseaux, l'analyse, le développement de logiciels et de protocoles de communication, et l'éducation.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Installez le paquet wireshark-qt pour l'interface graphique de Wireshark ou wireshark-cli pour la CLI simple tshark(1).\n\ntermshark est une interface utilisateur alternative pour le terminal.\n\n"
    },
    {
      "title": "Privilèges de capture",
      "level": 2,
      "content": "N'exécutez pas Wireshark en tant que root, ce n'est pas sûr. Wireshark a implémenté la séparation des privilèges, ce qui signifie que l'interface graphique de Wireshark (ou la CLI de tshark) peut s'exécuter en tant qu'utilisateur normal tandis que l'utilitaire de capture dumpcap s'exécute en tant que root [1].\n\nLe script d'installation du paquet wireshark-cli définit les capacités de capture de paquets sur l'exécutable /usr/bin/dumpcap.\n\n/usr/bin/dumpcap ne peut être exécuté que par root et les membres du groupe wireshark, donc pour utiliser Wireshark en tant qu'utilisateur normal vous devez ajouter votre utilisateur au groupe d'utilisateurs wireshark.\n\n"
    },
    {
      "title": "Quelques techniques de capture",
      "level": 2,
      "content": "Il existe plusieurs façons de capturer exactement ce que vous recherchez dans Wireshark, en appliquant des filtres de capture ou des filtres d'affichage.\n\n"
    },
    {
      "title": "Filtrage des paquets TCP",
      "level": 3,
      "content": "Si vous voulez consulter tous les paquets TCP actuels, tapez tcp dans la barre Filtre ou dans le CLI, entrez :\n\n```\n$ tshark -f \"tcp\"\n```\n\n"
    },
    {
      "title": "Filtrer les paquets UDP",
      "level": 3,
      "content": "Si vous voulez consulter tous les paquets UDP actuels, tapez udp dans la barre Filtre ou dans la CLI, entrez : $ tshark -f \"tcp\" ===\n\n```\n$ tshark -f \"udp\"\n```\n\n"
    },
    {
      "title": "Filtrer les paquets vers une adresse IP spécifique",
      "level": 3,
      "content": "- Si vous souhaitez consulter tout le trafic allant vers une adresse spécifique, entrez display filter ip.dst == 1.2.3.4, en remplaçant 1.2.3.4 par l'adresse IP vers laquelle le trafic sortant est envoyé.\n- Si vous souhaitez consulter tout le trafic entrant pour une adresse spécifique, entrez le filtre d'affichage ip.src == 1.2.3.4, en remplaçant 1.2.3.4 par l'adresse IP vers laquelle le trafic entrant est envoyé.\n- Si vous souhaitez consulter tout le trafic entrant et sortant pour une adresse spécifique, saisissez un filtre d'affichage ip.addr == 1.2.3.4, en remplaçant 1.2.3.4 par l'adresse IP concernée.\n\n"
    },
    {
      "title": "Exclure les paquets provenant d'une adresse IP spécifique",
      "level": 3,
      "content": "```\nip.addr != 1.2.3.4\n```\n\n"
    },
    {
      "title": "Filtrer les paquets vers le LAN",
      "level": 3,
      "content": "Pour consulter uniquement le trafic du réseau local et pas celui d'Internet, exécutez\n\n```\n(ip.src==10.0.0/8 AND ip.dst==10.0.0/8) OR (ip.src==172.16.0.0/12 AND ip.dst==172.16.0.0/12) OR (ip.src==192.168.0.0/16 and ip.dst==192.168.0.0/16)\n```\n\nCela permettra de filtrer le trafic dans n'importe quel espace du réseau privé.\n\n"
    },
    {
      "title": "Filtrer les paquets par port",
      "level": 3,
      "content": "Consultez tout le trafic sur deux ports ou plus :\n\n```\ntcp.port==80||tcp.port==3306\ntcp.port==80||tcp.port==3306||tcp.port==443\n```\n\n"
    },
    {
      "title": "Capture «headless» avec dumpcap",
      "level": 3,
      "content": "dumpcap fait partie de Wireshark et peut être utilisé pour capturer des paquets sans l'interface graphique. Utilisé en combinaison avec tmux, il permettra la capture de paquets dans une session détachée.\n\nPour voir toutes les options de dumpcap, utilisez le paramètre -h.\n\nL'exemple suivant fournira une capture de ringbuffer. Il capture vingt fichiers .pcap de 100 Mo chacun, en remplaçant le fichier le plus ancien par le vingt-et-unième et ainsi de suite... Cela permet une capture continue sans épuiser l'espace disque.\n\n```\n# dumpcap -i 1 -b filesize:100000 -b files:20 -w mycapture.pcapng\n```\n\n- -i — numéro d'interface (listé à partir de dumpcap -D)\n\n- -b filesize: — taille du fichier en kB avant le démarrage d'un nouveau fichier .pcap.\n\n- -b files: — le nombre de fichiers à capturer avant d'écraser le plus ancien\n\n- -w — écrit la sortie dans le fichier mycaptureidentifiant.pcap\n\n"
    }
  ]
}
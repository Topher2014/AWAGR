{
  "title": "Dracut (Português)",
  "url": "https://wiki.archlinux.org/title/Dracut_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- mkinitcpio\n\ndracut cria uma imagem inicial usada pelo kernel para pré-carregar os módulos do dispositivo de bloco (como IDE, SCSI ou RAID) necessários para acessar o sistema de arquivos raiz. Ao instalar o linux, você pode escolher entre mkinitcpio e dracut. O dracut é usado pelo Fedora, RHEL, Gentoo e Debian, entre outros.\n\nVocê pode ler a documentação completa do projeto do dracut na documentação do kernel.\n\n"
    },
    {
      "title": "Instalação",
      "level": 2,
      "content": "Instale o pacote dracut ou o pacote dracut-gitAUR para a versão de desenvolvimento mais recente.\n\nNote: **após você testá-lo** \n\n"
    },
    {
      "title": "Configuração",
      "level": 2,
      "content": "Se você deseja executar sempre o dracut com um determinado conjunto de sinalizadores, é possível salvar uma configuração especificada em um arquivo .conf em /etc/dracut.conf.d/. Por exemplo:\n\n```\n/etc/dracut.conf.d/myflags.conf\n```\n\n```\nhostonly=\"yes\"\ncompress=\"lz4\"\nadd_drivers+=\" i915 \"\nomit_dracutmodules+=\" network iscsi \"\n```\n\nVocê pode ver mais opções de configuração em dracut.conf(5). Descrições mais completas de cada opção podem ser encontradas em dracut(8).\n\n"
    },
    {
      "title": "Opções de linha de comando do kernel",
      "level": 3,
      "content": "Você pode forçar o dracut a usar parâmetros de linha de comando do kernel no ambiente de initramfs. Esteja ciente de que você deve usar o esquema de nomenclatura UUID para especificar dispositivos de bloco.\n\nNão é necessário especificar o dispositivo de bloco raiz para o dracut. A partir de dracut.cmdline(7):\n\nNo entanto, pode ser útil definir alguns parâmetros antecipadamente e você pode ativar recursos adicionais, como solicitar parâmetros adicionais da linha de comando. Veja dracut.cmdline(7) para todas as opções. Aqui estão algumas opções de configuração de exemplo:\n\n- Continuar a partir de uma partição swap: resume=UUID=80895b78-7312-45bc-afe5-58eb4b579422\n- Solicitar parâmetros adicionais da linha de comando do kernel: rd.cmdline=ask\n- Exibir saída informativa mesmo se \"quiet\" estiver definido: rd.info\n\nAs opções de linha de comando do kernel devem ser colocadas linha a linha semelhantes ao estilo /etc/dracut.conf.d/, em um arquivo *.conf em /etc/cmdline.d/. Por exemplo, o arquivo de opções da linha de comando do kernel pode se parecer com:\n\n```\n/etc/cmdline.d/myflags.conf\n```\n\n```\nresume=UUID=80895b78-7312-45bc-afe5-58eb4b579422\nrd.cmdline=ask\nrd.info\n```\n\n"
    },
    {
      "title": "Uso",
      "level": 2,
      "content": "O dracut é fácil de usar e normalmente não requer configuração do usuário, mesmo ao usar configurações não padrão, como LVM dentro do LUKS.\n\nPara gerar um initramfs para o kernel em execução:\n\n```\n# dracut /boot/initramfs-linux.img\n```\n\nPara gerar um initramfs reserva, execute:\n\n```\n# dracut -N /boot/initramfs-linux-fallback.img\n```\n\n/boot/initramfs-linux.img refere-se ao arquivo de imagem de saída. Se você estiver usando o kernel não regular, considere alterar o nome do arquivo. Por exemplo, para o kernel linux-lts, o arquivo de saída deve ser nomeado /boot/initramfs-linux-lts.img. No entanto, você pode nomear esses arquivos como desejar, desde que sua configuração do gerenciador de boot use os mesmos nomes de arquivo.\n\n"
    },
    {
      "title": "Sinalizadores adicionais",
      "level": 3,
      "content": "O sinalizador --hostonly cria uma imagem que contém apenas os arquivos necessários para inicializar o sistema host local, em vez de criar uma imagem genérica com mais arquivos. O uso desse sinalizador reduz o tamanho da imagem gerada, mas você não poderá usá-la em outros computadores ou alternar para um sistema de arquivos raiz diferente sem gerar uma nova imagem.\n\nO sinalizador --force sobrescreve o arquivo de imagem se ele já estiver presente.\n\nMais sinalizadores podem ser encontrados em dracut(8).\n\n"
    },
    {
      "title": "Dicas e truques",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n"
    },
    {
      "title": "Ver informações sobre a imagem gerada",
      "level": 3,
      "content": "Você pode visualizar informações sobre uma imagem initramfs gerada, que pode desejar visualizar em um paginador:\n\n```\n# lsinitrd /caminho/para/imagem_initramfs | less\n```\n\nEste comando listará os argumentos transmitidos ao dracut quando a imagem foi criada, a lista de módulos dracut incluídos e a lista de todos os arquivos incluídos.\n\n"
    },
    {
      "title": "Alterar o programa de compactação",
      "level": 3,
      "content": "Para reduzir o tempo gasto compactando a imagem final, você pode alterar o programa de compactação usado.\n\n- Verifique se o seu kernel tem o suporte de descompactação escolhido compilado, caso contrário você não poderá inicializar. Você também deve ter o pacote de programa de compactação escolhido instalado.\n- O kernel Linux não possui suporte a initramfs compactado em zstd.[1]\n\nBasta adicionar qualquer uma das seguintes linhas (não várias) à sua configuração do dracut:\n\n```\ncompress=\"cat\"\ncompress=\"gzip\"\ncompress=\"bzip2\"\ncompress=\"lzma\"\ncompress=\"xz\"\ncompress=\"lzo\"\ncompress=\"lz4\"\n```\n\ngzip é o programa de compactação padrão usado. compress=\"cat\" criará o initramfs com nenhuma compatação.\n\nVocê também pode usar um programa de compactação sem suporte oficial:\n\n```\ncompress=\"programa\"\n```\n\n"
    },
    {
      "title": "Gerar um novo initramfs na atualização de kernel",
      "level": 3,
      "content": "É possível gerar automaticamente novas imagens initramfs a cada atualização do kernel. As instruções aqui são para o kernel padrão linux, mas deve ser fácil adicionar hooks extras para outros kernels.\n\nComo o comando para descobrir a versão do kernel é um tanto complexo, ele não funcionará por si só em um hook do pacman. Portanto, crie um script em qualquer lugar do seu sistema. Para este exemplo, ele será criado em /usr/local/bin/.\n\nO script também copiará o novo arquivo de kernel vmlinuz para /boot/, pois os pacotes do kernel não colocam mais arquivos em /boot/.[2]\n\n```\n/usr/local/bin/dracut-install.sh\n```\n\n```\n#!/usr/bin/env bash\n\nargs=('--force' '--no-hostonly-cmdline')\n\nwhile read -r line; do\n\tif [[ \"$line\" == 'usr/lib/modules/'+([^/])'/pkgbase' ]]; then\n\t\tread -r pkgbase < \"/${line}\"\n\t\tkver=\"${line#'usr/lib/modules/'}\"\n\t\tkver=\"${kver%'/pkgbase'}\"\n\n\t\tinstall -Dm0644 \"/${line%'/pkgbase'}/vmlinuz\" \"/boot/vmlinuz-${pkgbase}\"\n\t\tdracut \"${args[@]}\" --hostonly \"/boot/initramfs-${pkgbase}.img\" --kver \"$kver\"\n\t\tdracut \"${args[@]}\" --no-hostonly \"/boot/initramfs-${pkgbase}-fallback.img\" --kver \"$kver\"\n\tfi\ndone\n```\n\n```\n/usr/local/bin/dracut-remove.sh\n```\n\n```\n#!/usr/bin/env bash\n\nwhile read -r line; do\n\tif [[ \"$line\" == 'usr/lib/modules/'+([^/])'/pkgbase' ]]; then\n\t\tread -r pkgbase < \"/${line}\"\n\t\trm -f \"/boot/vmlinuz-${pkgbase}\" \"/boot/initramfs-${pkgbase}.img\" \"/boot/initramfs-${pkgbase}-fallback.img\"\n\tfi\ndone\n```\n\nVocê precisa tornar os scripts executáveis. Se você deseja adicionar ou remover sinalizadores, você deve adicioná-los à sua configuração do dracut.\n\nO próximo passo é criar hooks do pacman:\n\n```\n/etc/pacman.d/hooks/90-dracut-install.hook\n```\n\n```\n[Trigger]\nType = Path\nOperation = Install\nOperation = Upgrade\nTarget = usr/lib/modules/*/pkgbase\n\n[Action]\nDescription = Updating linux initcpios (with dracut!)...\nWhen = PostTransaction\nExec = /usr/local/bin/dracut-install.sh\nNeedsTargets\n```\n\n```\n/etc/pacman.d/hooks/60-dracut-remove.hook\n```\n\n```\n[Trigger]\nType = Path\nOperation = Remove\nTarget = usr/lib/modules/*/pkgbase\n\n[Action]\nDescription = Removing linux initcpios...\nWhen = PreTransaction\nExec = /usr/local/bin/dracut-remove.sh\nNeedsTargets\n```\n\nVocê tem que impedir o mkinitcpio de criar e remover imagens initramfs também, removendo mkinitcpio ou com os seguintes comandos:\n\n```\n# ln -sf /dev/null /etc/pacman.d/hooks/90-mkinitcpio-install.hook\n# ln -sf /dev/null /etc/pacman.d/hooks/60-mkinitcpio-remove.hook\n```\n\n"
    },
    {
      "title": "Espaços nos parâmetros do kernel",
      "level": 3,
      "content": "O dracut não tem suporte a valores entre aspas com espaços nos parâmetros do kernel root= e resume=. Por exemplo, root=\"PARTLABEL=Arch Linux\". Consulte o issue 720 do dracut.\n\nVocê precisará especificar os parâmetros usando um esquema de nomeação de dispositivo de bloco diferente como UUID.\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- Wikipedia:dracut (software)\n- Gentoo:Dracut\n\n"
    }
  ]
}
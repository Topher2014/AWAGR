{
  "title": "Chroot (Português)",
  "url": "https://wiki.archlinux.org/title/Chroot_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- PRoot\n- Linux Containers\n- systemd-nspawn\n\nchroot é uma operação que altera o diretório raiz aparente para o processo atual de execução e seus filhos. Um programa que é executado em tal ambiente modificado não consegue acessar os arquivos e comandos fora dessa árvore de diretórios ambiental. Esse ambiente modificado é chamado de um prisão chroot (ou chroot jail).\n\n"
    },
    {
      "title": "Motivação",
      "level": 2,
      "content": "Alterar a raiz geralmente é feito para executar a manutenção do sistema em sistemas onde a inicialização e/ou a autenticação não são mais possíveis. Exemplos comuns são:\n\n- Reinstalação do gerenciador de boot.\n- Reconstrução da imagem de initramfs.\n- Atualizar ou fazer downgrade de pacotes.\n- Redefinir uma senha esquecida.\n- Compilar pacotes em um chroot limpo, veja DeveloperWiki:Building in a clean chroot.\n\nVeja também Wikipedia:Chroot#Limitations.\n\n"
    },
    {
      "title": "Requisitos",
      "level": 2,
      "content": "- Privilégio de root.\n- Outro ambiente Linux, como um LiveCD ou mídia flash USB (ex.: pendrive), ou outra distribuição Linux.\n- Ambientes com igual arquitetura; i.e. o chroot de e chroot para. A arquitetura do ambiente atual pode ser descoberta com: uname -m (ex.: i686 ou x86_64).\n- Módulos de kernel carregados que são necessários no ambiente chroot.\n- Swap habilitado se necessário: # swapon /dev/sdxY\n- Conexão com a Internet estabelecida, se necessário.\n\n```\n# swapon /dev/sdxY\n```\n\n"
    },
    {
      "title": "Uso",
      "level": 2,
      "content": "- Algumas ferramentas do systemd, tal como hostnamectl, localectl e timedatectl, não podem ser usados dentro de um chroot, pois eles exigem uma conexão dbus ativa. [1]\n- O sistema de arquivos que vai servir como uma nova raiz (/) de seu chroot deve estar acessível (i.e., descriptografado, montado).\n\nHá duas opções principais para usar chroot, descritas abaixo.\n\n"
    },
    {
      "title": "Usando arch-chroot",
      "level": 3,
      "content": "O script bash arch-chroot é parte do pacote arch-install-scripts. Antes que ele execute /usr/bin/chroot, o script monta sistemas de arquivos de api como /proc e torna o /etc/resolv.conf disponível no chroot.\n\n"
    },
    {
      "title": "Entrar em um chroot",
      "level": 4,
      "content": "Execute arch-chroot com o novo diretório raiz como o primeiro argumento:\n\n```\n# arch-chroot /local/da/nova/raiz\n```\n\nPor exemplo, no guia de instalação esse diretório seria o /mnt:\n\n```\n# arch-chroot /mnt\n```\n\nPara sair do chroot, basta usar:\n\n```\n# exit\n```\n\n"
    },
    {
      "title": "Executar um único comando e sair",
      "level": 4,
      "content": "Para executar um comando a partir do chroot e sair novamente, anexe o comando ao final da linha:\n\n```\n# arch-chroot /local/da/nova/raiz meucomando\n```\n\nPor exemplo, para executar mkinitcpio -p linux para um chroot localizado em /mnt/arch faça:\n\n```\n# arch-chroot /mnt/arch mkinitcpio -p linux\n```\n\n"
    },
    {
      "title": "Usando chroot",
      "level": 3,
      "content": "No exemplo a seguir, /local/da/nova/raiz é o diretório no qual a nova raiz reside.\n\nPrimeiro, monte os sistemas de arquivos de API temporários:\n\n```\n# cd /local/da/nova/raiz\n# mount -t proc /proc proc/\n# mount --rbind /sys sys/\n# mount --rbind /dev dev/\n```\n\nE opcionalmente:\n\n```\n# mount --rbind /run run/\n```\n\nEm seguida, para usar uma conexão com a internet no ambiente chroot copie os detalhes do DNS:\n\n```\n# cp /etc/resolv.conf etc/resolv.conf\n```\n\nFinalmente, para alterar a raiz para /local/da/nova/raiz usando um shell do bash:\n\n```\n# chroot /local/da/nova/raiz /bin/bash\n```\n\n- chroot: não foi possível executar o comando '/usr/bin/bash': Erro no formato exec, é provável que as arquiteturas do ambiente hospedeiro e do ambiente chroot não sejam iguais.\n- chroot: '/usr/bin/bash': permissão negada, remote com a permissão de execução: mount -o remount,exec /local/da/nova/raiz.\n\nApós fazer o chroot pode ser necessário carregar a configuração local do bash:\n\n```\n# source /etc/profile\n# source ~/.bashrc\n```\n\n```\n# export PS1=\"(chroot) $PS1\"\n```\n\nAo finalizar com o chroot, você pode sair dele via:\n\n```\n# exit\n```\n\nEntão, desmonte os sistemas de arquivos temporários:\n\n```\n# cd /\n# umount --recursive /local/da/nova/raiz\n```\n\n"
    },
    {
      "title": "Executar aplicativos gráficos a partir do chroot",
      "level": 2,
      "content": "Se você tiver um servidor X funcionando em seu sistema, você pode iniciar aplicativos gráficos a partir do ambiente chroot.\n\nPara permitir que o ambiente chroot se conecte a um servidor X, abra um terminal virtual dentro do servidor X (i.e. dentro do computador do usuário que está atualmente autenticado), então execute o comando xhost, que dá a permissão para qualquer um se conectar ao servidor X do usuário (veja também Xhost):\n\n```\n$ xhost +local:\n```\n\nEntão, para direcionar os aplicativos para o servidor X do chroot, defina a variável de ambiente DISPLAY dentro do chroot para corresponder a variável DISPLAY do usuário que possui o servidor X. Então, por exemplo, execute\n\n```\n$ echo $DISPLAY\n```\n\ncomo o usuário que possui o servidor X para ver o valor de DISPLAY. Se o valor for \": 0\" (por exemplo), em seguida, no ambiente chroot é executado\n\n```\n# export DISPLAY=:0\n```\n\n"
    },
    {
      "title": "Sem privilégios de root",
      "level": 2,
      "content": "O chroot requer privilégios de root, o que pode não ser desejável ou possível para o usuário obter em determinadas situações. Há, no entanto, várias maneiras de simular o comportamento de chroot com implementações alternativas.\n\n"
    },
    {
      "title": "PRoot",
      "level": 3,
      "content": "PRoot pode ser usado para alterar o diretório raiz aparente e usar mount --bind sem privilégios de root. Isso é útil para confinar aplicativos para um único diretório ou executar programas criados para uma arquitetura de CPU diferente, mas tem limitações devido ao fato de que todos os arquivos são de propriedade do usuário no sistema hospedeiro. O PRoot fornece um argumento --root-id que pode ser usado como uma solução alternativa para algumas dessas limitações de maneira semelhante (embora mais limitada) para fakeroot.\n\n"
    },
    {
      "title": "Fakechroot",
      "level": 3,
      "content": "fakechroot é uma camada de biblioteca que intercepta a chamada do chroot e falsifica os resultados. Ele pode ser usado em conjunto com fakeroot para simular um chroot como usuário comum.\n\n```\n# fakechroot fakeroot chroot ~/meu-chroot bash\n```\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- Básico de chroot\n\n"
    }
  ]
}
{
  "title": "CLR package guidelines (Русский)",
  "url": "https://wiki.archlinux.org/title/CLR_package_guidelines_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "32-bit – CLR – CMake – Cross – DKMS – Eclipse – Electron – Font – Free Pascal – GNOME – Go – Haskell – Java – KDE – Kernel – Lisp – Meson – MinGW – Node.js – Nonfree – OCaml – Perl – PHP – Python – R – Ruby – Rust – Shell – VCS – Web – Wine\n\nЭтот документ определяет стандарты для создания пакетов Common Language Runtime (.NET) для Arch Linux. На текущий момент только Mono способен обеспечить эффективный и работоспособный запуск CLR в смешанных системах. Будьте внимательны: большинство CLR-программ, разработанных в среде Microsoft .NET, могут не запуститься в Mono, так как содержат платформозависимые .NET-факторы: вызовы P/Invoke и Microsoft DRM API (цифровые средства защиты авторских прав). Однако в связке с Wine (версия 1.5.6 и выше) есть некоторая вероятность запустить приложение. Для получения информации смотрите Wine package guidelines (Русский).\n\n"
    },
    {
      "title": "Подготовка к сборке пакетов",
      "level": 2,
      "content": "- Всегда добавляйте mono в depends\n- Всегда выставляйте arch в any. Mono не поддерживает сборку (запуск) 64-битных приложений.\n- Всегда добавляйте !strip в options\n- Если Вы собираете библиотеку (DLL), установите её в Mono global assembly cache (GAC), если она будет использоваться в качестве зависимости.\n- Если приложение/библиотека поставляется с отладочной базой данных (program debug database file, Foo.dll.pdb), переконвертируйте её: pdb2mdb Foo.dll\n- Если Вы собираете приложение (EXE), убедитесь в том, что добавили скрипт для запуска в /usr/bin. Пример скрипта:\n\n```\n#!/bin/sh\nexec mono foo.exe \"$@\"\n```\n\n"
    },
    {
      "title": "Подписанные сборки",
      "level": 3,
      "content": "Если пакет будет установлен в GAC, убедитесь, что у Вас есть ключ для подписи. Если нет, то сгенерируйте его: sn -k 1024 Foo.snk. Затем Вам нужно дизассемблировать пакет: monodis Foo.dll --output=Foo.il. После чего собрать снова, но уже с подписью: ilasm /dll /key:Foo.snk Foo.il\n\n"
    },
    {
      "title": "Примеры PKGBUILD",
      "level": 2,
      "content": "Следующие примеры стараются охватить некоторые из наиболее распространённых соглашений и систем сборки.\n\n"
    },
    {
      "title": "Неподписанные DLL",
      "level": 4,
      "content": "```\n# Maintainer: ваше имя <ваша@почта>\npkgname=foo\npkgver=1.0\npkgrel=1\npkgdesc=\"Fantabulous library for .Net\"\narch=('any')\nurl=\"http://www.foo.bar\"\nlicense=('GPL')\ndepends=('mono')\noptions=('!strip')\nsource=(\"http://www.foo.bar/foobar.tar.gz\")\nmd5sums=('4736ac4f34fd9a41fa0197eac23bbc24')\n\nbuild() {\n  cd \"${srcdir}/foobar\"\n\n  xbuild Foo.sln\n\n  # если пакет не подписан, сделайте следующее:\n  cd \"/bin/x86/Debug\"\n  monodis Foo.dll --output=Foo.il\n  sn -k 1024 Foo.snk\n  ilasm /dll /key:Foo.snk Foo.il\n}\n\npackage() {\n  cd \"${srcdir}/foobar/bin/x86/Debug\"\n\n  install -Dm644 Foo.dll \"$pkgdir/usr/lib/foobar/Foo.dll\"\n  install -Dm644 Foo.dll.mdb \"$pkgdir/usr/lib/foobar/Foo.dll.mdb\"\n  \n  # Регистрация в Mono GAC\n  gacutil -i Foo.dll -root \"$pkgdir/usr/lib\"\n}\n```\n\n"
    }
  ]
}
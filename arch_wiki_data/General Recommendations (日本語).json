{
  "title": "General Recommendations (日本語)",
  "url": "https://wiki.archlinux.org/title/General_Recommendations_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- FAQ\n- インストールガイド\n- アプリケーション一覧\n\nこのドキュメントは、インストール済みの Arch に機能を追加・改善するための、人気のある記事や重要な情報の注釈付きインデックスです。Arch Linux のベースシステムのインストールについてはインストールガイドを読んでください。まずはシステム管理とパッケージ管理を読んで理解してから他のセクションやページに進んで下さい。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 システム管理 1.1 ユーザーとグループ 1.2 セキュリティ 1.3 サービス管理 1.4 システムメンテナンス\n- 2 パッケージ管理 2.1 pacman 2.2 リポジトリ 2.3 ミラー 2.4 Arch Build System 2.5 Arch User Repository\n- 3 ブート 3.1 ハードウェアの自動認識 3.2 マイクロコード 3.3 ブートメッセージの保持 3.4 起動時に Num Lock\n- 4 グラフィカルユーザーインターフェース 4.1 ディスプレイサーバー 4.2 ディスプレイドライバ 4.3 デスクトップ環境 4.4 ウィンドウマネージャやコンポジタ 4.5 ディスプレイマネージャ 4.6 ユーザーディレクトリ\n- 5 電源管理 5.1 ACPI イベント 5.2 CPU 周波数スケーリング 5.3 ノートパソコン 5.4 サスペンドとハイバネーション\n- 6 マルチメディア 6.1 サウンドシステム\n- 7 ネットワーク 7.1 時刻同期 7.2 DNS のセキュリティ 7.3 ファイアウォールの設定 7.4 ネットワーク共有\n- 8 入力デバイス 8.1 キーボードレイアウト 8.2 マウスボタンの設定 8.3 ラップトップタッチパッド 8.4 トラックポイント 8.5 Xorg での入力\n- 9 最適化 9.1 ベンチマーク 9.2 パフォーマンスの最大化 9.3 ソリッドステートドライブ\n- 10 システムサービス 10.1 ファイルインデックスと検索 10.2 ローカルメール配送 10.3 印刷\n- 11 外観 11.1 フォント 11.2 GTK と Qt のテーマ\n- 12 コンソール環境改善 12.1 Tab補完の強化 12.2 エイリアス 12.3 他のシェル 12.4 Bash の追加機能 12.5 出力のカラー化 12.6 圧縮ファイル 12.7 コンソールプロンプト 12.8 Emacs シェル 12.9 マウスサポート 12.10 セッション管理 12.11 POSIX シェルユーティリティ\n\n- 1.1 ユーザーとグループ\n- 1.2 セキュリティ\n- 1.3 サービス管理\n- 1.4 システムメンテナンス\n\n- 2.1 pacman\n- 2.2 リポジトリ\n- 2.3 ミラー\n- 2.4 Arch Build System\n- 2.5 Arch User Repository\n\n- 3.1 ハードウェアの自動認識\n- 3.2 マイクロコード\n- 3.3 ブートメッセージの保持\n- 3.4 起動時に Num Lock\n\n- 4.1 ディスプレイサーバー\n- 4.2 ディスプレイドライバ\n- 4.3 デスクトップ環境\n- 4.4 ウィンドウマネージャやコンポジタ\n- 4.5 ディスプレイマネージャ\n- 4.6 ユーザーディレクトリ\n\n- 5.1 ACPI イベント\n- 5.2 CPU 周波数スケーリング\n- 5.3 ノートパソコン\n- 5.4 サスペンドとハイバネーション\n\n- 6.1 サウンドシステム\n\n- 7.1 時刻同期\n- 7.2 DNS のセキュリティ\n- 7.3 ファイアウォールの設定\n- 7.4 ネットワーク共有\n\n- 8.1 キーボードレイアウト\n- 8.2 マウスボタンの設定\n- 8.3 ラップトップタッチパッド\n- 8.4 トラックポイント\n- 8.5 Xorg での入力\n\n- 9.1 ベンチマーク\n- 9.2 パフォーマンスの最大化\n- 9.3 ソリッドステートドライブ\n\n- 10.1 ファイルインデックスと検索\n- 10.2 ローカルメール配送\n- 10.3 印刷\n\n- 11.1 フォント\n- 11.2 GTK と Qt のテーマ\n\n- 12.1 Tab補完の強化\n- 12.2 エイリアス\n- 12.3 他のシェル\n- 12.4 Bash の追加機能\n- 12.5 出力のカラー化\n- 12.6 圧縮ファイル\n- 12.7 コンソールプロンプト\n- 12.8 Emacs シェル\n- 12.9 マウスサポート\n- 12.10 セッション管理\n- 12.11 POSIX シェルユーティリティ\n\n"
    },
    {
      "title": "システム管理",
      "level": 2,
      "content": "このセクションではシステム管理や管理者のタスクを扱っています。Core Utilities や カテゴリ:システム管理 も参照してください。\n\n"
    },
    {
      "title": "ユーザーとグループ",
      "level": 3,
      "content": "新規インストールではユーザーアカウントはスーパーユーザーしか作られません、これは root としてよく知られています。長期間 root にログインするのは愚かである (サーバーの SSH で使う場合も) と一般的に認識されており、セキュリティ上問題があります [1]。代わりに、権限を少なくしたユーザーアカウントを作って、ほとんどの作業ではそのユーザーを使い、システム管理だけに root アカウントを使うべきです。ユーザーの追加方法はユーザーとグループ#ユーザー管理を見て下さい。\n\nGNU/Linux ではユーザーとグループがアクセス制御に使われます。管理者がグループとパーミッションを調整することでユーザーやサービスがシステムリソースにアクセスするのを承諾・拒否できます。詳細と潜在的なセキュリティリスクについてはユーザーとグループを見て下さい。\n\n"
    },
    {
      "title": "セキュリティ",
      "level": 3,
      "content": "システムのセキュリティを強化する推奨事項とベストプラクティスについては、セキュリティ を参照してください。\n\n他のユーザーとして (例: root) コマンドを実行したりインタラクティブシェルを開始したりできるアプリケーションのリストは、アプリケーション一覧/セキュリティ#管理者権限 を参照してください。\n\n"
    },
    {
      "title": "サービス管理",
      "level": 3,
      "content": "Arch Linux はシステムとサービスの管理に systemd を init として使っています。あなたの Arch Linux をメンテナンスするために、systemd について基本的なことを知っておくべきです。\n\nsystemd を使うときには systemctl コマンドを使います。詳しくは systemd#systemctl の基本的な使い方 を参照して下さい。\n\nログ管理システムは journalctl コマンドにより提供されています。詳しくは Journal を参照してください。\n\n"
    },
    {
      "title": "システムメンテナンス",
      "level": 3,
      "content": "Arch はローリングリリースであり素早くパッケージが更新されます。従ってユーザーはシステムメンテナンスにある程度の時間をさくことが求められます。\n\n"
    },
    {
      "title": "パッケージ管理",
      "level": 2,
      "content": "このセクションではパッケージ管理に関する有益な情報を集めています。詳しくは、FAQ#パッケージ管理 やカテゴリ:パッケージ管理を見てください。\n\n"
    },
    {
      "title": "pacman",
      "level": 3,
      "content": "pacman は Arch Linux のパッケージマネージャです。他の記事を読む前に、全てのユーザーは使い方を知っておくことが強く推奨されます。\n\nパッケージの並列でのダウンロードを有効にするには、pacman#並列ダウンロードを有効にする を参照してください。\n\nキャッシュされたパッケージの長期に渡る扱いについては、pacman#パッケージキャッシュの削除 を参照してください。\n\npacman ヒントには pacman や一般的なパッケージ管理での操作感を向上させる方法が載っています。\n\n"
    },
    {
      "title": "リポジトリ",
      "level": 3,
      "content": "公式リポジトリのページでは公式にメンテナンスされているリポジトリのそれぞれの目的を説明しています。\n\n32ビットのアプリケーションを使いたい場合、multilib リポジトリを有効にする必要があります。\n\n非公式ユーザーリポジトリには公式のサポートがない他のリポジトリを記載しています。\n\npkgstats サービスをインストールすることも検討してください。\n\n"
    },
    {
      "title": "ミラー",
      "level": 3,
      "content": "一番速い・最新の pacman ミラーを使うにはミラーのページの手順に従って下さい。記事で説明されているように、ことに良いアドバイスは定期的に ミラーステータス で最近更新されたミラーのリストを見ることです。これは Reflector で自動化できます。\n\n"
    },
    {
      "title": "Arch Build System",
      "level": 3,
      "content": "Ports はもともと BSD ディストリビューションで使われているシステムで、ローカルシステム上のディレクトリツリー内のビルドスクリプトからできています。簡単に言うと、それぞれの port はサードパーティ製のアプリケーションの名を取ったディレクトリ内にスクリプトを持っています。\n\nArch Build System は PKGBUILD と呼ばれるビルドスクリプトによって同じ機能を提供します。PKGBUILD にはソフトウェアの情報(整合性ハッシュ、プロジェクト URL、バージョン、ライセンスとビルド手順)が詰っています。これらの PKGBUILD は makepkg によってパースされ、pacman で簡単に管理できるパッケージが作られます。\n\nリポジトリにある全てのパッケージと AUR にあるパッケージは makepkg で再コンパイルする必要があります。\n\n"
    },
    {
      "title": "Arch User Repository",
      "level": 3,
      "content": "Arch Build System は公式リポジトリにあるソフトウェアをビルドすることを可能にしますが、これと同様に、ユーザーが投稿したパッケージをビルドするのに使うのが AUR です。AUR にある非公式ビルドスクリプトは、ウェブインターフェース や Aurweb RPC インターフェース を使って取得します。\n\n"
    },
    {
      "title": "ブート",
      "level": 2,
      "content": "このセクションではブートプロセスに関する情報を含めています。Arch のブートプロセスの概要は Arch ブートプロセスにあります。詳しくはカテゴリ:ブートプロセスを参照して下さい。\n\n"
    },
    {
      "title": "ハードウェアの自動認識",
      "level": 3,
      "content": "既定では、ハードウェアは udev によってブートプロセスで自動で認識されるはずです。カーネルモジュールに書かれているように、モジュールの自動ロードを無効にして、手動で必要なモジュールを明示することで、ブート時間を短くすることができます。さらに、Xorg もまた udev を使って必要なドライバを自動検知しますが、X サーバーを手動で設定することもできます。\n\n"
    },
    {
      "title": "マイクロコード",
      "level": 3,
      "content": "プロセッサはときどき 誤った挙動 をすることがあり、起動時にマイクロコードをアップデートすることでカーネルによって修正することができます。詳しくはマイクロコードを見て下さい。\n\n"
    },
    {
      "title": "ブートメッセージの保持",
      "level": 3,
      "content": "ログイン画面が現れると、画面がクリアされます。ユーザーはブートプロセスの出力をすべて見ることができないかもしれません。ブートメッセージのクリアの無効化をすることでこの問題を解決できます。\n\n"
    },
    {
      "title": "起動時に Num Lock",
      "level": 3,
      "content": "ほとんどのキーボードには NumLock トグルキーが存在します。起動時に Num Lock の数字入力モードを有効にするには、起動時に Numlock を有効化を見て下さい。\n\n"
    },
    {
      "title": "グラフィカルユーザーインターフェース",
      "level": 2,
      "content": "このセクションではグラフィカルなアプリケーションを動かしたいユーザーのための説明を載せています。カテゴリ:グラフィカルユーザーインターフェイス にはさらなる資料があります。\n\n"
    },
    {
      "title": "ディスプレイサーバー",
      "level": 3,
      "content": "Xorg は標準の、X Window System (X11 または X) のオープンソース実装です。グラフィカルユーザーインターフェース (GUI) のために、多くのユーザーは Xorg を使っています。\n\nWayland は新しい、いくつかの コンポジタ から選ぶことができるもう一つのディスプレイサーバープロトコルです。\n\n"
    },
    {
      "title": "ディスプレイドライバ",
      "level": 3,
      "content": "標準の modesetting ディスプレイドライバでほとんどのビデオカードが動作しますが、AMD, NVIDIA 製品それぞれに適したドライバをインストールすることで、パフォーマンスをあげたり追加機能を使うことができます。\n\n"
    },
    {
      "title": "デスクトップ環境",
      "level": 3,
      "content": "ディスプレイサーバーはグラフィック環境を整えるための基本フレームワークを提供しますが、完全なユーザー体験を得るためには追加のコンポーネントが必要になります。KDE, GNOME, Xfce, Cinnamon, LXDE などの デスクトップ環境 は多くの 統合されたアプリケーションをバンドルしています。ウィンドウマネージャ、コンポジタ、パネル/タスクバー、ファイルマネージャ、ターミナルエミュレータ、テキストエディタ、アイコン、その他ユーティリティなどです。経験の少ないユーザーはデスクトップ環境をインストールして、より使い慣れた環境にしたくなるかもしれません。詳細は カテゴリ:デスクトップ環境 を見て下さい。\n\n"
    },
    {
      "title": "ウィンドウマネージャやコンポジタ",
      "level": 3,
      "content": "完全装備の デスクトップ環境 は完全に調和したグラフィカルユーザーインターフェースを提供しますが、システムリソースを多めに消費する傾向があります。ユーザーはパフォーマンスを最大化したり環境をシンプルにするために ウィンドウマネージャ や コンポジタ をインストールして必要な機能を選択することもできます。Xorg を使っている場合、ウィンドウマネージャはほとんどのデスクトップ環境と一緒に使うこともできます。動的ウィンドウマネージャ、スタック型ウィンドウマネージャ、タイル型ウィンドウマネージャ はそれぞれ異なった手法でウィンドウを管理します。\n\n"
    },
    {
      "title": "ディスプレイマネージャ",
      "level": 3,
      "content": "ほとんどのデスクトップ環境はディスプレイマネージャを含んでいて、グラフィック環境を自動的に起動してユーザーのログインを管理することができます。デスクトップ環境をインストールしていない場合はディスプレイマネージャを個別にインストールすることができます。ディスプレイマネージャのシンプルな代替として、ログイン時に X を起動することもできます。\n\n"
    },
    {
      "title": "ユーザーディレクトリ",
      "level": 3,
      "content": "一般的な Downloads や Music といったユーザーディレクトリは xdg-user-dirs-update.service ユーザーサービスによって作成されます。このサービスは xdg-user-dirs パッケージにより提供され、インストール後にデフォルトで有効化されています。使っているデスクトップ環境やウィンドウマネージャがパッケージに依存していない場合は、XDG ユーザーディレクトリ#デフォルトディレクトリの作成と同じように、手動でパッケージをインストールして xdg-user-dirs-update を実行することができます。\n\n"
    },
    {
      "title": "電源管理",
      "level": 2,
      "content": "このセクションはラップトップユーザーや電源管理のコントロールを求めている人に役立つ情報を集めています。詳しくは、カテゴリ:電源管理を見て下さい。\n\n全般的な情報は電源管理を見て下さい。\n\n"
    },
    {
      "title": "ACPI イベント",
      "level": 3,
      "content": "電源ボタンを押したりラップトップのカバーを閉じたりしたときに発生する ACPI イベント時のシステムの動作を設定できます。systemd を使う新しい(推奨の)方法は 電源管理#電源管理を見て下さい。古い方法は acpid を見て下さい。\n\n"
    },
    {
      "title": "CPU 周波数スケーリング",
      "level": 3,
      "content": "モダンなプロセッサは周波数や電圧を下げて電力の消費や熱を少なくすることができます。熱量を減らせばより静かで長寿命のシステムを作れます。詳細は CPU 周波数スケーリングを参照してください。\n\n"
    },
    {
      "title": "ノートパソコン",
      "level": 3,
      "content": "特定の機種のインストールガイドなどのポータブルコンピュータに関する記事はカテゴリ:ノートパソコンを見て下さい。ノートパソコンに関する記事の全般の概要と推奨事項はノートパソコンを見て下さい。\n\n"
    },
    {
      "title": "サスペンドとハイバネーション",
      "level": 3,
      "content": "サスペンドとハイバネートを参照してください。\n\n"
    },
    {
      "title": "マルチメディア",
      "level": 2,
      "content": "カテゴリ:マルチメディアにはマルチメディアに関するページが含まれています。\n\n"
    },
    {
      "title": "サウンドシステム",
      "level": 3,
      "content": "ALSA はカーネルのサウンドシステム で、設定不要で動作するはずです (ミュートの解除だけは必要です)。PipeWire や PulseAudio のようなサウンドサーバーはより多くの機能やより複雑なオーディオの設定をサポートしています。\n\n高度なオーディオ設定については、プロオーディオを参照してください。\n\n"
    },
    {
      "title": "ネットワーク",
      "level": 2,
      "content": "このセクションはネットワークに関する一部の事柄を扱っています。完全な設定ガイドは ネットワーク設定 を、関連するページは カテゴリ:ネットワーク を参照して下さい。\n\n"
    },
    {
      "title": "時刻同期",
      "level": 3,
      "content": "Network Time Protocol (NTP) はネットワークに接続された機器において、機器の時計を正しい時刻に同期するための通信プロトコルです。プロトコルの実装は時刻#時刻同期を参照してください。\n\n"
    },
    {
      "title": "DNS のセキュリティ",
      "level": 3,
      "content": "ウェブブラウジングやオンラインでの買い物、SSH サービスへの接続やその他の似たようなことをより良いセキュリティで行うために、DNS レコードの署名を検証する DNSSEC を有効にしたクライアントソフトウェアを使うことができます。また、DNS over TLS、DNS over HTTPS、DNSCrypt で DNS 通信を暗号化することも可能です。詳しくはドメイン名前解決を参照してください。\n\n"
    },
    {
      "title": "ファイアウォールの設定",
      "level": 3,
      "content": "ファイアウォールは Linux のネットワークスタックの上部で拡張保護レイヤーとして働きます。Arch の標準のカーネルは Netfilter プロジェクトの iptables と nftables に対応していますが、どちらもデフォルトで有効化されていません。何らかのファイアーウォールをセットアップすることを強く推奨します。利用可能なガイドについてはカテゴリ:ファイアウォールを参照してください。\n\n"
    },
    {
      "title": "ネットワーク共有",
      "level": 3,
      "content": "ネットワーク上のマシンでファイルを共有するには、NFS や SSHFS のページを参照してください。\n\nWindows ネットワークに接続したい場合、Samba を使うことができます。マシンを接続して認証に Active Directory を使いたいときは、Active Directory Integration の中にある記事を読んで下さい。\n\nカテゴリ:ネットワーク共有も参照してください。\n\n"
    },
    {
      "title": "入力デバイス",
      "level": 2,
      "content": "このセクションには入力デバイスの設定ヒントを集めています。他の情報は、カテゴリ:入力デバイスを見て下さい。\n\n"
    },
    {
      "title": "キーボードレイアウト",
      "level": 3,
      "content": "非英語・非標準のキーボードはデフォルトでは期待されたとおりに動作しないことがあります。仮想コンソールと Xorg でのキーボードレイアウトの設定方法が、それぞれコンソールでのキーボード設定と Xorg でのキーボード設定で記述されています。\n\n"
    },
    {
      "title": "マウスボタンの設定",
      "level": 3,
      "content": "先進的な、普通でないマウスを使っている人はデフォルトでは全てのマウスが認識されていないのに気づくかもしれません。特殊なボタンに様々なアクションを設定したいと考えたのであれば、全てのマウスボタンを動作させるに設定方法があります。\n\n"
    },
    {
      "title": "ラップトップタッチパッド",
      "level": 3,
      "content": "多くのラップトップには Synaptics や ALPS の\"タッチパッド\"ポインティングデバイスが備わっています。これらや、その他のタッチパッド機種は、Synaptics インプットドライバあるいは libinput を使います。インストールや設定の詳細は Synaptics タッチパッドや libinput を見て下さい。\n\n"
    },
    {
      "title": "トラックポイント",
      "level": 3,
      "content": "トラックポイントデバイスの設定についてはトラックポイントを参照してください。\n\n"
    },
    {
      "title": "Xorg での入力",
      "level": 3,
      "content": "日本語を入力するのに必要なインプットメソッド等については 地域化 に書いてあります。\n\n"
    },
    {
      "title": "最適化",
      "level": 2,
      "content": "このセクションではシステムやアプリケーションのパフォーマンスを上昇させるのに役立つ設定やツールなどを提案しています。\n\n"
    },
    {
      "title": "ベンチマーク",
      "level": 3,
      "content": "ベンチマークとは、統一された標準の手法を使ってパフォーマンスを計算したり、その結果を他のシステムの結果と比較したりすることです。\n\n"
    },
    {
      "title": "パフォーマンスの最大化",
      "level": 3,
      "content": "パフォーマンスの最大化では Arch Linux のパフォーマンスを向上するための基本的な情報を集めています。\n\n"
    },
    {
      "title": "ソリッドステートドライブ",
      "level": 3,
      "content": "ソリッドステートドライブの記事には、寿命を最大化する設定、例えば TRIM などソリッドステートドライブに関する様々なことを説明しています。\n\n"
    },
    {
      "title": "システムサービス",
      "level": 2,
      "content": "デーモンに関係するセクションです。\n\n"
    },
    {
      "title": "ファイルインデックスと検索",
      "level": 3,
      "content": "ほとんどのディストリビューションでは、locate コマンドで高速なファイル検索を行えます。Arch Linux はいくつかの代替を提供します。詳しくは locate を参照してください。\n\nデスクトップ検索エンジン は似たサービスを提供します。デスクトップ環境にはよりよい連携があるでしょう。\n\n"
    },
    {
      "title": "ローカルメール配送",
      "level": 3,
      "content": "デフォルトのセットアップではメールを同期する方法を提供していません。メール配送エージェントのリストはメールサーバーを参照してください。\n\n"
    },
    {
      "title": "印刷",
      "level": 3,
      "content": "CUPS は標準に基づいた、OpenPrinting for Linux によって開発されているオープンソースの印刷システムです。プリンタに関する記事はカテゴリ:プリンターを見て下さい。\n\n"
    },
    {
      "title": "外観",
      "level": 2,
      "content": "このセクションでは Arch のエクスペリエンスを視覚的に高めるための\"見た目に快い\"設定について触れています。カテゴリ:視覚効果も見て下さい。\n\n"
    },
    {
      "title": "フォント",
      "level": 3,
      "content": "TrueType フォントをインストールすることもできます。基本的な Arch システムではサイズが固定のビットマップフォントしか含まれていません。Unicode の広い範囲をカバーする一般的な用途のフォントファミリーもあります。また、メトリック互換フォントのページでは他のオペレーティングシステムと互換性のあるフォントを記載しています。\n\nフォントについての情報はフォントとフォント設定で見ることができます。\n\nコンソールで多くの時間を費やす(つまり X サーバー外での作業が中心の)ユーザーにとっては、コンソールフォントを変えて可読性を向上させることが役に立つでしょう。フォント#コンソールフォントを見て下さい。\n\n"
    },
    {
      "title": "GTK と Qt のテーマ",
      "level": 3,
      "content": "グラフィカルインターフェイスを持っている Linux 向けのアプリケーションはほとんどが GTK+ または Qt ツールキットを使っています。ツールキットの記事と Qt と GTK アプリケーションの外観の統合にはインストールしたプログラムの外観を好きなように変更する方法が載っています。\n\n"
    },
    {
      "title": "コンソール環境改善",
      "level": 2,
      "content": "このセクションにはコンソールプログラムをより実用的に使うために役立つことを載せています。カテゴリ:コマンドシェルも見て下さい。\n\n"
    },
    {
      "title": "Tab補完の強化",
      "level": 3,
      "content": "タブ補完をすぐに適切にセットアップすることが推奨されます。使っている シェル のページの指示を参照してください。\n\n"
    },
    {
      "title": "エイリアス",
      "level": 3,
      "content": "シェルコマンドから成る、よく使うコマンドのショートカットをユーザーによって定義できます。実行ごとにあまり引数に差がない繰り返しのタスクに特に便利です。一般的な時間節約のエイリアスは Bash#エイリアス にあります。Zsh にも簡単に移植できます。\n\n"
    },
    {
      "title": "他のシェル",
      "level": 3,
      "content": "デフォルトで Arch にインストールされているシェルは Bash です。しかしながら、ライブインストールメディアでは Zsh と grml-zsh-config アドオンパッケージが使われています。他の代替シェルについてはコマンドシェル#シェル一覧を参照してください。\n\n"
    },
    {
      "title": "Bash の追加機能",
      "level": 3,
      "content": "種々雑多な Bash の設定が Bash#ヒントとテクニック で説明されています。入力補完、履歴検索、Readline マクロなど。\n\n"
    },
    {
      "title": "出力のカラー化",
      "level": 3,
      "content": "コンソールのカラー出力で詳しく説明されています。\n\n"
    },
    {
      "title": "圧縮ファイル",
      "level": 3,
      "content": "GNU/Linux システムでは圧縮ファイルやアーカイブを扱うことが頻繁にあります。Tar は一番よく使われているアーカイブツールのひとつで、ユーザーはその構文に慣れるのが好ましいです (例えば Arch Linux のパッケージは単純に zstd で圧縮された tarball です)。役に立つコマンドを アーカイブと圧縮 で見ることができます。\n\n"
    },
    {
      "title": "コンソールプロンプト",
      "level": 3,
      "content": "コンソールプロンプト (PS1) は広範にカスタマイズできます。Bash と Zsh については、Bash/プロンプトのカスタマイズと Zsh#プロンプト をそれぞれ参照してください。\n\n"
    },
    {
      "title": "Emacs シェル",
      "level": 3,
      "content": "Emacs は標準的なテキスト編集以外にも、多くの機能を持っていることで知られていますが、シェルの代替として使うこともできます。カラーアウトプットを有効にしたときの文字化けを修正するには Emacs#カラー出力の問題 を参照して下さい。\n\n"
    },
    {
      "title": "マウスサポート",
      "level": 3,
      "content": "コンソールでマウスを使ってコピー・ペースト操作をするのに、GNU screen のトラディショナルコピーモードを使う方法があります。詳しい解説はコンソールマウスサポートを参照してください。クリップボードが使えるターミナルエミュレータでは特に設定しなくてもコピー・ペーストできます。\n\n"
    },
    {
      "title": "セッション管理",
      "level": 3,
      "content": "tmux や screen のようなターミナルマルチプレクサを使うと、タブとペインで構成されたセッション下でプログラムを動作できます。ユーザーがターミナルエミュレータを kill したり X を終了したり、ログオフしたときでも、ターミナルマルチプレクサが動いているかぎりセッションに関連付けられたプログラムはバックグラウンドで動き続けます。プログラム同士を対話させるにはセッションを付け直す必要があります。\n\n"
    },
    {
      "title": "POSIX シェルユーティリティ",
      "level": 3,
      "content": "多くの一般的なパッケージは、最も一般的な POSIX ユーティリティ を依存関係としてすでにインストールしていますが、posix メタパッケージをインストールすることで、すべての機能を確実に実行できます。\n\n必須のユーティリティの他に、いくつかのオプションカテゴリのメタパッケージもあります:\n\n- posix-c-development\n- posix-software-development\n- posix-user-portability\n- posix-xsi\n\n"
    }
  ]
}
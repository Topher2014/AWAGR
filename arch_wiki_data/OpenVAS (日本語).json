{
  "title": "OpenVAS (日本語)",
  "url": "https://wiki.archlinux.org/title/OpenVAS_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "OpenVAS は Open Vulnerability Assessment System の略で、グラフィカルなユーザーフロントエンドなどのツールが付属しているネットワークセキュリティスキャナです。リモート環境やアプリケーションのセキュリティ問題を検出するネットワーク脆弱性テスト (NVT) が集められたサーバーがコアになります。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 プリインストール 1.1 PostgreSQL 1.2 Redis\n- 2 インストール\n- 3 初期設定\n- 4 使用方法\n- 5 参照\n\n- 1.1 PostgreSQL\n- 1.2 Redis\n\n"
    },
    {
      "title": "PostgreSQL",
      "level": 3,
      "content": "続行する前に PostgreSQL をセットアップしてください。\n\n"
    },
    {
      "title": "Redis",
      "level": 3,
      "content": "OpenVAS redis 設定 の規定に従って Redis を構成します。要約すると、/etc/redis/redis.conf を次のように修正します:\n\n```\nport 0\nunixsocket /run/redis/redis.sock\nunixsocketperm 770\ntimeout 0\ndatabases 128\n```\n\n最後に redis.service を 再起動 します。\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "次のパッケージを インストール して、マネージャー、Web フロントエンド、スキャナーなどを含む完全な OpenVAS セットアップを取得します: openvas-scannerAUR、ospd-openvasAUR、gsaAUR、gvmdAUR。スキャナが適切な結果を提供するには nmap をインストールする必要があり、PDF レポート機能が動作するには texlive が必要です。\n\n"
    },
    {
      "title": "初期設定",
      "level": 2,
      "content": "gvm 用に PostgreSQL DB をセットアップします:\n\n```\n[postgres]$ createuser gvm\n[postgres]$ createdb -O gvm gvmd\n```\n\nこのユーザーに DBA ロールを付与します:\n\n```\n[postgres]$ psql gvmd\n# create role dba with superuser noinherit;\n# grant dba to gvm;\n# create extension \"uuid-ossp\";\n# \\q\n```\n\n次の sysctl 設定があることを確認してください:\n\n```\n# echo \"net.core.somaxconn = 1024\" >> /etc/sysctl.d/90-openvas.conf\n# echo \"vm.overcommit_memory = 1\" >> /etc/sysctl.d/90-openvas.conf\n# sysctl -p /etc/sysctl.d/90-openvas.conf\n```\n\nこれを行う前に、somaxconn の値を確認してください (Arch Linux では通常、これは 4096 であり、調整する必要はありません):\n\n```\n# sysctl -a | grep somaxconn\n```\n\nこの場合は、最初のエコー行をスキップしてください。\n\ngvm ユーザーに Redis ソケットへのアクセスを許可します:\n\n```\n# usermod -aG redis gvm\n# echo \"db_address = /run/redis/redis.sock\" > /etc/openvas/openvas.conf\n# chown gvm:gvm /etc/openvas/openvas.conf\n```\n\nNVT を更新します:\n\n```\n# chown -R gvm:gvm /var/lib/openvas\n[gvm]$ greenbone-nvt-sync && openvas --update-vt-info\n```\n\nフィードを更新します:\n\n```\n[gvm]$ greenbone-feed-sync --type GVMD_DATA\n[gvm]$ greenbone-scapdata-sync --rsync\n[gvm]$ greenbone-certdata-sync --rsync\n```\n\n次のタイマーを 有効化 して、これらのデータを頻繁に更新できます: greenbone-nvt-sync.timer、greenbone-feed-sync.timer、greenbone-scapdata-sync.timer、greenbone-certdata-sync.timer\n\nサーバーとクライアントの証明書を作成します。デフォルト値が使用されます:\n\n```\n[gvm]$ gvm-manage-certs -a\n```\n\n管理者ユーザーアカウントを追加します。必ずパスワードをコピーしてください:\n\n```\n[gvm]$ gvmd --create-user=admin --role=Admin\n```\n\nユーザーのパスワードを後で変更することもできます\n\n```\n[gvm]$ gvmd --user=admin --new-password=<password>\n```\n\n"
    },
    {
      "title": "使用方法",
      "level": 2,
      "content": "ospd-openvas.service, gvmd.service および gsad.service を 起動 します。\n\nスキャナーを作成します:\n\n```\n[gvm]$ gvmd --get-scanners\n```\n\nOpenVAS デフォルトスキャナーの ID をコピーし、次を実行します:\n\n```\n[gvm]$ gvmd --modify-scanner=id-of-scanner --scanner-host=/run/gvm/ospd.sock\n[gvm]$ gvmd --verify-scanner=id-of-scanner\n```\n\nフィードインポートユーザーを設定します:\n\n```\n[gvm]$ gvmd --get-users --verbose\n```\n\n管理者ユーザーの ID をコピーして、次を実行します:\n\n```\n[gvm]$ gvmd --modify-setting 78eceaec-3385-11ea-b237-28d24461215b --value id-of-admin\n```\n\nWeb ブラウザで http://127.0.0.1 を指定し、管理者の資格情報を使用してログインします。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Wikipedia:ja:OpenVAS\n- OpenVAS - 公式 OpenVAS ウェブサイト。\n\n"
    }
  ]
}
{
  "title": "Vncserver (日本語)",
  "url": "https://wiki.archlinux.org/title/Vncserver_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- x11vnc\n- TurboVNC\n\nTigerVNC は Virtual Network Computing (VNC) プロトコルの実装です。この記事ではサーバー機能に焦点をあてています。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 vncserver をバーチャル(ヘッドレス)セッションで起動する 2.1 初回セットアップ 2.2 tigervnc の開始と終了\n- 3 ローカルディスプレイを直接公開する\n- 4 x0vncserver を直接実行してローカルディスプレイを制御する 4.1 xprofile とともに 4.2 systemd とともに 4.2.1 システムサービスとして 4.2.2 ユーザーサービスとして\n- 5 XDMCP と組み合わせて Xvnc をオンデマンドセッションで実行する\n- 6 vncserver に接続する 6.1 パスワードなしで認証 6.2 GUI ベースのクライアント\n- 7 SSH トンネル経由で vncserver にアクセス 7.1 サーバー側 7.2 クライアント側 7.3 SSH で Android デバイスから VNC サーバーに接続する\n- 8 ヒントとテクニック 8.1 macOS に接続する 8.2 推奨セキュリティ設定 8.3 フルスクリーンの切り替え 8.4 マウスの戻る/進むボタンが動作しない場合の回避策 8.4.1 キーボードキー XF86Back/XF86Forward でマウスの戻る/進むボタンを代用する 8.4.2 サーバーでキーボードキー押下をマウスボタンクリックにマップバックする\n- 9 トラブルシューティング 9.1 ウィンドウの代わりに黒い四角 9.2 マウスカーソルのある空の黒いウィンドウ 9.3 マウスカーソルが表示されない 9.4 リモートマシンからのクリップボードの内容をコピーする 9.5 ウィンドウ装飾 / 境界線 / タイトルバーがない / ウィンドウを動かせない 9.6 デスクトップ環境でフォントがボックスで表示される\n- 10 参照\n\n- 2.1 初回セットアップ\n- 2.2 tigervnc の開始と終了\n\n- 4.1 xprofile とともに\n- 4.2 systemd とともに 4.2.1 システムサービスとして 4.2.2 ユーザーサービスとして\n\n- 4.2.1 システムサービスとして\n- 4.2.2 ユーザーサービスとして\n\n- 6.1 パスワードなしで認証\n- 6.2 GUI ベースのクライアント\n\n- 7.1 サーバー側\n- 7.2 クライアント側\n- 7.3 SSH で Android デバイスから VNC サーバーに接続する\n\n- 8.1 macOS に接続する\n- 8.2 推奨セキュリティ設定\n- 8.3 フルスクリーンの切り替え\n- 8.4 マウスの戻る/進むボタンが動作しない場合の回避策 8.4.1 キーボードキー XF86Back/XF86Forward でマウスの戻る/進むボタンを代用する 8.4.2 サーバーでキーボードキー押下をマウスボタンクリックにマップバックする\n\n- 8.4.1 キーボードキー XF86Back/XF86Forward でマウスの戻る/進むボタンを代用する\n- 8.4.2 サーバーでキーボードキー押下をマウスボタンクリックにマップバックする\n\n- 9.1 ウィンドウの代わりに黒い四角\n- 9.2 マウスカーソルのある空の黒いウィンドウ\n- 9.3 マウスカーソルが表示されない\n- 9.4 リモートマシンからのクリップボードの内容をコピーする\n- 9.5 ウィンドウ装飾 / 境界線 / タイトルバーがない / ウィンドウを動かせない\n- 9.6 デスクトップ環境でフォントがボックスで表示される\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "tigervnc パッケージをインストールしてください。\n\nVncserver には2つのリモート制御機能が存在します:\n\n1. 標準的な X サーバーと同じような仮想 (ヘッドレス) サーバー。物理的な画面ではなく仮想スクリーンを使用する。仮想サーバーは物理的な X サーバーと並行して動作します。\n1. 物理モニターを使用しているローカルの X セッションの直接制御。\n\n"
    },
    {
      "title": "初回セットアップ",
      "level": 3,
      "content": "クイックスタートについては、以下のステップを参照してください。 設定オプションの完全なリストについては vncserver(8) を読むことをお勧めします。\n\n1. vncpasswd を使用してパスワードを作成して、ハッシュ化したパスワードを ~/.vnc/passwd に保存します。\n1. /etc/tigervnc/vncserver.users を編集して、ユーザマッピングを定義します。このファイルで定義された各ユーザは、そのセッションが実行される対応するポートを持っています。ファイル内の数字は、TCP ポートに対応します。デフォルトでは、:1 が TCP ポート 5901 (5900+1) になっています。別の並列サーバが必要な場合、2 番目のインスタンスは次に高い空きポート、つまり 5902 (5900+2) で実行することができます。\n1. ~/.vnc/config を作成し、最低限 session=foo のような行で、実行するデスクトップ環境を foo に対応させたセッションの種類を定義してください。どのデスクトップ環境がシステムで利用できるかは、/usr/share/xsessions/ 内の .desktop ファイルで確認できます。例えば:\n\n```\n~/.vnc/config\n```\n\n```\nsession=lxqt\ngeometry=1920x1080\nlocalhost\nalwaysshared\n```\n\n"
    },
    {
      "title": "tigervnc の開始と終了",
      "level": 3,
      "content": "vncserver@.service テンプレートのインスタンスを 起動 します。オプションで起動時やシャットダウン時に動くよう有効化します。この場合のインスタンス識別子はディスプレイ番号であることに注意してください（例：ディスプレイ番号 :1 のインスタンス vncserver@:1.service など）。\n\n"
    },
    {
      "title": "ローカルディスプレイを直接公開する",
      "level": 2,
      "content": "Tigervnc は libvnc.so を同梱しており、これは X の初期化中に直接ロードすることができます。これにより、パフォーマンスが向上します。 以下のファイルを作成し、X を再起動してください：\n\n```\n/etc/X11/xorg.conf.d/10-vnc.conf\n```\n\n```\nSection \"Module\"\nLoad \"vnc\"\nEndSection\n\nSection \"Screen\"\nIdentifier \"Screen0\"\nOption \"UserPasswdVerifier\" \"VncAuth\"\nOption \"PasswordFile\" \"/root/.vnc/passwd\"\nEndSection\n```\n\n"
    },
    {
      "title": "x0vncserver を直接実行してローカルディスプレイを制御する",
      "level": 2,
      "content": "tigervnc はまた、x0vncserver(1) も提供しており、これによって物理的な X セッションを直接制御することができます。vncpasswd ツールを使ってセッションパスワードを定義した後、以下のようにサーバーを起動します：\n\n```\n$ x0vncserver -rfbauth ~/.vnc/passwd\n```\n\n- x11vnc は、現在の X セッションを直接制御できる代替の VNC サーバーでもあります。\n- x0vncserver は現在、クライアントとサーバー間のクリップボード共有をサポートしていません（autocutsel の助けを借りても）。参照：Issue #529。\n\n"
    },
    {
      "title": "xprofile とともに",
      "level": 3,
      "content": "x0vncserver を簡単に起動する方法の一つは、xprofile ファイルの一つに以下のような行を追加することです：\n\n```\n~/.xprofile\n```\n\n```\n...\nx0vncserver -rfbauth ~/.vnc/passwd &\n```\n\n"
    },
    {
      "title": "システムサービスとして",
      "level": 4,
      "content": "このオプションは、ユーザーが現在のディスプレイ、およびディスプレイマネージャーが提供するログイン画面にアクセスできるようにします。\n\nこのサービスは、ユーザーがセッションからログオフするたびに自動的に再起動されます。\n\n以下の例では LightDM が使用されていますが、XAUTHORITY 変数を修正することで他のディスプレイマネージャーに適応させることが可能です。\n\n```\n/etc/systemd/system/x0vncserver.service\n```\n\n```\n[Unit]\nDescription=Remote desktop service (VNC) for :0 display\nRequires=display-manager.service\nAfter=network-online.target\nAfter=display-manager.service\n\n[Service]\nType=simple\nEnvironment=HOME=/root\nEnvironment=XAUTHORITY=/var/run/lightdm/root/:0\nExecStart=x0vncserver -display :0 -rfbauth ~/.vnc/passwd\nRestart=on-failure\nRestartSec=500ms\n\n[Install]\nWantedBy=multi-user.target\n```\n\nこのサービスはシステムユニットなので、-rfbauth ~/.vnc/passwd は /root/.vnc/passwd を指します。\n\nx0vncserver.service を開始/有効化してください。\n\n"
    },
    {
      "title": "ユーザーサービスとして",
      "level": 4,
      "content": "現在のデスクトップにリモートアクセスをすぐに設定できる最も簡単な方法として、x0vncserver を実行する VNC サーバーを持つために、以下のように systemd ユニットを作成して、必要なユーザーとオプションで置き換えてください：\n\n```\n~/.config/systemd/user/x0vncserver.service\n```\n\n```\n[Unit]\nDescription=Remote desktop service (VNC)\n\n[Service]\nType=simple\nExecStartPre=/bin/sh -c 'while ! pgrep -U \"$USER\" Xorg; do sleep 2; done'\nExecStart=/usr/bin/x0vncserver -rfbauth %h/.vnc/passwd\n\n[Install]\nWantedBy=default.target\n```\n\nExecStartPre 行は、${USER} によって Xorg が開始されるのを待っています。\n\nユーザーネームとパスワードでログインする場合は、ExecStart を /usr/bin/x0vncserver -PAMService=login -PlainUsers=${USER} -SecurityTypes=TLSPlain に置き換えてください。\n\nx0vncserver.service ユーザーユニットを開始/有効化してください。\n\n"
    },
    {
      "title": "XDMCP と組み合わせて Xvnc をオンデマンドセッションで実行する",
      "level": 2,
      "content": "systemd のソケットアクティベーションと XDMCP を組み合わせることで、ログインしようとする各ユーザーごとに自動的に VNC サーバーを生成することができます。そのため、ユーザーごとにサーバー/ポートを設定する必要はありません。このセットアップでは、ディスプレイマネージャーを使用してユーザーを認証し、ログインするため、VNC パスワードは必要ありません。欠点としては、ユーザーがサーバー上でセッションを継続して後で再接続することはできません。\n\nこれを動作させるには、まず XDMCP を設定し、ディスプレイマネージャーが動作していることを確認してください。 次に、以下を作成します：\n\n```\n/etc/systemd/system/xvnc.socket\n```\n\n```\n[Unit]\nDescription=XVNC Server\n\n[Socket]\nListenStream=5900\nAccept=yes\n\n[Install]\nWantedBy=sockets.target\n```\n\n```\n/etc/systemd/system/xvnc@.service\n```\n\n```\n[Unit]\nDescription=XVNC Per-Connection Daemon\n\n[Service]\nExecStart=-/usr/bin/Xvnc -inetd -query localhost -geometry 1920x1080 -once -SecurityTypes=None\nUser=nobody\nStandardInput=socket\nStandardError=syslog\n```\n\nxvnc.socket を開始/有効化してください。これで、任意の数のユーザーがポート 5900 に接続することで独自のデスクトップを取得できます。\n\nVNC サーバーがインターネットに公開されている場合は、xvnc@.service の Xvnc に -localhost オプションを追加してください（-query localhost と -localhost は異なるスイッチです）、#Accessing vncserver via SSH tunnels に従ってください。接続後にユーザーを選択するだけなので、VNC サーバーはユーザー nobody として実行され、vncserver スクリプトの代わりに直接 Xvnc を使用するため、~/.vnc のオプションは無視されます。オプションで、クリップボードが動作するように vncconfig を 自動起動させてください（vncconfig は非 VNC セッションで即座に終了します）。作成する一つの方法は：\n\n```\n/etc/X11/xinit/xinitrc.d/99-vncconfig.sh\n```\n\n```\n#!/bin/sh\nvncconfig -nowin &\n```\n\n"
    },
    {
      "title": "vncserver に接続する",
      "level": 2,
      "content": "vncserver に接続できるクライアントは多数存在します。下は 10.1.10.2 のポート 5901 (:1) で動作している vncserver に接続するコマンド例です:\n\n```\n$ vncviewer 10.1.10.2:1\n```\n\n"
    },
    {
      "title": "パスワードなしで認証",
      "level": 3,
      "content": "-passwd スイッチを使うことでサーバーの ~/.vnc/passwd ファイルの場所を定義することができます。サーバー上のこのファイルには SSH か物理的なアクセスによってユーザーがアクセスすることが期待されています。どちらの場合でも、クライアントのファイルシステム上の安全な場所、つまり特定のユーザーだけが読み込みアクセスできる場所にファイルを置いて下さい。\n\n```\n$ vncviewer -passwd /path/to/server-passwd-file\n```\n\n"
    },
    {
      "title": "GUI ベースのクライアント",
      "level": 3,
      "content": "- gtk-vnc\n- krdc\n- rdesktop\n- vinagre\n- remmina\n- vncviewer-jarAUR\n\nTigerVNC の vncviewer にはシンプルが GUI が存在し、何もパラメータを付けずに実行します:\n\n```\n$ vncviewer\n```\n\n"
    },
    {
      "title": "SSH トンネル経由で vncserver にアクセス",
      "level": 2,
      "content": "SSH 接続を提供するサーバの利点は、VNC トラフィックが SSH ポートを介してトンネリングされるため、既に開いている SSH ポート以外のポートを外部に開く必要がないことです。\n\n"
    },
    {
      "title": "サーバー側",
      "level": 3,
      "content": "サーバ側では、vncserver または、 x0vncserver を実行する必要があります。\n\nこれらのどちらかを実行する場合、~/.vnc/config の localhost オプション、または -localhost スイッチ（x0vncserver の場合）を使用することをお勧めします。例えば\n\n```\n~/.vnc/config\n```\n\n```\nsession=lxqt\ngeometry=1920x1080\nlocalhost\nalwaysshared\n```\n\n例えば、vncserver@.service を開始または再起動してください(#初回セットアップも参照してください)。\n\n"
    },
    {
      "title": "クライアント側",
      "level": 3,
      "content": "サーバーはローカルホストからの接続だけを許可しているので、-L スイッチを使ってトンネルを有効にして ssh で接続します。例えば:\n\n```\n$ ssh 10.1.10.2 -L 5901:localhost:5901\n```\n\n上記はサーバーのポート 5901 をクライアントのポート 5901 に転送します。サーバーとクライアントでポート番号を必ずしも一致させる必要はありません。例:\n\n```\n$ ssh 10.1.10.2 -L 8900:localhost:5901\n```\n\n上記のコマンドはサーバーのポート 5901 をクライアントマシンのポート 8900 に転送します。\n\nSSH で接続したら、サーバーと接続するための暗号化トンネルとして xterm やシェルのウィンドウは開いたままにしてください。暗号化トンネルを使って接続するには、vncviewer でローカルホストのクライアントポートを指定します。\n\nサーバーとクライアントで同じポートを使用する場合:\n\n```\n$ vncviewer localhost:1\n```\n\nサーバーとクライアントで違うポートを使用する場合:\n\n```\n$ vncviewer localhost:8900\n```\n\n"
    },
    {
      "title": "SSH で Android デバイスから VNC サーバーに接続する",
      "level": 3,
      "content": "Android デバイスを使って SSH で VNC サーバーに接続するには:\n\n```\n1. 接続するマシン上で SSH サーバーを動作させる。\n2. 接続するマシン上で VNC サーバーを動作させる (上述のように -localhost フラグでサーバーを起動する)。\n3. Android デバイスで SSH クライアントを使う (ConnectBot が人気があります、この外では例としてこれを使います)。\n4. Android デバイスで VNC クライアントを使う (androidVNC)。\n```\n\n固定 IP アドレスを持たないマシンではダイナミック DNS サービスを使うことを考慮してください。\n\nConnectBot で、IP を入力してマシンに接続してください。オプションキーをタップして、Port Forwards を選択し新しいポートを追加してください:\n\n```\nNickname: vnc\nType: Local\nSource port: 5901\nDestination: 127.0.0.1:5901 (it did not work for me when I typed in 192.168.x.xxx here, I had to use 127.0.0.1)\n```\n\n保存してください。\n\nandroidVNC で:\n\n```\nNickname: nickname\nPassword: the password used to set up the VNC server\nAddress: 127.0.0.1 (we are in local after connecting through SSH)\nPort: 5901\n```\n\n接続してください。\n\n"
    },
    {
      "title": "macOS に接続する",
      "level": 3,
      "content": "https://help.ubuntu.com/community/AppleRemoteDesktop を見てください。Remmina でテスト済みです。\n\n"
    },
    {
      "title": "推奨セキュリティ設定",
      "level": 3,
      "content": "SecurityTypes は使用するセキュリティアルゴリズムを制御します。現在のバージョン 1.5.0 でのデフォルトは \"X509Plain,TLSPlain,X509Vnc,TLSVnc,X509None,TLSNone,VncAuth,None\" です。\"X509Vnc,TLSVnc\" とすることで暗号化しないデータのやりとりを無効化できます。\n\nTLSVnc では同一性確認がないため、X509Vnc を使うことを推奨します:\n\n```\n$ vncserver -x509key /path/to/key.pem -x509cert /path/to/cerm.pem -SecurityTypes X509Vnc :1\n```\n\nx509 証明書の作成方法はこの記事では説明しません。Let’s Encrypt を使用したり、OpenSSL を使って手動で証明書を発行してサーバーとクライアントで鍵を共有できます。\n\n"
    },
    {
      "title": "フルスクリーンの切り替え",
      "level": 3,
      "content": "これは VNC クライアントのメニューから行うことができます。デフォルトでは、VNC クライアントの mkey は F8 です。\n\n"
    },
    {
      "title": "マウスの戻る/進むボタンが動作しない場合の回避策",
      "level": 3,
      "content": "現在の VNC プロトコルは 7つのマウスボタン（左、中、右、スクロールアップ、スクロールダウン、スクロール左、スクロール右）しか使用していないため、マウスに戻るボタンと進むボタンがある場合、これらは使用できず、入力は無視されます。\n\nevrouter は、マウスの戻る/進むボタンをクリックしたときにキーボードのキー押下を送信してこの制限を回避するために使用できます。オプションで、xautomation と xbindkeys をサーバーで使用して、必要に応じてキーボードのキー押下をマウスボタンのクリックにマップバックできます。\n\n"
    },
    {
      "title": "キーボードキー XF86Back/XF86Forward でマウスの戻る/進むボタンを代用する",
      "level": 4,
      "content": "この方法はシンプルで、例えば Web ブラウザやファイルブラウザを使用している間に戻る/進むをナビゲートする方法が必要な場合に適しています。\n\nクライアントで evrouterAUR と xautomation をインストールします。evrouter を設定します。正確なデバイス名、ウィンドウ名、ボタン名などを見つける方法とヒントについては、マウスボタン#evrouter と evrouter の man ページを参照してください。例の設定は以下の通りです：\n\n```\n~/.evrouterrc\n```\n\n```\nWindow \"OtherComputer:0 - TigerVNC\": # Window title used as filter\n\n# Using Shell to avoid repeating key presses (see evrouter manual)\n\"USB mouse\" \"/dev/input/by-id/usb-Mouse-name-event-mouse\" none key/275 \"Shell/xte 'key XF86Back'\"\n\"USB mouse\" \"/dev/input/by-id/usb-Mouse-name-event-mouse\" none key/276 \"Shell/xte 'key XF86Forward'\"\n\n# Use XKey below instead if repeating keys is desired (see evrouter manual)\n#\"Logitech Gaming Mouse G400\" \"/dev/input/by-id/usb-Logitech_Gaming_Mouse_G400-event-mouse\" none key/275 \"XKey/XF86Back\"\n#\"Logitech Gaming Mouse G400\" \"/dev/input/by-id/usb-Logitech_Gaming_Mouse_G400-event-mouse\" none key/276 \"XKey/XF86Forward\"\n```\n\nクライアントで evrouter を起動します。上記の設定で、マウスの戻るボタンをクリックすると VNC サーバーに XF86Back が送信され、進むボタンをクリックすると XF86Forward が送信されます。\n\n"
    },
    {
      "title": "サーバーでキーボードキー押下をマウスボタンクリックにマップバックする",
      "level": 4,
      "content": "必要に応じて、サーバーでキーボードキーをマウスボタンクリックにマップバックすることが可能です。この場合、クライアントやサーバーで絶対に使用されないキーボードキーを使用することが良いでしょう。以下の例では、キーボードキー XF86Launch8 / XF86Launch9 がマウスボタン 8/9 として使用されています。\n\nクライアントでの evrouter 設定：\n\n```\n~/.evrouterrc\n```\n\n```\nWindow \"OtherComputer:0 - TigerVNC\": # ウィンドウタイトル\n\n# キー押下を繰り返さないように Shell を使用（evrouter マニュアルを参照）\n\"USB mouse\" \"/dev/input/by-id/usb-Mouse-name-event-mouse\" none key/275 \"Shell/xte 'key XF86Launch8'\"\n\"USB mouse\" \"/dev/input/by-id/usb-Mouse-name-event-mouse\" none key/276 \"Shell/xte 'key XF86Launch9'\"\n```\n\nサーバーで xautomation と xbindkeys をインストールします。xbindkeys を設定して、キーボードキー XF86Launch8 / XF86Launch9 を xte を使ってマウスボタン 8/9 にマップします。\n\n```\n~/.xbindkeysrc\n```\n\n```\n\"xte 'mouseclick 8'\"\n     XF86Launch8\n\n\"xte 'mouseclick 9'\"\n     XF86Launch9\n```\n\nxbindkeys（xbindkeys -f ~/.xbindkeysrc）を起動します。サーバーは、XF86Launch8 / XF86Launch9 をマウスボタン 8/9 にマップするようになります。\n\n"
    },
    {
      "title": "ウィンドウの代わりに黒い四角",
      "level": 3,
      "content": "おそらく、これはアプリケーションが Composite Xorg 拡張を厳密に必要としているためです。例えば、webkit ベースのアプリ：midori、psi-plus など。\n\nこの場合、以下のようなコマンドで vncserver を再起動してください：\n\n```\n$ vncserver -geometry ... -depth 24 :1 +extension Composite\n```\n\nComposite 拡張は、VNC で 24 ビット深度でしか動作しないようです。\n\n"
    },
    {
      "title": "マウスカーソルのある空の黒いウィンドウ",
      "level": 3,
      "content": "ユーザーが物理的な X セッションにログインしていないことを確認してください、x0vncserver でこのオプションが設定されていない限り。単一のユーザーで複数の X セッションはサポートされていません。詳細は https://github.com/TigerVNC/tigervnc/issues/684#issuecomment-494385395 を参照してください。\n\n逆に、VNC サーバーサービスがそのユーザーで動作している間にローカルの X セッションにログインしようとすると、うまくいかない可能性があり、デスクトップ環境を使用している場合、スプラッシュスクリーンで詰まることがあります。\n\n"
    },
    {
      "title": "マウスカーソルが表示されない",
      "level": 3,
      "content": "x0vncserver を使用していてマウスカーソルが表示されない場合、以下のように vncviewer を起動してください：\n\n```\n$ vncviewer DotWhenNoCursor=1 サーバー\n```\n\nまたは、TigerVNC の設定ファイル（デフォルトで ~/.vnc/default.tigervnc にあります）に DotWhenNoCursor=1 を追加してください。\n\n"
    },
    {
      "title": "リモートマシンからのクリップボードの内容をコピーする",
      "level": 3,
      "content": "リモートマシンからローカルマシンへのコピーが機能しない場合は、サーバー上で autocutsel を実行してください。詳しくは [1] を参照：\n\n```\n$ autocutsel -fork\n```\n\n次に、F8 キーを押して VNC メニューのポップアップを表示し、Clipboard: local -> remote オプションを選択してください。\n\n"
    },
    {
      "title": "ウィンドウ装飾 / 境界線 / タイトルバーがない / ウィンドウを動かせない",
      "level": 3,
      "content": "空の xterm フレームを修正するためにウィンドウマネージャーを起動してください。例えば、Xfce 上では xfwm4 & を実行してください。\n\n"
    },
    {
      "title": "デスクトップ環境でフォントがボックスで表示される",
      "level": 3,
      "content": "一部のデスクトップ環境では、ASCII 文字を表示するための必要なフォントが欠けている可能性があります。ttf-dejavu をインストールしてください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- https://github.com/TigerVNC/tigervnc\n\n"
    }
  ]
}
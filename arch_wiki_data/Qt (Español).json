{
  "title": "Qt (Español)",
  "url": "https://wiki.archlinux.org/title/Qt_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2020-06-09** \n\nArtículos relacionados\n\n- KDE\n- Apariencia uniforme para Qt y aplicaciones GTK\n- GTK\n\nQt es una aplicación multiplataforma y herramientas de widget que utiliza el estandar C++ pero quehace un uso extensivo de un generador especial de código (llamado Meta Object Compiler o moc) junto con varios macros para enriquecer el lenguaje. Algunas de sus características más importantes son:\n\n- Se ejecuta en la mayoría de entornos de escritorio y muchos de los entornos móviles.\n- Soporte de internacionalización extendido.\n- Una librería completa que provee acceso a base de datos SQL, parseo XML, tratamiento de hilos, soporte de red y una interfaz de programación de aplicaciones (API) multiplataforma unificada para el manejo de archivos.\n\nEl framework Qt es la base del software comunitario KDE como de otras aplicaciones importantes de código abierto y propietarias como VLC, VirtualBox, Mathematica y muchas otras.\n\n"
    },
    {
      "title": "Instalación",
      "level": 2,
      "content": "Qt 5.x está disponible en los repositorios oficiales. Versiones tradicionales de Qt (4.x y 3.x) estan disponibles desde el Arch User Repository (Español). Pueden instalarse con los siguientes paquetes:\n\n- Qt 5.x está disponible en el paquete qt5-base con su documentación en el paquete qt5-doc.\n- Qt 4.x está disponible en el paquete qt4AUR con su documentación en el paquete qt4-docAUR del AUR.\n- Qt 3.x está disponible desde el AUR en el paquete qt3AUR con su documentación en el paquete qt3-docAUR[enlace roto: package not found] del AUR.\n\n"
    },
    {
      "title": "Herramientas Qt por defecto",
      "level": 2,
      "content": "Instalando qtchooserAUR[enlace roto: package not found] puede crear binarios Qt en /usr/bin (p. ej. qmake), esta apunta por defecto a las versiones Qt5 (p. ej. qmake-qt5), que apunten a versiones anteriores de dichas herramientas (p. ej. qmake-qt4 o qmake-qt3).\n\n"
    },
    {
      "title": "Utilizar variables de entorno",
      "level": 3,
      "content": "Para definir las herramientas Qt por defecto puede crear la variable de entorno QT_SELECT. Por ejemplo, para utilizar Qt4 establezca QT_SELECT=4.\n\n"
    },
    {
      "title": "Utilizar ficheros de configuración",
      "level": 3,
      "content": "Puede establecer las herramientas Qt por defecto creando un enlace simbólico ~/.config/qtchooser/default.conf a uno de los ficheros .conf que están en el directorio /etc/xdg/qtchooser/. Por ejemplo, para Qt4 creé un enlace simbólico desde /etc/xdg/qtchooser/4.conf a ~/.config/qtchooser/default.conf:\n\n```\n$ ln -s /etc/xdg/qtchooser/4.conf ~/.config/qtchooser/default.conf\n```\n\n"
    },
    {
      "title": "Qt5",
      "level": 3,
      "content": "Qt5 decide qué estilo usar basandose en que entorno de escritorio se esta utilizando:\n\n- En KDE Plasma actualmente utiliza el estilo Qt seleccionado. Se puede configurar utilizando los Ajustes del sistema KDE (systemsettings). Estos ajustes se pueden encontrar en Aspecto > Estilo de las aplicaciones > Estilo de la aplicación.\n- Otros entornos de escritorio utilizan Fusion.\n\nPara obligar un estilo específico puede establecer la variable de entorno QT_STYLE_OVERRIDE. Establezca la variable a gtk2 si quiere utilizar el tema GTK.\n\nLas aplicaciones Qt5 también soportan la bandera -style que se puede utilizar para lanzar aplicaciones Qt5 con un estilo específico.\n\nLos siguientes aspectos están incluidos en Qt5: Fusion, Windows. Otros se pueden instalar desde los repositorios oficiales:\n\n- Breeze — Arte, estilos y recursos para el estilo visual Breeze para el escritorio Plasma Desktop.\n\n- Oxygen — Estilo KDE Oxygen.\n\n- QtCurve — Un conjunto de estilos de widgets configurables para KDE y Gtk.\n\n- Adwaita-Qt — Estilos para conseguir que las aplicaciones Qt se parezcan al entorno GNOME.\n\n- Qt style plugins — Plugins para estilos adicionales de Qt5 incluido GTK, Cleanlooks, Motif, Plastique.\n\n- Kvantum — Motor de temas basados en SVG personalizable con una gran variedad de estilos incorporados incluido imitaciones de algunos de los temas más populares de GTK como Adapta, Arc, Ambiance\n\n"
    },
    {
      "title": "Qt4",
      "level": 3,
      "content": "Las aplicaciones Qt4 intentarán imitar el comportamiento del entorno de escritorio en el que se ejecuta a no haya ser que encuentren algunos problemas o ajustes codificados.\n\n- En KDE Plasma actualmente utiliza el estilo Qt seleccionado. Se puede configurar utilizando los Ajustes del sistema KDE (systemsettings). Estos ajustes se pueden encontrar en Aspecto > Estilo de las aplicaciones > Estilo de la aplicación.\n- Otros entornos de escritorio utilizan Windows.\n\nPara aquellos que quieran cambiar el aspecto y la sensación de las aplicaciones Qt4 la herramienta GUI de configuración Qt (qtconfig-qt4) está proporcionada por el paquete qt4AUR. Ofrece una interfaz simple para configurar la apariencia de las aplicaciones Qt4 incluido el estilo, colores, fuentes y muchas más opciones.\n\nQt mantiene toda la información de configuración en /etc/xdg/Trolltech.conf (todo el sistema) o en ~/.config/Trolltech.conf (específico por usuario). Es difícil navegar por el archivo porque contiene mucha información que no está relacionada con la apariencia pero cualquier ajuste que añada al final del archivo sobrescribirá cualquier valor previo (asegúrese de que añade sus modificaciones debajo de la cabecera de [Qt]).\n\nPor ejemplo, para cambiar el tema a QtCurve añada:\n\n```\n~/.config/Trolltech.conf\n```\n\n```\n...\n[Qt]\nstyle=QtCurve\n```\n\nLos siguientes estilos están incluidos en Qt4: CDE, Cleanlooks, GTK, Motif, Plastique, Windows. Otros se pueden instalar desde los repositorios oficiales o desde el AUR (muchos están escritos para el escritorio KDE Plasma):\n\n- Breeze — Arte, estilos y recursos para el estilo visual Breeze para el escritorio Plasma Desktop.\n\n- Adwaita-Qt — Estilos para conseguir que las aplicaciones Qt se parezcan al entorno GNOME.\n\n"
    },
    {
      "title": "Plantillas de estilos Qt",
      "level": 3,
      "content": "Una forma interesante para personalizar el aspecto y la sensación de una aplicación Qt es utilizar plantillas de estilos que son simples archivos CSS. Utilizando plantillas de estilos puede cambiar la apariencia de cada widget de la aplicación.\n\nPara ejecutar una aplicación con un estilo diferente simplemente ejecute:\n\n```\n$ qt_application -stylesheet style.qss\n```\n\nPara más información en plantillas de estilos Qt vea la documentación oficial o otros tutoriales. Como ejemplo de una plantilla vea esta modificación de Dolphin.\n\n"
    },
    {
      "title": "GTK y Qt",
      "level": 3,
      "content": "Si tiene aplicaciones GTK y Qt puede que no se vean exactamente bien unidas. Si desea que su estilo GTK coincida con sus estilos Qt lea look uniforme para las aplicaciones Qt y GTK.\n\n"
    },
    {
      "title": "Configuración de aplicaciones Qt5 en otros entornos que KDE Plasma",
      "level": 3,
      "content": "A diferencia de Qt4, Qt5 no tiene una utilidad qtconfig para configurar fuentes, iconos y estilos. En lugar de eso Qt5 intentará utilizar los ajustes del entorno de escritorio en ejecución. En KDE Plasma o GNOME esto funciona bien pero en otros entornos de escritorio menos populares o gestores de ventanas puede resultar que los iconos desaparezcan en las aplicaciones Qt5. Una forma de resolver esto es ejecutar un falso entorno de escritorio estableciendo XDG_CURRENT_DESKTOP=KDE o GNOME y después utilizar la correspondiente aplicación de configuración para establecer el conjunto deseado de iconos.\n\nOtra solución proporcionada por el paquete qt5ct que proporciona un Qt5 QPA independiente del entorno de escritorio y de la herramienta de configuración. Después de instalar el paquete ejecute qt5ct para establecer un tema de iconos y establecer la variable de entorno QT_QPA_PLATFORMTHEME=qt5ct para que las aplicaciones Qt tomen dichos ajustes. Alternativamente puede utilizar --platformtheme qt5ct como argumento de la aplicación Qt5.\n\nSi se recibe los siguientes errores y algunos iconos no aparecen en algunas aplicaciones instale oxygen y oxygen-icons:\n\n```\nIcon theme \"oxygen\" not found.\nIcon theme \"oxygen\" not found.\nError: standard icon theme \"oxygen\" not found!\n```\n\n"
    },
    {
      "title": "Plataformas soportadas",
      "level": 3,
      "content": "Qt soporta la mayoría de plataformas que están disponibles a dia de hoy, incluso las mas oscuras, con más ports apareciendo de vez en cuando. Para una lista más completa vea el artículo de la Wikipedia Qt.\n\n"
    },
    {
      "title": "Android",
      "level": 4,
      "content": "Antes de nada necesita el Android SDK y el NDK. Instale el SDK android-sdkAUR (algunas herramientas se han quitado) o android-sdk-25.2.5AUR[enlace roto: package not found] y el NDK android-ndkAUR desde el AUR o utilizando Android Studio.\n\nSDK requiere de OpenJDK en su version <= 8. En estos momentos está disponibles el OpenJDK en su versión 7 y 8 pero, para evitar problemas de construcción más tarde, utilice este último.\n\nLo siguiente que va a necesitar es Qt 5 para Android. Puede instalarlo desde el AUR como se describe debajo o construirlo usted mismo. Puede encontrar las instrucciones para la compilación están en la wiki de Qt.\n\nEn caso de problemas puede querer visitar los problemas conocidos.\n\n- android-armv7a-eabi-qt5AUR[enlace roto: package not found] - armeabi-v7a\n- android-x86-qt5AUR[enlace roto: package not found] - x86\n- android-x86-64-qt5AUR[enlace roto: package not found] - x86_64\n\nO puede utilizar un instalador Qt[enlace roto 2023-05-06]. Para un listado completo vea los instaladores oficiales Qt.\n\n"
    },
    {
      "title": "Herramientas",
      "level": 3,
      "content": "Las siguientes son herramientas oficiales Qt:\n\n- Qt Creator — Un IDE multiplataforma a medida de Qt que soporta todas sus características.\n\n- Qt Linguist — Un conjunto de herramientas que acelera la traducción y la internacionalización de aplicaciones Qt.\n\n- Qt Assistant — Un lector de documentación redistribuido y configurable para los archivos qch de Qt.\n\n- Qt Designer — Un potente constructor de diseños y formularios multiplataforma con GUI para los widgets Qt.\n\n- Qt Quick Designer — Un editor visual para los archivos QML que soportan WYSIWYG. Le permite rápidamente diseñar y construir aplicaciones rápidas Qt y componentes desde cero.\n\n- qmlscene — Una herramienta para cargar documentos QML que hace que desarrollar y depurar aplicaciones QML rápidamente sea fácil.\n\n- qmake — Una herramienta que ayuda a simplificar el proceso de compilación para el desarrollo de proyectos compatibles con distintas plataformas, similar a cmake pero con menos y mas específicas opciones para aplicaciones Qt.\n\n- uic — Una herramienta que lee los ficheros XML *.ui y genera los ficheros C++ correspondientes.\n\n- rcc — Una herramienta que se utiliza para incrustar recursos (como fotos) dentro de la aplicación Qt en el proceso de compilación. Funciona generando un archivo fuente C++ que contiene los datos especificados en un archivo de recursos Qt (.qrc).\n\n- moc — Una herramienta que maneja las extensiones C++ de Qt (las señales y el mecanismos de ranuras, la información de tipos en tiempo de ejecución, el sistema de propiedades dinámico, etc.).\n\n"
    },
    {
      "title": "Enlaces",
      "level": 3,
      "content": "Qt tiene enlaces de todos los lenguajes más populares, para una lista completa vea esta lista.\n\nLos siguientes ejemplos muestran un pequeño '¡Hola mundo!' en una ventana.\n\n"
    },
    {
      "title": "C++",
      "level": 4,
      "content": "- Paquete: qt5-base\n- Web: https://www.qt.io/developers/\n- Compilación: g++ $(pkg-config --cflags --libs Qt5Widgets) -fPIC -o hello hello.cpp\n- Ejecutar con: ./hello\n\n```\nhello.cpp\n```\n\n```\n#include <QApplication>\n#include <QLabel>\n\nint main(int argc, char **argv)\n{\n    QApplication app(argc, argv);\n    QLabel hola(\"¡Hola mundo!\");\n\n    hola.show();\n    return app.exec();\n}\n```\n\n"
    },
    {
      "title": "QML",
      "level": 4,
      "content": "- Paquete: qt5-declarative.\n- Web: https://doc.qt.io/qt-5/qtquick-qmlscene.html\n- Ejecutar con: qmlscene hello.qml\n\n```\nhello.qml\n```\n\n```\nimport QtQuick 2.3\n\nRectangle {\n    id: page\n    width: 400; height: 100\n    color: \"lightgray\"\n\n    Text {\n        id: holaText\n        text: \"¡Hola mundo!\"\n        anchors.horizontalCenter: page.horizontalCenter\n        anchors.verticalCenter: page.verticalCenter\n        font.pointSize: 24; font.bold: true\n    }\n}\n```\n\n"
    },
    {
      "title": "Python (PyQt)",
      "level": 4,
      "content": "- Paquete: python-pyqt5 - Enlaces de python 3 python2-pyqt5[enlace roto: package not found] - Enlaces de python 2\n\n- python-pyqt5 - Enlaces de python 3\n- python2-pyqt5[enlace roto: package not found] - Enlaces de python 2\n\n- Web: https://riverbankcomputing.com/software/pyqt/intro\n- Ejecutar con: python hello-pyqt.py o python2 hello-pyqt.py.\n\n```\nhello-pyqt.py\n```\n\n```\nimport sys\nfrom PyQt5 import QtWidgets\n\napp = QtWidgets.QApplication(sys.argv)\nlabel = QtWidgets.QLabel(\"¡Hola mundo!\")\n\nlabel.show()\nsys.exit(app.exec_())\n```\n\n"
    },
    {
      "title": "Python (PySide2)",
      "level": 4,
      "content": "- Paquete: pyside2AUR\n- Web: https://wiki.qt.io/Qt_for_Python\n- Ejecutar con: python hello-pyside.py\n\n```\nhello-pyside2.py\n```\n\n```\nimport sys\nfrom PySide2.QtWidgets import QApplication, QLabel\n\napp = QApplication(sys.argv)\nlabel = QLabel(\"¡Hola mundo!\")\n\nlabel.show()\nsys.exit(app.exec_())\n```\n\n"
    },
    {
      "title": "C#",
      "level": 4,
      "content": "Vea QtSharp.\n\n"
    },
    {
      "title": "Desactivar/Cambiar el comportamiento del log de journal Qt",
      "level": 3,
      "content": "Cuando se utiliza When using KDE y/o cualquier otra información de depuración Qt del entorno de escritorio es frecuente que se guarde en el registro de systemd.\n\nEstablezca QT_LOGGING_RULES como una variable de entorno para cambiar este comportamiento, p. ej. para desactivar completamente el registro:\n\n```\n/etc/environment\n```\n\n```\nQT_LOGGING_RULES='*=false'\n```\n\nPara desactivar solo el registro del depurador utilice QT_LOGGING_RULES=\"*.debug=false\".\n\n"
    },
    {
      "title": "Tema de iconos no se aplica",
      "level": 3,
      "content": "Desde Qt 5.1 el soporte SVG se ha movido a un módulo. Desde que qt5-base no depende de qt5-svg puede ocurrir que qt5-base este instalado pero qt5-svg no. Esto causa un comportamiento no deseado en el comportamiento con el tema de iconos. Desde que no se soporta SVG los iconos se omiten silenciosamente y hace que parezca que el tema de iconos no se esta utilizando. Instalando explícitamente qt5-svg soluciona el problema.\n\n"
    },
    {
      "title": "El tema no se aplica a las aplicaciones root",
      "level": 3,
      "content": "Como el fichero de temas del usuario ($XDG_CONFIG_HOME/Trolltech.conf) no se puede leer desde otras cuentas el tema seleccionado no se aplicará a las aplicaciones X que se ejecuten como root. Las posibles soluciones incluyen:\n\n- Creación de enlaces simbólicos, p. ej. # ln -s /home/[username]/.config/Trolltech.conf /etc/xdg/Trolltech.conf\n- Configurar un archivo de tema para todo el sistema: /etc/xdg/Trolltech.conf\n- Ajustar el tema como root.\n\n```\n# ln -s /home/[username]/.config/Trolltech.conf /etc/xdg/Trolltech.conf\n```\n\n"
    },
    {
      "title": "Estilo Qt4 no se respeta",
      "level": 3,
      "content": "Si las aplicaciones puras Qt4 (no KDE) no toman su estilo seleccionado Qt4 probablemente necesite decirle a Qt4 cómo encontrar los estilos de KDE (Oxygen, Phase etc.). Necesita ajustar la variable de entorno QT_PLUGIN_PATH. Por ejemplo:\n\n```\nQT_PLUGIN_PATH=$HOME/.kde4/lib/kde4/plugins/:/usr/lib/kde4/plugins/\n```\n\nqtconfig-qt4 debe ser capaz de encontrar sus estilos de kde y todo volverá a verse bien de nuevo.\n\nAlternativamente puede crear un enlace simbólico desde su directorio de estilos de Qt4 a uno de los estilos de KDE4:\n\n```\n# ln -s /usr/lib/{kde,qt}4/plugins/styles/theme_name\n```\n\n"
    },
    {
      "title": "Todas las aplicaciones basadas en Qt5 fallan al ejecutarse después de una actualización de Qt5",
      "level": 3,
      "content": "Si recibe un error similar a este\n\n```\nQt FATAL: Cannot mix incompatible Qt library (version 0x50900) with this library (version 0x50901)\n```\n\nprobablemente esté utilizando una plataforma de temas Qt5 o un plugin de estilo que no se ha reconstruido en la última versión de Qt5. Normalmente estos utilizan cabeceras privadas de Qt, es decir, que dependen de una versión exacta de Qt y no simplemente una coincidencia de nombre. Intente adivinar que estilo está utilizando estableciendo las variables de entorno QT_STYLE_OVERRIDE y QT_QPA_PLATFORMTHEME y reconstruya el paquete del AUR que lo proporciona.\n\n"
    },
    {
      "title": "Véase también",
      "level": 2,
      "content": "- Web oficial\n- Documentación Qt\n- Planeta Qt\n\n"
    }
  ]
}
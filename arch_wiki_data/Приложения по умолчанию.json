{
  "title": "Приложения по умолчанию",
  "url": "https://wiki.archlinux.org/title/%D0%9F%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F_%D0%BF%D0%BE_%D1%83%D0%BC%D0%BE%D0%BB%D1%87%D0%B0%D0%BD%D0%B8%D1%8E",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Программы реализуют ассоциации приложений по умолчанию разными способами. В то время как программы командной строки традиционно используют переменные окружения, графические приложения обычно используют XDG MIME Applications через GIO API, Qt API или путём запуска /usr/bin/xdg-open, который является частью xdg-utils. Поскольку xdg-open и XDG MIME Applications довольно сложны, были разработаны различные альтернативные инструменты открытия ресурсов. В следующей таблице приведены примеры приложений для каждого метода.\n\nTable content:\nМетод | Использует XDG | Примеры приложений\nGIO GAppInfo | Да | Firefox, GNOME Files, PCManFM, Thunar, Thunderbird, Telegram\n/usr/bin/xdg-open | По умолчанию | Chromium (Открытие загруженного файла)\nсвой | Обычно нет | mc, ranger\nпеременные окружения | Нет | man, sudoedit, systemctl\nD-Bus FileManager1 | org.freedesktop.FileManager1 | Firefox (Показать в папке), Zotero (Отображение файла), Telegram (Показать в папке)\n\n"
    },
    {
      "title": "Общая информация",
      "level": 2,
      "content": "Иногда программам нужно открыть файл или URI в приложении, которое предпочитает пользователь. Для этого необходимо определить тип файла (обычно с помощью расширения или сигнатуры, сопоставленной с MIME-типом) и приложение, ассоциированное с этим типом.\n\nПрограммы Heirloom UNIX использовали mime.types для определения типов MIME и mailcap для ассоциации приложений.\n\n"
    },
    {
      "title": "Инструменты открытия ресурсов",
      "level": 2,
      "content": "- XDG MIME Apps: реализует спецификацию XDG MIME Applications\n- Правила RegEx: позволяет ассоциировать типы MIME с приложениями с помощью регулярных выражений\n- Поддержка URI: позволяет ассоциировать произвольные схемы URI с приложениями\n\nTable content:\nИмя | Пакет | XDG MIME Apps | Правила RegEx | Поддержка URI\nxdg-open | xdg-utils | Да | Нет | Да\nmimeopen(1p) | perl-file-mimeinfo | Да | Нет | Нет\nmimeo | mimeoAUR | Да | Да | Да\nlinopen | linopenAUR[ссылка недействительна: package not found] | Нет | Да | Да\nmimi | mimi-gitAUR | Нет | Нет | частично\nbusking | busking-gitAUR | Нет | Да | Да\nrifle(1) | ranger | Нет | Да | Нет\nhandlr | handlrAUR | Да | Нет | Да\nclifm | clifmAUR | Нет | Да | частично\n\n"
    },
    {
      "title": "xdg-open",
      "level": 3,
      "content": "xdg-open (часть xdg-utils) реализует XDG MIME Applications и используется многими программами.\n\nИз-за его сложности бывает сложно отлаживать ситуации, когда открывается неправильное приложение по умолчанию. Из-за этого существует множество альтернатив, которые пытаются улучшить его. Некоторые из этих альтернатив заменяют двоичный файл /usr/bin/xdg-open, тем самым изменяя поведение приложений по умолчанию для большинства приложений. Другие просто предоставляют альтернативный метод выбора приложений по умолчанию.\n\n"
    },
    {
      "title": "perl-file-mimeinfo",
      "level": 3,
      "content": "perl-file-mimeinfo предоставляет инструменты mimeopen и mimetype. Они имеют немного более приятный интерфейс, чем их эквиваленты xdg-utils:\n\n```\n# определение типа MIME файла\n$ mimetype photo.jpeg\nphoto.jpeg: image/jpeg\n\n# выбор приложения по умолчанию для этого файла\n$ mimeopen -d photo.jpeg\nPlease choose an application\n\n    1) Feh (feh)\n    2) GNU Image Manipulation Program (gimp)\n    3) Pinta (pinta)\n\nuse application #\n\n# открытие файла со своим стандартным приложением\n$ mimeopen -n photo.jpeg\n```\n\nСамое главное, что приложения xdg-utils на самом деле вызывают file вместо mimetype для обнаружения типа MIME, если они не смогли определить вашу среду рабочего стола. Это важно, потому что file соответствует стандарту XDG.\n\n"
    },
    {
      "title": "mimeo",
      "level": 3,
      "content": "mimeoAUR предоставляет инструмент mimeo который объединяет функции xdg-open и xdg-mime.\n\n```\n# определение типа MIME файла\n$ mimeo -m photo.jpeg\nphoto.jpeg\n  image/jpeg\n\n# выбор приложения по умолчанию для этого типа MIME\n$ mimeo --add image/jpeg feh.desktop\n\n# открытие файла со своим стандартным приложением\n$ mimeo photo.jpeg\n```\n\nОднако большая разница с xdg-utils заключается в том, что mimeo также поддерживает пользовательские \"файлы ассоциаций\", которые допускают более сложные ассоциации. Например, передача определенных аргументов командной строки на основе регулярного выражения соответствует:\n\n```\n# открытие ссылки на YouTube в VLC, не открывая новый экземпляр\nvlc --one-instance --playlist-enqueue %U\n  ^https?://(www.)?youtube.com/watch\\?.*v=\n```\n\nxdg-utils-mimeoAUR патчит xdg-utils так, что xdg-open использует mimeo в качестве fallback, если используемая среда рабочего стола не определилась.\n\n"
    },
    {
      "title": "handlr",
      "level": 3,
      "content": "handlrAUR, написанный на Rust, предоставляет функциональность xdg-open и xdg-mime с упрощённым интерфейсом.\n\nПо сравнению с xdg-utils, он включает:\n\n- установку ассоциаций по расширению, устраняя необходимость искать или запоминать MIME-типы\n- проверку MIME-типов и расширений\n- удаление недействительных записей из mimeapps.list\n- интеллектуальное определение MIME-типов по содержимому файла в случае, если имя файла неоднозначно\n- автодополнение MIME-типов, расширений и ярлыков приложений\n\n```\n# Следующие две команды эквивалентны\nhandlr set .png feh.desktop\nhandlr set image/png feh.desktop\n\n# Отображение списка приложений по умолчанию\nhandlr list\n\n# Получение обработчика mime-типа или расширения\n$ handlr get .png --json\n{\"handler\":\"pqiv.desktop\",\"name\":\"pqiv\",\"cmd\":\"/usr/bin/pqiv\"}\n\n# Запуск обработчика с опциональным путём/URL\nhandlr launch x-scheme-handler/https\nhandlr launch x-scheme-handler/https -- https://google.ca\n```\n\nxdg-utils-handlrAUR предоставляет версию xdg-open, которая использует handlr.\n\n"
    },
    {
      "title": "clifm",
      "level": 3,
      "content": "Lira, встроенный в clifm инструмент открытия ресурсов, может быть использован сам по себе с помощью опции командной строки --open. Файл настроек (~/.config/clifm/profiles/PROFILE_NAME/mimelist.cfm) поддерживает регулярные выражения как для MIME-типов, так и для имён файлов (или расширений файлов). Несколько примеров:\n\n```\n# Открытие обычного файла\nclifm --open /etc/hosts\n\n# Открытие каталога\nclifm --open /media/data\n\n# Открытие URL (через приложение, ассоциированное с MIME-типов text/http в файле настроек)\nclifm --open www.archlinux.org\n```\n\n"
    },
    {
      "title": "Минималистичные замены",
      "level": 3,
      "content": "Следующие пакеты конфликтуют с xdg-utils, поскольку предоставляют свой собственный скрипт /usr/bin/xdg-open.\n\nЕсли вы хотите использовать один из них и при этом иметь возможность использовать xdg-utils, установите их вручную в каталог PATH перед /usr/bin.\n\n- linopenAUR[ссылка недействительна: package not found] — Bash-скрипт в 170 строк, разрешает правила регулярного выражения, может указывать запасное приложение для открывания файлов\n- mimi-gitAUR — Bash-скрипт в 130 строк, может изменять аргументы команды для каждого типа MIME\n- busking-gitAUR — Perl-скрипт в 80 строк, аналогичен mimi, но при этом поддерживает правила регулярных выражений\n\n"
    }
  ]
}
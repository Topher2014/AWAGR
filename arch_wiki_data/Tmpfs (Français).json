{
  "title": "Tmpfs (Français)",
  "url": "https://wiki.archlinux.org/title/Tmpfs_(Fran%C3%A7ais)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "tmpfs est un système de fichiers temporaire qui réside en mémoire et/ou sur une ou plusieurs partitions d'échange. Monter des répertoires en tant que tmpfs peut être un moyen efficace d'accélérer les accès à leurs fichiers ou de s'assurer que leur contenu est automatiquement effacé au redémarrage.\n\n"
    },
    {
      "title": "Utilisation",
      "level": 2,
      "content": "Les répertoires où tmpfs(5) est couramment utilisé sont /tmp, /var/lock et /var/run. Ne l'utilisez pas sur /var/tmp, car ce répertoire est destiné aux fichiers temporaires qui sont préservés lors des redémarrages.\n\nArch utilise un répertoire tmpfs /run, avec /var/run et /var/lock existant simplement comme liens symboliques pour la compatibilité. Il est également utilisé pour /tmp par la configuration par défaut de systemd et ne nécessite pas d'entrée dans fstab sauf si une configuration spécifique est nécessaire.\n\nglibc 2.2 et supérieur s'attend à ce que tmpfs soit monté sur /dev/shm pour POSIX shared memory. Le montage de tmpfs sur /dev/shm est géré automatiquement par systemd et une configuration manuelle dans fstab n'est pas nécessaire.\n\nEn général, les tâches et les programmes qui exécutent des opérations de lecture/écriture fréquentes peuvent bénéficier de l'utilisation d'un répertoire tmpfs. Certaines applications peuvent même bénéficier d'un gain substantiel en déchargeant une partie (ou la totalité) de leurs données sur la mémoire partagée. Par exemple, la relocalisation du profil de Firefox en RAM montre une amélioration significative des performances.\n\n"
    },
    {
      "title": "Exemples",
      "level": 2,
      "content": "Par défaut, la taille maximale d'une partition tmpfs est fixée à la moitié de la RAM disponible, mais il est possible de modifier cette valeur. Pour définir explicitement une taille maximale, dans cet exemple pour remplacer le montage /tmp par défaut, utilisez l'option de montage size :\n\n```\n/etc/fstab\n```\n\n```\ntmpfs /tmp tmpfs rw,nodev,nosuid,size=2G 0 0\n```\n\nPour spécifier un montage plus sécurisé, spécifiez l'option de montage suivante :\n\n```\n/etc/fstab\n```\n\n```\ntmpfs /www/cache tmpfs rw,size=1G,nr_inodes=5k,noexec,nodev,nosuid,uid=user,gid=group,mode=1700 0 0\n```\n\nConsultez la page de manuel tmpfs(5) et Security#File systems pour plus d'informations.\n\nRedémarrez pour que les changements prennent effet. Notez que même s'il peut être tentant d'exécuter simplement mount -a pour que les changements prennent effet immédiatement, cela rendra inaccessibles tous les fichiers résidant actuellement dans ces répertoires (ceci est particulièrement problématique pour l'exécution de programmes avec des fichiers de verrouillage, par exemple). Cependant, si tous ces répertoires sont vides, il devrait être sûr d'exécuter mount -a au lieu de redémarrer (ou de les monter individuellement).\n\nAprès avoir appliqué les changements, vérifiez qu'ils ont pris effet en regardant dans /proc/mounts et en utilisant findmnt :\n\n```\n$ findmnt /tmp\n```\n\n```\nSOURCE CIBLE OPTIONS FSTYPE\n/tmp tmpfs tmpfs rw,nosuid,nodev,relatime\n```\n\nLes tmpfs peuvent également être temporairement redimensionnés sans avoir besoin de redémarrer, par exemple lorsqu'un gros travail de compilation doit être exécuté prochainement. Dans ce cas, exécutez :\n\n```\n# mount -o remount,size=4G /tmp\n```\n\n"
    },
    {
      "title": "Désactiver le montage automatique",
      "level": 2,
      "content": "Sous systemd, /tmp est automatiquement monté en tant que tmpfs, si ce n'est pas déjà un point de montage dédié (soit tmpfs, soit sur le disque) dans /etc/fstab. Pour désactiver le montage automatique, masquez l'unité tmp.mount.\n\nLes fichiers ne seront plus stockés dans un tmpfs, mais sur le périphérique de type bloc à la place. Le contenu de /tmp sera maintenant préservé entre les redémarrages, ce qui peut ne pas être le comportement souhaité. Pour retrouver le comportement précédent et nettoyer le répertoire /tmp automatiquement au redémarrage, pensez à utiliser tmpfiles.d(5) :\n\n```\n/etc/tmpfiles.d/tmp.conf\n```\n\n```\n# consultez tmpfiles.d(5)\n# toujours activer le nettoyage du répertoire /tmp\nD ! /tmp 1777 root root 0\n\n# supprimer les fichiers de /var/tmp vieux de plus de 10 jours\nD /var/tmp 1777 root root 10d\n\n# les points de montage des espaces de noms (PrivateTmp=yes) sont exclus de la suppression\nx /tmp/systemd-private-*\nx /var/tmp/systemd-private-*\nX /tmp/systemd-private-*/tmp\nX /var/tmp/systemd-private-*/tmp\n```\n\n"
    },
    {
      "title": "L'ouverture de liens symboliques dans tmpfs en tant que root échoue",
      "level": 3,
      "content": "Si /tmp utilise tmpfs, changez le répertoire actuel en /tmp, puis créez un fichier et un lien symbolique vers ce fichier dans le même répertoire /tmp. Il faut s'attendre à des erreurs de permission refusée lors de la tentative de lecture du lien symbolique car /tmp a le bit collant activé.\n\nCe comportement peut être contrôlé via /proc/sys/fs/protected_symlinks ou simplement via sysctl : sysctl -w fs.protected_symlinks=0. Consultez Sysctl#Configuration pour rendre cela permanent.\n\n"
    },
    {
      "title": "Voir aussi",
      "level": 2,
      "content": "- Documentation du noyau Linux\n\n"
    }
  ]
}
{
  "title": "Chroot (Türkçe)",
  "url": "https://wiki.archlinux.org/title/Chroot_(T%C3%BCrk%C3%A7e)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "İlgili makaleler\n\n- PRoot\n- Linux Containers\n- systemd-nspawn\n\nChroot işlemi, mevcut durumda çalışan işlemler ve bu işlemlerin alt işlemleri için görünen kök dizinini değiştiren bir işlemdir. Böyle değiştirilmiş bir ortamda çalışan bir programın, çalıştığı ortam dizininin dışındaki dosyalara ve komutlara erişim izni bulunmamaktadır. Bu değiştirilmiş ortama chroot kafesi ismi verilmektedir.\n\n"
    },
    {
      "title": "Nedenler",
      "level": 2,
      "content": "Kök dizinini değiştirmek, genellikle önyüklemenin ve/veya giriş yapmanın mümkün olmadığı sistemlerde, sistem bakımını gerçekleştirmek için yapılmaktadır. En yaygın örnekler ise şunlardır:\n\n- Önyükleyici yeniden kurmak.\n- initramfs imaj'ını yeniden oluşturmak.\n- Paketleri yükseltmek veya paketleri eski sürümlerine düşürmek.\n- Unutulmuş bir parolayı sıfırlamak.\n- Temiz chroot ortamında paketleri oluşturmak.\n\nAyrıca Chroot'un Sınırlamaları sayfasına bakınız.\n\n"
    },
    {
      "title": "Gereksinimler",
      "level": 2,
      "content": "- Kök izni ayrılacılığı.\n- Başka bir Linux ortamı, örn. bir Canlı CD veya USB flash medyası veya mevcut durumdaki başka bir Linux dağıtımı.\n- Chroot'un yapılacağı ortam ile chroot'un uygulanacağı ortamın mimarilerinin birbirleri ile eşleşmesi gerekmektedir. Geçerli ortamın mimarisi şu komut ile öğrenilebilmektedir: uname -m (örn. i686 or x86_64).\n- Chroot ortamında ihtiyaç duyulan kernel modüllerinin yüklenilmesi.\n- Gerekli ise takas alanının etkinleştirilmiş olması: # swapon /dev/sdxY\n- Gerekli ise internet bağlantısının kurulu olması.\n\n```\n# swapon /dev/sdxY\n```\n\n"
    },
    {
      "title": "Kullanım",
      "level": 2,
      "content": "- hostnamectl, localectl ve timedatectl gibi bazı systemd araçları aktif bir dbus bağlantısına ihtiyaç duyduklarından, chroot ortamı içerisinde kullanılamamaktadır. [1]\n- Chroot'un yeni kök dizini (/) olarak hizmet verecek dosya sistemi erişilebilir olmalıdır. (yani şifresi çözülmüş, bağlanılmış (mounted))\n\nAşağıda belirtildiği üzere chroot'un kullanımı için iki ana seçenek bulunmaktadır.\n\n"
    },
    {
      "title": "arch-chroot'un kullanımı",
      "level": 3,
      "content": "arch-chroot bash komut dosyası, arch-install-scripts paketinin bir parçasıdır. Komut dosyası /usr/bin/chroot programını çalıştırmadan önce /proc gibi API dosya sistemlerini bağlamakta ve /etc/resolv.conf dosyasını chroot'dan erişilebilir kılmaktadır.\n\n"
    },
    {
      "title": "Bir chroot'a girilmesi",
      "level": 4,
      "content": "arch-chroot komutu, kullanılacak yeni kök dizini ilk argümanda olacak şekilde çalıştırılmaktadır.\n\n```\n# arch-chroot /yeni/kök/dizininin/yeri\n```\n\nÖrnek olarak, kurulum rehberine göre bu dizin /mnt olmalıdır.\n\n```\n# arch-chroot /mnt\n```\n\nchroot'dan çıkmak için exit komutu kullanılmaktadır:\n\n```\n# exit\n```\n\n"
    },
    {
      "title": "Var olan bir kurulum üzerinde chroot işleminin gerçekleştirilmesi",
      "level": 4,
      "content": "lsblk komutunu çalıştırın ve kurulumunuzun disk bölümü düzenini bir kenara not edin. Bu genellikle SATA diskler için /dev/sdXY, NVMe diskler için ise /dev/nvme0nXpY formatında olacaktır.\n\nDosya sistemini bağlayın:\n\n```\n# mount /dev/sdXY /mnt\n```\n\nEk olarak, sisteminizde bir EFI sistem bölümü var ve üzerinde değişiklikler (örneğin vmlinuz'u veya initramfs imajlarını güncellemek) yapmanız gerekiyor ise:\n\n```\n# mount /dev/sdXZ /mnt/esp\n```\n\nSon olarak, chroot'a giriş yapın:\n\n```\n# arch-chroot /mnt\n```\n\nChroot'dan çıkmak için:\n\n```\n# exit\n```\n\nkomutunu kullanın.\n\nBöylece var olan kurulumunuzda bulunan işlemlerin bir çoğunu yapabilirsiniz. Ancak D-Bus'ı gerektiren bazı işlemler, #Kullanım bölümünde belirtildiği gibi çalışmayacaktır.\n\n"
    },
    {
      "title": "Tek bir komutun çalıştırılması ve çıkış yapılması",
      "level": 4,
      "content": "chroot'dan bir komut çalıştırıp sonrasında çıkmak için komut satırının sonuna ekleyin:\n\n```\n# arch-chroot /yeni/kök/dizininin/yeri benim_komutum\n```\n\nÖrnek olarak, /mnt/arch konumundaki chroot için mkinitcpio -p linux komutunun çalıştırılması şu şekilde yapılmaktadır:\n\n```\n# arch-chroot /mnt/arch mkinitcpio -p linux\n```\n\n"
    },
    {
      "title": "chroot'un kullanımı",
      "level": 3,
      "content": "Aşağıdaki örnekte /yeni/kök/dizininin/yeri dizini yeni kökün bulunduğu dizindir.\n\nÖncelikle, geçici API dosya sistemlerini bağlayın:\n\n```\n# cd /yeni/kök/dizininin/yeri\n# mount -t proc /proc proc/\n# mount -t sysfs /sys sys/\n# mount --rbind /dev dev/\n```\n\nVe isteğe bağlı olarak:\n\n```\n# mount --rbind /run run/\n```\n\nEğer UEFI bir sistem kullanıyorsanız, EFI değişkenlerine de erişmeniz gerekecektir. Aksi takdirde, GRUB'ı yükleme işlemi sırasında UEFI variables not supported on this machine(UEFI değişkenleri bu makinede desteklenmemektedir) gibi bir mesaj alabilirsiniz:\n\n```\n# mount --rbind /sys/firmware/efi/efivars sys/firmware/efi/efivars/\n```\n\nArdından, chroot ortamında internet bağlantısını kullanmak için DNS ayrıntılarını kopyalayınız:\n\n```\n# cp /etc/resolv.conf etc/resolv.conf\n```\n\nSon olarak, bash kabuğu kullanarak kök dizinini /yeni/kök/dizininin/yeri dizinine değiştirin.\n\n```\n# chroot /yeni/kök/dizininin/yeri /bin/bash\n```\n\n- chroot: cannot run command '/usr/bin/bash': Exec format error, ana bilgisayar ortamının ve chroot ortamının mimarilerinin eşleşmemesi büyük bir olasılıktır.\n- chroot: '/usr/bin/bash': permission denied, çalıştırma izni ile yeniden bağlamaya çalışın: mount -o remount,exec /yeni/kök/dizininin/yeri. Eğer kontrol etmek yardımcı olmadıysa, yeni ortamın temel bileşenlerinin sağlam olduğundan emin olun.(Eğer kök dizini bir Arch kökü dizini ise pacutils paketinden paccheck --root=/yeni/kök/dizininin/yeri --files --file-properties --md5sum glibc filesystem komutunu deneyin.)\n\n- Eğer kontrol etmek yardımcı olmadıysa, yeni ortamın temel bileşenlerinin sağlam olduğundan emin olun.(Eğer kök dizini bir Arch kökü dizini ise pacutils paketinden paccheck --root=/yeni/kök/dizininin/yeri --files --file-properties --md5sum glibc filesystem komutunu deneyin.)\n\nchroot işlemini gerçekleştirdikten sonra, yerel bash yapılandırma dosyasını yüklemek gerekebilmektedir:\n\n```\n# source /etc/profile\n# source ~/.bashrc\n```\n\n```\n# export PS1=\"(chroot) $PS1\"\n```\n\nchroot ile yapılcak işlemler tamamlandığında, şu komut ile çıkış yapılabilmektedir:\n\n```\n# exit\n```\n\nArdından geçiçi dosya sistemlerinin bağlantısını kaldırın:\n\n```\n# cd /\n# umount --recursive /yeni/kök/dizininin/yeri\n```\n\nNote: umount: /path: device is busy bu genellikle bir programın (bir kabuğun bile) chroot ortamında çalışır konumda bırakıldığını veya bir alt bağlamanın hala mevcut olduğunu belirtmektedir. Programdan çıkın ve findmnt -R /yeni/kök/dizininin/yeri komutunu kullanarak alt bağlantıları bulun ve umount komutu ile bu alt bağlantıları kaldırın. Bir bağlantıyı kaldırma sırasında umount komutunun kullanılması sıkıntı çıkarmakta ise umount --force komutu kullanılabilir. Eğer bu da işe yaramaz ise son çare olarak bağlantıları serbest bırakmak için umount --lazy komutunu kullanın. Her iki durumda da güvende olmak ve gelecekteki olası çakışmaları önlemek için reboot komutunu kullanarak sistemi yeniden başlatın.\n\numount: /path: device is busy bu genellikle bir programın (bir kabuğun bile) chroot ortamında çalışır konumda bırakıldığını veya bir alt bağlamanın hala mevcut olduğunu belirtmektedir. Programdan çıkın ve findmnt -R /yeni/kök/dizininin/yeri komutunu kullanarak alt bağlantıları bulun ve umount komutu ile bu alt bağlantıları kaldırın. Bir bağlantıyı kaldırma sırasında umount komutunun kullanılması sıkıntı çıkarmakta ise umount --force komutu kullanılabilir. Eğer bu da işe yaramaz ise son çare olarak bağlantıları serbest bırakmak için umount --lazy komutunu kullanın. Her iki durumda da güvende olmak ve gelecekteki olası çakışmaları önlemek için reboot komutunu kullanarak sistemi yeniden başlatın.\n\n"
    },
    {
      "title": "chroot'dan grafik tabanlı uygulamaları çalıştırma",
      "level": 2,
      "content": "Eğer sistemde çalışan bir X sunucusu bulunmakta ise, chroot ortamından direkt olarak grafik tabanlı uygulamalar başlatılabilmektedir.\n\nchroot ortamının bir X sunucusuna bağlanmasına izin vermek için, X sunucusu içerisinde sanal bir terminal açınız (örn. halihazırda girişi yapılmış bir kullanıcının masaüstünde), ardından herhangi bir kimsenin, kullanıcının X sunucuna bağlanmasına izin vermek için xhost komutunu çalıştırın (ayrıca bakınız Xhost):\n\n```\n$ xhost +local:\n```\n\nArdından, uygulamaları X sunucusundan chroot ortamına yönlendirmek için, chroot ortamındaki DISPLAY ortam değişkeninin değerini, X sunucusunun sahibi olan kullanıcının DISPLAY ortam değişkeninin değerine eşitleyin. Yani, X sunucunun sahibi olan kullanıcı olarak DISPLAY ortam değişkeninin değerini öğrenmek için aşağıdaki komutu çalıştırın:\n\n```\n$ echo $DISPLAY\n```\n\nEğer değer (örneğin) \":0\" ise, chroot ortamında:\n\n```\n# export DISPLAY=:0\n```\n\nkomutunu çalıştırın.\n\n"
    },
    {
      "title": "Kök izni ayrıcalıkları olmadan çalıştırma",
      "level": 2,
      "content": "Chroot çalışmak için kök izni ayrıcalıklarına ihtiyaç duymaktadır. Ancak bazı durumlarda kullanıcıdan bu izinler istenmemekte veya kullanıcının bu izinleri elde etmesi mümkün olmamaktadır. Böyle durumlarda, alternatif uygulamalar kullanarak chroot'un işleyişini taklit etmenin çeşitli yolları vardır.\n\n"
    },
    {
      "title": "PRoot",
      "level": 3,
      "content": "Görünen kök dizinini değiştirmek için PRoot uygulaması ve kök izni ayrıcalıkları olmadan mount --bind komutu kullanılabilmektedir. Bu durum, uygulamaları tek bir dizine sınırlamak veya farklı bir işlemci mimarisi için derlenmiş programları çalıştırmada kullanışlı olabilmektedir, ancak tüm dosyaların ana bilgisayar sistemindeki kullanıcıya ait olması nedeni ile bu işlemin sınırlamaları vardır. PRoot uygulaması, bu sınırlamaların bazıları için geçici bir çözüm olarak (daha sınırlı da olsa) fakeroot durumuna benzeyen --root-id parametresini sağlamaktadır.\n\n"
    },
    {
      "title": "Fakechroot",
      "level": 3,
      "content": "fakechroot, chroot'un çağırılmasını engelleyen ve sonuçları taklit eden bir kütüphanedir. fakeroot uygulaması ile birlikte, normal bir kullanıcı olarak chroot işlemini taklit etmede kullanılabilmektedir.\n\n```\n$ fakechroot fakeroot chroot ~/my-chroot bash\n```\n\n"
    },
    {
      "title": "Unshare",
      "level": 3,
      "content": "util-linux paketinin bir parçası olan Unshare, yeni bir kernel alan adı oluşturmak için kullanılabilmektedir. Bu, sıradan chroot komutu ile birlikte de çalışmaktadır. Örneğin:\n\n```\n$ unshare --map-root-user chroot ~/namespace /bin/sh\n```\n\n"
    },
    {
      "title": "arch-chroot: /yeni/kök/dizininin/yeri konumu bir bağlantı noktası değildir. Bu işlemin istenmeyen yan etkileri olabilir.",
      "level": 3,
      "content": "arch-chroot /yeni/kök/dizininin/yeri komutunu çalıştırırken bir uyarı mesajı verilebilmektedir:\n\n```\n==> WARNING: /yeni/kök/dizininin/yeri is not a mountpoint. This may have undesirable side effects.\n```\n\nBu mesajın açıklaması için ve bir bağlama montajı örneğinde chroot dizinini bir bağlama noktası olarak kullanmak için arch-chroot(8) rehber sayfasına bakınız.\n\n"
    },
    {
      "title": "Ayrıca Bakınız",
      "level": 2,
      "content": "- Temel Chroot\n\n"
    }
  ]
}
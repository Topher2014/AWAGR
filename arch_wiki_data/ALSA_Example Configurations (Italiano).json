{
  "title": "ALSA/Example Configurations (Italiano)",
  "url": "https://wiki.archlinux.org/title/ALSA/Example_Configurations_(Italiano)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs to be translated.** This article or section needs to be translated.\n\nThis article or section needs to be translated.\n\nQuanto di seguito riportato dovrebbe servire come guida per le configurazioni più avanzate di ALSA. La configurazione viene salvata in /etc/asound.conf come indicato nell'articolo principale. Di nessuna delle configurazioni riportate di seguito è garantito il funzionamento.\n\n"
    },
    {
      "title": "Surround 7.1 con upmix da stereo tramite dmix",
      "level": 2,
      "content": "```\n~/.asoundrc\n```\n\n```\n# 2008-11-15\n #\n # This .asoundrc will allow the following:\n #\n # - upmix stereo files to 7.1 speakers.\n # - playback real 7.1 sounds, on 7.1 speakers,\n # - allow the playback of both stereo (upmixed) and surround(7.1) sources at the same time.\n # - use the 6th and 7th channel (side speakers) as a separate soundcard, i.e. for headphones\n #   (This is called the \"alternate\" output throughout the file, device names prefixed with 'a')\n # - play mono sources in stereo (like skype & ekiga) on the alterate output\n #\n # Make sure you have \"8 Channels\" and NOT \"6 Channels\" selected in alsamixer!\n #\n # Please try the following commands, to make sure everything is working as it should.\n #\n # To test stereo upmix :      speaker-test -c2 -Ddefault -twav\n # To test surround(5.1):      speaker-test -c6 -Dplug:dmix6 -twav\n # To test surround(7.1):      speaker-test -c6 -Dplug:dmix8 -twav\n # To test alternative output: speaker-test -c2 -Daduplex -twav\n # To test mono upmix:         speaker-test -c1 -Dmonoduplex -twav\n #\n #\n # It may not work out of the box for all cards. If it doesnt work for you, read the comments throughout the file.\n # The basis of this file was written by wishie of #alsa, and then modified with info from various sources by \n # squisher. Svenstaro modified it for 7.1 output support.\n \n #Define the soundcard to use\n pcm.snd_card {\n     type hw\n     card 0\n     device 0\n }\n \n # 8 channel dmix - output whatever audio, to all 8 speakers\n pcm.dmix8 {\n     type dmix\n     ipc_key 1024\n     ipc_key_add_uid false\n     ipc_perm 0660\n     slave {\n         pcm \"snd_card\"\n         rate 48000\n         channels 8\n         period_time 0\n         period_size 1024\n         buffer_time 0\n         buffer_size 5120\n     }\n \n # Some cards, like the \"nforce\" variants require the following to be uncommented. \n # It routes the audio to the correct speakers.\n #    bindings {\n #        0 0\n #        1 1\n #        2 4\n #        3 5\n #        4 2\n #        5 3\n #        6 6\n #        7 7\n #    }\n }\n \n # upmixing - duplicate stereo data to all 8 channels\n pcm.ch71dup {\n     type route\n     slave.pcm dmix8\n     slave.channels 8\n     ttable.0.0 1\n     ttable.1.1 1\n     ttable.0.2 1\n     ttable.1.3 1\n     ttable.0.4 0.5\n     ttable.1.4 0.5\n     ttable.0.5 0.5\n     ttable.1.5 0.5\n     ttable.0.6 1\n     ttable.1.7 1\n }\n \n # this creates a six channel soundcard\n # and outputs to the eight channel one\n # i.e. for usage in mplayer I had to define in ~/.mplayer/config:\n #   ao=alsa:device=dmix6\n #   channels=6\n pcm.dmix6 {\n     type route\n     slave.pcm dmix8\n     slave.channels 8\n     ttable.0.0 1\n     ttable.1.1 1\n     ttable.2.2 1\n     ttable.3.3 1\n     ttable.4.4 1\n     ttable.5.5 1\n     ttable.6.6 1\n     ttable.7.7 1\n }\n \n # share the microphone, i.e. because virtualbox grabs it by default\n pcm.microphone {\n     type dsnoop\n     ipc_key 1027\n     slave {\n         pcm \"snd_card\"\n     }\n }\n \n # rate conversion, needed i.e. for wine\n pcm.2chplug {\n     type plug\n     slave.pcm \"ch71dup\"\n }\n pcm.a2chplug {\n     type plug\n     slave.pcm \"dmix8\"\n }\n \n # routes the channel for the alternative\n # 2 channel output, which becomes the 7th and 8th channel \n # on the real soundcard\n #pcm.alt2ch {\n #    type route\n #    slave.pcm \"a2chplug\"\n #    slave.channels 8\n #    ttable.0.6    1\n #    ttable.1.7    1\n #}\n \n # skype and ekiga are only mono, so route left channel to the right channel\n # note: this gets routed to the alternative 2 channels\n pcm.mono_playback {\n     type route\n     slave.pcm \"a2chplug\"\n     slave.channels 8\n     # Send Skype channel 0 to the L and R speakers at full volume\n     #ttable.0.6    1\n     #ttable.0.7    1\n }\n \n # 'full-duplex' device for use with aoss\n pcm.duplex {\n     type asym\n     playback.pcm \"2chplug\"\n     capture.pcm \"microphone\"\n }\n \n #pcm.aduplex {\n #    type asym\n #    playback.pcm \"alt2ch\"\n #    capture.pcm \"microphone\"\n #}\n \n pcm.monoduplex {\n     type asym\n     playback.pcm \"mono_playback\"\n     capture.pcm \"microphone\"\n }\n \n # for aoss\n pcm.dsp0 \"duplex\"\n ctl.mixer0 \"duplex\"\n \n # softvol manages volume in alsa\n # i.e. wine likes this\n pcm.mainvol {\n     type softvol\n     slave.pcm \"duplex\"\n     control {\n         name \"2ch-Upmix Master\"\n         card 0\n     }\n }\n \n #pcm.!default \"mainvol\"\n \n # set the default device according to the environment\n # variable ALSA_DEFAULT_PCM and default to mainvol\n pcm.!default {\n     @func refer\n     name { @func concat \n            strings [ \"pcm.\"\n                      { @func getenv\n                        vars [ ALSA_DEFAULT_PCM ]\n                        default \"mainvol\"\n                      }\n            ]\n          }\n }\n \n # uncomment the following if you want to be able to control\n # the mixer device through environment variables as well\n #ctl.!default {\n #    @func refer\n #    name { @func concat \n #           strings [ \"ctl.\"\n #                     { @func getenv\n #                       vars [ ALSA_DEFAULT_CTL\n #                              ALSA_DEFAULT_PCM\n #                       ]\n #                       default \"duplex\"\n #                     }\n #           ]\n #         }\n #}\n```\n\n"
    },
    {
      "title": "Surround 5.1 con upmix da stereo tramite dmix, inversione canali destro/sinistro, cattiva disposizione degli speaker",
      "level": 2,
      "content": "Procedimento funzionante nella maggior parte dei casi senza ulteriori modifiche a programmi/files.\n\n```\npcm.!default {\n    type route\n## forwards to the mixer pcm defined below\n    slave.pcm dmix51\n    slave.channels 6\n\n## \"Native Channels\" stereo, swap left/right\n    ttable.0.1 1\n    ttable.1.0 1\n## original normal left/right commented out\n#    ttable.0.0 1\n#    ttable.1.1 1\n\n## route \"native surround\" so it still works but weaken signal (+ RL/RF swap) \n## because my rear speakers are more like random than really behind me\n    ttable.2.3 0.7\n    ttable.3.2 0.7\n    ttable.4.4 0.7\n    ttable.5.5 0.7\n\n## stereo => quad speaker \"upmix\" for \"rear\" speakers + swap L/R\n    ttable.0.3 1\n    ttable.1.2 1\n\n## stereo L+R => join to Center & Subwoofer 50%/50%\n    ttable.0.4 0.5\n    ttable.1.4 0.5\n    ttable.0.5 0.5\n    ttable.1.5 0.5\n## to test: \"$ speaker-test -c6 -twav\" and: \"$ speaker-test -c2 -twav\"\n}\n\npcm.dmix51 {\n\ttype dmix\n\tipc_key 1024\n# let multiple users share\n\tipc_key_add_uid false \n# IPC permissions (octal, default 0600)\n# I think changing this fixed something - but I'm not sure what.\n\tipc_perm 0660 # \n\tslave {\n## this is specific to my hda_intel. Often hd:0 is just allready it; To find: $ aplay -L \n\t\tpcm surround51 \n# this rate makes my soundcard crackle\n#\t\trate 44100\n# this rate stops flash in firefox from playing audio, but I don't need that\n       rate 48000\n       channels 6\n## Any other values in the 4 lines below seem to make my soundcard crackle, too\n       period_time 0\n       period_size 1024\n       buffer_time 0\n       buffer_size 4096\n\t}\n}\n```\n\n"
    }
  ]
}
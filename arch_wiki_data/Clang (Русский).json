{
  "title": "Clang (Русский)",
  "url": "https://wiki.archlinux.org/title/Clang_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Clang — это компилятор C/C++/Objective c/CUDA на основе LLVM. Доступен по лицензии \"Apache 2.0 License with LLVM exceptions\".\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет clang.\n\n"
    },
    {
      "title": "Сборка пакетов с использованием Clang",
      "level": 2,
      "content": "Добавьте export CC=clang и (для C++) export CXX=clang++ в файл /etc/makepkg.conf. Для поддержки LTO также установите пакет lld и добавьте -fuse-ld=lld в LDFLAGS в файле /etc/makepkg.conf. Если вы выполняете сборку с debug, удалите -fvar-tracking-assignments из DEBUG_CFLAGS и DEBUG_CXXFLAGS, так как Clang их не поддерживает.\n\nПакеты, которые используют специфичные для GCC опции компиляции, могут не собраться и потребовать ручного изменения исходников, файла PKGBUILD или отключения строк Clang в makepkg.conf.\n\n"
    },
    {
      "title": "Использование статического анализатора",
      "level": 2,
      "content": "Чтобы проанализировать проект, добавьте scan-build перед командой сборки. Например:\n\n```\n$ scan-build make\n```\n\nЕсли проект уже собран, scan-build не станет его пересобирать и не проанализирует. Чтобы принудительно запустить повторую сборку и анализ, используйте опцию -B:\n\n```\n$ scan-build make -B\n```\n\nТакже можно проанализировать отдельные файлы:\n\n```\n$ scan-build gcc -c t1.c t2.c\n```\n\n"
    },
    {
      "title": "Автодополнение в bash",
      "level": 3,
      "content": "Установите bash-completion и выполните source /usr/share/clang/bash-autocomplete.sh в файле настроек Bash.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Clang — Википедия\n- scan-build: running the analyzer from the command line\n- Compiling CUDA with clang\n\n"
    }
  ]
}
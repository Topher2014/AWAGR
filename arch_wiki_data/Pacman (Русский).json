{
  "title": "Pacman (Русский)",
  "url": "https://wiki.archlinux.org/title/Pacman_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Создание пакетов\n- Откат пакетов\n- pacman/Подпись пакета\n- pacman (Русский)/Pacnew и Pacsave\n- pacman/Восстановление локальной базы данных\n- pacman/Rosetta\n- pacman/Советы и приёмы\n- ЧаВо#Управление пакетами\n- Обслуживание системы\n- Система сборки Arch\n- Официальные репозитории\n- Пользовательский репозиторий Arch\n\nПакетный менеджер pacman — одна из важнейших отличительных особенностей Arch Linux. Он объединил в себе двоичный формат пакетов и лёгкую в использовании систему сборки. Цель pacman — удобное управление пакетами вне зависимости от того, взяты они из официальных репозиториев или же собраны самостоятельно.\n\nPacman поддерживает систему в актуальном состоянии, синхронизируя пакеты с мастер-сервером. Эта клиент-серверная модель позволяет пользователю скачивать/устанавливать пакеты со всеми необходимыми зависимостями всего одной командой.\n\nPacman написан на языке Си и работает с tar-пакетами в формате bsdtar(1).\n\n"
    },
    {
      "title": "Использование",
      "level": 2,
      "content": "В этом разделе приведена небольшая подборка доступных возможностей pacman. Больше примеров можно найти в руководстве pacman(8).\n\n"
    },
    {
      "title": "Установка пакетов",
      "level": 3,
      "content": "Пакет представляет собой архив, в котором содержатся:\n\n- все (скомпилированные) файлы приложения;\n- метаданные о приложении (имя приложения, версия, зависимости и т.д.);\n- установочные файлы и директивы для pacman;\n- (необязательно) дополнительные файлы для облегчения жизни, например — сценарии запуска/остановки.\n\nPacman, менеджер пакетов Arch Linux, может устанавливать, обновлять и удалять пакеты. Использование пакетов имеет ряд преимуществ по сравнению с альтернативным подходом — ручной компиляцией и установкой программ:\n\n- удобное обновление: pacman будет устанавливать обновления по мере их появления;\n- проверка зависимостей: pacman самостоятельно отслеживает зависимости, вам нужно только указать целевую программу, и pacman установит её вместе с неоходимыми дополнительными пакетами;\n- чистое удаление: pacman хранит список файлов всех пакетов. При удалении пакета в системе не остаётся лишнего \"мусора\".\n\n- Часто у пакетов есть опциональные зависимости, которые не являются обязательными, но предоставляют дополнительную функциональность. Во время установки pacman выведет список опциональных зависимостей, но в файле pacman.log упоминаний о них не будет. Чтобы получить информацию об опциональных зависимостях пакета, используйте #Запросы к базам данных пакетов.\n- При установке пакета, который нужен только в качестве (опциональной) зависимости для другого пакета и который не будет использоваться вами напрямую, рекомендуется использовать параметр --asdeps. Подробнее смотрите раздел #Причина установки.\n\nNote: **u** \n\n"
    },
    {
      "title": "Установка отдельных пакетов",
      "level": 4,
      "content": "Для установки одного пакета или списка пакетов (включая зависимости) используйте следующую команду:\n\n```\n# pacman -S название_пакета1 название_пакета2 ...\n```\n\nДля установки списка пакетов при помощи поиска по регулярному выражению (смотрите эту ветку форума) выполните:\n\n```\n# pacman -S $(pacman -Ssq регулярное_выражение)\n```\n\nЕсли пакет имеет несколько версий в разных репозиториях (например, в extra и testing), можно указать, откуда именно следует установить пакет:\n\n```\n# pacman -S extra/имя_пакета\n```\n\nЧтобы установить несколько пакетов с частично совпадающими названиями, используйте фигурные скобки:\n\n```\n# pacman -S plasma-{desktop,mediacenter,nm}\n```\n\nМожно использовать несколько уровней вложенных фигурных скобок:\n\n```\n# pacman -S plasma-{workspace{,-wallpapers},pa}\n```\n\nВиртуальным называется такой пакет, который сам по себе не существует, но предоставляется другими пакетами. \"Виртуальность\" позволяет другим пакетам не объявлять зависимостью какой-то конкретный пакет, если есть возможность выбора из нескольких кандидатов. Виртуальный пакет нельзя установить по имени, он добавляется в систему только при установке пакета, который предоставляет его.\n\n"
    },
    {
      "title": "Установка группы пакетов",
      "level": 4,
      "content": "Некоторые пакеты объединены в группы и могут устанавливаться одной командой. Например, после команды\n\n```\n# pacman -S gnome\n```\n\nвам будет предложено выбрать пакеты из группы gnome, которые вы хотели бы установить.\n\nНекоторые группы содержат большое количество пакетов, и среди них могут быть всего несколько нужных или ненужных вам. Вместо того, чтобы вводить все необходимые вам номера, иногда удобнее выбрать или исключить отдельные числа или диапазоны чисел при помощи приведенного ниже синтаксиса:\n\n```\nEnter a selection (default=all): 1-10 15\n```\n\n— будут выбраны все пакеты в диапазоне с 1 по 10, а также 15;\n\n```\nEnter a selection (default=all): ^5-8 ^2\n```\n\n— будут выбраны все пакеты, кроме входящих в диапазон с 5 по 8, а также 2.\n\nЧтобы увидеть список пакетов, принадлежащих к группе gnome, выполните:\n\n```\n# pacman -Sg gnome\n```\n\nПеречень групп можно найти на странице https://archlinux.org/groups/.\n\n"
    },
    {
      "title": "Удаление пакетов",
      "level": 3,
      "content": "Удалить пакет, не удаляя его зависимости:\n\n```\n# pacman -R название_пакета\n```\n\nУдалить пакет и те его зависимости, которые не нужны никаким другим пакетам:\n\n```\n# pacman -Rs название_пакета\n```\n\nКоманда выше может не сработать при удалении группы с другими необходимыми пакетами. В этом случае используйте команду:\n\n```\n# pacman -Rsu название_пакета\n```\n\nУдалить пакет, его зависимости, а также все пакеты, для которых он сам является зависимостью:\n\n```\n# pacman -Rsc название_пакета\n```\n\nУдалить пакет, который требуется другому пакету, без удаления зависимостей:\n\n```\n# pacman -Rdd название_пакета\n```\n\nPacman создает резервные копии конфигурационных файлов удаляемых приложений и добавляет к ним расширение .pacsave. Если вы хотите удалить и эти файлы, используйте ключ -n:\n\n```\n# pacman -Rn название_пакета\n```\n\n"
    },
    {
      "title": "Обновление пакетов",
      "level": 3,
      "content": "- Обновление системы следует выполнять регулярно, следуя рекомендациям в статье System maintenance#Обновление системы. При этом пользователь должен понимать смысл выполняемых действий, а не слепо повторять предложенные команды.\n- Arch поддерживает только полные обновления системы. Смотрите статьи System maintenance#Частичные обновления не поддерживаются и #Установка пакетов.\n\nPacman полностью обновляет систему всего одной командой. Если система давно не обновлялась, процесс может занять довольно длительное время. Приведённая ниже команда одновременно синхронизирует базы данных репозиториев и выполняет обновление системы — при этом пакеты, которых нет в подключённых репозиториях, обновлены не будут:\n\n```\n# pacman -Syu\n```\n\n"
    },
    {
      "title": "Запросы к базам данных пакетов",
      "level": 3,
      "content": "Для взаимодействия с базами данных в pacman предусмотрены флаги -Q (база данных пакетов), -S (база данных синхронизации) и -F (база данных файлов). Команды pacman -Q --help, pacman -S --help и pacman -F --help выведут список возможных опций для этих флагов.\n\nPacman может выполнять поиск в базе данных как среди названий пакетов, так и по их описаниям:\n\n```\n$ pacman -Ss условие1 условие2 ...\n```\n\nИногда поиск с параметром -s выдаёт много ненужных результатов, поэтому имеет смысл ограничить поиск только названиями пакетов, отключив поиск по описаниям и другим полям. Для этого можно использовать регулярные выражения:\n\n```\n$ pacman -Ss '^vim-'\n```\n\nИскать среди установленных пакетов:\n\n```\n$ pacman -Qs условие1 условие2 ...\n```\n\nИскать пакет в репозиториях по названию файла:\n\n```\n$ pacman -F условие1 условие2 ...\n```\n\nПоказать подробную информацию о пакете в репозитории:\n\n```\n$ pacman -Si название_пакета\n```\n\nТо же самое — для установленного пакета:\n\n```\n$ pacman -Qi название_пакета\n```\n\nЕсли указать сразу два флага -i, то будет также выведен список резервных копий файлов и их состояние (модифицирован/нет):\n\n```\n$ pacman -Qii название_пакета\n```\n\nВывести список файлов установленного пакета:\n\n```\n$ pacman -Ql название_пакета\n```\n\nВывести список файлов пакета в репозитории:\n\n```\n$ pacman -Fl название_пакета\n```\n\nПроверить наличие файлов установленного пакета:\n\n```\n$ pacman -Qk название_пакета\n```\n\nС двумя флагами -k проверка будет более тщательной.\n\nУзнать, какому пакету принадлежит файл:\n\n```\n$ pacman -Qo /путь/к/файлу/имя_файла\n```\n\nУзнать, какому пакету в репозиториях принадлежит файл:\n\n```\n$ pacman -F /путь/к/файлу/имя_файла\n```\n\nВывести список пакетов, которые больше не требуются как зависимости (\"пакеты-сироты\"):\n\n```\n$ pacman -Qdt\n```\n\nВывести список пакетов, установленных явно (explicitly) и не являющихся зависимостями для других пакетов:\n\n```\n$ pacman -Qet\n```\n\nДругие полезные команды можно найти в статье pacman/Советы и приёмы.\n\n"
    },
    {
      "title": "Pactree",
      "level": 4,
      "content": "Дерево зависимостей пакета можно узнать командой\n\n```\n$ pactree название_пакета\n```\n\nЧтобы увидеть \"обратное\" дерево зависимостей, т.е. список пакетов, которые сами зависят от указанного, используйте флаг pactree -r или утилиту whoneeds из пакета pkgtoolsAUR.\n\n"
    },
    {
      "title": "Структура базы данных",
      "level": 4,
      "content": "Базы данных pacman обычно размещаются в каталоге /var/lib/pacman/sync. Для каждого подключённого в файле /etc/pacman.conf репозитория в этом каталоге находится соответствующий файл базы данных. Сам файл представляет собой gzip-сжатый tar-архив (с расширением .db), содержащий по одному каталогу для каждого пакета. Например, для пакета which содержимое каталога имеет вид:\n\n```\n$ tree which-2.21-5\n```\n\n```\nwhich-2.21-5\n|-- desc\n```\n\nВ файле desc хранятся мета-данные пакета — описание, список зависимостей, размер, хэш-сумма MD5 и т.д.\n\n"
    },
    {
      "title": "Очистка кэша пакетов",
      "level": 3,
      "content": "Pacman сохраняет скачиваемые пакеты в каталог /var/cache/pacman/pkg/. Старые версии пакетов и пакеты, удалённые из системы, не удаляются из этого каталога автоматически. Такой подход обладает следующими преимуществами:\n\n1. Можно выполнить откат пакета без необходимости искать где-то (например, в архиве Arch Linux) его старую версию;\n1. Удалённый по ошибке пакет можно заново установить из кэша, не скачивая из репозитория.\n\nТем не менее, это означает, что время от времени необходимо чистить этот каталог самостоятельно, чтобы предотвратить его разрастание.\n\nСкрипт paccache(8) из пакета pacman-contrib удаляет из кэша старые версии пакетов, как установленных в системе, так и уже удалённых, по умолчанию оставляя только три самые свежие:\n\n```\n# paccache -r\n```\n\nВключите и запустите paccache.timer, чтобы очистка кэша выполнялась каждую неделю автоматически.\n\nПри необходимости можно задать количество последних версий, которые нужно оставить. Команда для удаления всех версий, кроме последней:\n\n```\n# paccache -rk1\n```\n\nФлаг -u/--uninstalled позволяет ограничить действие paccache только версиями пакетов, которых в системе уже нет. Например, команда удаления всех кэшированных версий удалённых пакетов:\n\n```\n# paccache -ruk0\n```\n\nСписок возможных опций выводится командой paccache -h.\n\nВ pacman есть встроеный функционал очистки кэша и удаления баз данных репозиториев, которые были заблокированы в файле /etc/pacman.conf. Однако pacman гораздо менее гибок по сравнению с paccache и не даёт возможности сохранить некоторое количество последних версий, просто очищая каталог кэша.\n\nЧтобы удалить все кэшированные версии удалённых пакетов и неиспользуемые базы данных, выполните:\n\n```\n# pacman -Sc\n```\n\nЧтобы удалить вообще все файлы из кэша, укажите флаг очистки дважды:\n\n```\n# pacman -Scc\n```\n\npkgcachecleanAUR и pacleanerAUR — две альтернативные программы для очистки кэша.\n\n"
    },
    {
      "title": "Дополнительные команды",
      "level": 3,
      "content": "Скачать пакет без установки:\n\n```\n# pacman -Sw название_пакета\n```\n\nУстановить пакет не из удалённого репозитория, а хранящийся локально (например, предварительно скачанный из AUR):\n\n```\n# pacman -U /путь/к/пакету/имя_пакета-версия.pkg.tar.zst\n```\n\nСохранить копию локально устанавливаемого пакета в кэше pacman:\n\n```\n# pacman -U file:///путь/к/пакету/имя_пакета-версия.pkg.tar.zst\n```\n\nСкачать и установить пакет из удаленного источника (но и не из репозиториев, перечисленных в конфигурационном файле pacman):\n\n```\n# pacman -U http://www.example.com/repo/example.pkg.tar.zst\n```\n\nФлаг -p можно использовать для подавления стандартных действий -S, -U и -R.\n\nPacman всегда выводит список пакетов, которые будут установлены или удалены, и спрашивает разрешение пользователя перед выполнением действия.\n\n"
    },
    {
      "title": "Причина установки",
      "level": 3,
      "content": "Для pacman с точки зрения причины установки пакет относится к одной из двух категорий:\n\n- установлен явно (explicitly-installed): установлен пользователем командами pacman -S или pacman -U;\n- зависимость (dependency): установлен автоматически в процессе установки другого пакета, поскольку являлся его зависимостью.\n\nПри явной установке пакета можно принудительно изменить причину установки на зависимость:\n\n```\n# pacman -S --asdeps название_пакета\n```\n\nЭта команда обычно используется в случае, когда явно установленные пакеты предлагают установить дополнительные пакеты для поддержки дополнительных функций, которые пользователь может выбирать по своему усмотрению.\n\nПри переустановке пакета текущая причина установки не меняется.\n\nСписок явно установленных пакетов выводится командой pacman -Qe, а пакетов-зависимостей — командой pacman -Qd.\n\nЧтобы изменить причину установки уже установленного пакета, выполните:\n\n```\n# pacman -D --asdeps название_пакета\n```\n\nДля противоположной операции используйте флаг --asexplicit.\n\n"
    },
    {
      "title": "Поиск пакета по названию файла",
      "level": 3,
      "content": "Синхронизировать базу данных файлов:\n\n```\n# pacman -Fy\n```\n\nНайти пакет, содержащий определённый файл (например, файл pacman):\n\n```\n$ pacman -F pacman\n```\n\n```\ncore/pacman 5.2.1-1 (base base-devel) [установлен]\n    usr/bin/pacman\n    usr/share/bash-completion/completions/pacman\nextra/xscreensaver 5.43-1\n    usr/lib/xscreensaver/pacman\n```\n\nУтилита pkgfile также осуществляет поиск пакетов по файлам, опираясь на свою базу данных; она обладает расширенной функциональностью по сравнению с pacman -F.\n\n"
    },
    {
      "title": "Процесс установки/обновления/удаления пакета",
      "level": 3,
      "content": "Каждая операция (\"транзакция\") pacman состоит из пяти последовательных шагов, включая пред- и пост-транзакционные хуки:\n\n1. Если база данных не заблокирована, то транзакция инициализируется.\n1. Определяются пакеты, над которыми будут выполняться действия.\n1. В зависимости от заданных флагов выполняется подготовка транзакции, проверяется целостность базы данных, а также пакеты и их зависимости.\n1. Транзакция выполняется: Загружаются пакеты (_alpm_sync_load), если это необходимо. Выполняются PreTransaction-хуки, которые возможно применить. Удаляются пакеты, которые должны быть заменены, конфликтуют или явно указаны для удаления. Добавляются пакеты. Если пакет содержит установочный сценарий, выполняется функция pre_install (pre_upgrade/pre_remove для обновляемых и удаляемых пакетов соответственно). Удаляются существующие файлы пакета (при обновлении или удалении пакета). Сохраняются только файлы настроек (смотрите /Pacnew and Pacsave). Распаковывается архив с новыми файлами пакета; файлы размещаются в нужные места файловой системы (при установке или обновлении пакета). Изменённые пользователем файлы настроек, которые нельзя просто перезаписать, остаются без изменений; новые файлы настроек сохраняются с суффиксом .pacnew (смотрите предыдущий шаг). Если пакет содержит установочный сценарий, выполняется функция post_install (post_upgrade/post_remove для обновляемых и удаляемых пакетов соответственно). Выполняются PostTransaction-хуки, которые возможно применить.\n1. Завершение транзакции и освобождение ресурсов (например, разблокирование базы данных).\n\n1. Загружаются пакеты (_alpm_sync_load), если это необходимо.\n1. Выполняются PreTransaction-хуки, которые возможно применить.\n1. Удаляются пакеты, которые должны быть заменены, конфликтуют или явно указаны для удаления.\n1. Добавляются пакеты. Если пакет содержит установочный сценарий, выполняется функция pre_install (pre_upgrade/pre_remove для обновляемых и удаляемых пакетов соответственно). Удаляются существующие файлы пакета (при обновлении или удалении пакета). Сохраняются только файлы настроек (смотрите /Pacnew and Pacsave). Распаковывается архив с новыми файлами пакета; файлы размещаются в нужные места файловой системы (при установке или обновлении пакета). Изменённые пользователем файлы настроек, которые нельзя просто перезаписать, остаются без изменений; новые файлы настроек сохраняются с суффиксом .pacnew (смотрите предыдущий шаг). Если пакет содержит установочный сценарий, выполняется функция post_install (post_upgrade/post_remove для обновляемых и удаляемых пакетов соответственно).\n1. Выполняются PostTransaction-хуки, которые возможно применить.\n\n1. Если пакет содержит установочный сценарий, выполняется функция pre_install (pre_upgrade/pre_remove для обновляемых и удаляемых пакетов соответственно).\n1. Удаляются существующие файлы пакета (при обновлении или удалении пакета). Сохраняются только файлы настроек (смотрите /Pacnew and Pacsave).\n1. Распаковывается архив с новыми файлами пакета; файлы размещаются в нужные места файловой системы (при установке или обновлении пакета). Изменённые пользователем файлы настроек, которые нельзя просто перезаписать, остаются без изменений; новые файлы настроек сохраняются с суффиксом .pacnew (смотрите предыдущий шаг).\n1. Если пакет содержит установочный сценарий, выполняется функция post_install (post_upgrade/post_remove для обновляемых и удаляемых пакетов соответственно).\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "Настройки pacman находятся в файле /etc/pacman.conf. Подробную информацию о файле настроек можно найти в руководстве pacman.conf(5).\n\n"
    },
    {
      "title": "Глобальные параметры",
      "level": 3,
      "content": "Глобальные настройки pacman указываются в разделе [options]. Помимо руководства pacman.conf(5) некоторая информация о настройках из этого раздела содержится в комментариях самого файла pacman.conf.\n\n"
    },
    {
      "title": "Сравнение версий пакетов перед обновлением",
      "level": 4,
      "content": "Чтобы увидеть сравнение старых и новых версий доступных для обновления пакетов, раскомментируйте строку VerbosePkgLists в файле pacman.conf. Теперь команда pacman -Syu будет выводить примерно следующее:\n\n```\nПакет (6)               Старая версия  Новая версия  Изменение размера  Размер загрузки\n\nextra/libmariadbclient  10.1.9-4       10.1.10-1              0,03 MiB         4,35 MiB\nextra/libpng            1.6.19-1       1.6.20-1               0,00 MiB         0,23 MiB\nextra/mariadb           10.1.9-4       10.1.10-1              0,26 MiB        13,80 MiB\n```\n\n"
    },
    {
      "title": "Параллельная загрузка",
      "level": 4,
      "content": "В pacman 6.0 была добавлена функциональность параллельной загрузки пакетов. Чтобы включить эту возможность, необходимо присвоить опции ParallelDownloads в файле /etc/pacman.conf любое положительное значение (например, 5). В противном случае, если опция не задана, то пакеты будут загружаться последовательно.\n\n"
    },
    {
      "title": "Запрет на обновление отдельных пакетов",
      "level": 4,
      "content": "Чтобы пропустить пакет во время обновления системы добавьте его название в параметр IgnorePkg в разделе [options]:\n\n```\nIgnorePkg=linux\n```\n\nЕсли необходимо пропустить обновление для нескольких пакетов, укажите названия, разделив их пробелами, или используйте несколько строк IgnorePkg. Также можно использовать шаблоны поиска. Если нужно пропустить обновление пакета всего один раз, то лучше использовать опцию командной строки --ignore — здесь в качестве разделителя для названий пакетов используется запятая.\n\nПри необходимости обновить пакет из списка исключений всё же можно, командой pacman -S название_пакета: pacman при этом выведет напоминание, что пакет указан в IgnorePkg.\n\n"
    },
    {
      "title": "Запрет на обновление группы пакетов",
      "level": 4,
      "content": "Аналогично запрету на обновление отдельного пакета, можно запретить обновление сразу для целой группы, например:\n\n```\nIgnoreGroup=gnome\n```\n\n"
    },
    {
      "title": "Запрет на обновление файлов",
      "level": 4,
      "content": "Файлы, указанные в параметре NoUpgrade, не будут изменяться в процессе установки/обновления; новые версии этих файлов будут сохраняться с расширением .pacnew.\n\n```\nNoUpgrade=путь/к/файлу\n```\n\nУказать несколько файлов можно так:\n\n```\nNoUpgrade=путь/к/файлу1 путь/к/файлу2\n```\n\n"
    },
    {
      "title": "Запрет на установку файлов",
      "level": 4,
      "content": "Чтобы запретить установку файлов в определённые каталоги, перечислите их в параметре NoExtract. Например, запрет установки юнитов systemd:\n\n```\nNoExtract=usr/lib/systemd/system/*\n```\n\n"
    },
    {
      "title": "Работа с несколькими файлами настроек",
      "level": 4,
      "content": "Если имеется несколько конфигурационных файлов (например, основная конфигурация и дополнительная с подключённым репозиторием testing), то работу с ними можно упростить, если вынести общие пункты настроек в отдельный файл и подключать его с помощью опции Include:\n\n```\nInclude = /путь/к/файлу/общих/настроек\n```\n\nВ этом примере общие настройки вынесены в файл /путь/к/файлу/общих/настроек. Приведённую выше строку нужно добавить в оба файла настроек, основной и дополнительный.\n\n"
    },
    {
      "title": "Хуки",
      "level": 4,
      "content": "Системные пре- и пост-транзакционные хуки хранятся в каталоге /usr/share/libalpm/hooks; pacman может выполнять хуки как из системного каталога, так и из каталогов, подключённых опцией — HookDir в файле pacman.conf (каталог по умолчанию — /etc/pacman.d/hooks). Название файла хука должно заканчиваться на .hook. Хуки pacman неинтерактивны.\n\nВ частности, хуки pacman используются в связке с systemd-sysusers и systemd-tmpfiles для автоматического создания пользователей и файлов в процессе установки пакетов. Например, пакет tomcat8 требует наличия пользователя tomcat8 и определённых каталогов, ему принадлежащих. Хуки systemd-sysusers.hook и systemd-tmpfiles.hook вызывают команды systemd-sysusers и systemd-tmpfiles соответственно, когда pacman видит в пакете указания на пользователей и временные файлы.\n\nХуки alpm подробно описаны в руководстве alpm-hooks(5).\n\n"
    },
    {
      "title": "Репозитории и зеркала",
      "level": 3,
      "content": "Помимо общего раздела [options] в файле pacman.conf также содержатся отдельные разделы для каждого из репозиториев. Репозиторий — набор пакетов, который физически находится на одном или нескольких серверах; эти сервера называются зеркалами репозитория.\n\nРепозитории делятся на официальные и неофициальные. Порядок репозиториев в файле настроек имеет значение: если в разных репозиториях содержатся пакеты с одинаковым названием, то вне зависимости от их версий предпочтение отдаётся тому пакету, репозиторий которого ближе к началу файла. Чтобы подключённый репозиторий можно было использовать, сначала необходимо выполнить полное обновление системы.\n\nРазделы репозиториев в файле pacman.conf содержат информацию о зеркалах. Список зеркал хранится в отдельном файле и подключается параметром Include. Например, зеркала официальных репозиториев подключаются из файла /etc/pacman.d/mirrorlist. Настройка зеркал описана в статье Mirrors.\n\n"
    },
    {
      "title": "Каталог для кэша пакетов",
      "level": 4,
      "content": "Pacman хранит загруженные файлы пакетов в кэше — в каталоге, указанном в опции CacheDir в разделе [options] файла pacman.conf (по умолчанию /var/cache/pacman/pkg/).\n\nРазмер этого каталога может расти со временем, даже если в нём хранятся только самые свежие версии установленных пакетов.\n\nЕсли вы хотите переместить этот каталог в более удобное место, выполните одно из следующих действий:\n\n- В опцию CacheDir пропишите путь к новому каталогу. Не забудьте добавить косую черту в конце. Это рекомендуемое решение.\n- Примонтируйте отдельный раздел в /var/cache/pacman/pkg/\n- Сделайте bind mount в /var/cache/pacman/pkg/\n\nNote: **Не создавайте символическую ссылку** \n\n"
    },
    {
      "title": "Безопасность пакетов",
      "level": 4,
      "content": "Pacman использует цифровые подписи в качестве дополнительного механизма обеспечения безопасности пакетов. Настройки проверки подписей задаются параметром SigLevel. По умолчанию в разделе [options] задано глобальное значение SigLevel = Required DatabaseOptional, что означает проверку подписей всех пакетов без исключения. Можно задать особые правила проверки подписей для отдельных репозиториев, указав параметр SigLevel в соответствующих разделах. Подробнее смотрите в статье pacman/Подпись пакета.\n\n"
    },
    {
      "title": "Failed to commit transaction (conflicting files)",
      "level": 3,
      "content": "Следующее сообщение об ошибке [1]:\n\n```\nошибка: не удалось завершить транзакцию (конфликтующие файлы)\nпакет: '/путь/к/файлу' существует в файловой системе\nОбнаружены ошибки, пакеты не обновлены.\n```\n\nозначает, что при выполнении операции были обнаружены конфликтующие файлы. Pacman не будет их перезаписывать автоматически. Это не ошибка, так сделано специально.\n\nПроблема решается тривиально. Сначала проверьте, не принадлежит ли файл другому пакету (pacman -Qo /путь/к/файлу). Если принадлежит, создайте отчет об ошибке. Если проблемный файл не нужен другим пакетам, переименуйте его и перезапустите команду обновления. Если в дальнейшем проблем не возникнет, то старый файл можно удалить.\n\nЕсли программа была установлена вручную без pacman — например, при помощи команды make install — необходимо удалить программу и все её файлы, а затем выполнить установку при помощи pacman. Смотрите также pacman/Советы и приёмы#Поиск файлов без пакета-владельца.\n\nИнформация о каждом установленном файле хранится в файле с метаданными пакета /var/lib/pacman/local/пакет-версия/files. При повреждении этого файла (он может быть пустым или отсутствовать) во время обновления пакета будет получена ошибка file exists in filesystem (\"файл существует в файловой системе\"). Обычно такие ошибки возникают во время установки или обновления всего лишь одного пакета. Вместо ручного переименования или удаления конфликтующих файлов, принадлежащих данному пакету, лучше выполнить команду pacman -S --overwrite шаблон пакет, чтобы pacman принудительно перезаписал файлы, название которых совпадает с шаблоном.\n\n"
    },
    {
      "title": "Failed to commit transaction (invalid or corrupted package)",
      "level": 3,
      "content": "Удалите все файлы .part (частично скачанные пакеты) из кэша pacman /var/cache/pacman/pkg/. Причиной ошибки чаще всего является пользовательская команда в параметре XferCommand файла pacman.conf.\n\n```\n# find /var/cache/pacman/pkg/ -iname \"*.part\" -delete\n```\n\n"
    },
    {
      "title": "Failed to init transaction (unable to lock database)",
      "level": 3,
      "content": "Когда pacman собирается внести изменения в базу данных пакетов, например, при установке пакета, он создаёт файл блокировки /var/lib/pacman/db.lck. Это предотвращает запуск другого экземпляра pacman и таким образом спасает от возможного повреждения базы.\n\nЕсли работа pacman была прервана во время внесения изменений в базу, этот файл блокировки может остаться неудалённым, что может привести к появлению такой ошибки:\n\n```\nошибка: не удалось начать транзакцию (не удалось заблокировать базу данных)\nошибка: не удалось заблокировать базу: Файл существует\n```\n\nЕсли вы уверены, что на вашей машине не запущено других экземпляров pacman, удалите этот файл блокировки:\n\n```\n# rm /var/lib/pacman/db.lck\n```\n\n"
    },
    {
      "title": "Не удаётся найти пакет для установки",
      "level": 3,
      "content": "Эта ошибка проявляется в сообщениях Not found in sync db, не найдена цель или не удалось получить файл.\n\nУдостоверьтесь, что пакет, который вы пытаетесь установить, действительно существует. Если это так, возможно, список хранящихся в репозиториях пакетов устарел. Выполните pacman -Syu, чтобы получить новый список и обновить систему. Также убедитесь, что выбранные зеркала в рабочем состоянии, а репозитории настроены правильно.\n\nТакже есть вероятность того, что в вашей системе не включен репозиторий, содержащий нужный пакет — например, пакет находится в репозитории multilib, но multilib не включен в файле pacman.conf.\n\nСмотрите также FAQ#Почему в репозиториях есть только одна версия каждой библиотеки?\n\n"
    },
    {
      "title": "pacman падает при обновлении",
      "level": 3,
      "content": "Если при удалении пакетов pacman завершает свою работу с ошибкой \"database write\" (\"запись в базу данных\"), и после этого все попытки переустановки или обновления пакетов завершаются неудачей, сделайте следующее:\n\n1. Загрузитесь, используя Arch Live USB. Желательно, чтобы версия pacman в образе была не старше той, что установлена в системе.\n1. Смонтируйте корневую файловую систему, например, командой mount /dev/sdaX /mnt от root, и убедитесь, что в точке монтирования достаточно свободного места (команда df -h).\n1. Смонтируйте файловые системы proc, sys и dev: mount -t proc proc /mnt/proc; mount --rbind /sys /mnt/sys; mount --rbind /dev /mnt/dev\n1. Если в системе используются стандартное расположение баз данных и каталогов, то можно синхронизировать базу данных pacman и обновить систему командой pacman --sysroot /mnt -Syu с правами root. Кроме того, если не удаётся обновить систему, изучите рекомендации из pacman/Советы и приёмы#Переустановка всех пакетов.\n1. После обновления стоит убедиться, что в системе не осталось необновлённых нерабочих пакетов: find /mnt/usr/lib -size 0.\n1. Если такие пакеты всё же есть, их нужно переустановить: pacman --sysroot /mnt -S пакет.\n\n- Кроме того, если не удаётся обновить систему, изучите рекомендации из pacman/Советы и приёмы#Переустановка всех пакетов.\n\n"
    },
    {
      "title": "pacman: команда не найдена",
      "level": 4,
      "content": "Если /var/cache/pacman/pkg является символической ссылкой, pacman в процессе самообновления попытается вместо неё создать каталог и таким образом удалит эту символическую ссылку. Из-за этого обновление завершится неудачей. В результате /usr/bin/pacman и другие файлы из пакета pacman исчезнут из системы.\n\nНикогда не делайте /var/cache/pacman/pkg символической ссылкой, так как этот путь находится под контролем pacman. Вместо этого используйте опцию CacheDir или bind mount; подробнее смотрите #Каталог для кэша пакетов.\n\nЕсли вы всё-таки столкнулись с этой проблемой и сломали свою систему, вы можете вручную извлечь содержимое /usr из пакета, чтобы восстановить pacman, а затем корректно его переустановить; смотрите FS#73306 и тему на форуме для подробностей.\n\n"
    },
    {
      "title": "С помощью pacman-static",
      "level": 4,
      "content": "pacman-staticAUR — статически скомпонованная версия pacman, которая может работать даже при отключении/повреждении системных библиотек. Это может помочь, если произошло частичное обновление и pacman больше не работает.\n\nПрикреплённый комментарий в PKGBUILD содержит ссылку на закачку двоичного файла, с помощью которого можно переустановить pacman или обновить систему целиком в случае частичного обновления.\n\n"
    },
    {
      "title": "С помощью внешнего pacman",
      "level": 4,
      "content": "Если не работает даже pacman-static, то можно попробовать восстановить систему с помощью внешнего pacman. Простейший способ — воспользоваться archiso и указать точку монтирования в опции --sysroot или --root. Подробнее о том, как смонтировать файловую систему для --sysroot, смотрите chroot#Используя chroot.\n\n"
    },
    {
      "title": "Извлечение вручную",
      "level": 4,
      "content": "Даже если pacman не подаёт признаков жизни, всё ещё можно починить его вручную, загрузив последние версии пакетов и распаковав файлы в нужные места. Последовательность действий:\n\n1. Узнайте зависимости пакета pacman.\n1. Скачайте пакеты с любого рабочего зеркала.\n1. Извлеките каждый пакет в корневой каталог.\n1. Переустановите эти пакеты командами pacman -S --overwrite название_пакета, чтобы обновить базу данных.\n1. Выполните полное обновление системы.\n\nЕсли у вас имеется доступ к другой работоспособной системе с Arch Linux, полный список зависимостей можно узнать командой\n\n```\n$ pacman -Q $(pactree -u pacman)\n```\n\nВозможно, вам необходимо обновить только несколько пакетов, в зависимости от серьёзности проблемы. Пример команды распаковки архива пакета:\n\n```\n# tar -xvpwf пакет.tar.zst -C / --exclude .PKGINFO --exclude .INSTALL --exclude .MTREE --exclude .BUILDINFO\n```\n\nОбратите внимание на флаг -w, который включает интерактивный режим. Запускать распаковку неинтерактивно рискованно, потому что можно перезаписать важный файл. Также не забудьте, что пакеты нужно распаковывать в правильном порядке (сначала зависимости). На форуме рассмотрен пример процесса восстановления работоспособности pacman c несколькими неработающими пакетами-зависимостями.\n\n"
    },
    {
      "title": "Ошибка \"Unable to find root device\" после перезагрузки",
      "level": 3,
      "content": "Вероятно, при обновлении ядра был повреждён образ initramfs (например, при использовании pacman с опцией --overwrite). Для восстановления работоспособности есть два варианта, и первый из них — использовать fallback-образ.\n\nКогда система запустится, выполните команду пересборки образа initramfs либо из консоли, либо из терминала (для стандартного ядра linux):\n\n```\n# mkinitcpio -p linux\n```\n\nЕсли этот способ не сработает, загрузитесь с Live-USB, смонтируйте корневой и загрузочный разделы, после чего сделайте chroot командой arch-chroot:\n\n```\n# arch-chroot /mnt\n# pacman -Syu mkinitcpio systemd linux\n```\n\n- Если у вас нет текущего релиза, или есть только какой-либо другой \"live\"-дистрибутив Linux, вы можете выполнить chroot, используя старый способ. Очевидно, при этом вам придется напечатать больше, чем просто arch-chroot для запуска соответствующего скрипта.\n- Если pacman выдаёт ошибку Could not resolve host, проверьте ваше интернет-соединение.\n- Если вы не можете войти в окружение arch-chroot или chroot, но нуждаетесь в переустановке пакетов, можете использовать команду pacman --sysroot /mnt -Syu foo bar, чтобы указать pacman ваш корневой раздел.\n\nПереустановка ядра (пакета linux) автоматически пересоздаст образ initramfs при помощи mkinitcpio -p linux. Нет необходимости дополнительно вводить эту команду.\n\nПосле всего этого рекомендуется выполнить exit, umount /mnt/{boot,} и reboot.\n\n"
    },
    {
      "title": "Warning: current locale is invalid; using default \"C\" locale",
      "level": 3,
      "content": "Как сказано в сообщении ошибки, локаль системы настроена неправильно (смотрите статью Локали).\n\n"
    },
    {
      "title": "pacman игнорирует настройки прокси",
      "level": 3,
      "content": "Удостоверьтесь, что соответствующие переменные окружения ($http_proxy, $ftp_proxy и т.д.) заданы верно. Если вы используете pacman вместе с sudo, необходимо настроить sudo на передачу переменных окружения в pacman. Также убедитесь, что настройки dirmngr в файле /etc/pacman.d/gnupg/dirmngr.conf содержат параметр honor-http-proxy, отвечающий за использование прокси при обновлении ключей.\n\n"
    },
    {
      "title": "Как переустановить все пакеты, сохранив информацию о том, какие из них установлены явно, а какие — в качестве зависимостей?",
      "level": 3,
      "content": "Чтобы переустановить все пакеты из официальных репозиториев, выполните pacman -S $(pacman -Qnq) (опция -S сохраняет причину установки по умолчанию).\n\nПосле этого необходимо переустановить все пакеты из неизвестных источников, список которых можно получить командой pacman -Qmq.\n\n"
    },
    {
      "title": "Cannot open shared object file",
      "level": 3,
      "content": "Скорее всего, это означает, что при выполнении предыдущей операции pacman удалил или повредил разделяемые библиотеки, необходимые для него самого.\n\nЧтобы выйти из этой ситуации, нужно вручную распаковать необходимые библиотеки в вашу файловую систему. Сперва определите, в каком пакете содержится требуемая библиотека, а затем найдите этот пакет в кэше pacman (/var/cache/pacman/pkg/). Распакуйте разделяемую библиотеку в файловую систему. Это позволит вам запустить pacman.\n\nТеперь необходимо переустановить испорченный пакет. При этом обязательно используйте ключ --overwrite, поскольку вы лишь распаковали системные файлы, но pacman об этом не знает. Pacman корректно заменит ваш файл разделяемой библиотеки на тот, что имеется в пакете.\n\nВот и все. Обновите оставшуюся часть системы.\n\n"
    },
    {
      "title": "Проблемы с загрузкой пакетов",
      "level": 3,
      "content": "Были сообщения о некоторых сетевых проблемах, которые приводят к невозможности обновления/синхронизации: [2], [3]. При обычной установке Arch Linux эти проблемы не появляются, так как стандартный загрузчик файлов при этом заменяется другим (смотрите pacman/Советы и приёмы#Производительность). При установке Arch Linux в VirtualBox эта проблема также появляется, когда вы используете опцию виртуальной машины Host interface вместо NAT.\n\n"
    },
    {
      "title": "Failed retrieving file 'core.db' from mirror",
      "level": 3,
      "content": "Если зеркала настроены правильно, но вы получаете сообщение об ошибке не удалось получить файл 'core.db', попробуйте выбрать другой сервер имён.\n\n"
    },
    {
      "title": "'local-package.pkg.tar': permission denied",
      "level": 3,
      "content": "Если вы пытались установить пакет в смонтированной файловой системе sshfs с помощью команды pacman -U и получили такую ошибку, переместите пакет в локальный каталог и попробуйте ещё раз.\n\n"
    },
    {
      "title": "error: could not determine cachedir mount point /var/cache/pacman/pkg",
      "level": 3,
      "content": "Во время выполнения в chroot-окружении, например, команды pacman -Syu, может произойти следующая ошибка:\n\n```\nerror: could not determine cachedir mount point /var/cache/pacman/pkg\nerror: failed to commit transaction (not enough free disk space)\n```\n\nТакое часто случается, если каталог для chroot не являлся точкой монтирования на момент входа в chroot. Решение проблемы приведено в примечании к Установка Arch из другого дистрибутива#Скачивание базовых утилит, а объяснения и пример bind-монтирования с превращением chroot-каталога в точку монтирования можно найти в arch-chroot(8).\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Страница проекта pacman\n- libalpm(3)\n- pacman(8)\n- pacman.conf(5)\n- repo-add(8)\n\n"
    }
  ]
}
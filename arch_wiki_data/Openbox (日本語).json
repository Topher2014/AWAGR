{
  "title": "Openbox (日本語)",
  "url": "https://wiki.archlinux.org/title/Openbox_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- デスクトップ環境\n- ディスプレイマネージャ\n- ファイルマネージャの機能\n- ウィンドウマネージャ\n- Oblogout\n- Xdg-menu\n\nOpenbox は軽量で設定が自由なスタック型ウィンドウマネージャです。デスクトップ環境とは独立して動作させることも、KDE や Xfce など他のデスクトップ環境に入っているウィンドウマネージャの代替として使うことも可能です。LXDE デスクトップ環境は Openbox を初めから組み込んでいます。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 Openbox の起動 2.1 スタンドアロン 2.2 その他のデスクトップ環境\n- 3 設定 3.1 rc.xml 3.2 menu.xml 3.3 autostart 3.4 environment 3.5 Themes 3.5.1 編集または作成 3.6 GUI 設定パッケージ\n- 4 Openbox の再設定\n- 5 キーボードショートカット 5.1 修飾キー 5.2 マルチメディアキー 5.2.1 ボリュームコントロール 5.3 ナビゲーションキー\n- 6 メニュー 6.1 Static 6.1.1 menumaker 6.1.2 obmenu 6.1.3 xdg-menu 6.1.4 ログアウトメニューのオプション 6.2 Pipes 6.2.1 サンプル 6.3 Generators 6.3.1 obmenu-generator 6.3.2 openbox-menu 6.4 メニューアイコン 6.5 デスクトップメニューをパネルメニューとして使う 6.6 XDG 準拠メニュー 6.6.1 サンプル\n- 7 ヒントとテクニック 7.1 カーソルとアイコンのテーマ 7.2 デスクトップのアイコンと壁紙 7.3 コンポジタの効果 7.4 oblogout 7.5 ホットキーを使用して複雑なコマンドを起動する 7.6 アプリケーションランチャー 7.7 マウスを使用してデスクトップを切り替える 7.8 規定のアプリケーション/ファイルの関連付けの設定 7.9 ウィンドウ透過 7.10 obxprop を使って素早く設定を行う 7.11 アプリケーションの Xprop の値 7.12 キーボードレイアウトの切り替え 7.13 仮想デスクトップのグリッドレイアウトの設定 7.14 ホットコーナーの有効化 7.15 ウィンドウのスナップ 7.16 ディスプレイマネージャのスムーズな遷移 7.17 ウィンドウのデコレーション\n- 8 トラブルシューティング 8.1 Firefox 8.2 テーマが見つからない 8.3 デスクトップの連続切り替えを停止する 8.4 ウィンドウがアクティブウィンドウの後ろにロードされる\n- 9 参照\n\n- 2.1 スタンドアロン\n- 2.2 その他のデスクトップ環境\n\n- 3.1 rc.xml\n- 3.2 menu.xml\n- 3.3 autostart\n- 3.4 environment\n- 3.5 Themes 3.5.1 編集または作成\n- 3.6 GUI 設定パッケージ\n\n- 3.5.1 編集または作成\n\n- 5.1 修飾キー\n- 5.2 マルチメディアキー 5.2.1 ボリュームコントロール\n- 5.3 ナビゲーションキー\n\n- 5.2.1 ボリュームコントロール\n\n- 6.1 Static 6.1.1 menumaker 6.1.2 obmenu 6.1.3 xdg-menu 6.1.4 ログアウトメニューのオプション\n- 6.2 Pipes 6.2.1 サンプル\n- 6.3 Generators 6.3.1 obmenu-generator 6.3.2 openbox-menu\n- 6.4 メニューアイコン\n- 6.5 デスクトップメニューをパネルメニューとして使う\n- 6.6 XDG 準拠メニュー 6.6.1 サンプル\n\n- 6.1.1 menumaker\n- 6.1.2 obmenu\n- 6.1.3 xdg-menu\n- 6.1.4 ログアウトメニューのオプション\n\n- 6.2.1 サンプル\n\n- 6.3.1 obmenu-generator\n- 6.3.2 openbox-menu\n\n- 6.6.1 サンプル\n\n- 7.1 カーソルとアイコンのテーマ\n- 7.2 デスクトップのアイコンと壁紙\n- 7.3 コンポジタの効果\n- 7.4 oblogout\n- 7.5 ホットキーを使用して複雑なコマンドを起動する\n- 7.6 アプリケーションランチャー\n- 7.7 マウスを使用してデスクトップを切り替える\n- 7.8 規定のアプリケーション/ファイルの関連付けの設定\n- 7.9 ウィンドウ透過\n- 7.10 obxprop を使って素早く設定を行う\n- 7.11 アプリケーションの Xprop の値\n- 7.12 キーボードレイアウトの切り替え\n- 7.13 仮想デスクトップのグリッドレイアウトの設定\n- 7.14 ホットコーナーの有効化\n- 7.15 ウィンドウのスナップ\n- 7.16 ディスプレイマネージャのスムーズな遷移\n- 7.17 ウィンドウのデコレーション\n\n- 8.1 Firefox\n- 8.2 テーマが見つからない\n- 8.3 デスクトップの連続切り替えを停止する\n- 8.4 ウィンドウがアクティブウィンドウの後ろにロードされる\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "openbox パッケージをインストールしてください。\n\n"
    },
    {
      "title": "スタンドアロン",
      "level": 3,
      "content": "xinit を使用して openbox または openbox-session を実行します。openbox-session のみが 自動起動 を提供することに注意してください。\n\n"
    },
    {
      "title": "その他のデスクトップ環境",
      "level": 3,
      "content": "- デスクトップ環境 のネイティブウィンドウマネージャーを Openbox に置き換える場合、Openbox は合成効果 (透明度など) を提供しないことに注意してください。#コンポジタの効果 を参照してください。\n- Openbox は GNOME アプリケーションで動作します (ただし、GTK#クライアントサイドデコレーション を参照してください) [1]\n\nデスクトップ環境#別のウィンドウマネージャーを使用するを参照してください。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "4 つの主要なファイルが openbox 設定 の基礎を形成し、それぞれが独自の役割を果たします。それらは、rc.xml、menu.xml、autostart、および environment です。これらのファイルについては以下で詳しく説明しますが、Openbox の構成を開始するには、まずそれらに基づいて ローカル Openbox プロファイル (つまり、特定のユーザーアカウント用) を作成する必要があります。 これは、グローバル /etc/xdg/openbox プロファイル (すべてのユーザーに適用可能) からテンプレートとしてコピーすることで実行できます。\n\n```\n$ mkdir -p ~/.config/openbox\n$ cp -a /etc/xdg/openbox ~/.config/\n```\n\n"
    },
    {
      "title": "rc.xml",
      "level": 3,
      "content": "~/.config/openbox/rc.xml はメインの設定ファイルです。以下の設定を定義します:\n\n- キーボードショートカット (例: アプリケーションの起動やボリュームのコントロール)\n- テーマ\n- デスクトップと仮想デスクトップの設定\n- アプリケーションウィンドウの設定\n\nこのファイルにはあらかじめ設定がされており、個人的な好みで修正するほかは既存の内容に変更を加える必要はありません。\n\n"
    },
    {
      "title": "menu.xml",
      "level": 3,
      "content": "~/.config/openbox/menu.xml はデスクトップを右クリックしたときに表示されるメニューの中身を定義するファイルです。デフォルトのメニューは静的なメニュー (新しいアプリケーションをインストールしてもメニューが更新されない) ですが、自動的に更新されるダイナミックメニューを使うこともできます。\n\nメニューについては下のメニューセクションで詳しい説明をしています。\n\n"
    },
    {
      "title": "autostart",
      "level": 3,
      "content": "~/.config/openbox/autostart には Openbox セッションが開始したときにどのアプリケーションを起動するか記述します。\n\nコマンドはアンパサンド (&) を付けて終了する必要があります。コマンドにアンパサンドが付いていないと、それから先に記述されたコマンドが実行されなくなります。\n\nまた、autostart ファイルではコマンドの実行を遅延させることを推奨します。そうしないと全てのコマンドが同時に実行されることになり、結果的にアイテムが起動しなくなることがあります。コマンドの実行を遅延させるには以下のような形式で記述します:\n\n```\n(sleep <number of seconds>s && <command>) &\n```\n\n例えば、Conky の実行を3秒だけ遅らせたい場合、コマンドは以下の通りです:\n\n```\n(sleep 3s && conky) &\n```\n\npython2 スクリプトの /usr/lib/openbox/openbox-xdg-autostart は XDG の autostart 規格に沿ってアプリケーションを実行します。\n\n"
    },
    {
      "title": "environment",
      "level": 3,
      "content": "~/.config/openbox/environment は以下のような環境変数を設定するのに使います:\n\n- 新しいパスの定義 (例: パスを必要とする実行コマンド)\n- 言語設定の変更\n- 他の使用される変数 (例: GTK テーマの修正)\n\n"
    },
    {
      "title": "Themes",
      "level": 3,
      "content": "GUI 用に obconf および/または lxAppearance-obconf をインストールして、ビジュアル設定とテーマを構成します。\n\n厳選されたテーマが openbox-themesAUR パッケージまたは AUR で入手できます。一部の GTK テーマ には Openbox テーマも付属しています。Openbox 固有のテーマと Openbox 互換のテーマは両方とも /usr/share/themes ディレクトリにインストールされ、すぐに選択できるようになります。\n\n[2] は、優れた確立されたテーマのソースです。[3] も優れたリソースです。さらに多くのものをオンラインで見つけることができます。\n\n"
    },
    {
      "title": "編集または作成",
      "level": 4,
      "content": "新しいテーマを作成したり、既存のテーマを変更したりするプロセスについては、公式 Web サイト openbox.org で詳しく説明されています。obthemeAUR は、これを行うための使いやすい GUI です。\n\n"
    },
    {
      "title": "GUI 設定パッケージ",
      "level": 3,
      "content": "Openbox デスクトップを簡単に設定するための GUI が複数存在します:\n\n- ObConf — Openbox ウィンドウマネージャのための GTK2 ベースの設定ツール。\n\n- LXAppearance ObConf — Openbox を設定するための LXAppearance のプラグイン。\n\n- LXInput — LXDE のキーボード・マウス設定。\n\n- LXRandR — LXDE のモニター設定。\n\n- obkey — Openbox のキーボードショートカットを設定。\n\n- ob-autostart — Openbox のためのシンプルな自動起動アプリケーション。\n\n- obapps — Openbox のアプリケーション設定を変えるためのグラフィカルツール。\n\nOpenbox のデスクトップメニューを設定するアプリケーションについてはメニューセクションを見て下さい。\n\n"
    },
    {
      "title": "Openbox の再設定",
      "level": 2,
      "content": "Openbox は常に設定ファイルの変更をセッションに反映させるわけではありません。そのため、設定ファイルを編集したら手動でリロードする必要があります。再設定を行うには、次のコマンドを実行してください:\n\n```\n$ openbox --reconfigure\n```\n\n上のコマンドを実行するキーバインドを ~/.config/openbox/rc.xml に追加すれば、いちいちターミナルを開く必要がなくなります。例えば Super+F11 キーバインドを使用する場合:\n\n```\n<keybind key=\"W-F11\">\n  <action name=\"Reconfigure\"/>\n</keybind>\n```\n\n"
    },
    {
      "title": "キーボードショートカット",
      "level": 2,
      "content": "すべてのキーバインドは、~/.config/openbox/rc.xml ファイルの <!-- Keybindings for running applications --> の下に追加する必要があります。 ここでは簡単な概要を説明します。 キーバインドのより詳細な説明は openbox.org を参照して下さい。\n\n次の構文を使用して、キーバインドを設定ファイルに追加できます:\n\n```\n<keybind key=\"my-key-combination\">\n  <action name=\"my-action\">\n    ...\n  </action>\n</keybind>\n```\n\n外部コマンドを実行するためのアクション名は Execute です。次の構文を使用して、実行する外部コマンドを定義します。\n\n```\n<action name=\"Execute\">\n  <command>my-command</command>\n</action>\n```\n\n使用可能なすべてのアクションのリストについては、the Openbox wiki を参照してください。\n\nキーバインドに標準の英数字キーを使用することは一目瞭然ですが、他のタイプのキーには、modifiers、multimedia、navigation などの特別な名前が割り当てられます。\n\n"
    },
    {
      "title": "修飾キー",
      "level": 3,
      "content": "Modifier キーにはキーバインドで重要な役割があります (例: shift や CTRL / control キーを押しながら他のキーを押すことでアクションを実行する)。修飾キーを使うことでキーバインドの衝突を減らし、同一のキーに複数のアクションを指定することができます。修飾キーと他のキーを使う場合の構文は:\n\n```\n\"<modifier>-<key>\"\n```\n\nmodifier のコードは以下の通りです:\n\n- S: Shift\n- C: Control / CTRL\n- A: Alt\n- W: Super / Windows\n- M: Meta\n- H: Hyper (何かにバインドしている場合)\n\n"
    },
    {
      "title": "マルチメディアキー",
      "level": 3,
      "content": "ボリュームや画面の明るさの調整など、適切な multimedia キーで予期した操作が実行されるように設定することが可能です。通常はマルチメディアキーは function キーに統合されますが、適当なシンボルで識別できます。詳しくは特別なキーボードキーを見て下さい。\n\nボリュームと輝度のマルチメディアキーは以下の通りです (マルチメディアキーを機能させるにはコマンドを割り当てる必要があります):\n\n- XF86AudioRaiseVolume: ボリュームを上げる\n- XF86AudioLowerVolume: ボリュームを下げる\n- XF86AudioMute: ボリュームをミュート / ミュート解除\n- XF86MonBrightnessUp: 画面の明るさを上げる\n- XF86MonBrightnessDown: 画面の明るさを下げる\n\n上記のキーを ~/.config/openbox/rc.xml で使用する例は下にあります。\n\n"
    },
    {
      "title": "ボリュームコントロール",
      "level": 4,
      "content": "音量のコントロールにどのコマンドを使うかは、サウンドシステムとして ALSA, PulseAudio, OSS のどれを使っているかによって変わってきます。\n\n- ALSA: Advanced Linux Sound Architecture#キーボードのボリュームコントロールを見てください。\n- PulseAudio: PulseAudio#キーボードのボリュームコントロールを見てください。\n- OSS: OSS#OSS でマルチメディアキーを使うを見てください。\n\n"
    },
    {
      "title": "ナビゲーションキー",
      "level": 3,
      "content": "これらは方向/矢印キーで、通常はカーソルを上下左右に移動するために使用されます。ナビゲーションコードは次のとおりです。\n\n- Up: Up\n- Down: Down\n- Left: Left\n- Right: Right\n\n"
    },
    {
      "title": "メニュー",
      "level": 2,
      "content": "Openbox では3つのタイプのメニューを使うことができます: static, pipes (dynamic), generators (static または dynamic)。どれか一つだけを使うこともできますし組み合わせることも可能です。\n\n"
    },
    {
      "title": "Static",
      "level": 3,
      "content": "名前の通り、デフォルトのメニュータイプであり決して変更されることがありません。手動で編集したり、適切なソフトウェアパッケージを使って自動で生成することが可能です。\n\nこのタイプのメニューはアプリケーションを選択するだけでなく、アプリケーションから他のプロセス (例: synapse または xfce4-appfinder アプリケーション) にアクセスして、特定の関数にアクセスしたりタスク (デスクトップの設定など) を実行することもできます。\n\n~/.config/openbox/menu.xml ファイルが static デスクトップメニューの唯一の設定ファイルです。\n\n"
    },
    {
      "title": "menumaker",
      "level": 4,
      "content": "menumaker は Openbox, Fluxbox, IceWM, Xfce など複数のウィンドウマネージャに対応した xml メニューを自動で作成します。MenuMaker はあなたのコンピュータにある実行可能ファイルを検索して、その結果からメニューファイルを作成します。特定のアプリケーション (GNOME, KDE など) を省くように設定することも可能です。\n\nインストールして実行すると、新しい ~/.config/openbox/menu.xml ファイルが生成されます。既存のファイルが上書きされないようにするには、次を実行:\n\n```\n$ mmaker -v OpenBox3\n```\n\nもしくは、既存のファイルを上書きしたい場合は、force 引数を追加 (f):\n\n```\n$ mmaker -vf OpenBox3\n```\n\n新しい ~/.config/openbox/menu.xml ファイルが作成されたら、手動で編集しても良いですし、obmenuAUR などの GUI のメニューエディタを使って設定を行ってもかまいません。\n\n"
    },
    {
      "title": "obmenu",
      "level": 4,
      "content": "obmenuAUR は ~/.config/openbox/menu.xml を編集するためのユーザーフレンドリな GUI アプリケーションで、xml のコードを編集したくない人にうってつけでしょう。\n\n"
    },
    {
      "title": "xdg-menu",
      "level": 4,
      "content": "archlinux-xdg-menu は Openbox を含む、様々なウィンドウマネージャのメニューを /etc/xdg/ ディレクトリに含まれている xdg ファイルから自動で作成することができます。詳しくは Xdg-menu#OpenBox を見て下さい。\n\n"
    },
    {
      "title": "ログアウトメニューのオプション",
      "level": 4,
      "content": "~/.config/openbox/menu.xml ファイルを編集することで oblogout のオプションと同じサブメニューを作成することができます。以下のサンプルスクリプトは画面のロック以外の全てのオプションを備えます:\n\n```\n<menu id=\"exit-menu\" label=\"Exit\">\n\t<item label=\"Log Out\">\n\t\t<action name=\"Execute\">\n\t\t\t<command>openbox --exit</command>\n\t\t</action>\n\t</item>\n\t<item label=\"Shutdown\">\n\t\t<action name=\"Execute\">\n\t\t\t<command>systemctl poweroff</command>\n\t\t</action>\n\t</item>\n\t<item label=\"Restart\">\n\t\t<action name=\"Execute\">\n\t\t        <command>systemctl reboot</command>\n\t\t</action>\n\t</item>\n\t<item label=\"Suspend\">\n\t\t<action name=\"Execute\">\n\t\t        <command>systemctl suspend</command>\n\t\t</action>\n\t</item>\n\t<item label=\"Hibernate\">\n\t\t<action name=\"Execute\">\n\t\t        <command>systemctl hibernate</command>\n\t\t</action>\n\t</item>\n</menu>\n```\n\nエントリを作成したら、以下の行をメインデスクトップメニューの中でサブメニューを表示したいところに追加してください (普通は最後のエントリにします):\n\n```\n<menu id=\"exit-menu\"/>\n```\n\n"
    },
    {
      "title": "Pipes",
      "level": 3,
      "content": "このタイプのメニューは基本的にスクリプトで、実行時に即座に更新される動的なリストを提供します。リストが使用される目的は複数あり、アプリケーションを一覧したり、情報を表示したり、機能を制御したりします。定義済みのパイプメニューをインストールすることができ、上級者であればカスタムスクリプトを作成・修正することができます。また、~/.config/openbox/menu.xml には複数のパイプメニューを定義することができます。\n\n"
    },
    {
      "title": "サンプル",
      "level": 4,
      "content": "- openbox-xdgmenuAUR: xdg-menu を xml-pipe-menu に変換\n- obfilebrowserAUR: アプリケーションとファイルブラウザ\n- obdevicemenuAUR: udisks によるリムーバブルメディアの管理\n- wifi pipe menu: Netctl による無線ネットワーク\n\nOpenbox.org にも様々なパイプメニューのリストが載っています。\n\n"
    },
    {
      "title": "Generators",
      "level": 3,
      "content": "このタイプのメニューは Xfce や LXDE などのデスクトップ環境で使われているタスクバーに似ています。このタイプのメニューは自動的に更新され、強力でとても便利です。カスタムカテゴリやメニューエントリを追加することもできます。使用するダイナミックメニューのドキュメントを読んで下さい。\n\nメニュージェネレータは ~/.config/openbox/menu.xml ファイルから実行する必要があります。\n\n"
    },
    {
      "title": "obmenu-generator",
      "level": 4,
      "content": "obmenu-generatorAUR は非公式パッケージながら強く推奨されています。静的または動的なメニューとして使うことができ、細かくカスタマイズすることが可能です。メニューのカテゴリや個々のエントリは簡単に非表示にすることができ、カスタマイズしたり追加するのもお茶の子さいさい。詳しい説明やスクリーンショットが 公式ホームページ にあります。\n\n以下は ~/.config/openbox/menu.xml でアイコンを使わずに obmenu-generator を動的に実行する例です:\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<openbox_menu>\n    <menu id=\"root-menu\" label=\"OpenBox 3\" execute=\"/usr/bin/obmenu-generator\">\n    </menu>\n</openbox_menu>\n```\n\n自動的にエントリをアイコン化するには、-i オプションを追加します:\n\n```\n<menu id=\"root-menu\" label=\"OpenBox 3\" execute=\"/usr/bin/obmenu-generator -i\">\n```\n\n"
    },
    {
      "title": "openbox-menu",
      "level": 4,
      "content": "openbox-menuAUR は LXDE プロジェクトによる menu-cache を使って Openbox のダイナミックメニューを作成します。詳細については 公式ホームページ を見て下さい。\n\n"
    },
    {
      "title": "メニューアイコン",
      "level": 3,
      "content": "メニューエントリの横にアイコンを表示するには、~/.config/openbox/rc.xml ファイルの <menu> セクションでアイコンを有効にする必要があります:\n\n```\n<applicationIcons>yes</applicationIcons>\n```\n\n固定メニューを使用する際は ~/.config/openbox/menu.xml ファイルを編集して icon = コマンドとエントリのフルパス・アイコン名が必要です。カテゴリのアイコンを指定する例:\n\n```\n<menu id=\"apps-menu\" label=\"[label name]\" icon=\"[pathway to icon]/[icon name]\">\n```\n\n"
    },
    {
      "title": "デスクトップメニューをパネルメニューとして使う",
      "level": 3,
      "content": "xdotool はキーの押下やキーバインドを擬態するコマンドが実行できるパッケージです。XDoTool を使うことで実際に特定のキーを押さなくても、キーバインドが設定されたアクションを実行することができます。Openbox のデスクトップメニューのキーバインドも実行できるため、XDoTool を利用して Openbox のデスクトップメニューをパネルメニューにすることが可能になります。特に、デスクトップメニューをとことんカスタマイズして様々なことができるようにしている場合、非常に便利です:\n\n- 既存のパネルメニューを置き換える。\n- パネルメニューが存在しない場合にパネルメニューを追加する (例: Tint2)。\n- xfdesktop などのアプリケーションを使っている場合にデスクトップメニューを開けなくなったときにデスクトップを管理する。\n\nXDoTool をインストールしたら、ルートメニューにアクセスするキーバインドを ~/.config/openbox/rc.xml の <!-- Keybindings for running aplications --> の下に作成してください。例えば、以下のコードは CTRL + m でメニューを表示します:\n\n```\n<keybind key=\"C-m\">\n    <action name=\"ShowMenu\">\n       <menu>root-menu</menu>\n    </action>\n</keybind>\n```\n\nOpenbox の再設定が必要です。ここでは XDoTool を使って以下のコマンドで CTRL + m をシミュレートしてデスクトップメニューにアクセスします (+ は - の代わりとして使っています):\n\n```\nxdotool key control+m\n```\n\nパネルランチャーやアイコンとして上記のコマンドを使用するやりかたは使用するパネルによります。パネルによっては新しいランチャーを作成するのに直接上記のコマンドを実行できますが、実行スクリプトを使う必要がある場合もあります。例えば ~/.config フォルダに obpanelmenu.sh という名前のカスタム実行スクリプトを作成:\n\n```\n$ text editor ~/.config/obpanelmenu.sh\n```\n\n空のファイルを開いたら、適切な XDoTool コマンドを空のファイルに追加してください (以下の例では CTRL + m をシミュレート):\n\n```\nxdotool key control+m\n```\n\nファイルを保存したら、以下のコマンドで実行可能属性を付与してください:\n\n```\n$ chmod +x ~/.config/obpanelmenu.sh\n```\n\n"
    },
    {
      "title": "XDG 準拠メニュー",
      "level": 3,
      "content": "xdg 準拠のメニューは、freedesktop.org 標準に基づいています。メニューは、/etc/xdg/menus にあるメニューファイルで定義されます。新しいアプリケーションはメニューに自動的に表示されます。\n\n"
    },
    {
      "title": "サンプル",
      "level": 4,
      "content": "archlinux-menusAUR パッケージは、Arch Linux 固有の XDG 準拠メニューを提供します。\n\n"
    },
    {
      "title": "カーソルとアイコンのテーマ",
      "level": 3,
      "content": "詳細については、カーソルテーマ および アイコン を参照してください。\n\n"
    },
    {
      "title": "デスクトップのアイコンと壁紙",
      "level": 3,
      "content": "Openbox は、デスクトップアイコンや壁紙の使用をネイティブにサポートしていません。\n\nPCManFM、SpaceFM、Ideskを参照してください。\n\nアプリケーション一覧#壁紙設定 を参照してください。\n\n"
    },
    {
      "title": "コンポジタの効果",
      "level": 3,
      "content": "Openbox は compositing のネイティブサポートを提供していないため、この目的には外部コンポジタが必要です。\n\nコンポジタは必須のコンポーネントではありませんが、特に oblogout による画面の歪みや、ターミナルウィンドウの透明度による視覚的な不具合などの問題を回避できる可能性があります。一般的な選択肢については、Xorg#コンポジットマネージャ一覧 を参照してください。\n\n"
    },
    {
      "title": "oblogout",
      "level": 3,
      "content": "この便利なグラフィカルなログアウトスクリプトの使用方法の概要については、Oblogout の記事を参照してください。\n\n"
    },
    {
      "title": "ホットキーを使用して複雑なコマンドを起動する",
      "level": 3,
      "content": "複雑なコマンドを実行する必要がある場合は、シェル機能を使用してください。\n\n独自のスクリプトを作成するときは、\"&\" (\"&amp;\"), \"<\" (\"&lt;\"), \">\" (\"&gt;\") など) の XML 特殊文字を必ずエスケープしてください。)、(詳細は XML の事前定義されたエンティティ を参照してください)。\n\nこの例では、表示をすぐにオフにし、slock で画面をロックします。これは このスレッド から取得したものです。\n\n```\n<keybind key=\"W-l\">\n   <action name=\"Execute\">\n     <command>sh -c 'slock &amp; (sleep .5 &amp;&amp; xset dpms force off)'</command>\n   </action>\n </keybind>\n```\n\n場合によっては、アプリケーションの環境変数を指定する必要があります:\n\n```\n<keybind key=\"A-F7\">\n   <action name=\"Execute\">\n     <command>sh -c \"LC_ALL=C obconf\"</command>\n   </action>\n </keybind>\n```\n\n別の例では、すべての stdout および stderr 出力をファイルに保存してアプリケーションを起動します:\n\n```\n<keybind key=\"A-f\">\n   <action name=\"Execute\">\n     <command>sh -c sh -c \"exec gimp &gt;/tmp/gimp.out 2&gt;&amp;1\"</command>\n   </action>\n </keybind>\n```\n\nスクリーンショットを有効にする:\n\n```\n<keybind key=\"Print\">\n   <action name=\"Execute\">\n     <command>gnome-screenshot --clipboard</command>\n   </action>\n </keybind>\n <keybind key=\"A-Print\">\n   <action name=\"Execute\">\n     <command>gnome-screenshot --clipboard --window</command>\n   </action>\n </keybind>\n <keybind key=\"W-Print\">\n   <action name=\"Execute\">\n     <command>gnome-screenshot --interactive</command>\n   </action>\n </keybind>\n```\n\n"
    },
    {
      "title": "アプリケーションランチャー",
      "level": 3,
      "content": "Openbox を単純にインストールするデスクトップ環境がない場合、Openbox メニューシステムとホットキーの補足として 1 つ以上のアプリケーションランチャーをインストールすると便利です。このようなランチャーのリストは、カテゴリ:アプリケーションランチャー および アプリケーション一覧/その他#アプリケーションランチャー にあります。一般的な例として Gmrun や dmenu など。\n\n"
    },
    {
      "title": "マウスを使用してデスクトップを切り替える",
      "level": 3,
      "content": "マウスカーソルを画面端に移動させることでデスクトップを切り替えることができます。まず、xdotool をインストールし、次の 2 行を ~/.xinitrc に追加します:\n\n```\nxdotool behave_screen_edge --delay 500 left set_desktop --relative -- -1 &\nxdotool behave_screen_edge --delay 500 right set_desktop --relative -- +1 &\n```\n\n"
    },
    {
      "title": "規定のアプリケーション/ファイルの関連付けの設定",
      "level": 3,
      "content": "デフォルトアプリケーションを見て下さい。\n\n"
    },
    {
      "title": "ウィンドウ透過",
      "level": 3,
      "content": "transset-dfAUR パッケージに含まれている transset-df を使えばすぐにウィンドウ透過を有効にできます。\n\n例えば以下を ~/.config/openbox/rc.xml ファイルの <mouse> セクションに追加すれば、タイトルバー上でマウスのホイールを回すことでウィンドウの透明度を調整できるようになります:\n\n```\n<context name=\"Titlebar\">\n    ...\n    <mousebind button=\"Up\" action=\"Click\">\n        <action name= \"Execute\" >\n        <execute>transset-df -p .2 --inc  </execute>\n        </action>\n    </mousebind>\n    <mousebind button=\"Down\" action=\"Click\">\n        <action name= \"Execute\" >\n        <execute>transset-df -p .2 --dec </execute>\n        </action>\n    </mousebind>\n    ...\n</context>\n```\n\n"
    },
    {
      "title": "obxprop を使って素早く設定を行う",
      "level": 3,
      "content": "openbox パッケージには rc.xml のアプリケーション設定の値を解析することができる obxprop バイナリが付属しています。公式では obxprop | grep \"^_OB_APP\" を使うことが推奨されています。コマンドを実行してプロセスを開始したら、ウィンドウをクリックすることでターミナルにプロパティが表示されます。\n\n"
    },
    {
      "title": "アプリケーションの Xprop の値",
      "level": 3,
      "content": "xorg-xprop パッケージをインストールして、選択したアプリケーションのプロパティの値を中継することができます。頻繁にアプリケーションごとの設定をする場合、以下の Bash エイリアスが役に立つでしょう:\n\n```\nalias xp='xprop | grep \"WM_WINDOW_ROLE\\|WM_CLASS\" && echo \"WM_CLASS(STRING) = \\\"NAME\\\", \\\"CLASS\\\"\"'\n```\n\nXorg-XProp を使用するときは、xp と定義したエイリアスを使って起動し、アプリケーションごとの設定を定義したいプログラムをクリックしてください。Openbox が必要とする情報だけが表示されます。つまり WM_WINDOW_ROLE と WM_CLASS (名前とクラス) の値です:\n\n```\nWM_WINDOW_ROLE(STRING) = \"roster\"\nWM_CLASS(STRING) = \"gajim.py\", \"Gajim.py\"\nWM_CLASS(STRING) = \"NAME\", \"CLASS\"\n```\n\n"
    },
    {
      "title": "キーボードレイアウトの切り替え",
      "level": 3,
      "content": "キーボードレイアウトの管理に他のプログラムを使いたくない場合、特定のキーボードショートカットでレイアウトを切り替えるように X を手動で設定することができます。詳しい方法は Xorg#キーボードレイアウトの切り替えを見てください。\n\n"
    },
    {
      "title": "仮想デスクトップのグリッドレイアウトの設定",
      "level": 3,
      "content": "obsetlayoutAUR をインストールしてください。2x2 のグリッドを設定するには:\n\n```\nobsetlayout 0 2 2 0\n```\n\n引数を付けないで実行することで引数の意味を知ることができます。\n\n"
    },
    {
      "title": "ホットコーナーの有効化",
      "level": 3,
      "content": "lead は openbox などの軽量なウィンドウマネージャのためのホットコーナーです。autostart ファイルで以下のようにアプリケーションを起動してください:\n\n```\nmlde.lead &\n```\n\n~/.config/mlde/lead.conf 設定ファイルでコマンドを編集できます:\n\n```\n[eDP1]\nbottom=\nbottomLeft=chromium\nbottomRight=thunar\nleft=\nright=\ntop=\ntopLeft=mlde.californium toggle\ntopRight=skippy-xd\n```\n\n"
    },
    {
      "title": "ウィンドウのスナップ",
      "level": 3,
      "content": "多数のデスクトップ環境やウィンドウマネージャはウィンドウのスナップ (例: Windows 7 の Aero スナップ) をサポートしています。画面の端に移動された時に自動的にウィンドウの大きさが変更されます。ウィンドウに関するキーバインドを使用することで Openbox でもこの効果を再現することが可能です。\n\n下の例であるように、パーセンテージを使ってウィンドウの大きさを決定します (詳しくは openbox.org を参照)。ここでは、super キーを navigation キーと組み合わせて使っています:\n\n```\n<keybind key=\"W-Left\">\n    <action name=\"UnmaximizeFull\"/>\n    <action name=\"MaximizeVert\"/>\n    <action name=\"MoveResizeTo\">\n        <width>50%</width>\n    </action>\n    <action name=\"MoveToEdge\"><direction>west</direction></action>\n</keybind>\n<keybind key=\"W-Right\">\n    <action name=\"UnmaximizeFull\"/>\n    <action name=\"MaximizeVert\"/>\n    <action name=\"MoveResizeTo\">\n        <width>50%</width>\n    </action>\n    <action name=\"MoveToEdge\"><direction>east</direction></action>\n</keybind>\n```\n\nウィンドウを端にスナップすると、一度最大化してから戻すまで縦に最大化された状態になります。down と up キーを使用するキーバインドを追加することで解決できます。スナップされたウィンドウを画面の端から素早く引き出します:\n\n```\n<keybind key=\"W-Down\">\n   <action name=\"Unmaximize\"/>\n</keybind>\n<keybind key=\"W-Up\">\n   <action name=\"Maximize\"/>\n</keybind>\n```\n\nUbuntu フォーラムのスレッド に詳しい情報が載っています。opensnap-gitAUR[リンク切れ: アーカイブ: aur-mirror] などのアプリケーションはキーバインドを使わずにウィンドウのスナップを自動的にシミュレートします。また、bunsen-utilities-gitAUR の bl-aerosnap --left や bl-aerosnap --right コマンドを使うことで、スナップされていない場合にアクティブなウィンドウを左端または右端にスナップして、スナップしている場合に元のサイズ・位置に戻すことができます。コマンドを適当なキーバインドに設定してください。\n\n"
    },
    {
      "title": "ディスプレイマネージャのスムーズな遷移",
      "level": 3,
      "content": "ディスプレイマネージャを使用している場合、ディスプレイマネージャから Openbox のデスクトップに遷移するときにちらつきが発生することがあります。ちらつきの原因は Openbox が起動時にルートウィンドウの色を設定しているためです。ディスプレイマネージャの背景とデスクトップの背景の間に、一瞬だけグレーの色が表示されてしまいます。\n\n/usr/lib/openbox/openbox-autostart にある Openbox のスタートアップスクリプトを編集することでルートウィンドウの背景色の設定を無効にできます。# Set a background color から始まるブロックをコメントアウト(あるいは削除)してください。\n\n"
    },
    {
      "title": "ウィンドウのデコレーション",
      "level": 3,
      "content": "すべてまたは特定のアプリケーションのウィンドウのデコレーションを削除するには、rc.xml の <applications> セクションの <decor> オプションを使用します (ユーザー: ~/.config/openbox/ またはシステム: /etc/xdg/openbox/)\n\nFirefox の例 (Firefox-Beta や Firefox-Nightly などの亜種を含む):\n\n```\n<application class=\"Firefox*\">\n   <decor>no</decor>\n </application>\n```\n\nまた、すべてのアプリケーションのデコレーションを無効にし (クラス * を使用)、個別のアプリケーションに対して装飾を有効にする (yes を使用) こともできます。変更を適用するには、デスクトップセッションを再起動し、Openbox を再起動します。参照: Openbox FAQ\n\n"
    },
    {
      "title": "Firefox",
      "level": 3,
      "content": "Mozilla ベースのブラウザは、class=\"Firefox\" が使用されない限り、アプリケーションルール (例: <desktop>) を無視する可能性があります。Xprop 値 を参照してください。\n\n"
    },
    {
      "title": "テーマが見つからない",
      "level": 3,
      "content": "何らかの理由で新しく抽出したテーマを選択できない場合は、まずテーマディレクトリを開いて Openbox と互換性があることを確認します。openbox-3 ディレクトリと themerc ファイルがあるはずですその中で。場合によっては、.obt (OpenBox 'Theme) ファイルも存在する場合があり、obconf に手動でロードできます。\n\n間違った権限が原因でテーマにアクセスできない場合もあります。詳細については、ファイルのパーミッションと属性 を参照してください。\n\n"
    },
    {
      "title": "デスクトップの連続切り替えを停止する",
      "level": 3,
      "content": "デフォルトでは、Openbox はマウスのホイールスクロール時に最後のデスクトップから最初のデスクトップに戻ります。この動作を無効にするには、mousebind セクションで <wrap>no</wrap> を使用します。\n\n```\n<context name=\"Desktop\">\n     <mousebind button=\"Up\" action=\"Click\">\n       <action name=\"GoToDesktop\">\n         <to>previous</to>\n         <wrap>no</wrap>\n       </action>\n     </mousebind>\n     <mousebind button=\"Down\" action=\"Click\">\n       <action name=\"GoToDesktop\">\n         <to>next</to>\n         <wrap>no</wrap>\n       </action>\n     </mousebind>\n   </context>\n```\n\n"
    },
    {
      "title": "ウィンドウがアクティブウィンドウの後ろにロードされる",
      "level": 3,
      "content": "(Firefox のウィンドウなど) アプリケーションウィンドウが現在のアクティブウィンドウの後ろにロードされ、ウィンドウをフォーカスして切り替える必要が生じることがあります。この挙動を修正するには以下を ~/.config/openbox/rc.xml ファイルの <openbox_config> と </openbox_config> タグの間に追加してください:\n\n```\n<applications>\n  <application class=\"*\">\n    <focus>yes</focus>\n  </application>\n</applications>\n```\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Openbox Website – 公式ウェブサイト\n- Box-Look.org – テーマやアートワーク\n- Openbox Hacks and Configs Thread @ Arch Linux フォーラム\n- Openbox Screenshots Thread @ Arch Linux フォーラム\n- Using GNOME 3 with Openbox Tutorial\n\n"
    }
  ]
}
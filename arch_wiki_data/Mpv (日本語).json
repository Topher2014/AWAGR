{
  "title": "Mpv (日本語)",
  "url": "https://wiki.archlinux.org/title/Mpv_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- MPlayer\n- yt-dlp\n\nmpv は MPlayer と MPlayer2 がベースの動画プレイヤーです。幅広いフォーマットの動画ファイル、オーディオ・ビデオコーデック、字幕タイプをサポートしています。mpv と前出のプレイヤーとの違いは このページ で包括的に (一部不完全ですが) リストアップされています。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール 1.1 フロントエンド\n- 2 設定 2.1 一般設定 2.1.1 字幕の設定 2.1.2 高度な設定 2.1.3 カスタムプロファイル 2.1.3.1 自動プロファイル 2.2 キーバインディング 2.3 その他の設定ファイル\n- 3 スクリプト 3.1 JavaScript 3.2 Lua 3.2.1 mpv-ytdlAutoFormat 3.2.2 mpv-stats 3.2.3 mpv-webm 3.2.4 ytdl-preload 3.3 C 3.3.1 mpv-mpris\n- 4 Vapoursynth 4.1 SVP 4 Linux (SmoothVideoProject) 4.1.1 10 ビット補間を修正\n- 5 ヒントとテクニック‎ 5.1 ピクチャー 5.1.1 ハードウェアビデオアクセラレーション 5.1.2 縦横比をすばやく切り替える 5.1.3 アスペクト比を無視する 5.1.4 ルートウィンドウに描画 5.1.5 アプリケーション ウィンドウを常に表示する 5.1.6 ビデオ出力を無効にする 5.1.7 ターミナルビデオ 5.2 オーディオ 5.2.1 ボリュームが小さすぎる 5.2.2 オーディオ出力を指定する 5.2.3 HD オーディオパススルー 5.2.4 ボリューム標準化 5.2.5 Lua スクリプトを使用して mpv を音楽プレーヤーとして改善する 5.3 停止した位置からの自動レジューム再生 5.3.1 プレイリストの位置を保存して次のファイルで一時停止 5.4 DVD を再生する 5.5 昔の OSC に戻す 5.6 再現可能なスクリーンショット 5.7 スクリーンショットの作成 5.8 ストリーミング 5.8.1 mpv 経由の Twitch.tv ストリーミング 5.8.2 youtube-dl とフォーマットの選択 5.8.3 youtube-dl オーディオと検索 5.9 システムへの統合 5.9.1 ブラウザのプラグインとして使用 5.9.2 KDE クリップボードからビデオのリンクを開く\n- 6 トラブルシューティング 6.1 一般的なデバッグ 6.2 再生が途切れたりティアリングが発生する 6.3 ウィンドウコンポジタの問題 6.4 ボリュームバーがないため、ボリュームを変更できません 6.5 GNOME Blank スクリーン (Wayland) 6.6 GNOME Wayland でカーソルテーマが適用されない 6.7 AMD GPU で CUDA ライブラリが見つからないというエラーメッセージ 6.8 PipeWire がマスクされているとオーディオが再生されない 6.9 mpv でファイルから DVD の再生ができない 6.10 一時停止から再開した後再生が途切れるのを修正\n\n- 1.1 フロントエンド\n\n- 2.1 一般設定 2.1.1 字幕の設定 2.1.2 高度な設定 2.1.3 カスタムプロファイル 2.1.3.1 自動プロファイル\n- 2.2 キーバインディング\n- 2.3 その他の設定ファイル\n\n- 2.1.1 字幕の設定\n- 2.1.2 高度な設定\n- 2.1.3 カスタムプロファイル 2.1.3.1 自動プロファイル\n\n- 2.1.3.1 自動プロファイル\n\n- 3.1 JavaScript\n- 3.2 Lua 3.2.1 mpv-ytdlAutoFormat 3.2.2 mpv-stats 3.2.3 mpv-webm 3.2.4 ytdl-preload\n- 3.3 C 3.3.1 mpv-mpris\n\n- 3.2.1 mpv-ytdlAutoFormat\n- 3.2.2 mpv-stats\n- 3.2.3 mpv-webm\n- 3.2.4 ytdl-preload\n\n- 3.3.1 mpv-mpris\n\n- 4.1 SVP 4 Linux (SmoothVideoProject) 4.1.1 10 ビット補間を修正\n\n- 4.1.1 10 ビット補間を修正\n\n- 5.1 ピクチャー 5.1.1 ハードウェアビデオアクセラレーション 5.1.2 縦横比をすばやく切り替える 5.1.3 アスペクト比を無視する 5.1.4 ルートウィンドウに描画 5.1.5 アプリケーション ウィンドウを常に表示する 5.1.6 ビデオ出力を無効にする 5.1.7 ターミナルビデオ\n- 5.2 オーディオ 5.2.1 ボリュームが小さすぎる 5.2.2 オーディオ出力を指定する 5.2.3 HD オーディオパススルー 5.2.4 ボリューム標準化 5.2.5 Lua スクリプトを使用して mpv を音楽プレーヤーとして改善する\n- 5.3 停止した位置からの自動レジューム再生 5.3.1 プレイリストの位置を保存して次のファイルで一時停止\n- 5.4 DVD を再生する\n- 5.5 昔の OSC に戻す\n- 5.6 再現可能なスクリーンショット\n- 5.7 スクリーンショットの作成\n- 5.8 ストリーミング 5.8.1 mpv 経由の Twitch.tv ストリーミング 5.8.2 youtube-dl とフォーマットの選択 5.8.3 youtube-dl オーディオと検索\n- 5.9 システムへの統合 5.9.1 ブラウザのプラグインとして使用 5.9.2 KDE クリップボードからビデオのリンクを開く\n\n- 5.1.1 ハードウェアビデオアクセラレーション\n- 5.1.2 縦横比をすばやく切り替える\n- 5.1.3 アスペクト比を無視する\n- 5.1.4 ルートウィンドウに描画\n- 5.1.5 アプリケーション ウィンドウを常に表示する\n- 5.1.6 ビデオ出力を無効にする\n- 5.1.7 ターミナルビデオ\n\n- 5.2.1 ボリュームが小さすぎる\n- 5.2.2 オーディオ出力を指定する\n- 5.2.3 HD オーディオパススルー\n- 5.2.4 ボリューム標準化\n- 5.2.5 Lua スクリプトを使用して mpv を音楽プレーヤーとして改善する\n\n- 5.3.1 プレイリストの位置を保存して次のファイルで一時停止\n\n- 5.8.1 mpv 経由の Twitch.tv ストリーミング\n- 5.8.2 youtube-dl とフォーマットの選択\n- 5.8.3 youtube-dl オーディオと検索\n\n- 5.9.1 ブラウザのプラグインとして使用\n- 5.9.2 KDE クリップボードからビデオのリンクを開く\n\n- 6.1 一般的なデバッグ\n- 6.2 再生が途切れたりティアリングが発生する\n- 6.3 ウィンドウコンポジタの問題\n- 6.4 ボリュームバーがないため、ボリュームを変更できません\n- 6.5 GNOME Blank スクリーン (Wayland)\n- 6.6 GNOME Wayland でカーソルテーマが適用されない\n- 6.7 AMD GPU で CUDA ライブラリが見つからないというエラーメッセージ\n- 6.8 PipeWire がマスクされているとオーディオが再生されない\n- 6.9 mpv でファイルから DVD の再生ができない\n- 6.10 一時停止から再開した後再生が途切れるのを修正\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "mpv パッケージを インストール して下さい。または開発バージョンの mpv-gitAUR\n\n"
    },
    {
      "title": "フロントエンド",
      "level": 3,
      "content": "アプリケーション一覧/マルチメディア#mpv-based を参照してください。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "mpv には、弱いまたは古いビデオカードを搭載したコンピュータでもうまく動作する、優れた万能のデフォルト設定が付属しています。ただし、より新しいビデオカードを搭載したコンピュータを使用している場合は、mpv のビデオ品質を向上させるために多くの設定を行う必要があります。(ビデオカードの能力によって制限されます) これを行うには、いくつかの設定ファイルを作成するだけで済みます (デフォルトでは設定ファイルは存在しないため)\n\n開始しやすいように、mpv にはデフォルト設定のサンプル構成ファイルが用意されています。これらをコピーして出発点として使用します。\n\n```\n$ cp -r /usr/share/doc/mpv/ ~/.config/\n```\n\nmpv.conf には mpv の設定の大部分が含まれ、input.conf にはキーバインディングが含まれます。両方を読んで、それらがどのように機能し、どのようなオプションが利用できるかを理解してください。\n\n"
    },
    {
      "title": "一般設定",
      "level": 3,
      "content": "次の設定を ~/.config/mpv/mpv.conf に追加します。\n\n"
    },
    {
      "title": "字幕の設定",
      "level": 4,
      "content": "ファジー検索を有効にする。\n\n```\nsub-auto=fuzzy\n```\n\nフォントを変更する:\n\n```\nsub-font=\"fontName\"\n```\n\n字幕を太字にして読みやすくします。\n\n```\nsub-bold=yes\n```\n\n"
    },
    {
      "title": "高度な設定",
      "level": 4,
      "content": "これにより、vo=gpu をビデオ出力として使用するときに高品質の OpenGL オプションが読み込まれます(デフォルト)。ほとんどのユーザーは問題なくこれらを実行できますが、実行できない少数のユーザーに問題が発生しないように、デフォルトでは有効になっていません。\n\n```\nprofile=gpu-hq\n```\n\ngpu-hq プロファイルは、中程度の品質と速度を実現するために、デフォルトで spline36 スケーリングフィルターに設定されています。最高品質のビデオ出力を得るには、ハードウェアで実行できる場合は ewa_lanczossharp を使用する必要があるとマニュアルに記載されています。\n\n```\nprofile=gpu-hq\nscale=ewa_lanczossharp\ncscale=ewa_lanczossharp\n```\n\nこれらの最後の3つのオプションは、もう少し複雑です。最初のオプションでは、オーディオとビデオが同期しなくなった場合、ビデオフレームをドロップする代わりに、オーディオをリサンプリングします(オーディオピッチのわずかな変化は、ドロップされたフレームよりも目立たないことがよくあります)。 mpv wiki には、 DisplaySynchronization というタイトルの詳細な記事があります。残りの2つは、フレームの表示方法を変更することで、基本的にディスプレイ上で動きがスムーズに見えるようにし、ソースフレームレートがディスプレイのリフレッシュレートとより良く調和するようにします(実際にビデオを60 fpsに変換するSVPの手法と混同しないでください)。 mpv wiki には、 Interpolation というタイトルの詳細な記事がありますが、一般に スムーズモーション としても知られています。\n\n```\nprofile=gpu-hq\nscale=ewa_lanczossharp\ncscale=ewa_lanczossharp\nvideo-sync=display-resample\ninterpolation\ntscale=oversample\n```\n\nこれ以外にもできることはたくさんありますが、物事はより複雑になり、より強力なビデオカードが必要になります。簡単な概要として、画像でトレーニングされたディープニューラルネットワークを実際に使用するものを含む、エキゾチックなスケーリングとシャープニングの手法を実行する特別なシェーダーをロードすることができます(実世界とアニメーションコンテンツの両方)。これについて詳しくは、 mpv wiki、特に user-shaders のセクション をご覧ください。\n\nあなたが同様に望ましいと思うかもしれない他のたくさんのオプションもあります。 mpv(1) を見る価値があります。コマンドラインから mpv を実行して、構成に関するエラーメッセージを確認することも役立ちます。\n\n"
    },
    {
      "title": "カスタムプロファイル",
      "level": 4,
      "content": "mpv.conf では、基本的に次のような オプションのグループ である プロファイル を作成できます。\n\n- ファイルを書き直すことなく、異なる構成をすばやく切り替えることができます。\n- 特別なコンテンツ用の特別なプロファイルを作成します。\n- ネスト プロファイル。これにより、単純なプロファイルからより複雑な プロファイル を作成できます。\n\nプロファイルの作成は簡単です。 mpv.conf の上部の領域はトップレベルと呼ばれ、そこに書き込んだオプションはすべて、mpv が開始されると有効になります。ただし、名前を角かっこで囲んでプロファイルを定義すると、その下に書き込むすべてのオプション(新しいプロファイルを定義するまで)はそのプロファイルの一部と見なされます。 mpv.conf の例を次に示します。\n\n```\nprofile=myprofile2            #トップレベルエリア、myprofile2をロード\nontop=yes                     #最前面に\n\n[myprofile1]                  #シンプルなプロファイル、トップレベルの領域はここで終わります\nprofile-desc=\"a profile\"      #プロファイルのオプションの説明\nfs=yes                        #フルスクリーンで開始\n\n[myprofile2]                  #別の簡単なプロファイル\nprofile=gpu-hq                #mpv に付属する組み込みプロファイル\nlog-file=~~/log               #ログファイルを書き込む場所を設定します。~~/ translates は ~/.config/mpv に変換されます\n```\n\nトップレベルエリア内には2つの線しかなく、その下に2つの別々のプロファイルが定義されています。 mpv が開始すると、最初の行が表示され、 myprofile2 にオプションが読み込まれます(つまり、gpu-hq と log-file=~~/log)最後に ontop=yes をロードし、起動を終了します。 myprofile1 は最上位領域で呼び出されないため、ロードされないことに注意してください。\n\nまたは、次のコマンドラインから mpv を呼び出すこともできます。\n\n```\n$ mpv --profile=myprofile1 video.mkv\n```\n\nまた、myprofile1 のオプションを除くすべてのオプションを無視します。\n\nファイルの拡張子または使用されているプロトコルに基づいて、特定の種類のプロファイルが自動的に読み込ませる。\n\nこれらのプロファイルは、一致するファイル拡張子を持つすべてのファイルに対してそれぞれにロードされます (すべての .mkv および .gif ファイルに対して):\n\n```\n[extension.mkv]\nkeep-open\nvolume-max=150\n\n[extension.gif]\nosc=no\nloop-file\n```\n\nこのプロファイルは、http または https ストリームが再生されるたびに自動的に読み込まれます\n\n(例: mpv nowikihttps://example.com/video.mp4/nowiki):\n\n```\n[protocol.https]\nspeed=2\nkeep-open\n\n[protocol.http]\nprofile=protocol.https\n```\n\nmpv --list-protocols を実行して、mpv でサポートされているさまざまなプロトコルを確認します。\n\n"
    },
    {
      "title": "キーバインディング",
      "level": 3,
      "content": "キーの割り当ては、/usr/share/doc/mpv/input.conf の例と manual の関連するセクションを参考にして下さい。\n\n~/.config/mpv/input.conf に次の例を追加します。\n\n```\nshift+s         screenshot each-frame\nShift+UP        seek  600\nShift+DOWN      seek -600\n=               cycle video-unscaled\n-               cycle-values window-scale 2 3 1 .5\nWHEEL_UP        add volume 5\nWHEEL_DOWN      add volume -5\nWHEEL_LEFT      ignore\nWHEEL_RIGHT     ignore\nAlt+RIGHT       add video-rotate 90\nAlt+LEFT        add video-rotate -90\nAlt+-           add video-zoom -0.25\nAlt+=           add video-zoom 0.25\nAlt+j           add video-pan-x -0.05\nAlt+l           add video-pan-x 0.05\nAlt+i           add video-pan-y 0.05\nAlt+k           add video-pan-y -0.05\nAlt+BS          set video-zoom 0; set video-pan-x 0; set video-pan-y 0\n```\n\nmpv で MPC-HC キーバインディングを再現する試みについては、 [1] を参照してください。\n\n"
    },
    {
      "title": "その他の設定ファイル",
      "level": 3,
      "content": "さらに、いくつかの設定ファイルとディレクトリを作成できます。その中には次のものがあります。\n\n- ~/.config/mpv/script-opts/osc.conf は、 On Screen Controller を管理します。\n- Lua スクリプト用の ~/.config/mpv/scripts/script-name.lua。 例については、 [2] を参照してください。\n\n詳細については、https://mpv.io/manual/master/#files を参照してください。\n\n"
    },
    {
      "title": "スクリプト",
      "level": 2,
      "content": "mpv にはプレイヤーの機能を拡張する 多種多様なスクリプト があります。そのために、 Lua と JavaScript の両方の内部バインディングがあります (最近追加されました) 。\n\nスクリプトは通常、 ~/.config/mpv/scripts/ ディレクトリに配置してインストールします (最初に作成する必要があります) その後、 mpv の起動時に自動的にロードされます mpv の場合一部のスクリプトには独自のインストール手順と設定手順が付属していますので、必ず確認してください。また、古いスクリプト、壊れたスクリプト、メンテナンスされていないスクリプトもあります。\n\n"
    },
    {
      "title": "JavaScript",
      "level": 3,
      "content": "JavaScript (ES5 via MuJS ) は、2014から mpv スクリプト言語としてサポートされています。現在利用できるのは a some scripts のみですが、 documentation exists は独自のものを作りたい人のためのものです。\n\nまず、 mpv scripts ディレクトリに、拡張子 .js を持つスクリプトをドロップします。例えば:\n\n```\n~/.config/mpv/scripts/fullscreen-off-on-pause.js\n```\n\n```\nfunction onPauseChange (prop, enabled) {\n    if (enabled) {\n        mp.set_property('fullscreen', 'no')\n    }\n}\n\nmp.observe_property('pause', 'bool', onPauseChange)\n```\n\nrequire を使用して CommonJS モジュールをロードする方法などの詳細については、 documentation を参照してください。\n\nJavaScript のサポートは mpv パッケージだけでなく、 mpv-fullAUR や mpv-full-gitAUR などの AUR パッケージでも利用できます。\n\n"
    },
    {
      "title": "Lua",
      "level": 3,
      "content": "mpv 用の興味深い Lua スクリプトがたくさんあります。独自のスクリプトを作成したい場合は、 こちら を参照してください。\n\n"
    },
    {
      "title": "mpv-ytdlAutoFormat",
      "level": 4,
      "content": "mpv-ytdlautoformat は、 Youtube や Twitch やあなたが望むドメインの ytdl-format を 480p やあなたが望む品質に自動変更する Lua スクリプトです。\n\n"
    },
    {
      "title": "mpv-stats",
      "level": 4,
      "content": "mpv-stats (または単に stats) は Lua スクリプトで、現在の状態を示す多くのライブ統計を出力します。これは、ハードウェアが構成に対応できることを確認したり、異なる構成を比較したりする場合に非常に便利です。バージョン v0.28.0 以降、スクリプトは mpv に組み込まれており、 i キーまたは I キー (デフォルト) を使用してオン/オフを切り替えることができます。\n\n"
    },
    {
      "title": "mpv-webm",
      "level": 4,
      "content": "mpv-webm (または単に webm) は、ビデオを見ながら WebM ファイルを作成できる非常に使いやすい Lua スクリプトです。いくつかの機能が含まれており、追加の依存関係はありません (完全に mpv に依存します)\n\n"
    },
    {
      "title": "ytdl-preload",
      "level": 4,
      "content": "ytdl-preload は、プレイリスト内の次の ytdl リンクを preload する Lua スクリプトです。\n\n"
    },
    {
      "title": "mpv-mpris",
      "level": 4,
      "content": "C プラグイン mpv-mpris を使用すると、プロトコルを介して他のアプリケーションを MPRIS と統合できます。たとえば、mpv-mpris がインストールされている場合、 kdeconnect は電話がかかってきたときにビデオ再生を自動的に一時停止できます。別の例として、 bluetooth オーディオデバイスのボタン (play\\pauseなど) があります。\n\nmpv-mprisAUR をインストールし、 Pacman によって表示されるインストール後の手順に従います。\n\n"
    },
    {
      "title": "Vapoursynth",
      "level": 2,
      "content": "Vapoursynth は AviSynth に代わるもので、 Linux で使用でき、 Python スクリプトによるビデオ操作が可能です。 Python スクリプトの Vapoursynths は mpv のビデオフィルタとして使うことができます。\n\nvapoursynth フィルターを使用するには、 vapoursynth パッケージ (または vapoursynth-gitAUR) をインストールし、--enable-vapoursynth ビルドフラグでコンパイルする必要があります。\n\nこれは、Vapoursynth をインストールしてから mpv-gitAUR をインストールする (すでにインストールされている場合は再インストールする) 方が簡単です。 mpv-gitAUR の configure スクリプトは (インストールされている限り) Vapoursynth を自動検出し、手動で設定オプションなどを変更することなく自動的に Vapoursynth をサポートしてコンパイルします。\n\n"
    },
    {
      "title": "SVP 4 Linux (SmoothVideoProject)",
      "level": 3,
      "content": "SmoothVideoProject SVP は、ビデオを 60fps に変換することで主に知られているプログラムです。無料で、 64bit Linux でフル機能を利用できます (32bit Linux とは互換性がありません) 。\n\nこれには3つの主要な機能があり、それぞれを必要に応じて無効または有効にすることができます (モーション補間の使用は強制されません)\n\n1. Motion interpolation (youtube video) -ビデオを 60fps に変換するアルゴリズム。これは、一部の人々が愛し、他の人々が嫌う、いくぶん物議を醸す 人工的な効果 を作り出します。残念なことに、このアルゴリズムは完璧ではなく、奇妙な人工的な効果を大量に含んでいます。アルゴリズムは、パフォーマンスまたは品質のいずれかについて (スライダを介して) 調整できます。また、生成されたフレームで実際のフレームを補間するいくつかの人工的な効果削減設定があり、人工的な効果の通知性が低下します。フレームレート検出は自動または手動に設定できます (一部のユーザでは手動でパフォーマンスの問題を解決できるようです)\n1. Black bar lighting (youtube video) -イメージのアスペクト比が黒のバーをディスプレイに表示する場合、 SVP は画面上のコンテンツによって生成される lights で黒のバーを明るくします。ある程度のカスタマイズはできますが、デフォルトはほぼ最適です。\n1. LED ambient lighting control (youtube video) -テレビに接続されている LED アンビエント照明をコントロールする機能があります。\n\n```\nmpv.conf\n```\n\n```\n[svp]\ninput-ipc-server=/tmp/mpvsocket     # Receives input from SVP\nhr-seek-framedrop=no                # Fixes audio desync\nresume-playback=no                  # Not compatible with SVP\n\n# ノイズが治まる場合もあれば、原因となる場合もあります。ノイズがあったら試してみてください。\n#opengl-early-flush=yes\n```\n\nSVP を使用するには、そのプロファイルを使用してファイルを開く前に、 SVP プログラムをバックグラウンドで実行しておく必要があります。次のいずれかを実行します。\n\n```\n$ mpv --profile=svp video.mkv\n```\n\nまたは、最上位の部分に profile=svp を設定します。\n\nハードウェアデコードを使用する場合は、通常のデコーダは Vapoursynth と互換性がないため、コピーバックデコーダを使用する必要があります (-copy で終わる hwdec オプションを選択します) 例えば、\n\n```\nhwdec=auto-copy\nhwdec-codecs=all\n```\n\nいずれにしても、ハードウェアのデコードは、あまり推奨されず、パフォーマンスに大きな違いをもたらすことはありません。\n\n"
    },
    {
      "title": "10 ビット補間を修正",
      "level": 4,
      "content": "Vapoursynth は 10 ビットビデオ (少なくとも HEVC ビデオ) では動作せず、次のエラーが表示されます。\n\n```\n[vapoursynth] Python exception: SVSuper: Clip must be YV12\n```\n\nこれを修正するには、mpv にビデオを別の形式に変換させます。\n\n```\nmpv.conf\n```\n\n```\nvf=format=fmt=yuv420p\n```\n\n"
    },
    {
      "title": "ハードウェアビデオアクセラレーション",
      "level": 4,
      "content": "参照 ハードウェアビデオアクセラレーション\n\n--hwdec=API オプションを使用すると、ハードウェア アクセラレーションによるビデオ デコードを利用できます。サポートされているすべての API とその他の必要なオプションのリストについては、mpv(1) § hwdec を参照してください。\n\n永続的にするには (たとえば、デスクトップ環境からビデオを再生する場合)、設定ファイルに追加します。\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\nhwdec=auto\n```\n\nビデオフィルタで CPU 処理を許可するには、*-copy API を選択します。\n\nハードウェアアクセラレーションのトラブルシューティングを行うには、ログレベルの調整 (mpv(1) § msg-level を参照) が必要になる場合があります。たとえば、--msg-level=vd=v,vo=v,vo/gpu/vaapi-egl=trace は次を有効にします。\n\n- ビデオデコーダ (vd) とビデオ出力 (vo) モジュールからの Verbose メッセージです。\n- ビデオデコードを担当するモジュールについて、さらに詳細なtraceメッセージを表示します。ここでは、ログレベルを調整せずに mpv を一度実行した後、興味のあるモジュールは経験的に vo/gpu/vaapi-egl であると判断されました。\n\n"
    },
    {
      "title": "縦横比をすばやく切り替える",
      "level": 4,
      "content": "Shift+a を使用して縦横比を切り替えることができます。\n\n"
    },
    {
      "title": "アスペクト比を無視する",
      "level": 4,
      "content": "--keepaspect=no を使うことでアスペクト比を無視できます。オプションを永続的にしたい場合、設定ファイルに keepaspect=no という行を追加してください。\n\n"
    },
    {
      "title": "ルートウィンドウに描画",
      "level": 4,
      "content": "--wid=0 を付けて mpv を実行してください。これによって mpv はウィンドウ ID が 0 のウィンドウに描画するようになります。\n\n"
    },
    {
      "title": "アプリケーション ウィンドウを常に表示する",
      "level": 4,
      "content": "コマンドラインから mpv を起動したときに、オーディオファイルでもアプリケーションウィンドウを表示するには、--force-window オプションを使用します。このオプションを永続的に使用するには、設定ファイルに force-window=yes という行を追加してください。\n\n"
    },
    {
      "title": "ビデオ出力を無効にする",
      "level": 4,
      "content": "コマンドラインからの起動時にビデオ出力を無効にするには、--vid=no オプション、またはその別名である --no-video を使用します。\n\n"
    },
    {
      "title": "ターミナルビデオ",
      "level": 4,
      "content": "- --vo=tct \"テキストコンソールで動作するカラー Unicode アートビデオ出力ドライバー\"\n- --vo=caca \"テキストコンソールで動作するカラーアスキーアートのビデオ出力ドライバ\" libcaca のサポートは脆弱性のために Arch では無効になっています (FS#70962 を参照) が、問題は修正されたにも関わらずまだ元に戻されていません: mpv-cacaAUR をインストールしてください。\n\n"
    },
    {
      "title": "ボリュームが小さすぎる",
      "level": 4,
      "content": "設定ファイルに volume-max=value を設定して volume-max=600 など然るべき値にしてください。さらに (または)、af=acompressor でダイナミックレンジ圧縮を利用することもできます。\n\n"
    },
    {
      "title": "オーディオ出力を指定する",
      "level": 4,
      "content": "次のコマンドを実行して、使用可能なオーディオ出力デバイスのリストを取得します\n\n```\n$ mpv --audio-device=help\n```\n\n次に、~/.config/mpv/mpv.conf に1つ追加します。例えば:\n\n```\naudio-device=alsa/hdmi:CARD=NVidia,DEV=1\n```\n\n"
    },
    {
      "title": "HD オーディオパススルー",
      "level": 4,
      "content": "TrueHD や DTS-MA などの HD オーディオコーデックを AV レシーバーにパススルーできるようにするには、次を ~/.config/mpv/mpv.conf に追加します。\n\n```\naudio-spdif=ac3,eac3,dts-hd,truehd\n```\n\n"
    },
    {
      "title": "ボリューム標準化",
      "level": 4,
      "content": "ソースが異なれば音量が異なるか、一貫性がない可能性があるため、mpv ユーザーは自動音量標準化を設定する必要がある場合があります。例えば:\n\n```\n~/.config/mpv/input.conf\n```\n\n```\nn cycle_values af loudnorm=I=-30 loudnorm=I=-15 anull\n```\n\nこれはキー n をバインドして、オーディオフィルタ設定 (af) を指定された値で循環させます。\n\n- loudnorm=I=-30: I=-30の loudnorm 設定、ソフトボリューム、バックグラウンドミュージックに適している可能性があります\n- loudnorm=I=-15: より大きな音量、現在表示されているビデオには適している可能性があります\n- anull: オーディオフィルタを null にリセットします。つまり、オーディオフィルタを無効にします。\n\nmpv の音声フィルタリングは、FFmpeg バックエンドによって提供されます。詳細については、Wikipedia:EBU R 128 および ffmpeg Loudnorm フィルター を参照してください。\n\nさまざまなオプションについて言及しているアップストリームの問題 [3] および [4] も参照してください。\n\n"
    },
    {
      "title": "Lua スクリプトを使用して mpv を音楽プレーヤーとして改善する",
      "level": 4,
      "content": "このブログ投稿 では music.lua このスクリプトを使用して mpv を音楽プレーヤーとして改善する方法を紹介しています。\n\n"
    },
    {
      "title": "停止した位置からの自動レジューム再生",
      "level": 3,
      "content": "動画の現在の位置を保存して mpv を終了するデフォルトのキーは Shift+q です。このキーはキーバインドの設定ファイルに quit_watch_later を追加することで変更できます。\n\nプレイヤーの終了時に自動的に現在の再生位置を保存したい場合、--save-position-on-quit フラグを付けて mpv を起動してください。オプションを永続化させるには、設定ファイルに save-position-on-quit という行を追加します。\n\n"
    },
    {
      "title": "プレイリストの位置を保存して次のファイルで一時停止",
      "level": 4,
      "content": "プレイリストは単にファイルのリストである可能性があります。mpv(1) を参照してください。 プレイリストを再生してその位置を記憶するには:\n\n```\n$ mpv --save-position-on-quit --pause --reset-on-next-file=pause --playlist=/path/to/playlist\n```\n\nオプション --pause を使用すると、mpv は一時停止状態で開始され、 --reset-on-next-file=pause は、次のファイルに切り替えるときに一時停止モードをリセットします。\n\n"
    },
    {
      "title": "DVD を再生する",
      "level": 3,
      "content": "mpv は DVD メニューをサポートしていません。ビデオ DVD の最も長いタイトルでメインストリームを開始するには、次のコマンドを使用します。\n\n```\n$ mpv dvd://\n```\n\nオプションのタイトル指定子は、DVD 上の個別のビデオストリームを選択する番号 (0 から始まる) です。\n\n```\n$ mpv dvd://[title]\n```\n\nローカルファイルシステムに (dvdbackup ツールなどによって) コピーされた DVD は、ローカルコピーへのパスを指定することによって収容されます: --dvd-device=PATH\n\nローカルファイルシステムから DVD を再生するための次の デスクトップファイル の例を参照してください。\n\n```\n[Desktop Entry]\nType=Application\nName=mpv Media Player DVD \nGenericName=Multimedia player\nComment=Play movies and songs\nIcon=mpv\nExec=mpv dvd:// --player-operation-mode=pseudo-gui --force-window --idle --dvd-device=%f\nTerminal=false\nCategories=AudioVideo;Audio;Video;Player;TV;\n# (MimeType and X-KDE-Protocols omitted, see original mpv.desktop file)\n```\n\nExec 行を次のように置き換えます。\n\n```\nExec=mpv dvd://0 dvd://1 dvd://2 dvd://3 dvd://4 dvd://5 dvd://6 dvd://7 dvd://8 dvd://9  --player-operation-mode=pseudo-gui --force-window --idle --dvd-device=%f\n```\n\nmpv プレーヤーは、DVD タイトル 0〜9 をプレイリストにキューに入れます。これにより、ユーザーはタイトルを連続して再生したり、mpv GUI を使用して DVD タイトルを前後にジャンプしたりできます。\n\nlibdvdcss をインストールして、エラーを修正します。\n\n```\n[dvdnav] Error getting next block from DVD 1 (Error reading from DVD.)\n```\n\n"
    },
    {
      "title": "昔の OSC に戻す",
      "level": 3,
      "content": "バージョン 0.21.0 から、mpv のオンスクリーンコントールはボトムバーに置き換えられました。オンスクリーンコントール (OSC) に戻したい場合、こちら に書かれているように mpv の設定を編集してください。\n\n"
    },
    {
      "title": "再現可能なスクリーンショット",
      "level": 3,
      "content": "スクリーンショットテンプレートオプションには、スクリーンショットされたフレームの正確なタイムコード (HH:MM:SS.mmm) を含めることができます。意味のあるファイル名により、スクリーンショットの出所を簡単に知ることができます。次のように設定されています。\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\nscreenshot-template=\"%F - [%P]v%#01n\"\n```\n\nこれは次のように展開されます filename - [HH:MM:SS.mmm]vnumber.jpg 結果の例:\n\n```\nGunsmith Cats/\n├── Gunsmith Cats - 01 - [00:00:50.217]v1.jpg\n├── Gunsmith Cats - 01 - [00:22:55.874]v1.jpg\n├── Gunsmith Cats - 02 - [00:12:09.729]v1.jpg\n├── Gunsmith Cats - 02 - [00:12:09.729]v2.jpg\n├── Gunsmith Cats - 02 - [00:15:05.778]v1.jpg\n└── Gunsmith Cats - 03 - [00:03:20.001]v1.jpg\n```\n\nおまけに、タイムコードはエピソード番号内でアルファベット順にソートされるため、うまくソートされます。\n\n詳細については、こちらを参照 mpv(1) § screenshot-template\n\n"
    },
    {
      "title": "スクリーンショットの作成",
      "level": 3,
      "content": "再生時間を指定してスクリーンショットを作成するには (HH:MM:SS):\n\n```\n$ mpv --no-audio --start=00:01:30 --frames=1 /path/to/video/file --o=/path/to/screenshot.png\n```\n\nスクリーンショットは /path/to/screenshot.png として保存されます。\n\n"
    },
    {
      "title": "mpv 経由の Twitch.tv ストリーミング",
      "level": 4,
      "content": "youtube-dl がインストールされている場合、mpv は Twitch ライブストリームを直接開くことができます。\n\nまたは、Streamlink#Twitch を参照してください。\n\nLivestreamer に基づく別の代替手段は、次の Lua スクリプトです: https://gist.github.com/ChrisK2/8701184fe3ea7701c9cc\n\n"
    },
    {
      "title": "youtube-dl とフォーマットの選択",
      "level": 4,
      "content": "デフォルトの --ytdl-format は bestvideo+bestaudio/best です。4K 解像度が利用可能な YouTube ビデオの場合、接続されているモニターの解像度がはるかに低い場合、デバイスがソフトウェアで 4K VP9 エンコードされたビデオをデコードするのに苦労する可能性があります。\n\nただし、適切な youtube-dl 形式セレクターを設定すると、これを簡単に修正できます。次の構成例では、垂直解像度が 1080 ピクセル以下のビデオのみが考慮されます。\n\n```\nytdl-format=\"bestvideo[height<=?1080]+bestaudio/best\"\n```\n\nハードウェアでデコードできないために特定のコーデックを完全に回避したい場合は、これをフォーマットセレクターに追加できます。たとえば、次のように VP9 を無視することも選択できます。\n\n```\nytdl-format=\"bestvideo[height<=?1080][vcodec!=vp9]+bestaudio/best\"\n```\n\n最高品質のオープンコーデック (VP9 および Opus) を使用する場合は、次を使用します。\n\n```\nytdl-format=\"((bestvideo[vcodec^=vp9]/bestvideo)+(bestaudio[acodec=opus]/bestaudio[acodec=vorbis]/bestaudio[acodec=aac]/bestaudio))/best\"\n```\n\n"
    },
    {
      "title": "youtube-dl オーディオと検索",
      "level": 4,
      "content": "yta search terms を使用してターミナル エミュレーターから音声を検索してストリーミングするには、次の関数を .bashrc に追加します。\n\n```\nfunction yta() {\n    mpv --ytdl-format=bestaudio ytdl://ytsearch:\"$*\"\n}\n```\n\n"
    },
    {
      "title": "ブラウザのプラグインとして使用",
      "level": 4,
      "content": "mozpluggerAUR の助けを借りて、サポートされているブラウザで mpv を使用してビデオを再生できます。設定の詳細については、ブラウザプラグイン#マルチメディアの再生 を参照してください。これを ViewTube などのユーザー スクリプトと組み合わせると、サイトの統合ビデオ プレーヤーの代わりに mpv を使用できます。\n\nHTTP ストリーミング用の有効なユーザー エージェントを指定する必要がある場合があります。例えば、user-agent=\"Mozilla/5.0 (X11; Linux x86_64; rv:49.0) Gecko/20100101 Firefox/49.0\"\n\nブラウザプラグイン#マルチメディアの再生 ページには、ビデオを視聴する他の簡単な方法が示されています。\n\n"
    },
    {
      "title": "KDE クリップボードからビデオのリンクを開く",
      "level": 4,
      "content": "youtube-dl または yt-dlp がインストールされ、KDE Plasma が使用されている場合、KDE ​​クリップボードにカスタムアクションを作成して、リンクを便利に再生できます。\n\n1. クリップボード設定メニューを開き (通常はシステムトレイのアイコンを右クリックして)、\"アクション\" タブに移動します。\n1. \"アクションを追加\" をクリックし、動画を再生するサイトを検出するための正規表現を入力します (例: ^http.+(youtu|twitch) で YouTube と Twitch の URL を検出します)\n1. \"コマンドの追加\" をクリックし、\"コマンド\" の下に mpv %s と入力し、\"説明\" の下に mpv と入力します。\n\nこれで、Ctrl+Alt+r を押してコンテキスト メニューから mpv を選択すると、mpv でクリップボードからビデオリンクを再生できます。詳細設定 に移動し、\"タイプ WM_CLASS の Windows のアクションを無効にする\" セクションから Firefox を削除する必要がある場合があります。\n\n"
    },
    {
      "title": "一般的なデバッグ",
      "level": 3,
      "content": "mpv の再生に問題がある場合 (またはフラットアウトが実行できない場合) は、最初に次の3つのことを行う必要があります。\n\n1. コマンドラインから mpv を実行します (-vフラグは冗長性を高めます) 。運が良ければ、そこに何が間違っているかを知らせるエラーメッセージが表示されます。$mpv -v video.mkv\n1. mpv のログファイルを出力します。ログファイルをふるいにかけるのは難しいかもしれませんが、何かが壊れている場合は、ログファイルを見ることができます。$ mpv -v --log-file=./log video.mkv\n1. 設定なしで mpv を実行します。これがうまく動作するなら、問題は設定のどこかにあります $mpv--no-config video.mkv\n\nmpv が実行されても正常に実行されない場合は、 mpv-stats スクリプトをインストールして、そのスクリプトの実行状況を確認することをお勧めします。\n\n"
    },
    {
      "title": "再生が途切れたりティアリングが発生する",
      "level": 3,
      "content": "OpenGL をサポートしているハードウェアを使っている場合 mpv はデフォルトで OpenGL ビデオ出力デバイスを使用します。Intel HD4XXX シリーズなどのカードで 4K ディスプレイに動画を映そうとすると、動画の再生が不安定になって一時的に止まってしまったり盛大にティアリングが発生することがあります。そのような問題が起こる場合、XV (XVideo) ビデオ出力デバイスを使うことで解決できるかもしれません:\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\nprofile=xv\n```\n\nまた、(低性能なハードウェアで) 再生のパフォーマンスを改善するかわりに、動画の品質が著しく落ちるという問題もあります。\n\n動画の再生性能を高めるオプションとして以下のようなものもあります:\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\nvd-lavc-fast\nvd-lavc-skiploopfilter=<skipvalue>\nvd-lavc-skipframe=<skipvalue>\nvd-lavc-framedrop=<skipvalue>\nvd-lavc-threads=<threads>\n```\n\nmpv 0.35.0 以降、一部の古い Intel プロセッサでは、ダイレクトレンダリングをオフにしないとフレームがドロップします [5]:\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\nvd-lavc-dr=no\n```\n\n"
    },
    {
      "title": "ウィンドウコンポジタの問題",
      "level": 3,
      "content": "KWin や Mutter などのウィンドウコンポジタは、再生の滑らかさに問題を引き起こす可能性があります。このような場合は、x11-bypass-compositor=yes を設定して、ウィンドウモードでの再生時にウィンドウの合成も無効にすると便利です (合成機能がサポートしている場合) 。\n\nKWin の合成とハードウェアデコードでは、 x11-bypass-compositor=no を設定して合成をフルスクリーンで有効にしておくこともできます。フルスクリーンから離れた後で合成を再有効にすると、しばらくの間、stutter が発生する可能性があります。\n\n"
    },
    {
      "title": "ボリュームバーがないため、ボリュームを変更できません",
      "level": 3,
      "content": "マウスホイールをボリュームアイコンの上で回転させます。\n\n"
    },
    {
      "title": "GNOME Blank スクリーン (Wayland)",
      "level": 3,
      "content": "Wayland を使用している場合、mpvは GNOME の省電力設定を一時停止できません。その結果、ビデオの再生中にスクリーンセーバーがモニターをオフにします。この問題を回避するには、 mpv.desktop の Exec= 行の先頭に gnome-session-inhibit を追加します。\n\n再生中のみスクリーンセーバーを禁止するには、mpv_inhibit_gnomeAUR を使用します。あるいは、gnome-session-inhibit に基づく mpv lua スクリプト を使用することもできます。\n\n"
    },
    {
      "title": "GNOME Wayland でカーソルテーマが適用されない",
      "level": 3,
      "content": "Wayland には一意の設定ファイルがないため、クライアントは異なるカーソルテーマを表示できます。カーソルテーマの場合、 Qt アプリケーションは通常、 環境変数 XCURSOR_THEME に設定された値を受け入れます。ただし、 mpv の特定のケースでは、表示されるカーソル・テーマは ~/.icons/default/index.theme で設定したものである必要があります。 GNOME Tweaks でカーソルテーマを変更する場合、 GNOME はこのファイルを更新しないので、手動で行う必要があります。詳細については、 XDG の仕様 を参照してください。\n\n"
    },
    {
      "title": "AMD GPU で CUDA ライブラリが見つからないというエラーメッセージ",
      "level": 3,
      "content": "v0.34.1 以前のバージョンの AMD GPU で VAAPI ハードウェア アクセラレーションを使用しているときに、Cannot load libcuda.so.1 と表示される場合、gpu-hwdec-interop=vaapi を設定することで抑制できます。\n\n関連するバグレポート: Github issue #9691、Github issue #8765\n\nこの問題は、アップストリームで修正されました。pull request #9842\n\n"
    },
    {
      "title": "PipeWire がマスクされているとオーディオが再生されない",
      "level": 3,
      "content": "PipeWire が マスク されているシステムで mpv がクラッシュするかオーディオの再生に失敗し、出力がないかパイプが壊れていると報告する場合は、--ao オプションを設定してください。永続的な構成のために mpv.conf に設定して下さい。\n\n"
    },
    {
      "title": "mpv でファイルから DVD の再生ができない",
      "level": 3,
      "content": "mpv がプレーンな VIDEO_TS/VOB 構造のファイルから DVD を再生できない場合は、再生位置の復元機能に問題がある可能性があります。.config/mpv/watch_later フォルダをクリーニングするか、no-resume-playback オプションを指定して mpv を起動するか、save-position-on-quit=no オプションを設定してください。\n\n"
    },
    {
      "title": "一時停止から再開した後再生が途切れるのを修正",
      "level": 3,
      "content": "PulseAudio でビデオが途切れる場合は、mpv(1) § --pulse-latency-hacks で説明されている pulse-latency-hacks オプションを試してください。:\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\npulse-latency-hacks=yes\n```\n\n"
    }
  ]
}
{
  "title": "Polkit (Русский)",
  "url": "https://wiki.archlinux.org/title/Polkit_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Устранение часто встречающихся неполадок#Разрешения сессии\n- sudo (Русский)\n- Пользователи и группы\n\nВыдержка из домашней страницы polkit:\n\nPolkit используется для управления общесистемными привилегиями. Данный фреймворк используется для предоставления непривилегированным процессам возможность выполнения действий, требующих прав администратора. В отличие от sudo, Polkit не наделяет процесс правами суперпользователя, а позволяет точно контролировать, какие действия разрешены, а какие нет.\n\nPolkit может контролировать отдельные действия, такие как запуск GParted: при этом он проверяет имя пользователя и принадлежность оного к группе, например, является ли он членом группы wheel. Далее Polkit проверяет, какими правами наделены пользователи данной группы (есть ли вообще права на запуск?) и, если всё сходится (пользователь в нужной группе и у группы есть соответствующие права), требует ввести пароль для идентификации пользователя.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет polkit.\n\n"
    },
    {
      "title": "Агенты аутентификации",
      "level": 3,
      "content": "Агент аутентификации используется для подтверждения того, что пользователь текущего сеанса действительно является этим пользователем (путём ввода пароля текущего пользователя) или администратором (путём ввода пароля администратора). Пакет polkit содержит текстовый агент аутентификации, 'pkttyagent', который используется в качестве запасного варианта.\n\nЕсли вы пользуетесь графической оболочкой, убедитесь, что установлен графический агент аутентификации и что он автоматически запускается при входе в систему.\n\nCinnamon, Deepin, GNOME, GNOME Flashback, KDE, LXDE, LXQt, MATE, theShell и Xfce уже имеют в своём составе агенты аутентификации. В других графических окружениях вы можете выбрать одну из реализаций:\n\n- lxqt-policykit, который предоставляет /usr/bin/lxqt-policykit-agent\n- lxsession или lxsession-gtk3, который предоставляет /usr/bin/lxpolkit\n- mate-polkit, который предоставляет /usr/lib/mate-polkit/polkit-mate-authentication-agent-1\n- polkit-efl-gitAUR[ссылка недействительна: package not found], который предоставляет /usr/bin/polkit-efl-authentication-agent-1\n- polkit-gnome, который предоставляет /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1\n- polkit-kde-agent, который предоставляет /usr/lib/polkit-kde/polkit-kde-authentication-agent-1\n- ts-polkitagentAUR, который предоставляет /usr/lib/ts-polkitagent\n- xfce-polkitAUR или xfce-polkit-gitAUR, который предоставляет /usr/lib/xfce-polkit/xfce-polkit\n- polkit-dumb-agent-gitAUR[ссылка недействительна: package not found], минималистичный агент, который предоставляет /usr/bin/polkit-dumb-agent\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "Определения Polkit можно разделить на два вида:\n\n- Действия (actions) определены в XML-файлах .policy, расположенных в каталоге /usr/share/polkit-1/actions. Каждое действие имеет набор разрешений по умолчанию (например, для действия GParted нужно идентифицироваться как администратор). Значения по умолчанию можно переопределить, но редактирование этих файлов НЕ является правильным способом.\n- Правила авторизации (authorization rules) определены в JavaScript-файлах .rules. Их можно найти в двух местах: пакеты могут использовать /usr/share/polkit-1/rules.d (хотя мало кто это делает), а /etc/polkit-1/rules.d предназначен для локальных настроек.\n\nPolkit работает поверх существующих систем разрешений в Linux — членство в группах, статус администратора — он не заменяет их. Файлы .rules определяют подмножество пользователей, ссылаются на одно (или несколько) действий, указанных в файлах actions, и определяют, с какими ограничениями эти действия могут быть выполнены этими пользователями. Например, файл правил может отменить стандартное требование для всех пользователей проходить аутентификацию в качестве администратора при использовании GParted, определив, что некоторым конкретным пользователям это не нужно. Другой пример: определённому пользователю вообще не разрешено использовать GParted.\n\n"
    },
    {
      "title": "Действия",
      "level": 3,
      "content": "Действия, доступные вам через polkit, зависят от установленных пакетов. Некоторые из них используются в нескольких средах рабочего стола (org.freedesktop.*), некоторые специфичны для конкретной среды рабочего стола (org.gnome.*), а некоторые специфичны для одной программы (org.gnome.gparted.policy). Команда pkaction выводит список всех действий, определённых в /usr/share/polkit-1/actions.\n\nЧтобы получить представление о том, что может делать polkit, вот несколько часто используемых групп действий:\n\n- systemd-logind (org.freedesktop.login1.policy): выключение и перезагрузка системы, уход в ждущий и спящий режим, в том числе когда присутствуют другие пользователи.\n- udisks (org.freedesktop.udisks2.policy): монтирование файловых систем, разблокировка зашифрованных устройств.\n- NetworkManager (org.freedesktop.NetworkManager.policy): включение и выключение сети, wifi или мобильного широкополосного доступа.\n\nКаждое действие определяется в теге <action> в файле .policy. Например, файл org.gnome.gparted.policy содержит одно действие и выглядит примерно так:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE policyconfig PUBLIC\n \"-//freedesktop//DTD PolicyKit Policy Configuration 1.0//EN\"\n \"http://www.freedesktop.org/software/polkit/policyconfig-1.dtd\">\n<policyconfig>\n\n  <action id=\"org.gnome.gparted\">\n    <message>Authentication is required to run the GParted Partition Editor as root</message>\n    <message xml:lang=\"ru\">Требуется авторизация для запуска редактора разделов GParted с правами root</message>\n    <icon_name>gparted</icon_name>\n    <defaults>\n      <allow_any>auth_admin</allow_any>\n      <allow_inactive>auth_admin</allow_inactive>\n      <allow_active>auth_admin</allow_active>\n    </defaults>\n    <annotate key=\"org.freedesktop.policykit.exec.path\">/usr/bin/gparted</annotate>\n    <annotate key=\"org.freedesktop.policykit.exec.allow_gui\">true</annotate>\n  </action>\n\n</policyconfig>\n```\n\nАтрибут id — это фактическая команда, посылаемая в D-Bus, тег message — это объяснение пользователю, когда требуется аутентификация, а icon_name — это вроде как очевидно.\n\nТег defaults — это место, в котором указаны разрешения или их отсутствие. Он содержит три параметра: allow_any, allow_inactive и allow_active. Неактивные сеансы — это, как правило, удалённые сеансы (SSH, VNC и т.д.), в то время как активные — это вход, выполненный непосредственно на машине через TTY или X. allow_any — это настройка, охватывающая оба сценария.\n\nДля каждого из этих параметров доступны следующие опции:\n\n- no: Пользователю не разрешено выполнять действие. Поэтому нет необходимости в аутентификации.\n- yes: Пользователь может выполнять действие без какой-либо аутентификации.\n- auth_self: Аутентификация требуется, но пользователь не обязательно должен быть администратором.\n- auth_admin: Требуется аутентификация в качестве администратора.\n- auth_self_keep: То же самое, что и auth_self, но, подобно sudo, авторизация сохраняется на несколько минут.\n- auth_admin_keep: То же самое, что и auth_admin, но, подобно sudo, авторизация сохраняется на несколько минут.\n\nЭто настройки по умолчанию, и если они не будут переопределены в других настройках, они будут действовать на всех пользователей.\n\nВ приведённом выше примере действия GParted пользователи должны аутентифицироваться как администраторы, чтобы использовать GParted, независимо от того, является ли сеанс активным или неактивным.\n\n"
    },
    {
      "title": "Правила авторизации",
      "level": 3,
      "content": "Правила авторизации, переопределяющие настройки по умолчанию, располагаются в указанных выше каталогах. Для всех целей, связанных с персональной конфигурацией одной системы, следует использовать только /etc/polkit-1/rules.d.\n\nМетод addRule() используется для добавления функции, которая может вызываться всякий раз, когда выполняется проверка авторизации действия и субъекта. Функции вызываются в том порядке, в котором они были добавлены, пока одна из функций не вернёт значение. Таким образом, чтобы добавить правило авторизации, которое обрабатывается раньше других правил, в каталоге /etc/polkit-1/rules.d создайте файл с именем, которое при сортировке расположится перед другими файлами правил, например 00-early-checks.rules.\n\nСтруктура файлов .rules достаточно понятна:\n\n```\n/* Разрешить пользователям из группы admin запускать GParted без аутентификации */\npolkit.addRule(function(action, subject) {\n    if (action.id == \"org.gnome.gparted\" &&\n        subject.isInGroup(\"admin\")) {\n        return polkit.Result.YES;\n    }\n});\n```\n\nВнутри функции проверяется ID запрошенного действия (org.gnome.gparted) и группы пользователя (admin), и при выполнении условий возвращается значение \"yes\".\n\n"
    },
    {
      "title": "Определение администраторов",
      "level": 3,
      "content": "Метод addAdminRule() используется для добавления функции, которая может быть вызвана, когда требуется аутентификация администратора. Функция указывает, какие идентификаторы могут быть использованы для аутентификации администратора при проверке авторизации, определяемой действием и субъектом. Добавленные функции вызываются в том порядке, в котором они были добавлены, пока одна из функций не вернёт значение.\n\nКонфигурация по умолчанию находится в файле 50-default.rules, поэтому, если вы хотите изменить эти настройки, нужно скопировать его, к примеру, в файл 40-default.rules и редактировать уже его.\n\n```\n/etc/polkit-1/rules.d/50-default.rules\n```\n\n```\npolkit.addAdminRule(function(action, subject) {\n    return [\"unix-group:wheel\"];\n});\n```\n\nЕдинственная часть, которую нужно отредактировать (после копирования), — это возвращаемый массив: в качестве кого должен аутентифицироваться пользователь, когда нужна аутентификация администратора? Если пользователь является членом группы, члены которой считаются администраторами, то ему нужно будет ввести только свой пароль. Если какой-то другой пользователь, например, root, является единственным администратором, то нужно будет ввести пароль root. Формат идентификации пользователя такой же, как и при назначении полномочий.\n\nПо умолчанию Arch делает всех членов группы wheel администраторами. Показанный ниже пример правила заставит polkit запрашивать пароль root вместо пароля обычного пользователя для аутентификации в качестве администратора.\n\n```\n/etc/polkit-1/rules.d/49-rootpw_global.rules\n```\n\n```\n/* Всегда выполняем аутентификацию администраторов путём\n * запроса пароля root, аналогично опции rootpw в sudo\n */\npolkit.addAdminRule(function(action, subject) {\n    return [\"unix-user:root\"];\n});\n```\n\n"
    },
    {
      "title": "Отладка/журналирование",
      "level": 3,
      "content": "Следующее правило записывает подробную информацию о любом запрошенном доступе.\n\n```\n/etc/polkit-1/rules.d/00-log-access.rules\n```\n\n```\npolkit.addRule(function(action, subject) {\n    polkit.log(\"action=\" + action);\n    polkit.log(\"subject=\" + subject);\n});\n```\n\n"
    },
    {
      "title": "Отключение ждущего и спящего режима",
      "level": 3,
      "content": "Следующее правило отключает ждущий и спящий режим для всех пользователей.\n\n```\n/etc/polkit-1/rules.d/10-disable-suspend.rules\n```\n\n```\npolkit.addRule(function(action, subject) {\n    if (action.id == \"org.freedesktop.login1.suspend\" ||\n        action.id == \"org.freedesktop.login1.suspend-multiple-sessions\" ||\n        action.id == \"org.freedesktop.login1.hibernate\" ||\n        action.id == \"org.freedesktop.login1.hibernate-multiple-sessions\")\n    {\n        return polkit.Result.NO;\n    }\n});\n```\n\n"
    },
    {
      "title": "Отключение запроса пароля",
      "level": 3,
      "content": "Чтобы добиться чего-то похожего на опцию NOPASSWD из sudo и получить авторизацию только на основе идентификации пользователя/группы, вы можете создать пользовательские правила в /etc/polkit-1/rules.d/. Это позволит вам отменить аутентификацию по паролю либо только для определённых действий, либо глобально. Пример набора правил можно посмотреть здесь: [1]\n\n"
    },
    {
      "title": "Глобально",
      "level": 4,
      "content": "Создайте следующий файл от имени root:\n\n```\n/etc/polkit-1/rules.d/49-nopasswd_global.rules\n```\n\n```\n/* Разрешить членам группы wheel выполнять любые действия\n * без проверки пароля, аналогично \"sudo NOPASSWD:\"\n */\npolkit.addRule(function(action, subject) {\n    if (subject.isInGroup(\"wheel\")) {\n        return polkit.Result.YES;\n    }\n});\n```\n\nЗамените wheel на любую нужную вам группу.\n\nВ итоге аутентификация будет пройдена для любых действий, запрашивающих права администратора через Polkit. Поэтому будьте осторожны с группой, которой вы решили дать такие права.\n\nСуществует также AUTH_ADMIN_KEEP, который позволяет сохранять авторизацию в течение 5 минут. Однако авторизация происходит для каждого процесса отдельно, следовательно, если один процесс запросит авторизацию в течение 5 минут, то другой процесс в любом случае запросит пароль снова.\n\n"
    },
    {
      "title": "Для определённых действий",
      "level": 4,
      "content": "Создайте следующий файл от имени root:\n\n```\n/etc/polkit-1/rules.d/49-nopasswd_limited.rules\n```\n\n```\n/* Разрешить членам группы wheel выполнять определённые действия\n * без проверки пароля, аналогично \"sudo NOPASSWD:\"\n */\npolkit.addRule(function(action, subject) {\n    if ((action.id == \"org.gnome.gparted\" ||\n\t action.id == \"org.libvirt.unix.manage\") &&\n        subject.isInGroup(\"wheel\"))\n    {\n        return polkit.Result.YES;\n    }\n});\n```\n\nВыбранные здесь action.id являются лишь (рабочими) примерами для GParted и libvirt, но вы можете заменить их на любые другие по вашему вкусу, если они существуют (сделанные самостоятельно или поставляемые пакетом), также вы можете определить любую другую группу вместо wheel.\n\nОператор || используется для разграничения действий (логическое ИЛИ), а && означает логическое И и должен использоваться как последний оператор.\n\n"
    },
    {
      "title": "Udisks",
      "level": 4,
      "content": "Файловые менеджеры могут запрашивать пароль при попытке смонтировать устройство хранения или выдавать ошибку Not authorized или похожую. Подробности смотрите в статье udisks (Русский)#Настройка.\n\n"
    },
    {
      "title": "Разрешить управление отдельными юнитами systemd обычным пользователям",
      "level": 3,
      "content": "Можно предоставить определённым пользователям или группам возможность управлять определёнными юнитами. Например, вы можете захотеть, чтобы обычные пользователи могли запускать и останавливать wpa_supplicant:\n\n```\n/etc/polkit-1/rules.d/10-wifimanagement.rules\n```\n\n```\npolkit.addRule(function(action, subject) {\n    if (action.id == \"org.freedesktop.systemd1.manage-units\") {\n        if (action.lookup(\"unit\") == \"wpa_supplicant.service\") {\n            var verb = action.lookup(\"verb\");\n            if (verb == \"start\" || verb == \"stop\" || verb == \"restart\") {\n                return polkit.Result.YES;\n            }\n        }\n    }\n});\n```\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Документация Polkit\n- Authorization with PolKit[устаревшая ссылка 2023-06-17 ⓘ] (openSUSE Leap Security guide)\n\n"
    }
  ]
}
{
  "title": "Polybar (Русский)",
  "url": "https://wiki.archlinux.org/title/Polybar_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "polybar — быстрый и лёгкий инструмент для создания статус-баров. Он нацелен на лёгкую персонализацию, используя множество модулей и позволяя, например, отображать рабочие столы, дату или громкость звука. Особенно Polybar полезен в оконных менеджерах без панели или с её ограниченной функциональностью, таких как awesome или i3. Polybar также можно использовать и в окружениях рабочего стола, например, в Plasma.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет polybar. Экспериментальная версия доступна в пакете polybar-gitAUR.\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "Скопируйте пример конфигурационного файла из /usr/share/doc/polybar/config в $XDG_CONFIG_HOME/polybar/config\n\n"
    },
    {
      "title": "Запуск Polybar",
      "level": 3,
      "content": "Polybar можно запустить со следующими параметрами:\n\n```\nUsage: polybar [OPTION]... BAR\n\n  -h, --help               Display this help and exit\n  -v, --version            Display build details and exit\n  -l, --log=LEVEL          Set the logging verbosity (default: WARNING)\n                           LEVEL is one of: error, warning, info, trace\n  -q, --quiet              Be quiet (will override -l)\n  -c, --config=FILE        Path to the configuration file\n  -r, --reload             Reload when the configuration has been modified\n  -d, --dump=PARAM         Print value of PARAM in bar section and exit\n  -m, --list-monitors      Print list of available monitors and exit\n  -w, --print-wmname       Print the generated WM_NAME and exit\n  -s, --stdout             Output data to stdout instead of drawing it to the X window\n  -p, --png=FILE           Save png snapshot to FILE after running for 3 seconds\n```\n\nНо скорее всего, вы будете запускать Polybar с оконным менеджером, см. раздел #Запуск с оконным менеджером.\n\n"
    },
    {
      "title": "Пример конфигурационного файла",
      "level": 3,
      "content": "Пример простого конфигурационного файла:\n\n```\n[bar/mybar]\nmodules-right = date\n\n[module/date]\ntype = internal/date\ndate = %Y-%m-%d%\n```\n\nОн создаёт статус-бар mybar с модулем date.\n\nТакже по умолчанию polybar создаёт пример со многими преднастроенными модулями в файле /usr/share/doc/polybar/config.\n\n"
    },
    {
      "title": "Запуск с оконным менеджером",
      "level": 3,
      "content": "Создайте исполняемый файл, содержащий процесс загрузки, например, $HOME/.config/polybar/launch.sh:\n\n```\n#!/bin/bash\n\n# Завершить текущие экземпляры polybar\nkillall -q polybar\n\n# Ожидание полного завершения работы процессов\nwhile pgrep -u $UID -x polybar >/dev/null; do sleep 1; done\n\n# Запуск Polybar со стандартным расположением конфигурационного файла в ~/.config/polybar/config\npolybar mybar &\n\necho \"Polybar загрузился...\"\n```\n\nДанный скрипт означает, что при перезагрузке оконного менеджера также перезагрузится и Polybar.\n\n"
    },
    {
      "title": "bspwm",
      "level": 4,
      "content": "Если вы используете bspwm, добавьте в bspwmrc:\n\n```\n$HOME/.config/polybar/launch.sh\n```\n\n"
    },
    {
      "title": "i3",
      "level": 4,
      "content": "Если вы используете i3, добавьте в его конфигурационный файл:\n\n```\nexec_always --no-startup-id $HOME/.config/polybar/launch.sh\n```\n\n"
    },
    {
      "title": "Cannot open shared object file libjsoncpp.so",
      "level": 3,
      "content": "Попробуйте переустановить Polybar, как описано в issue на GitHub.\n\nЕсли проблема не решится, попробуйте установить пакет jsoncpp.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Polybar Github Wiki\n\n"
    }
  ]
}
{
  "title": "Lm sensors (Русский)",
  "url": "https://wiki.archlinux.org/title/Lm_sensors_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Fan Speed Control (Русский)\n- hddtemp (Русский)\n- monitorix\n\nlm_sensors[устаревшая ссылка 2025-01-22 ⓘ] (Linux monitoring sensors) - свободное ПО, состоящее из драйверов и утилит, позволяющее отслеживать температуру, напряжение, скорости вращения вентиляторов в вашей системе. Следует помнить, что набор датчиков индивидуален для каждой системы, поэтому некоторые возможности могут быть недоступны.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет lm_sensors.\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "Используйте от суперпользователя sensors-detect для обнаружения и формирования списка модулей ядра:\n\n```\n# sensors-detect\n```\n\nВ результате будет создан конфигурационный файл /etc/conf.d/lm_sensors, используемый демоном sensors, который автоматически активируется ядром при загрузке. Программа будет задавать вопросы по различному железу. \"Безопасные\" ответы предусмотрены по умолчанию, так что слепое нажатие Enter на все вопросы не должно вызвать никаких проблем.\n\nПо окончанию определения датчиков будут доступны снимаемые ими значения.\n\nПример:\n\n```\n# sensors-detect\n```\n\n```\nThis program will help you determine which kernel modules you need\nto load to use lm_sensors most effectively. It is generally safe\nand recommended to accept the default answers to all questions,\nunless you know what you're doing.\n\nSome south bridges, CPUs or memory controllers contain embedded sensors.\nDo you want to scan for them? This is totally safe. (YES/no): \nModule cpuid loaded successfully.\nSilicon Integrated Systems SIS5595...                       No\nVIA VT82C686 Integrated Sensors...                          No\nVIA VT8231 Integrated Sensors...                            No\nAMD K8 thermal sensors...                                   No\nAMD Family 10h thermal sensors...                           No\n\n...\n\nNow follows a summary of the probes I have just done.\nJust press ENTER to continue: \n\nDriver `coretemp':\n  * Chip `Intel digital thermal sensor' (confidence: 9)\n\nDriver `lm90':\n  * Bus `SMBus nForce2 adapter at 4d00'\n    Busdriver `i2c_nforce2', I2C address 0x4c\n    Chip `Winbond W83L771AWG/ASG' (confidence: 6)\n\nDo you want to overwrite /etc/conf.d/lm_sensors? (YES/no): \nln -s '/usr/lib/systemd/system/lm_sensors.service' '/etc/systemd/system/multi-user.target.wants/lm_sensors.service'\nUnloading i2c-dev... OK\nUnloading cpuid... OK\n```\n\nNote: **YES** \n\n"
    },
    {
      "title": "Просмотр датчиков",
      "level": 2,
      "content": "Пример запуска sensors:\n\n```\n$ sensors\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:       +35.0°C  (crit = +105.0°C)\nCore 1:       +32.0°C  (crit = +105.0°C)\n\nw83l771-i2c-0-4c\nAdapter: SMBus nForce2 adapter at 4d00\ntemp1:        +28.0°C  (low  = -40.0°C, high = +70.0°C)\n                       (crit = +85.0°C, hyst = +75.0°C)\ntemp2:        +37.4°C  (low  = -40.0°C, high = +70.0°C)\n                       (crit = +110.0°C, hyst = +100.0°C)\n```\n\n"
    },
    {
      "title": "Добавление температурных датчиков модулей памяти",
      "level": 3,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nДля обнаружения температурных датчиков модулей памяти установите пакет i2c-tools. После установки загрузите i2c-dev модуль ядра.\n\n```\nmodprobe i2c-dev\n```\n\nЗатем найдём шины следующей командой:\n\n```\ni2cdetect -l\n```\n\nВывод будет примерно следующий:\n\n```\ni2c-1  smbus       SMBus PIIX4 adapter port 2 at 0b00  SMBus adapter\ni2c-2  smbus       SMBus PIIX4 adapter port 1 at 0b20  SMBus adapter\ni2c-0  smbus       SMBus PIIX4 adapter port 0 at 0b00  SMBus adapter\n```\n\nВ данном примере взята система, на которой планки памяти подключены к шине SMBus 0. Команд i2cdetect покажет устройства, которые подключены к шине. Аргумент \"-y 0\" означает использование i2c-0 smbus. Вы можете проверить другие шины, если необходимо.\n\n```\ni2cdetect -y 0\n```\n\nкоманда выдаст таблицу:\n\n```\n0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n00:                         -- -- -- -- 0c -- -- -- \n10: 10 -- -- -- -- -- -- -- 18 19 -- -- -- -- -- -- \n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n30: -- -- -- -- -- -- 36 -- -- -- -- -- -- -- -- -- \n40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 4f \n50: 50 51 -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n70: -- -- -- -- -- -- -- 77\n```\n\nSPD оперативной памяти начинается с адреса 0x50, температурные датчики ОЗУ начинаются с 0x18 на этой шине. В приведённой в пример системе доступно два DIMM. Соответственно, адреса температурных датчиков: 0x18 и 0x19.\n\nПосле нахождения этой информации для чтения температурных показаний с планок памяти нужно загрузить jc42 модуль ядра. После этого нужно сообщить модулю адреса, которые необходимо использовать, записав \"<название модуля> <адрес>\" в \"<путь> к smbus\".\n\n```\nmodprobe jc42\necho jc42 0x18 > /sys/bus/i2c/devices/i2c-0/new_device\necho jc42 0x19 > /sys/bus/i2c/devices/i2c-0/new_device\n```\n\nПосле этого температура ваших планок памяти будет видна по команде sensors\n\n```\njc42-i2c-0-19\nAdapter: SMBus PIIX4 adapter port 0 at 0b00\ntemp1:        +50.7°C  (low  =  +0.0°C)                  ALARM (HIGH, CRIT)\n                       (high =  +0.0°C, hyst =  +0.0°C)\n                       (crit =  +0.0°C, hyst =  +0.0°C)\n\njc42-i2c-0-18\nAdapter: SMBus PIIX4 adapter port 0 at 0b00\ntemp1:        +51.8°C  (low  =  +0.0°C)                  ALARM (HIGH, CRIT)\n                       (high =  +0.0°C, hyst =  +0.0°C)\n                       (crit =  +0.0°C, hyst =  +0.0°C)\n```\n\n"
    },
    {
      "title": "Считывание SPD-значений из памяти модулей (необязательно)",
      "level": 3,
      "content": "Чтобы получить значения таймингов SPD с модулей памяти, установите i2c-tools. После установки загрузите eeprom модуль ядра.\n\n```\n# modprobe eeprom\n```\n\nТеперь можно просмотреть значения с помощью decode-dimms.\n\nВот часть вывода с одной машины:\n\n```\n# decode-dimms\n```\n\n```\nMemory Serial Presence Detect Decoder\nBy Philip Edelbrock, Christian Zuckschwerdt, Burkart Lingner,\nJean Delvare, Trent Piepho and others\n\n\nDecoding EEPROM: /sys/bus/i2c/drivers/eeprom/0-0050\nGuessing DIMM is in                             bank 1\n\n---=== SPD EEPROM Information ===---\nEEPROM CRC of bytes 0-116                       OK (0x583F)\n# of bytes written to SDRAM EEPROM              176\nTotal number of bytes in EEPROM                 512\nFundamental Memory type                         DDR3 SDRAM\nModule Type                                     UDIMM\n\n---=== Memory Characteristics ===---\nFine time base                                  2.500 ps\nMedium time base                                0.125 ns\nMaximum module speed                            1066MHz (PC3-8533)\nSize                                            2048 MB\nBanks x Rows x Columns x Bits                   8 x 14 x 10 x 64\nRanks                                           2\nSDRAM Device Width                              8 bits\ntCL-tRCD-tRP-tRAS                               7-7-7-33\nSupported CAS Latencies (tCL)                   8T, 7T, 6T, 5T\n\n---=== Timing Parameters ===---\nMinimum Write Recovery time (tWR)               15.000 ns\nMinimum Row Active to Row Active Delay (tRRD)   7.500 ns\nMinimum Active to Auto-Refresh Delay (tRC)      49.500 ns\nMinimum Recovery Delay (tRFC)                   110.000 ns\nMinimum Write to Read CMD Delay (tWTR)          7.500 ns\nMinimum Read to Pre-charge CMD Delay (tRTP)     7.500 ns\nMinimum Four Activate Window Delay (tFAW)       30.000 ns\n\n---=== Optional Features ===---\nOperable voltages                               1.5V\nRZQ/6 supported?                                Yes\nRZQ/7 supported?                                Yes\nDLL-Off Mode supported?                         No\nOperating temperature range                     0-85C\nRefresh Rate in extended temp range             1X\nAuto Self-Refresh?                              Yes\nOn-Die Thermal Sensor readout?                  No\nPartial Array Self-Refresh?                     No\nThermal Sensor Accuracy                         Not implemented\nSDRAM Device Type                               Standard Monolithic\n\n---=== Physical Characteristics ===---\nModule Height (mm)                              15\nModule Thickness (mm)                           1 front, 1 back\nModule Width (mm)                               133.5\nModule Reference Card                           B\n\n---=== Manufacturer Data ===---\nModule Manufacturer                             Invalid\nManufacturing Location Code                     0x02\nPart Number                                     OCZ3G1600LV2G     \n\n...\n```\n\n"
    },
    {
      "title": "Графические фронтэнды",
      "level": 3,
      "content": "Существует множество разнообразных фронтэндов для отображения данных датчиков.\n\n- psensor — GTK приложение для отслеживания аппаратных датчиков, включая температуры и скорости вентиляторов. Отслеживает материнскую плату и центральный процессор (используя lm-sensors), Nvidia GPUs (используя XNVCtrl), и жёсткие диски (используя hddtemp или libatasmart).\n\n- xsensors — X11 интерфейс к lm_sensors.\n\nДля конкретной Desktop environments:\n\n- Freon (расширение GNOME Shell) — Расширение выводит на экран температуры ЦП, дисков, видеокарты, напряжения и оборотов вентилятора в GNOME Shell.\n\n- GNOME Sensors Applet — Апплет панели GNOME для отображения значений аппаратных датчиков, включая температуру ЦП, скорость вращения вентиляторов и вольтаж.\n\n- lm-sensors (LXPanel plugin) — Отслеживает температуру/вольтаж/скорости вентиляторов in LXDE с помощью lm-sensors.\n\n- MATE Sensors Applet — Отображает считанные значения аппаратных датчиков на вашей панели MATE.\n\n- Sensors (Xfce4 panel plugin) — Hardware sensors плагин для панели Xfce.\n\n- Thermal Monitor (Plasma 5 applet) — Апплет KDE Plasma для мониторинга CPU, GPU и других доступных датчиков температуры.\n\n"
    },
    {
      "title": "sensord",
      "level": 3,
      "content": "Существует дополнительный демон sensord (включен в пакет lm_sensors), позволяющий журналировать данные с сенсоров в кольцевые базы данных (rrd) для последующей визуализации. Смотрите ман sensord(8) для уточнения деталей.\n\n"
    },
    {
      "title": "Регулировка значений",
      "level": 3,
      "content": "В некоторых случаях отображаемые данные могут быть неверными или пользователи могут захотеть изменить вывод. К ним относятся:\n\n- Неправильные значения температуры из-за неправильного смещения (к примеру температура отображается на 20 ° C текущей).\n- Имеется потребность переименовать вывод для некоторых датчиков.\n- Ядра могут быть отображены в неправильном порядке.\n\nВсе вышеперечисленное (и многое другое) можно регулировать переопределив настройки программы, указанные в /etc/sensors3.conf путем создания файла /etc/sensors.d/foo, в котором можно будет переопределять любые настройки, используемые по умолчанию. Рекомендуется переименовать 'foo' в соответствии с серией и моделью материнской платы, однако строгость в названии не является обязательной.\n\n"
    },
    {
      "title": "Пример 1. Регулировка температурных смещений",
      "level": 4,
      "content": "Это реальный пример для системной платы Zotac ION-ITX-A-U. Значения coretemp смещены на 20 °C (более выше) и отрегулированы в соответствии со спецификацией Intel.\n\n```\n$ sensors\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:       +57.0°C  (crit = +125.0°C)\nCore 1:       +55.0°C  (crit = +125.0°C)\n...\n```\n\nЗапустим sensors с параметром -u, чтобы увидеть, какие параметры доступны для каждого физического чипа (сырой режим)\n\n```\n$ sensors -u\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:\n  temp2_input: 57.000\n  temp2_crit: 125.000\n  temp2_crit_alarm: 0.000\nCore 1:\n  temp3_input: 55.000\n  temp3_crit: 125.000\n  temp3_crit_alarm: 0.000\n...\n```\n\nСоздаем следующий файл для переопределения значений по умолчанию:\n\n```\n/etc/sensors.d/Zotac-IONITX-A-U\n```\n\n```\nchip \"coretemp-isa-0000\"\n  label temp2 \"Core 0\"\n  compute temp2 @-20,@-20\n\n  label temp3 \"Core 1\"\n  compute temp3 @-20,@-20\n```\n\nТеперь вызов sensors отобразит настроенные значения:\n\n```\n$ sensors\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:       +37.0°C  (crit = +105.0°C)\nCore 1:       +35.0°C  (crit = +105.0°C)\n...\n```\n\n"
    },
    {
      "title": "Пример 2. Переименование параметров",
      "level": 4,
      "content": "Это реальный пример для системной платы Asus A7M266. Требуется указать более подробные названия значений температуры 'temp1' and 'temp2':\n\n```\n$ sensors\n```\n\n```\nas99127f-i2c-0-2d\nAdapter: SMBus Via Pro adapter at e800\n...\ntemp1:        +35.0°C  (high =  +0.0°C, hyst = -128.0°C)\ntemp2:        +47.5°C  (high = +100.0°C, hyst = +75.0°C)\n...\n```\n\nСоздаем следующий файл, чтобы переопределить значения по умолчанию:\n\n```\n/etc/sensors.d/Asus_A7M266\n```\n\n```\nchip \"as99127f-*\"\n  label temp1 \"Mobo Temp\"\n  label temp2 \"CPU0 Temp\"\n```\n\nТеперь вызов sensors отобразит настроенные значения:\n\n```\n$ sensors\n```\n\n```\nas99127f-i2c-0-2d\nAdapter: SMBus Via Pro adapter at e800\n...\nMobo Temp:        +35.0°C  (high =  +0.0°C, hyst = -128.0°C)\nCPU0 Temp:        +47.5°C  (high = +100.0°C, hyst = +75.0°C)\n...\n```\n\n"
    },
    {
      "title": "Пример 3. Изменение нумерации ядер для многопроцессорных систем",
      "level": 4,
      "content": "Это реальный пример на HP Z600 workstation с двумя Xeon. Текущая нумерация физических ядер неверно: пронумерованы 0, 1, 9, 10, который повторяются во втором процессоре. Требуется получать значения температур ядер в последовательном порядке, т.е. 0,1,2,3,4,5,6,7.\n\n```\n$ sensors\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:       +65.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 1:       +65.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 9:       +66.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 10:      +66.0°C  (high = +85.0°C, crit = +95.0°C)\n\ncoretemp-isa-0004\nAdapter: ISA adapter\nCore 0:       +54.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 1:       +56.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 9:       +60.0°C  (high = +85.0°C, crit = +95.0°C)\nCore 10:      +61.0°C  (high = +85.0°C, crit = +95.0°C)\n...\n```\n\nОпять же, запустим sensors с параметром -u, чтобы увидеть, какие варианты доступны для каждого физического чипа:\n\n```\n$ sensors -u coretemp-isa-0000\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore 0:\n  temp2_input: 61.000\n  temp2_max: 85.000\n  temp2_crit: 95.000\n  temp2_crit_alarm: 0.000\nCore 1:\n  temp3_input: 61.000\n  temp3_max: 85.000\n  temp3_crit: 95.000\n  temp3_crit_alarm: 0.000\nCore 9:\n  temp11_input: 62.000\n  temp11_max: 85.000\n  temp11_crit: 95.000\nCore 10:\n  temp12_input: 63.000\n  temp12_max: 85.000\n  temp12_crit: 95.000\n```\n\n```\n$ sensors -u coretemp-isa-0004\n```\n\n```\ncoretemp-isa-0004\nAdapter: ISA adapter\nCore 0:\n  temp2_input: 53.000\n  temp2_max: 85.000\n  temp2_crit: 95.000\n  temp2_crit_alarm: 0.000\nCore 1:\n  temp3_input: 54.000\n  temp3_max: 85.000\n  temp3_crit: 95.000\n  temp3_crit_alarm: 0.000\nCore 9:\n  temp11_input: 59.000\n  temp11_max: 85.000\n  temp11_crit: 95.000\nCore 10:\n  temp12_input: 59.000\n  temp12_max: 85.000\n  temp12_crit: 95.000\n...\n```\n\nСоздадим следующий файл переопределения значения по умолчанию:\n\n```\n/etc/sensors.d/HP_Z600\n```\n\n```\nchip \"coretemp-isa-0000\"\n  label temp2 \"Core 0\"\n  label temp3 \"Core 1\"\n  label temp11 \"Core 2\"\n  label temp12 \"Core 3\"\n\nchip \"coretemp-isa-0004\"\n  label temp2 \"Core 4\"\n  label temp3 \"Core 5\"\n  label temp11 \"Core 6\"\n  label temp12 \"Core 7\"\n```\n\nТеперь вызов sensors отобразит настроенные значения:\n\n```\n$ sensors\n```\n\n```\ncoretemp-isa-0000\nAdapter: ISA adapter\nCore0:        +64.0°C  (high = +85.0°C, crit = +95.0°C)\nCore1:        +63.0°C  (high = +85.0°C, crit = +95.0°C)\nCore2:        +65.0°C  (high = +85.0°C, crit = +95.0°C)\nCore3:        +66.0°C  (high = +85.0°C, crit = +95.0°C)\n\ncoretemp-isa-0004\nAdapter: ISA adapter\nCore4:        +53.0°C  (high = +85.0°C, crit = +95.0°C)\nCore5:        +54.0°C  (high = +85.0°C, crit = +95.0°C)\nCore6:        +59.0°C  (high = +85.0°C, crit = +95.0°C)\nCore7:        +60.0°C  (high = +85.0°C, crit = +95.0°C)\n...\n```\n\n"
    },
    {
      "title": "Автоматизация развертывания lm_sensors",
      "level": 3,
      "content": "Если потребуется развернуть lm_sensors на нескольких машинах можно использовать следующую команду для принятия ответов по умолчанию на все вопросы:\n\n```\n# sensors-detect --auto\n```\n\n"
    },
    {
      "title": "Модуль K10Temp",
      "level": 3,
      "content": "У некоторых процессоров K10 имеются проблемы с датчиком температуры. Для получения подробностей смотрите документацию к k10temp.\n\nНа проблемных машинах модуль сообщит \"unreliable CPU thermal sensor; monitoring disabled\". Можно принудительно загрузить его:\n\n```\n# rmmod k10temp\n# modprobe k10temp force=1\n```\n\nУбедитесь, что датчик действительно является достоверными и надежными. Если это так, то можно отредактировать /etc/modprobe.d/k10temp.conf, добавив:\n\n```\noptions k10temp force=1\n```\n\nЭто позволит подгрузить модуль при загрузке системы.\n\n"
    },
    {
      "title": "Материнские платы Asus B450M-A/A320M-K/A320M-K-BR",
      "level": 3,
      "content": "Эти платы используют чип IT8655E, который не поддерживается драйвером ядра it87, на Ноябрь 2020 [1]. Однако, чип поддерживается в апстрим-версии драйвера ядра [2]. Имеется DKMS вариант it87-dkms-gitAUR.\n\n"
    },
    {
      "title": "Материнские платы Asus B450/X399/X470 с сокетом AM4",
      "level": 3,
      "content": "Некоторые последние платы Asus используют чип ITE IT8665E, доступ к датчиком температур, вентиляторов и вольтажа может требовать модуля asus-wmi-sensors. Установите asus-wmi-sensors-dkms-gitAUR[ссылка недействительна: package not found] и загрузите модуль ядра asus-wmi-sensors, модуль использует интерфейс UEFI и может требовать обновления BIOS для некоторых плат [3].\n\nДругой способ: модуль it87 считывает значения с чипа напрямую; установите it87-dkms-gitAUR и загрузите модуль ядра it87.\n\n"
    },
    {
      "title": "Материнские платы Asus H97/Z97/Z170/X570/B550",
      "level": 3,
      "content": "Некоторые последние платы Asus требуют загруженного модуля ядра nct6775 для доступа к вентиляторам и вольтажу.\n\nВам также, вероятно, понадобится добавить следующий параметр ядра:\n\n```\nacpi_enforce_resources=lax\n```\n\nПодробнее смотрите https://bugzilla.kernel.org/show_bug.cgi?id=204807 .\n\n"
    },
    {
      "title": "Материнские платы Gigabyte B250/Z370/B450M",
      "level": 3,
      "content": "Некоторые платы Gigabyte используют чип ITE IT8686E, которй не поддерживается драйвером ядра it87, на май 2019 [4]. Однако, чип поддерживается в апстрим-версии драйвера ядра [5]. Имеется DKMS вариант it87-dkms-gitAUR. Перед установкой модуля также требуется добавить параметр ядра:\n\n```\nacpi_enforce_resources=lax\n```\n\nКроме этого, укажите идентификатор чипа при загрузке модуля следующим образом:\n\n```\n# modprobe it87 force_id=0x8686\n```\n\nИли вы можете загружать модуль в процессе загрузки системы, создав два файла:\n\n```\n/etc/modules-load.d/it87.conf\n```\n\n```\nit87\n```\n\n```\n/etc/modprobe.d/it87.conf\n```\n\n```\noptions it87 force_id=0x8686\n```\n\nКак модуль будет загружен, используйте sensors для исследования чипа. Теперь вы также можете использовать fancontrol для управления скорости вращения вашего вентилятора корпуса.\n\nВ дополнение установка zenpower-dkmsAUR позволит тонко настроить систему охлаждения материнской платы, однако отключит стандартный модуль k10temp.\n\n"
    },
    {
      "title": "Gigabyte GA-J1900N-D3V",
      "level": 3,
      "content": "Эта материнская плата использует чип ITE IT8620E (useful also to read voltages, mainboard temp, скоростей вентилятора). На октябрь 2014 lm_sensors не имеет драйвера с поддержкой чипа ITE IT8620E [6][устаревшая ссылка 2024-10-12 ⓘ] [7]. Разработчики lm_sensors сообщили, что чип частично совместим с IT8728F для мониторинга части аппаратных ресурсов. Однако, на август 2016, представлены списки с поддержкой IT8620E [8].\n\nВы можете загрузить модуль в рантайме:\n\n```\n$ modprobe it87 force_id=0x8728\n```\n\nИли вы можете загружать модуль в процессе загрузки системы, создав два файла:\n\n```\n/etc/modules-load.d/it87.conf\n```\n\n```\nit87\n```\n\n```\n/etc/modprobe.d/it87.conf\n```\n\n```\noptions it87 force_id=0x8603\n```\n\nКак модуль будет загружен, используйте sensors для исследования чипа.\n\nТеперь вы также можете использовать fancontrol для управления скорости вращения вашего вентилятора корпуса.\n\n"
    },
    {
      "title": "Проблемы с экраном ноутбука после запуска sensors-detect",
      "level": 3,
      "content": "Это вызвано lm-sensors с изменением Vcom значениями на экране в процессе считывания датчиков. Это уже обсуждалось и решалось на форуме: https://bbs.archlinux.org/viewtopic.php?id=193048. Однако, прежде чем запустить предложенные там команды, сначала внимательно прочитайте тред.\n\n"
    },
    {
      "title": "Ошибки шины i2c на AMD Navi 2 GPUs",
      "level": 3,
      "content": "В настоящий момент существует ошибка обработчика ядра при чтении шины i2c на AMD Navi 2 GPUs. Шина сейчас только может использовать ЭСППЗУ и попытка использования с другими устройствами приведёт к сбою. Это может приводить к авариям, чёрным экранам и даже привести к странностям в работе карты, таким как отказ в переключении состояний питания. На данный момент рекомендуется не сканировать шину i2c, если вы имеете карту на базе Navi 2. Подробнее читайте тут: https://gitlab.freedesktop.org/drm/amd/-/issues/1470\n\n"
    }
  ]
}
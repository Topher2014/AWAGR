{
  "title": "NVIDIA Optimus (Español)",
  "url": "https://wiki.archlinux.org/title/NVIDIA_Optimus_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nNote: **2024-02-02** \n\nArtículos relacionados\n\n- PRIME (Español)\n- Bumblebee (Español)\n- Nouveau (Español)\n- NVIDIA (Español)\n- nvidia-xrun\n- External GPU (Español)\n\nNVIDIA Optimus es una tecnología que permite que una GPU integrada y una GPU NVIDIA dedicada trabajen en conjunto en un portátil.\n\n"
    },
    {
      "title": "Métodos disponibles",
      "level": 2,
      "content": "Hay diferentes métodos disponibles:\n\n- #Usar solo la grafica integrada - Ahorra energía, porque la grafica NVIDIA estará completamente apagada.\n- #Usar solo la grafica NVIDIA - Ofrece mas rendimiento que la grafica integrada pero consume mas batería (que no es conveniente para dispositivos móviles). Esto utiliza el mismo metodo de optimus-manager y nvidia-xrun , deberia ser utilizado para para resolución de problemas y verificación de la funcionalidad general, antes de optar por uno de los enfoques más automatizados.\n- Utilizar ambas (usar la GPU NVIDIA cuando sea necesario y mantenerla apagada para ahorrar energía): #Usando PRIME render offload - Método oficial soportado por NVIDIA (Recomendado) #Usando optimus-manager - Cambia graficas con solo un comando (es necesario cerrar sesión e iniciar sesión para que surta efecto). Alcanza el máximo rendimiento de la GPU NVIDIA y la apaga si no está en uso. Desde la versión 1.4 también admite la combinación AMD+NVIDIA. #Usando nvidia-xrun - Ejecuta sesiones X separadas en diferentes TTY con gráficos NVIDIA. Alcanza el máximo rendimiento de la GPU NVIDIA y la apaga si no está en uso. #Usando Bumblebee - Proporciona una funcionalidad similar a Windows al permitir ejecutar aplicaciones seleccionadas con gráficos NVIDIA y utilizar gráficos Intel para todo lo demás. Presenta importantes problemas de rendimiento. No ha sido actualizado desde el 26 de Abril de 2023 #Usando switcheroo-control - Similar a Bumblebee, pero específicamente para usuarios de GNOME. Permite que las aplicaciones especifiquen si prefieren la GPU dedicada en su archivo de entrada de escritorio y permite ejecutar manualmente cualquier aplicación en la GPU NVIDIA desde el menú contextual. #Usando nouveau - ofrece un rendimiento inferior (en comparación con el controlador propietario de NVIDIA) y puede causar problemas con la suspensión y la hibernación. No funciona con las últimas GPUs de NVIDIA. #Usando EnvyControl - Similar a optimus-manager pero no requiere una extensa configuración o tener un daemon ejecutándose en segundo plano así como tener que instalar una versión parcheada de GDM si eres usuario de GNOME. #Usando NVidia-eXec - Similar a Bumblebee, pero sin el impacto en el rendimiento. Funciona tanto en Xorg como en Wayland. Este paquete es experimental, y actualmente está siendo probado sólo bajo GNOME/GDM. #Usando nvidia-switch - Similar a nvidia-xrun, pero sin necesidad de cambiar el TTY, los cambios se harán por login y logouts en tu gestor de pantalla. Este paquete está siendo probado en un sistema basado en Debian, pero, al igual que nvidia-xrun, debe funcionar en todos los sistemas Linux.\n\n- #Usando PRIME render offload - Método oficial soportado por NVIDIA (Recomendado)\n- #Usando optimus-manager - Cambia graficas con solo un comando (es necesario cerrar sesión e iniciar sesión para que surta efecto). Alcanza el máximo rendimiento de la GPU NVIDIA y la apaga si no está en uso. Desde la versión 1.4 también admite la combinación AMD+NVIDIA.\n- #Usando nvidia-xrun - Ejecuta sesiones X separadas en diferentes TTY con gráficos NVIDIA. Alcanza el máximo rendimiento de la GPU NVIDIA y la apaga si no está en uso.\n- #Usando Bumblebee - Proporciona una funcionalidad similar a Windows al permitir ejecutar aplicaciones seleccionadas con gráficos NVIDIA y utilizar gráficos Intel para todo lo demás. Presenta importantes problemas de rendimiento. No ha sido actualizado desde el 26 de Abril de 2023\n- #Usando switcheroo-control - Similar a Bumblebee, pero específicamente para usuarios de GNOME. Permite que las aplicaciones especifiquen si prefieren la GPU dedicada en su archivo de entrada de escritorio y permite ejecutar manualmente cualquier aplicación en la GPU NVIDIA desde el menú contextual.\n- #Usando nouveau - ofrece un rendimiento inferior (en comparación con el controlador propietario de NVIDIA) y puede causar problemas con la suspensión y la hibernación. No funciona con las últimas GPUs de NVIDIA.\n- #Usando EnvyControl - Similar a optimus-manager pero no requiere una extensa configuración o tener un daemon ejecutándose en segundo plano así como tener que instalar una versión parcheada de GDM si eres usuario de GNOME.\n- #Usando NVidia-eXec - Similar a Bumblebee, pero sin el impacto en el rendimiento. Funciona tanto en Xorg como en Wayland. Este paquete es experimental, y actualmente está siendo probado sólo bajo GNOME/GDM.\n- #Usando nvidia-switch - Similar a nvidia-xrun, pero sin necesidad de cambiar el TTY, los cambios se harán por login y logouts en tu gestor de pantalla. Este paquete está siendo probado en un sistema basado en Debian, pero, al igual que nvidia-xrun, debe funcionar en todos los sistemas Linux.\n\n"
    },
    {
      "title": "Usar solo la grafica integrada",
      "level": 2,
      "content": "Si sólo te interesa usar una GPU determinada sin tener que cambiar, comprueba las opciones de la BIOS de tu sistema. Debería haber una opción para desactivar una de las tarjetas. Algunos portátiles sólo permiten desactivar la tarjeta discreta, o viceversa, pero merece la pena comprobarlo si sólo piensas usar una de las tarjetas.\n\nSi tu BIOS no permite desactivar los gráficos NVIDIA, puedes desactivarlos desde el propio kernel de Linux. Ve Hybrid graphics (Español)#GPU discreta totalmente apagada.\n\n"
    },
    {
      "title": "Utilizar CUDA sin cambiar el proveedor de renderizado",
      "level": 3,
      "content": "Puedes usar CUDA sin cambiar el renderizado a la gráfica NVIDIA. Todo lo que necesitas hacer es asegurarte de que la tarjeta NVIDIA está encendida antes de iniciar una aplicación CUDA, ve Hybrid graphics (Español)#GPU discreta totalmente apagada para más detalles.\n\nAhora, cuando inicies una aplicación CUDA, cargará automáticamente todos los módulos del kernel necesarios. Antes de apagar la tarjeta Nvidia después de usar CUDA, hay que descargar primero los módulos del kernel nvidia:\n\n```\n# rmmod nvidia_uvm\n# rmmod nvidia\n```\n\n"
    },
    {
      "title": "Usar solo la grafica NVIDIA",
      "level": 2,
      "content": "El driver propietario de NVIDIA puede configurarse para que sea el principal proveedor de renderizado. También tiene notables problemas de screen-tearing a menos que habilites prime sync activando NVIDIA (Español)#DRM kernel mode setting, ve [1] para más información. Permite el uso de la GPU discreta y tiene (a partir de Enero 2017) una marcada ventaja en el rendimiento sobre el controlador Nouveau.\n\nPrimero, instale el driver NVIDIA (Español) y xorg-xrandr. A continuación, configura /etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf cuyas opciones se combinarán con el paquete proporcionado /usr/share/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf para proporcionar compatibilidad con esta configuración.\n\n```\n/etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf\n```\n\n```\nSection \"OutputClass\"\n    Identifier \"intel\"\n    MatchDriver \"i915\"\n    Driver \"modesetting\"\nEndSection\n\nSection \"OutputClass\"\n    Identifier \"nvidia\"\n    MatchDriver \"nvidia-drm\"\n    Driver \"nvidia\"\n    Option \"AllowEmptyInitialConfiguration\"\n    Option \"PrimaryGPU\" \"yes\"\n    ModulePath \"/usr/lib/nvidia/xorg\"\n    ModulePath \"/usr/lib/xorg/modules\"\nEndSection\n```\n\nA continuación, añade las siguientes dos líneas al principio de ~/.xinitrc:\n\n```\n~/.xinitrc\n```\n\n```\nxrandr --setprovideroutputsource modesetting NVIDIA-0\nxrandr --auto\n```\n\nAhora reinicia para cargar los drivers, y X debería iniciar.\n\nSi los dpi de su pantalla no son correctos añade la siguiente línea dentro de ~/.xinitrc:\n\n```\nxrandr --dpi 96\n```\n\nSi obtiene una pantalla negra al iniciar X, asegurate de que no haya ampersands (símbolo &) después de los dos comandos xrandr dentro de ~/.xinitrc. Si hay ampersands, parece que el gestor de ventanas puede ejecutarse antes de que los comandos xrandr terminen de ejecutarse, provocando una pantalla negra.\n\n"
    },
    {
      "title": "Gestores de pantalla",
      "level": 3,
      "content": "Si estás utilizando un Gestor de pantalla entonces necesitarás crear o editar un script de configuración de pantalla para tu gestor de pantalla en lugar de utilizar ~/.xinitrc.\n\n"
    },
    {
      "title": "LightDM",
      "level": 4,
      "content": "Para el gestor de pantalla LightDM (Español):\n\n```\n/etc/lightdm/display_setup.sh\n```\n\n```\n#!/bin/sh\nxrandr --setprovideroutputsource modesetting NVIDIA-0\nxrandr --auto\n```\n\nHace el script ejecutable.\n\nAhora configura lightdm para ejecutar el script editando la sección [Seat:*] en /etc/lightdm/lightdm.conf:\n\n```\n/etc/lightdm/lightdm.conf\n```\n\n```\n[Seat:*]\ndisplay-setup-script=/etc/lightdm/display_setup.sh\n```\n\nAhora reinicia y tu gestor de pantalla debería iniciarse.\n\n"
    },
    {
      "title": "SDDM",
      "level": 4,
      "content": "Para el gestor de pantalla SDDM (Español) (SDDM es el gestor de pantalla por defecto para KDE (Español)):\n\n```\n/usr/share/sddm/scripts/Xsetup\n```\n\n```\nxrandr --setprovideroutputsource modesetting NVIDIA-0\nxrandr --auto\n```\n\n"
    },
    {
      "title": "GDM",
      "level": 4,
      "content": "Para el gestor de pantalla GDM (Español) cree dos nuevos archivos .desktop:\n\n```\n/usr/share/gdm/greeter/autostart/optimus.desktop\n/etc/xdg/autostart/optimus.desktop\n```\n\n```\n[Desktop Entry]\nType=Application\nName=Optimus\nExec=sh -c \"xrandr --setprovideroutputsource modesetting NVIDIA-0; xrandr --auto\"\nNoDisplay=true\nX-GNOME-Autostart-Phase=DisplayServer\n```\n\nAsegúrese de que GDM utilize X como backend predeterminado.\n\n"
    },
    {
      "title": "Comprobar 3D",
      "level": 3,
      "content": "Puedes comprobar si se están utilizando los gráficos NVIDIA instalando mesa-utils y ejecutando\n\n```\n$ glxinfo | grep NVIDIA\n```\n\n"
    },
    {
      "title": "Más Información",
      "level": 3,
      "content": "Para obtener más información, consulta la página oficial de NVIDIA sobre el tema [2].\n\n"
    },
    {
      "title": "Utilizar gráficos intercambiables",
      "level": 2,
      "content": "Note: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\n"
    },
    {
      "title": "Usando PRIME render offload",
      "level": 3,
      "content": "Este es el método recomendado y oficial de NVIDIA para soportar gráficos intercambiables.\n\nVea PRIME (Español)#PRIME render offload para más detalles.\n\n"
    },
    {
      "title": "Usando nouveau",
      "level": 3,
      "content": "Vea PRIME (Español) para graficos intercambiables y Nouveau (Español) para el driver de codigo abierto de NVIDIA.\n\n"
    },
    {
      "title": "Usando Bumblebee",
      "level": 3,
      "content": "Vea Bumblebee (Español).\n\n"
    },
    {
      "title": "Usando switcheroo-control",
      "level": 3,
      "content": "Vea PRIME (Español)#Integración con Gnome.\n\n"
    },
    {
      "title": "Usando nvidia-xrun",
      "level": 3,
      "content": "Vea nvidia-xrun.\n\n"
    },
    {
      "title": "Usando optimus-manager",
      "level": 3,
      "content": "Vea la documentación de upstream de Optimus-manager. Cubre tanto la instalación como la configuración en sistemas Arch Linux.\n\n"
    },
    {
      "title": "Usando EnvyControl",
      "level": 3,
      "content": "Vea la documentación de upstream de EnvyControl. Cubre tanto la instalación como las instrucciones de uso.\n\n"
    },
    {
      "title": "Usando NVidia-eXec",
      "level": 3,
      "content": "Vea la documentación de upstream de NVidia-eXec. Cubre tanto la instalación como las instrucciones de uso.\n\n"
    },
    {
      "title": "Usando nvidia-switch",
      "level": 3,
      "content": "Vea la documentación de upstream de nvidia-switch. Cubre tanto la instalación como las instrucciones de uso.\n\n"
    },
    {
      "title": "Tearing o VSync roto",
      "level": 3,
      "content": "Activa DRM kernel mode setting, que a su vez activará la sincronización PRIME y solucionará el tearing.\n\nPuedes leer el hilo oficial \"PRIME and PRIME Synchronization\" para más detalles.\n\n"
    },
    {
      "title": "Failed to initialize the NVIDIA GPU at PCI:1:0:0 (GPU fallen off the bus / RmInitAdapter failed!)",
      "level": 3,
      "content": "Añade rcutree.rcu_idle_gp_delay=1 a los parámetros del kernel. El articulo original se puede encontrar en [3] y [4].\n\n"
    },
    {
      "title": "Resolución, escaneo de pantalla errónea. Errores EDID en Xorg.log",
      "level": 3,
      "content": "Esto se debe a que el controlador NVIDIA no detecta el EDID de la pantalla. Es necesario especificar manualmente la ruta a un archivo EDID o proporcionar la misma información de forma similar.\n\nPara proporcionar la ruta al archivo EDID edita la Sección de \"Devices\" para la tarjeta NVIDIA en Xorg.conf, añadiendo estas líneas y cambiando partes para reflejar tu propio sistema:\n\n```\n/etc/X11/xorg.conf\n```\n\n```\nSection \"Device\"\n       \tOption\t\t\"ConnectedMonitor\" \"CRT-0\"\n       \tOption\t\t\"CustomEDID\" \"CRT-0:/sys/class/drm/card0-LVDS-1/edid\"\n\tOption\t\t\"IgnoreEDID\" \"false\"\n\tOption\t\t\"UseEDID\" \"true\"\nEndSection\n```\n\nSi Xorg no inicia prueba a cambiar todas las referencias de CRT a DFB. card0 es el identificador de la tarjeta Intel a la que está conectada la pantalla vía LVDS. El binario EDID está en este directorio. Si la disposición del hardware es diferente, el valor de CustomEDID puede variar, pero todavía hay que confirmarlo. La ruta comenzará en cualquier caso con /sys/class/drm.\n\nAlternatively you can generate your EDID with tools like read-edid and point the driver to this file. Even modelines can be used, but then be sure to change UseEDID and IgnoreEDID.\n\nAlternativamente puedes generar tu EDID con herramientas como read-edid y apuntar el driver a este fichero. Incluso se pueden utilizar \"modelines\", pero entonces asegúrese de cambiar UseEDID e IgnoreEDID.\n\n"
    },
    {
      "title": "Resolución incorrecta sin errores EDID",
      "level": 3,
      "content": "Usando nvidia-xconfig, puede generarse información incorrecta en xorg.conf y en particular frecuencias de refresco de monitor erróneas que restringen las resoluciones posibles. Intenta comentar las líneas HorizSync/VertRefresh. Si esto ayuda, probablemente también puedas eliminar todo lo demás que no se menciona en este artículo.\n\n"
    },
    {
      "title": "Problema de bloqueo (lspci se atasca)",
      "level": 3,
      "content": "Síntomas: lspci se atasca, falla la suspensión del sistema, se atasca el apagado, se atasca optirun.\n\nSe aplica a: portátiles nuevos con GTX 965M o similar cuando se utiliza bbswitch (por ejemplo, a través de Bumblebee) o Nouveau.\n\nCuando se enciende el recurso de alimentación de la dGPU, puede fallar y atascarse en el código ACPI (bug de kernel 156341).\n\nCuando se utiliza nouveau, desactivar la gestión de energía en runtime impide que cambie el estado de energía, evitando así este problema. Para desactivar la gestión de energía en runtime, añada nouveau.runpm=0 a los parámetros del kernel.\n\nPara conocer las soluciones específicas de cada modelo, consulte esta incidencia. En otros casos, puede intentar arrancar con acpi_osi=\"!Windows 2015\" o acpi_osi=! acpi_osi=\"Windows 2009\" añadidos a sus Kernel parameters (Español). (Considere la posibilidad de informar de su portátil en esa incidencia).\n\n"
    },
    {
      "title": "No se han encontrado pantallas en un portátil/NVIDIA Optimus",
      "level": 3,
      "content": "Compruebe si la salida es algo similar a\n\n```\n$ lspci | grep VGA\n```\n\n```\n00:02.0 VGA compatible controller: Intel Corporation Core Processor Integrated Graphics Controller (rev 02)\n01:00.0 VGA compatible controller: nVidia Corporation Device 0df4 (rev a1)\n```\n\nLos controladores NVIDIA ahora ofrecen soporte Optimus desde 319.12 Beta [5] con incluyendo kernels superiores a la versión 3.9.\n\nOtra solución es instalar el controlador Intel (Español) para manejar las pantallas, luego si quieres software 3D debes pasarlos por Bumblebee (Español) para decirles que usen la tarjeta NVIDIA.\n\n"
    },
    {
      "title": "Congelaciones aleatorias \"(EE) NVIDIA(GPU-0): WAIT\"",
      "level": 3,
      "content": "Al utilizar los controladores propietarios en una configuración con una tarjeta AMD integrada y con la tarjeta NVIDIA dedicada configurada como la única en uso, los usuarios informan de bloqueos de hasta 10 segundos, con los siguientes errores en los registros de Xorg:\n\n```\n[   219.796] (EE) NVIDIA(GPU-0): WAIT (2, 8, 0x8000, 0x0002e1c4, 0x0002e1cc)\n[   226.796] (EE) NVIDIA(GPU-0): WAIT (1, 8, 0x8000, 0x0002e1c4, 0x0002e1cc)\n```\n\nAunque esto no es causa de raíz todavía, parece estar relacionado con un conflicto en cómo las tarjetas integradas y dedicadas interactúan con Xorg.\n\nLa solución es usar gráficos intercambiables, ver PRIME (Español)#PRIME render offload para más detalles.\n\n"
    },
    {
      "title": "\"No Devices detected\" con optimus-manager",
      "level": 3,
      "content": "Hay casos en los que lspci mostrará el Dominio PCI como primera columna de salida, haciendo que los archivos generados por optimus-manager se rompan al intentar mapear BusID en múltiples modelos de portátiles.\n\nSi te enfrentas a una pantalla negra que nunca termina de cargar tu GUI, GUI cargando parcialmente con artefactos de consola o Xorg fallando con (EE) - No Devices detected, la solución y los informes de errores están disponibles en el upstream de github.\n\n"
    }
  ]
}
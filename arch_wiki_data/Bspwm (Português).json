{
  "title": "Bspwm (Português)",
  "url": "https://wiki.archlinux.org/title/Bspwm_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Gerenciador de janela\n- Comparação de gerenciadores de janela tiling\n\nbspwm é um gerenciador de janelas leve, lado a lado, e minimalista escrito em C que organiza janelas em árvore binária completa. O bspwm tem suporte a vérios monitores e é configurado e controlado por meio de mensagens. Há suporte parcial a EWMH.\n\n"
    },
    {
      "title": "Instalação",
      "level": 2,
      "content": "Instale bspwm, ou bspwm-gitAUR versão de desenvolvimento.\n\n"
    },
    {
      "title": "Iniciando",
      "level": 2,
      "content": "Execute bspwm usando xinit.\n\n"
    },
    {
      "title": "Configuração",
      "level": 2,
      "content": "Importante: Certifique-se de que sua variável de ambiente $XDG_CONFIG_HOME esteja configurada ou seu bspwmrc não será encontrado. Isso pode ser feito digitando XDG_CONFIG_HOME=\"$HOME/.config\" e export XDG_CONFIG_HOME para ~/.profile.\n\nExemplos de configuração podem ser encontrados em /usr/share/doc/bspwm/examples/.\n\nCopie bspwmrc de lá para ~/.config/bspwm/ e sxhkdrc para ~/.config/sxhkd/.\n\nEsses dois arquivos são onde você vai definir as configurações e associações de teclas do wm, respectivamente.\n\nVeja os manuais bspwm(1) e sxhkd(1) para a documentação detalhada.\n\n"
    },
    {
      "title": "Nota para múltiplos monitores",
      "level": 3,
      "content": "O exemplo do bspwmrc configura dez áreas de trabalho para um só monitor:\n\n```\nbspc monitor -d I II III IV V VI VII VIII IX X\n```\n\nVocê vai precisar alterar essa linha ou adicionar um para cada monitor, similar a isso:\n\n```\nbspc monitor DVI-I-1 -d I II III IV\nbspc monitor DVI-I-2 -d V VI VII\nbspc monitor DP-1 -d VIII IX X\n```\n\nVocê pode usar xrandr -q ou bspc query -M para saber os nomes dos monitores.\n\nO número total de áreas de trabalho foi mantido em dez no exemplo acima. Isso é para que cada área de trabalho ainda possa ser endereçada com super + {1-9,0} no sxhkdrc.\n\n"
    },
    {
      "title": "Regras",
      "level": 3,
      "content": "Há duas maneiras de definir regras de comportamento para as janelas (a partir de cd97a32).\n\nA primeira é usando o comando de regra interno, conforme mostrado no exemplo bspwmrc:\n\n```\nbspc rule -a Gimp desktop=^8 follow=on state=floating\nbspc rule -a Chromium desktop=^2\nbspc rule -a mplayer2 state=floating\nbspc rule -a Kupfer.py focus=on\nbspc rule -a Screenkey manage=off\n```\n\nA segunda opção é usar um comando de regra externa. Isso é mais complexo, mas pode permitir que você crie regras de janelas mais específicas. Veja estes exemplos para um comando de regra de amostra.\n\nSe uma determinada janela não estiver se comportando de acordo com suas regras, verifique o nome da classe do programa. Isso pode ser feito executando xprop | grep WM_CLASS para ter certeza de que você está usando a string apropriada, o que requer o pacote xorg-xprop.\n\n"
    },
    {
      "title": "Usando lemonbar",
      "level": 4,
      "content": "Um exemplo de painel para lemonbar-gitAUR é fornecido na página de exemplos no GitHub. Você também pode encontrar mais exemplos na página wiki lemonbar. O painel será executado adicionando panel & na sua bspwmrc. Verifique os optdepends no pacote bspwm por dependências que pode, ser necessárias.\n\nPara exibir informações do sistema na sua barra de status, você pode usar várias chamadas do sistema. Este exemplo mostra como editar seu panel para exibir o estado de volume no mesmo:\n\n```\npanel_volume()\n{\n        volStatus=$(amixer get Master | tail -n 1 | cut -d '[' -f 4 | sed 's/].*//g')\n        volLevel=$(amixer get Master | tail -n 1 | cut -d '[' -f 2 | sed 's/%.*//g')\n        # is alsa muted or not muted?\n        if [ \"$volStatus\" == \"on\" ]\n        then\n                echo \"%{Fyellowgreen} $volLevel %{F-}\"\n        else\n                # If it is muted, make the font red\n                echo \"%{Findianred} $volLevel %{F-}\"\n        fi\n}\n```\n\nEm seguida, é só verificar se já está invocado e redirecionado para $PANEL_FIFO:\n\n```\nwhile true; do\necho \"S\" \"$(panel_volume) $(panel_clock)\" > \"$PANEL_FIFO\"\n        sleep 1s\ndone &\n```\n\n"
    },
    {
      "title": "Usando yabar",
      "level": 4,
      "content": "O uso do painel de exemplo usando lemonbar requer que você defina seu ambiente (.profile) e verifique se os scripts do painel estão no seu caminho. O painel mais fácil de configurar é o yabarAUR[link quebrado: package not found], que possui apenas um arquivo de configuração.\n\n"
    },
    {
      "title": "Usando polybar",
      "level": 4,
      "content": "Polybar pode ser usada adicionando polybar exemplo & ao seu arquivo de configuração bspwmrc, sendo example o nome da barra.\n\n"
    },
    {
      "title": "Usando pid",
      "level": 4,
      "content": "Você pode emular um terminal suspenso (como o recurso de rascunho do i3 se você colocar um terminal nele) usando as flags da janela do bspwm. Anexe o seguinte ao final do arquivo de configuração do bspwm (adapte-o ao seu próprio emulador de terminal):\n\n```\nbspc rule -a scratchpad sticky=on state=floating hidden=on\nst -c scratchpad -e ~/bin/scratch &\n```\n\nEssa opção sticky garante que a janela esteja sempre presente na área de trabalho atual. E ~/bin/scratch é:\n\n```\n#!/usr/bin/sh\nbspc query -N -n .floating > /tmp/scratchid\n$SHELL\n```\n\nA tecla de atalho para alternar o scratchpad deve estar vinculada a:\n\n```\nid=$(cat /tmp/scratchid);\\\nbspc node $id --flag hidden;bspc node -f $id\n```\n\n"
    },
    {
      "title": "Usando nome da classe",
      "level": 4,
      "content": "Neste exemplo, vamos usar termite com um nome de classe personalizado como nosso terminal suspenso. Não precisa ser termite.\n\nPrimeiro, crie um arquivo no seu caminho com o seguinte conteúdo e torne-o executável. Neste exemplo, vamos chamá-lo de scratchpad.sh\n\n```\n#!/usr/bin/bash\n\nif [ -z $1 ]; then\n    echo \"Usage: $0 <name of hidden scratchpad window>\"\n    exit 1\nfi\n  \npids=$(xdotool search --class ${1})\nfor pid in $pids; do\n    echo \"Toggle $pid\"\n    bspc node $pid --flag hidden -f\ndone\n```\n\nEntão, adicione isso à sua configuração do bspwm.\n\n```\n...\nbspc rule -a dropdown sticky=on state=floating hidden=on\ntermite --class dropdown -e \"zsh -i\" &\n...\n```\n\nPara alternar a janela, é necessária uma regra personalizada no sxhkd. Dê como parâmetro o nome da classe personalizada.\n\nstyle=\"background: inherit; color: inherit; vertical-align: middle; text-align: center; \"| super + u scratchpad.sh dropdown\n\n"
    },
    {
      "title": "Outro",
      "level": 4,
      "content": "Para um scratchpad que possa usar qualquer tipo de janela sem regras predefinidas, consulte [1]\n\nPara um script de scratchpad mais sofisticado que tenha suporte a muitos terminais prontos para usar e tenha opções para fazer coisas como iniciar opcionalmente uma sessão tmuxinator/tmux, transformar qualquer janela em um scratchpad imediatamente e redimensionar automaticamente um scratchpad para ajustar-se ao monitor atual, instale tdrop-gitAUR.\n\n"
    },
    {
      "title": "Configurações diferentes de monitores para diferentes máquinas",
      "level": 3,
      "content": "Visto que bspwmrc seja um shell script, este permite que se faça coisas semelhantes a essa:\n\n```\n#! /bin/sh\n\n if [[ $(hostname) == 'myhost' ]]; then\n     bspc monitor eDP1 -d I II III IV V VI VII VIII IX X\n elif [[ $(hostname) == 'otherhost' ]]; then\n     bspc monitor VGA-0 -d I II III IV V\n     bspc monitor VGA-1 -d VI VII VIII IX X\n elif [[ $(hostname) == 'yetanotherhost' ]]; then\n     bspc monitor DVI-I-3 -d VI VII VIII IX X\n     bspc monitor DVI-I-2 -d I II III IV V\n fi\n```\n\n"
    },
    {
      "title": "Configurar um desktop onde todas as janelas estão flutuando",
      "level": 3,
      "content": "Aqui está como configurar a área de trabalho 3 para ter apenas janelas flutuantes. Pode ser útil para o Gimp ou outros aplicativos com várias janelas.\n\nColoque este script em algum lugar em seu $PATH e chame-o no arquivo .xinitrc ou similar (com um & no final):\n\n```\n#!/bin/bash\n\n # change the desktop number here\n FLOATING_DESKTOP_ID=$(bspc query -D -d '^3')\n\n bspc subscribe node_manage | while read -a msg ; do\n    desk_id=${msg[2]}\n    wid=${msg[3]}\n    [ \"$FLOATING_DESKTOP_ID\" = \"$desk_id\" ] && bspc node \"$wid\" -t floating\n done\n```\n\n(fonte)\n\n"
    },
    {
      "title": "Teclado",
      "level": 3,
      "content": "Bspwm não lida com qualquer entrada de teclado e, em vez disso, fornece o programa bspc como sua interface.\n\nPara atalhos de teclado, você terá que configurar um serviço de hotkey como sxhkd (sxhkd-gitAUR para a versão de desenvolvimento).\n\n"
    },
    {
      "title": "Tela em branco e atalhos de teclado não funcionam",
      "level": 3,
      "content": "- Certifique-se de estar iniciando o sxhkd (em segundo plano, pois bloquear o console).\n- Certifique-se de que ~/.config/bspwm/bspwmrc está executável.\n\n"
    },
    {
      "title": "Temas de cursor funcionam no desktop",
      "level": 3,
      "content": "Veja Temas de cursor#Mude o cursor padrão com forma de X\n\n"
    },
    {
      "title": "Caixa de janela maior que o aplicativo",
      "level": 3,
      "content": "Isso pode acontecer se você estiver usando aplicativos GTK3 e, geralmente, para janelas de diálogo. A correção é criar ou adicionar o seguinte a um arquivo de tema gtk3 (~/.config/gtk-3.0/gtk.css):\n\n```\n.window-frame, .window-frame:backdrop {\n  box-shadow: 0 0 0 black;\n  border-style: none;\n  margin: 0;\n  border-radius: 0;\n}\n    \n.titlebar {\n  border-radius: 0;\n}\n```\n\n(fonte: Tópico sobre Bspwm no fórum)\n\n"
    },
    {
      "title": "Problemas com aplicativos java",
      "level": 3,
      "content": "Se você tiver problemas com o aplicações Java, tal como a janela não está redimensionando ou os menus fecham imediatamente após o clique, consulte Java (Português)#Janela cinza, aplicações sem redimensionamento com o WM, menus fechando imediatamente.\n\n"
    },
    {
      "title": "Problemas com atalhos de teclado usando fish",
      "level": 3,
      "content": "Se Você usa fish, descobrirá que não é possível alternar as áreas de trabalho. Isso ocorre porque o uso do caractere ^ pelo bspc é incompatível com o fish. Você pode consertar isso explicitamente dizendo ao sxhkd para usar o bash para executar comandos:\n\n```\n$ set -U SXHKD_SHELL /usr/bin/bash\n```\n\nAlternativamente, o caractere ^ pode ser escapado com uma barra invertida no seu arquivo sxhkdrc.\n\n"
    },
    {
      "title": "Problemas de desempenho usando fish",
      "level": 3,
      "content": "sxhkd usa o shell definido na variável de ambiente SHELL para executar comandos. fish pode ter um longo tempo de inicialização devido a arquivos de configuração grandes ou configurados incorretamente; portanto, todos os comandos sxhkd podem levar muito mais tempo para serem executados do que com outros shells. Para corrigir isso sem alterar seu SHELL padrão, você pode dizer ao sxhkd para usar explicitamente o bash ou outro shell mais rápido para executar comandos (por exemplo, sh):\n\n```\n$ set -U SXHKD_SHELL sh\n```\n\n"
    },
    {
      "title": "Mensagens de erro \"Não foi possível pegar a chave 43 com modfield 68\" no início",
      "level": 3,
      "content": "Se já tentou usar a mesma chave por duas vezes ou também o sxhkd. Verifique o bspwmrc, ~/.profile ou ~/.bash_profile e certifique-se que o sxhkd não está sendo iniciado mais de uma vez.\n\n"
    },
    {
      "title": "Menu de contexto do Firefox seleciona automaticamente a primeira opção no clique de botão direito",
      "level": 3,
      "content": "Adicione a seguinte linha ao arquivo userChrome.css do perfil do Firefox:\n\n```\n#contentAreaContextMenu{ margin: 5px 0 0 5px }\n```\n\nO arquivo deve estar localizado em ~/.mozilla/firefox/alguma-coisa.default/chrome/ (ele precisará ser criado se você ainda não tiver um). Além disso, no Firefox, você terá que acessar a página about:config e ativar a opção toolkit.legacyUserProfileCustomizations.stylesheets; caso contrário, o Firefox ignorará o arquivo userChrome.css.\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- Lista de discussão: bspwm at librelist.com.\n- #bspwm - Canal IRC no irc.libera.chat\n- https://bbs.archlinux.org/viewtopic.php?id=149444 - Tópico no fórum do Arch\n- https://github.com/baskerville/bspwm - no Projeto GitHub\n- https://github.com/windelicato/dotfiles/wiki/bspwm-for-dummies - earsplit's \"bspwm for dummies\"\n\n"
    }
  ]
}
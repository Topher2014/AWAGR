{
  "title": "Installing Arch Linux on a USB key (日本語)",
  "url": "https://wiki.archlinux.org/title/Installing_Arch_Linux_on_a_USB_key_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- ビギナーズガイド\n- インストールガイド\n- 一般的な推奨事項\n- 一般的なトラブルシューティング\n- ソリッドステートドライブ\n\nこのページでは標準的な Arch のインストールをリムーバブルメディア(USB フラッシュドライブなど)に行う方法を説明しています。USB インストールメディアで説明している LiveUSB の作り方と違って、HDD に通常インストールするのと同じように USB フラッシュドライブにインストールを行います。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール 1.1 インストール時の設定\n- 2 設定 2.1 GRUB legacy 2.2 GRUB 2.3 Syslinux\n- 3 ヒントとテクニック 3.1 複数のマシンで USB インストールを使う 3.1.1 インプットドライバー 3.1.2 ビデオドライバー 3.1.3 永続的なブロックデバイスの命名 3.1.4 カーネルパラメータ 3.1.5 USB-3 メディアから起動 3.2 互換性 3.3 ディスクアクセスの最小化\n- 4 参照\n\n- 1.1 インストール時の設定\n\n- 2.1 GRUB legacy\n- 2.2 GRUB\n- 2.3 Syslinux\n\n- 3.1 複数のマシンで USB インストールを使う 3.1.1 インプットドライバー 3.1.2 ビデオドライバー 3.1.3 永続的なブロックデバイスの命名 3.1.4 カーネルパラメータ 3.1.5 USB-3 メディアから起動\n- 3.2 互換性\n- 3.3 ディスクアクセスの最小化\n\n- 3.1.1 インプットドライバー\n- 3.1.2 ビデオドライバー\n- 3.1.3 永続的なブロックデバイスの命名\n- 3.1.4 カーネルパラメータ\n- 3.1.5 USB-3 メディアから起動\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "リムーバブルメディアに Arch をインストールするには、利用可能なオペレーティングシステムに応じて様々な方法があります。\n\n- 既に Arch を実行している場合、arch-install-scripts をインストールして iso からインストールするのと同じようにインストールガイドに従って下さい。ただし /dev/sda を使用する代わりに、インストールする前に $ lsblk を使って USB キーの /dev/sd* の名前を確認します。\n- Arch Linux CD/USB を使って USB キーに Arch をインストールすることもできます。CD/USB を起動してインストールガイドに従って下さい。ライブ USB から起動する場合、インストールは別の USB スティックに行う必要があります。\n- もしくは、別の Linux コンピュータが使える場合 (Arch である必要はありません)、既存の Linux からインストールにしたがって、設定セクションまで進んでください。\n- Windows や Mac で VirtualBox をダウンロードしている場合、VirtualBox Extension をインストールして、USB ドライブを Live ISO やLinux インストール済の仮想マシンに挿入し、インストールガイドに従いUSB ドライブにインストールを行なって下さい。\n\n"
    },
    {
      "title": "インストール時の設定",
      "level": 3,
      "content": "基本的にはインストールガイドのとおりに行いますが、以下の部分が異なります:\n\n- cfdisk が \"Partition ends in the final partial cylinder\" fatal error で終了してしまう場合、残された方法はドライブ上の全てのパーティションを消去することだけです。別のターミナルを開いて (Alt+F2)、fdisk /dev/sdX と入力し (sdX はあなたの使用している usb ドライブに置き換えてください)、パーティションテーブルを表示 (p) して、問題ないか確認をし、パーティションテーブルを削除 (d) してから変更を書き込んでください (w)。そして cfdisk に戻ります。\n- ファイルシステムを選択する前に SSD の wiki 記事の読み書きを最小化するヒントを読むことを強く推奨します。結論としては、ジャーナルを無効にした ext4 が良いでしょう (ただしジャーナルを無効化するとデータを消失する危険性が高まります)。# mkfs.ext4 -O \"^has_journal\" /dev/sdXX で作成できます。フラッシュが書き込みを行える回数には限りがあり、ジャーナリングファイルシステムは、ジャーナルを更新するたびに回数を減らしてしまうということを覚えてください。同じ理由から、スワップパーティションは作成しないのがベストです。USB ハードドライブへのインストールには影響がありません。\n- 初期 RAM ディスクを作成 (# mkinitcpio -p linux) する前に、/etc/mkinitcpio.conf の HOOKS の udev のすぐ後に block フックを追加してください。初期ユーザー空間で適切なモジュールをロードするために必要です。\n- UFD デバイスをクロスプラットフォームなリムーバブルドライブとして使い続けたい場合、(NTFS や exFAT など) 適当なファイルシステムのパーティションを作成します。データパーティションはデバイスの1番目のパーティションにする必要があります。Windows はリムーバブルデバイスには1つのパーティションしかないと想定しており、そうでない場合、EFI システムパーティションを自動的にマウントしてしまいます。dosfstools や ntfs-3g を忘れずにインストールしてください。UFD デバイスのリムーバブルメディアビットを反転させるツールはオンラインで使うことができます。これによってオペレーティングシステムに UFD デバイスを外付けのハードディスクとして扱わせたり、選択したパーティションスキームを使用することができます。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "- /etc/fstab に USB キーの / などのパーティションの適切な情報を記述してください。複数のマシンで USB キーを起動する場合、ハードディスクのデバイス番号は変わってしまう可能性があります。そのため UUID やラベルを使用することを推奨します:\n\nパーティションの正しい UUID を取得するには blkid を実行します。\n\n- GRUB を USB キーにインストールした場合、キーは常に hd0,0 になります。\n- 現在のバージョンの GRUB では、自動的に uuid を使用するようにデフォルト設定されているようです。以下の指示は GRUB legacy 用です。\n\n"
    },
    {
      "title": "GRUB legacy",
      "level": 3,
      "content": "GRUB legacy の設定ファイルである menu.lst を以下のように設定する必要があります:\n\n/dev/sdaX を使用:\n\n```\nroot (hd0,0)\nkernel /boot/vmlinuz-linux root=/dev/sda1 ro\ninitrd /boot/initramfs-linux.img\n```\n\nラベルを使う場合 menu.lst は以下のようになります:\n\n```\nroot (hd0,0)\nkernel /boot/vmlinuz-linux root=/dev/disk/by-label/Arch ro\ninitrd /boot/initramfs-linux.img\n```\n\nUUID の場合:\n\n```\nroot (hd0,0)\nkernel /boot/vmlinuz-linux root=/dev/disk/by-uuid/3a9f8929-627b-4667-9db4-388c4eaaf9fa ro\ninitrd /boot/initramfs-linux.img\n```\n\n"
    },
    {
      "title": "GRUB",
      "level": 3,
      "content": "UEFI の GPT を使う場合、GRUB#UEFI システム の指示に従って --removable オプションを付けるようにしてください。そうしないと既存の GRUB が破壊される可能性があります。コマンドは以下のようになります:\n\n```\n# grub-install --target=x86_64-efi --efi-directory=$esp --bootloader-id=grub --removable --recheck\n```\n\n"
    },
    {
      "title": "Syslinux",
      "level": 3,
      "content": "/dev/sdaX を使用:\n\n```\nLABEL Arch\n        MENU LABEL Arch Linux\n        LINUX ../vmlinuz-linux\n        APPEND root=/dev/sdax ro\n        INITRD ../initramfs-linux.img\n```\n\nUUID を使用:\n\n```\nLABEL Arch\n        MENU LABEL Arch Linux\n        LINUX ../vmlinuz-linux\n        APPEND root=UUID=3a9f8929-627b-4667-9db4-388c4eaaf9fa ro\n        INITRD ../initramfs-linux.img\n```\n\n"
    },
    {
      "title": "インプットドライバー",
      "level": 4,
      "content": "ノートパソコンを使う (またはタッチスクリーンを使用する) 場合、タッチパッドやタッチスクリーンを使用するには xf86-input-synaptics パッケージが必要になります。\n\nタッチパッドの設定方法や問題のトラブルシューティングについては、Touchpad Synaptics の記事を見てください。\n\n"
    },
    {
      "title": "ビデオドライバー",
      "level": 4,
      "content": "ほとんどの GPU で動作するように xf86-video-vesa, xf86-video-ati, xf86-video-intel, xf86-video-nouveau をインストールしてください。\n\n"
    },
    {
      "title": "永続的なブロックデバイスの命名",
      "level": 4,
      "content": "fstab とブートローダーの設定では UUID を使うことが推奨されます。詳しくは永続的なブロックデバイスの命名を見て下さい。\n\nまた、USB キーのカスタムシンボリックリンクを作成する udev ルールを作成することもできます。fstab やブートローダーの設定ではシンボリックリンクを使うようにします。詳しくは udev#固定デバイス名を設定する を見て下さい。\n\n"
    },
    {
      "title": "カーネルパラメータ",
      "level": 4,
      "content": "Intel のビデオカードなどを使っている場合に、黒画面や \"no signal\" エラーが表示されないように、KMS は無効化したほうが良いでしょう。KMS を無効化するには、カーネルパラメータに nomodeset を追加します。詳しくはカーネルパラメータを参照してください。\n\n"
    },
    {
      "title": "USB-3 メディアから起動",
      "level": 4,
      "content": "[1] を見て下さい。\n\n"
    },
    {
      "title": "互換性",
      "level": 3,
      "content": "フォールバックイメージを使うことで互換性を最大限に高めることができます。\n\n"
    },
    {
      "title": "ディスクアクセスの最小化",
      "level": 3,
      "content": "- カスタム設定ファイルを作成するなどして、ジャーナルを RAM に保存するように journald を設定すると良いでしょう:\n\n```\n/etc/systemd/journald.conf.d/usbstick.conf\n```\n\n```\n[Journal]\nStorage=volatile\nRuntimeMaxUse=30M\n```\n\n- ウェブブラウザなどのアプリケーションで fsync と関連するシステムコールを無効化するには、libeatmydata の eatmydata コマンドを使ってシステムコールを無効化できます:\n\n```\n$ eatmydata firefox\n```\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- ALMA - Rust で書かれた、Arch Linux ベースの起動可能な USB ドライブを作成するユーティリティ。\n- ArchLinux USB - c-magyar による Live USB インストールの作成に関する素晴らしい記事です。\n- archuseriso - Arch Linux Live ISO イメージを構築するためのテンプレート、暗号化を備えた Live USB 作成ツール。\n\n"
    }
  ]
}
{
  "title": "Profile-sync-daemon (日本語)",
  "url": "https://wiki.archlinux.org/title/Profile-sync-daemon_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- Anything-sync-daemon\n- Firefox\n- Chromium\n- Pdnsd\n- ソリッドステートドライブ\n\nprofile-sync-daemon (psd) はブラウザプロファイルを tmpfs で管理して定期的に物理ディスク (HDD/SSD) に同期させる、とても小さな擬似的なデーモンです。rsync でブラウザプロファイルの tmpfs のコピーとメディアのバックアップを同期させるという革新的な利用法によります。さらに、psd にはクラッシュからの復元機能が存在します。\n\npsd の設計目標および利点は以下の通りです。\n\n1. 透過的に利用できる\n1. 物理ドライブの損耗が減る\n1. 速度\n\nプロファイル、ブラウザキャッシュなどを tmpfs (RAM ディスク) に再配置するため、ブラウザの使用に関連する I/O も物理ドライブから RAM にリダイレクトされ、物理ドライブの消耗を抑え、ブラウザの速度と応答性を大幅に改善します。\n\n- Chrome/Chromium、Firefox (v21以降)、Midori などの一部のブラウザでは、キャッシュディレクトリをプロファイルディレクトリとは 別 に管理しています。この動作を変更することは profile-sync-daemon の範囲ではありません。Chromium については Chromium 設定#tmpfs にキャッシュ や、Firefox Ramdisk の記事でいくつかの回避策を参照することをお勧めします。\n- デフォルトの設定ファイル /usr/share/psd/psd.conf は、アップストリームで更新・変更されることがあります。ユーザーコピーの $XDG_CONFIG_HOME/psd/psd.conf はそれに対して diff を取る必要があります。Arch Linux では、pacman はこれを行うようユーザーに通知する必要があります。\n- psd は、ブラウザのキャッシュを RAM にコピーする為 ログイン が遅くなることがあります。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 設定 2.1 サポートしているブラウザ\n- 3 使い方 3.1 プレビューモード (parse)\n- 4 ヒントとテクニック 4.1 もっと頻繁に同期する (任意) 4.2 overlayfs モードとは? 4.3 /run/user/xxxx にプロファイルを乗せるのに大量のメモリを割り当てる 4.4 スナップショット 4.4.1 スナップショットをクリーンアップする\n- 5 サポート\n- 6 参照\n\n- 2.1 サポートしているブラウザ\n\n- 3.1 プレビューモード (parse)\n\n- 4.1 もっと頻繁に同期する (任意)\n- 4.2 overlayfs モードとは?\n- 4.3 /run/user/xxxx にプロファイルを乗せるのに大量のメモリを割り当てる\n- 4.4 スナップショット 4.4.1 スナップショットをクリーンアップする\n\n- 4.4.1 スナップショットをクリーンアップする\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "profile-sync-daemon パッケージを インストール して下さい。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "psd を初めて実行したときに、全ての設定が記述された $XDG_CONFIG_HOME/psd/psd.conf が作成されます (以下、このファイルを設定ファイルと呼称します)。\n\n```\n$ psd\nFirst time running psd so please edit /home/facade/.config/psd/psd.conf to your liking and run again.\n```\n\n- 任意で overlayfs を利用することで同期を高速化させてメモリの使用量を減らすことができます。USE_OVERLAYFS 変数を設定してください。このオプションを使う場合、/usr/bin/psd-overlay-helper に sudo 権限が必要で、カーネルが overlayfs バージョン22以上に対応していなければなりません。この機能の詳細は下の FAQ を見て下さい。\n- 任意で BROWSERS 行をアンコメントして tmpfs に同期するブラウザを指定することができます。BROWSERS がコメントアウトされている場合 (デフォルト)、サポートしているブラウザ全てのプロファイルが同期されます。\n- 任意でクラッシュしたときに復帰するためのスナップショットを無効化することができます (非推奨) USE_BACKUPS 変数で設定します。\n- オプションで、保持するクラッシュリカバリ用のスナップショットの数を定義します。BACKUP_LIMIT 変数でこれを行います。\n\n例: Chromium、Opera、および Midori がインストールされているが、ユーザーが Midori をバックアップブラウザーとして保持しており、めったに使用されないため、Chromium と Opera のみを tmpfs に同期するとします。\n\n```\nBROWSERS=(chromium opera)\n```\n\npsd のバージョン 5.54 から、overlayfs がネイティブでサポートされるようになりました。この機能を使うには 3.18.0 以上の Linux カーネルが必要です。\n\n"
    },
    {
      "title": "サポートしているブラウザ",
      "level": 3,
      "content": "現在、以下のブラウザを自動で検出して管理します:\n\n- Chromium\n- chromium-devAUR\n- conkeror-gitAUR\n- Epiphany\n- falkon\n- Firefox (安定版、ベータ版、Aurora 版など全てをサポート)\n- google-chromeAUR\n- google-chrome-betaAUR\n- google-chrome-devAUR\n- heftig バージョンの Aurora: Arch Linux 専用ブラウザ\n- icecatAUR\n- Luakit\n- Midori\n- Opera\n- Otter Browser\n- palemoonAUR\n- Qutebrowser\n- seamonkey\n- surfAUR\n- vivaldi\n\n"
    },
    {
      "title": "使い方",
      "level": 2,
      "content": "psd.service を ユーザーユニット で 起動/有効化 さらに、提供された resync-timer は 1 時間ごとに tmpfs からディスクへの再同期を実行します。resync-timer は psd.service で自動的に起動するので、手動でタイマーを起動する必要はありません。\n\n"
    },
    {
      "title": "プレビューモード (parse)",
      "level": 3,
      "content": "$XDG_CONFIG_HOME/psd/psd.conf に基づいて psd が実行する/していることを表示するために psd parse を実行します。また、プロファイルのサイズ、パス、回復スナップショットが作成されているかどうかなど、有用な情報も提供されます。\n\n"
    },
    {
      "title": "もっと頻繁に同期する (任意)",
      "level": 3,
      "content": "パッケージには一時間ごとに同期を行うタイマーが入っています。任意で、systemd ユニットを編集することでこの挙動を再定義することが可能です。以下の例は10分毎に同期させるようにタイマーを変更します:\n\n```\n~/.config/systemd/user/psd-resync.timer.d/frequency.conf\n```\n\n```\n[Unit]\nDescription=Timer for Profile-sync-daemon\n\n[Timer]\nOnUnitActiveSec=\nOnUnitActiveSec=10m\n```\n\nオプションについては systemd.timer(5) を見て下さい。\n\n"
    },
    {
      "title": "overlayfs モードとは?",
      "level": 3,
      "content": "Overlayfs は Linux カーネル 3.18.0 でメインラインに取り込まれたシンプルなユニオンファイルシステムです。psd バージョン 5.54 から、overlayfs を使うことで psd の tmpfs 領域のメモリフットプリントを減らしたり、同期を高速化させることができるようになっています。オーバーレイマウントでは、プロファイル全体ではなく、変更が加えられたデータだけが書き出されるというところがミソです。overlayfs モードで実行した場合、psd がデフォルトで使用する同一の復帰機能も有効になります。Overlayfs モードは $XDG_CONFIG_HOME/psd/psd.conf の USE_OVERLAYFS=\"yes\" という行をアンコメントしてデーモンを再起動することで有効にできます。\n\nLinux カーネルで利用できる overlayfs にはディストロによって複数のバージョンが存在します。バージョン 22 以前ではモジュールは 'overlayfs' と呼ばれていましたが、新しいバージョン (23 以上) ではモジュールの名前は 'overlay' になっています ('fs' が取られた)。Psd はあなたの使用しているカーネルで利用できる overlayfs を自動的に検出します。\n\npsd のバージョン 6.05 から、overlayfs モードを利用するには /usr/bin/psd-overlay-helper に (パスワードプロンプトが表示されない) sudo でアクセスできるようにするか、あるいはグローバルな sudo 権限が必要になりました。/etc/sudoers に以下の行を設定することでユーザーに権限が与えられます。root で /usr/bin/visudo を実行して追加してください:\n\n```\nusername ALL=(ALL) NOPASSWD: /usr/bin/psd-overlay-helper\n```\n\n上のプレビューモードのセクションの例を見れば、overlayfs を使うことでどれくらいメモリの使用量が節約できているのかわかります。\"overlayfs size\" とプロファイルごとの \"profile size\" の合計を比較してください。プロファイルに書き込まれているデータの量によって数字は変わってきますが、基本的に overlayfs のサイズはプロファイルのサイズより小さくなるはずです。\n\noverlayfs は、プロファイルの読み取り専用のベースコピー (browser-back-ovfs) をマウントし、その上で新しいデータを管理します。読み取り専用ファイルシステムへの再同期を避けるために、代わりにコピーが使用されます。そのため、overlayfs を使用すると、初期同期時間が短縮され、メモリ使用量がホームディレクトリのディスク領域よりも少なくなります。\n\n"
    },
    {
      "title": "/run/user/xxxx にプロファイルを乗せるのに大量のメモリを割り当てる",
      "level": 3,
      "content": "/run/user の容量は /etc/systemd/logind.conf の RuntimeDirectorySize ディレクティブによって制御されるのが通常です (詳しくは logind.conf の man ページを見て下さい)。デフォルトでは、物理メモリの 10% が使われますが、メモリの使用量を増やすことができます。tmpfs は実際に使用する分だけしか消費しません。許容できる最大限のサイズを指定してください。\n\n"
    },
    {
      "title": "スナップショット",
      "level": 3,
      "content": "ブラウザプロファイルの \"最後の機能する\" バックアップは、ファイルシステム上にまだうまく残っている可能性があります。psd を再起動すると (例えば再起動時)、プロファイルの tmpfs コピーへのシンボリックリンクが有効かどうかが確認されます。もしそれが無効であれば、psd はそれを元の場所に戻す前に ”最後の機能する” バックアップをスナップショットします。これは、psd が害を与えず、データの損失が何か他の要因によるものであることを確認するためのものです。\n\nスナップショットはブラウザプロファイルと同じディレクトリにあり、回復が行われた時間に対応する日付-時間スタンプが含まれています。例えば、chromium の場合は ~/.config/chromium-backup-crashrecovery-20130912_153310 となります。-- もちろん、date_time の接尾辞はそれぞれ異なります。\n\nスナップショットを復元するには:\n\n- psd を停止してください。\n- tmpfs のブラウザプロファイルディレクトリのシンボリックリンクがないことを確認してください。存在する場合、psd は何らかの理由で適切に停止していません。\n- プロファイルの\"問題がある\"コピーをバックアップに移動してください (やみくもに削除するのはやめましょう)\n- スナップショットディレクトリをブラウザが使用する名前にコピーしてください。\n\nChromium の例:\n\n```\n$ mv ~/.config/chromium ~/.config/chromium-bad\n$ cp -a ~/.config/chromium-backup-crashrecovery-20130912_153310 ~/.config/chromium\n```\n\nChromium を実行したらコピーしたバックアップスナップショットが使われます。全て問題ないようでしたら、ブラウザを閉じて psd を再起動してください。ここまできたら ~/.config/chromium-backup-crashrecovery-20130912_153310 を削除してもかまいません。\n\n"
    },
    {
      "title": "スナップショットをクリーンアップする",
      "level": 4,
      "content": "psd clean を実行すると、蓄積されたすべての回復スナップショットが削除されます。それらを削除することが確実な場合にのみ、これを実行してください。\n\n"
    },
    {
      "title": "サポート",
      "level": 2,
      "content": "気づいたことやコメントなどは 議論スレッド に投稿してください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- http://www.webupd8.org/2013/02/keep-your-browser-profiles-in-tmpfs-ram.html\n- http://bernaerts.dyndns.org/linux/250-ubuntu-tweaks-ssd\n\n"
    }
  ]
}
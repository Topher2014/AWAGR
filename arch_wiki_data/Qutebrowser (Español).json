{
  "title": "Qutebrowser (Español)",
  "url": "https://wiki.archlinux.org/title/Qutebrowser_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "qutebrowser es un buscador web con enfoque de teclado, se basa en Python y PyQt5.\n\n"
    },
    {
      "title": "Installación",
      "level": 2,
      "content": "Instala bien sea el paquete qutebrowser o el qutebrowser-gitAUR.\n\n"
    },
    {
      "title": "Uso básico",
      "level": 2,
      "content": "Usa : para acceder al interprete de comandos. Puedes utilizar Tab para autocompletar.\n\nCuando estrenes qutebrowser te aparecerá una página de inicio rápido. La página puede ser accedida más adelante mediante :help. Véase cheatsheet para revisar los atajos de teclado.\n\n"
    },
    {
      "title": "Configuración del usuario",
      "level": 3,
      "content": "qutebrowser puede ser configurado mediante una interfaz de usuario, la línea de comandos de qutebrowser o un script de Python. La documentación de qutebrowser explica a detalle como configurar qutebrowser con estos diferentes métodos. Para abrir el sistema de ayuda de qutebrowser teclee :help. En la página de ayuda escoge Configuring qutebrowser.\n\nPara encontrar las rutas donde se encontrarán los archivos de configuración abra la página especial qute://version. En Arch Linux, esta ruta típicamente es $XDG_CONFIG_HOME/qutebrowser/. La configuration hecha dentro de qutebrowser será almacenada en autoconfig.yml (archivo que no debería ser modificado por el usuario) mientras que la del script de Python del usuario es config.py.\n\n"
    },
    {
      "title": "Configuración en qutebrowser",
      "level": 4,
      "content": "Para especificar una única opción de configuración puedes simplemente teclear :set seguido del nombre de la opción de configuración y del nuevo valor que te gustaría aplicar a esta opción. Por ejemplo, podrías teclear\n\n```\n:set auto_save.session true\n```\n\npara abrir sus pestañas previas cuando vuelvas a abrir qutebrowser.\n\nPara abrir la interfaz de usuario de la página de configuración de qutebrowser's, teclea\n\n```\n:set\n```\n\nsin ningún argumento adicional. Allí podrás editar las diferentes configuraciones en la interfaz de usuario. Cuando haya terminado teclea :set de nuevo para guardar su configuración.\n\nPor ejemplo, en url.searchengines puedes configurar sus motores de búsqueda, los cuales están almacenados como una lista de pares clave-valor. En caso en que no hayas modificado esta opción aún, esta debería verse como\n\n```\n{\"DEFAULT\": \"https://duckduckgo.com/?q={}\"}\n```\n\nEsto configura DuckDuckGo como tu motor de búsqueda predeterminado, mientras que el marcador de posición {} será reemplazado por el termino que busques. Para añadir un atajo de teclado para buscar rápidamente en la wiki de Arch Linux podrías usar\n\n```\n{\"DEFAULT\": \"https://duckduckgo.com/?q={}\", \"wa\": \"https://wiki.archlinux.org/?search={}\"}\n```\n\nDe esta manera, como se describe en el comentario en la interfaz de usuario de qutebrowser, puedes buscar en la wiki de Arch Linux tecleando o wa <término-de-búsqueda>. Nota que los argumentos requeridos para ejecutar una búsqueda cambian para cada motor de búsqueda. Por ejemplo, para configurar Google, usa https://www.google.com/search?hl=en&q={}. O para configurar Brave Search, usa https://search.brave.com/search?q={}.\n\nSi Tor está instalado y ejecutándose en tu sistema y deseas utilizar la página onion de DuckDuckGo en su lugar, la configuración debería ser algo como\n\n```\n{\"DEFAULT\": \"https://duckduckgogg42xjoc72x3sjasowoarfbgcmvfimaftt6twagswzczad.onion/?q={}\", \"wa\": \"https://wiki.archlinux.org/?search={}\"}\n```\n\n"
    },
    {
      "title": "Atajos de teclado",
      "level": 4,
      "content": "Puedes editar los atajos de teclado directamente desde el navegador con el comando :bind key command puedes editarlo directamente desde el archivo. Nota que ya existen muchos atajos de teclado configurados. Si percibes un retardo en alguno de sus atajos de teclado esto se debe a que otro atajo también se ejecute mediante la misma combinación de teclas.\n\nVéase la documentación para encontrar ejemplos.\n\n"
    },
    {
      "title": "Reproducción de video",
      "level": 3,
      "content": "Véase Browser plugins#Multimedia playback.\n\nComo alternativa, puedes añadir una opción en su archvo config.py para abrir un video en mpv. En el siguiente ejemplo al presionar Ctrl+/ se mostrarán todos los links de video disponibles en la página, luego, simplemente presionando la combinación de teclas correspondiente para el link del video que selecciones, este se abrirá en mpv.\n\n```\nconfig.py\n```\n\n```\n...\nconfig.bind('<Ctrl+/>', 'hint links spawn --detach mpv {hint-url}')\n...\n```\n\n"
    },
    {
      "title": "Importar quickmarks/bookmarks",
      "level": 3,
      "content": "Qutebrowser admite la importación de bookmarks desde varios formatos a través del script de Python /usr/share/qutebrowser/scripts/importer.py. El formato de salida por defecto es el formato quickmarks de qutebrowser. Para una breve explicación de las diferencias entre bookmarks y quickmarks, véase la página qutebrowser FAQ.\n\n"
    },
    {
      "title": "Desde Chromium/Chrome",
      "level": 4,
      "content": "Ejecuta el script mencionado anteriormente especificando chromium como el primer argumento y el directorio que contiene el archivo de bookmarks como el segundo argumento. Para Chromium el archivo es ~/.config/chromium/Default y ~/.config/google-chrome/Default es el archivo para Chrome. La salida del script se puede añadir a ~/.config/qutebrowser/quickmarks. Algunos de los formatos de entrada se explican más adelante. Se puede encontrar información adicional proporcionando la bandera -h a importer.py.\n\n```\n$ python /usr/share/qutebrowser/scripts/importer.py chromium ~/.config/chromium/Default >> ~/.config/qutebrowser/quickmarks\n```\n\n"
    },
    {
      "title": "Desde Firefox",
      "level": 4,
      "content": "Exporta los bookmarks de Firefox a un archivo HTML (véase [1]). Luego, usa el script para importar.\n\n```\n$ python /usr/share/qutebrowser/scripts/importer.py bookmarks.html >> ~/.config/qutebrowser/quickmarks\n```\n\n"
    },
    {
      "title": "Desde un archivo bookmarks.html",
      "level": 4,
      "content": "Para importar desde un archivo bookmarks.html se requiere el paquete python-beautifulsoup4. Para importarlo solo debes proporcionar tu archivo bookmarks.html a importer.py y añadir la salida a ~/.config/qutebrowser/quickmarks.\n\n```\n$ python /usr/share/qutebrowser/scripts/importer.py ~/.config/chromium/Default >> ~/.config/qutebrowser/quickmarks\n```\n\n"
    },
    {
      "title": "Importar como bookmarks en lugar de quickmarks",
      "level": 4,
      "content": "Puedes utilizar cualquiera de los métodos mencionados anteriormente y propocionar una bandera adicional -b para cambiar el formato de salida del script a bookmarks. La salida debera entonces añadirse a ~/.config/qutebrowser/bookmarks/urls.\n\n```\n$ python /usr/share/qutebrowser/scripts/importer.py -b chromium ~/.config/chromium/Default >> ~/.config/qutebrowser/bookmarks/urls\n```\n\nNota que la bandera debe añadirse antes que la especificación del navegador.\n\n"
    },
    {
      "title": "Ingresar información de inicio de sesión automáticamente",
      "level": 3,
      "content": "Puedes utilizar el script de usuario qute-pass para ingresar automáticamente la información de inicio de sesión almacenada en tu gestor de contraseñas Pass. Necesitarás python-tldextract y un lanzador de aplicaciones compatible con dmenu (Español). Configura un atajo de teclado que ejecute :spawn --userscript qute-pass.\n\nNote: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nCitando la descripción del script:\n\n```\nEl dominio del sitio debe aparecer como un segmento en la ruta del pass , por ejemplo: \"github.com/cryzed\" o \"websites/github.com\". El cómo se determinen el usuario y la contraseña es abiertamente configurable mediante los argumentos del CLI. La información de inicio de sesión se inserta emulando eventos de teclado utilizando el comando fake-key de qutebrowser de esta manera: [USUARIO]<Tab>[CONTRASEÑA], que es compatible con casi todos los formularios de inicio de sesión.\n```\n\nPara mayor claridad, la estructura de paso que se utiliza por defecto debe ser algo como esto:\n\n```\nuser@computer$ pass\n```\n\n```\nPassword Store \n ├── ejemplo.sitio1.com \n │   └── usuario \n ├── ejemplo.sitio2.com \n │   └── usuario1 \n │   └── usuario2\n```\n\nEsto significa que cada sitio web es un directorio en tu carpeta ~/.password-store. Es dentro de cada directorio con nombre de sitio web donde los archivos se titulan nombredeusuario.gpg, nombredeusuario2.pgp, etc. y cada archivo contiene la contraseña asociada con cada nombre de usuario para el sitio web. Para aquellos que migren desde Firefox, una versión modificada de firefox_decrypt debería migrar los elementos en este formato.\n\nEl script de usuario proporciona muchas opciones para adaptarse a la mayoría de los flujos de trabajo y circunstancias especiales (como sólo querer insertar la contraseña o que el método habitual de insertar el nombre de usuario y la contraseña no funcione).\n\n"
    },
    {
      "title": "Activar la correción otrográfica",
      "level": 3,
      "content": "Primero, descarga el diccionario apropiado utilizando el script dictcli.py que viene incluido con qutebrowser.\n\nPor ejemplo, para español (España):\n\n```\n$ /usr/share/qutebrowser/scripts/dictcli.py install es_ES\n```\n\nEl script tiene otras características también, que pueden ser mostradas usando --help.\n\nLuego, establece lo siguiente en qutebrowser:\n\n```\n:set spellcheck.languages [\"es-ES\"]\n```\n\n"
    },
    {
      "title": "Minimizar el fingerprinting",
      "level": 3,
      "content": "Los sitios web pueden ser capaces de identificarte basándose en la combinación de información sobre el tamaño de la pantalla, el agente de usuario, las cabeceras HTTP_ACCEPT, etc. Consulta [2] para obtener más información y comprobar cuan único es tu navegador. A continuación se indican algunos pasos que puedes seguir para hacer que tu instalación de qutebrowser sea más \"genérica\".\n\nAdicionalmente, mira Firefox/Privacy#Configuration para obtener más ideas.\n\n"
    },
    {
      "title": "Establecer un agente de usuario común",
      "level": 4,
      "content": "Hay varios agentes de usuario disponibles como opciones cuando se utiliza set content.headers.user_agent. Otro agente de usuario, posiblemente más genérico, es:\n\n```\nMozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0\n```\n\n- Es posible que desees cambiar Windows NT 10.0 por X11; Linux x86_64, ya que los sitios web también pueden recopilar su tipo de plataforma a través de Javascript, y esta configuración no se puede cambiar en qutebrowser.\n- Cambiar tu user-agent del predeterminado impedirá que algunos sitios web funcionen correctamente. Por ejemplo, CAPTCHA mencionará que tu navegador no es compatible si el agente de usuario aparece como un navegador no actualizado.\n\n"
    },
    {
      "title": "Establecer una cabecera HTTP_ACCEPT común",
      "level": 4,
      "content": "A continuación se muestra un encabezado HTTP_ACCEPT común (predeterminado de Firefox). Simplemente escribe los siguientes comandos en el prompt\n\n```\nset content.headers.accept_language en-US,en;q=0.5\nset content.headers.custom '{\"accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\"}'\n```\n\n"
    },
    {
      "title": "Deshabilitar la lectura desde canvas",
      "level": 4,
      "content": "```\nset content.canvas_reading false\n```\n\n"
    },
    {
      "title": "Deshabilitar WebGL",
      "level": 4,
      "content": "Establece content.webgl como false para deshabilitar el WebGL.\n\n"
    },
    {
      "title": "Gestión de sesiones tipo dwb",
      "level": 3,
      "content": "Para que qutebrowser maneje las sesiones más como en dwb con la opción --restore (múltiples sesiones activas simultáneamente), puede usar este script wrapper[enlace roto 2024-12-15]. Utiliza --basedir para separar datos, caché y tiempo de ejecución para cada sesión, manteniendo la configuración compartida.\n\n"
    },
    {
      "title": "Deshabilitar sitios web",
      "level": 3,
      "content": "Crea el archivo ~/.config/qutebrowser/blocked-hosts e ingresa sitios que quieras bloquear en cada línea del mismo; www.youtube.com por ejemplo. Esto mantendrá la lista de adblock incorporada mientras se añaden los sitios web. Reinicia qutebrowser y ejecuta :adblock-update.\n\n"
    },
    {
      "title": "Habilita el bloqueador de anuncios del buscador de Brave",
      "level": 3,
      "content": "Instala el paquete python-adblock y habilita el bloqueador de anuncios en qutebrowser:\n\n```\n:set content.blocking.method both\n```\n\n"
    },
    {
      "title": "Abrir algunos links en mpv",
      "level": 3,
      "content": "Para abrir algunos links específicos en mpv (Como los de YouTube, reddit, etc) en luegar de cargar la página web. Esto puede usarse para evitar anuncios, rastreo, etc. Por supuesto, puedes sustituir mpv por el reproductor de video que prefieras.\n\n```\n:bind M hint links spawn mpv {hint-url}\n```\n\n"
    },
    {
      "title": "Habilitar el tema oscuro en cualquier sitio",
      "level": 3,
      "content": "```\n:set colors.webpage.darkmode.enabled true\n```\n\n"
    },
    {
      "title": "Deshabilitar javascript",
      "level": 3,
      "content": "```\n:set content.javascript.enabled false\n```\n\n"
    },
    {
      "title": "Enrutar el trafico a través de tor",
      "level": 3,
      "content": "Esto requiere que tor esté habilitado y funcionando. Ten en cuenta que esto sólo utiliza el proxy tor pero no te proporciona ninguna protección contra el fingerprinting que pueda tener en el navegador tor.\n\n```\n:set content.proxy socks://localhost:9050/\n```\n\n"
    },
    {
      "title": "Cambiar el tema del menú contextual",
      "level": 3,
      "content": "Para cambiar el tema del menú contextual encuentra la sección relevante de tu config.py y establece los ajustes apropiados. Por ejemplo:\n\n```\nconfig.py\n```\n\n```\n...\nc.colors.contextmenu.disabled.fg = '#808080'\nc.colors.contextmenu.menu.bg = '#353535'\nc.colors.contextmenu.menu.fg = '#ffffff'\nc.colors.contextmenu.selected.bg = '#909090'\n...\n```\n\n"
    },
    {
      "title": "Integración con KeePassXC",
      "level": 3,
      "content": "Qutebrowser incluye qute-keepassxc para la integración con KeePassXC.\n\nTo integrate with KeePassXC:\n\n1. Habilita las extensiones KeepassXC-Browser en tu configuración KeepassXC.Desde KeePassXC ve a Herramientas->Configuración->Integración del navegador, y marca \"Habilitar integración del navegador\".\n1. Asegúrate de tener un par de claves privadas-públicas en tu llavero GPG..Encuentra tus llaves secretas con gpg --list-secret-keys --keyid-format=long. La clave debe ser de confianza, por ejemplo, debe contener \"[ultimate]\" en el campo \"uid\".Si no es de confianza, puede hacerla de confianza con gpg --edit-key KEYID, luego trust, 5 (máxima confianza) y confirma.Finalmente, copia el id de la llave.\n1. Instala el paquete python-pynacl\n1. Adapta tu configuración de qutebrowser.Tú puedes, por ejemplo, añadir las siguientes lneas a tu ~/.config/qutebrowser/config.py. Recuerda reemplazar `ABC1234` con tu id de la clave GPG.\n\n```\nconfig.py\n```\n\n```\nconfig.bind('<Alt-Shift-u>', 'spawn --userscript qute-keepassxc --key ABC1234', mode='insert')\nconfig.bind('pw', 'spawn --userscript qute-keepassxc --key ABC1234', mode='normal')\n```\n\nPara manejar múltiples cuentas también necesitas tener rofi instalado.\n\n"
    },
    {
      "title": "Información sobre herramientas ilegible",
      "level": 3,
      "content": "Dependiendo de cual sea tu tema QT, la información de las herramientas podría ser difícil de leer. Para solucionar esto, crea un archivo de Hoja de Estilo Qt. Por ejemplo:\n\n```\n~/.local/share/qutebrowser/fix-tooltips.qss\n```\n\n```\nQToolTip {\n\tbackground-color: palette(highlight);\n\tborder: 2px solid palette(highlight);\n\tcolor: palette(text);\n}\n```\n\nA continuación, carga la hoja de estilo al iniciar qutebrowser:\n\n```\nqutebrowser --qt-arg stylesheet ~/.local/share/qutebrowser/fix-tooltips.qss\n```\n\nVéase el reporte de error para más detalles.\n\nEl reporte de error ofrece otro método usando qt5ctl que no requiere argumentos en el lanzamiento:\n\n1. En qutebrowser, :set qt.force_platformtheme qt5ctl\n1. En qt5ct, establece style: gtk2, standard dialogs: gtk2, palette: default\n1. Cambia a la pestaña Hojas de Estilo, y crea un nuevo archivo (yo lo llamé tooltip-gtk2.qss pero no debería importar)\n1. Coloca dentro el siguiente contendio: QToolTip{ background: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 0, stop: 0 palette(window), stop: 1 palette(alternate-window)); border-radius: 3px; border: 1px solid #000000; padding: 1px; color: palette(text); }\n1. Haz clic en Guardar y luego en Aceptar\n1. Asegúrate de marcar la casilla junto a este nuevo archivo para que se aplique al tema.\n1. Haz click en aplicar\n\n```\nQToolTip{\n\tbackground: QLinearGradient(x1: 0, y1: 0, x2: 0, y2: 0, stop: 0 palette(window), stop: 1 palette(alternate-window));\n\tborder-radius: 3px;\n\tborder: 1px solid #000000;\n\tpadding: 1px;\n\tcolor: palette(text);\n}\n```\n\n"
    },
    {
      "title": "Ver también",
      "level": 2,
      "content": "- Repositorio de GitHub\n- Página de inicio\n- Hilo BBS\n- Nuevo ejemplo de configuración\n\n"
    }
  ]
}
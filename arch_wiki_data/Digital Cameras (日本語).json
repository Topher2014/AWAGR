{
  "title": "Digital Cameras (日本語)",
  "url": "https://wiki.archlinux.org/title/Digital_Cameras_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Libgphoto2 は、digiKam や gPhoto2 などの外部 (フロントエンド) プログラムがデジタルカメラにアクセスできるようにするために設計されたコアライブラリです。公式にサポートされているカメラのリストは、公式ウェブサイト で確認できます (ただし、リストにないカメラも動作する場合があります)\n\nこの記事ではデジタルカメラにアクセスするための libgphoto2 の設定について説明します。デジタルカメラによっては通常の USB ストレージデバイス としてマウントされるので libgphoto2 を使う必要がないかもしれません。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール 1.1 マウント 1.2 フロントエンドアプリケーション\n- 2 GPhoto2 の使い方 2.1 gvfs による使用例\n- 3 トラブルシューティング 3.1 パーミッション問題 3.2 登録済みデバイス\n\n- 1.1 マウント\n- 1.2 フロントエンドアプリケーション\n\n- 2.1 gvfs による使用例\n\n- 3.1 パーミッション問題\n- 3.2 登録済みデバイス\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "libgphoto2 パッケージを インストール し、オプションで gphoto2 を使用してコマンドラインインターフェイスを追加します。\n\n"
    },
    {
      "title": "マウント",
      "level": 3,
      "content": "- gphotofs — カメラをファイルシステムとしてマウントできる FUSE モジュール。\n\n- gvfs-gphoto2 — GVfs 用の GPhoto2 バックエンドは、GNOME Files、Nemo、PCManFM、Thunar などの GVfs をサポートするファイルマネージャーからファイルシステムとしてカメラをマウントします。gnome の一部です。\n\n- Kamera — gPhoto2 カメラの KDE 統合。カメラデバイスの読み取りと書き込みを行うための構成ツールと KIO ワーカーを提供します。kde-graphics の一部です。\n\n"
    },
    {
      "title": "フロントエンドアプリケーション",
      "level": 3,
      "content": "- darktable — RAW 画像を管理・処理できるユーティリティ。\n\n- Digikam — KDE のデジタル写真管理アプリケーション。\n\n- Entangle — \"テザー撮影\" つまりコンピュータから完全に制御されたデジタルカメラで写真を撮るためのグラフィカルインターフェイスを提供します。\n\n- gThumb — GNOME の画像ブラウザ・ビューア。\n\n- GTKam — gphoto2 のグラフィカルな GTK+ 2 フロントエンド。\n\n- Kamera — gphoto2 のカメラと KDE の統合。\n\n- Pantheon Photos — Pantheon の画像ビューア。\n\n- Rapid Photo Downloader — カメラ、メモリカード、ポータブルストレージデバイスから写真やビデオをダウンロードします。\n\n- Rawstudio — GTK+ で書かれたオープンソースの RAW 画像変換プログラム。gphoto2 によるテザー撮影をサポート。\n\n- Shotwell — GNOME 用に作られたデジタル写真オーガナイザー。\n\n"
    },
    {
      "title": "GPhoto2 の使い方",
      "level": 2,
      "content": "GPhoto2 は libgphoto2 のコマンドラインクライアントです。GPhoto2 によってターミナルやスクリプトシェルから libgphoto2 ライブラリを利用してカメラの操作ができるようになります。これが主要なユーザーインターフェースになります。\n\nGPhoto2 にはカメラドライバ開発者向けの便利なデバック機能もあります。\n\nクイックコマンド\n\n- gphoto2 --list-ports\n- gphoto2 --auto-detect\n- gphoto2 --abilities\n- gphoto2 --summary\n- gphoto2 --list-files\n- gphoto2 --get-all-files\n- gphoto2 --capture-image-and-download\n- gphoto2 --set-config datetime=now - カメラの現在時刻を設定\n\n高度なファイル操作をするには:\n\n- gphoto2 --shell\n\n"
    },
    {
      "title": "gvfs による使用例",
      "level": 3,
      "content": "接続されたカメラを自動認識して必要なポートを確認:\n\n```\n$ gphoto2 --auto-detect\n```\n\n```\nModel                          Port\n----------------------------------------------------------\nCanon Digital IXUS 980 IS      usb:006,011\n```\n\nファイルマネージャを開いて上記のコマンドで確認したポートをアドレスに入力してください (例: gphoto2://[usb:006,011]) gvfs によってカメラがマウントされファイルマネージャから管理できるようになります。\n\n"
    },
    {
      "title": "パーミッション問題",
      "level": 3,
      "content": "ローカルセッションのユーザーにカメラのパーミッションを与えるのには ACL が使われます。これが機能しない場合は 一般的なトラブルシューティング#セッションのパーミッション を見て下さい。\n\n"
    },
    {
      "title": "登録済みデバイス",
      "level": 3,
      "content": "システムがカメラを自動的にファイルシステムとしてマウントしている可能性があり、その場合、一部の gphoto2 コマンドで \"cannot claim device\" というエラーメッセージが出力されることがあります。この場合は、ファイルブラウザを使用してカメラをアンマウントするか、以下のコマンドを実行してください。\n\n```\n$ gio mount -s gphoto2\n```\n\n"
    }
  ]
}
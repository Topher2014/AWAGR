{
  "title": "Arch - –ª—É—á—à–∏–π",
  "url": "https://wiki.archlinux.org/title/Arch_-_%D0%BB%D1%83%D1%87%D1%88%D0%B8%D0%B9",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "\"–ê—Ä—á ‚Äî –ª—É—á—à–∏–π!\" ‚Äî –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–π –∏ –ø–æ—Ä–∞–∂–∞—é—â–∏–π —Å–≤–æ–µ–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é –∏ –∏–∑—ã—Å–∫–∞–Ω–Ω–æ—Å—Ç—å—é, –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤–æ–∑–±—É–∂–¥–∞—é—â–∏–π –∏ —à–æ–∫–∏—Ä—É—é—â–∏–π (—Ö–æ—Ç—è, –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ—É—Å–ª–æ–∂–Ω–µ–Ω–Ω—ã–π) –ø—Ä–æ–µ–∫—Ç, –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –¥–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–µ–æ—Å–ø–æ—Ä–∏–º–æ–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—Å—Ç–≤–æ Arch.\n\n"
    },
    {
      "title": "–ù–µ–º–Ω–æ–≥–æ –∏—Å—Ç–æ—Ä–∏–∏",
      "level": 2,
      "content": "–ù–∞—á–∞–ª–æ –ø—Ä–æ–µ–∫—Ç—É –±—ã–ª–æ –ø–æ–ª–æ–∂–µ–Ω–æ –≤ –¥–∞–ª–µ–∫–æ–º –∞–ø—Ä–µ–ª–µ 2008 –≥–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ Arch Linux lucke –≤ –≤–∏–¥–µ –æ–±—ã—á–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥–Ω–æ–π –æ–±–æ–ª–æ—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ —Ç–æ–≥–¥–∞ —Å–º–æ–≥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–µ–æ–ø—Ä–æ–≤–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ —Ç–æ–≥–æ, —á—Ç–æ \"–ê—Ä—á ‚Äî –ª—É—á—à–∏–π!\". –û–Ω –±—ã–ª –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –º–∏—Ä—É –≤ —ç—Ç–æ–º –ø–æ—Å—Ç–µ –Ω–∞ —Ñ–æ—Ä—É–º–µ, –≤–æ—Å—Ö–∏—Ç–∏–≤ —É–º—ã –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–∑–∞–º–µ–¥–ª–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∏–ª–∏ –∫ –ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –µ–≥–æ –Ω–∞ —Å–∞–º—ã–µ —Ä–∞–∑–Ω—ã–µ —è–∑—ã–∫–∏, –∫–∞–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, —Ç–∞–∫ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ, —Ç–∞–∫ —á—Ç–æ –∫–∞–∂–¥–æ–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ —Å—É—â–µ—Å—Ç–≤–æ –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ –º–æ–≥–ª–æ –±—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ü–µ–Ω–∏—Ç—å –≤—Å—é –ø–æ–ª—å–∑—É –æ—Ç —Å–µ–≥–æ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è.\n\n"
    },
    {
      "title": "–ö–æ–¥",
      "level": 2,
      "content": "–ü—Ä–æ–µ–∫—Ç \"–ê—Ä—á ‚Äî –ª—É—á—à–∏–π!\" (\"Arch is the best\") –ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–∞–º—ã–µ —Ä–∞–∑–Ω—ã–µ —è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.\n\n```\n–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ(\"–ê—Ä—á - –ª—É—á—à–∏–π!\");\n```\n\n```\nREPORT zwhat_is_the_best.\nWRITE 'Arch is the best'.\n```\n\n```\nwith Ada.Text_IO;\nuse Ada.Text_IO;\nprocedure ArchIsTheBest is\nbegin\n   Put_Line(\"Arch is the best!\");\nend ArchIsTheBest;\n```\n\n```\n'Arch is the best!'\n```\n\n```\ndisplay alert \"Arch is the best!\"\nsay \"Indeed, Arch is the best.\"\n```\n\n```\nIT'S SHOWTIME\nTALK TO THE HAND \"Arch is the best!\"\nYOU HAVE BEEN TERMINATED\n```\n\n```\nimplement main () = println! \"Arch is the best!\"\n```\n\n```\nBEGIN {\n   print \"Arch is the best!\"\n}\n```\n\n```\n10 PRINT \"Arch is the best!\"\n```\n\n```\n@echo off\necho Arch is the best!\npause\n```\n\n```\n<v\"Arch is the best!\"0\n <,_@#:\n```\n\n```\nHORA DO SHOW\n    CE QUER VER ESSA PORRA? (\"Arch is the best!\\n\");\n    BORA CUMPADE 0;\nBIRL\n```\n\n```\nprint \"Arch is the best!\"\n```\n\n```\n#!/bin/sh\necho \"Arch is the best!\"\n```\n\n```\n#!/bin/sh\nyes Arch is the best!\n```\n\n```\n++>++++++>+++++<+[>[->+<]<->++++++++++<]>>.<[-]>[-<++>]\n<----------------.---------------.+++++.<+++[-<++++++++++>]<.\n>>+.++++++++++.<<.>>+.------------.---.<<.>>---.\n+++.++++++++++++++.+.<<+.[-]++++++++++.\n```\n\n```\n#include <stdio.h>\n#include <stdlib.h>\nint main(void)\n{\n   puts(\"Arch is the best!\");\n   return EXIT_SUCCESS;\n}\n```\n\n```\nusing System;\nConsole.WriteLine (\"Arch is the best!\");\n```\n\n```\n#include <iostream>\n#include <cstdlib>\nint main ()\n{\n   std::cout << \"Arch is the best!\" << std::endl;\n   return EXIT_SUCCESS;\n}\n```\n\n```\nIDENTIFICATION DIVISION.\n    PROGRAM-ID.  TheBest.\n\n    PROCEDURE DIVISION.\n        DISPLAY \"Arch is the best!\".\n        STOP RUN.\n```\n\n```\nalert 'Arch is the best!'\n```\n\n```\n(def translations {\"english\" \"Arch is the best!\",\n                   \"german\" \"Arch ist das Beste!\",\n                   \"australian\" \"Arch is fair dinkum, mate!\",\n                   \"h4x0r\" \"arhc 51 7he be57!\",\n                   \"spanish\" \"¬°Arch es el mejor!\"})\n\n(defn read-choice []\n  (println \"\\nAvailable languages: \")\n  (doall (map #(println (key¬†%)) translations))\n  (print \"Enter language or Ctrl-c: \") (flush)\n  (translations (read-line) :badinput))\n\n(defn arch-is-the-best []\n  (loop [choice (read-choice)]\n    (case choice\n      :badinput (do (print \"\\nBad input!\\n\")\n                    (recur (read-choice)))\n      (do (print \"\\n\" choice \"\\n\")\n          (recur (read-choice))))))\n```\n\n–∏–ª–∏\n\n```\n(def translations {\"english\" \"Arch is the best!\",\n                   \"german\" \"Arch ist das Beste!\",\n                   \"australian\" \"Arch is fair dinkum, mate!\",\n                   \"h4x0r\" \"arhc 51 7he be57!\",\n                   \"spanish\" \"¬°Arch es el mejor!\"\n                   \"street\" \"Arch iz da shizzle ma nizzle\"})\n(while 1\n  (println \"\\nPick a language:\\n\" (map #(key¬†%) translations) \"\\n language: \")\n  (println (translations (read-line) \"Not a valid language\")))\n```\n\n–∏–ª–∏\n\n```\n(prn \"Arch is the best!\")\n```\n\n```\n#!/usr/bin/sbcl --script\n(defparameter *best-list* '((English \"Arch is the best!\")\n          (Chinese \"Arch, Â•πÂá∫Á±ªÊãîËêÉ!\")\n          (German \"Arch ist das Beste!\")\n          (Greek \"Œ§Œø Arch ŒµŒØŒΩŒ±Œπ œÑŒø Œ∫Œ±ŒªœçœÑŒµœÅŒø!\")\n          (Latin \"Arch optimum est!\")\n          (French \"Arch est le meilleur!\")\n          (Polish \"Arch jest najlepszy!\")))\n(defun aitb ()\n  (format t \"Available languages: ~{~{~@(~a~)~*~}~^, ~}.~%\" *best-list*)\n  (loop for input = (progn (format t \"~&Input the desired language, (or 'quit'): ~%\")\n                           (force-output)\n                           (read-line))\n     if (string-equal input \"quit\")\n     do (loop-finish)\n     else\n     do (let ((language-def\n               (assoc input *best-list*\n                      :key (lambda (lang) (symbol-name lang))\n                      :test #'string-equal)))\n          (if language-def\n              (format t \"~&~A~%\" (second language-def))\n              (format t \"~&Invalid language.~%\"))))\n  (format t \"~&May the Arch be with you!~%\"))\n(aitb)\n```\n\n```\n(princ \"Arch is the best!\")\n```\n\n```\nputs \"Arch is the best!\"\n```\n\n```\n# For giving the message to your friends\nrequire \"http/server\"\n\nserver = HTTP::Server.new(80) do |context|\n  context.response.content_type = \"text/plain\"\n    context.response.print \"Arch is the best!\"\nend\n\nputs \"Listening.\"\nserver.listen\n```\n\n```\n#!/bin/csh\necho \"Arch is the best!\"\n```\n\n```\nbody * {\n    display: none;\n}\n\nbody::before {\n    content: \"Arch is the best!\";\n    font-family: monospace;\n    font-size: 2.7rem;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n}\n```\n\n```\nimport std.stdio¬†: writeln;\n void main()\n {\n     writeln(\"Arch is the best\");\n }\n```\n\n```\nmain(){\n   print('Arch is the best');\n }\n```\n\n```\nconsole.loge with '                So Arch'\n console.loge with '     Much Good'\n console.loge with '                          Wow'\n```\n\n```\nDESCRIPTION=\"Arch is the best!\"\nSRC_URI=\"https://wiki.archlinux.org/title/Arch_is_the_best\"\n\nLICENSE=\"GFDL_1.3\"\nSLOT=\"0\"\nKEYWORDS=\"\"\nIUSE=\"\"\n\nDEPEND=\"\"\nRDEPEND=\"\"\n\nsrc_compile() {\neinfo \"Arch is the best!\"\n}\n```\n\n```\n(message \"Arch is the best!\")\n```\n\n```\nüèÅ üçá\n    üòÄ üî§Arch is the best!üî§‚ùóÔ∏è\nüçâ\n```\n\n```\nIO.puts \"Arch is the best!\"\n```\n\n```\n-module(arch).\n-export([is_the_best/0]).\n   is_the_best() -> io:fwrite(\"Arch is the best!\\n\").\n```\n\n–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–µ –º–µ–∂–¥—É –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏\n\n```\n-module(arch).\n -export([ultimate_question/0,the_answer/0]).\n the_answer() ->\n     receive\n         {Client,who_is_the_best} ->\n             Client¬†! {self(),\"Arch is the best!\"};\n         {Client,_} ->\n             Client¬†! {self(),\"Taco Taco Taco!\"}\n     end,\n     the_answer().\n ultimate_question() ->\n     Pid = spawn(arch,the_answer,[]),\n     Pid¬†! {self(),who_is_the_best},\n     receive\n         {Pid,Response} -> io:format(\"~s~n\",[Response])\n     end.\n```\n\n```\nprintfn \"Arch is the best!\"\n```\n\n```\n\"Arch is the best\" print\n```\n\n```\nDear Princess Celestia: Letter About Arch Linux.\nToday I learned:\n    I wrote \"Arch is the best!\".\nYour faithful student, Twilight Sparkle\n```\n\n```\nfunction arch_is_the_best --on-event fish_prompt\n   echo -ne \"\\e[94mArch is the best!\\e[0m\"\n end\n```\n\n```\n.\" Arch is the best\" cr -- kiss way\n```\n\n```\nprogram arch\n   print *,\"Arch is the best!\"\nend program arch\n```\n\n```\ninit\n print \"Arch is the best\"\n```\n\n```\n#!/usr/bin/env gjs\nprint ('Arch is the best');\n```\n\n```\nimport gleam/io\n\npub fn main() {\n  io.println(\"Arch is the best!\")\n}\n```\n\n```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n fmt.Println(\"Arch is the best!\")\n}\n```\n\n```\nprintln 'Arch is the best!'\n```\n\n```\nmain = putStrLn \"Arch is the best!\"\n```\n\n```\n<!DOCTYPE html>\n<html lang='en'>\n   <head>\n      <title>Arch is the best!</title>\n   </head>\n   <body>\n       Arch is the best!\n   </body>\n</html>\n```\n\nArch is the best!\n\n```\nmodule Main\n\nmain¬†: IO ()\nmain = putStrLn \"Arch is the best!\"\n```\n\n```\nPLEASE NOTE THAT THIS WAS MADE FOR C-INTERCAL\n       DO ,10 <- #18\n       DO ,10SUB#1 <- #126\n       DO ,10SUB#2 <- #52\n       DO ,10SUB#3 <- #136\nPLEASE DO ,10SUB#4 <- #176\n       DO ,10SUB#5 <- #18\n       DO ,10SUB#6 <- #110\n       DO ,10SUB#7 <- #200\nPLEASE DO ,10SUB#8 <- #202\n       DO ,10SUB#9 <- #214\n       DO ,10SUB#10 <- #24\n       DO ,10SUB#11 <- #112\nPLEASE DO ,10SUB#12 <- #162\n       DO ,10SUB#13 <- #190\n       DO ,10SUB#14 <- #160\nPLEASE DO ,10SUB#15 <- #216\n       DO ,10SUB#16 <- #160\n       DO ,10SUB#17 <- #170\nPLEASE DO ,10SUB#18 <- #52\n       DO READ OUT ,10\n       DO GIVE UP\n```\n\nAlso a much larger ASCII-transcoding version.\n\n(Non-portable C-INTERCAL I/O had to be used, since INTERCAL-72 does not allow arbitrary characters.)\n\n```\n\"Arch is the best!\" println\n```\n\n```\npublic class ArchIsTheBest {\n   public static void main(String[] args) {\n       System.out.println(\"Arch is the best!\");\n   }\n}\n```\n\n```\nconsole.log('Arch is the best!');\n```\n\n```\nalert('Arch is the best!');\n```\n\n```\nprintln(\"Arch is the best!\")\n```\n\n```\nfun main() {\n   println(\"Arch is the best!\")\n}\n```\n\n```\n\\documentclass{minimal}\n\n\\begin{document}\n  Arch is the best!\n\\end{document}\n```\n\n```\n\\version \"2.12.3\"\n\\include \"english.ly\"\n\\header { title = \"Arch is the best!\" }\n\\score\n{\n   <<\n      \\relative c' { c4 e g c \\bar \"||\" }\n      \\addlyrics   { Arch is the best! }\n   >>\n}\n```\n\n```\nHAI\nCAN HAS STDIO?\nVISIBLE \"ARCH IS TEH PWNZ LOL!\"\nKTHXBYE\n```\n\n```\nprint \"Arch is the best!\"\n```\n\n```\nbCBA@?>=<;:9876543210/.-,+*)('&%$#\"!~}|{zyxwvutsrqponmlkjihgfedcba`_^]\n\\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?>=<;:9y16543210/.-,+*)('&}C#\"!~}|{zyxwvu\ntsrqponmlkjihgfedcba`_^]\\[ZYXWVUTSRQPONMLK-CgGFEDCBA@?>=<;:98x6543210/\n.-,+*)('&%$#\"!~}|u;yxwpun4rqpRhmf,jihgIe^$ba`_^]\\[ZYXQVUTMqQPONMFjJI+A\neEDC%A:^>=<|:981U54t21*/.-&Jk)('&}C#\"!aw={z\\xwvun4lqpi/mlkjiKaf_%p\n```\n\n```\ndisp('Arch is the best!');\n```\n\n```\nwriteln(\"Arch is the best!\");\n```\n\n```\n/* mbld -b aitb aitb.myr */\nuse std\nconst main = {\n  std.put(\"Arch is the best!\\n\")\n}\n```\n\n```\n;nasm -f elf32 arch.asm\n;ld -o arch arch.o\n;./arch\n\nsection .text\nglobal _start\n_start:\nmov edx,len\nmov ecx,msg\nmov ebx,1\nmov eax,4\nint 0x80\nxor ebx,ebx\nmov eax,1\nint 0x80\nmsg: db \"Arch is the best!\",10\nlen equ $-msg\n```\n\n```\n;nasm -f elf64 arch.asm\n;ld -o arch arch.o\n;./arch\n\nsection .text\nglobal _start\ns:\n    db 'Arch is the best!',0ah\nl equ $-s\n_start:\n    mov rax,1\n    mov rdi,1\n    mov rsi,s\n    mov rdx,l\n    syscall\n    mov rax,60\n    xor rdi,rdi\n    syscall\n```\n\n```\necho \"Arch is the best!\"\n```\n\n```\nconsole.log('Arch is the best!');\n```\n\n```\nrequire('http').createServer((req,res) => {res.writeHead(200, {'Content-Type': 'text/plain'});res.end('Arch is the best!');}).listen(80);\n```\n\n```\nNSLog(@\"Arch is the best!\");\n```\n\n```\nprint_endline \"Arch is the best!\"\n```\n\n```\nprintf(\"Arch is the best!\\n\")\n```\n\n```\nOok. Ook. Ook. Ook. Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook. Ook. Ook! Ook? Ook. Ook? Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook? Ook. Ook? Ook! Ook? Ook. Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook! Ook? Ook! Ook! Ook? Ook! Ook. Ook? Ook! Ook? Ook! Ook! Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook? Ook! Ook? Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook? Ook! Ook? Ook. Ook! Ook. Ook. Ook? Ook. Ook? Ook. Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook? Ook. Ook! Ook. Ook. Ook? Ook. Ook? Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook? Ook. Ook! Ook. Ook. Ook? Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook? Ook. Ook. Ook. Ook! Ook. Ook! Ook? Ook! Ook! Ook? Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook.\n```\n\n```\nprogram ArchIsTheBest;\nbegin\n  writeln('Arch is the best!');\nend.\n```\n\n```\n%PDF-1.1\n\n1 0 obj\n<< /Type /Catalog\n/Pages 2 0 R\n>>\nendobj\n\n2 0 obj\n<< /Type /Pages\n/Kids [3 0 R]\n/Count 1\n/MediaBox [0 0 595 842]\n>>\nendobj\n\n3 0 obj\n<<  /Type /Page\n/Parent 2 0 R\n/Resources\n<< /Font\n<< /F1\n<< /Type /Font\n/Subtype /Type1\n/BaseFont /Times-Roman\n>>\n>>\n>>\n/Contents 4 0 R\n>>\nendobj\n\n4 0 obj\n<< /Length 48 >>\nstream\nBT\n/F1 72 Tf\n55 460 Td\n(Arch is the best!) Tj\nET\nendstream\nendobj\n\nxref\n0 5\n0000000000 65535 f\n0000000016 00000 n\n0000000066 00000 n\n0000000148 00000 n\n0000000303 00000 n\ntrailer\n<<  /Root 1 0 R\n/Size 5\n>>\nstartxref\n402\n%%EOF\n```\n\n```\n#!/usr/bin/env perl\nprint \"Arch is the best!\\n\";\n```\n\n```\n#!/usr/bin/env perl6\nsay 'Arch is the best!';\n```\n\n```\n<?php\n   echo \"Arch is the best!\\n\";\n?>\n```\n\n```\nprint(\"Arch is the best!\",0,0,#1897D1)\nframe\n```\n\n```\nactor Main\n  new create(env: Env) =>\n    env.out.print(\"Arch is the best!\")\n```\n\n```\n.section .data\narchIsBest:\n   .ascii  \"Arch is the best!\\n\"\narchIsBest_len:\n   .long   . - archIsBest\n   .section .text\n   .globl _start\n_start:\n   xorl %ebx, %ebx\n   movl $4, %eax\n   xorl %ebx, %ebx\n   incl %ebx\n   leal archIsBest, %ecx\n   movl archIsBest_len, %edx\n   int $0x80\n   xorl %eax, %eax\n   incl %eax\n   xorl %ebx, %ebx\n   int $0x80\n```\n\n```\n%!PS\n/monospace 60 selectfont\n10 420 moveto\n(Arch is the best!) show\nshowpage\n```\n\n```\nWrite-Output \"Arch is the best!\"\n```\n\n```\nprintln(\"Arch is the best!\");\n```\n\n```\nformat('Arch is the best~n',[]).\n```\n\n```\nprint('Arch is the best!')\n```\n\n```\nPRINT \"Arch is the best!\"\n```\n\n```\narchIsBest <- function() { cat(\"Arch is the best!\\n\") }\narchIsBest()\n```\n\n```\n#lang racket\n\n(let ([str \"Arch is the best!\\n\"])\n    (write-string str)\n    (values))\n```\n\n```\n#!/usr/bin/ruby -w\nputs 'Arch is the best!'\n```\n\n```\nfn main() {\n    println!(\"Arch is the best!\");\n}\n```\n\n```\nsalt '*' event.fire '{\"data\":\"Arch Is the best!\"}' 'arch/best'\n```\n\n```\nobject ArchIsBest extends App {\n     println(\"Arch is the best!\")\n }\n```\n\n```\n(display \"Arch is the best!\\n\")\n```\n\n```\n#!/usr/bin/env seed\nprint ('Arch is the best');\n```\n\n```\nArch is the Best.\n\nArthur, a young man who is the best.\nIsabella, a likewise young woman who be.\nThe Ghost, an undead who is the article.\nBeatrice, a young woman who is an adjective.\n\n\n                    Act I: Setting of the Variables.\n\n                    Scene I: Setting of Isabella and Arthur.\n\n[Enter Arthur and Isabella]\n\nArthur:\n You are as dirty as the square of the sum of a rotten smelly foul devil\n and a vile lie! You are as bold as the sum of yourself and an evil hog!\n\nIsabella:\n Thou art as big as the square of a cute fair sweet flower! You are as proud\n as the sum of thyself and a cow.\n\n[Exit Arthur]\n\n                    Scene II: Setting of The Ghost.\n\n[Enter The Ghost]\n\nIsabella:\n You art as loving as myself. Thou are as huge as the sum of yourself and twice\n a red old hair. You are as cowardly as the sum of yourself and a fat goat!\n\n[Exit Isabella]\n\n                    Scene III: Setting of Beatrice.\n\n[Enter Beatrice]\n\nThe Ghost:\n Thou are as good as the sum of Isabella and a mighty fine rich noble King.\n\n[Exeunt The Ghost and Beatrice]\n\n                    Act II: Printing Arch is the Best.\n\n                    Scene I: Arch.\n\n[Enter Arthur and Beatrice]\n\nBeatrice:\n Speak thy mind! You art as peaceful as the quotient between thyself and the\n clearest Lord.\n\nArthur:\n Speak your mind!\n\n[Exeunt Arthur and Beatrice]\n\n[Enter Isabella and The Ghost]\n\nThe Ghost:\n Thou are as normal as the sum of thyself and a town. Speak thy mind!\n\nIsabella:\n Speak your mind!\n\n[Exit Isabella]\n\n[Enter Arthur]\n\nThe Ghost:\n Speak thy mind!\n\n[Exit Arthur]\n\n                    Scene II: is.\n\n[Enter Beatrice]\n\nBeatrice:\n Thou are as old as the sum of yourself and a nose. Speak your mind!\n\nThe Ghost:\n You art as pretty as the sum of thyself and a face. Speak your mind.\n\n[Exit The Ghost]\n\n[Enter Arthur]\n\nBeatrice:\n Speak thy mind.\n\n                    Scene III: the.\n\nArthur:\n You are as blue as the sum of yourself and a hamster. Speak thy mind!\n\n[Exit Arthur]\n\n[Enter The Ghost]\n\nBeatrice:\n You are as prompt as the sum of thyself and a lie! Speak your mind.\n\n[Exit Beatrice]\n\n[Enter Isabella]\n\nThe Ghost:\n You art as happy as the sum of thyself and a large moon. Speak thy mind!\n\n[Exit The Ghost]\n\n[Enter Arthur]\n\nIsabella:\n Speak thy mind.\n\n[Exit Arthur]\n\n                    Scene IV: Best.\n\n[Enter Beatrice]\n\nBeatrice:\n Thou are as blue as the sum of the sum of a curse and thyself and a bad\n codpiece. Speak your mind! You art as lovely as the sum of the sum of the\n happiness and yourself and a blossoming flower. Speak thy mind.\n\nIsabella:\n You are as healthy as the sum of yourself and a plague! Speak thy mind.\n Thou art as huge as the sum of thyself and a hero. Speak your mind!\n\n[Exit Beatrice]\n\n[Enter Arthur]\n\nIsabella:\n You art as green as the sum of thyself and a mother. Speak your mind.\n\n[Exeunt]\n```\n\n```\nShoes.app :width => 135, :height => 30 do\n    para \"Arch is the Best!\"\nend\n```\n\n```\nTranscript show: 'Arch is the best!'.\n```\n\n```\npragma solidity ^0.6.0;\n\ncontract ArchIsTheBest {\n  function archIsTheBest() external pure returns (string memory) {\n    return \"Arch is the best!\";\n  }\n}\n```\n\n```\nSELECT 'Arch is the best!';\nSELECT 'Arch is the best!' FROM dual; -- –¥–ª—è Oracle DB\n```\n\n```\nprint \"Arch is the best!\\n\"\n```\n\n```\nprint(\"Arch is the best!\")\n```\n\n```\n#!/usr/bin/env tclsh\nputs \"Arch is the best!\"\n```\n\n```\nArch is the best!\n\\bye\n```\n\n```\nsay it with me, \"Arch is the best!\";\namerica is great.\n```\n\n```\n#include <Uefi.h>\nEFI_STATUS EFIAPI\nArchIsTheBest (\n              IN EFI_HANDLE        ImageHandle,\n              IN EFI_SYSTEM_TABLE  *SystemTable\n              )\n{\n   SystemTable -> ConOut-> OutputString(SystemTable->ConOut, L\"Arch is the best!\\n\");\n   return EFI_SUCCESS;\n}\n```\n\n```\nfn main() {\n        println('Arch is the best!')\n}\n```\n\n```\nvoid main(string[] args) {\nstdout.printf(\"\\nArch is the best!\\n\\n\");\n}\n```\n\n```\n\"Arch is the best!\" cha'\n```\n\n```\nmodule top;\n  initial $display(\"Arch is the best!\");\nendmodule\n```\n\n```\nuse std.textio.all;\n\nentity top is\nend top;\n\narchitecture behaviour of top is begin\n  process begin\n    write (output, String'(\"Arch is the best!\"));\n    wait;\n  end process;\nend behaviour;\n```\n\n```\necho \"Arch is the best!\"\n```\n\n```\nModule Arch\n  Sub Main()\n      MsgBox(\"Arch is the best!\")\n  End Sub\nEnd Module\n```\n\n```\nÂêæÊúâ‰∏ÄË®Ä„ÄÇÊõ∞„Äå„ÄåÈòøÁ•∫ÔºåÁõ°ÂñÑÁü£„ÄÇ„Äç„Äç„ÄÇÊõ∏‰πã„ÄÇ\n```\n\n```\nvoid setup()\n{\n   Serial.begin(9600);\n}\nvoid loop()\n{\n   Serial.print(\"Arch is the best!\");\n}\n```\n\ncc -lX11 arch.c\n\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include <X11/Xlib.h>\n\nint main()\n{\n       Display *d;\n       Window w;\n       XEvent e;\n       int s;\n\n       if (!(d = XOpenDisplay(NULL))) {\n               fprintf(stderr, \"Couldn't open display, but Arch is the best!\\n\");\n               exit(1);\n       }\n\n       s = DefaultScreen(d);\n       w = XCreateSimpleWindow(d, RootWindow(d,s), 0, 0, 110, 20, 0,\n                               0, WhitePixel(d,s));\n       XSelectInput(d, w, ExposureMask | KeyPressMask);\n       XMapWindow(d,w);\n\n       while (1) {\n               XNextEvent(d, &e);\n               if (e.type == Expose) {\n                       XDrawString(d, w, DefaultGC(d, s), 5, 15, \"Arch is the best!\", 17);\n               }\n       }\n\n       XCloseDisplay(d);\n       return 0;\n}\n```\n\n```\n(define-const arch String \"Arch is the best\")\n(simplify (str.++ arch))\n```\n\n```\nconst std = @import(\"std\");\n\npub fn main() !void {\n    std.debug.warn(\"Arch is the best!\\n\", .{});\n}\n```\n\n```\nFUNC Main() int\n  IO.write(\"Arch is the best!\")\n  RETURN 0\n}\n```\n\n```\n#!/bin/zsh -f\nsetopt extendedglob\nprint -- $(echoti setaf 2) ${$(<<<${${${(@j:¬†:)${(@s:_:)${:-What_Linux_is_the_best?}}}/* (#b)([A-Z]i)/Arch $match[1]}} tr '?' '!')} $terminfo[sgr0]\n```\n\n"
    }
  ]
}
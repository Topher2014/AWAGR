{
  "title": "Benchmarking (日本語)",
  "url": "https://wiki.archlinux.org/title/Benchmarking_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- パフォーマンスの最大化\n- ストレステスト\n- Sysstat\n\nベンチマークとはパフォーマンスを測定し他のシステムと結果を比較する行為、また手順が統合され広く認められた標準のことです。システムのパフォーマンスを統合的な方法で評価することで以下のような質問に答えることが可能です:\n\n- システムのパフォーマンスが期待通りに出ているか?\n- どのドライバーバージョンを使えば最適なパフォーマンスを得られるか?\n- ある作業をするのに十分な能力がシステムにあるか?\n\nシステムパフォーマンスを調べることができるツールは多数存在します。以下はその利用可能なツールのリストです。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 単体のツール 1.1 UnixBench 1.2 interbench 1.3 ttcp 1.4 iperf 1.5 time 1.6 hdparm 1.7 gnome-disks 1.8 KDiskMark 1.9 systemd-analyze 1.10 dd 1.11 dcfldd 1.12 7z 1.13 peakperf 1.14 cryptsetup\n- 2 ソフトウェアスイート 2.1 Bonnie++ 2.2 IOzone 2.3 HardInfo 2.4 Phoronix Test Suite 2.5 S 2.6 s-tui 2.7 sysbench\n- 3 フラッシュメディア\n- 4 グラフィックス 4.1 Basemark GPU 4.2 Blender-benchmark 4.3 GFXBench 4.4 glmark2 4.5 glxgears 4.6 GpuTest 4.7 intel-gpu-tools 4.8 MangoHud 4.9 Unigine Engine 4.10 vkmark\n- 5 参照\n\n- 1.1 UnixBench\n- 1.2 interbench\n- 1.3 ttcp\n- 1.4 iperf\n- 1.5 time\n- 1.6 hdparm\n- 1.7 gnome-disks\n- 1.8 KDiskMark\n- 1.9 systemd-analyze\n- 1.10 dd\n- 1.11 dcfldd\n- 1.12 7z\n- 1.13 peakperf\n- 1.14 cryptsetup\n\n- 2.1 Bonnie++\n- 2.2 IOzone\n- 2.3 HardInfo\n- 2.4 Phoronix Test Suite\n- 2.5 S\n- 2.6 s-tui\n- 2.7 sysbench\n\n- 4.1 Basemark GPU\n- 4.2 Blender-benchmark\n- 4.3 GFXBench\n- 4.4 glmark2\n- 4.5 glxgears\n- 4.6 GpuTest\n- 4.7 intel-gpu-tools\n- 4.8 MangoHud\n- 4.9 Unigine Engine\n- 4.10 vkmark\n\n"
    },
    {
      "title": "UnixBench",
      "level": 3,
      "content": "unixbench のパッケージは AUR に存在します: unixbenchAUR。ベンチマークを実行するにはターミナルから ubench を実行します。\n\n参照:\n\n- https://code.google.com/p/byte-unixbench/\n- https://code.google.com/p/byte-unixbench/source/browse/trunk/UnixBench/USAGE\n\n"
    },
    {
      "title": "interbench",
      "level": 3,
      "content": "interbench はインタラクティブに Linux のベンチマークを行うためのアプリケーションです。CPU や I/O のスケジューラ、ファイルシステムの変更やオプションなど、Linux カーネル内の設計やシステム設定の変更による効果を測定するために作られています。\n\ninterbench は AUR から利用可能です: interbenchAUR\n\n参照:\n\n- リアルタイムプロセス管理\n- 高度なトラフィック制御\n- Linux-ck\n- Linux-pf\n\n"
    },
    {
      "title": "ttcp",
      "level": 3,
      "content": "(n)(nu)ttcp は様々なネットワーク接続における二点間の帯域を計測します。帯域を計測するために両方のノードにプログラムをインストールする必要があります。\n\nttcp には様々な亜種が存在し AUR から利用できます (下のリンクを参照)\n\n参照:\n\n- ttcpAUR\n- nuttcpAUR\n\n"
    },
    {
      "title": "iperf",
      "level": 3,
      "content": "iperf は使いやすい二点間の帯域幅テストツールです。TCP または UDP のどちらかが使えます。出力を整形して表示したり並列テストが可能です。\n\niperf は公式リポジトリからインストールできます。また、iperf の別バージョンが iperf3 から利用可能です。\n\n"
    },
    {
      "title": "time",
      "level": 3,
      "content": "time コマンドを使うことでコマンドの実行にかかった時間を求めることができます。起動から終了までの時間を表示します。time はほとんどの Linux システムに標準で含まれています。\n\n```\n$ time tar -zxvf archive.tar.gz\n```\n\n"
    },
    {
      "title": "hdparm",
      "level": 3,
      "content": "ストレージメディアのベンチマークは Hdparm で取ることができます (hdparm) hdparm に -Tt スイッチをつけると、シーケンシャルリードの時間を計ることができます。この方法はパーティションアライメントに依存しません。\n\n```\n# hdparm -Tt /dev/sdX\n/dev/sdX:\nTiming cached reads:   x MB in  y seconds = z MB/sec\nTiming buffered disk reads:  x MB in  y seconds = z MB/sec\n```\n\n"
    },
    {
      "title": "gnome-disks",
      "level": 3,
      "content": "gnome-disks というグラフィカルなベンチマークが gnome-disk-utility パッケージに含まれていて、 最小/最大/平均読み取り回数と平均アクセス時間、そして美しいグラフィカルな表示が得られます。この方法は、パーティションアライメントに依存しません。\n\n```\n# gnome-disks\n```\n\nGUI からベンチマークボタン(\"More actions...\"' > \"Benchmark Volume...\")があります。例\n\n"
    },
    {
      "title": "KDiskMark",
      "level": 3,
      "content": "kdiskmark は、非常に親しみやすいグラフィカルユーザインタフェースを備えた HDD および SSD ベンチマークツールです。プリセットと強力な GUI を持つKDiskMark は、Flexible I/O Tester を呼び出して出力を処理し、見やすく解釈しやすい包括的なベンチマーク結果を提供します。\n\n"
    },
    {
      "title": "systemd-analyze",
      "level": 3,
      "content": "```\nsystemd-analyze plot > boot.svg\n```\n\nカーネル時間、ユーザー空間時間、各サービスにかかる時間など、ブートシークエンスの詳細なグラフィックをプロットします。例\n\n"
    },
    {
      "title": "dd",
      "level": 3,
      "content": "dd ユーティリティは、読み込みと書き込みの両方を測定するために使用することができます。この方法は、パーティションのアライメントに依存します! 言い換えれば、パーティションのアライメントに失敗した場合、マウントされたファイルシステムに読み書きしているため、この事実が表示されるのです。\n\nまず、SSD 上に少なくとも 1.1 GB の空き領域があるディレクトリ(そして明らかにユーザーに wrx パーミッションを与えているディレクトリ)に入り、書き込み速度を測定し、デバイスに何か読み込むものを与えるためにテストファイルを書き込んでください。\n\n```\n$ dd if=/dev/zero of=/path/to/SSD/tempfile bs=1M count=1024 conv=fdatasync,notrunc status=progress\n```\n\n```\n1024+0 records in\n1024+0 records out\nv bytes (w MB, x MiB) copied, y s, z MB/s\n```\n\n次に、バッファキャッシュをクリアして、デバイスから直接読み取り速度を正確に測定します。\n\n```\n# echo 3 > /proc/sys/vm/drop_caches\n$ dd if=tempfile of=/dev/null bs=1M count=1024 status=progress\n```\n\n```\n1024+0 records in\n1024+0 records out\nv bytes (w MB, x MiB) copied, y s, z MB/s\n```\n\n最後のファイルがバッファに入ったので、このコマンドを繰り返して、バッファキャッシュの速度を確認します。\n\n```\n$ dd if=tempfile of=/dev/null bs=1M count=1024 status=progress\n```\n\n```\n1024+0 records in\n1024+0 records out\nv bytes (w MB, x MiB) copied, y s, z MB/s\n```\n\n最後に、一時ファイルを削除します。\n\n```\n$ rm tempfile\n```\n\n"
    },
    {
      "title": "dcfldd",
      "level": 3,
      "content": "Dcfldd は古き良き dd のように平均速度を MB/s で表示しませんが、 time でそれを回避することができます。\n\nディスクをクリアする実行時間を設定します。\n\n```\n# time dcfldd if=/dev/zero of=/dev/sdX bs=4M\n18944 blocks (75776Mb) written.dcfldd:: No space left of device\nreal     16m17.033s\nuser     0m0.377s\nsys      0m51.160s\n```\n\ndcfldd コマンドの出力を時間(秒)で割って、MB/s を算出します。この例では、75776Mb/(16.4 min * 60) = 77.0 MB/s となります\n\n"
    },
    {
      "title": "7z",
      "level": 3,
      "content": "7z benchmark コマンドは、CPU の速度を MIPS で計測したり、RAM にエラーがないかを確認するために使用することができます。p7zip をインストールし、以下のコマンドを実行するだけです。より詳細な情報は [1] で確認できます。\n\n```\n$ 7z b\n```\n\n"
    },
    {
      "title": "peakperf",
      "level": 3,
      "content": "peakperf-gitAUR は、x86_64 CPU でピーク性能を実現するマイクロベンチマークです。CPU の冷却問題など、いくつかの問題はあなたの CPU が提供するパフォーマンスを低下させるかもしれません。peakperf を使えば、あなたの CPU がその能力をフルに発揮しているかどうかをチェックすることができます。\n\nあなたの CPU を使って得られるはずの性能(GFLOP/s で測定)を計算し([2] 参照)、peakperf が出す性能と比較することができます。両方の値が同じ (または非常に似ている) 場合、あなたの CPU はあるべき動作をしています。\n\n"
    },
    {
      "title": "cryptsetup",
      "level": 3,
      "content": "cryptsetup ベンチマークは、さまざまな暗号化アルゴリズム (暗号) の速度を測定するために使用できます。\n\n```\n$ cryptsetup benchmark\n```\n\n"
    },
    {
      "title": "Bonnie++",
      "level": 3,
      "content": "オリジナルの Bonnie を C++ で書きなおしたベンチマークスイートです。ハードドライブとファイルシステムのパフォーマンステストを複数行います。\n\nbonnie++ は公式リポジトリから利用可能です。\n\n参照:\n\n- 作者のサイト\n- Wikipedia:Bonnie++\n\n"
    },
    {
      "title": "IOzone",
      "level": 3,
      "content": "IOzone は製造供給元のコンピュータープラットフォームのファイルシステムを分析するのに役立ちます。\n\nこのプログラムは AUR から利用可能です: iozoneAUR\n\n参照:\n\n- BBS Article: iozone to evaluate I/O schedulers... results NOT what you'd expect!\n\n"
    },
    {
      "title": "HardInfo",
      "level": 3,
      "content": "hardInfo はシステムのハードウェア・オペレーティングシステムの情報を収集したり、ベンチマークを実行して、印刷可能な HTML やプレーンテキスト形式のレポートを生成することができます。HardInfo は CPU と FPU のベンチマークを行い、とてもキレイな GTK ベースのインターフェイスを持っています。\n\n"
    },
    {
      "title": "Phoronix Test Suite",
      "level": 3,
      "content": "Phoronix Test Suite は包括的なテスト・ベンチマークのプラットフォームです。拡張性のあるフレームワークを提供することで新しいテストを簡単に追加できるようになっています。クリーンで、再現性があり使いやすい形で、質的・量的なベンチマークが効果的に実行できるように設計されているソフトウェアです。\n\nPhoronix Test Suite は2004年から Phoronix.com によって開発されている拡張的なテスト・内部ツールをベースにしており、業界をリードする第一線のコンピューターハードウェア・ソフトウェアメーカーによってサポートを受けています。このソフトウェアはオープンソースであり GNU GPLv3 でライセンスされています。\n\nもともとは Linux のテストを自動化するために開発されましたが、それから Phoronix Test Suite は OpenSolaris, Apple macOS, Microsoft Windows, BSD オペレーティングシステムのサポートも追加されました。Phoronix Test Suite は軽量なプロセッシングコア (pts-core) と XML ベースのプロファイルと関連するリソーススクリプトからなる各ベンチマークによって構成されています。ベンチマークのインストールから、実際のベンチマーク、主要なハードウェア・ソフトウェアのコンポーネントの解析まで、処理はほとんど自動で行われ、繰り返し実行することが可能で、ユーザーが行う必要があるのは実行の確認だけです。\n\nPhoronix Test Suite のインターフェイスは OpenBenchmarking.org を共同のウェブプラットフォームとしており、テストの結果を一箇所に集めることで、テストのプロファイルや結果を共有できるなど、高度な分析機能などが備わっています。Phoromatic は複数のシステムでのテストの実行をリモート管理機能によって管理するエンタープライズのコンポーネントです。\n\nこのスイートは 公式リポジトリ から利用できるパッケージ phoronix-test-suiteAUR によって インストール できます。AUR からは開発中のバージョンが利用できます: phoronix-test-suite-gitAUR\n\n"
    },
    {
      "title": "S",
      "level": 3,
      "content": "S, I/O ベンチマークスイート は、ストレージの I/O 性能を測定するための小さなスクリプトのコレクションです。\n\nこれは、BFQ スケジューラの開発チームである algodev によって開発されました。\n\nプロジェクトをダウンロードするかクローンして、依存関係をインストールし、root で実行してください (ディスクスケジューラを変更するのに権限が必要です。)\n\n"
    },
    {
      "title": "s-tui",
      "level": 3,
      "content": "s-tui は、CPU 周波数、使用率、温度、消費電力のグラフを表示できます、その他にストレステスターも組み込まれています。見た目が美しく便利な Curses スタイルのインターフェイスです。\n\n"
    },
    {
      "title": "sysbench",
      "level": 3,
      "content": "sysbench は、万能のマルチスレッドベンチマークツールです。C と Perl で書かれており、ファイルシステム、DRAM、CPU、スレッドベースのスケジューラ、および POSIX ミューテックスのパフォーマンスをベンチマークするために CLI で直接使用できます。または、任意の複雑なワークロードのベンチマークを行うための Lua スクリプトインタープリターとして使用することもできます。データベースベンチマーク用のスクリプトのコレクションを提供します。\n\n"
    },
    {
      "title": "フラッシュメディア",
      "level": 2,
      "content": "フラッシュメディアの性能特性は iozoneAUR を使うことで定量的に測定することができます。読み書き速度の値が一定になることは基本的になく、システムアップデートによる大量のファイルの書き込みや展開など、I/O の負担が重い操作と互いに関係があります。そのような場合に考慮する必要がある基準はランダム書き込み速度です。\n\n以下の例では 4k レコードサイズで 10M のファイルをテストしています:\n\n```\n$ iozone -e -I -a -s 10M -r 4k -i 0 -i 1 -i 2\n...\n\n                                                                random   random\n              kB  reclen    write  rewrite    read    reread    read     write\n           10240       4      661      649     5802     5822     3892      624\n```\n\n- テストの値は KB/s で報告されます。\n- SD カードと他のフラッシュメディアの性能表は Tom's Hardware を参照。\n\n"
    },
    {
      "title": "Basemark GPU",
      "level": 3,
      "content": "Basemark GPU は、モバイルおよびデスクトッププラットフォームにおけるグラフィックス API(OpenGL 4.5, OpenGL ES 3.1, Vulkan, Microsoft DirectX 12)のパフォーマンスを分析・測定するための評価ツールです。Basemark GPU は、デスクトップとモバイルの両プラットフォームを対象とし、High Quality モードと Medium Quality モードの両方を提供します。High-Quality モードは最先端のデスクトップ向けワークロードに対応し、Medium Quality モードは同等のモバイル向けワークロードに対応しています。\n\nAMD GPU を使用しており、同時に複数の vulkan 実装をインストールしている場合、Test ページでは、Graphics Device ドロップダウンリストに別々の GPU として表示されます。\n\nBasemark GPU は、basemarkAUR パッケージで入手できます。\n\n"
    },
    {
      "title": "Blender-benchmark",
      "level": 3,
      "content": "Blender-benchmark は、OS、RAM、グラフィックカード、CPU モデルなどのシステムに関する情報と、ベンチマーク実行中のシステムの性能に関する情報を収集します。その後、ユーザーは Blender Open Data プラットフォーム上で結果をオンラインで共有したり、データをローカルに保存したりすることができます。\n\nBlender-benchmark は blender-benchmarkAUR パッケージで利用可能です。\n\n"
    },
    {
      "title": "GFXBench",
      "level": 3,
      "content": "GFXBench は、すべてのプラットフォームにおいて、次世代グラフィックス機能を搭載したモバイルおよびデスクトップのパフォーマンスを測定するハイエンドグラフィックベンチマークです。真のクロス API ベンチマークとして、GFXBench は OpenGL, OpenGL ES, Vulkan, Metal, DirectX/Direct3D, DX12 を含む業界標準およびベンダー固有の API をすべてサポートしています。\n\nVulkan API テストは現在開発中であり、同社のコーポレート・パートナーのみが利用可能です。\n\nGFXBenchは gfxbenchAUR パッケージで提供されています。\n\n"
    },
    {
      "title": "glmark2",
      "level": 3,
      "content": "glmark2 は、OpenGL 2.0 および ES 2.0 のベンチマークです。\n\nglmark2 は glmark2AUR パッケージで利用可能です。\n\n"
    },
    {
      "title": "glxgears",
      "level": 3,
      "content": "glxgears は大衆的な OpenGL テストで、シンプルに OpenGL のパフォーマンスを測ってフレームレートを出力します。グラフィックドライバーのダイレクトレンダリング機能のテストとして glxgears は有用ですが、時代遅れのツールなので、GNU/Linux グラフィックの現況や OpenGL 全体の性能を示すものではありません。glxgears がテストするのはゲームなどに使われる OpenGL の機能の中でも一部だけです。glxgears でパフォーマンスの向上が見られたからといってゲームでもそれが必ずしも反映されるとは限りません。詳しくは ここ を見て下さい。\n\nglxgears は mesa-demos や lib32-mesa-demos (Multilib) パッケージでインストールできます。\n\n"
    },
    {
      "title": "GpuTest",
      "level": 3,
      "content": "GpuTest は、クロスプラットフォーム(Windows、Linux、Max OS X)の GPU ストレステストと OpenGL ベンチマークです。GpuTest には、Windows の世界で人気のあるもの (FurMark や TessMark) を含むいくつかの GPU テストが付属しています。\n\nGpuTest は gputestAUR パッケージで利用可能です。\n\n"
    },
    {
      "title": "intel-gpu-tools",
      "level": 3,
      "content": "intel-gpu-tools では、統合 GPU に関する重要な情報が提供されます。これは、GPU アクセラレーションの問題を診断する際に非常に役立ちます。\n\nこれを使用するには、intel-gpu-tools パッケージを インストール します。\n\n"
    },
    {
      "title": "MangoHud",
      "level": 3,
      "content": "こちらを参照 MangoHud\n\n"
    },
    {
      "title": "Unigine Engine",
      "level": 3,
      "content": "Unigine が開発した現代的な OpenGL ベンチマークです。彼らのグラフィックエンジンをベースにしており、以下のような機能が存在します:\n\n- ピクセルあたりの動的光源処理\n- 通常・視差遮蔽マッピング\n- 64ビットの HDR レンダリング\n- ボリュームフォグ・ライト\n- パワフルなパーティクルシステム: 炎・煙・爆発\n- 拡張性のあるシェーダセット (GLSL / HLSL)\n- ポストプロセス: 被写界深度・屈折・グロー・ブラー・色補正など\n\n最近では Unigine ベンチマークはシステムをオーバークロックしようとしているユーザーによって使用されています。特に Heaven はオーバークロックの初期安定性テストに使われています。\n\nベンチマークは AUR から利用可能です (下のリンクを参照)。\n\n参照:\n\n- unigine-heavenAUR\n- unigine-tropicsAUR\n- unigine-sanctuaryAUR\n- unigine-valleyAUR\n- unigine-superpositionAUR\n\n"
    },
    {
      "title": "vkmark",
      "level": 3,
      "content": "vkmark は、ターゲットとなる設定可能なシーンを持つ、拡張可能な Vulkan ベンチマークスイートです。\n\nvkmark は vkmark-gitAUR パッケージで利用可能です。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Linux Benchmarking ホームページ\n- Phoronix.com\n- Interbench ホームページ\n- Unigine.com\n\n"
    }
  ]
}
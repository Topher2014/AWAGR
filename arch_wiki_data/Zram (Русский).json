{
  "title": "Zram (Русский)",
  "url": "https://wiki.archlinux.org/title/Zram_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Пространство подкачки\n- zswap (Русский)\n\nzram, ранее известный как compcache, — это модуль ядра Linux, позволяющий создать сжатое блочное устройство в ОЗУ, то есть RAM-диск со сжатием на лету. Создаваемое этим модулем блочное устройство можно использовать в качестве подкачки или как обычный RAM-диск. Чаще всего zram используется для хранения временных файлов (/tmp) и для подкачки. Изначально zram выполнял только последнюю функцию, отсюда и первоначальное название «compcache» («compressed cache»).\n\n"
    },
    {
      "title": "Использование в качестве подкачки",
      "level": 2,
      "content": "Изначально созданное блочное устройство zram не резервирует и не использует оперативную память. Лишь в момент переноса страниц памяти в подкачку они будут сжиматься и помещаться в блочное устройство zram. Размер этого устройства увеличивается и уменьшается динамически по мере необходимости.\n\nДаже если предположить, что zstd будет достигать не самого высокого коэффициента сжатия 1:2 (на реальных данных коэффициент сжатия обычно около 1:3), использование zram позволит поместить в оперативную память больше данных, чем без сжатия.\n\n- При настройке zram размер устройства zram определяет максимальный объем хранимых данных без учёта сжатия. Вы можете задать размер zram равный объёму оперативной памяти или даже больше, если данные смогут в поместиться в память в сжатом виде.\n- Если в используемом вами ядре по умолчанию включен zswap, его стоит отключить, чтобы он не работал как кэш подкачки перед zram. Включение их обоих также приводит к отображению некорректной статистики в zramctl(8), и zram остаётся в основном неиспользуемым, потому что zswap перехватывает и сжимает страницы памяти до того как они попадут в zram.\n- Спящий режим не может работать с устройством zram, даже если zram настроен на использование резервного устройства в постоянной памяти; logind не позволит перейти в спящий режим, если подкачка находится на устройстве zram.\n\nДля начала в качестве размера устройства zram можно указать половину объёма оперативной памяти.\n\n"
    },
    {
      "title": "Вручную",
      "level": 3,
      "content": "Чтобы добавить одно устройство zram со сжатием zstd, ёмкостью в половину объёма оперативной памяти и приоритетом выше обычного (только для текущего сеанса):\n\n```\n# modprobe zram\n# zramctl /dev/zram0 --algorithm zstd --size \"$(($(grep -Po 'MemTotal:\\s*\\K\\d+' /proc/meminfo)/2))KiB\"\n# mkswap -U clear /dev/zram0\n# swapon --discard --priority 100 /dev/zram0\n```\n\nДля выключения можно перезагрузиться или выполнить\n\n```\n# swapoff /dev/zram0\n# modprobe -r zram\n# echo 1 > /sys/module/zswap/parameters/enabled\n```\n\nПодробное объяснение всех шагов, опций и потенциальных проблем описано в официальной документации модуля zram.\n\nЧтобы сделать устройство zram постоянным, используйте один из описанных ниже методов.\n\n"
    },
    {
      "title": "С использованием правила udev",
      "level": 3,
      "content": "Пример ниже показывает, как настроить подкачку на zram автоматически при загрузке с помощью одного правила udev. Для этого не требуется дополнительных пакетов.\n\nСперва включите автоматическую загрузку модуля:\n\n```\n/etc/modules-load.d/zram.conf\n```\n\n```\nzram\n```\n\nСоздайте правило udev, изменив disksize по необходимости:\n\n```\n/etc/udev/rules.d/99-zram.rules\n```\n\n```\nACTION==\"add\", KERNEL==\"zram0\", ATTR{comp_algorithm}=\"zstd\", ATTR{disksize}=\"4G\", RUN=\"/usr/bin/mkswap -U clear /dev/%k\", TAG+=\"systemd\"\n```\n\nДобавьте /dev/zram в файл fstab с приоритетом выше стандартного:\n\n```\n/etc/fstab\n```\n\n```\n/dev/zram0 none swap defaults,discard,pri=100 0 0\n```\n\n"
    },
    {
      "title": "С использованием zram-generator",
      "level": 3,
      "content": "zram-generator предоставляет юнит systemd-zram-setup@.service для автоматической инициализации устройства zram без необходимости включать/запускать шаблон или его экземпляры. Смотрите zram-generator(8) и zram-generator.conf(5).\n\nДля использования установите пакет zram-generator и создайте такой файл настроек:\n\n```\n/etc/systemd/zram-generator.conf\n```\n\n```\n[zram0]\nzram-size = min(ram / 2, 4096)\ncompression-algorithm = zstd\n```\n\nzram-size — размер устройства zram в МиБ. Можно написать ram, чтобы в качестве значения использовать объём оперативной памяти.\n\ncompression-algorithm задаёт алгоритм сжатия, используемый устройством zram. Посмотреть список доступных алгоритмов можно с помощью команды cat /sys/block/zram0/comp_algorithm (текущий используемый алгоритм выделен квадратными скобками).\n\nВключать юниты не нужно, они будут запускаться автоматически после перезагрузки. Чтобы запустить их без перезагрузки, выполните daemon-reload и запустите systemd-zram-setup@zramN.service, где N соответствует нумерации настроенных вами устройств zram (для приведённого выше примера настроек это systemd-zram-setup@zram0.service).\n\nВы можете проверить статус подкачки на настроенном вами устройстве /dev/zramN, посмотрев статус экземпляра юнита systemd-zram-setup@zramN.service или с помощью команды zramctl(8) или swapon(8).\n\n"
    },
    {
      "title": "С использованием zramswap",
      "level": 3,
      "content": "zramswapAUR предоставляет автоматический скрипт для настройки подкачки высоким приоритетом и размером по умолчанию 20% от размера ОЗУ вашей системы. Чтобы он запускался автоматически при каждой загрузке, включите службу zramswap.service.\n\n"
    },
    {
      "title": "С использованием zramd",
      "level": 3,
      "content": "zramdAUR[ссылка недействительна: package not found] позволяет автоматически настроить zram с использованием сжатия zstd по умолчанию. Настройки можно изменить в файле /etc/default/zramd. Чтобы он запускался автоматически при каждой загрузке, включите службу zramd.service.\n\n"
    },
    {
      "title": "Просмотр статистики zram",
      "level": 3,
      "content": "Используйте команду zramctl(8). Пример:\n\n```\n$ zramctl\n```\n\n```\nNAME       ALGORITHM DISKSIZE  DATA  COMPR  TOTAL STREAMS MOUNTPOINT\n/dev/zram0 zstd           32G  1.9G 318.6M 424.9M      16 [SWAP]\n```\n\n- DISKSIZE = 32G: это устройство zram может хранить до 32 ГиБ данных (без учёта сжатия).\n- DATA = 1.9G: на данный момент этом устройстве zram хранится 1,9 ГиБ данных (без учёта сжатия).\n- COMPR = 318.6M: 1,9 ГиБ несжатых данных были сжаты до 318,6 МиБ.\n- TOTAL = 424.9M: для хранения 1,9 ГиБ несжатых данных в устройстве zram понадобилось 424,9 МиБ памяти с учётом метаданных.\n\n"
    },
    {
      "title": "Несколько устройств zram",
      "level": 3,
      "content": "По умолчанию модуль ядра zram при загрузке создаёт одно устройство /dev/zram0.\n\nЧтобы создать несколько устройств, укажите параметр модуля ядра num_devices. Также можно создавать их на лету без перезагрузки модуля.\n\n"
    },
    {
      "title": "Оптимизация подкачки на устройстве zram",
      "level": 3,
      "content": "Поскольку устройство zram отличается от подкачки на обычном диске, можно оптимизировать настройки подкачки для zram:\n\n```\n/etc/sysctl.d/99-vm-zram-parameters.conf\n```\n\n```\nvm.swappiness = 180\nvm.watermark_boost_factor = 0\nvm.watermark_scale_factor = 125\nvm.page-cluster = 0\n```\n\nЭти параметры используются в Pop!_OS и основаны на результатах тестирования некоторыми пользователями в r/Fedora, где выяснилось, что vm.page-cluster = 0 работает идеально. Также хорошо работают высокие значения swappiness, что предлагается документацией ядра:\n\nВ системе с жёстким диском случайный ввод-вывод с устройства zswap будет на порядки быстрее, чем ввод-вывод с файловой системы, поэтому значение swappiness лучше установить ~200. Даже в системе с быстрым SSD большое значение swappiness может быть хорошо.\n\n"
    },
    {
      "title": "Подключение резервного устройства для zram",
      "level": 3,
      "content": "zram можно настроить так, чтобы при нехватке памяти несжимаемые страницы вытеснялись на указанное блочное устройство.\n\nЧтобы добавить такое устройство вручную:\n\n```\n# echo /dev/sdX > /sys/block/zram0/backing_dev\n```\n\nЕсли вы используете zram-generator, отредактируйте файл /etc/systemd/zram-generator.conf, указав путь к нужному устройству в соответствующем разделе [zramX]:\n\n```\n/etc/systemd/zram-generator.conf\n```\n\n```\nwriteback-device=/dev/disk/by-partuuid/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n```\n\n"
    },
    {
      "title": "Использование zram не для подкачки",
      "level": 3,
      "content": "zram также можно использовать в качестве обычного блочного устройства, аналогичного /dev/ram, но использующего меньше физической памяти за счёт небольшого снижения производительности. Однако здесь есть несколько оговорок:\n\n- нет поддержки таблицы разделов (нет автоматического создания /dev/zramxpy);\n- размер блока фиксирован и составляет 4 КиБ.\n\nОчевидный способ обойти это — создать loop-устройство поверх zram с помощью losetup, указав желаемый размер блока с помощью опции -b и используя опцию -P для обработки таблицы разделов и автоматического создания устройств, соответствующих разделам на loop-устройстве. Сперва добавьте устройство zram нужного размера:\n\n```\n# zramctl -f -s NG\n```\n\n```\n/dev/zramx\n```\n\nЗатем, если вы хотите использовать на нём какой-то образ диска, запишите его содержимое на новое устройство /dev/zramx, после чего создайте loop-устройство. Имейте в виду, что если на образе диска есть таблица разделов, то размер блока loop-устройства должен совпадать с размером блока, который используется в этой таблице разделов (обычно это 512).\n\n```\n# losetup -f -b 512 -P /dev/zramx\n```\n\n```\n# ls /dev/loop*\n```\n\n```\n/dev/loop0 /dev/loop0p1 /dev/loop0p2\n```\n\n```\n# mount /dev/loop0p1 /mnt/boot\n# mount /dev/loop0p2 /mnt/root\n```\n\n- Номер устройства zram зависит от наличия ранее добавленных устройств zram, а его размер должен быть достаточным для того, чтобы в нём поместился нужный вам образ диска.\n- Вывод команды ls /dev/loop* зависит от количества разделов, присутствующих в записанном вами образе диска.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Wikipedia:ru:zRam\n- https://github.com/pop-os/default-settings/pull/163\n- https://www.reddit.com/r/pop_os/comments/znh9n6/help_test_a_zram_optimization_for_pop_os/\n\n"
    }
  ]
}
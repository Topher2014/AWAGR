{
  "title": "ClamAV (Español)",
  "url": "https://wiki.archlinux.org/title/ClamAV_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2019-12-01** \n\nClam AntiVirus es un conjunto de herramientas de antivirus de código abierto (GPL) para UNIX. Proporciona una serie de utilidades que incluyen un demonio multiproceso flexible y escalable, un escáner de línea de órdenes y una herramienta avanzada para actualizaciones automáticas de las bases de datos. Debido a que el uso principal de ClamAV es en servidores de archivos/correos electrónicos para escritorios de Windows, detecta principalmente virus y malware de Windows con sus firmas incorporadas.\n\n"
    },
    {
      "title": "Instalación",
      "level": 2,
      "content": "Instale el paquete clamav.\n\n"
    },
    {
      "title": "Actualizar la base de datos",
      "level": 2,
      "content": "Actualice las definiciones de virus con:\n\n```\n# freshclam\n```\n\nSi está detrás de un proxy, edite /etc/clamav/freshclam.conf y actualice HTTPProxyServer, HTTPProxyPort, HTTPProxyUsername y HTTPProxyPassword.\n\nLos archivos de la base de datos se guardan en:\n\n```\n/var/lib/clamav/daily.cvd\n/var/lib/clamav/main.cvd\n/var/lib/clamav/bytecode.cvd\n```\n\nInicie/active clamav-freshclam.service para que las definiciones de virus se mantengan recientes.\n\n"
    },
    {
      "title": "Iniciar el demonio",
      "level": 2,
      "content": "El servicio se llama clamav-daemon.service. Inicie y active el servicio para que se inicie en el arranque del sistema.\n\n"
    },
    {
      "title": "Comprobar el software",
      "level": 2,
      "content": "Para asegurarse de que ClamAV y las definiciones están instaladas correctamente, escanee el archivo de prueba EICAR[enlace roto 2022-09-17] (una firma inofensiva sin código de virus) con clamscan.\n\n```\n$ curl https://www.eicar.org/download/eicar.com.txt[enlace roto 2024-01-13] | clamscan -\n```\n\nLa salida debe incluir:\n\n```\nstdin: Eicar-Test-Signature FOUND\n```\n\nDe lo contrario, lea la sección sobre #Solución de problemas o solicite ayuda en Arch Forums.\n\n"
    },
    {
      "title": "Añadir más repositorios de firmas/base de datos",
      "level": 2,
      "content": "ClamAV puede usar bases de datos/firmas de otros repositorios o proveedores de seguridad.\n\nPara añadir los más importantes en un solo paso, instale clamav-unofficial-sigsAUR.\n\nEsto agregará firmas/bases de datos de, por ejemplo, MalwarePatrol, SecuriteInfo, Yara, Linux Malware Detect, etc. Para ver la lista completa de bases de datos, vea la descripción del repositorio de GitHub.\n\n"
    },
    {
      "title": "Configurar clamav-unofficial-sigs",
      "level": 3,
      "content": "Active clamav-unofficial-sigs.timer.\n\nEsto actualizará regularmente las firmas no oficiales basadas en los archivos de configuración presentes en el directorio /etc/clamav-unofficial-sigs.\n\nPara actualizar las firmas manualmente, ejecute lo siguiente:\n\n```\n# clamav-unofficial-sigs.sh\n```\n\nPara cambiar cualquier configuración predeterminada, remítase y modifique /etc/clamav-unofficial-sigs/user.conf.\n\n"
    },
    {
      "title": "Base de datos MalwarePatrol",
      "level": 4,
      "content": "Si desea utilizar la base de datos de MalwarePatrol, regístrese para obtener una cuenta en https://www.malwarepatrol.net/free-guard-upgrade-option[enlace roto 2023-07-30].\n\nEn /etc/clamav-unofficial-sigs/user.conf, cambie lo siguiente para activar esta funcionalidad:\n\n```\nmalwarepatrol_receipt_code=\"SU-NÚMERO-DE-RECIBO\" # Introduzca su número de recibo aquí.\nmalwarepatrol_product_code=\"8\" # Utilice «8» si tiene una cuenta gratuita o «15» si es un cliente Premium.\nmalwarepatrol_list=\"clamav_basic\" # clamav_basic o clamav_ext\nmalwarepatrol_free=\"yes\" # Establezca «yes» si tiene una cuenta gratuita o «no» si es un cliente Premium.\n```\n\nFuente: https://www.malwarepatrol.net/clamav-configuration-guide/\n\n"
    },
    {
      "title": "Analizar en busca de virus",
      "level": 2,
      "content": "clamscan se puede usar para escanear ciertos archivos, directorios como /home o un sistema completo:\n\n```\n$ clamscan miarchivo\n$ clamscan --recursive --infected /home\n$ clamscan --recursive --infected --exclude-dir='^/sys|^/dev' /\n```\n\nSi desea que clamscan elimine el archivo infectado, agregue la opción --remove a la orden, o puede usar --move=/directorio para ponerlos en cuarentena.\n\nTambién es posible que desee utilizar clamscan para escanear archivos más grandes. En este caso, añada las opciones --max-filesize=4000M y --max-scansize=4000M a la orden. «4000M» es el mayor valor posible y puede reducirse según sea necesario.\n\nEl uso de la opción -l /ruta/al/archivo imprimirá los registros de clamscan en un archivo de texto para poder localizar las infecciones notificadas.\n\n"
    },
    {
      "title": "Utilizar milter",
      "level": 2,
      "content": "Milter escaneará su servidor sendmail en busca de correos electrónicos que contengan virus. Copie /etc/clamav/clamav-milter.conf.sample en /etc/clamav/clamav-milter.conf y ajústelo a sus necesidades. Por ejemplo:\n\n```\n/etc/clamav/clamav-milter.conf\n```\n\n```\nMilterSocket /run/clamav/clamav-milter.sock\nMilterSocketMode 660\nFixStaleSocket yes\nUser clamav\nPidFile /run/clamav/clamav-milter.pid\nTemporaryDirectory /tmp\nClamdSocket unix:/var/lib/clamav/clamd.sock\nLogSyslog yes\nLogInfected Basic\n```\n\nCree /etc/systemd/system/clamav-milter.service:\n\n```\n/etc/systemd/system/clamav-milter.service\n```\n\n```\n[Unit]\nDescription='ClamAV Milter'\nAfter=clamav-daemon.service\n\n[Service]\nType=forking\nExecStart=/usr/bin/clamav-milter --config-file /etc/clamav/clamav-milter.conf\n\n[Install]\nWantedBy=multi-user.target\n```\n\nActive e inicie clamav-milter.service.\n\n"
    },
    {
      "title": "OnAccessScan",
      "level": 2,
      "content": "El análisis en acceso (o análisis en tiempo real) requiere que el kernel se haya compilado con el módulo del kernel fanotify (kernel >= 3.8). Compruebe si fanotify está activado antes de habilitar escáner «On-Access».\n\n```\n$ zgrep FANOTIFY /proc/config.gz\n```\n\nEl monitoreo en tiempo real analizará el archivo mientras lo lee, escribe o ejecuta.\n\nPrimero, edite el archivo de configuración /etc/clamav/clamd.conf añadiendo lo siguiente al final del archivo (también puede cambiar cada opción de forma individual):\n\n```\n/etc/clamav/clamd.conf\n```\n\n```\n# Permite la exploración en acceso, requiere la ejecución de clamav-daemon.service\nScanOnAccess true\n\n# Establezca el punto de montaje donde realizar el análisis de forma recursiva,\n# esto podría consistir en cada ruta o ruta múltiple (una línea por ruta)\nOnAccessMountPath /usr\nOnAccessMountPath /home/\nOnAccessExcludePath /var/log/\n\n# Marca fanotify para bloquear cualquier evento\n# en los archivos monitoreados para realizar el análisis\nOnAccessPrevention false\n\n# Realizar monitoreos en archivos recién creados, movidos o renombrados\nOnAccessExtraScanning true\n\n# Verificar el UID del evento de fanotify\nOnAccessExcludeUID 0\n\n# Especificar una acción a realizar cuando clamav detecte un archivo malicioso,\n# también es posible especificar una orden en línea\nVirusEvent /etc/clamav/detected.sh\n\n# ADVERTENCIA: clamd debe ejecutarse como root\nUser root\n```\n\nA continuación, cree el archivo /etc/clamav/detected.sh y añada lo siguiente. Esto le permite cambiar/especificar el mensaje de depuración de errores cuando el servicio de análisis en tiempo real de clamd haya detectado un virus:\n\n```\n/etc/clamav/detected.sh\n```\n\n```\n#!/bin/bash\nPATH=/usr/bin\nalert=\"Firma detectada: $CLAM_VIRUSEVENT_VIRUSNAME en $CLAM_VIRUSEVENT_FILENAME\"\n\n# Enviar la alerta al registro de systemd si existe, de lo contrario a /var/log\nif [[ -z $(command -v systemd-cat) ]]; then\n        echo \"$(date) - $alert\" >> /var/log/clamav/detections.log\nelse\n        # Esto podría hacer que su entorno de escritorio muestre una alerta visual. Sucede en Plasma, pero la siguiente alerta visual es mucho mejor.\n        echo \"$alert\" | /usr/bin/systemd-cat -t clamav -p emerg\nfi\n\n# Enviar una alerta a todos los usuarios de la interfaz gráfica.\nXUSERS=($(who|awk '{print $1$NF}'|sort -u))\n\nfor XUSER in $XUSERS; do\n    NAME=(${XUSER/(/ })\n    DISPLAY=${NAME[1]/)/}\n    DBUS_ADDRESS=unix:path=/run/user/$(id -u ${NAME[0]})/bus\n    echo \"run $NAME - $DISPLAY - $DBUS_ADDRESS -\" >> /tmp/testlog \n    /usr/bin/sudo -u ${NAME[0]} DISPLAY=${DISPLAY} \\\n                       DBUS_SESSION_BUS_ADDRESS=${DBUS_ADDRESS} \\\n                       PATH=${PATH} \\\n                       /usr/bin/notify-send -i dialog-warning \"clamAV\" \"$alert\"\ndone\n```\n\nSi está utilizando AppArmor, también es necesario permitir que clamd se ejecute como root:\n\n```\n# aa-complain clamd\n```\n\nReinicie el servicio clamav-daemon.service.\n\nFuente: https://blog.clamav.net/2016/03/configuring-on-access-scanning-in-clamav.html\n\n"
    },
    {
      "title": "Error: Clamd was NOT notified",
      "level": 3,
      "content": "Si recibe los siguientes mensajes después de ejecutar freshclam:\n\n```\nWARNING: Clamd was NOT notified: Cannot connect to clamd through \n/var/lib/clamav/clamd.sock connect(): No such file or directory\n```\n\nAñada un archivo sock para ClamAV:\n\n```\n# touch /var/lib/clamav/clamd.sock\n# chown clamav:clamav /var/lib/clamav/clamd.sock\n```\n\nLuego, edite /etc/clamav/clamd.conf y descomente esta línea:\n\n```\nLocalSocket /var/lib/clamav/clamd.sock\n```\n\nGuarde el archivo y reinicie clamav-daemon.service.\n\n"
    },
    {
      "title": "Error: No supported database files found",
      "level": 3,
      "content": "Si obtiene el siguiente error al iniciar el demonio:\n\n```\nLibClamAV Error: cli_loaddb(): No supported database files found\nin /var/lib/clamav ERROR: Not supported data format\n```\n\nEsto sucede debido a la falta de coincidencia entre la configuración de DatabaseDirectory de /etc/clamav/freshclam.conf y la configuración de DatabaseDirectory de /etc/clamav/clamd.conf. El archivo /etc/clamav/freshclam.conf apunta a /var/lib/clamav, pero /etc/clamav/clamd.conf (directorio por defecto) apunta a /usr/share/clamav, o a otro directorio. Edite /etc/clamav/clamd.conf y reemplace con el mismo DatabaseDirectory que el de /etc/clamav/freshclam.conf. Después de eso, clamav se iniciará con éxito.\n\n"
    },
    {
      "title": "Error: Can't create temporary directory",
      "level": 3,
      "content": "Si obtiene el siguiente error, junto con una 'HINT' que contiene un UID y un número GID:\n\n```\n# can't create temporary directory\n```\n\nCorrija los permisos:\n\n```\n# chown UID:GID /var/lib/clamav & chmod 755 /var/lib/clamav\n```\n\n"
    },
    {
      "title": "Utilizar clamscan",
      "level": 4,
      "content": "Al escanear un archivo o directorio desde la línea de órdenes usando clamscan solo se usa un hilo de la CPU. Esto puede estar bien en los casos en que el tiempo no es crítico o no desea que el equipo se ralentice. Si es necesario escanear carpetas grandes o unidades USB rápidamente, podría utilizar todas las CPU disponibles para acelerar el proceso.\n\nclamscan está diseñado para usarse en un solo subproceso, pero esto no es obvice para que con el argumento xargs se puede utilizar para ejecutar escaneos en paralelo:\n\n```\n$ find /home/archie -type f -print | xargs -P $(nproc) clamscan\n```\n\nEn este ejemplo, el parámetro -P para xargs ejecuta clamscan en tantos procesos como CPU existan (según informa nproc) al mismo tiempo. Las opciones --max-lines y --max-args permitirán un control aún más preciso de los procesamientos por lotes de la carga de trabajo entre los distintos hilos.\n\nUtilice la siguiente versión si los nombres de archivos pueden contener espacios u otros caracteres especiales (como suelen hacer las unidades USB y otras antiguas de Windows):\n\n```\n$ find /home/archie -type f -print0 | xargs -0 -P $(nproc) clamscan\n```\n\n"
    },
    {
      "title": "Utilizar clamdscan",
      "level": 4,
      "content": "Si ya tiene el demonio clamd ejecutandose, clamdscan puede usarse en su lugar (vea #Iniciar el demonio):\n\n```\n$ clamdscan --multiscan --fdpass /home/archie\n```\n\nAquí el parámetro --multiscan permite que clamd escanee el contenido del directorio en paralelo utilizando los hilos disponibles. El parámetro --fdpass es necesario para pasar los permisos del descriptor del archivo a clamd ya que el demonio se ejecuta bajo el usuario y grupo clamav.\n\nEl número de subprocesos disponibles para clamdscan se determina en /etc/clamav/clamd.conf a través del parámetro MaxThreads de clamd.conf(5). Aunque puede ver que el número de MaxThreads especificado es más de uno (el valor predeterminado actual es 10), cuando inicia la exploración utilizando clamdscan desde la línea de órdenes y no especifica --multiscan, solo se usará un hilo de CPU efectivo para escanear.\n\n"
    },
    {
      "title": "Véase también",
      "level": 2,
      "content": "- Wikipedia:ClamAV\n\n"
    }
  ]
}
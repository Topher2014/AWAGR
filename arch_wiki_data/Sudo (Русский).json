{
  "title": "Sudo (Русский)",
  "url": "https://wiki.archlinux.org/title/Sudo_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Пользователи и группы\n- su (Русский)\n- doas (Русский)\n\nSudo (англ. substitute user do, дословно «подменить пользователя и выполнить») позволяет системному администратору делегировать полномочия, чтобы дать некоторым пользователям (или группе пользователей) возможность запускать некоторые (или все) команды c правами суперпользователя или любого другого пользователя, обеспечивая контроль над командами и их аргументами.\n\nSudo - это альтернатива su для выполнения команд с правами суперпользователя (root). В отличие от su, который запускает оболочку с правами root и даёт всем дальнейшим командам root-права, sudo предоставляет временное повышение привилегий для одной команды. Предоставляя привилегии root только при необходимости, sudo снижает вероятность того, что опечатка или ошибка в выполняемой команде произведут в системе разрушительные действия.\n\nSudo может также использоваться для выполнения команд от имени других пользователей; кроме того, sudo логирует все команды и неудачные попытки доступа для аудита безопасности.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет sudo.\n\n"
    },
    {
      "title": "Использование",
      "level": 2,
      "content": "Чтобы начать использовать sudo как непривилегированный пользователь, его нужно настроить должным образом. Для этого прочтите раздел о настройке.\n\nДля использования sudo просто добавьте sudo и пробел перед нужной командой:\n\n```\n$ sudo команда\n```\n\nНапример, для использования pacman:\n\n```\n$ sudo pacman -Syu\n```\n\nСмотрите sudo(8) для более подробной информации.\n\n"
    },
    {
      "title": "Defaults",
      "level": 3,
      "content": "sudoers(5) § SUDOERS OPTIONS содержит список опций, которые можно использовать с командой Defaults в файле /etc/sudoers.\n\nЗдесь доступен список опций (извлечён из исходного кода версии 1.8.7) в формате, удобном для копирования и вставки в файл sudoers.\n\nСмотрите sudoers(5) для более подробной информации, например о настройке таймаутов.\n\n"
    },
    {
      "title": "Просмотр текущих настроек",
      "level": 3,
      "content": "Выполните sudo -ll для вывода текущей конфигурации sudo. Чтобы посмотреть настройки, действующие для конкретного пользователя, выполните sudo -lU пользователь.\n\n"
    },
    {
      "title": "Использование visudo",
      "level": 3,
      "content": "Файл настроек /etc/sudoers всегда следует редактировать с помощью команды visudo(8). visudo блокирует файл sudoers, сохраняет изменения во временный файл и проверяет, что файл синтаксически корректен, перед тем как скопировать его в /etc/sudoers.\n\nNote: **Всегда** \n\n- Крайне важно, чтобы файл sudoers был без синтаксических ошибок! Любая ошибка делает sudo неработоспособным. Всегда редактируйте его только с помощью visudo для предотвращения ошибок.\n- Из visudo(8): Обратите внимание, что это дыра в безопасности, поскольку позволяет пользователю запускать любую программу, какую он захочет, просто прописав её в VISUAL или EDITOR.\n\nvisudo использует vi в качестве текстового редактора по умолчанию. Пакет sudo скомпилирован с опцией --with-env-editor по умолчанию и использует переменные VISUAL и EDITOR. EDITOR не используется, если задана переменная VISUAL.\n\nЧтобы выбрать nano в качестве редактора для visudo в текущем сеансе, задайте и экспортируйте переменную EDITOR перед запуском visudo. Чтобы выбрать другой редактор однократно, можно просто прописать эту переменную перед командой visudo:\n\n```\n# EDITOR=nano visudo\n```\n\nВ качестве альтернативы можно отредактировать копию файла /etc/sudoers и вручную запустить проверку синтаксиса с помощью команды visudo -c /копия/файла/sudoers. Это может пригодиться, если вас не устраивает, что visudo блокирует файл.\n\nДля изменения редактора на постоянной основе для текущего пользователя, смотрите раздел Переменные окружения#На уровне пользователя. Для того, чтобы установить выбранный редактор на постоянной основе для всей системы, но только для visudo, добавьте следующее в /etc/sudoers (предположим, что вы предпочитаете nano в качестве редактора):\n\n```\n# Сброс окружения\nDefaults      env_reset\n# Установка ограниченного варианта nano в качестве редактора по умолчанию и запрет visudo использовать EDITOR/VISUAL.\nDefaults      editor=/usr/bin/rnano, !env_editor\n```\n\n"
    },
    {
      "title": "Примеры настроек",
      "level": 3,
      "content": "Настройка sudo осуществляется добавлением записей в файл /etc/sudoers. Чтобы дать пользователю привилегии суперпользователя, когда он вводит sudo перед командой, добавьте следующую строку:\n\n```\nимя_пользователя   ALL=(ALL:ALL) ALL\n```\n\nРазрешить пользователю выполнять все команды от любого пользователя, но только на машине с определенным названием хоста:\n\n```\nимя_пользователя   название_хоста=(ALL:ALL) ALL\n```\n\nПредоставить членам группы wheel доступ к sudo:\n\n```\n%wheel      ALL=(ALL:ALL) ALL\n```\n\nЧтобы не спрашивать пароль у пользователя:\n\n```\nDefaults:имя_пользователя      !authenticate\n```\n\nРазрешить выполнять только конкретные команды и только пользователю на определенном хосте:\n\n```\nимя_пользователя название_хоста=/usr/bin/halt,/usr/bin/poweroff,/usr/bin/reboot,/usr/bin/pacman -Syu\n```\n\nРазрешить выполнять конкретно определённые команды только для пользователя на определенном хосте и без пароля:\n\n```\nимя_пользователя название_хоста= NOPASSWD: /usr/bin/halt,/usr/bin/poweroff,/usr/bin/reboot,/usr/bin/pacman -Syu\n```\n\nПодробный пример для sudoers доступен в /usr/share/doc/sudo/examples/sudoers. Также смотрите sudoers(5) для получения более подробной информации.\n\n"
    },
    {
      "title": "Права доступа к файлам sudoers по умолчанию",
      "level": 3,
      "content": "Файл sudoers должен иметь владельца root и группу root (0). Права доступа всегда должны быть установлены как r--r----- (0440). Эти права установлены по умолчанию, однако если вы случайно измените их, они должны быть немедленно изменены обратно, иначе sudo не будет работать.\n\n```\n# chown -c root:root /etc/sudoers\n# chmod -c 0440 /etc/sudoers\n```\n\n"
    },
    {
      "title": "Отключение таймаута запроса пароля",
      "level": 3,
      "content": "Часто раздражает такая вещь: вы запускаете какой-то долгий процесс, который работает с обычными правами и повышает их только при необходимости, и когда sudo запросит пароль, вы можете случайно не заметить это и не ввести его вовремя, из-за чего случается таймаут, процесс умирает и проделанная работа теряется или, если повезёт, кэшируется. Обычно советуют отключить запрос пароля для sudo или увеличить время действия ранее введённого пароля, однако оба этих способа имеют негативные последствия для безопасности. Таймаут запроса пароля тоже можно отключить, и поскольку это никак не влияет на безопасность, это и должно быть предпочтительным решением:\n\n```\nDefaults passwd_timeout=0\n```\n\n"
    },
    {
      "title": "Сигнал при запросе пароля",
      "level": 3,
      "content": "Чтобы работающий в фоне терминал привлёк ваше внимание в момент запроса пароля, можно добавить символ BELL в строку запроса пароля:\n\n```\nDefaults passprompt=\"^G[sudo] password for %p: \"\n```\n\nВместо ^G должен быть вписан настоящий символ BELL. Например, чтобы ввести его в vim, используйте сочетание Ctrl+v Ctrl+g, а в nano используйте Alt+v Ctrl+g.\n\n"
    },
    {
      "title": "Перенос псевдонимов",
      "level": 3,
      "content": "Если у вас установлено много псевдонимов, вы могли заметить, что они не переносятся в сеанс sudo. Однако, это легко исправить. Просто добавьте в ваш ~/.bashrc или /etc/bash.bashrc строку:\n\n```\nalias sudo='sudo '\n```\n\n"
    },
    {
      "title": "Один тайм-аут на все сеансы терминала",
      "level": 3,
      "content": "По умолчанию сеанс sudo действует только в пределах текущего терминала; при запуске sudo в новом терминале он запросит пароль заново. Если вас это раздражает, укажите для опции timestamp_type значение global:\n\n```\nDefaults timestamp_type=global\n```\n\n"
    },
    {
      "title": "Время действия введённого пароля",
      "level": 3,
      "content": "Возможно, вы захотите изменить промежуток времени, в течение которого sudo действует без ввода пароля. Этого легко добиться добавив опцию timestamp_timeout в /etc/sudoers (по умолчанию 5 минут):\n\n```\nDefaults timestamp_timeout=10\n```\n\nЕсли вы запускаете много sudo-команд подряд, возможно, вместо увеличения timestamp_timeout лучше просто периодически обновлять временную метку. Команда sudo -v запустит отсчёт таймаута заново. С помощью команды sudo -K можно удалить временную метку, что приведёт к запросу пароля при следующем запуске sudo.\n\nОбновление временной метки можно автоматизировать с помощью такого псевдонима (добавьте его в .bashrc):\n\n```\nalias sudo='sudo -v; sudo '\n```\n\nТакже можно сделать bash-функцию: подробнее на stackexchange.\n\n"
    },
    {
      "title": "Переменные окружения",
      "level": 3,
      "content": "Если у вас много переменных окружения или вы экспортировали ваши настройки прокси через export http_proxy=\"...\", когда вы используете sudo, эти переменные не будут переданы в открытый сеанс, если вы не запустите sudo в опцией -E.\n\n```\n$ sudo -E pacman -Syu\n```\n\nРекомендованный способ сохранения переменных окружения - это прописать их в env_keep:\n\n```\n/etc/sudoers\n```\n\n```\nDefaults env_keep += \"ftp_proxy http_proxy https_proxy no_proxy\"\n```\n\n"
    },
    {
      "title": "Пароль суперпользователя",
      "level": 3,
      "content": "Вы можете сконфигурировать sudo так, чтобы он спрашивал пароль суперпользователя вместо пароля текущего пользователя, добавив targetpw (целевой пользователь, по умолчанию root) или rootpw в список опций Defaults в /etc/sudoers:\n\n```\nDefaults targetpw\n```\n\nЧтобы не понадобилось разглашать пароль root обычным пользователям, можно указать эту опцию только для определённой группы:\n\n```\nDefaults:%wheel targetpw\n%wheel ALL=(ALL) ALL\n```\n\n"
    },
    {
      "title": "Отключение учетной записи root",
      "level": 3,
      "content": "Вы можете захотеть отключить возможность входа систему пользователя root. Без этого атакующие сначала должны будут угадать имя пользователя, сконфигурированного как sudoer, а также пароль этого пользователя. Смотрите для примера Secure Shell (Русский)#Отключение.\n\n- Будьте осторожны. Вы можете попасть в свою ловушку, если отключите вход систему пользователя root. Sudo по умолчанию не установлен, и его стандартная конфигурация не позволяет ни получить доступ к правам root без пароля, ни дать такой доступ вам по вашему собственному паролю. Убедитесь, что пользователь правильно сконфигурирован как sudoer перед отключением аккаунта суперпользователя!\n- Если файл sudoers настроен на использование rootpw по умолчанию, то не отключайте root-вход ни одной из следующих команд!\n- Если вы уже попали в ловушку, смотрите статью Сброс пароля root для получения помощи.\n\nМожно заблокировать аккаунт с помощью passwd:\n\n```\n# passwd -l root\n```\n\nПохожая команда снимает блокировку:\n\n```\n$ sudo passwd -u root\n```\n\nТакже вы можете отредактировать /etc/shadow и заменить зашифрованный пароль root на \"!\":\n\n```\nroot:!:12345::::::\n```\n\nТогда, чтобы задать новый пароль и тем самым разблокировать пользователя root:\n\n```\n$ sudo passwd root\n```\n\n"
    },
    {
      "title": "kdesu",
      "level": 4,
      "content": "kdesu можно использовать в KDE для запуска графических программ с привилегиями суперпользователя. Вероятно, что kdesu по умолчанию будет пытаться использовать su, даже если аккаунт root отключен. К счастью, можно сказать kdesu использовать sudo вместо su. Создайте/отредактируйте файл ~/.config/kdesurc:\n\n```\n[super-user-command]\nsuper-user-command=sudo\n```\n\nили используйте следующую команду:\n\n```\n$ kwriteconfig5 --file kdesurc --group super-user-command --key super-user-command sudo\n```\n\n"
    },
    {
      "title": "Еще один пример настройки",
      "level": 3,
      "content": "Допустим, вы создали 3 пользователей: admin, devel и joe. Пользователь \"admin\" используется для journalctl, systemctl, mount, kill и iptables; \"devel\" используется для установки пакетов и редактирования настроек; \"joe\" - пользователь, под которым вы вошли в систему. Чтобы разрешить \"joe\" перезагружаться, выключать систему и использовать netctl, мы должны сделать следующее:\n\nОтредактировать /etc/pam.d/su и /etc/pam.d/su-1. Потребовать, чтобы пользователь был в группе wheel, но никого в неё не добавлять.\n\n```\n#%PAM-1.0\nauth            sufficient      pam_rootok.so\n# Uncomment the following line to implicitly trust users in the \"wheel\" group.\n#auth           sufficient      pam_wheel.so trust use_uid\n# Uncomment the following line to require a user to be in the \"wheel\" group.\nauth            required        pam_wheel.so use_uid\nauth            required        pam_unix.so\naccount         required        pam_unix.so\nsession         required        pam_unix.so\n```\n\nРазрешить вход по SSH только для группы 'ssh'. В эту группу будет входить только \"joe\".\n\n```\n# groupadd -r ssh\n# gpasswd -a joe ssh\n# echo 'AllowGroups ssh' >> /etc/ssh/sshd_config\n```\n\nПерезапустите службу sshd.service.\n\nДобавить пользователей в другие группы.\n\n```\n# for g in power network ;do ;gpasswd -a joe $g ;done\n# for g in network power storage ;do ;gpasswd -a admin $g ;done\n```\n\nУстановить права на настройки так, чтобы devel мог редактировать их.\n\n```\n# chown -R devel:root /etc/{http,openvpn,cups,zsh,vim,screenrc}\n```\n\n```\nCmnd_Alias  POWER       =   /usr/bin/shutdown -h now, /usr/bin/halt, /usr/bin/poweroff, /usr/bin/reboot\nCmnd_Alias  STORAGE     =   /usr/bin/mount -o nosuid\\,nodev\\,noexec, /usr/bin/umount\nCmnd_Alias  SYSTEMD     =   /usr/bin/journalctl, /usr/bin/systemctl\nCmnd_Alias  KILL        =   /usr/bin/kill, /usr/bin/killall\nCmnd_Alias  PKGMAN      =   /usr/bin/pacman\nCmnd_Alias  NETWORK     =   /usr/bin/netctl\nCmnd_Alias  FIREWALL    =   /usr/bin/iptables, /usr/bin/ip6tables\nCmnd_Alias  SHELL       =   /usr/bin/zsh, /usr/bin/bash\n%power      ALL         =   (root)  NOPASSWD: POWER\n%network    ALL         =   (root)  NETWORK\n%storage    ALL         =   (root)  STORAGE\nroot        ALL         =   (ALL)   ALL\nadmin       ALL         =   (root)  SYSTEMD, KILL, FIREWALL\ndevel\t    ALL         =   (root)  PKGMAN\njoe\t    ALL         =   (devel) SHELL, (admin) SHELL\n```\n\nС такими настройками вам практически никогда не понадобится входить как суперпользователь.\n\n\"joe\" может подсоединиться к своему домашнему WiFi.\n\n```\n$ sudo netctl start home\n$ sudo poweroff\n```\n\n\"joe\" не может использовать netctl от имени другого пользователя.\n\n```\n$ sudo -u admin -- netctl start home\n```\n\nКогда \"joe\" хочет воспользоваться journalctl или убить зависший процесс, он может переключиться на нужного пользователя:\n\n```\n$ sudo -i -u devel\n$ sudo -i -u admin\n```\n\nНо \"joe\" не может переключиться на суперпользователя.\n\n```\n$ sudo -i -u root\n```\n\nЕсли \"joe\" хочет начать gnu-screen сессию как admin, он может сделать это следующим образом:\n\n```\n$ sudo -i -u admin\n[admin]$ chown admin:tty `echo $TTY`\n[admin]$ screen\n```\n\n"
    },
    {
      "title": "Настройка sudo с помощью вкладываемых в /etc/sudoers.d файлов",
      "level": 3,
      "content": "sudo обрабатывает файлы, содержащиеся в директории /etc/sudoers.d/. Это означает, что вместо того, чтобы редактировать /etc/sudoers, вы можете менять настройки в отдельных файлах и перемещать их в эту директорию. Это даёт два преимущества:\n\n- Вам не понадобится редактировать файл sudoers.pacnew;\n- Если с новой записью будет проблема, вы можете просто удалить соответствующий файл вместо необходимости редактировать /etc/sudoers (но смотрите предупреждение ниже).\n\nФормат записей в этих вкладываемых файлах такой же, как и в самом файле /etc/sudoers. Чтобы редактировать их напрямую, используйте visudo -f /etc/sudoers.d/файл. Смотрите sudoers(5) § Including other files from within sudoers для дополнительной информации.\n\nФайлы из каталога /etc/sudoers.d/ обрабатываются в лексикографическом порядке; файлы, содержащие . или ~ в имени, пропускаются. Чтобы избежать путаницы с сортировкой, рекомендуется начинать имена файлов с двух цифр, например 01_foo.\n\n"
    },
    {
      "title": "Редактирование файлов",
      "level": 3,
      "content": "sudo -e или sudoedit позволяет редактировать файл от имени другого пользователя, но при этом запускать текстовый редактор от имени вашего пользователя.\n\nЭто полезно для редактирования файлов от имени root без предоставления повышенных привилегий вашему текстовому редактору. Подробнее об этом читайте в sudo(8) § e.\n\nВ качестве редактора можно использовать любую программу, поэтому, например, можно использовать meld для управления файлами pacnew:\n\n```\n$ SUDO_EDITOR=meld sudo -e /etc/файл{,.pacnew}\n```\n\n"
    },
    {
      "title": "Шутливые оскорбления",
      "level": 3,
      "content": "Вы можете сконфигурировать sudo так, чтобы при вводе неверного пароля он выводил шутливые оскорбления вместо стандартного сообщения \"Sorry, try again\". Найдите строку Defaults в /etc/sudoers и добавьте insults в список опции, разделяя их запятыми. Конечный результат может выглядеть так:\n\n```\n/etc/sudoers\n```\n\n```\nDefaults insults\n```\n\nДля проверки, введите sudo -K, чтобы завершить текущий сеанс и позволить sudo заново запросить пароль.\n\n"
    },
    {
      "title": "Проблемы с TTY через SSH",
      "level": 3,
      "content": "По умолчанию SSH не выделяет tty при выполнении удалённой команды. Без tty sudo не может отключить отображение пароля при его вводе. Вы можете воспользоваться ssh опцией -t, чтобы заставить его выделять tty.\n\nDefaults опция requiretty всего лишь позволяет запускать sudo пользователям, если они имеют tty.\n\n```\n# Disable \"ssh hostname sudo <cmd>\", because it will show the password in clear text. You have to run \"ssh -t hostname sudo <cmd>\".\n#\n#Defaults    requiretty\n```\n\n"
    },
    {
      "title": "Наложение umask",
      "level": 3,
      "content": "Sudo накладывает на значение umask пользователя свою собственную (которая по умолчанию установлена в 0022). Это предотвращает sudo от создания файлов с более либеральными правами доступа, чем это позволяет umask пользователя. Несмотря на то, что это разумное значение по умолчанию, если не используется измененная umask, это может привести к ситуации, когда программа, запущенная через sudo может создавать файлы с правами доступа отличными от тех, которые создаются при запуске программы непосредственно суперпользователем. Для исправления таких ошибок sudo предоставляет возможность исправить umask, даже если желаемая umask более либеральна, чем установлено в umask пользователя. Добавив такие строки (используйте visudo) вы измените поведение sudo по умолчанию:\n\n```\nDefaults umask = 0022\nDefaults umask_override\n```\n\nЭто установит sudo umask в umask суперпользователя по умолчанию (0022) и переопределит поведение по умолчанию, всегда используя указанную umask и независимо от umask пользователя.\n\n"
    }
  ]
}
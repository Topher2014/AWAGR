{
  "title": "Install from Existing Linux (日本語)",
  "url": "https://wiki.archlinux.org/title/Install_from_Existing_Linux_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- SSH からインストール\n\nこの文章では Linux ホストシステムから Arch Linux をインストールするのに必要なブートストラッププロセスを説明しています。ブートストラップした後は、インストールガイドの記述に従ってインストールを行なって下さい。\n\n既存の Linux から Arch Linux をインストールすることが考えられるのは以下の場合になります:\n\n- Arch Linux のリモートインストール、例えば (仮想) ルートサーバー\n- 既存の Linux を LiveCD を使わずに置き換える (#LiveCD を使わずに既存のシステムを置き換える を参照)\n- Arch Linux ベースの新しい Linux ディストリビューションや Arch Linux ベースのLiveMedia の作成\n- Arch Linux の chroot 環境の作成、例えば Docker のベースコンテナ\n- ディスクレスマシンの rootfs-over-NFS\n\nブートストラップの目的は arch-install-scripts のスクリプト (pacstrap や arch-chroot など) が走る環境をセットアップすることです。\n\nホストシステムで Arch Linux を動かしている場合は、arch-install-scripts をインストールするだけです。ホスト環境で他の Linux ディストリビューションを使っている場合、まず Arch Linux ベースの chroot をセットアップする必要があります。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 バックアップと準備\n- 2 Arch Linux が動作しているホストからインストール\n- 3 他の Linux ディストリビューションが動作しているホストからインストール 3.1 ホストシステムから pacman を使用する 3.2 chroot の作成 3.2.1 方法 A: ブートストラップイメージを使う (推奨) 3.2.2 方法 B: LiveCD イメージを使う 3.3 chroot 環境を使う 3.3.1 pacman キーリングの初期化 3.3.2 基本ツールをダウンロード 3.4 インストールのヒント 3.4.1 Debian ベースのホスト 3.4.1.1 /dev/shm 3.4.1.2 /dev/pts 3.4.1.3 lvmetad 3.4.2 Fedora ベースのホスト\n- 4 再起動する前に確認すること\n- 5 LiveCD を使わずに既存の環境を置き換える 5.1 昔のスワップパーティションを新しいルートパーティションに設定 5.2 インストール\n\n- 3.1 ホストシステムから pacman を使用する\n- 3.2 chroot の作成 3.2.1 方法 A: ブートストラップイメージを使う (推奨) 3.2.2 方法 B: LiveCD イメージを使う\n- 3.3 chroot 環境を使う 3.3.1 pacman キーリングの初期化 3.3.2 基本ツールをダウンロード\n- 3.4 インストールのヒント 3.4.1 Debian ベースのホスト 3.4.1.1 /dev/shm 3.4.1.2 /dev/pts 3.4.1.3 lvmetad 3.4.2 Fedora ベースのホスト\n\n- 3.2.1 方法 A: ブートストラップイメージを使う (推奨)\n- 3.2.2 方法 B: LiveCD イメージを使う\n\n- 3.3.1 pacman キーリングの初期化\n- 3.3.2 基本ツールをダウンロード\n\n- 3.4.1 Debian ベースのホスト 3.4.1.1 /dev/shm 3.4.1.2 /dev/pts 3.4.1.3 lvmetad\n- 3.4.2 Fedora ベースのホスト\n\n- 3.4.1.1 /dev/shm\n- 3.4.1.2 /dev/pts\n- 3.4.1.3 lvmetad\n\n- 5.1 昔のスワップパーティションを新しいルートパーティションに設定\n- 5.2 インストール\n\n"
    },
    {
      "title": "バックアップと準備",
      "level": 2,
      "content": "メールやウェブサーバーなど全てのデータをバックアップしてください。マシン設定の情報も控えておきましょう。サーバーの設定やホストネームなどです。\n\n以下は必要なデータのリストです:\n\n- IP アドレス\n- ホストネーム (ノート: ルートサーバーも大抵の場合、プロバイダーのドメインに含まれます。/etc/hosts を確認・バックアップしてください)\n- DNS サーバー (/etc/resolv.conf を確認)\n- SSH 鍵 (サーバーを使っている人が他にいる場合、新しい鍵を認証する必要があります。Apache やメールサーバー、SSH サーバーなどの鍵が該当します)\n- ハードウェアの情報 (ネットワークカードなど。インストール済みの /etc/modules.conf を参照してください)\n- GRUB 設定ファイル\n\nローカルのハードドライブに /etc ディレクトリのコピーを作成すると良いでしょう。\n\n"
    },
    {
      "title": "Arch Linux が動作しているホストからインストール",
      "level": 2,
      "content": "arch-install-scripts パッケージをインストールしてください。\n\nインストールガイド#パーティションのマウントに従ってください。/mnt ディレクトリを別の用途に使っている場合、/mnt/install などのように他のディレクトリを作成してください。\n\nその後インストールガイド#インストールに従ってください。ホストにミラーリストが存在するため、インストールガイド#ミラーの選択は省略できます。\n\n- /etc/fstab を作成して /etc/hostname を編集\n- /etc/machine-id を削除。起動時に新しいファイルが作成されます。\n- その他インストールメディアに適宜変更を加える\n- ブートローダーのインストール\n\n"
    },
    {
      "title": "他の Linux ディストリビューションが動作しているホストからインストール",
      "level": 2,
      "content": "以下のサブセクションに書かれている手順を自動化するツールが複数存在します。詳しくはそれぞれのホームページを見てください。\n\n- arch-bootstrap (Bash)\n- image-bootstrap (Python)\n- vps2arch (Bash)\n\n以下では手動でインストールする方法を記述しています。ホスト環境で直接 pacman を動作させる方法と、ホスト環境の中で Arch を動作させ、ネストされた環境は chroot の中に格納する方法を紹介します。\n\n"
    },
    {
      "title": "ホストシステムから pacman を使用する",
      "level": 3,
      "content": "Pacman のソースコード は大抵の Linux ディストリビューションでコンパイルでき、ホストシステムから直接 Arch Linux をブートストラップするのに活用できます。arch-install-scripts は最近のディストリビューションでダウンロードしたソースコードから問題なく動作するはずです。\n\nディストリビューションによっては、公式リポジトリに pacman や arch-install-scripts があり、ブートストラップに利用できます。2019年2月時点で、Gentoo Linux には pacman パッケージが提供されており、Alpine Linux および Fedora には pacman と arch-install-scripts がともにに提供されていると知られています。\n\n"
    },
    {
      "title": "chroot の作成",
      "level": 3,
      "content": "chroot をセットアップする方法は2つ存在します。簡単な方法と複雑な方法の2つです。どちらか片方を選択してください。その後、#chroot 環境を使うに進んでください。\n\n"
    },
    {
      "title": "方法 A: ブートストラップイメージを使う (推奨)",
      "level": 4,
      "content": "ミラー からブートストラップイメージを /tmp にダウンロードしてください。\n\n署名をダウンロードして (URL に .sig が付きます)、GnuPG で検証することもできます。\n\ntarball を解凍:\n\n```\n# tar xzf <path-to-bootstrap-image>/archlinux-bootstrap-*-x86_64.tar.gz\n```\n\n/tmp/root.x86_64/etc/pacman.d/mirrorlist を編集してリポジトリサーバーを選択してください。\n\nchroot 環境に入ってください:\n\n- bash 4 以上がインストールされていて、unshare が --fork と --pid オプションに対応している場合:\n\n```\n# /tmp/root.x86_64/bin/arch-chroot /tmp/root.x86_64/\n```\n\n- bash 4 未満の場合、以下のコマンドを実行:\n\n```\n# mount --bind /tmp/root.x86_64 /tmp/root.x86_64\n# cd /tmp/root.x86_64\n# cp /etc/resolv.conf etc\n# mount -t proc /proc proc\n# mount --make-rslave --rbind /sys sys\n# mount --make-rslave --rbind /dev dev\n# mount --make-rslave --rbind /run run    # (assuming /run exists on the system)\n# chroot /tmp/root.x86_64 /bin/bash\n```\n\n"
    },
    {
      "title": "方法 B: LiveCD イメージを使う",
      "level": 4,
      "content": "最新の Arch Linux インストールメディアのルートイメージをマウントして chroot することができます。この方法では特定のパッケージをインストールして準備をしなくても Arch Linux のインストール環境を動作させることができるというメリットがあります。\n\n- ルートイメージは ミラー の arch/x86_64/ と arch/i686/ に存在します (使用したいアーキテクチャにあわせて選んでください)。squashfs フォーマットは編集ができないため、ルートイメージを unsquash してからマウントします。\n\n- ルートイメージを unsquash するには、次を実行:\n\n```\n# unsquashfs airootfs.sfs\n```\n\n- chroot する前に、マウントポイントを設定して resolv.conf をコピーする必要があります:\n\n```\n# mount --bind squashfs-root squashfs-root\n# mount -t proc none squashfs-root/proc\n# mount -t sysfs none squashfs-root/sys\n# mount -o bind /dev squashfs-root/dev\n# mount -o bind /dev/pts squashfs-root/dev/pts  ## important for pacman (for signature check)\n# cp -L /etc/resolv.conf squashfs-root/etc  ## this is needed to use networking within the chroot\n```\n\n- それから、新しくインストールする Arch 環境に chroot してください:\n\n```\n# chroot squashfs-root bash\n```\n\n"
    },
    {
      "title": "chroot 環境を使う",
      "level": 3,
      "content": "ブートストラップ環境は完全なベアボーンです (nano も ping も cryptsetup も lvm も存在しません)。したがって、pacman をセットアップして base を (必要であれば base-devel も) ダウンロードする必要があります。\n\n"
    },
    {
      "title": "pacman キーリングの初期化",
      "level": 4,
      "content": "インストールを開始する前に、pacman の鍵をセットアップしてください。pacman-key#キーリングの初期化を読んでから (エントロピーが必要です)、以下のコマンドを実行:\n\n```\n# pacman-key --init\n# pacman-key --populate archlinux\n```\n\n"
    },
    {
      "title": "基本ツールをダウンロード",
      "level": 4,
      "content": "ミラーを選択したら、パッケージリストを更新して必要なパッケージをインストールしてください: base, base-devel, parted など。\n\n- テキストエディタが何も導入されていない場合は、一旦 arch-chroot を抜け、ホスト環境のテキストエディタで mirrorlist を編集する必要があります。\n- pacman でパッケージのインストールを試みて、error: could not determine cachedir mount point /var/cache/pacman/pkg というエラーが生じた際、回避策として、chroot の前にmount --bind <directory-to-livecd-or-bootstrap> <directory-to-livecd-or-bootstrap> を実行する方法があります。FS#46169 を参照してください。\n\n"
    },
    {
      "title": "インストールのヒント",
      "level": 3,
      "content": "インストールガイド#パーティションに進んでインストールガイドの残りのセクションに従ってください。\n\nホスト環境によっては特定の設定が必要になることがあります。以下のセクションを見てください。\n\n"
    },
    {
      "title": "Debian ベースのホスト",
      "level": 4,
      "content": "Debian ベースのホスト環境では、pacstrap が以下のエラーを表示することがあります:\n\n```\n# pacstrap /mnt base\n```\n\n```\n==> Creating install root at /mnt\nmount: mount point /mnt/dev/shm is a symbolic link to nowhere\n==> ERROR: failed to setup API filesystems in new root\n```\n\nDebian では、/dev/shm が /run/shm になっているのに対して、Arch の chroot では /run/shm が存在せずリンクが壊れてしまうのが原因です。エラーを回避するには、/run/shm ディレクトリを作成してください:\n\n```\n# mkdir /run/shm\n```\n\nDebian 7 ホストから archlinux-2015.07.01-x86_64 をインストールしたとき、pacstrap と arch-chroot が以下のエラーで動作しません:\n\n```\n# pacstrap -i /mnt\n```\n\n```\nmount: mount point /mnt/dev/pts does not exist\n==> ERROR: failed to setup chroot /mnt\n```\n\nスクリプトが一般的な関数を使っているのが原因です。chroot_setup()[1] は util-linux の新しい機能に依存していますが、Debian 7 のユーザーランドでは使用することができません (FS#45737 を参照)。\n\n様々な作業 を手動で実行して対象ディレクトリ (\"$newroot\") にカーネルファイルシステムを通常の方法でマウントしてください:\n\n```\n# newroot=/mnt\n# mkdir -m 0755 -p \"$newroot\"/var/{cache/pacman/pkg,lib/pacman,log} \"$newroot\"/{dev,run,etc}\n# mkdir -m 1777 -p \"$newroot\"/tmp\n# mkdir -m 0555 -p \"$newroot\"/{sys,proc}\n# mount --bind \"$newroot\" \"$newroot\"\n# mount -t proc /proc \"$newroot/proc\"\n# mount --rbind /sys \"$newroot/sys\"\n# mount --rbind /run \"$newroot/run\"\n# mount --rbind /dev \"$newroot/dev\"\n# pacman -r \"$newroot\" --cachedir=\"$newroot/var/cache/pacman/pkg\" -Sy base base-devel ... ## add the packages you want\n# cp -a /etc/pacman.d/gnupg \"$newroot/etc/pacman.d/\"       ## copy keyring\n# cp -a /etc/pacman.d/mirrorlist \"$newroot/etc/pacman.d/\"  ## copy mirrorlist\n```\n\nインストールガイド#Chroot では arch-chroot のかわりに、chroot \"$newroot\" を使います。\n\nDebian 7 のホストの archlinux-bootstrap-2015.07.01-x86_64 から LVM の論理ボリュームを作成しようとすると以下のエラーが発生します:\n\n```\n# lvcreate -L 20G lvm -n root\n```\n\n```\n/run/lvm/lvmetad.socket: connect failed: No such file or directory\n  WARNING: Failed to connect to lvmetad. Falling back to internal scanning.\n  /dev/lvm/root: not found: device not cleared\n  Aborting. Failed to wipe start of new LV.\n```\n\n(Debian から) chroot の外側に論理ボリュームを作成することでエラーを回避できます。その後、chroot して利用してください。\n\nまた、システムから LVM を使用している場合に、以下の出力がされることがあります:\n\n```\n# grub-install --target=i386-pc --recheck /dev/main/archroot\n```\n\n```\nInstalling for i386-pc platform.\n  /run/lvm/lvmetad.socket: connect failed: No such file or directory\n  WARNING: Failed to connect to lvmetad. Falling back to internal scanning.\n  /run/lvm/lvmetad.socket: connect failed: No such file or directory\n  WARNING: Failed to connect to lvmetad. Falling back to internal scanning.\n  /run/lvm/lvmetad.socket: connect failed: No such file or directory\n  WARNING: Failed to connect to lvmetad. Falling back to internal scanning.\n  /run/lvm/lvmetad.socket: connect failed: No such file or directory\n  WARNING: Failed to connect to lvmetad. Falling back to internal scanning.\n  /run/lvm/lvmetad.socket: connect failed: No such file or directory\n  WARNING: Failed to connect to lvmetad. Falling back to internal scanning.\n```\n\nDebian がデフォルトで lvmetad を使用しないのが原因です。/etc/lvm/lvm.conf を編集して use_lvmetad を 0 に設定してください:\n\n```\nuse_lvmetad = 0\n```\n\n上記の設定を行うと起動の initrd ステージでエラーが発生します。GRUB の生成を行ってから変更してください。ソフトウェア RAID + LVM の場合、以下の手順で設定します:\n\n- システムを全てインストールした後、initramfs (mkinitcpio) や ブートローダーの設定をよく確認してください。\n- /etc/mdadm.conf を RAID の構成にあわせて変更してください。\n- LVM と RAID の要件を満たすように HOOKS と MODULES を変更してください: MODULES=\"dm_mod\" HOOKS=\"base udev mdadm_udev ... block lvm2 filesystems ...\"。\n- mkinitcpio で initrd イメージを生成してください。mkinitcpio#イメージ作成とアクティベーション を参照。\n- /etc/lvm/lvm.conf を編集して use_lvmetad=0 と記述します。\n- ブートローダーの設定を更新します。\n- /etc/lvm/lvm.conf を編集して use_lvmetad=1 と記述します。\n\n"
    },
    {
      "title": "Fedora ベースのホスト",
      "level": 4,
      "content": "Fedora ベースのホストやライブ USB では genfstab を使って fstab を生成しようとしたときに問題が発生することがあります。重複するエントリを削除して \"seclabel\" オプションを削除してください。後者は Fedora だけで使われるオプションで、システムが起動できなくなります。\n\n"
    },
    {
      "title": "再起動する前に確認すること",
      "level": 2,
      "content": "再起動する前に、新しくインストールした環境に chroot してください。\n\nSSH を使いログインできるように、ユーザーとパスワードを作成してください。root でのログインは OpenSSH-7.1p2 からデフォルトで無効です。\n\n再起動後 su を使えるように root パスワードを設定:\n\n```\n# passwd\n```\n\nSSH をインストールして起動時に自動的に実行されるように有効化してください。\n\n起動時に自動的に接続されるようにネットワークを設定してください。\n\nブートローダーをセットアップしてルートパーティションと同じように適切なスワップパーティションを使用するように設定します。古い環境を起動できるようにブートローダーを設定することもできます。その場合、サーバーの既存の /boot パーティションを再利用するのも有用です。\n\n"
    },
    {
      "title": "LiveCD を使わずに既存の環境を置き換える",
      "level": 2,
      "content": "ディスク上に 700MB 程度の空き容量を見繕ってください。スワップパーティションを無効化してシステムをセットアップします。\n\n"
    },
    {
      "title": "昔のスワップパーティションを新しいルートパーティションに設定",
      "level": 3,
      "content": "cfdisk, /proc/swaps, /etc/fstab をチェックしてスワップパーティションを確認してください。ハードドライブが sdaX として、以下を実行:\n\nスワップ領域を無効化:\n\n```\n# swapoff /dev/sdaX\n```\n\nファイルシステムを作成 (/dev/sdaX の ID フィールドは \"Linux\" (83) に設定):\n\n```\n# fdisk /dev/sda\n# mke2fs -j /dev/sdaX\n```\n\nマウントするためにディレクトリを作成:\n\n```\n# mkdir /mnt/newsys\n```\n\n一時的に新しいディレクトリをマウント:\n\n```\n# mount -t ext4 /dev/sdaX /mnt/newsys\n```\n\n"
    },
    {
      "title": "インストール",
      "level": 3,
      "content": "空き容量が 700MB 以下の場合、base グループのパッケージを確認して、インターネット接続を立ち上げて一時的なパーティションで実行するのに必要なパッケージだけを選択してください。個別のパッケージを pacstrap に指定して、-c オプションを使います。\n\n新しい Arch Linux システムをインストールして、新しく作成したシステムで再起動し、プライマリパーティションにシステム全体を rsync してください。再起動する前にブートローダーの設定を修正してください。\n\n"
    }
  ]
}
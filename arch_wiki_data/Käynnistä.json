{
  "title": "Käynnistä",
  "url": "https://wiki.archlinux.org/title/K%C3%A4ynnist%C3%A4",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Aiheeseen liittyen\n\n- systemd/User\n- systemd/Timers\n- systemd/Journal\n- systemd FAQ\n- init\n- Daemons\n- udev\n- Improving performance/Boot process\n- Allow users to shutdown\n\nLainattu ja suomennettu projektin sivulta:\n\n"
    },
    {
      "title": "Perus systemctl:n käyttö",
      "level": 2,
      "content": "Päällimmäinen komento jolla voidaan tutkiskella ja hallita systemd:tä on systemctl. Jotain hyötyjä tällä on järjestelmän tilan tutkiminen ja järjestelmän sekä palvelujen hallitseminen. Katso systemctl(1) löytääksesi enemmän tietoa liittyen sen käyttöön.\n\n- Voit käyttää kaikkia seuraavia systemctl komentoja käyttämällä -H user@host kytkintä hallitsemaan systemd instanssia etäkoneesta. Tämä käyttää SSH tunnelia yhdistämään etänä systemd instanssiin.\n- Plasma:n alla on mahdollista asentaa systemd-kcmAUR[broken link: package not found] graafisena tulkkina systemctl:lle. Asennuksen jälkeen moduuli löytyy System administration:in alta.\n\n"
    },
    {
      "title": "Järjestelmävaiheen analysointi",
      "level": 3,
      "content": "Näet järjestelmän tilan komennolla:\n\n```\n$ systemctl status\n```\n\nListaa käynnistetyt yksiköt:\n\n```\n$ systemctl\n```\n\ntai:\n\n```\n$ systemctl list-units\n```\n\nListaa kaatuneet yksiköt:\n\n```\n$ systemctl --failed\n```\n\nSaatavilla olevat yksikkötiedostot (eng. unit file) ovat nähtävissä poluissa /usr/lib/systemd/system/ ja /etc/systemd/system/ (viimeineen vaatii oikeuksia polun lukemiseen). Listaa asennetut yksikkötiedostot komennolla:\n\n```\n$ systemctl list-unit-files\n```\n\nNäytä cgroup slice, muisti ja isäntä PID:ille:\n\n```\n$ systemctl status pid\n```\n\n"
    },
    {
      "title": "Yksiköiden käyttö",
      "level": 3,
      "content": "Yksiköitä voi olla esim. palvelut (.service), mounttaus paikat (.mount), laitteet (.device) tai socketit (.socket).\n\nKun systemctl:ää halutaan käyttää, joudut usein määrittelemään kokonaisuudessa koko yksikkötiedoston nimen, mukaanlukien sen loppuliitteen, esim. sshd.socket. Siitä huolimatta on olemassa muutamia lyhyitä muotoja kun tarkennetaan yksikköä kuten seuraavissa systemctl komennoissa on:\n\n- Jos loppuliitettä ei tarkenneta, systemctl olettaa .service. Esim. netctl ja netctl.service tulkitaan samana.\n- Mounttaus paikat automaattisesti käännetään oikeaan muotoon .mount yksikkö. Esim. antamalla /home on sama kuin home.mount.\n- Samalla tavalla kuin mounttaus paikat, laitteet automaattisesti käännetään muotoon .device yksikkö, siksipä antamalla /dev/sda2 on sama kuin dev-sda2.device.\n\nLöydät aiheesta yksityiskohtaisesti systemd.unit(5).\n\n- Suurin osa seuraavista komennoista toimii myös vaikka useampi yksikkö on annettu tarkennukseksi, kato systemctl(1) lisäinformaatiolle.\n- --now kytkintä voidaan käyttää yhdessä enable, disable, ja mask kanssa vastaavasti käynnistää, lopettaa, tai naamioida yksikkö välittömästi kuin vastaisuudessa vasta uudelleen käynnistäessä.\n- Paketti saattaa tarjota yksikköjä eri tarkoituksiin. Jos olet juuri asentanut paketin, pacman -Qql paketti | grep -Fe .service -e .socket voidaan käyttää tarkistamaan ja löytämään nämä yksiköt.\n\n"
    },
    {
      "title": "Statuksen tarkistaminen",
      "level": 4,
      "content": "Manuaali eri yksiköistä (mikäli yksikkö sitä tukee) voidaan näyttää komennolla:\n\n```\n$ systemctl help yksikkö\n```\n\nStatus yksiköstä, silloinkin jos se ei ole sillä hetkellä toiminnassa näytetään komennolla:\n\n```\n$ systemctl status yksikkö\n```\n\nTarkistaaksesi mikäli yksikkö on aktivoitu ja sen toiminta on sallittu:\n\n```\n$ systemctl is-enabled yksikkö\n```\n\n"
    },
    {
      "title": "Käynnistäminen, uudelleen käynnistys ja uudelleen lataaminen",
      "level": 4,
      "content": "Käynnistä yksikkö välittömästi:\n\n```\n# systemctl start yksikkö\n```\n\nLopeta yksikön toiminta välittömästi:\n\n```\n# systemctl stop yksikkö\n```\n\nKäynnistä uudelleen yksikkö:\n\n```\n# systemctl restart yksikkö\n```\n\nUudelleen lataa yksikkö ja sen konfiguraatio:\n\n```\n# systemctl reload yksikkö\n```\n\nUudelleen lataa systemd managerin konfiguraatio, jolla skannataan uusia tai muutettuja yksikköjä:\n\n```\n# systemctl daemon-reload\n```\n\nNote: **uudelleen lataus** \n\n"
    },
    {
      "title": "Aktivointi",
      "level": 4,
      "content": "Aktivoi yksikkö käynnistymään heti bootatessa:\n\n```\n# systemctl enable yksikkö\n```\n\nAktivoi yksikkö käynnistymään heti bootatessa ja käynnistä se välittömästi:\n\n```\n# systemctl enable --now yksikkö\n```\n\nDeaktivoi yksikkö käynnistymästä bootatessa:\n\n```\n# systemctl disable yksikkö\n```\n\n"
    },
    {
      "title": "Naamiointi",
      "level": 4,
      "content": "Naamioi yksikkö tehdäksesi käynnistämisestä mahdotonta (manuaalisesti sekä riippuvuutena, mikä tekeekin naamioinnista vaarallisen):\n\n```\n# systemctl mask yksikkö\n```\n\nPaljasta yksikkö:\n\n```\n# systemctl unmask yksikkö\n```\n\n"
    },
    {
      "title": "Virran hallinta",
      "level": 3,
      "content": "polkit on tarpeellinen virranhallinnalle epäoikeutettuna käyttäjänä. Jos olet lokaalissa systemd-logind käyttäjä sessiossa ja mikään muu sessio ei ole aktiivinen, seuraavat komennot toimivat ilman root-oikeuksia. Jos näin ei ole (esim. jos joku toinen käyttäjä on kirjautuneena tty:hyn), systemd kysyy automaattisesti root salasanaa.\n\nSammuttaminen ja uudelleen käynnistys järjestelmälle:\n\n```\n$ systemctl reboot\n```\n\nSammuta ja sammuta järjestelmästä virta:\n\n```\n$ systemctl poweroff\n```\n\nLakkauta järjestelmä:\n\n```\n$ systemctl suspend\n```\n\nLaita järjestelmä taukotilaan:\n\n```\n$ systemctl hibernate\n```\n\nLaita järjestelmä hybridiuni tilaan:\n\n```\n$ systemctl hybrid-sleep\n```\n\n"
    },
    {
      "title": "Yksikkötiedostojen kirjoittaminen",
      "level": 2,
      "content": "Systemd:n syntaksi yksikkötiedostoissa (systemd.unit(5)) on saanut inspiraationsa XDG Desktop Entry Specification .desktop tiedostoista, joka taas on saanut inspiraationsa Microsoft Windows .ini tiedostoista. Yksikkötiedostot ladataan useista sijainneista (nähdäksesi täyden listan, suorita systemctl show --property=UnitPath terminaalissa), mutta tärkeimmät ovat (listattuna pienimmästä suurimpaan arvojärjestyksessä):\n\n- /usr/lib/systemd/system/: yksiköt tarjoaa asennetut paketit\n- /etc/systemd/system/: yksiköt jotka järjestelmän valvoja on asentanut\n\n- Latauspolut ovat täysin erilaiset kun suoritetaan systemd käyttäjä tilassa.\n- systemd yksiköiden nimet voivat sisältää vain ASCII alfanumeerisia kirjaimia, alleviivauksia ja pisteitä. Kaikki muut kirjaimet täytyy korvata C-tyylisillä \"\\x2d\" koodinvaihtomerkeillä tai antaa näiden ennaltamäärätyillä semantiikoilla ('@', '-'). Katso systemd.unit(5) ja systemd-escape(1) lisäinformaatiolle.\n\nKannattaa katsoa pakettien asentamia yksiköitä esimerkiksi. Lisää löytyy myös täältä systemd.service(5) § EXAMPLES.\n\n"
    },
    {
      "title": "Riippuvuuksien käsittely",
      "level": 3,
      "content": "Systemd:llä riippuvuuksia pystytään ratkomaan suunnittelemalla yksikkötiedostot oikein. Kaikkein tyypillisin tapaus on, kun yksikkö A vaatii yksikköä B käynnistymään ennen yksikköä A. Siinä tapauksessa lisää Requires=B ja After=B [Unit] -osaan A:ta. Jos riippuvuus on vapaaehtoinen, lisää sen sijaan Wants=B ja After=B. Huomaa ettei Wants= ja Requires= vastaa After=, tarkoittaen siis sitä jos After= ei ole tarkennettu, nämä kaksi yksikköä käynnistetään rinnakkain.\n\nRiippuvuuksia on yleensä asetettu palveluihin eikä kohteisiin. Esimerkiksi mikä tahansa palvelu joka konfiguroi verkkoyhteyden rajapinnan, nostaa network.target jonka takia omien yksiköiden suorittaminen sen jälkeen on riittoisa sillä network.target on käynnissä jo muutenkin.\n\n"
    },
    {
      "title": "Palvelu tyypit",
      "level": 3,
      "content": "Käytettävissä on useita käynnistys tyyppejä, joista voi harkita itse sopivaa käynnistystapaa kirjottaessa omaa palvelu tiedostoa. Tämä asetetaan Type= parametrilla [Service] osassa:\n\n- Type=simple (oletus): systemd käynnistää palvelun välittömästi. Tämä prosessi ei saa haarukoita muihin osasiin. Älä käytä tätä käynnistystapaa mikäli kyseinen palvelu vaatii muiden palveluiden kutsumista, ellei palvelu ole suoritinkannan aktivointi.\n- Type=forking: systemd käynnistää palvelun kun prosessi haarukoituu muihin osasiin ja isäntä prosessi lopettaa toimintansa. Tyypillisille taustaprosesseille tämä on varmin vaihtoehto, ellet tiedä sen olevan tarpeeton. Kannattaa myös määrittää PIDFile=, jotta systemd voi seurata pääprosessia.\n- Type=oneshot: tämä on hyödyllinen skripteille, jotka tekevät yhden asian ja lopettavat toimintansa. Voit myös haluta asettaa RemainAfterExit=yes, jotta systemd tulkitsee tämän palvelun aktiiviseksi vielä sen jälkeen kun prosessi on oikeasti lopettanut toimintansa.\n- Type=notify: identtinen Type=simple kanssa, mutta vain siinä tapuksessa kun taustaprosessi lähettää signaalin systemd:lle ollessaan valmis. Viittauksen tähän toteutukseen tulee libsystemd-daemon.so:sta.\n- Type=dbus: palvelu on valmis kun BusName ilmestyy DBus:sin järjestelmäväylässä.\n- Type=idle: systemd viivästyttää palvelun binäärien suorittamista kunnes kaikki työt on saatu toimintaan. Muutoin tämä käynnistystapa vastaa Type=simple.\n\nKatso systemd.service(5) § OPTIONS manuaali yksityiskoihtaisemmasta selityksestä liittyen Type arvoihin.\n\n"
    },
    {
      "title": "Valmiiden yksiköiden muokkaaminen",
      "level": 3,
      "content": "Välttääksesi ristiriitoja pacman:in kanssa, pakettien mukana tulevia yksikkötiedostoja ei saisi suoraan muokata. On olemassa kaksi turvallista tapaa muokata yksikköä koskematta alkuperäiseen tiedostoon: luo uusi yksikkötiedosto, joka kirjoittaa edellisen yli tai luo drop-in pätkä, joka tulee alkuperäisen päälle. Molemmissa tapauksissa yksikkö täytyy ladata uudestaan saadaksesi muutokset käyttöön. Tämä voidaan tehdä joko muokkaamalla yksikköä systemctl edit (joka lataa yksikön uudestaan automaattisesti) tai lataamalla kaikki yksiköt uudestaan komennolla:\n\n```\n# systemctl daemon-reload\n```\n\n- Voit käyttää systemd-delta nähdäksesi minkä yksikkötiedostojen yli on kirjoitettu tai laajennettu ja tarkalleen mitä muutoksia on tehty.\n- Käytä systemctl cat yksikkö nähdäksesi yksikön sisällön ja kaikki siihen liittyvät drop-in pätkät.\n\n"
    },
    {
      "title": "Korvaavat yksikkötiedostot",
      "level": 4,
      "content": "Korvataksesi yksikkötiedoston /usr/lib/systemd/system/yksikkö, luo tiedosto /etc/systemd/system/yksikkö ja uudelleen aktivoi yksikkö päivittämään symlinkit:\n\n```\n# systemctl reenable yksikkö\n```\n\nVaihtoehtoisesti, suorita:\n\n```\n# systemctl edit --full yksikkö\n```\n\nTämä avaa /etc/systemd/system/yksikkö muokkaus ohjelmassa (kopioimalla asennetun version jos se ei ole olemassa) ja automaattisesti lataa sen kun olet valmis muokkauksen kanssa.\n\n"
    },
    {
      "title": "Drop-in tiedostot",
      "level": 4,
      "content": "Luodaksesi drop-in tiedostoja yksikkötiedostoille /usr/lib/systemd/system/yksikkö, luo polku /etc/systemd/system/yksikkö.d/ ja aseta .conf tiedostot sinne kirjoittaaksesi tiedostojen yli tai lisätäksesi lisää vaihtoehtoja. systemd jäsentää sekä asettaa nämä tiedostot alkuperäisen yksikön päälle.\n\nHelpoin tapa on suorittaa komento:\n\n```\n# systemctl edit yksikkö\n```\n\nTämä avaa tiedoston /etc/systemd/system/yksikkö.d/override.conf tekstin käsittely ohjelmassa (luoden sen jos tarpeellista) ja automaattisesti lataa yksikön kun olet muokannut tiedoston.\n\n"
    },
    {
      "title": "Palauta toimittajan versioon",
      "level": 4,
      "content": "Palauttaaksesi tehdyistä muutoksista joihin on käytetty systemctl edit käytä komentoa:\n\n```\n# systemctl revert yksikkö\n```\n\n"
    },
    {
      "title": "Esimerkkejä",
      "level": 4,
      "content": "Jos haluat yksinkertaisesti lisätä vaihtoehtoisen riippuvuuden yksikölle, voit mahdollisesti luoda seuraavan mukaisen tiedoston:\n\n```\n/etc/systemd/system/yksikkö.d/customdependency.conf\n```\n\n```\n[Unit]\nRequires=uusi riippuvuus\nAfter=uusi riippuvuus\n```\n\nVaihtaaksesi ExecStart direktiivin yksikölle, joka ei ole tyyppiä oneshot, luo seuraavan mukainen tiedosto:\n\n```\n/etc/systemd/system/yksikkö.d/customexec.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=uusi komento\n```\n\nHuomaa kuinka ExecStart pitää tyhjentää ennenkuin se voidaan uudelleenasettaa [1]. Sama pätee jokaiselle komponentille, joka pitää määrittää useaan kertaan esim. OnCalendar ajastimille.\n\nVielä yksi esimerkki palvelun automaattisesta uudelleen käynnistämisestä:\n\n```\n/etc/systemd/system/yksikkö.d/restart.conf\n```\n\n```\n[Service]\nRestart=always\nRestartSec=30\n```\n\n"
    },
    {
      "title": "Kohteet",
      "level": 2,
      "content": "systemd käyttää kohteita (englannin target) yksiköiden kokoamiseen yhdeksi ryhmäksi riippuvuuksien välityksellä ja yhdenmukaistettuina synkronointi kohtina. Ne hoitavat samoja asioita kuin ajotasot, mutta käyttäytyvät erilailla.\n\n"
    },
    {
      "title": "Hae nykyiset kohteet",
      "level": 3,
      "content": "Seuraavaa tulisi käyttää systemdn alla, sen sijaan kuin ajotasona runlevel:\n\n```\n$ systemctl list-units --type=target\n```\n\n"
    },
    {
      "title": "Kartoittaminen SysV ajotason ja systemd kohteiden välillä",
      "level": 3,
      "content": "Table content:\nSysV Ajotaso | systemd Kohde | Huomiot\n0 | runlevel0.target, poweroff.target | Pysäytä järjestelmä.\n1, s, single | runlevel1.target, rescue.target | Yhden käyttäjän tila.\n2, 4 | runlevel2.target, runlevel4.target, multi-user.target | Käyttäjän määrittelemät/Sivu kohtaiset ajotasot. Oletukselta identtinen 3 kanssa.\n3 | runlevel3.target, multi-user.target | Monikäyttäjä, ei-graafinen. Käyttäjät voivat yleensä kirjautua sisään useammasta konsolista tai verkon kautta.\n5 | runlevel5.target, graphical.target | Monikäyttäjä, graafinen. Sisältää yleensä kaikki palvelut ajotaso 3:sta sekä graafisen sisään kirjautumisen.\n6 | runlevel6.target, reboot.target | Uudelleen käynnistys\nemergency | emergency.target | Hätätila komentotulkki\n\n"
    },
    {
      "title": "Vaihda nykyinen kohde",
      "level": 3,
      "content": "systemd:ssä tavoitteet voidaan paljastaa target yksiköiden avulla. Niitä voidaan muuttaa seuraavasti:\n\n```\n# systemctl isolate graphical.target\n```\n\nTämä muuttaa vain sen hetkisen tavoitteen, ja sillä ei ole vaikutusta seuraavassa käynnistyksessä. Tämä on yhtäläinen komentojen telinit 3 tai telinit 5 kanssa Sysvinit:issä.\n\n"
    },
    {
      "title": "Vaihda oletus kohde johon käynnistetään",
      "level": 3,
      "content": "Oletus tavoite on default.target, joka on symlinkki tavoitteelle graphical.target. Tämä suunnilleen vastaa vanhaa ajotasoa 5.\n\nVarmistaaksesi vanhan tavoitteen systemctl avulla:\n\n```\n$ systemctl get-default\n```\n\nVaihtaaksesi oletus tavoitteen mihin käynnistetään, vaihda default.target symlinkkiä. systemctl avulla:\n\n```\n# systemctl set-default multi-user.target\n```\n\n```\nRemoved /etc/systemd/system/default.target.\nCreated symlink /etc/systemd/system/default.target -> /usr/lib/systemd/system/multi-user.target.\n```\n\nVaihtoehtoisesti, lisää yksi seuraavista kernelin parametreista käynnistyslataimeen:\n\n- systemd.unit=multi-user.target (joka vastaa karkeasti vanhaa ajotasoa 3),\n- systemd.unit=rescue.target (joka vastaa karkeasti vanhaa ajotasoa 1).\n\n"
    },
    {
      "title": "systemd komponentit",
      "level": 2,
      "content": "Joitain (ei kokonaisuudessa) systemd:n komponentteja ovat:\n\n- systemd-boot — yksinkertainen UEFI boot manager;\n- systemd-firstboot — perus järjestelmän asetusten alustaminen ennen ensimmäistä käynnistystä;\n- systemd-homed — siirrettävät ihmiskäyttäjän tilit;\n- systemd-logind — istunnon hallinta;\n- systemd-networkd — verkon konfiguroinnin hallinta;\n- systemd-nspawn — kevyt nimiavaruuden säilö;\n- systemd-resolved — verkon nimi resoluutio;\n- systemd-sysusers(8) — luo järjestelmäkäyttäjiä ja ryhmiä ja lisää käyttäjiä ryhmiin asennuksen yhdteydessä tai käynnistyksen aikana;\n- systemd-timesyncd — järjestelmän ajan synkronointi läpi koko verkon;\n- systemd/Journal — järjestelmän kirjaukset;\n- systemd/Timers — monotoniset tai reaaliaikaiset ajastimet .service tiedostojen hallintaan tai tapahtumille, kohtuullinen vaihtoehto cron:ille.\n\n"
    },
    {
      "title": "Epäonnistuneiden palveluiden tutkiminen",
      "level": 3,
      "content": "systemd palvelut, jotka eivät onnistuneet käynnistymään, löytyvät:\n\n```\n$ systemctl --state=failed\n```\n\nTutki näiden kirjauksia, löytääksesi syyn sille. Katso systemd/Journal#Filtering output lisätiedolle.\n\n"
    },
    {
      "title": "Bootaus ongelmien tutkiminen",
      "level": 3,
      "content": "systemd sisältää monia vaihtoehtoja ongelmien tutkimiseen boot prosessissa. Katso boot debugging lisäohjeille ja asetuksille Boot viestin tallentamiseksi ennenkuin systemd aloittaa toimintansa boot prosessista. Katso myös systemd debuggaus dokumentaatio.\n\n"
    },
    {
      "title": "Palvelun tutkiminen",
      "level": 3,
      "content": "Jos jotkin systemd palvelut eivät toimi oikein tai haluat enemmän tietoa siitä mitä tapahtuu, aseta SYSTEMD_LOG_LEVEL alusta muuttuja tähän: debug. Esimerkiksi, systemd-networkd taustaprosessin suoritukseen debug tilassa:\n\nLisää Drop-in tiedosto palvelulle lisäämällä kaksi riviä:\n\n```\n[Service]\nEnvironment=SYSTEMD_LOG_LEVEL=debug\n```\n\nTai vastaavasti aseta alusta muuttuja manuaalisesti:\n\n```\n# SYSTEMD_LOG_LEVEL=debug /lib/systemd/systemd-networkd\n```\n\nsitten käynnistä uudelleen systemd-networkd ja katso lokikirjaa palvelulle jossa on -f/--follow asetus.\n\n"
    },
    {
      "title": "Sammutus/uudelleen käynnistys vie älyttömästi aikaa",
      "level": 3,
      "content": "Jos sammuttus prosessi vie paljon aikaa (tai vaikuttaa jäätyvän) todennäköisesti jokin palvelu jota ei ole olemassa on syynä. systemd odottaa jonkin aikaa jokaista palvelua lopettamaan ennenkuin systemd katkaisee sen toiminnan. Jos haluat tietää onko oma järjestelmäsi tämän vaikutuksen alaisena, katso tämä artikkeli.\n\n"
    },
    {
      "title": "Katso myös",
      "level": 2,
      "content": "- Wikipedia:systemd\n- Virallinen nettisivu systemd optimointi systemd FAQ systemd Vinkkejä ja konsteja\n- systemd(1)\n- Muut jakelut Gentoo:Systemd Fedora:Systemd Fedora:How to debug Systemd problems Fedora:SysVinit to Systemd Cheatsheet Debian:systemd\n- Lennartin blogi tarina, päivitys 1, päivitys 2, päivitys 3, yhteenveto\n- Debuggaa Systemd Palveluita\n- systemd järjestelmän hallinnoinnille (PDF)\n- Kuinka Käyttää Systemctl:ää Systemd Palveluiden ja Yksiköiden Hallintaan\n- Tilan hallinta systemd-logind avulla\n- Emacs Syntaksin maalaaminen Systemd tiedostoille\n- Kaksi osainen selvitys artikkeliin The H Open lehdessä.\n\n- systemd optimointi\n- systemd FAQ\n- systemd Vinkkejä ja konsteja\n\n- Gentoo:Systemd\n- Fedora:Systemd\n- Fedora:How to debug Systemd problems\n- Fedora:SysVinit to Systemd Cheatsheet\n- Debian:systemd\n\n"
    }
  ]
}
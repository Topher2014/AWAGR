{
  "title": "WPA supplicant (日本語)",
  "url": "https://wiki.archlinux.org/title/WPA_supplicant_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- ネットワーク設定\n- ワイヤレスネットワーク設定\n- iwd\n- WPA2 Enterprise\n\nwpa_supplicant はクロスプラットフォームのサプリカントで WEP, WPA, WPA2 (IEEE 802.11i / RSN (Robust Secure Network)) をサポートしています。デスクトップやノートパソコン、組込みシステムを対象としています。\n\nwpa_supplicant はクライアントステーションで使われている IEEE 802.1X/WPA コンポーネントです。WPA アクセスポイントとのキーネゴシエーションを実装しており、無線ドライバーのローミングと IEEE 802.11 認証/アソシエーションを制御します。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 概要\n- 3 wpa_cli で接続する\n- 4 wpa_passphrase で接続する\n- 5 高度な使用方法 5.1 設定 5.2 接続 5.2.1 手動 5.2.2 起動時 (systemd) 5.2.2.1 802.1x/radius 5.3 wpa_cli アクションスクリプト 5.4 ローミング\n- 6 トラブルシューティング 6.1 接続失敗のデバッグ 6.2 nl80211 ドライバーがサポートされていない 6.3 ネットワーク共有 (cifs) をマウントしたときにシャットダウン時に起こる問題 6.4 パスワードに関連する問題 6.5 eduroam などの MSCHAPv2 接続の問題 6.6 純粋な WPA3-SAE アクセスポイントへの接続 6.7 混合 WPA2-PSK/WPA3-SAE アクセスポイントへの接続 6.8 ハードウェアの 802.11w サポート\n- 7 参照\n\n- 5.1 設定\n- 5.2 接続 5.2.1 手動 5.2.2 起動時 (systemd) 5.2.2.1 802.1x/radius\n- 5.3 wpa_cli アクションスクリプト\n- 5.4 ローミング\n\n- 5.2.1 手動\n- 5.2.2 起動時 (systemd) 5.2.2.1 802.1x/radius\n\n- 5.2.2.1 802.1x/radius\n\n- 6.1 接続失敗のデバッグ\n- 6.2 nl80211 ドライバーがサポートされていない\n- 6.3 ネットワーク共有 (cifs) をマウントしたときにシャットダウン時に起こる問題\n- 6.4 パスワードに関連する問題\n- 6.5 eduroam などの MSCHAPv2 接続の問題\n- 6.6 純粋な WPA3-SAE アクセスポイントへの接続\n- 6.7 混合 WPA2-PSK/WPA3-SAE アクセスポイントへの接続\n- 6.8 ハードウェアの 802.11w サポート\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "wpa_supplicant パッケージをインストールしてください。メインのプログラムである wpa_supplicant とパスフレーズツールの wpa_passphrase、テキストフロンドの wpa_cli が含まれています。\n\n任意で、wpa_supplicant のグラフィカルフロントエンドである wpa_gui が入っている wpa_supplicant_guiAUR もインストールしてください。\n\n"
    },
    {
      "title": "概要",
      "level": 2,
      "content": "暗号化された無線ネットワークに接続するためにまず wpa_supplicant が WPA アクセスポイントから認証を取得します。このために、wpa_supplicant を設定して適切な証明書をアクセスポイントに送信できるようにしておく必要があります。認証が成功したら、通常通り IP アドレスを取得してネットワークに接続することが可能になります。\n\n"
    },
    {
      "title": "wpa_cli で接続する",
      "level": 2,
      "content": "実行中に wpa_supplicant をインタラクティブに設定するのに使われるコマンドラインツール wpa_cli を利用します。この接続方法では利用可能なネットワークをスキャンすることができます。詳しくは wpa_cli(8) を見て下さい。\n\nwpa_cli を使用するには、wpa_supplicant のコントロールインターフェイスを指定して設定を更新する権限を与える必要があります。最小限の設定ファイルを作成してください:\n\n```\n/etc/wpa_supplicant/wpa_supplicant.conf\n```\n\n```\nctrl_interface=/run/wpa_supplicant\nupdate_config=1\n```\n\nそして次のコマンドで wpa_supplicant を起動します:\n\n```\n# wpa_supplicant -B -i interface -c /etc/wpa_supplicant/wpa_supplicant.conf\n```\n\nここで次を実行すると:\n\n```\n# wpa_cli\n```\n\nインタラクティブプロンプト (>) が現れます。タブ補完機能と完全なコマンドの説明があります。\n\nscan と scan_results コマンドを使って利用可能なネットワークを表示してください:\n\n```\n> scan\nOK\n<3>CTRL-EVENT-SCAN-RESULTS\n> scan_results\nbssid / frequency / signal level / flags / ssid\n00:00:00:00:00:00 2462 -49 [WPA2-PSK-CCMP][ESS] MYSSID\n11:11:11:11:11:11 2437 -64 [WPA2-PSK-CCMP][ESS] ANOTHERSSID\n```\n\nMYSSID と接続するには、ネットワークを追加して証明書を設定し、有効にします:\n\n```\n> add_network\n0\n> set_network 0 ssid \"MYSSID\"\n> set_network 0 psk \"passphrase\"\n> enable_network 0\n<2>CTRL-EVENT-CONNECTED - Connection to 00:00:00:00:00:00 completed (reauth) [id=0 id_str=]\n```\n\nSSID にパスワード認証が設定されていない場合、set_network 0 psk \"passphrase\" コマンドを set_network 0 key_mgmt NONE に置き換えて明示的にパスワードを使わないとネットワークを設定してください。\n\n- ネットワークにはそれぞれ数字のインデックスが付けられます、一番目のネットワークはインデックス0になります。\n- PSK はクォートをつけた\"パスフレーズ\"文字から計算されます、これは wpa_passphrase コマンドと同じです。とはいえ、psk にクォートを付けずに直接 PSK を入力することもできます。\n\n最後にこのネットワークを設定ファイルに保存してください:\n\n```\n> save_config\nOK\n```\n\nこれで WAP の設定は完了です。iproute2 スイートを使用するか systemd-networkd や dhcpcd などのネットワークプログラムを使って手動で設定して IP アドレスを取得してください。ネットワーク#IP アドレスの設定も参照してください。例えば:\n\n```\n# dhcpcd interface\n```\n\n"
    },
    {
      "title": "wpa_passphrase で接続する",
      "level": 2,
      "content": "この接続方法では SSID が既知のネットワークに素早く接続することができます。wpa_supplicant が使用する最小限の設定を作成するコマンドラインツール wpa_passphrase を使います。例:\n\n```\n$ wpa_passphrase MYSSID passphrase\n```\n\n```\nnetwork={\n    ssid=\"MYSSID\"\n    #psk=\"passphrase\"\n    psk=59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\n}\n```\n\nこれは wpa_passphrase で wpa_supplicant が関連付けられることを意味し次のコマンドで簡単に起動できます:\n\n```\n# wpa_supplicant -B -i interface -c <(wpa_passphrase MYSSID passphrase)\n```\n\n```\nSuccessfully initialized wpa_supplicant\nFailed to open config file '/dev/fd/63', error: No such file or directory\nFailed to read or parse configuration '/dev/fd/63'\n```\n\n- 入力する文字列に空白が含まれている場合は、クォートで囲ってください。例: \"secret passphrase\"。\n- 無線ネットワークインターフェイスの名前を確認するには、ip link コマンドを実行してください。\n- 複雑なパスフレーズだと稀にファイルからの入力が必要な場合があります: wpa_passphrase MYSSID < passphrase.txt\n\nWAP との関連付けが完了したら、iproute2 スイートを使用するか systemd-networkd や dhcpcd などのネットワークプログラムを使って手動で設定して IP アドレスを取得してください。ネットワーク#IP アドレスの設定も参照してください。例えば:\n\n```\n# dhcpcd interface\n```\n\n"
    },
    {
      "title": "高度な使用方法",
      "level": 2,
      "content": "EAP を後で利用するなど、複雑性が変化するネットワークでは、カスタマイズした設定ファイルを作るのが有用かもしれません。設定の例と大要については、wpa_supplicant.conf(5) を参照してください。サポートされている設定パラメータの詳細についてはサンプルファイルの /usr/share/doc/wpa_supplicant/wpa_supplicant.conf を参照してください [1]。\n\n"
    },
    {
      "title": "設定",
      "level": 3,
      "content": "wpa_passphrase で接続するを読めば明らかなように、基本の設定ファイルは次のコマンドで生成できます:\n\n```\n# wpa_passphrase MYSSID passphrase > /etc/wpa_supplicant/example.conf\n```\n\nこれによって network セクションだけが作成されます。よく使われるオプションを記述した設定ファイルは以下のようになります:\n\n```\n/etc/wpa_supplicant/example.conf\n```\n\n```\nctrl_interface=/run/wpa_supplicant\nctrl_interface_group=wheel\nupdate_config=1\ncountry=US # ISO/IEC alpha2 country code\nap_scan=1\n\nnetwork={\n    ssid=\"MYSSID\"\n    psk=59e0d07fa4c7741797a4e394f38a5c321e3bed51d54ad5fcbd3f84bc7415d73d\n}\n```\n\nクォートで囲むことでパスフレーズは平文で定義することもできます。ただしセキュリティについて十分に警戒してください:\n\n```\nnetwork={\n    ssid=\"MYSSID\"\n    psk=\"passphrase\"\n}\n```\n\nネットワークにパスフレーズが設定されていない場合 (公共の Wi-Fi など):\n\n```\nnetwork={\n    ssid=\"MYSSID\"\n    key_mgmt=NONE\n}\n```\n\nnetwork ブロック以下は手動で追加するか、wpa_cli で接続するで説明されているように wpa_cli を使います。wpa_cli を使用するには、コントロールインターフェイスを ctrl_interface オプションで設定する必要があります。ctrl_interface_group=wheel と設定することで wheel グループに属するユーザーが wpa_cli を実行することが可能になります (root 権限がなくても無線ネットワークに接続できるようになります)。また、update_config=1 を追加すると wpa_cli による example.conf への変更が保存されるようになります。\n\nfast_reauth=1 と ap_scan=1 は書き込み時にグローバルで有効になる wpa_supplicant オプションです。この2つのオプションや、その他のグローバルオプションが必要かどうかは、接続するネットワークのタイプによります。他のグローバルオプションが必要な場合、/usr/share/doc/wpa_supplicant/wpa_supplicant.conf からファイルにオプションをコピーしてください。\n\nまた、wpa_cli set を使うことでオプションの状態を見たり新しいオプションを設定することができます。この設定には複数の network ブロックを追記できます: サプリカントは関連付けを管理しそれら全てのローミングを行います。通常は network ブロックで定義された一番強いシグナルがデフォルトで接続されます、priority= で挙動を変えることができます。\n\n/usr/share/doc/wpa_supplicant/wpa_supplicant.conf のカスタマイズした設定ファイルを使用する利点はデフォルトで dhcpcd によって使用されることです。その場合、オリジナルのバックアップを作成してその中の拡張 network ブロックの例を削除することができます。さもなければ、突然定義されたネットワークにデバイスが接続されても驚かないで下さい。どんな場合でも、設定ファイルの新しいバージョンへの変更はマージするべきです。\n\n"
    },
    {
      "title": "手動",
      "level": 4,
      "content": "まず wpa_supplicant コマンドを起動します、よく使われる引数は:\n\n- -B - バックグラウンドにフォーク。\n- -c filename - 設定ファイルのパス。\n- -i interface - listen するインターフェイス。\n- -D driver - 使用するドライバーを任意で指定。サポートされているドライバーのリストは wpa_supplicant -h の出力を見て下さい。 nl80211 が現在の標準ですが、全ての無線チップモジュールがこれをサポートしているわけではありません。 wext は現在推奨されていませんが、いまだに幅広くサポートされています。\n\n- nl80211 が現在の標準ですが、全ての無線チップモジュールがこれをサポートしているわけではありません。\n- wext は現在推奨されていませんが、いまだに幅広くサポートされています。\n\n引数の完全なリストは wpa_supplicant(8) を見て下さい。例:\n\n```\n# wpa_supplicant -B -i interface -c /etc/wpa_supplicant/example.conf\n```\n\niproute2 スイートを使用するか systemd-networkd や dhcpcd などのネットワークプログラムを使って手動で設定して IP アドレスを取得してください。ネットワーク#IP アドレスの設定も参照してください。例えば:\n\n```\n# dhcpcd interface\n```\n\n- dhcpcd には wpa_supplicant を起動することができるフックが含まれています、dhcpcd#10-wpa_supplicant を見て下さい。\n- 引数や設定をテストする際はフォアグラウンドで (-B オプションを付けずに) wpa_supplicant を起動することでデバッグメッセージを確認できます。\n\n"
    },
    {
      "title": "起動時 (systemd)",
      "level": 4,
      "content": "wpa_supplicant パッケージには複数の systemd サービスファイルが入っています:\n\n- wpa_supplicant.service - D-Bus を使用します、NetworkManager に推奨。\n- wpa_supplicant@interface.service - 引数としてインターフェイスの名前を指定することができ、そのインターフェイスで wpa_supplicant デーモンを起動します。/etc/wpa_supplicant/wpa_supplicant-interface.conf の設定ファイルを読み込みます。\n- wpa_supplicant-nl80211@interface.service - 同じくインターフェイスを指定しますが、nl80211 ドライバーの使用を明示的に強制します (下記参照)。設定ファイルのパスは /etc/wpa_supplicant/wpa_supplicant-nl80211-interface.conf。\n- wpa_supplicant-wired@interface.service - 同じくインターフェイスを指定しますが、wired ドライバーを使用します。設定ファイルのパスは /etc/wpa_supplicant/wpa_supplicant-wired-interface.conf。\n\n起動時にワイヤレスを有効にするには、上記のサービスのどれかを特定の無線インターフェイスで有効にしてください、例えば:\n\n```\n# systemctl enable wpa_supplicant@interface\n```\n\nそのインターフェイスで dhcpcd も有効にします:\n\n```\n# systemctl enable dhcpcd@interface\n```\n\n802.1x/radius を使って有線アダプタを接続する場合、アダプタにあわせて設定を指定してサービスを有効化する必要があります。networkd を使用してヘッドレスサーバーを組む場合に有用です。\n\n802.1x/radius の要件にあわせて以下のように設定してください (adapter は接続したい有線アダプタに置き換えてください):\n\n```\n/etc/wpa_supplicant/wpa_supplicant-wired-adapter.conf\n```\n\n```\nctrl_interface=/var/run/wpa_supplicant\nap_scan=0\nnetwork={\n  key_mgmt=IEEE8021X\n  eap=PEAP\n  identity=\"user_name\"\n  password=\"user_password\"\n  phase2=\"autheap=MSCHAPV2\"\n}\n```\n\n上記のファイルでは平文でパスワードを保存しているため、root:root に chown してから 600 に chmod してください。\n\nwpa_supplicant-wired@adapter.service サービスを起動する前に、デバイスを落としてください:\n\n```\n# ip link set adapter down\n```\n\n"
    },
    {
      "title": "wpa_cli アクションスクリプト",
      "level": 3,
      "content": "wpa_cli はデーモンモードで起動することができ wpa_supplicant からのイベントによって指定のスクリプトを実行することができます。2つのイベントがサポートされています: CONNECTED と DISCONNECTED。スクリプトにはいくつかの環境変数を使うことができます、詳しくは wpa_cli(8) を見て下さい。\n\n以下の例ではデスクトップ通知を使ってイベントをユーザーに通知します:\n\n```\n#!/bin/bash\n\ncase \"$2\" in\n    CONNECTED)\n        notify-send \"WPA supplicant: connection established\";\n        ;;\n    DISCONNECTED)\n        notify-send \"WPA supplicant: connection lost\";\n        ;;\nesac\n```\n\nスクリプトを忘れずに実行可能にして、-a フラグを使って wpa_cli にスクリプトのパスを渡して下さい:\n\n```\n$ wpa_cli -a /path/to/script\n```\n\n"
    },
    {
      "title": "ローミング",
      "level": 3,
      "content": "複数のアクセスポイントが存在するワイヤレスネットワークに接続する際、通常、wpa_supplicant がアクセスポイント間のローミングを行います。新しいアクセスポイントを選択するには wpa_supplicant が利用可能なネットワークのスキャンを行う必要があり、無線機が他の周波数をスキャンする間、現在のアクセスポイントに対する接続が短時間切断されます。スキャン後、wpa_supplicant が現在のネットワーク (SSID) 内で (シグナル強度 (RSSI) の点で) より近いアクセスポイント (BSSID) を検出した場合、そのアクセスポイントに再びアソシエーションします。\n\nwpa_supplicant のデフォルトの設定は比較的穏やかです: 現在のアクセスポイントとのアソシエーションが失われた時に限り、再スキャンを行います。これはつまり、クライアントが現在のアクセスポイントから遠く (ただしシグナルが完全には失われない程度に) 離れた場合に、クライアントは、より近いアクセスポイントにローミングすることなく、その弱いシグナルを使用し続けてしまうことを意味します。\n\nwpa_supplicant に積極的にローミングさせるには、設定ファイルで bgscan パラメータを例えば以下のように設定してください:\n\n```\nbgscan=\"simple:30:-70:3600\"\n```\n\n上記の例では、シグナルが弱い (-70 未満) 時に 30 秒毎にスキャンを行い、シグナルが弱くない時には 3600 秒毎にスキャンを行います。bgscan は、特定の network ブロック、あるいは全ネットワークに対してグローバルに指定することができます。\n\n"
    },
    {
      "title": "接続失敗のデバッグ",
      "level": 3,
      "content": "アクセスポイントに接続できない理由を確認するために、wpa_supplicantを -d フラグ付きで実行し、数秒待った後、接続できなかった SSID とその理由を示す行を探します。例えば:\n\n```\n# wpa_supplicant -i wlan0 -c /etc/wpa_supplicant/example.conf -d\n```\n\n```\nwlan0: Selecting BSS from priority group 0\nwlan0: 0: d2:93:5b:b7:5d:d2 ssid= wpa_ie_len=26 rsn_ie_len=24 caps=0x511 level=-54 freq=5180\nwlan0:    skip - SSID not known\nwlan0: 1: f2:93:5b:b7:5d:d2 ssid= wpa_ie_len=26 rsn_ie_len=24 caps=0x511 level=-54 freq=5180\nwlan0:    skip - SSID not known\nwlan0: 2: b2:93:5b:b7:5d:d2 ssid= wpa_ie_len=26 rsn_ie_len=24 caps=0x511 level=-54 freq=5180\nwlan0:    skip - SSID not known\nwlan0: 3: b0:93:5b:b7:5d:d2 ssid='Access Point 1' wpa_ie_len=0 rsn_ie_len=20 caps=0x511 level=-55 freq=5180  wps\nwlan0:    skip - SSID mismatch\nwlan0: 4: c4:13:e2:33:42:20 ssid='\\x00\\x00\\x00\\x00' wpa_ie_len=22 rsn_ie_len=0 caps=0x111 level=-69 freq=5260\nwlan0:    skip - SSID mismatch\nwlan0: 5: c4:13:e2:33:42:24 ssid='Home' wpa_ie_len=0 rsn_ie_len=26 caps=0x1111 level=-69 freq=5260\nwlan0:    skip RSN IE - no mgmt frame protection enabled but AP requires it\nwlan0:    reject due to mismatch with WPA/WPA2\n...\n```\n\nこの場合、SSID home のアクセスポイントに接続しようとしています。接続が失敗する理由は skip RSN IE - no mgmt frame protection enabled but AP requires it であり、したがって、設定ファイルに ieee80211w=2 を追加する必要があります。\n\n"
    },
    {
      "title": "nl80211 ドライバーがサポートされていない",
      "level": 3,
      "content": "ハードウェアによっては (特に古いハードウェアの場合)、以下のエラーで wpa_supplicant が失敗することがあります:\n\n```\nSuccessfully initialized wpa_supplicant\nnl80211: Driver does not support authentication/association or connect commands\nwlan0: Failed to initialize driver interface\n```\n\n上記のエラーは標準の nl80211 ドライバーが指定のハードウェアをサポートしていないことを示しています。非推奨となっている wext ドライバーならまだデバイスがサポートされている可能性があります:\n\n```\n# wpa_supplicant -B -i wlan0 -D wext -c /etc/wpa_supplicant/example.conf\n```\n\n上記のコマンドで接続できた場合、systemd を使って無線接続を管理したいときは、パッケージに含まれている wpa_supplicant@.service ユニットを編集して ExecStart 行を修正してください:\n\n```\n/etc/systemd/system/wpa_supplicant@.service.d/wext.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/bin/wpa_supplicant -c/etc/wpa_supplicant/wpa_supplicant-%I.conf -i%I -Dnl80211,wext\n```\n\n"
    },
    {
      "title": "ネットワーク共有 (cifs) をマウントしたときにシャットダウン時に起こる問題",
      "level": 3,
      "content": "無線を使ってネットワーク共有に接続している場合、シャットダウンが異常に長くなるという問題が起こることがあります。systemd のタイムアウトが3分になっているのが原因です。WPA supplicant の終了が早すぎて、systemd が共有をアンマウントする前に接続が切れてしまいます。バグレポート において以下のように wpa_supplicant@.service を編集することが提案されています:\n\n```\n/etc/systemd/system/wpa_supplicant.service.d/override.conf\n```\n\n```\n[Unit]\nAfter=dbus.service\n```\n\n"
    },
    {
      "title": "パスワードに関連する問題",
      "level": 3,
      "content": "特殊文字を含む長くて複雑なパスワードを標準入力から直接指定された場合 wpa_supplicant が正しく動作しないことがあります。例えば wpa_supplicant を起動したときに failed 4-way WPA handshake, PSK may be wrong というエラーが表示されます。\n\n上記の問題を解決するには、wpa_passphrase <MYSSID> <<< \"<passphrase>\" という形でパスワードを指定するか、-c フラグでファイルを指定してください:\n\n```\n# wpa_supplicant -i <interface> -c /etc/wpa_supplicant/example.conf\n```\n\nときどき、wpa_supplicant.conf の network ブロックの psk キーで平文のパスフレーズを保存するという方法で回避するように示唆されている場合があります ([2] を参照)。しかしながら、このような方法は安全ではありません。大抵の場合、手動でパスワードを書いてしまうよりも wpa_cli を使ってファイルを作成する方がベストです。\n\n"
    },
    {
      "title": "eduroam などの MSCHAPv2 接続の問題",
      "level": 3,
      "content": "設定の中で大文字の \"v\" が使われていることを確認してください:\n\n```\nphase2=\"auth=MSCHAPV2\"\n```\n\nMSCHAPV2 はデフォルトであるため、上記の設定は完全に削除しても問題ありません (FS#51358)。\n\n"
    },
    {
      "title": "純粋な WPA3-SAE アクセスポイントへの接続",
      "level": 3,
      "content": "純粋な WPA3アクセスポイント への接続を有効にするには、configのネットワークブロック内で以下を定義してください:\n\n```\nssid=\"network SSID\"\nkey_mgmt=SAE\nsae_password=\"the.literal.wifi.password\"\nieee80211w=2\n```\n\nさらに、Intel Wi-Fi 6カードでは、設定ファイルのメイン(ネットワーク以外の)セクションに sae_pwe=1 を追加する必要がある場合があります。\n\n"
    },
    {
      "title": "混合 WPA2-PSK/WPA3-SAE アクセスポイントへの接続",
      "level": 3,
      "content": "WPA2-PSK/WPA3-SAE が混在するアクセスポイントでは、以下のように、key_mgmt の代替設定が必要になります:\n\n```\nssid=\"network SSID\"\nkey_mgmt=WPA-PSK-SHA256\npsk=xxx\nieee80211w=2\n```\n\n"
    },
    {
      "title": "ハードウェアの 802.11w サポート",
      "level": 3,
      "content": "MFP/PMF(Management Frame Protection / Protected Management Frames) のハードウェアサポートをインターフェースクライアントで確認するには、次のコマンドを実行します:\n\n```\n$ iw phy phy0 info | grep 00-0f-ac:6\n```\n\nほとんどの Wi-Fi デバイスは、2009年に導入されたこの規格をサポートしていますが、一部の限定的な(つまり、x86_64 関連でない)または古いハードウェアはサポートしていません。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- wpa_supplicant ホーム\n- wpa_supplicant README - プロジェクトのドキュメント、man ページに記載されていない wpa_cli コマンドなど\n- wpa_cli 使用例\n- wpa_supplicant(8)\n- wpa_supplicant.conf(5)\n- wpa_cli(8)\n- Kernel.org wpa_supplicant ドキュメント\n\n"
    }
  ]
}
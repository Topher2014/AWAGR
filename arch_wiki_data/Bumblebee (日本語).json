{
  "title": "Bumblebee (日本語)",
  "url": "https://wiki.archlinux.org/title/Bumblebee_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- PRIME\n- Nvidia-xrun\n- NVIDIA Optimus\n- Nouveau\n- NVIDIA\n- Intel Graphics\n\nBumblebee の FAQ より:\n\n\"Bumblebee は GNU/Linux システムで NVIDIA Optimus が搭載されたノートパソコンを動作させようという試みです。この機能では2枚のグラフィックカードを必要とし、異なる電源消費のプロファイルがレイヤーによって接続され1つのフレームバッファを共有することになります。\"\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 Bumblebee: Linux 用の Optimus\n- 2 インストール\n- 3 使用方法 3.1 テスト 3.2 基本的な使用方法\n- 4 設定 4.1 速度の最適化 4.1.1 VirtualGL をブリッジとして使用する 4.1.2 Primusrun 4.1.3 Pvkrun 4.2 電源管理 4.2.1 bbswitch を使って NVIDIA カードのデフォルトの電源状態を設定 4.2.2 シャットダウン中に NVIDIA カードを有効にする 4.2.3 サスペンドから復帰した後に NVIDIA カードを有効にする 4.3 マルチモニター 4.3.1 Intel のチップに出力が接続されている場合 4.3.2 NVIDIA のチップに出力が接続されている場合\n- 5 Bumblebee を使わないで CUDA\n- 6 トラブルシューティング 6.1 [VGL] ERROR: Could not open display :8 6.2 Xlib: extension \"GLX\" missing on display \":0.0\" 6.3 [ERROR]Cannot access secondary GPU: No devices detected 6.3.1 NVIDIA(0): Failed to assign any connected display devices to X screen 0 6.3.2 Failed to initialize the NVIDIA GPU at PCI:1:0:0 (GPU fallen off the bus / RmInitAdapter failed!) 6.3.3 Failed to initialize the NVIDIA GPU at PCI:1:0:0 (Bumblebee daemon reported: error: [XORG] (EE) NVIDIA(GPU-0)) 6.3.4 Could not load GPU driver 6.3.5 NOUVEAU(0): [drm] failed to set drm interface version 6.4 /dev/dri/card0: failed to set DRM interface version 1.4: Permission denied 6.5 ERROR: ld.so: object 'libdlfaker.so' from LD_PRELOAD cannot be preloaded: ignored 6.6 Fatal IO error 11 (Resource temporarily unavailable) on X server 6.7 ティアリング 6.8 Bumblebee がソケットに接続できない 6.9 ログイン後にコンソールから X.org を実行 (ルートレス X.org) 6.10 Primusrun によってマウスが遅延する/垂直同期の無効化 6.11 コンポジットウィンドウマネージャにおける Primus の問題 6.12 スタンバイから復帰した後の bumblebee の問題 6.13 Optirun が動作せず、何も出力しない 6.14 カーネル 4.8 で電源管理が機能しない 6.15 ロックアップの問題 (lspci がフリーズする)\n- 7 参照\n\n- 3.1 テスト\n- 3.2 基本的な使用方法\n\n- 4.1 速度の最適化 4.1.1 VirtualGL をブリッジとして使用する 4.1.2 Primusrun 4.1.3 Pvkrun\n- 4.2 電源管理 4.2.1 bbswitch を使って NVIDIA カードのデフォルトの電源状態を設定 4.2.2 シャットダウン中に NVIDIA カードを有効にする 4.2.3 サスペンドから復帰した後に NVIDIA カードを有効にする\n- 4.3 マルチモニター 4.3.1 Intel のチップに出力が接続されている場合 4.3.2 NVIDIA のチップに出力が接続されている場合\n\n- 4.1.1 VirtualGL をブリッジとして使用する\n- 4.1.2 Primusrun\n- 4.1.3 Pvkrun\n\n- 4.2.1 bbswitch を使って NVIDIA カードのデフォルトの電源状態を設定\n- 4.2.2 シャットダウン中に NVIDIA カードを有効にする\n- 4.2.3 サスペンドから復帰した後に NVIDIA カードを有効にする\n\n- 4.3.1 Intel のチップに出力が接続されている場合\n- 4.3.2 NVIDIA のチップに出力が接続されている場合\n\n- 6.1 [VGL] ERROR: Could not open display :8\n- 6.2 Xlib: extension \"GLX\" missing on display \":0.0\"\n- 6.3 [ERROR]Cannot access secondary GPU: No devices detected 6.3.1 NVIDIA(0): Failed to assign any connected display devices to X screen 0 6.3.2 Failed to initialize the NVIDIA GPU at PCI:1:0:0 (GPU fallen off the bus / RmInitAdapter failed!) 6.3.3 Failed to initialize the NVIDIA GPU at PCI:1:0:0 (Bumblebee daemon reported: error: [XORG] (EE) NVIDIA(GPU-0)) 6.3.4 Could not load GPU driver 6.3.5 NOUVEAU(0): [drm] failed to set drm interface version\n- 6.4 /dev/dri/card0: failed to set DRM interface version 1.4: Permission denied\n- 6.5 ERROR: ld.so: object 'libdlfaker.so' from LD_PRELOAD cannot be preloaded: ignored\n- 6.6 Fatal IO error 11 (Resource temporarily unavailable) on X server\n- 6.7 ティアリング\n- 6.8 Bumblebee がソケットに接続できない\n- 6.9 ログイン後にコンソールから X.org を実行 (ルートレス X.org)\n- 6.10 Primusrun によってマウスが遅延する/垂直同期の無効化\n- 6.11 コンポジットウィンドウマネージャにおける Primus の問題\n- 6.12 スタンバイから復帰した後の bumblebee の問題\n- 6.13 Optirun が動作せず、何も出力しない\n- 6.14 カーネル 4.8 で電源管理が機能しない\n- 6.15 ロックアップの問題 (lspci がフリーズする)\n\n- 6.3.1 NVIDIA(0): Failed to assign any connected display devices to X screen 0\n- 6.3.2 Failed to initialize the NVIDIA GPU at PCI:1:0:0 (GPU fallen off the bus / RmInitAdapter failed!)\n- 6.3.3 Failed to initialize the NVIDIA GPU at PCI:1:0:0 (Bumblebee daemon reported: error: [XORG] (EE) NVIDIA(GPU-0))\n- 6.3.4 Could not load GPU driver\n- 6.3.5 NOUVEAU(0): [drm] failed to set drm interface version\n\n"
    },
    {
      "title": "Bumblebee: Linux 用の Optimus",
      "level": 2,
      "content": "Optimus Technology はハードウェアマルチプレクサを使用しない ハイブリッドグラフィック の実装です。内蔵 GPU はディスプレイを管理する一方、ディスクリート GPU は計算量が多いレンダリングを担当して内蔵 GPU に計算結果を転送して表示させます。ノートパソコンがバッテリーで動作しているときは、ディスクリート GPU の電源はオフにされ電力を節約してバッテリーをもたせます。Intel 内蔵グラフィックと nVidia の外付けグラフィックカードが搭載されたデスクトップマシンでも動作させることが可能です。\n\nBumblebee のソフトウェア実装は2つの部分から構成されています:\n\n- 画面外においてディスクリート GPU 上でプログラムをレンダリングして、内蔵ビデオカードを使ってディスプレイに表示する。このブリッジは VirtualGL または primus (下を参照) によるもので、外付けビデオカードで起動した X サーバーに接続されます。\n- 外付けビデオカードが使用されていないときに無効化する (電源管理セクションを見て下さい)。\n\nBumblebee は Optimus テクノロジの挙動を模倣して、必要なときにレンダリングのためにディスクリート GPU を使用し、使われていないときは電源を落とします。現在のリリースではオンデマンドのレンダリングしかサポートされておらず、負担に応じて外付けビデオカードでプログラムを自動的に起動するのは実装されていません。\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "Bumblebee をインストールする前に BIOS を確認して Optimus を有効にしてください (古いノートパソコンでは \"switchable graphics\" と呼ばれます)。BIOS によっては Optimus を有効にするオプションが存在しないこともあります。BIOS の設定に \"Optimus\" や \"switchable\" という文字がない場合、両方の GPU が有効化されて内蔵グラフィックがプライマリディスプレイになっていることを確認してください。ディスプレイはディスクリートのグラフィックカードではなく、内蔵のグラフィックカードに接続されているはずです。内蔵グラフィックを無効化してディスクリートのグラフィックドライバーをインストールした場合、/etc/X11/xorg.conf や /etc/X11/xorg.conf.d 内のディスクリートのグラフィックカードに関連する conf ファイルを削除してください。\n\nインストール:\n\n- bumblebee - デーモンとクライアントプログラムが入っているメインのパッケージ。\n- mesa - オープンソースの OpenGL 実装。\n- NVIDIA ドライバーの適切なバージョンについては、NVIDIA#インストールを参照。\n- 必要に応じて、xf86-video-intel - Intel ドライバーをインストール。\n\n32ビットのアプリケーションを使用する場合、以下のパッケージをインストールしてください (Multilib を有効にする必要があります):\n\n- lib32-virtualgl - 32ビットアプリケーションのレンダリング・ディスプレイブリッジ。\n- lib32-nvidia-utils または lib32-nvidia-340xx-utilsAUR あるいは他 - 64ビットのパッケージと対応するパッケージをインストールしてください。\n\nBumblebee を使用するには、通常ユーザーを bumblebee グループに追加する必要があります:\n\n```\n# gpasswd -a user bumblebee\n```\n\nグループに追加したら bumblebeed.service を有効化してください。システムを再起動してから#使用方法に従います。\n\n"
    },
    {
      "title": "テスト",
      "level": 3,
      "content": "mesa-demos をインストールして、glxgears を使って Optimus 環境で Bumblebee が動作することをテストしてください:\n\n```\n$ optirun glxgears -info\n```\n\n失敗する場合、次のコマンドを試して下さい (64ビット環境):\n\n```\n$ optirun glxspheres64 -info\n```\n\nもしくは、32ビット環境ならば:\n\n```\n$ optirun glxspheres32\n```\n\nウィンドウが開いてアニメーションが表示されたら、Bumblebee で Optimus が動作しています。\n\n"
    },
    {
      "title": "基本的な使用方法",
      "level": 3,
      "content": "```\n$ optirun [options] application [application-parameters]\n```\n\n使用例 (Windows アプリケーションを Optimus で起動):\n\n```\n$ optirun wine application.exe\n```\n\nNVIDIA Settings を Optimus で使う場合:\n\n```\n$ optirun -b none nvidia-settings -c :8\n```\n\noptirun で使えるオプションのリストは、マニュアルページを見てください:\n\n```\n$ man optirun\n```\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "必要に応じて Bumblebee の挙動は設定をすることが可能です。速度の最適化や電源管理などの調整は /etc/bumblebee/bumblebee.conf で設定することができます。\n\n"
    },
    {
      "title": "速度の最適化",
      "level": 3,
      "content": "スクリーン外のレンダリングの欠点にパフォーマンスの悪化があります。下の表は、最適化を行わないそのままの状態での概要です。Lenovo_ThinkPad_T480と NVIDIA GTX 1060 6GBのeGPUセットアップにおいて、unigine-heavenAURでのベンチマークを示します（1920x1080、max settings、8xAA）。\n\nTable content:\nコマンド | ディスプレイ | FPS | スコア | 最小 FPS | 最大 FPS\noptirun unigine-heaven | 内部 | 20.7 | 521 | 6.9 | 26.6\nprimusrun unigine-heaven | 内部 | 36.9 | 930 | 15.3 | 44.1\nunigine-heaven | 内部、Nvidia-xrun | 51.3 | 1293 | 8.4 | 95.6\nunigine-heaven | 外部、Nvidia-xrun | 56.1 | 1414 | 8.4 | 111.9\n\n"
    },
    {
      "title": "VirtualGL をブリッジとして使用する",
      "level": 4,
      "content": "Bumblebee は VirtualGL によって裏の X サーバーで Optimus NVIDIA カードを使ってフレームをレンダリングし、表の X サーバーに転送を行います。フレームは転送される前に圧縮が施され、それによって帯域を節約して bumblebee の高速化・最適化とすることができます。\n\n単一のアプリケーションで別の圧縮方式を使うには:\n\n```\n$ optirun -c compress-method application\n```\n\n圧縮方式は CPU と GPU のパフォーマンスに影響を与えます。(jpeg などの) 圧縮方式を使うと CPU の負担は多くなりますが GPU の負担は最小限に抑えられます。逆に非圧縮の方式を使うと GPU の負担が高まり CPU の負担は減ります。\n\n圧縮方式: jpeg, rgb, yuv。\n\n非圧縮方式: proxy, xv。\n\n以下は ASUS N550JV ノートパソコンで unigine-heavenAUR ベンチマークアプリを使ってテストしたときの結果です:\n\nTable content:\nコマンド | FPS | スコア | 最小 FPS | 最大 FPS\noptirun unigine-heaven | 25.0 | 630 | 16.4 | 36.1\noptirun -c jpeg unigine-heaven | 24.2 | 610 | 9.5 | 36.8\noptirun -c rgb unigine-heaven | 25.1 | 632 | 16.6 | 35.5\noptirun -c yuv unigine-heaven | 24.9 | 626 | 16.5 | 35.8\noptirun -c proxy unigine-heaven | 25.0 | 629 | 16.0 | 36.1\noptirun -c xv unigine-heaven | 22.9 | 577 | 15.4 | 32.2\n\n全てのアプリケーションで共通の圧縮方式を使いたい場合は /etc/bumblebee/bumblebee.conf で VGLTransport を compress-method に設定してください:\n\n```\n/etc/bumblebee/bumblebee.conf\n```\n\n```\n[...]\n[optirun]\nVGLTransport=proxy\n[...]\n```\n\nまた、VirtualGL がグラフィックカードからピクセルをリードバックするときの方法を変更することもできます。VGL_READBACK 環境変数を pbo に設定するとパフォーマンスが上がるかもしれません。以下の2つを比較してみてください:\n\n```\n# PBO should be faster.\nVGL_READBACK=pbo optirun glxgears\n# The default value is sync.\nVGL_READBACK=sync optirun glxgears\n```\n\n"
    },
    {
      "title": "Primusrun",
      "level": 4,
      "content": "(primus パッケージに含まれている) primusrun は optirun/virtualgl よりも省電力で高い性能を発揮するため、人気が出てきています。単体で実行することができますが、optirun と同じオプションを使うことはできません。primus を optirun のブリッジとして設定することで柔軟に動作させることができます。\n\n64ビットのマシンで32ビットのアプリケーションを実行するには lib32-primus をインストールしてください (multilib を有効にする必要があります)。\n\n使用方法 (単体で実行):\n\n```\n$ primusrun glxgears\n```\n\n使用方法 (optirun のブリッジとして実行):\n\nデフォルト設定ではブリッジとして virtualgl が設定されます。コマンドラインで上書きするには:\n\n```\n$ optirun -b primus glxgears\n```\n\nもしくは /etc/bumblebee/bumblebee.conf に Bridge=primus と記述することで永続的に設定できます。\n\n"
    },
    {
      "title": "Pvkrun",
      "level": 4,
      "content": "primus_vkパッケージのpvkrunは、Vulkanベースのアプリケーションの実行を可能にするprimusrunの置き換えです(議論 en2:Talk:Bumblebee#Using_primus_vk も参照）。vulkan-toolsのvulkaninfoを使って、簡単な確認ができます。\n\n```\n$ pvkrun vulkaninfo\n```\n\n"
    },
    {
      "title": "電源管理",
      "level": 3,
      "content": "電源管理機能の目的は NVIDIA のカードが bumblebee によって使われていないときに電源を切ることです。bbswitch (または bbswitch-dkms) がインストールされていれば、Bumblebee デーモンが起動した時に自動で検知されます。追加の設定は必要ありません。ただし、bbswitch は デスクトップコンピュータでは動作しません 。そのため、デスクトップコンピュータで Bumblebee の電源管理を使うことはできず、bbswitch をインストールする意味もありません (Bumblebee の他の機能はデスクトップコンピュータでも動作します)。\n\n"
    },
    {
      "title": "bbswitch を使って NVIDIA カードのデフォルトの電源状態を設定",
      "level": 4,
      "content": "bbswitch のデフォルトの挙動はカードの電源状態を変更しません。bumblebeed が起動時にカードを無効化します。したがって以下は bumblebeed を使わずに bbswitch を使用する場合にのみ必要になります。\n\n必要に応じてモジュールオプションの load_state と unload_state を設定してください (bbswitch のドキュメントを参照)。\n\n```\n/etc/modprobe.d/bbswitch.conf\n```\n\n```\noptions bbswitch load_state=0 unload_state=1\n```\n\n"
    },
    {
      "title": "シャットダウン中に NVIDIA カードを有効にする",
      "level": 4,
      "content": "一部のノートパソコンでは、システムのシャットダウン時にカードの電源がオフになっていた場合、次の起動時に NVIDIA のカードが正しく初期化されないことがあります。/etc/bumblebee/bumblebee.conf の (デフォルト設定である) TurnCardOffAtExit=false によって Bumblebee デーモンが停止されるたびにカードが有効になってしまいます (例: シャットダウン時など)。この設定はデーモンが実行中の場合は電源状態に影響を及ぼさないため、optirun や primusrun プログラムを全て終了しても GPU は電源オフのままになります。\n\n手動でデーモンを停止したときでも、シャットダウン中に NVIDIA カードの電源が入っているようにするには、以下の systemd サービスを追加してください (bbswitch を使用している場合):\n\n```\n/etc/systemd/system/nvidia-enable.service\n```\n\n```\n[Unit]\nDescription=Enable NVIDIA card\nDefaultDependencies=no\n\n[Service]\nType=oneshot\nExecStart=/bin/sh -c 'echo ON > /proc/acpi/bbswitch'\n\n[Install]\nWantedBy=shutdown.target\n```\n\nそして nvidia-enable.service ユニットを有効化してください。\n\n"
    },
    {
      "title": "サスペンドから復帰した後に NVIDIA カードを有効にする",
      "level": 4,
      "content": "サスペンド後に bumblebee デーモンによるグラフィックカードの有効化が失敗することがあります。/etc/bumblebee/bumblebee.conf でデフォルトの電源管理方法として bbswitch を設定することで解決します:\n\n```\n/etc/bumblebee/bumblebee.conf\n```\n\n```\n[driver-nvidia]\nPMMethod=bbswitch\n\n# ...\n\n[driver-nouveau]\nPMMethod=bbswitch\n```\n\n"
    },
    {
      "title": "Intel のチップに出力が接続されている場合",
      "level": 4,
      "content": "端子 (DisplayPort/HDMI/VGA) が Intel のチップに接続されている場合、xorg.conf でマルチモニターをセットアップすることができます。モニターが Intel カードを使うように設定しても、Bumblebee は NVIDIA カードを使用することが可能です。以下は解像度が 1080p の同等な2つのモニターで HDMI 出力を使う設定です。\n\n```\n/etc/X11/xorg.conf\n```\n\n```\nSection \"Screen\"\n    Identifier     \"Screen0\"\n    Device         \"intelgpu0\"\n    Monitor        \"Monitor0\"\n    DefaultDepth    24\n    Option         \"TwinView\" \"0\"\n    SubSection \"Display\"\n        Depth          24\n        Modes          \"1920x1080_60.00\"\n    EndSubSection\nEndSection\n\nSection \"Screen\"\n    Identifier     \"Screen1\"\n    Device         \"intelgpu1\"\n    Monitor        \"Monitor1\"\n    DefaultDepth   24\n    Option         \"TwinView\" \"0\"\n    SubSection \"Display\"\n        Depth          24\n        Modes          \"1920x1080_60.00\"\n    EndSubSection\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Monitor0\"\n    Option         \"Enable\" \"true\"\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Monitor1\"\n    Option         \"Enable\" \"true\"\nEndSection\n\nSection \"Device\"\n    Identifier     \"intelgpu0\"\n    Driver         \"intel\"\n    Option         \"XvMC\" \"true\"\n    Option         \"UseEvents\" \"true\"\n    Option         \"AccelMethod\" \"UXA\"\n    BusID          \"PCI:0:2:0\"\nEndSection\n\nSection \"Device\"\n    Identifier     \"intelgpu1\"\n    Driver         \"intel\"\n    Option         \"XvMC\" \"true\"\n    Option         \"UseEvents\" \"true\"\n    Option         \"AccelMethod\" \"UXA\"\n    BusID          \"PCI:0:2:0\"\nEndSection\n\nSection \"Device\"\n    Identifier \"nvidiagpu1\"\n    Driver \"nvidia\"\n    BusID \"PCI:0:1:0\"\nEndSection\n```\n\nおそらく BusID は変更する必要があります (Intel と NVIDIA カード両方)。\n\n```\n$ lspci | grep VGA\n```\n\n```\n00:02.0 VGA compatible controller: Intel Corporation 2nd Generation Core Processor Family Integrated Graphics Controller (rev 09)\n```\n\nBusID は 0:2:0 です。\n\n"
    },
    {
      "title": "NVIDIA のチップに出力が接続されている場合",
      "level": 4,
      "content": "ノートパソコンによっては、デジタルビデオ出力 (HDMI や DisplayPort) が NVIDIA のチップに接続されている場合があります。そのような環境で全てのディスプレイを使用するには、X サーバーを2つ実行する必要があります。1番目のサーバーは Intel ドライバーを使用してノートパソコンのパネルや VGA で接続されたディスプレイに表示します。2番目のサーバーは optirun を使って NVIDIA カードで起動し、デジタルディスプレイに表示します。\n\nintel-virtual-output は xf86-video-intel ドライバーセットに含まれているツールです (v2.99 現在)。コマンドラインでの使用方法は以下のとおりです:\n\n```\n$ intel-virtual-output [OPTION]... [TARGET_DISPLAY]...\n```\n\n```\n-d <source display>  出力先ディスプレイ\n-f                   フォアグラウンドで実行 (コンソールからデタッチしてデーモン化してはいけません)\n-b                   bumblebee の起動\n-a                   全てのローカルディスプレイに接続 (:1, :2 など)\n-S                   シングルトンの使用を無効化して intel-virtual-output プロセスを新しく起動\n-v                   全ての詳細な出力を有効化 (-f も有効になります)\n-V <category>        特定の詳細な出力を有効化 (-f も有効になります)\n-h                   ヘルプ\n```\n\nターゲットディスプレイをコマンドラインで指定しなかった場合、intel-virtual-output はどれかのローカルディスプレイに接続します [3]。認識されたディスプレイは xrandr や KDE Display などデスクトップのディスプレイマネージャで管理できます。\n\nツールは bumblebee の起動も行います (Bumblebee はデフォルトインストールで問題ありません)。詳しくは Bumblebee の wiki ページ を見てください。\n\n-f スイッチを使用しないでターミナルから実行すると自動的にデーモン化されます。intel-virtual-output をフォアグラウンドモードで実行する利点として、外部ディスプレイが切断されたときに、intel-virtual-output を終了して nvidia チップを無効化できる点があげられます。ディスプレイをエクスポートして (export DISPLAY=:8) optirun game_bin でゲームを起動した場合、カーソルやキーボードが完全に取られることはありません。export DISPLAY=:0 で標準の操作に戻れます。\n\n"
    },
    {
      "title": "Bumblebee を使わないで CUDA",
      "level": 2,
      "content": "bumblebee を使わずに CUDA を使用することができます。必要なことは nvidia カードがオンになっているようにするだけです:\n\n```\n# tee /proc/acpi/bbswitch <<< ON\n```\n\nこれで CUDA アプリケーションを起動した時に自動で必要なモジュールが全てロードされます。\n\nCUDA を使った後に nvidia カードをオフにするには以下を実行:\n\n```\n# rmmod nvidia_uvm\n# rmmod nvidia\n# tee /proc/acpi/bbswitch <<< OFF\n```\n\n"
    },
    {
      "title": "[VGL] ERROR: Could not open display :8",
      "level": 3,
      "content": "親プロセスをフォークしたり kill したりする Wine アプリケーションで発生する既知の問題です (例えば F2P のオンラインゲーム \"Runes of Magic\" で起こることがあります)。\n\nVirtualGL に関する問題です。bumblebee 3.1 現在、Primus をレンダラーブリッジとして使用する方法があります:\n\n```\n$ optirun -b primus wine windows program.exe\n```\n\n上記の方法で直らない場合、以下を実行する方法もあります:\n\n```\n$ optirun bash\n$ optirun wine windows program.exe\n```\n\nNVIDIA ドライバーを使っている場合、/etc/bumblebee/xorg.conf.nvidia を編集して ConnectedMonitor オプションを CRT-0 に設定することで解決します。\n\n"
    },
    {
      "title": "Xlib: extension \"GLX\" missing on display \":0.0\"",
      "level": 3,
      "content": "NVIDIA のウェブサイトから NVIDIA ドライバーをインストールしようとした場合、上手く動作しません。\n\n1. 同じ方法でドライバーをアンインストールしてください:\n\n```\n# ./NVIDIA-Linux-*.run --uninstall\n```\n\n2. NVIDIA によって生成された Xorg 設定ファイルを削除してください:\n\n```\n# rm /etc/X11/xorg.conf\n```\n\n3. 適切な NVIDIA ドライバーを（再）インストールしてください: #Intel/NVIDIA で Bumblebee をインストール\n\n"
    },
    {
      "title": "[ERROR]Cannot access secondary GPU: No devices detected",
      "level": 3,
      "content": "ときどき、optirun を実行すると以下のように返ってきてしまうことがあります:\n\n```\n[ERROR]Cannot access secondary GPU - error: [XORG] (EE) No devices detected.\n[ERROR]Aborting because fallback start is disabled.\n```\n\nこの場合、/etc/X11/xorg.conf.d/20-intel.conf ファイルをどこか別のところへ移動して、bumblebeed デーモンを再起動する必要があります。それで直ります。Intel モジュールの何らかの機能を変更しなくてはならない場合は、/etc/X11/xorg.conf.d/20-intel.conf を /etc/X11/xorg.conf にマージしてください。\n\nまた、/etc/X11/xorg.conf.d/10-monitor.conf の driver 行をコメントアウトする必要があるかもしれません。\n\nnouveau ドライバーを使っている場合は nvidia ドライバーに切り替えてみて下さい。\n\nlspci の出力を見て、適切な BusID を使って、どこかで (例えば /etc/X11/xorg.conf.d のファイル) NVIDIA カードを定義する必要があります:\n\n```\nSection \"Device\"\n    Identifier \"nvidiagpu1\"\n    Driver \"nvidia\"\n    BusID \"PCI:0:1:0\"\nEndSection\n```\n\nlspci の出力は16進数ですが、Xorg では10進数です。つまり、lspci の出力が 0a:00.0 だった場合 BusID は PCI:10:0:0 となります。\n\n"
    },
    {
      "title": "NVIDIA(0): Failed to assign any connected display devices to X screen 0",
      "level": 4,
      "content": "以下のようにコンソール出力される場合:\n\n```\n[ERROR]Cannot access secondary GPU - error: [XORG] (EE) NVIDIA(0): Failed to assign any connected display devices to X screen 0\n[ERROR]Aborting because fallback start is disabled.\n```\n\n/etc/bumblebee/xorg.conf.nvidia の次の行を:\n\n```\nOption \"ConnectedMonitor\" \"DFP\"\n```\n\n以下のように変更してください:\n\n```\nOption \"ConnectedMonitor\" \"CRT\"\n```\n\n"
    },
    {
      "title": "Failed to initialize the NVIDIA GPU at PCI:1:0:0 (GPU fallen off the bus / RmInitAdapter failed!)",
      "level": 4,
      "content": "rcutree.rcu_idle_gp_delay=1 をブートローダーの設定のカーネルパラメータに追加してください (元の BBS の投稿 に設定例が載っています)。\n\n"
    },
    {
      "title": "Failed to initialize the NVIDIA GPU at PCI:1:0:0 (Bumblebee daemon reported: error: [XORG] (EE) NVIDIA(GPU-0))",
      "level": 4,
      "content": "スリープからの復帰時 primusrunやoptirunコマンドが動かない問題に直面するかもしれません。この問題を解決するために2つ方法があります。システムの再起動か、次のコマンドを実行することです:\n\n```\n# echo 1 > /sys/bus/pci/rescan\n```\n\nそしてprimusrunやoptirunが動く事を試して下さい。上記のコマンドで直らなかった場合、次を試して、NVIDIA cardのバスIDを調べて下さい:\n\n```\n$ lspci | grep NVIDIA\n```\n\n例えば、上記のコマンドによってバスIDが01:00.0と分かった場合、次のコマンドを試すことが使えます：\n\n```\n# echo 1 > /sys/bus/pci/devices/0000:01:00.0/remove\n# echo 1 > /sys/bus/pci/rescan\n```\n\n"
    },
    {
      "title": "Could not load GPU driver",
      "level": 4,
      "content": "以下のようにコンソール出力される場合:\n\n```\n[ERROR]Cannot access secondary GPU - error: Could not load GPU driver\n```\n\nそして nvidia モジュールをロードしようとすると以下のように表示される場合:\n\n```\nmodprobe nvidia\nmodprobe: ERROR: could not insert 'nvidia': Exec format error\n```\n\nNVIDIA ドライバーが Linux カーネルのバージョンとあっていないのが原因です。NVIDIA ドライバーは最新なのにカーネルのバージョンが古い場合に起こります。システムをアップデートすることで問題は解決します。アップデートで問題が修正されない場合、nvidia-dkms を使ったり ABS で nvidia をコンパイルして、最新のカーネルにあわせて nvidia パッケージを手動でコンパイルする必要があります。\n\n"
    },
    {
      "title": "NOUVEAU(0): [drm] failed to set drm interface version",
      "level": 4,
      "content": "公式の nvidia ドライバーに切り替えて下さい。ここにあるコメントの通り、nouveau ドライバーにはカードによって bumblebee で問題が発生します。\n\n"
    },
    {
      "title": "/dev/dri/card0: failed to set DRM interface version 1.4: Permission denied",
      "level": 3,
      "content": "/etc/bumblebee/xorg.conf.nvidia に以下の行を追加することで対処できます ([4] を参照):\n\n```\nSection \"Screen\"\n    Identifier \"Default Screen\"\n    Device \"DiscreteNvidia\"\nEndSection\n```\n\n"
    },
    {
      "title": "ERROR: ld.so: object 'libdlfaker.so' from LD_PRELOAD cannot be preloaded: ignored",
      "level": 3,
      "content": "おそらく64ビット環境で bumblebee を使って32ビットアプリケーションを起動するのに必要なパッケージがインストールされていません。インストールの32ビットアプリケーションに関する部分を見て下さい。問題が解決しない場合やアプリケーションが64ビットの場合、primus ブリッジを使ってみてください。\n\n"
    },
    {
      "title": "Fatal IO error 11 (Resource temporarily unavailable) on X server",
      "level": 3,
      "content": "/etc/bumblebee/bumblebee.conf の KeepUnusedXServer を false から true に変更してください。プログラムはバックグラウンドにフォークされ bumblebee はプログラムについて関知しません。\n\n"
    },
    {
      "title": "ティアリング",
      "level": 3,
      "content": "ティアリングは Bumblebee でよくある問題です。修正するには、垂直同期を有効にする必要があります。Intel のカードではデフォルトで有効になっているはずですが、Xorg のログで確認してみてください。NVIDIA で垂直同期が有効になっているか確認するには、次を実行:\n\n```\n$ optirun nvidia-settings -c :8\n```\n\nX Server XVideo Settings -> Sync to VBlank と OpenGL Settings -> Sync to VBlank を両方有効化してください。Intel のカードでは一般的にティアリングはおだやかなので、動画再生には、Intel のカードを使ってください。特にビデオデコーディングでは VA-API を使って下さい (例えば mplayer-vaapi に -vsync パラメータを渡す)。\n\nIntel カードでティアリングを修正する方法は Intel の記事を見て下さい。\n\nそれでもティアリングが修正されない場合は、デスクトップ環境のコンポジットを無効にしてみてください。また、トリプルバッファも無効にしてみてください。\n\n"
    },
    {
      "title": "Bumblebee がソケットに接続できない",
      "level": 3,
      "content": "以下のような表示がされる場合:\n\n```\n$ optirun glxspheres64\n```\n\nまたは (32ビットの場合):\n\n```\n$ optirun glxspheres32\n```\n\n```\n[ 1648.179533] [ERROR]You've no permission to communicate with the Bumblebee daemon. Try adding yourself to the 'bumblebee' group\n[ 1648.179628] [ERROR]Could not connect to bumblebee daemon - is it running?\n```\n\nbumblebee グループに既に入っているならば ($ groups | grep bumblebee)、ソケット /var/run/bumblebeed.socket を削除してみてください。\n\n"
    },
    {
      "title": "ログイン後にコンソールから X.org を実行 (ルートレス X.org)",
      "level": 3,
      "content": "Xorg#Rootless Xorg (v1.16) を見て下さい。\n\n"
    },
    {
      "title": "Primusrun によってマウスが遅延する/垂直同期の無効化",
      "level": 3,
      "content": "primusrun では VSYNC がデフォルトで有効になっているため、マウスの入力が遅れたり性能が少しだけ落ちたりすることがあります。VSYNC を無効化して primusrun をテストするには:\n\n```\n$ vblank_mode=0 primusrun glxgears\n```\n\n上記の設定に満足したらエイリアスを作成すると良いでしょう (例: alias primusrun=\"vblank_mode=0 primusrun\")。性能の比較:\n\nTable content:\n垂直同期 | FPS | スコア | 最小 FPS | 最大 FPS\n無効 | 31.5 | 793 | 22.3 | 54.8\n有効 | 31.4 | 792 | 18.7 | 54.2\n\n"
    },
    {
      "title": "コンポジットウィンドウマネージャにおける Primus の問題",
      "level": 3,
      "content": "コンポジットを有効にして Primus を使った際にフリッカーが発生したり性能が落ち込む場合、primus のディスプレイスレッドとアプリケーションのレンダリングスレッドを同期することで問題が解決する場合があります:\n\n```\n$ PRIMUS_SYNC=1 primusrun ...\n```\n\n上記の設定をすると primus は先にレンダリングされたフレームを表示します。\n\n"
    },
    {
      "title": "スタンバイから復帰した後の bumblebee の問題",
      "level": 3,
      "content": "システムによっては、スタンバイから復帰した後に nvidia モジュールがロードされることがあります。解決方法としては acpi_call や acpi パッケージをインストールしてください。\n\n"
    },
    {
      "title": "Optirun が動作せず、何も出力しない",
      "level": 3,
      "content": "Bumblebee のインストールは正しく行ったのに以下のコマンドを実行しても何も出力されず、glxgears のウィンドウも表示されないという報告があります:\n\n```\n$ optirun glxgears -info\n```\n\n3D アクセラレーションを必要とするプログラムは全てクラッシュします:\n\n```\n$ optirun bash\n$ glxgears\nSegmentation fault (core dumped)\n```\n\nこれは特定のバージョンの virtualgl のバグです。primus と lib32-primus をインストールして以下のコマンドを使ってください:\n\n```\n$ primusrun glxspheres64\n$ optirun -b primus glxspheres64\n```\n\n詳しくは こちらの投稿 を参照。\n\n"
    },
    {
      "title": "カーネル 4.8 で電源管理が機能しない",
      "level": 3,
      "content": "新しいノートパソコンを使っている場合 (2015年以降の BIOS)、Linux 4.8 から刷新された電源管理に対応していないために bbswitch が機能しなくなることがあります (bbswitch issue 140)。dGPU の電源を入れられなくなったり、あるいは電源を切れなくなったりします。\n\n対処方法としてはカーネルパラメータに pcie_port_pm=off を追加してください。\n\nもしくは、省電力設定を使いたい場合、bbswitch を削除して Nouveau の電源管理を使ってみてください (新しい電源管理をサポートしています)。\n\n"
    },
    {
      "title": "ロックアップの問題 (lspci がフリーズする)",
      "level": 3,
      "content": "GTX 965M などを搭載した新しいノートパソコンにおける問題については NVIDIA Optimus#ロックアップ問題 (lspci がフリーズ) を見てください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Bumblebee プロジェクトリポジトリ\n- Bumblebee リポジトリ wiki\n- Bumblebee プロジェクト bbswitch リポジトリ\n\nfreenode.net の #bumblebee に参加しましょう。\n\n"
    }
  ]
}
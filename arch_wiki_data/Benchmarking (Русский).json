{
  "title": "Benchmarking (Русский)",
  "url": "https://wiki.archlinux.org/title/Benchmarking_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Увеличение производительности\n- Stress testing\n- Sysstat\n\nТестирование производительности (бенчмаркинг) — это акт измерения производительности и сравнения результатов с результатами другой системы или общепринятым стандартом с помощью единой процедуры. Этот унифицированный метод оценки производительности системы может помочь ответить на такие вопросы, как:\n\n- Работает ли система так, как должна?\n- Какую версию драйвера следует использовать для достижения оптимальной производительности?\n- Способна ли система выполнить задачу x?\n\nДля определения производительности системы можно использовать множество инструментов; ниже приведён список доступных инструментов.\n\n"
    },
    {
      "title": "UnixBench",
      "level": 3,
      "content": "Установите пакет unixbenchAUR и для запуска тестирования выполните команду ubench.\n\nСмотрите также:\n\n- https://github.com/kdlucas/byte-unixbench\n- https://github.com/kdlucas/byte-unixbench/blob/master/UnixBench/USAGE\n\n"
    },
    {
      "title": "interbench",
      "level": 3,
      "content": "interbench — это приложение для оценки интерактивности в Linux. Оно предназначено для измерения влияния изменений в дизайне ядра Linux или изменений конфигурации системы, таких как изменения и опции процессора, планировщика ввода-вывода и файловой системы.\n\ninterbench доступен в AUR: interbenchAUR.\n\nСмотрите также:\n\n- Realtime process management\n- Advanced traffic control\n- Linux-ck\n- Linux-pf\n\n"
    },
    {
      "title": "ttcp",
      "level": 3,
      "content": "ttcp (Test TCP) измеряет пропускную способность точка-точка через любое сетевое соединение. Программа должна быть установлена на обоих узлах, между которыми необходимо определить пропускную способность.\n\nРазличные варианты ttcp можно найти в AUR:\n\n- ttcpAUR\n- nuttcpAUR\n\n"
    },
    {
      "title": "iperf",
      "level": 3,
      "content": "iperf — это простой в использовании инструмент тестирования пропускной способности сети между двумя узлами, который может использовать TCP или UDP. Он имеет красиво отформатированный вывод и режим параллельного тестирования.\n\nЕсть две разные версии: iperf и iperf3.\n\n"
    },
    {
      "title": "time",
      "level": 3,
      "content": "Команда time(1) предоставляет статистику времени выполнения команды, отображая время, прошедшее между вызовом и завершением. Пакет time предоставляет команду time, а некоторые командные оболочки предоставляют time в качестве встроенной команды.\n\n```\n$ time tar -zxvf archive.tar.gz\n```\n\n"
    },
    {
      "title": "hdparm",
      "level": 3,
      "content": "Накопители можно тестировать с помощью hdparm (пакет hdparm). Используя hdparm с ключом -Tt, можно определить время последовательного чтения. Этот метод не зависит от выравнивания разделов.\n\n```\n# hdparm -Tt /dev/sdX\n```\n\n```\n/dev/sdX:\nTiming cached reads:   x MB in  y seconds = z MB/sec\nTiming buffered disk reads:  x MB in  y seconds = z MB/sec\n```\n\n"
    },
    {
      "title": "gnome-disks",
      "level": 3,
      "content": "Графический бенчмарк gnome-disks (пакет gnome-disk-utility) показывает минимальную, максимальную и среднюю скорости чтения, а также среднее время доступа, с красивым графическим отображением. Этот метод не зависит от выравнивания разделов.\n\n```\n# gnome-disks\n```\n\nБенчмарк находится в главном меню, пункт Оценить производительность диска. Пример бенчмарка\n\n"
    },
    {
      "title": "KDiskMark",
      "level": 3,
      "content": "kdiskmark — это инструмент для измерения производительности HDD и SSD с очень дружественным графическим интерфейсом. KDiskMark с его предустановками и мощным графическим интерфейсом вызывает Flexible I/O Tester и обрабатывает его вывод, предоставляя простой для просмотра и интерпретации комплексный результат тестирования.\n\n"
    },
    {
      "title": "systemd-analyze",
      "level": 3,
      "content": "```\n$ systemd-analyze plot > boot.svg\n```\n\nПостроит подробный график времени загрузки системы: время ядра, время пользовательского пространства, время, затраченное каждой службой. Пример\n\n"
    },
    {
      "title": "dd",
      "level": 3,
      "content": "Утилита dd может быть использована для измерения как скорости чтения, так и скорости записи. Этот метод зависит от выравнивания разделов! Другими словами, если разделы выровнены неправильно, это скажется на результатах тестирования, поскольку оно выполняется в примонтированной файловой системе.\n\nНа разделе, имеющем хотя бы 1,1 ГБ свободного места, запишите тестовый файл, чтобы измерить скорость записи и создать файл для дальнейшего измерения скорости чтения:\n\n```\n$ dd if=/dev/zero of=/путь/к/диску/tempfile bs=1M count=1024 conv=fdatasync,notrunc status=progress\n```\n\n```\n1024+0 records in\n1024+0 records out\nv bytes (w MB, x MiB) copied, y s, z MB/s\n```\n\nЗатем очистите буфер-кэш, чтобы измерялась скорость чтения непосредственно устройства, а не кэша, и выполните чтение ранее записанного файла:\n\n```\n# echo 3 > /proc/sys/vm/drop_caches\n$ dd if=/путь/к/диску/tempfile of=/dev/null bs=1M count=1024 status=progress\n```\n\n```\n1024+0 records in\n1024+0 records out\nv bytes (w MB, x MiB) copied, y s, z MB/s\n```\n\nТеперь, когда последний файл попал в кэш, повторите команду, чтобы увидеть скорость работы кэша:\n\n```\n$ dd if=/путь/к/диску/tempfile of=/dev/null bs=1M count=1024 status=progress\n```\n\n```\n1024+0 records in\n1024+0 records out\nv bytes (w MB, x MiB) copied, y s, z MB/s\n```\n\nНаконец, удалите временный файл\n\n```\n$ rm /путь/к/диску/tempfile\n```\n\n"
    },
    {
      "title": "dcfldd",
      "level": 3,
      "content": "Dcfldd не выводит среднюю скорость в МБ/с, как это делает старый добрый dd, но с помощью time это можно обойти.\n\nСледующая команда удалит все данные на диске и измерит время заполнения диска нулевыми байтами:\n\n```\n# time dcfldd if=/dev/zero of=/dev/sdX bs=4M\n```\n\n```\n18944 blocks (75776Mb) written.dcfldd:: No space left of device\nreal     16m17.033s\nuser     0m0.377s\nsys      0m51.160s\n```\n\nТеперь можно рассчитать скорость в МБ/с, разделив результат команды dcfldd на время в секундах. Для данного примера: 75776Mb / (16.4 min * 60) = 77.0 MB/s.\n\n"
    },
    {
      "title": "7z",
      "level": 3,
      "content": "Команда 7z benchmark может использоваться для измерения скорости процессора в MIPS, а также для проверки оперативной памяти на наличие ошибок. Просто установите p7zip и выполните приведённую ниже команду. Более подробную информацию можно найти здесь: [1].\n\n```\n$ 7z b\n```\n\n"
    },
    {
      "title": "peakperf",
      "level": 3,
      "content": "peakperf-gitAUR — это микробенчмарк, который пытается достичь пиковой производительности на процессорах x86_64. Некоторые проблемы могут снизить производительность, обеспечиваемую вашим процессором, например, охлаждение процессора. С помощью peakperf вы можете проверить, обеспечивает ли ваш процессор полную мощность, на которую он способен.\n\nМожно рассчитать производительность (измеряемую в GFLOP/s), которую вы должны получить на своём процессоре (смотрите [2]), и сравнить её с производительностью, которую выдаёт peakperf. Если оба значения одинаковы (или очень близки друг к другу), то ваш процессор работает как положено.\n\n"
    },
    {
      "title": "Bonnie++",
      "level": 3,
      "content": "bonnie++ — это переписанный на C++ набор бенчмарков Bonnie, предназначенный для проведения нескольких тестов производительности жёсткого диска и файловой системы.\n\nСмотрите также:\n\n- Сайт автора\n- Wikipedia:Bonnie++\n\n"
    },
    {
      "title": "IOzone",
      "level": 3,
      "content": "IOzone полезна для проведения широкого анализа файловой системы компьютерной платформы поставщика.\n\nЭта программа доступна в AUR: iozoneAUR.\n\nСмотрите также тему на форуме: iozone to evaluate I/O schedulers... results NOT what you'd expect!.\n\n"
    },
    {
      "title": "HardInfo",
      "level": 3,
      "content": "hardinfo-gitAUR[ссылка недействительна: package not found] может собирать информацию об оборудовании и операционной системе, проводить тестирование производительности и генерировать отчёты в формате HTML или обычного текста. HardInfo выполняет бенчмарки CPU и FPU и имеет очень чистый интерфейс на базе GTK.\n\n"
    },
    {
      "title": "Phoronix Test Suite",
      "level": 3,
      "content": "Phoronix Test Suite — это наиболее полная платформа для тестирования и бенчмаркинга, предоставляющая расширяемую структуру, в которой можно легко добавлять новые тесты. Программное обеспечение разработано для эффективного проведения качественных и количественных тестов в чистом, воспроизводимом и простом в использовании виде.\n\nPhoronix Test Suite основан на обширном тестировании и внутренних инструментах, разработанных Phoronix.com с 2004 года при поддержке ведущих поставщиков компьютерного оборудования и программного обеспечения. Это программное обеспечение с открытым исходным кодом и лицензировано по лицензии GNU GPLv3.\n\nИзначально разработанный для автоматизированного тестирования Linux, Phoronix Test Suite теперь поддерживает операционные системы OpenSolaris, Apple macOS, Microsoft Windows и BSD. Phoronix Test Suite состоит из лёгкого ядра (pts-core) с бенчмарками, состоящими из XML-профилей и соответствующих ресурсных скриптов. Процесс от установки бенчмарка до собственно тестирования и анализа важных аппаратных и программных компонентов в значительной степени автоматизирован и полностью повторяем; у пользователя запрашивается только подтверждение действий.\n\nPhoronix Test Suite взаимодействует с OpenBenchmarking.org в качестве совместной веб-платформы для централизованного хранения результатов тестирования, обмена профилями тестов и результатами, расширенными аналитическими возможностями и другими функциями. Phoromatic — корпоративный компонент для оркестровки выполнения тестов в нескольких системах с возможностью удалённого управления.\n\nУстановить Phoronix Test Suite можно с помощью пакета phoronix-test-suiteAUR. Разрабатываемая версия доступна в пакете phoronix-test-suite-gitAUR.\n\n"
    },
    {
      "title": "S",
      "level": 3,
      "content": "S, I/O Benchmark Suite, представляет собой небольшую коллекцию скриптов для измерения производительности ввода-вывода хранилища.\n\nРазработчиком является algodev[устаревшая ссылка 2024-12-14 ⓘ] — команда, стоящая за планировщиком BFQ.\n\nСкачайте или клонируйте проект, установите его зависимости и запустите его от имени root (привилегии необходимы для изменения дискового планировщика).\n\n"
    },
    {
      "title": "s-tui",
      "level": 3,
      "content": "s-tui — это эстетически приятный и полезный интерфейс в стиле curses, который показывает графики частоты процессора, использования, температуры, энергопотребления, а также имеет встроенный стресс-тестер.\n\n"
    },
    {
      "title": "Флеш-накопители",
      "level": 2,
      "content": "Производительность может быть количественно измерена с помощью iozoneAUR. Значения устойчивого чтения и записи могут, но зачастую не коррелируют с реальными тяжёлыми операциями ввода-вывода, такими как распаковка и запись большого числа файлов при обновлении системы. В таких случаях стоит ориентироваться на метрику случайной записи для небольших файлов.\n\nСледующий пример тестирует 10-мегабайтный файл с размером записи 4k:\n\n```\n$ iozone -e -I -a -s 10M -r 4k -i 0 -i 1 -i 2\n```\n\n```\n...\n\n                                                                random   random\n              kB  reclen    write  rewrite    read    reread    read     write\n           10240       4      661      649     5802     5822     3892      624\n```\n\n"
    },
    {
      "title": "Basemark GPU",
      "level": 3,
      "content": "Basemark GPU — это инструмент для анализа и измерения производительности графических API (OpenGL 4.5, OpenGL ES 3.1, Vulkan и Microsoft DirectX 12) на мобильных и настольных платформах. Basemark GPU нацелен как на настольные, так и на мобильные платформы, предоставляя режимы высокого и среднего качества. Режим высокого качества предназначен для самых современных рабочих нагрузок на настольных компьютерах, а режим среднего качества — для эквивалентных мобильных рабочих нагрузок.\n\nЕсли вы используете GPU AMD и у вас одновременно установлено несколько реализаций vulkan, на странице тестирования вы увидите их как отдельные GPU в выпадающем списке Graphics Device.\n\nBasemark GPU доступен в пакете basemarkAUR.\n\n"
    },
    {
      "title": "Blender-benchmark",
      "level": 3,
      "content": "Blender-benchmark соберёт информацию о системе, такую как операционная система, оперативная память, видеокарты, модель процессора, а также информацию о производительности системы во время выполнения бенчмарка. После этого пользователь сможет поделиться результатом онлайн на платформе Blender Open Data или сохранить данные локально.\n\nBlender-benchmark доступен в пакете blender-benchmarkAUR.\n\n"
    },
    {
      "title": "GFXBench",
      "level": 3,
      "content": "GFXBench — это высококлассный графический бенчмарк, измеряющий производительность мобильных и настольных компьютеров с графическими функциями нового поколения на всех платформах. Как настоящий кросс-API бенчмарк, GFXBench поддерживает все основные API, в том числе OpenGL, OpenGL ES, Vulkan, Metal, DirectX/Direct3D и DX12.\n\nТесты API Vulkan в настоящее время находятся в разработке и доступны только для корпоративных партнёров.\n\nGFXBench доступен в пакете gfxbenchAUR.\n\n"
    },
    {
      "title": "glmark2",
      "level": 3,
      "content": "glmark2 — тестирование OpenGL 2.0 и ES 2.0.\n\nglmark2 доступен в пакете glmark2.\n\n"
    },
    {
      "title": "glxgears",
      "level": 3,
      "content": "glxgears — это популярный тест OpenGL, который выполняет рендеринг очень простой OpenGL-картинки и выводит частоту кадров. Хотя glxgears может быть полезен как тест возможностей прямого рендеринга графического драйвера, это устаревший инструмент, который не отражает текущее состояние графики GNU/Linux и общих возможностей OpenGL. Он тестирует только небольшой сегмент возможностей OpenGL, которые могут быть использованы в игре. Увеличение производительности, отмеченное в glxgears, не обязательно будет реализовано в конкретной игре. Более подробную информацию смотрите здесь.\n\nglxgears доступен в пакетах mesa-utils и lib32-mesa-utils (для multilib).\n\n"
    },
    {
      "title": "GpuTest",
      "level": 3,
      "content": "GpuTest — это кроссплатформенный (Windows, Linux и Max OS X) стресс-тест GPU и бенчмарк OpenGL. GpuTest поставляется с несколькими тестами GPU, включая некоторые популярные в мире Windows (FurMark или TessMark).\n\nGpuTest доступен в пакете gputestAUR.\n\n"
    },
    {
      "title": "intel-gpu-tools",
      "level": 3,
      "content": "intel-gpu-tools даёт вам некоторую информацию о встроенном GPU. Это может быть весьма полезно при диагностике проблем с ускорением GPU.\n\nДля использования установите пакет intel-gpu-tools.\n\n"
    },
    {
      "title": "MangoHud",
      "level": 3,
      "content": "MangoHud — это комплексный оверлей для мониторинга производительности системы в приложениях Vulkan и OpenGL.\n\nУстановка и настройка описана в статье MangoHud.\n\n"
    },
    {
      "title": "Unigine Engine",
      "level": 3,
      "content": "Unigine corp. выпустила несколько современных бенчмарков OpenGL на базе своего графического движка с такими возможностями, как:\n\n- Перпиксельное динамическое освещение\n- Normal & parallax occlusion mapping\n- 64-битный HDR-рендеринг\n- Объёмный туман и свет\n- Мощные системы частиц: огонь, дым, взрывы\n- Расширяемый набор шейдеров (GLSL / HLSL)\n- Постобработка: глубина резкости, преломление, свечение, размытие, цветокоррекция и многое другое.\n\nБенчмарки Unigine недавно нашли применение среди тех, кто стремится разогнать свои системы. Heaven особенно часто используется для начального тестирования стабильности разгона.\n\nЭти бенчмарки можно найти в AUR:\n\n- unigine-sanctuaryAUR (2007)\n- unigine-tropicsAUR (2008)\n- unigine-heavenAUR (2009)\n- unigine-valleyAUR (2013)\n- unigine-superpositionAUR (2017)\n\n"
    },
    {
      "title": "vkmark",
      "level": 3,
      "content": "vkmark — это расширяемый набор бенчмарков Vulkan с целевыми, настраиваемыми сценами.\n\nvkmark доступен в пакете vkmark.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Linux Benchmarking Homepage\n- Phoronix.com\n- Interbench Homepage\n- Unigine.com\n\n"
    }
  ]
}
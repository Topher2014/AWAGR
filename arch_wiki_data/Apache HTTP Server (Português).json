{
  "title": "Apache HTTP Server (Português)",
  "url": "https://wiki.archlinux.org/title/Apache_HTTP_Server_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- XAMPP\n- /mod_perl\n- /mod_fcgid\n- /mod_gnutls\n- /mod_python\n- /mod_wsgi\n\nO Apache HTTP Server, ou simplesmente Apache, é um web server muito popular desenvolvido por Apache Software Foundation.\n\nEste artigo descreve como configurar o Apache e como opcionalmente integrá-lo com PHP.\n\n"
    },
    {
      "title": "Instalação",
      "level": 2,
      "content": "Instale o pacote apache.\n\n"
    },
    {
      "title": "Configuração",
      "level": 2,
      "content": "Os arquivos de configuração do Apache estão localizados em /etc/httpd/conf. O principal arquivo de configuração é /etc/httpd/conf/httpd.conf, que inclui vários outros arquivos de configuração. O principal arquivo de configuração deve ser o suficiente para uma configuração simples. Por padrão, será fornecido o diretório /srv/http para qualquer um que queira acessar seu website.\n\nPara iniciar o Apache, inicie httpd.service usando o systemd.\n\nO Apache deverá estar executando agora. Teste-o visitando o endereço http://localhost/ em um navegador da web. Isto deverá exibir uma simples página web inicial.\n\nPara configurações adicionais, veja as seções a seguir.\n\n"
    },
    {
      "title": "Opções avançadas",
      "level": 3,
      "content": "Veja a lista completa de diretivas de configuração do Apache e o guia de referência rápido.\n\nEstas opções em /etc/httpd/conf/httpd.conf poderão ser interessantes:\n\n```\nUser http\n```\n\n```\nListen 80\n```\n\n```\nServerAdmin you@example.com\n```\n\n```\nDocumentRoot \"/srv/http\"\n```\n\n```\nAllowOverride None\n```\n\nMais configurações que podem ser encontradas em /etc/httpd/conf/extra/httpd-default.conf:\n\nDesativar a assinatura do servidor:\n\n```\nServerSignature Off\n```\n\nPara ocultar informações do servidor e versão do PHP:\n\n```\nServerTokens Prod\n```\n\n"
    },
    {
      "title": "Diretórios do usuário",
      "level": 3,
      "content": "Diretórios do usuário estão disponíveis por padrão através de http://localhost/~yourusername/ e exibem o conteúdo de ~/public_html (isto pode ser alterado em /etc/httpd/conf/extra/httpd-userdir.conf).\n\nSe não desejar que diretórios do usuário estejam disponíveis através da web, apenas comente a seguinte linha em /etc/httpd/conf/httpd.conf:\n\n```\nInclude conf/extra/httpd-userdir.conf\n```\n\nVocê deverá ter certeza de que seu diretório home está com suas permissões configuradas corretamente para que o Apache possa alcançá-lo. Seu diretório home e ~/public_html devem ser executáveis para outros (\"para todo o mundo\"):\n\n```\n$ chmod o+x ~\n$ chmod o+x ~/public_html\n$ chmod -R o+r ~/public_html\n```\n\nReinicie httpd.service para aplicar quaisquer alterações. Veja também umask (Português)#Definir o valor da máscara.\n\n"
    },
    {
      "title": "TLS",
      "level": 3,
      "content": "Primeiramente, obtain a certificate. Caso tenha seu próprio domínio público, você poderá usar Transport Layer Security#ACME clients.\n\nEm /etc/httpd/conf/httpd.conf, descomente as três linhas a seguir:\n\n```\nLoadModule ssl_module modules/mod_ssl.so\nLoadModule socache_shmcb_module modules/mod_socache_shmcb.so\nInclude conf/extra/httpd-ssl.conf\n```\n\nSe estiver usando certbot --apache, a linha a seguir também deverá ser descomentada:\n\n```\nLoadModule rewrite_module modules/mod_rewrite.so\n```\n\nApós obter uma chave e um certificado, certifique-se que as linhas SSLCertificateFile e SSLCertificateKeyFile em /etc/httpd/conf/extra/httpd-ssl.conf apontam para a chave e o certificado. Se uma cadeia de certificados CA também foi gerada, adicione seu nome de arquivo em SSLCertificateChainFile.\n\nFinalmente, reinicie httpd.service para aplicar quaisquer alteralções.\n\n"
    },
    {
      "title": "Hosts virtuais",
      "level": 3,
      "content": "Se desejar ter mais de um host, descomente a seguinte linha em /etc/httpd/conf/httpd.conf:\n\n```\nInclude conf/extra/httpd-vhosts.conf\n```\n\nEm /etc/httpd/conf/extra/httpd-vhosts.conf configure seus hosts virtuais. O arquivo padrão contém um exemplo elaborado que o ajudará.\n\nPara testar os hosts virtuais em sua máquina local, adicione seus respectivos nomes no arquivo /etc/hosts:\n\n```\n127.0.0.1 nomedodominio1.dom\n127.0.0.1 nomedodominio2.dom\n```\n\nReinicie httpd.service para aplicar as alterações.\n\n"
    },
    {
      "title": "Gerenciando vários hosts virtuais",
      "level": 4,
      "content": "Caso tenha uma grande quantidade de hosts virtuais, você poderá querer facilmente desativá-los e ativá-los. Para isso, é recomendado criar um arquivo de configuração para cada host virtual e armazená-los em uma pasta, por exemplo: /etc/httpd/conf/vhosts.\n\nPrimeiro, crie a pasta:\n\n```\n# mkdir /etc/httpd/conf/vhosts\n```\n\nEntão coloque cada arquivo de configuração nela:\n\n```\n# nano /etc/httpd/conf/vhosts/nomedodominio1.dom\n# nano /etc/httpd/conf/vhosts/nomedodominio2.dom\n...\n```\n\nNo último passo, use Include para incluir cada arquivo de configuração em seu /etc/httpd/conf/httpd.conf:\n\n```\n#Enabled Vhosts:\nInclude conf/vhosts/nomedodominio1.dom\nInclude conf/vhosts/nomedodominio2.dom\n```\n\nVocê poderá ativar e desativar seus hosts virtuais apenas comentando ou descomentando-os.\n\nUm arquivo muito simples de um host virtual é semelhante a este:\n\n```\n/etc/httpd/conf/vhosts/nomedodominio1.dom\n```\n\n```\n<VirtualHost *:80>\n    ServerAdmin webmaster@nomedodominio1.dom\n    DocumentRoot \"/home/user/http/nomedodominio1.dom\"\n    ServerName nomedodominio1.dom\n    ServerAlias nomedodominio1.dom\n    ErrorLog \"/var/log/httpd/nomedodominio1.dom-error_log\"\n    CustomLog \"/var/log/httpd/nomedodominio1.dom-access_log\" common\n\n    <Directory \"/home/user/http/nomedodominio1.dom\">\n        Require all granted\n    </Directory>\n</VirtualHost>\n\n<VirtualHost *:443>\n    ServerAdmin webmaster@nomedodominio1.dom\n    DocumentRoot \"/home/user/http/nomedodominio1.dom\"\n    ServerName nomedodominio1.dom:443\n    ServerAlias nomedodominio1.dom:443\n    SSLEngine on\n    SSLCertificateFile \"/etc/httpd/conf/server.crt\"\n    SSLCertificateKeyFile \"/etc/httpd/conf/server.key\"\n    ErrorLog \"/var/log/httpd/nomedodominio1.dom-error_log\"\n    CustomLog \"/var/log/httpd/nomedodominio1.dom-access_log\" common\n\n    <Directory \"/home/user/http/nomedodominio1.dom\">\n        Require all granted\n    </Directory>\n</VirtualHost>\n```\n\n"
    },
    {
      "title": "PHP",
      "level": 3,
      "content": "Primeiro, instale o PHP, então siga uma das próximas subseções abaixo. Finalmente, teste a instalação como descrito no final da subseção.\n\n"
    },
    {
      "title": "Usando libphp",
      "level": 4,
      "content": "Este método é provavelmente o mais fácil, mas também o menos escalável: é adequado para um baixo número de requisições. Ele também requer que você altere o módulo mpm, o que poderá causar problemas com outras extensões (por exemplo, não é compatível com #HTTP/2).\n\nInstale php7-apache[link quebrado: package not found] para PHP 7 ou php-apache para PHP 8, o que for apropriado.\n\nEm /etc/httpd/conf/httpd.conf, comente a linha:\n\n```\n#LoadModule mpm_event_module modules/mod_mpm_event.so\n```\n\ne descomente a linha:\n\n```\nLoadModule mpm_prefork_module modules/mod_mpm_prefork.so\n```\n\nNote: Do contrário, você obterá o seguinte erro:\n\nDo contrário, você obterá o seguinte erro:\n\n```\nApache is running a threaded MPM, but your PHP Module is not compiled to be threadsafe.  You need to recompile PHP.\nAH00013: Pre-configuration failed\nhttpd.service: control process exited, code=exited status=1\n```\n\nPara habilitar o PHP, adicione as seguintes linhas ao /etc/httpd/conf/httpd.conf:\n\n- Adicione esta ao final da lista LoadModule:\n\n```\nLoadModule php_module modules/libphp.so\nAddHandler php-script .php\n```\n\n- Adicione esta ao final da lista Include:\n\n```\nInclude conf/extra/php_module.conf\n```\n\nReinicie httpd.service usando systemd.\n\n"
    },
    {
      "title": "Usando apache2-mpm-worker e mod_fcgid",
      "level": 4,
      "content": "Este método fornece uma melhor performance e melhor consumo de memória ao lidar com múltiplas requisições.\n\nInstale mod_fcgidAUR e php-cgi.\n\nCrie o diretório necessário e um link simbólico para o wrapper PHP:\n\n```\n# mkdir /srv/http/fcgid-bin\n# ln -s /usr/bin/php-cgi /srv/http/fcgid-bin/php-fcgid-wrapper\n```\n\nCrie /etc/httpd/conf/extra/php-fcgid.conf com o seguinte conteúdo:\n\n```\n/etc/httpd/conf/extra/php-fcgid.conf\n```\n\n```\n# Required modules: fcgid_module\n\n<IfModule fcgid_module>\n    AddHandler php-fcgid .php\n    AddType application/x-httpd-php .php\n    Action php-fcgid /fcgid-bin/php-fcgid-wrapper\n    ScriptAlias /fcgid-bin/ /srv/http/fcgid-bin/\n    SocketPath /var/run/httpd/fcgidsock\n    SharememPath /var/run/httpd/fcgid_shm\n        # If you don't allow bigger requests many applications may fail (such as WordPress login)\n        FcgidMaxRequestLen 536870912\n        # Path to php.ini – defaults to /etc/phpX/cgi\n        DefaultInitEnv PHPRC=/etc/php/\n        # Number of PHP childs that will be launched. Leave undefined to let PHP decide.\n        #DefaultInitEnv PHP_FCGI_CHILDREN 3\n        # Maximum requests before a process is stopped and a new one is launched\n        #DefaultInitEnv PHP_FCGI_MAX_REQUESTS 5000\n    <Location /fcgid-bin/>\n        SetHandler fcgid-script\n        Options +ExecCGI\n    </Location>\n</IfModule>\n```\n\nAltere /etc/httpd/conf/httpd.conf:\n\n- Descomente o carregamento de actions_module: LoadModule actions_module modules/mod_actions.so\n- Carregue o módulo FCGID após o carregamento do módulo unixd (do qual é dependente) - você talvez queira colocá-lo dentro do bloco <IfModule unixd_module>: LoadModule fcgid_module modules/mod_fcgid.so\n- Certifique-se de que a inclusão da configuração do MPM está descomentada (não vem comentado na versão padrão instalada deste arquivo): Include conf/extra/httpd-mpm.conf\n- Adicione uma inclusão para a sua nova configuração do FCGID: Include conf/extra/php-fcgid.conf\n\n```\nLoadModule actions_module modules/mod_actions.so\n```\n\n```\nLoadModule fcgid_module modules/mod_fcgid.so\n```\n\n```\nInclude conf/extra/httpd-mpm.conf\n```\n\n```\nInclude conf/extra/php-fcgid.conf\n```\n\nReinicie httpd.service.\n\n"
    },
    {
      "title": "Usando php-fpm e mod_proxy_fcgi",
      "level": 4,
      "content": "Este método fornece \"uma implementação alternativa do PHP FastCGI com alguns recursos adicionais (geralmente) úteis para sites com alto nível de requisições\" [1].\n\n```\nProxyPassMatch ^/(.*\\.php(/.*)?)$ unix:/run/php-fpm/php-fpm.sock|fcgi://localhost/srv/http/$1\n```\n\nInstale php-fpm.\n\nHabilite os módulos de proxy:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nLoadModule proxy_module modules/mod_proxy.so\nLoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so\n```\n\nCrie /etc/httpd/conf/extra/php-fpm.conf com o seguinte conteúdo:\n\n```\nDirectoryIndex index.php index.html\n<FilesMatch \\.php$>\n    SetHandler \"proxy:unix:/run/php-fpm/php-fpm.sock|fcgi://localhost/\"\n</FilesMatch>\n```\n\nE inclua-o no final de /etc/httpd/conf/httpd.conf:\n\n```\nInclude conf/extra/php-fpm.conf\n```\n\nVocê pode configurar o PHP-FPM em /etc/php/php-fpm.d/www.conf, mas a configuração padrão deverá funcionar adequadamente.\n\nInicie e habilite php-fpm.service. Reinicie httpd.service.\n\n"
    },
    {
      "title": "Teste a instalação do PHP",
      "level": 4,
      "content": "Para testar se o PHP foi configurado corretamente, crie um arquivo chamado test.php no diretório DocumentRoot de seu Apache (por exemplo, /srv/http/ ou ~<username>/public_html/) com o seguinte conteúdo:\n\n```\n<?php phpinfo(); ?>\n```\n\nEntão vá para http://localhost/test.php ou http://localhost/~<username>/test.php conforme o caso.\n\n"
    },
    {
      "title": "HTTP/2",
      "level": 3,
      "content": "- Enquanto Apache suporta HTTP/2 não-criptografado sobre TCP (h2c), navegadores comuns não o fazem. Portanto, para uso com o último, #TLS precisa ser ativado primeiro.\n- Se os clientes de suporte não usam HTTP/2 em vez de HTTP/1.1 e o gerador de configurações da Mozilla (o qual já tem incluída a linha Protocols abaixo) foi utilizado para realizar a configuração do #TLS, tente usar Include para incluí-lo em httpd-ssl.conf após a saída do último.\n- Maneiras de testar a inclusão curl -sI https://your.website ou esta extensão do Chrome[link inativo 2022-09-17 ⓘ].\n\nPara habilitar o suporte ao HTTP/2 sobre TLS, descomente a seguinte linha em httpd.conf:\n\n```\nLoadModule http2_module modules/mod_http2.so\n```\n\nE adicione a seguinte linha:\n\n```\nProtocols h2 http/1.1\n```\n\nPara depuração, você poderá definir apenas o módulo (em vez de todo o servidor) usando debug ou info:\n\n```\n<IfModule http2_module>\n    LogLevel http2:info\n</IfModule>\n```\n\nPara mais informações – incluindo configurações adicionais do HTTP/2 – veja a mod_http2 documentação.\n\n"
    },
    {
      "title": "Logs e Status do Apache",
      "level": 3,
      "content": "Veja o status do Apache usando o systemctl.\n\nLogs do Apache podem ser encontrados em /var/log/httpd/\n\n"
    },
    {
      "title": "Error: PID file /run/httpd/httpd.pid not readable (yet?) após inicializar",
      "level": 3,
      "content": "Comente a linha unique_id_module em httpd.conf: #LoadModule unique_id_module modules/mod_unique_id.so\n\n"
    },
    {
      "title": "Diretório /run/httpd não é criado durante o boot",
      "level": 3,
      "content": "Se systemd-tmpfiles --create como usuário root resulta em algo como \"unsafe path transition\", verifique as definições de propriedade de seu diretório root.\n\n```\nls -la /\nchown root:root /\n```\n\n"
    },
    {
      "title": "Apache is running a threaded MPM, but your PHP Module is not compiled to be threadsafe.",
      "level": 3,
      "content": "Se durante o carregamento de php_module o serviço httpd.service falha e você obtém um erro como este no log diário (journal) do sistema:\n\n```\nApache is running a threaded MPM, but your PHP Module is not compiled to be threadsafe.  You need to recompile PHP.\n```\n\nIsto ocorre porque o PHP inclui suporte para um módulo que não é threadsafe, e você está tentando usar um MPM em modo threaded. Uma solução para corrigir isto é usar um módulo MPM non-threaded. Tente substituir mpm_event_module com mpm_prefork_module:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nLoadModule mpm_event_module modules/mod_mpm_event.so\nLoadModule mpm_prefork_module modules/mod_mpm_prefork.so\n```\n\ne reinicie httpd.service.\n\n"
    },
    {
      "title": "AH00534: httpd: Configuration error: No MPM loaded.",
      "level": 3,
      "content": "Você poderá encontrar este erro após uma atualização recente. Trata-se apenas de uma recente alteração em httpd.conf que você pode não ter reproduzido em sua configuração local. Para corrigir, descomente a seguinte linha:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nLoadModule mpm_prefork_module modules/mod_mpm_prefork.so\n```\n\nE reinicie httpd.service.\n\n"
    },
    {
      "title": "AH00072: make_sock: could not bind to address",
      "level": 3,
      "content": "Isto pode ser causado por várias razões. A mais comum delas é devido a algo estar já usando a porta fornecida, verifique via netstat se isto não está ocorrendo:\n\n```\n# netstat -lnp | grep -e :80 -e :443\n```\n\nSe você obtiver alguma saída, pare o serviço indicado que está usando a porta ou encerre o processo que está causando o limite da porta e tente novamente.\n\nOutra possível causa é o fato do Apache não puder ser iniciado como root por alguma razão - tente iniciá-lo manualmente e veja se você continua obtendo o erro AH00072.\n\n```\n# httpd -k start\n```\n\nFinalmente, você tembém pode obter um erro com sua configuração por comandar Listen duas vezes sobre a mesma porta. A configuração a seguir é um exemplo de uma configuração incorreta que irá ocasionar o problema:\n\n```\nListen 0.0.0.0:80\nListen [::]:80\n```\n\n"
    },
    {
      "title": "AH01071: Got error 'Primary script unknown'",
      "level": 3,
      "content": "Isto pode ser causado por ProtectHome=true no arquivo unit do systemd relacionado ao php-fpm se você estiver usando arquivos fornecidos em /home, como ocorre em um ambiente de host virtual. Você pode desabilitar este recurso editando o arquivo de unit do php-fpm e reiniciando php-fpm. Alternativamente, mova seu DocumentRoot.\n\n"
    },
    {
      "title": "Alterar max_execution_time no php.ini não surte qualquer efeito",
      "level": 3,
      "content": "Se você alterou max_execution_time no arquivo php.ini para um valor superior a 30 (segundos), você acabará obtendo uma resposta 503 Service Unavailable do Apache após 30 segundos. Para solucionar isto, adicione uma diretiva ProxyTimeout no httpd.conf antes do bloco <FilesMatch \\.php$>:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nProxyTimeout 300\n```\n\ne reinicie httpd.service.\n\n"
    },
    {
      "title": "PHP-FPM: erros não estão sendo registrados individualmente para cada host virtual",
      "level": 3,
      "content": "Caso tenha múltiplos hosts virtuais, você talvez queira que cada um tenha seu próprio log de erros em arquivos separados (usando a diretiva ErrorLog do Apache). Se isto não funcionar para você, confirme que PHP-FPM está configurado para registrar erros em seu syslog:\n\n```\n/etc/php/php-fpm.conf\n```\n\n```\nerror_log = syslog\n```\n\nTambém é possível que a configuração do pool esteja sobrepondo. Verifique se a seguinte linha está comentada:\n\n```\n/etc/php/php-fpm.d/www.conf\n```\n\n```\n;php_admin_value[error_log] = /var/log/fpm-php.www.log\n```\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- Apache Official Website\n- Apache documentation\n- Apache wiki\n- Apache documentation - Security Tips\n- Apache Wiki - Troubleshooting\n- Apache on wiki.debian.org\n\n"
    }
  ]
}
{
  "title": "OwnCloud (日本語)",
  "url": "https://wiki.archlinux.org/title/OwnCloud_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- Apache HTTP Server\n- Nginx\n- UWSGI\n- OpenSSL\n- WebDAV\n\nNextcloud は、いわゆる アプリ によって、あらゆる種類の共有、コラボレーション、コミュニケーションを可能にするクライアントサーバーソフトウェア群です。例えば:\n\n- ファイル共有\n- 個人情報管理 (連絡先、カレンダー、タスク)\n- メッセージング (メール, チャット、ビデオ会議)\n- 文書の共同編集 (テキスト, Office 統合)\n\nNextcloud はオープンソースであり、オープンスタンダードに基づいています。データ主権は大きな利点です。つまり、Nextcloud の独自のインスタンスを使用すると、Dropbox、Office 365、Google Drive などの独自の (そして潜在的に信頼できない) サービスから解放されます。\n\nニーズに応じて、Nextcloud はシングルボードコンピューター (Raspberry Pi など) から数百万のユーザーにサービスを提供する本格的なデータセンターまで展開できます。Nextcloud は、綿密な認証スキームとフェデレーション (個別のインスタンスの接続) のオプションを備えており、エンタープライズ環境での使用に適しています。\n\nNextcloud は ownCloud のフォークです。ウィキペディアの 歴史 を参照してください。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 セットアップの概要\n- 2 インストール\n- 3 設定 3.1 PHP 3.2 Nextcloud 3.3 システムと環境\n- 4 データベース 4.1 MariaDB / MySQL 4.2 PostgreSQL\n- 5 アプリケーションサーバー 5.1 uWSGI 5.1.1 nextcloud.ini 5.1.2 uWSGI サービス 5.2 FPM 5.2.1 php-fpm.ini 5.2.2 nextcloud.conf 5.2.3 Systemd サービス 5.2.4 /etc を整理整頓する\n- 6 Web サーバー 6.1 nginx 6.2 Apache HTTP server\n- 7 バックグラウンドジョブ\n- 8 In-memory キャッシュ 8.1 APCu 8.2 Redis\n- 9 セキュリティ強化\n- 10 同期 10.1 デスクトップ 10.2 Thunderbird 10.2.1 カレンダー 10.2.2 連絡先 10.3 davfs2 でファイルをマウントする 10.4 GNOME Files (Nautilus) でファイルをマウントする 10.5 Android 10.6 iOS\n- 11 ヒントとテクニック 11.1 \"occ\" コマンドラインツールの使用 11.2 Pacman フック 11.3 Nextcloud をサブディレクトリで実行する 11.4 Docker 11.5 Office 統合 11.6 アプリの推奨を無効にする 11.7 calcardbackup を使用してカレンダーとアドレス帳をバックアップする\n- 12 トラブルシューティング 12.1 ログを読む 12.2 ImageMagick によるバージョン警告 12.3 アップグレード v25 → v26 12.3.1 拡張機能 sysvsem を有効にする 12.3.2 /proc/cpuinfo を open_basedir に追加 12.3.3 HTTP 応答ヘッダー X-Robots-Tag を適応させる 12.3.4 php から php-legacy への移行 12.4 php-legacy への移行 12.4.1 PHP 拡張機能 12.4.2 php.ini の Nextcloud 固有のコピー 12.4.3 FPM 設定 12.4.4 uWSGI 設定 12.4.5 Nginx 設定 12.4.6 Apache HTTP server 設定 12.4.7 バックグラウンドジョブ 12.4.8 Pacman フック 12.4.9 クリーンアップ 12.5 1 つ以上のアプリの奇妙な動作 12.6 コード整合性チェックの失敗に関する警告 (v23) 12.7 InnoDB は ROW_FORMAT=COMPRESSED を指定したテーブルの書き込みを拒否します 12.8 21.0.0 以上にアップグレードした後の権限とセットアップの問題 12.9 access.log、error.log、nextcloud.log に手がかりがないログインループ 12.10 環境変数が利用できない 12.10.1 FPM 12.10.2 uWSGI 12.11 安全な接続を介してインスタンスにアクセスしていますが、インスタンスは安全でない URL を生成しています 12.12 Nextcloud が破損したインデックスを報告する (MariaDB)\n- 13 参照\n\n- 3.1 PHP\n- 3.2 Nextcloud\n- 3.3 システムと環境\n\n- 4.1 MariaDB / MySQL\n- 4.2 PostgreSQL\n\n- 5.1 uWSGI 5.1.1 nextcloud.ini 5.1.2 uWSGI サービス\n- 5.2 FPM 5.2.1 php-fpm.ini 5.2.2 nextcloud.conf 5.2.3 Systemd サービス 5.2.4 /etc を整理整頓する\n\n- 5.1.1 nextcloud.ini\n- 5.1.2 uWSGI サービス\n\n- 5.2.1 php-fpm.ini\n- 5.2.2 nextcloud.conf\n- 5.2.3 Systemd サービス\n- 5.2.4 /etc を整理整頓する\n\n- 6.1 nginx\n- 6.2 Apache HTTP server\n\n- 8.1 APCu\n- 8.2 Redis\n\n- 10.1 デスクトップ\n- 10.2 Thunderbird 10.2.1 カレンダー 10.2.2 連絡先\n- 10.3 davfs2 でファイルをマウントする\n- 10.4 GNOME Files (Nautilus) でファイルをマウントする\n- 10.5 Android\n- 10.6 iOS\n\n- 10.2.1 カレンダー\n- 10.2.2 連絡先\n\n- 11.1 \"occ\" コマンドラインツールの使用\n- 11.2 Pacman フック\n- 11.3 Nextcloud をサブディレクトリで実行する\n- 11.4 Docker\n- 11.5 Office 統合\n- 11.6 アプリの推奨を無効にする\n- 11.7 calcardbackup を使用してカレンダーとアドレス帳をバックアップする\n\n- 12.1 ログを読む\n- 12.2 ImageMagick によるバージョン警告\n- 12.3 アップグレード v25 → v26 12.3.1 拡張機能 sysvsem を有効にする 12.3.2 /proc/cpuinfo を open_basedir に追加 12.3.3 HTTP 応答ヘッダー X-Robots-Tag を適応させる 12.3.4 php から php-legacy への移行\n- 12.4 php-legacy への移行 12.4.1 PHP 拡張機能 12.4.2 php.ini の Nextcloud 固有のコピー 12.4.3 FPM 設定 12.4.4 uWSGI 設定 12.4.5 Nginx 設定 12.4.6 Apache HTTP server 設定 12.4.7 バックグラウンドジョブ 12.4.8 Pacman フック 12.4.9 クリーンアップ\n- 12.5 1 つ以上のアプリの奇妙な動作\n- 12.6 コード整合性チェックの失敗に関する警告 (v23)\n- 12.7 InnoDB は ROW_FORMAT=COMPRESSED を指定したテーブルの書き込みを拒否します\n- 12.8 21.0.0 以上にアップグレードした後の権限とセットアップの問題\n- 12.9 access.log、error.log、nextcloud.log に手がかりがないログインループ\n- 12.10 環境変数が利用できない 12.10.1 FPM 12.10.2 uWSGI\n- 12.11 安全な接続を介してインスタンスにアクセスしていますが、インスタンスは安全でない URL を生成しています\n- 12.12 Nextcloud が破損したインデックスを報告する (MariaDB)\n\n- 12.3.1 拡張機能 sysvsem を有効にする\n- 12.3.2 /proc/cpuinfo を open_basedir に追加\n- 12.3.3 HTTP 応答ヘッダー X-Robots-Tag を適応させる\n- 12.3.4 php から php-legacy への移行\n\n- 12.4.1 PHP 拡張機能\n- 12.4.2 php.ini の Nextcloud 固有のコピー\n- 12.4.3 FPM 設定\n- 12.4.4 uWSGI 設定\n- 12.4.5 Nginx 設定\n- 12.4.6 Apache HTTP server 設定\n- 12.4.7 バックグラウンドジョブ\n- 12.4.8 Pacman フック\n- 12.4.9 クリーンアップ\n\n- 12.10.1 FPM\n- 12.10.2 uWSGI\n\n"
    },
    {
      "title": "セットアップの概要",
      "level": 2,
      "content": "Nextcloud の完全なインストールには、(少なくとも) 次のコンポーネントが含まれます。\n\nデータベース を使用して Nextcloud (つまり、PHP コード) を実行する アプリケーションサーバー とペアになった Web サーバー\n\nこの記事では、データベースとして MariaDB/MySQL および PostgreSQL と、Web サーバーとアプリケーションサーバーの次の組み合わせについて説明します。\n\n- nginx → uWSGI (および uwsgi-plugin-php)\n- nginx → FPM,\n- Apache HTTP サーバー (mod_proxy_uwsgi を使用) → uWSGI (および uwsgi-plugin-php)\n- Apache HTTP サーバー (mod_proxy_fcgi を使用) → FPM\n\nNextcloud パッケージは ウェブアプリケーションパッケージガイドライン に準拠しています。これにより、特に、専用ユーザー (この場合は nextcloud) で Web アプリケーションを実行することが義務付けられます。これが、ここでアプリケーションサーバーが登場する理由の 1 つです。まったく同じ理由で、php-apache を使用して Apache プロセスで Nextcloud の PHP コードを直接実行することはできなくなりました。\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "nextcloud パッケージをインストールします。尋ねられたら、PHP バージョンとして php-legacy を選択します。これにより、かなりの数の依存パッケージが取り込まれます。すべての 必要な PHP 拡張機能 はこの方法で処理されます。\n\nプレビュー生成用にパッケージ php-legacy-imagick と librsvg を追加インストールすることをお勧めします (できれば pacman オプション --asdeps を使用した依存パッケージとして)。他のオプションの依存関係については、具体的な設定 (選択したデータベースなど) に応じて後で説明します。\n\n"
    },
    {
      "title": "PHP",
      "level": 3,
      "content": "このガイドは、PHP の中央構成ファイル /etc/php-legacy/php.ini を改ざんするものではなく、他の PHP ベースのアプリケーションの設定に干渉する可能性のない場所に Nextcloud 固有の PHP 構成を配置します。これらの場所は次のとおりです。\n\n- /etc/webapps/nextcloud/php.ini 内の php.ini の専用コピー (occ コマンドラインツールとバックグラウンドジョブ用)\n- アプリケーションサーバーの構成における対応する設定。これらについては、アプリケーションサーバーに関するセクションで説明します。\n\n/etc/php-legacy/php.ini のコピーを /etc/webapps/nextcloud に作成します。厳密に必要というわけではありませんが、コピーの所有権を変更します。\n\n```\n# chown nextcloud:nextcloud /etc/webapps/nextcloud/php.ini\n```\n\nNextcloud の インストール手順 にリストされている前提条件のほとんどは、ベア PHP インストールですでに有効になっています。さらに、次の拡張機能を有効にします。\n\n```\n/etc/webapps/nextcloud/php.ini\n```\n\n```\nextension=bcmath\nextension=bz2\nextension=exif\nextension=gd\nextension=iconv\nextension=intl\nextension=sysvsem\n; in case you installed php-imagick (as recommended)\nextension=imagick\n```\n\ndate.timezone を希望のタイムゾーンに設定します。例:\n\n```\n/etc/webapps/nextcloud/php.ini\n```\n\n```\ndate.timezone = Europe/Berlin\n```\n\nPHP のメモリ制限を少なくとも 512MiB に引き上げます。\n\n```\n/etc/webapps/nextcloud/php.ini\n```\n\n```\nmemory_limit = 512M\n```\n\nオプション: セキュリティを強化するには、open_basedir を構成します。これにより、Nextcloud の PHP コードがファイルを読み書きできる場所が制限されます。実証済みの設定は、\n\n```\n/etc/webapps/nextcloud/php.ini\n```\n\n```\nopen_basedir=/var/lib/nextcloud:/tmp:/usr/share/webapps/nextcloud:/etc/webapps/nextcloud:/dev/urandom:/usr/lib/php-legacy/modules:/var/log/nextcloud:/proc/meminfo:/proc/cpuinfo\n```\n\n設定する追加の拡張機能に応じて、このリストを拡張する必要がある場合があります (例: Redis を選択した場合は /run/redis)\n\nこの php.ini は、occ コマンド ラインツールとバックグラウンド ジョブ、つまり短時間実行される PHP プロセスによってのみ使用されるため、ここで opcache を設定する必要はありません。\n\n"
    },
    {
      "title": "Nextcloud",
      "level": 3,
      "content": "次のエントリを Nextcloud の設定ファイルに追加します。\n\n```\n/etc/webapps/nextcloud/config/config.php\n```\n\n```\n'trusted_domains' =>\n  array (\n    0 => 'localhost',\n    1 => 'cloud.mysite.com',\n  ),    \n'overwrite.cli.url' => 'https://cloud.mysite.com/',\n'htaccess.RewriteBase' => '/',\n```\n\n指定されたホスト名例 cloud.mysite.com を変更します。Nextcloud インストールがサブフォルダー経由でアクセスできる場合 (例: https://www.mysite.com/nextcloud) overwrite.cli.url htaccess.RewriteBase はそれに応じて変更する必要があります。\n\n"
    },
    {
      "title": "システムと環境",
      "level": 3,
      "content": "Nextcloud 固有の php.ini が occ ツールで使用されるようにするには、環境変数 NEXTCLOUD_PHP_CONFIG を設定します。\n\n```\n$ export NEXTCLOUD_PHP_CONFIG=/etc/webapps/nextcloud/php.ini\n```\n\nまた、この設定を永続的にするには、この行を .bashrc (または .bash_profile ) に追加します。\n\nプライバシーとセキュリティの予防措置として、セッションデータ用の専用ディレクトリを作成します。\n\n```\n# install --owner=nextcloud --group=nextcloud --mode=700 -d /var/lib/nextcloud/sessions\n```\n\n"
    },
    {
      "title": "データベース",
      "level": 2,
      "content": "MariaDB/MySQL は Nextcloud の標準的な選択肢です。\n\nNextcloud のデータベースに関するほとんどの情報は、MariaDB/MySQL を扱います。Nextcloud 開発者は、[2] があることを認めています。他のデータベースでは、あまり詳細な専門知識がありません。\n\nPostgreSQL は、MariaDB/MySQL と比較してパフォーマンスが向上し、全体的に癖が少ないと言われています。SQLite は主にテスト/開発インストールでサポートされており、運用環境では推奨されません。 サポートされるデータベースのリスト には、Oracle データベースも含まれています。この製品についてはここでは扱いません。\n\n"
    },
    {
      "title": "MariaDB / MySQL",
      "level": 3,
      "content": "2013 年以降、MariaDB が Arch Linux のデフォルトの MySQL 実装になっているため [3] 、このテキストでは MariaDB についてのみ言及しています。\n\nNextcloud と同じホストでデータベースを実行する場合は、configure および 起動 mariadb をインストールします (まだ実行していない場合)。詳細については、対応する article を参照してください。mariadb-install-db で MariaDB を初期化することを忘れないでください。セキュリティを強化するために、MariaDB を ローカルの Unix ソケットでのみリッスンする ように設定することをお勧めします。\n\n```\n/etc/my.cnf.d/server.cnf\n```\n\n```\n[mysqld]\nskip_networking\n```\n\nNextcloud 独自のドキュメント を推奨 では、トランザクション分離レベルを READ-COMMITTED に設定します。これは、多くの同時トランザクションによる高負荷が予想される場合に特に重要です。\n\n```\n/etc/my.cnf.d/server.cnf\n```\n\n```\n[mysqld]\ntransaction_isolation=READ-COMMITTED\n```\n\nbinlog_format=ROW を設定するというもう 1 つの推奨事項は廃止されました。最近の MariaDB バージョンのデフォルトの MIXED は、推奨される ROW と少なくとも同じくらい優れています。いずれの場合も、設定はレプリケーションが適用される場合にのみ関係します。\n\nデータベースをユーザー root で CLI ツール mysql を起動します。(デフォルトのパスワードは空ですが、できるだけ早く変更してください。)\n\n```\n$ mysql -u root -p\n```\n\nNextcloud のユーザーとデータベースを作成します。\n\n```\nCREATE USER 'nextcloud'@'localhost' IDENTIFIED BY 'db-password';\nCREATE DATABASE IF NOT EXISTS nextcloud CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;\nGRANT ALL PRIVILEGES on nextcloud.* to 'nextcloud'@'localhost';\nFLUSH privileges;\n```\n\n(db-password は、選択する必要がある DB ユーザー nextcloud の実際のパスワードのプレースホルダーです。) \\q でツールを終了します。\n\nNextcloud インストールのデータベースとして MariaDB を使用することに決めたので、対応する PHP 拡張機能を有効にする必要があります。\n\n```\n/etc/webapps/nextcloud/php.ini\n```\n\n```\nextension=pdo_mysql\n```\n\nこれ以上の設定 (MariaDB に関連する) は必要ありません (Nextcloud の [5] に記載されている情報とは異なります) データベース管理者マニュアル])\n\n次に、Nextcloud のデータベーススキーマを次のように設定します。\n\n```\n$ occ maintenance:install \\\n    --database=mysql \\\n    --database-name=nextcloud \\\n    --database-host=localhost:/run/mysqld/mysqld.sock \\\n    --database-user=nextcloud \\\n    --database-pass=db-password \\\n    --admin-pass=admin-password \\\n    --admin-email=admin-email \\\n    --data-dir=/var/lib/nextcloud/data\n```\n\nプレースホルダー (例: db-password) に注意して、適切な値に置き換えてください。このコマンドは、データベースを Nextcloud と同じホスト上で実行していることを前提としています。occ help maintenance:install と入力し、他のオプションについては Nextcloud の ドキュメント を参照してください。このツールに関する Arch 固有の詳細については、\"occ\" コマンドラインツールの使用 を参照してください。\n\n"
    },
    {
      "title": "PostgreSQL",
      "level": 3,
      "content": "PostgreSQL の詳細については、対応する article を参照してください。 Nextcloud と同じホストでデータベースを実行する場合は、設定 および postgresql を 起動 (まだ実行していない場合) をインストールします。このシナリオでのセキュリティを強化するには、PostgreSQL を ローカルの UNIX ソケットでのみリッスンする ように構成することをお勧めします。\n\n```\n/var/lib/postgres/data/postgresql.conf\n```\n\n```\nlisten_addresses = ''\n```\n\n特に、initdb を使用してデータベースを初期化することを忘れないでください。それが完了したら、PostgreSQL の CLI ツール psql を起動します。\n\n```\n$ sudo -u postgres -- psql\n```\n\nそして、データベースユーザー nextcloud と同じ名前のデータベースを作成します\n\n```\nCREATE USER nextcloud WITH PASSWORD 'db-password';\nCREATE DATABASE nextcloud TEMPLATE template0 ENCODING 'UNICODE';\nALTER DATABASE nextcloud OWNER TO nextcloud;\nGRANT ALL PRIVILEGES ON DATABASE nextcloud TO nextcloud;\n\\q\n```\n\n(db-password は、選択する必要があるデータベースユーザー nextcloud のパスワードのプレースホルダーです。)\n\n追加パッケージ php-pgsql を依存関係としてインストールし (pacman オプション --asdeps)、/etc/webapps/nextcloud/php.ini で対応する PHP 拡張機能を有効にします。\n\n```\n/etc/webapps/nextcloud/php.ini\n```\n\n```\nextension=pdo_pgsql\n```\n\nNow setup Nextcloud's database schema with:\n\n```\n$ occ maintenance:install \\\n    --database=pgsql \\\n    --database-name=nextcloud \\\n    --database-host=/run/postgresql \\\n    --database-user=nextcloud \\\n    --database-pass=db-password \\\n    --admin-pass=admin-password \\\n    --admin-email=admin-email \\\n    --data-dir=/var/lib/nextcloud/data\n```\n\nプレースホルダー (例: db-password) に注意して、適切な値に置き換えてください。このコマンドは、データベースを Nextcloud と同じホスト上で実行していることを前提としています。occ help maintenance:install と入力し、他のオプションについては Nextcloud の ドキュメント を参照してください。このツールに関する Arch 固有の詳細については、\"occ\" コマンドラインツールの使用 を参照してください。\n\n"
    },
    {
      "title": "アプリケーションサーバー",
      "level": 2,
      "content": "PHP コードの処理に使用できる一般的なアプリケーションサーバーは uWSGI または FPM の 2 つです。FPM はPHPに特化したものです。Web サーバーと FPM の間で使用されるプロトコルは fastcgi です。このツールの ドキュメント には改善の余地があります。一方、uWSGI は、言語固有のプラグインを使用して、少数の言語 で記述されたコードを提供できます。使用されるプロトコルは uwsgi(小文字)です。このツールは 広範囲に文書化されています ですが、膨大な量の文書が混乱を招き、扱いにくくなる可能性があります。\n\n"
    },
    {
      "title": "uWSGI",
      "level": 3,
      "content": "uWSGI には独自の article があります。そこでは役立つ情報がたくさん見つかります。uwsgi とプラグイン uwsgi-plugin-php-legacy を、できれば依存関係として、つまり --asdeps とともにインストールします。Nextcloud のコードを uWSGI で (または uWSGI 内で) 実行するには、1 つの uWSGI 固有の構成ファイル (nextcloud.ini) を構成し、1 つの systemd サービスを定義する必要があります。\n\n"
    },
    {
      "title": "nextcloud.ini",
      "level": 4,
      "content": "nextcloud パッケージには、適切な場所 /etc/uwsgi/nextcloud.ini にサンプル構成ファイルがすでに含まれています。ほとんどの場合、このファイルを要件と設定に適合させる必要があります。 バージョンに多くのコメント付き変更が含まれている を見つけます (パッケージのバージョンと比較) これは、個人使用 (つまり、中程度の負荷) を目的とした、シンプルな Nextcloud インストールを前提としています。\n\n一般に、有効な拡張機能、拡張機能固有の設定、および open_basedir を /etc/webapps/nextcloud/php.ini と同期させます (opcache を除く)\n\n- パッケージによって提供されるファイルのコピーを (パッケージから抽出するなどして) 作成し、それを nextcloud.ini.package として保存します。\n- パッケージ nextcloud の更新により nextcloud.ini.pacnew が生成される場合は、diff nextcloud.ini.package nextcloud.ini.pacnew で変更を識別できます。\n- ご使用のバージョンに適しているかどうかに応じて、変更を nextcloud.ini に選択的に適用します。\n\n"
    },
    {
      "title": "uWSGI サービス",
      "level": 4,
      "content": "uwsgi パッケージは、テンプレートユニットファイル (uwsgi@.service) を提供します。インスタンス ID (ここでは nextcloud) は、適切な構成ファイルを選択するために使用されます。 uwsgi@nextcloud.service を 有効化 および 起動 します。\n\nこのように開始されたサービスが複数 (例: 2 つ) あり、これがリソースの無駄であると感じた場合は、emperor モード の使用を検討してください。\n\n"
    },
    {
      "title": "FPM",
      "level": 3,
      "content": "アプリケーションサーバーとして FPM を使用する場合は、php-legacy-fpm を依存パッケージ (--asdeps) としてインストールしてください。\n\n構成は、FPM によって提供されるすべてのアプリケーションに関連する php.ini のコピーと、アプリケーション (ここでは Nextcloud) に固有のいわゆるプールファイルで構成されます。最後に、systemd サービスファイルを調整する必要があります。\n\n"
    },
    {
      "title": "php-fpm.ini",
      "level": 4,
      "content": "前に述べたように、この記事では、/etc/php-legacy/php.ini にある PHP の中央設定の変更を回避しています。代わりに、FPM 固有のコピーを作成します。\n\n```\n# cp /etc/php-legacy/php.ini /etc/php-legacy/php-fpm.ini\n```\n\n所有者であり、root のみが書き込み可能であることを確認してください (-rw-r--r-- 1 root root ... php-fpm.ini) 演算キャッシュを有効にします。つまり、行のコメントを解除します。\n\n```\n/etc/php-legacy/php-fpm.ini\n```\n\n```\n;zend_extension=opcache\n```\n\nそして、次のパラメータを既存の行 [opcache] の下に配置します。\n\n```\n/etc/php-legacy/php-fpm.ini\n```\n\n```\nopcache.enable = 1\nopcache.interned_strings_buffer = 8\nopcache.max_accelerated_files = 10000\nopcache.memory_consumption = 128\nopcache.save_comments = 1\nopcache.revalidate_freq = 1\n```\n\n"
    },
    {
      "title": "nextcloud.conf",
      "level": 4,
      "content": "次に、FPM 用のいわゆるプールファイルを作成する必要があります。これは、Nextcloud アプリケーション用の専用の FPM プロセスを生成する役割を果たす。ファイル /etc/php-legacy/php-fpm.d/nextcloud.conf を作成します - これが 機能バージョン を開始点として使用できます。\n\nもう一度、このプールファイルが root によって所有され、書き込み可能であることを確認してください (つまり、-rw-r--r-- 1 root root ... nextcloud.conf) アクセスログが設定されているかどうかに応じて (上記のサンプル nextcloud.conf の場合)、対応するディレクトリを作成する必要がある場合があります (ここでは {{ic|/var/log/php-fpm-legacy/access}) }) 好みに合わせて設定 (特に pm...、php_value[...]、および php_flag[...]) を調整または追加します。php_value[...] および php_flag[..] の設定は、/etc/webapps/nextcloud/php.ini の対応する設定と一致している必要があります。(ただし、/etc/php-legacy/php-fpm.ini ではありません)\n\nphp_value[...] および php_flag[...] によって行われた設定は、代わりに php-fpm.ini で指定できます。ただし、php-fpm.ini の設定は、FPM によって提供されるすべてのアプリケーションに適用されることに注意してください。\n\n"
    },
    {
      "title": "Systemd サービス",
      "level": 4,
      "content": "FPM は systemd サービスとして実行されます。Nextcloud を実行できるようにするには、サービス構成を変更する必要があります。これは、ドロップインファイル を使用して実現するのが最適です。\n\n```\n/etc/systemd/system/php-fpm-legacy.service.d/override.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/bin/php-fpm-legacy --nodaemonize --fpm-config /etc/php-legacy/php-fpm.conf --php-ini /etc/php-legacy/php-fpm.ini\nReadWritePaths=/var/lib/nextcloud\nReadWritePaths=/etc/webapps/nextcloud/config\n```\n\n- ExecStart 行を、前のセクションで説明した php-fpm.ini を使用する起動コマンドに置き換えます。\n- ディレクトリ /var/lib/nextcloud および /etc/webapps/nextcloud/config (および以下のすべて) が書き込み可能になります。 元のサービス定義の ProtectSystem=full により、/usr、/boot、および /etc が読み取り専用でマウントされます。FPM プロセスの場合。\n\nphp-fpm-legacy サービスを 有効化 および 起動 することを忘れないでください。\n\n"
    },
    {
      "title": "/etc を整理整頓する",
      "level": 4,
      "content": "Nextcloud パッケージは、uWSGI 設定ファイル /etc/uwsgi/nextcloud.ini を無条件に作成します。もちろん、uWSGI の代わりに FPM を実行する場合には役に立ちません (そして、何の害もありません) それでも削除したい場合は、次の行を /etc/pacman.conf に追加してください。\n\n```\n/etc/pacman.conf\n```\n\n```\n# uWSGI configuration that comes with Nextcloud is not needed\nNoExtract = etc/uwsgi/nextcloud.ini\n```\n\n"
    },
    {
      "title": "Web サーバー",
      "level": 2,
      "content": "選択できる Web サーバーは豊富にあります。最終的にどのオプションを選択する場合でも、Nextcloud アプリケーションは独自のシステムユーザー nextcloud で実行する必要があることに留意する必要があります。したがって、リクエストを上記のアプリケーションサーバーのいずれかに転送する必要があります。\n\n"
    },
    {
      "title": "nginx",
      "level": 3,
      "content": "nginx の構成は、この記事の範囲をはるかに超えています。詳細については、関連する article を参照してください。詳細な構成については、Nextcloud のドキュメント も参照してください。ほとんどの場合、これを適切な名前のファイル (ここでは例として cloud.mysite.com.conf) を /etc/nginx/sites-available の下にコピーする必要があります。対応するシンボリックリンクを /etc/nginx/sites-enabled に作成します。\n\n上にリンクされている Nextcloud ドキュメントのサンプル nginx 構成を使用する場合は、ルートディレクトリを次のように変更する必要があります。\n\n```\ncloud.mysite.com.conf\n```\n\n```\nroot /usr/share/webapps/nextcloud;\n```\n\nブロック upstream php-handler { ... } を使用する必要はありません。PHP URI を含むリクエストのアプリケーション サーバーへの転送を処理する location ブロックに fastcgi_pass unix:/run/php-fpm-legacy/nextcloud.sock; を指定するだけです。FPM の代わりに uWSGI を使用する場合は、この location ブロックを次のように置き換えます。\n\n```\ncloud.mysite.com.conf\n```\n\n```\nlocation ~ \\.php(?:$|/) {\n    include uwsgi_params;\n    uwsgi_modifier1 14;\n    # Avoid duplicate headers confusing OC checks\n    uwsgi_hide_header X-Frame-Options;\n    uwsgi_hide_header X-XSS-Protection;\n    uwsgi_hide_header X-Content-Type-Options;\n    uwsgi_hide_header X-Robots-Tag;\n    uwsgi_hide_header X-Download-Options;\n    uwsgi_hide_header X-Permitted-Cross-Domain-Policies;\n    uwsgi_pass unix:/run/uwsgi/nextcloud.sock;\n}\n```\n\n適応する必要がある可能性のあるもの (すべてではありません):\n\n- サーバー名 (server_name 句2倍)、つまり Nextcloud インストールが到達可能な URL のサーバー部分です。\n- SSL/TLS に使用する証明書とキーの名前。\n- アクセスログをどこに書き込むか。\n- Certbot (または他の ACME クライアント) がドメイン検証チャレンジを置く場所。ここでは、try_files の代わりに alias を使用する方が適切でしょう。\n- Nextcloud のインストール先へのパス。(URL のサーバー名&ポートセクションの右側の部分)\n- 使用しているアプリケーションサーバー (uWSGI または FPM)、つまり PHP コードをトリガーする必要があるリクエストを nginx がどこにどのように渡すか。(上記参照)\n- OCSP_stapling を設定します。\n\nnginx は FastCGI と uwsgi の両方のプロトコルをネイティブにサポートしているため、追加のモジュールをインストールする必要はありません。\n\n"
    },
    {
      "title": "Apache HTTP server",
      "level": 3,
      "content": "Apache HTTP Server に関する記事には役立つ情報がたくさんあります。Nextcloud のドキュメントには サンプル設定 が含まれており、/usr/share/doc/nextcloud/apache.example.conf にもあります。どちらも暗黙的に mod_php に依存していますが、これはもう使用できません。 mod_proxy_fcgi または mod_proxy_uwsgi を適用する必要があります。\n\nApache と FPM を統合する 方法に関する情報は、この Wiki にあります。uWSGI のドキュメントには、uWSGI および mod_proxy_uwsgi を使用して Apache と PHP を統合する 方法に関する情報が記載されています。Apache パッケージには mod_proxy_fcgi と mod_proxy_uwsgi の両方のモジュールが付属していることに注意してください。必要に応じてロードする必要があります。\n\nNextcloud を実行するには、次の Apache モジュールが必要です。\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\n# these are already loaded in a standard Apache installation\nLoadModule headers_module modules/mod_headers.so\nLoadModule env_module modules/mod_env.so\nLoadModule dir_module modules/mod_dir.so\nLoadModule mime_module modules/mod_mime.so\nLoadModule setenvif_module modules/mod_setenvif.so\n\n# these need to be uncommented explicitely\nLoadModule rewrite_module modules/mod_rewrite.so\nLoadModule ssl_module modules/mod_ssl.so\nLoadModule socache_shmcb_module modules/mod_socache_shmcb.so\nLoadModule proxy_module modules/mod_proxy.so\n\n# either this one in case you use FPM\nLoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so\n# or this one in case you opt for uWSGI\nLoadModule proxy_uwsgi_module modules/mod_proxy_uwsgi.so\n```\n\nまた、TLS 設定パラメータを取り込むには、次のディレクティブのコメントを解除します。\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nInclude conf/extra/httpd-ssl.conf\n```\n\nTLS 設定を最適化する方法の詳細については、Mozilla の SSL configurator を参照してください。\n\nNextcloud インストールへのアクセス方法に応じて、次の 2 つのサンプル設定ファイルを参照してください。\n\n- Nextcloud のインストールが専用ホスト名でアクセスされる場合 (例:https://cloud.mysite.com/)、/etc/httpd/conf/extra/httpd-vhosts.conf に これ を記述してください。\n\n- Nextcloud が Web サイトのサブフォルダ (例:https://www.mysite.com/nextcloud/) にインストールされている場合は、/etc/httpd/conf/httpd.conf に これ を記述してください。\n\nもちろん、これらのサンプル設定ファイルを実際の設定に適合させる必要があります。uWSGI を使用する場合は、SetHandler ディレクティブを SetHandler \"proxy:unix:/run/uwsgi/nextcloud.sock|uwsgi://nextcloud/\" に置き換えます。\n\nNextcloud パッケージには、多くの書き換えやヘッダー処理がすでに行われている .htaccess が付属しています。occ maintenance:update:htaccess を実行して、このファイルを調整します。これには、/etc/webapps/nextcloud/config/config.php のパラメータ htaccess.RewriteBase が重要です。\n\n"
    },
    {
      "title": "バックグラウンドジョブ",
      "level": 2,
      "content": "Nextcloud では、特定のタスクをスケジュールに従って実行する必要があります。詳細については、Nextcloud の ドキュメント を参照してください。これらのバックグラウンドジョブを設定する最も簡単な (そして最も信頼性の高い) 方法は、nextcloud によってすでにインストールされている systemd サービスとタイマーユニットを使用することです。ジョブが正しい PHP ini ファイル (グローバルの php.ini ではなく) を使用するように、サービス ユニットを微調整する必要があります。ドロップインファイル を作成し、以下を追加します。\n\n```\n/etc/systemd/system/nextcloud-cron.service.d/override.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/bin/php-legacy -c /etc/webapps/nextcloud/php.ini -f /usr/share/webapps/nextcloud/cron.php\n```\n\nその後 nextcloud-cron.timer を 有効化 して 起動 (サービスではありません)\n\nドキュメント の推奨に従い、以下のパラメータを追加してください。\n\n```\n/etc/webapps/nextcloud/config/config.php\n```\n\n```\n....\n'maintenance_window_start' => 0,\n....\n```\n\nNextcloud の設定ファイルに追加してください。この値は UTC 時間での時刻を表し、4 時間のウィンドウの開始時刻を定義します。1 日に 1 回のみ実行する必要がある時間のかかるジョブは、この時間枠内、つまり業務時間外にスケジュールされます。\n\n"
    },
    {
      "title": "In-memory キャッシュ",
      "level": 2,
      "content": "Nextcloud の ドキュメント では、パフォーマンスを大幅に向上させるために、ある種のメモリ内オブジェクト キャッシュを適用することを推奨しています。\n\n"
    },
    {
      "title": "APCu",
      "level": 3,
      "content": "php-legacy-apcu を(依存関係として --asdeps を指定して)インストールします。次に、関連する設定ファイルで拡張機能を有効にします。これらのファイルは以下のとおりです。\n\n- /etc/webapps/nextcloud/php.ini - これは occ コマンドおよびバックグラウンドジョブで使用されます。\n- 使用するアプリケーションサーバーに応じて、以下のいずれか: uWSGI を使用する場合は、/etc/uwsgi/nextcloud.ini FPM を使用する場合は、/etc/php-legacy/php-fpm.d/nextcloud.conf\n\n- uWSGI を使用する場合は、/etc/uwsgi/nextcloud.ini\n- FPM を使用する場合は、/etc/php-legacy/php-fpm.d/nextcloud.conf\n\n/etc/webapps/nextcloud/php.ini に以下の行を追加してください。\n\n```\n/etc/webapps/nextcloud/php.ini\n```\n\n```\nextension=apcu\napc.ttl=7200\napc.enable_cli = 1\n```\n\n(できれば モジュール設定 の下のどこか)\n\n他の2つのファイルでは、APCu を有効にする設定はすでに記述されており、コメントを解除するだけで有効になります。APCu に関連する他の2つの設定パラメータもすでに存在します。\n\n/etc/php-legacy/php.ini や /etc/php-legacy/conf.d/apcu.ini には変更を加える必要はありません。\n\nアプリケーションサーバーを再起動してください(Nextcloud のドキュメントに記載されているように Web サーバーを再起動する必要はありません)。\n\n次に、Nextcloud の設定ファイルに以下の行を追加してください。\n\n```\n/etc/webapps/nextcloud/config/config.php\n```\n\n```\n'memcache.local' => '\\OC\\Memcache\\APCu',\n```\n\n"
    },
    {
      "title": "Redis",
      "level": 3,
      "content": "php-legacy-igbinary と php-legacy-redis を(依存関係として --asdeps を指定して)インストールします。これは、このコンポーネントをローカル(つまり Nextcloud と同じホスト上)で実行する場合に必要です。\n\nまた、Redis サーバーは別のマシン上で実行することもできます。詳細については、Nextcloud のドキュメント を参照してください。\n\n必要な拡張機能 igbinary と redis を、以下の関連する設定ファイルで有効にしてください。\n\n- /etc/webapps/nextcloud/php.ini - これは occ コマンドおよびバックグラウンドジョブで使用されます。\n- 使用するアプリケーションサーバーに応じて、以下のいずれか: uWSGI を使用する場合は、/etc/uwsgi/nextcloud.ini FPM を使用する場合は、/etc/php-legacy/php-fpm.d/nextcloud.conf\n\n- uWSGI を使用する場合は、/etc/uwsgi/nextcloud.ini\n- FPM を使用する場合は、/etc/php-legacy/php-fpm.d/nextcloud.conf\n\n他の拡張機能が有効化されているセクションを見つけ、igbinary と redis に対応する2行を追加してください。\n\n上記の設定ファイルで open_basedir オプションを指定しており、Redis をローカルの Unix ソケット経由で使用する場合、PHP が読み書き可能なディレクトリのリストを拡張する必要があります。該当する設定ファイルの該当箇所を見つけ、Redis によって作成されたローカル Unix ソケットを含むディレクトリ(例: /run/redis)を追加してください。\n\nNextcloud の設定を次のように拡張してください。\n\n```\n/etc/webapps/nextcloud/config/config.php\n```\n\n```\n'memcache.local' => '\\OC\\Memcache\\APCu',\n'memcache.distributed' => '\\OC\\Memcache\\Redis',\n'memcache.locking' => '\\OC\\Memcache\\Redis',\n'redis' => [\n     'host'     => '/run/redis/redis.sock',\n     'port'     => 0,\n     'dbindex'  => 0,\n     'password' => '',\n     'timeout'  => 1.5,\n],\n```\n\n再度、必要に応じて /run/redis/redis.sock を調整します。dbindex、password、および timeout はオプションです。\n\nRedis が別のマシンで実行されている場合:\n\n```\n/etc/webapps/nextcloud/config/config.php\n```\n\n```\n'memcache.local' => '\\OC\\Memcache\\APCu',\n'memcache.distributed' => '\\OC\\Memcache\\Redis',\n'memcache.locking' => '\\OC\\Memcache\\Redis',\n'redis' => [\n     'host' => 'redis-host.mysite.com',\n     'port' => 6379,\n],\n```\n\nredis-host.mysite.com は単なるプレースホルダーです。実際の設定に合わせて調整してください。\n\n"
    },
    {
      "title": "セキュリティ強化",
      "level": 2,
      "content": "Nextcloud のドキュメント および セキュリティ を参照してください。さらに、Nextcloud は セキュリティスキャナー も提供しています。\n\n"
    },
    {
      "title": "デスクトップ",
      "level": 3,
      "content": "公式クライアントは、nextcloud-client パッケージでインストールできます。代替バージョンは AUR: nextcloud-client-gitAUR で入手できます。Nextcloud での owncloud-client の使用はサポートされていないことに注意してください。\n\nデスクトップクライアントは基本的に、デスクトップコンピューターの 1 つ以上のディレクトリを Nextcloud のファイル サービス内の対応するフォルダーと同期します。デスクトップのファイルマネージャー (KDE Plasma の Dolphin、Gnome の Nautilus) とうまく統合され、同期と共有ステータスを表すオーバーレイが表示されます。各ファイルのコンテキストメニューには、このファイルの共有とパブリックまたは内部共有リンクの取得を管理するための追加エントリ Nextcloud が表示されます。Nextcloud のドキュメントには、デスクトップクライアントのみに関する volume があります。\n\n統合が説明どおりに機能しない場合は、パッケージ nextcloud-client (pacman -Qi nextcloud-client) のオプションの依存関係を調べてください。たとえば、Nautilus (Gnome) には python-nautilus が必要です。pacman -S --asdeps を使用して依存パッケージとしてインストールします。\n\n"
    },
    {
      "title": "Thunderbird",
      "level": 3,
      "content": "バージョン 91 以降 Thunderbird は、自動検出を使用しても CalDAV と CardDAV を完全にサポートしています (つまり、カレンダーやアドレス帳にアクセスするために長い URL を指定する必要はありません) Nextcloud の ドキュメント は、この点に関して最新ではありません。\n\n"
    },
    {
      "title": "カレンダー",
      "level": 4,
      "content": "Mozilla Thunderbird の Lightning カレンダーを使って Nextcloud のカレンダーにアクセスするには以下の URL を使います:\n\n```\nhttps://ADDRESS/remote.php/caldav/calendars/USERNAME/CALENDARNAME\n```\n\nKontact や Evolution など CalDAV に対応するプログラムを使って Nextcloud のカレンダーにアクセスするには、以下の URL を使います:\n\n```\nhttps://ADDRESS/remote.php/caldav\n```\n\n詳しくは 公式ドキュメント を見てください。\n\n"
    },
    {
      "title": "連絡先",
      "level": 4,
      "content": "Thunderbird と連絡先を同期するには、SOGo フロントエンドと Lightning エクステンションをインストールして公式ドキュメントの 手順 に従う必要があります。\n\n"
    },
    {
      "title": "davfs2 でファイルをマウントする",
      "level": 3,
      "content": "ownCloud を永続的にマウントしたい場合、まず davfs2 をインストールしてください (Davfs2 に説明があります)。\n\nもし ownCloud が https://own.example.com にある場合、WebDAV の URL は https://own.example.com/remote.php/webdav になります (ownCloud 6.0 現在)。\n\nownCloud をマウントするには、次のコマンドを使います:\n\n```\n# mount -t davfs https://own.example.com/remote.php/webdav /path/to/mount\n```\n\n/etc/fstab にエントリを作成することもできます:\n\n```\n/etc/fstab\n```\n\n```\nhttps://own.example.com/remote.php/webdav /path/to/mount davfs rw,user,noauto 0 0\n```\n\n"
    },
    {
      "title": "GNOME Files (Nautilus) でファイルをマウントする",
      "level": 3,
      "content": "Nautilus ('+ Other Locations') では WebDAV プロトコルを使ってファイルに直接アクセスできます。Nextcloud のインストール Web GUI で表示されるリンクを使ってください (通常は https://cloud.mysite.com/remote.php/webdav/) ただしプロトコルの名前は https から davs に置き換えてください。Nautilus は接続時にユーザー名とパスワードを要求します。\n\n"
    },
    {
      "title": "Android",
      "level": 3,
      "content": "Nextcloud の公式アプリは Google Play や F-Droid からダウンロードできます。\n\n連絡先やカレンダーの同期を有効化するには (Android 4 以上):\n\n1. DAVdroid (Play Store, F-Droid) をダウンロード。\n1. アカウント 設定で新しい DAVdroid アカウントを作成し、サーバー URL (例: https://cloud.mysite.com) とログイン/パスワードのペアを指定します。\n\n"
    },
    {
      "title": "iOS",
      "level": 3,
      "content": "App Store から Nextcloud の公式アプリをダウンロードしてください。\n\n"
    },
    {
      "title": "\"occ\" コマンドラインツールの使用",
      "level": 3,
      "content": "サーバー管理に役立つツールは occ です Nextcloud のドキュメント の詳細 を参照してください。occ を使用すると、ユーザーの管理やアプリの構成など、多くの一般的なサーバー操作を実行できます。\n\n元の /usr/share/webapps/nextcloud/occ の便利なラッパーは、デフォルトユーザー (nextcloud) として自動的に実行される /usr/bin/occ で提供されます。)、デフォルトの PHP 実行可能ファイルと PHP 設定ファイルを使用します。環境変数 NEXTCLOUD_USER、NEXTCLOUD_PHP、および NEXTCLOUD_PHP_CONFIG を使用して、デフォルト以外のユーザー、PHP 実行可能ファイル、および PHP 設定ファイルを (それぞれ) 指定できます。 特に後者 (NEXTCLOUD_PHP_CONFIG を使用) は、セクション 設定 および Application サーバー で説明されている方法で Nextcloud がセットアップされた場合、つまり、 Nextcloud に固有の PHP 設定。この場合、export NEXTCLOUD_PHP_CONFIG=/etc/webapps/nextcloud/php.ini を .bashrc に追加します。\n\n推奨パッケージ php-legacy の代わりにパッケージ php を使用する場合は、NEXTCLOUD_PHP も設定する必要があります。つまり、export NEXTCLOUD_PHP=/usr/ bin/php\n\n"
    },
    {
      "title": "Pacman フック",
      "level": 3,
      "content": "nextcloud パッケージには、パッケージの更新後に Nextcloud データベースを自動的にアップグレードする pacman フック が付属しています。/usr/share/doc/nextcloud/nextcloud.hook をご覧ください。\n\n残念ながら、このフックは occ upgrade の実行時にグローバルの php.ini を無条件に使用します。つまり、前述したように環境変数 NEXTCLOUD_PHP_CONFIG の値は考慮されません。上記の \"occ\" コマンドラインツールの使用 で説明しています。\n\n考えられる回避策として、提供されたフックファイルのコピーを適切な場所に作成します。\n\n```\n# mkdir -vp /etc/pacman.d/hooks\n# cp -a /usr/share/doc/nextcloud/nextcloud.hook /etc/pacman.d/hooks/10-nextcloud.hook\n```\n\nExec で始まる行を次のように変更します。\n\n```\n/etc/pacman.d/hooks/10-nextcloud.hook\n```\n\n```\nExec = /usr/bin/runuser -u nextcloud -- /usr/bin/php-legacy --php-ini /etc/webapps/nextcloud/php.ini /usr/share/webapps/nextcloud/occ upgrade\n```\n\n"
    },
    {
      "title": "Nextcloud をサブディレクトリで実行する",
      "level": 3,
      "content": "Web サーバー セクションの手順により、Nextcloud インストールが専用サーバー名 (例: cloud.mysite.com) 経由でアクセスできるセットアップが行われます。Nextcloud をサブディレクトリに置きたい場合。例: www.mysite.com/nextcloud の場合:\n\n- nginx については、これを明示的に説明している Nextcloud のドキュメントのセクションを参照してください ウェブルートトピック\n\n- apache の場合は、インクルードされた /etc/httpd/conf/extra/nextcloud.conf を編集して、<VirtualHost *:80> ... </VirtualHost> の部分をコメントアウトします。\n\n"
    },
    {
      "title": "Docker",
      "level": 3,
      "content": "Docker の ownCloud あるいは Nextcloud リポジトリを見てください。\n\n"
    },
    {
      "title": "Office 統合",
      "level": 3,
      "content": "現在、Office 統合には 3 つの異なるソリューションがあります。\n\n- Collabora Online\n- ONLYOFFICE\n- MS Office Online Server\n\n3 つの共通点は、専用サーバーが必要であり、特定のリクエストをオフィスサービスに転送するように Web サーバーを適合させる必要があるという点です。Nextcloud との実際の統合は、上記の製品のいずれかに固有の Nextcloud アプリを使用して実現されます。\n\n3 つの製品はすべてビジネス向けであることに注意してください。つまり、オフィス サービスの料金を支払う必要があります。Collabora のみが開発者プラン (CODE) を無料で提供しています。 ONLYOFFICE は、ホーム サーバー プランを手頃な価格で提供しています。\n\nインストール、セットアップ手順、Nextcloud との統合については、以下を参照してください。\n\n- Collabora online, app\n- ONLYOFFICE, app\n- MS Office Online Server, app\n\n"
    },
    {
      "title": "アプリの推奨を無効にする",
      "level": 3,
      "content": "デフォルトでは、Nextcloud は新しいクライアントにアプリを推奨するため、大量の通知が発生する可能性があります。これを無効にするには、occ app:disable Recommendation を使用してレコメンデーションアプリを無効にします。\n\n"
    },
    {
      "title": "calcardbackup を使用してカレンダーとアドレス帳をバックアップする",
      "level": 3,
      "content": "calcardbackupAUR パッケージをインストールして構成すると、カレンダーやアドレス帳のデータベースを定期的にバックアップできます。/etc/calcardbackup/calcardbackup.conf を好みに合わせて編集し、calcardbackup.timer を 起動 して 有効化 します。\n\n"
    },
    {
      "title": "ログを読む",
      "level": 3,
      "content": "デフォルトでは、Web アプリケーションのログは /var/log/nextcloud/nextcloud.log で利用できます。エントリ (行) は JSON 形式であり、非常に長くなる場合があります。jq を使用すると、可読性が大幅に向上します。\n\n```\n# jq . </var/log/nextcloud/nextcloud.log | less\n```\n\n"
    },
    {
      "title": "ImageMagick によるバージョン警告",
      "level": 3,
      "content": "/var/log/nextcloud/nextcloud.log に次のような警告が大量に表示される場合があります。\n\nFS#69636 によると、これは誤報であり、無視して構いません。これらの警告を無くすには、ログ内の重要なメッセージをより目立つように、次の行を追加します。\n\n```\nimagick.skip_version_check = 1\n```\n\n/etc/php-legacy/php-fpm.ini と /etc/webapps/nextcloud/php.ini にあります。あるいは、/etc/php-legacy/conf.d/imagick.ini でこの行のコメントを解除することもできます。\n\n"
    },
    {
      "title": "アップグレード v25 → v26",
      "level": 3,
      "content": "バージョン 25 のインストールをバージョン 26 にアップグレードするには、次の手順が必要です。\n\n"
    },
    {
      "title": "拡張機能 sysvsem を有効にする",
      "level": 4,
      "content": "バージョン 26 には、追加の PHP 拡張機能 sysvsem が 1 つ必要です。この拡張機能は次の 2 つの場所で有効にする必要があります。\n\n- /etc/webapps/nextcloud/php.ini occ コマンドとバックグラウンドジョブによって使用されます。\n- 使用するアプリケーションサーバーに応じて、 /etc/uwsgi/nextcloud.ini (uWSGI の場合) または FPM の場合は /etc/php-legacy/php-fpm.d/nextcloud.conf\n\n- /etc/uwsgi/nextcloud.ini (uWSGI の場合) または\n- FPM の場合は /etc/php-legacy/php-fpm.d/nextcloud.conf\n\n他の拡張機能が有効になっている既存のセクションを探して、sysvsem に対応する行を追加するだけです。\n\n"
    },
    {
      "title": "/proc/cpuinfo を open_basedir に追加",
      "level": 4,
      "content": "セットアップで PHP パラメータ open_basedir も定義している場合 (推奨)、このディレクトリのリストに /proc/cpuinfo を追加する必要があります。この行を見つけます\n\n- /etc/webapps/nextcloud/php.ini occ コマンドとバックグラウンドジョブによって使用されます。\n- 使用するアプリケーションサーバーに応じて、 /etc/uwsgi/nextcloud.ini (uWSGI の場合) または /etc/php-legacy/php-fpm.d/nextcloud.conf (FPM の場合)\n\n- /etc/uwsgi/nextcloud.ini (uWSGI の場合) または\n- /etc/php-legacy/php-fpm.d/nextcloud.conf (FPM の場合)\n\nそして、行の最後に :/proc/cpuinfo を追加します。(コロンに注意してください。)\n\n"
    },
    {
      "title": "HTTP 応答ヘッダー X-Robots-Tag を適応させる",
      "level": 4,
      "content": "これは、Apache の httpd (例:nginx) を使用しないインストールにのみ適用されます。\n\nv25 インストールから継承された Web サーバー設定を使用すると、Nextcloud は HTTP 応答ヘッダー X-Robots-Tag が適切に設定されていないというメッセージを表示するようになります。これを \"none\" から \"noindex, nofollow\" に変更する必要があります。Web サーバーの設定内で関連する行を見つけて、それに応じて調整します。nginx の場合、この行は次のようになります。\n\n```\ncloud.mysite.com.conf\n```\n\n```\nadd_header X-Robots-Tag \"noindex, nofollow\" always;\n```\n\n"
    },
    {
      "title": "php から php-legacy への移行",
      "level": 4,
      "content": "これはオプションであり、(パッケージ php-legacy ではなく) パッケージ php にまだ依存している Nextcloud のインストールにのみ適用されます。詳細と移行が推奨される理由については、php-legacy への移行 を参照してください。\n\n"
    },
    {
      "title": "php-legacy への移行",
      "level": 3,
      "content": "過去に、php パッケージが (Arch Linux のローリングリリースの理念に沿って) タイムリーに最新の PHP バージョンに更新されることが何度かありましたが、Nextcloud はこの新しいバージョンと互換性がありませんでした。既存のインストールが破壊され、パッケージ nextcloud のメンテナとユーザーに多大な労力がかかります。パッケージ php がバージョン 8.1 からバージョン 8.2 に切り替わったとき、この問題が再び発生しようとしていました。\n\nこの頻繁なトラブルを回避するために、新しい php-legacy パッケージのセットが導入されました [9] その時までに。これらは、最も古いもののまだ がアクティブにサポートされている PHP ブランチに続きます。パッケージ nextcloud は、php および php-legacy によって提供されるメタ パッケージ php-interpreter に依存するように変更されました。このようにして、パッケージ nextcloud のユーザーは、Nextcloud インストールを php の上に構築するか、php-legacy の上に構築するかを選択できます。\n\nphp-legacy を使用することを強くお勧めします。このわずかに古いバージョンの PHP では、システムのアップグレードによって既存の Nextcloud インストールが使用できなくなる可能性はほとんどありません。\n\nphp-legacy への移行には、いくつかの手動操作が必要です。実際の設定に応じて、次のタスクのサブセットを適用する必要があります。\n\n"
    },
    {
      "title": "PHP 拡張機能",
      "level": 4,
      "content": "php 拡張機能を対応する php-legacy 拡張機能に置き換えます。例えば\n\n```\n$ pacman -R php-apcu php-fpm php-gd php-imagick php-pgsql\n$ pacman -S --asdeps php-legacy-apcu php-legacy-gd php-legacy-fpm php-legacy-imagick php-legacy-pgsql\n```\n\n以前の拡張 php-intl は、php および php-legacy の不可欠な部分となっているため、例外です。したがって、ここでこのパッケージを明示的に処理する必要はありません。\n\n実際の PHP 拡張機能のセットは、データベース、メモリ内のオブジェクト キャッシュ、アプリケーションサーバー、およびその他の要因によって異なります。もちろん、別のアプリケーションが最新の PHP バージョンに依存している場合には、非レガシーモジュールが引き続き必要になる可能性があります。同じことが php 自体にも当てはまります。\n\n"
    },
    {
      "title": "php.ini の Nextcloud 固有のコピー",
      "level": 4,
      "content": "```\n/etc/webapps/nextcloud/php.ini\n```\n\n```\nopen_basedir=...:/usr/lib/php-legacy/modules:...\nextension_dir = \"/usr/lib/php-legacy/modules/\"\n;extension=imap                                            <= 削除\n```\n\n"
    },
    {
      "title": "FPM 設定",
      "level": 4,
      "content": "(これは、アプリケーションサーバー FPM が使用されている場合にのみ適用されます。)\n\n```\n$ mv /etc/php/php-fpm.ini /etc/php-legacy/php-fpm.ini\n$ mv /etc/php/php-fpm.d/nextcloud.conf /etc/php-legacy/php-fpm.d/nextcloud.conf\n```\n\n/etc/php-legacy/php-fpm.ini を変更します\n\n```\n/etc/php-legacy/php-fpm.ini\n```\n\n```\nextension_dir = \"/usr/lib/php-legacy/modules/\"\n;extension=imap                                            <= 削除\n```\n\n/etc/php-legacy/php-fpm.d/nextcloud.conf を変更します\n\n```\n/etc/php-legacy/php-fpm.d/nextcloud.conf\n```\n\n```\nlisten = /run/php-fpm-legacy/nextcloud.sock\n;       It's available in: /usr/share/php-legacy/fpm/status.html\naccess.log = /var/log/php-fpm-legacy/access/$pool.log\n; uncomment if php-imap is installed and used              <= 削除\n; php_value[extension] = imap                              <= 削除\n```\n\nオプションですが推奨: www.conf を no-op にしますが、php-legacy-fpm の将来の更新で行われる可能性のあるこのファイルの変更を追跡できるようにします。\n\n```\n$ mv /etc/php-legacy/php-fpm.d/www.conf /etc/php-legacy/php-fpm.d/www.conf.package\n$ echo \"; just a no-op\" > /etc/php-legacy/php-fpm.d/www.conf\n```\n\nsystemd サービス php-fpm.service を 停止 および 無効化 します。php-fpm-legacy.service の ドロップインファイル を作成します。\n\n```\n/etc/systemd/system/php-fpm-legacy.service.d/override.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/bin/php-fpm-legacy --nodaemonize --fpm-config /etc/php-legacy/php-fpm.conf --php-ini /etc/php-legacy/php-fpm.ini\nReadWritePaths=/var/lib/nextcloud\nReadWritePaths=/etc/webapps/nextcloud/config\n```\n\nsystemd サービス php-fpm-legacy.service を 有効化 および 起動 します。\n\n"
    },
    {
      "title": "uWSGI 設定",
      "level": 4,
      "content": "(これは、アプリケーションサーバー uWSGI が使用されている場合にのみ適用されます。)\n\n```\n/etc/uwsgi/nextcloud.ini\n```\n\n```\nphp-set = open_basedir=...:/usr/lib/php-legacy/modules...\n# uncomment if php-imap is installed and used               <= 削除\n# php-set = extension=imap                                  <= 削除\n```\n\n"
    },
    {
      "title": "Nginx 設定",
      "level": 4,
      "content": "アプリケーションサーバーへの特定のリクエストの転送が設定されているファイルを変更します。FPM の場合、例:\n\n```\ncloud.mysite.com.conf\n```\n\n```\nfastcgi_pass unix:/run/php-fpm-legacy/nextcloud.sock;\n```\n\nuWSGI の場合、適応する必要はありません。\n\n"
    },
    {
      "title": "Apache HTTP server 設定",
      "level": 4,
      "content": "Apache の HTTP サーバーとアプリケーションサーバーとして FPM を使用する場合は、構成内でこの行を調整してください。\n\n```\nSetHandler \"proxy:unix:/run/php-fpm-legacy/nextcloud.sock|fcgi://nextcloud/\"\n```\n\nuWSGI の場合、適応する必要はありません。\n\n"
    },
    {
      "title": "バックグラウンドジョブ",
      "level": 4,
      "content": "Nextcloud のスケジュールされたバックグラウンドジョブの ドロップインファイル を更新します。\n\n```\n/etc/systemd/system/nextcloud-cron.service.d/override.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/bin/php-legacy -c /etc/webapps/nextcloud/php.ini -f /usr/share/webapps/nextcloud/cron.php\n```\n\n"
    },
    {
      "title": "Pacman フック",
      "level": 4,
      "content": "pacman フック /etc/pacman.d/hooks/10-nextcloud.hook も調整する必要があります。Exec で始まる行を次のように変更します。\n\n```\n/etc/pacman.d/hooks/10-nextcloud.hook\n```\n\n```\nExec = /usr/bin/runuser -u nextcloud -- /usr/bin/php-legacy --php-ini /etc/webapps/nextcloud/php.ini /usr/share/webapps/nextcloud/occ upgrade\n```\n\nそうしないと、Nextcloud の次回のアップグレード中に pacman が /usr/bin/php が見つからないというエラーを表示します。\n\n"
    },
    {
      "title": "クリーンアップ",
      "level": 4,
      "content": "古くなった可能性のあるファイルとディレクトリをクリーンアップすることを忘れないでください。潜在的な候補者は次のとおりです。\n\n```\n/usr/lib/php\n/etc/php\n```\n\n"
    },
    {
      "title": "1 つ以上のアプリの奇妙な動作",
      "level": 3,
      "content": "Nextcloud アプリのファイルが含まれるフォルダーは 2 つの場所にあります。\n\n- /usr/share/webapps/nextcloud/apps (別名読み取り専用アプリディレクトリ) これは、nextcloud パッケージとアプリパッケージ (例: nextcloud-app-contacts) が Nextcloud アプリを構成するファイルを含むフォルダーを配置する場所です。\n\n- /var/lib/nextcloud/apps (別名書き込み可能なアプリディレクトリ) ここには、GUI または occ app:install コマンドを介してインストールされたアプリのファイルが含まれるフォルダーがあります。\n\nアプリのファイルが両方のディレクトリ (特に異なるバージョン) で見つかると、あらゆる種類の奇妙なことが発生する可能性があります。具体的な ケース では、連絡先 アプリが読み取り専用アプリディレクトリと書き込み可能なアプリディレクトリの両方に存在する可能性があります。その結果、GUI に連絡先を含むページは表示されませんでした。ブラウザの Javascript コンソールに次のエラーメッセージが表示されました。\n\n```\nUncaught Error: Could not find initial state contactsinteraction of contacts\n```\n\n両方の場所にアプリが存在するかどうかを確認します。アプリフォルダーを読み取り専用ディレクトリまたは書き込み可能なディレクトリのどちらで削除するかを確認するには、アプリがパッケージの一部であるかどうかを確認します。\n\n```\n# cd /usr/share/webapps/nextcloud/apps\n# pacman -Qo * >/dev/null\n```\n\n報告されたすべてのフォルダー\n\n```\nerror: No package owns ....\n```\n\n(書き込み可能なアプリディレクトリにもあります) は、/usr/share/webapps/nextcloud/apps から安全に削除できます。他の二重インストールされたアプリ (つまり、パッケージに属するアプリ) は、/var/lib/nextcloud/apps から削除する必要があります。\n\n"
    },
    {
      "title": "コード整合性チェックの失敗に関する警告 (v23)",
      "level": 3,
      "content": "バージョン 23 では、PHP 8.1 との互換性を実現するために、Nextcloud の PHP コードに Arch Linux パッケージ用のパッチを広範囲に適用する必要がありました。この欠点は、Nextcloud の組み込みコード整合性チェックがすべてのパッチ適用ファイルで失敗することでした。管理者のビューに表示される対応する警告は無視できます。バージョン 24 は PHP 8.1 とネイティブ互換性があります。したがって、パッチは必要ないため、整合性に関する警告も表示されなくなります。\n\n"
    },
    {
      "title": "InnoDB は ROW_FORMAT=COMPRESSED を指定したテーブルの書き込みを拒否します",
      "level": 3,
      "content": "MariaDB バージョン >= 10.6 および < 10.6.6 は、データベースが圧縮された InnoDB に対して read-only を強制されているため、Nextcloud と互換性がありませんでした。] Nextcloud は、次の種類のテーブルを使用してきました (そして現在も使用しています)\n\nさらに、この問題は Nextcloud によってすでに で対処 されています。Nextcloud v24 以降、Nextcloud の新規インストールでは行形式 COMPRESSED が使用されなくなりました。既存の (v24 より前の) インストールは行形式 COMPRESSED から自動的に移行されないことに注意してください。\n\n結論: Arch Linux は 2022 年 2 月 10 日以降 MariaDB v10.6.6 以降を出荷しているため、おそらく影響を受けません。\n\nこの問題の影響を受ける可能性は低いですが、考えられる解決策がいくつかあります。\n\n- MariaDB 設定を調整します。\n\n```\n/etc/my.cnf.d/server.cnf\n```\n\n```\n[mariadb-10.6]\n  innodb_read_only_compressed=OFF\n```\n\n- 対応する Nextcloud issue の いくつかの コメント で提案されているように、MariaDB テーブルを行フォーマット COMPRESSED から DYNAMIC に移行してください。Nextcloud < v24 を使用している限り、新しいテーブルは再び行フォーマット COMPRESSED を使用しますので、同じ方法で移行する必要があります。\n\n- MariaDB を PostgreSQL に置き換え、Nextcloud インスタンスのデータを occ db:convert-type で移行します。詳細については、Nextcloud の ドキュメント を参照してください。\n\n"
    },
    {
      "title": "21.0.0 以上にアップグレードした後の権限とセットアップの問題",
      "level": 3,
      "content": "バージョン 21.0.0 以降、nextcloud は ウェブアプリケーションパッケージガイドライン にさらに厳密に従います。これにより、Web アプリケーションが実行される別のユーザー nextcloud が導入されます。\n\nnextcloud < 21.0.0 からアップグレードした後、次のことを確認してください。\n\n- データディレクトリは /var/lib/nextcloud/data にあります。\n- 書き込み可能な apps ディレクトリは /var/lib/nextcloud/apps にあります。\n- data ディレクトリと書き込み可能な apps ディレクトリの両方と、その下にあるすべてのファイルは書き込み可能で、nextcloud ユーザーが所有します。\n- Web アプリケーション設定ファイルが /etc/webapps/nextcloud/config/ に存在し、そのディレクトリとコンテンツが nextcloud ユーザによって書き込み可能かつ所有されていること。\n- アプリケーションサーバ (FPM や uWSGI など) が、http ユーザではなく nextcloud ユーザとして Web アプリケーションを実行するように設定されている。\n- 新しいユーザーで実行するように cron ジョブ/systemd タイマーを更新する。\n- 最後に、nextcloud インストール /usr/share/webapps/nextcloud への読み取りアクセスを、ウェブサーバーのユーザ http に許可します:\n\n```\n# chown -R nextcloud:http /usr/share/webapps/nextcloud\n```\n\n"
    },
    {
      "title": "access.log、error.log、nextcloud.log に手がかりがないログインループ",
      "level": 3,
      "content": "フォーラムの投稿 で述べられているように、この問題は、sessions ディレクトリに正しいアクセス許可を設定することで修正できます。 (詳細については、Nextcloud のドキュメントを参照してください) sessions ディレクトリが完全に欠落している可能性もあります。このディレクトリの作成については、システムと環境 に記載されています。\n\n/var/lib/nextcloud は次のようになります。\n\n```\ndrwxr-xr-x  6 nextcloud nextcloud 4096 17. Apr 00:56 ./\ndrwxr-xr-x 21 root      root      4096 17. Apr 00:53 ../\ndrwxr-xr-x  2 nextcloud nextcloud 4096 16. Feb 00:21 apps/\ndrwxrwx--- 10 nextcloud nextcloud 4096 16. Apr 13:46 data/\ndrwx------  2 nextcloud nextcloud 4096 17. Apr 01:04 sessions/\n```\n\n"
    },
    {
      "title": "環境変数が利用できない",
      "level": 3,
      "content": "使用するアプリケーションサーバーに応じて、カスタム環境変数を Nextcloud の PHP コードに提供できます。\n\n"
    },
    {
      "title": "FPM",
      "level": 4,
      "content": "Nextcloudのドキュメント に従って、/etc/php-legacy/php-fpm.d/nextcloud.conf に 1 行以上追加してください:\n\n```\n/etc/php-legacy/php-fpm.d/nextcloud.conf\n```\n\n```\nenv[PATH] = /usr/local/bin:/usr/bin:/bin\n```\n\n"
    },
    {
      "title": "uWSGI",
      "level": 4,
      "content": "/etc/uwsgi/nextcloud.ini に 1 行以上追加してください:\n\n```\n/etc/uwsgi/nextcloud.ini\n```\n\n```\nenv = PATH=/usr/local/bin:/usr/bin:/bin\n```\n\n2 番目の = の周囲に空白を入れてはいけないことに注意してください。\n\n"
    },
    {
      "title": "安全な接続を介してインスタンスにアクセスしていますが、インスタンスは安全でない URL を生成しています",
      "level": 3,
      "content": "管理設定で次のメッセージが表示された場合:\n\n設定ファイルに以下を追加します: [10]\n\n```\n/etc/webapps/nextcloud/config/config.php\n```\n\n```\n'trusted_proxies' => ['192.168.1.0'],\n'overwriteprotocol' => 'https',\n```\n\n192.168.1.0 をパブリック IP に置き換えます。\n\n"
    },
    {
      "title": "Nextcloud が破損したインデックスを報告する (MariaDB)",
      "level": 3,
      "content": "たとえば、occ db: コマンド中または [管理] -> [ログ] で Nextcloud がインデックスの破損を報告した場合は、次のコマンドを実行してデータベースを修復できます。\n\n```\n$ mysqlcheck --check --auto-repair nextcloud -u nextcloud -p\n```\n\nコマンドが失敗した場合でも、破損したインデックスを含むテーブル TABLE が指摘されます。mariadb にログインして修復します。\n\n```\n$ mysql -u nextcloud -p\n$ use nextcloud;\n$ check table TABLE;\n$ optimize table TABLE;\n$ exit;\n```\n\n結果と一致するように TABLE を置き換えてください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- nextcloud 公式ウェブサイト\n- Nextcloud 管理者ドキュメント\n\n"
    }
  ]
}
{
  "title": "Wine (日本語)",
  "url": "https://wiki.archlinux.org/title/Wine_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- CrossOver\n- Deepin-wine\n- Wine パッケージガイドライン\n\nWine は、Microsoft Windows のアプリケーションを UNIX ライクな OS で動かすための 互換レイヤー です。Wine で実行されるプログラムは、エミュレータにあるようなパフォーマンスやメモリのペナルティなしに、ネイティブプログラムと同じように機能します。\n\n- Wine はシステムから分離されていません。\n- ユーザーアカウントでファイルまたはリソースにアクセスできる場合は、Wine で実行されているプログラムもそれらにアクセスできます。#Wine を別のユーザアカウントで実行する と セキュリティ#アプリケーションのサンドボックス化 を参照してください。\n- Wine はマルウェアを実行することもできます (Wine FAQ on Malware compatibility を参照)。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール 1.1 任意の依存パッケージ 1.1.1 グラフィックドライバ 1.1.2 サウンド 1.1.2.1 MIDI サポート 1.1.3 他の依存パッケージ 1.2 Prefix 内の依存パッケージ 1.3 サードパーティ製アプリケーション\n- 2 設定 2.1 WINEPREFIX 2.2 WINEARCH 2.3 フォント 2.3.1 フォントスムージングの有効化 2.4 デスクトップランチャーメニュー 2.4.1 Wine ユーティリティのメニューエントリを作成する 2.4.2 メニューエントリを削除する 2.5 外観 2.6 印刷 2.7 ネットワーク\n- 3 使用法 3.1 Wayland 3.2 Wine の実行を停止する\n- 4 ヒントとテクニック 4.1 Wineconsole 4.2 Winetricks 4.3 パフォーマンス 4.3.1 CSMT 4.3.2 ゲームで強制的に OpenGL モードにする 4.3.3 VKD3D-Proton 4.3.4 DXVK 4.3.4.1 HDR サポート 4.3.5 Gallium Nine 4.4 Wine によるファイルの関連付けの解除 4.5 Wine がファイルの関連付けをしないようにする 4.6 Windows バイナリを暗黙的に Wine で実行する 4.7 異なる解像度でのデュアルスクリーン 4.8 光学メディアを焼く 4.9 光学メディアイメージの適切なマウント 4.10 ゲーム内に FPS オーバーレイを表示 4.11 Wine を別のユーザアカウントで実行する 4.12 Temp ディレクトリを tmpfs 上に置く 4.13 Mono/Gecko をインストールさせない 4.14 Vulkan 4.15 Wine のファイルバインディングを除去する 4.16 Wine が自身のアプリケーションをデフォルトとして設定してしまう 4.17 WineASIO 4.18 explorer.exe の起動を無効化する\n- 5 トラブルシューティング 5.1 インストールの一般的な問題 5.2 libc.so.6 のロードエラー 5.3 Xwayland の問題 5.4 キーボード入力ができない 5.5 アプリケーションが起動に失敗する\n- 6 参照\n\n- 1.1 任意の依存パッケージ 1.1.1 グラフィックドライバ 1.1.2 サウンド 1.1.2.1 MIDI サポート 1.1.3 他の依存パッケージ\n- 1.2 Prefix 内の依存パッケージ\n- 1.3 サードパーティ製アプリケーション\n\n- 1.1.1 グラフィックドライバ\n- 1.1.2 サウンド 1.1.2.1 MIDI サポート\n- 1.1.3 他の依存パッケージ\n\n- 1.1.2.1 MIDI サポート\n\n- 2.1 WINEPREFIX\n- 2.2 WINEARCH\n- 2.3 フォント 2.3.1 フォントスムージングの有効化\n- 2.4 デスクトップランチャーメニュー 2.4.1 Wine ユーティリティのメニューエントリを作成する 2.4.2 メニューエントリを削除する\n- 2.5 外観\n- 2.6 印刷\n- 2.7 ネットワーク\n\n- 2.3.1 フォントスムージングの有効化\n\n- 2.4.1 Wine ユーティリティのメニューエントリを作成する\n- 2.4.2 メニューエントリを削除する\n\n- 3.1 Wayland\n- 3.2 Wine の実行を停止する\n\n- 4.1 Wineconsole\n- 4.2 Winetricks\n- 4.3 パフォーマンス 4.3.1 CSMT 4.3.2 ゲームで強制的に OpenGL モードにする 4.3.3 VKD3D-Proton 4.3.4 DXVK 4.3.4.1 HDR サポート 4.3.5 Gallium Nine\n- 4.4 Wine によるファイルの関連付けの解除\n- 4.5 Wine がファイルの関連付けをしないようにする\n- 4.6 Windows バイナリを暗黙的に Wine で実行する\n- 4.7 異なる解像度でのデュアルスクリーン\n- 4.8 光学メディアを焼く\n- 4.9 光学メディアイメージの適切なマウント\n- 4.10 ゲーム内に FPS オーバーレイを表示\n- 4.11 Wine を別のユーザアカウントで実行する\n- 4.12 Temp ディレクトリを tmpfs 上に置く\n- 4.13 Mono/Gecko をインストールさせない\n- 4.14 Vulkan\n- 4.15 Wine のファイルバインディングを除去する\n- 4.16 Wine が自身のアプリケーションをデフォルトとして設定してしまう\n- 4.17 WineASIO\n- 4.18 explorer.exe の起動を無効化する\n\n- 4.3.1 CSMT\n- 4.3.2 ゲームで強制的に OpenGL モードにする\n- 4.3.3 VKD3D-Proton\n- 4.3.4 DXVK 4.3.4.1 HDR サポート\n- 4.3.5 Gallium Nine\n\n- 4.3.4.1 HDR サポート\n\n- 5.1 インストールの一般的な問題\n- 5.2 libc.so.6 のロードエラー\n- 5.3 Xwayland の問題\n- 5.4 キーボード入力ができない\n- 5.5 アプリケーションが起動に失敗する\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "multilib リポジトリを有効にし、wine (開発版)、wine-stableAUR (安定版)、wine-staging (テスト版) のどれかをインストールすることで、Wine を利用できます。Wine Staging は Wine にパッチが適用されたバージョンで、安定ブランチや開発ブランチにマージされていないバグフィックスや機能追加が含まれています。\n\nその他の要件については #グラフィックドライバ と #サウンド も見てください。\n\nInternet Explorer や .NET に依存しているアプリケーションを使う場合、それぞれ wine-gecko と wine-mono をインストールしてください。Wine は必要なときに関連ファイルをダウンロードするので、これらのパッケージは厳密には必要ありません。しかし、これらのパッケージは pacman で管理べきです 。\n\n"
    },
    {
      "title": "任意の依存パッケージ",
      "level": 3,
      "content": "Wine には、基本的なアプリケーションでは必要ないが、サウンド、3D グラフィックス、動画再生などを提供するためにインストールする必要がある任意の依存パッケージが多くあります。\n\n多くの Windows アプリケーションは 32 ビットであり、32 ビット版のライブラリが必要であることに注意してください。これらのライブラリの一部は AUR でしか入手できません。標準 (64 ビット) のライブラリは、64 ビットアプリケーションに対して、または、新しい WoW64 モード (#インストール 章のノートを参照) のある Wine バージョンを実行している場合は全てのアプリケーションに対して使用することができます。Windows 実行ファイルが 64 ビットであるかどうかは、file(1) コマンドで確認することができます。\n\n"
    },
    {
      "title": "グラフィックドライバ",
      "level": 4,
      "content": "グラフィックドライバの32ビットバージョンをインストールする必要があります。Xorg#ドライバーのインストール にある表の OpenGL (multilib) 列に載っているパッケージをインストールしてください。\n\nWine がターミナルウィンドウに以下のようなメッセージを出力する場合、ドライバが不適切であるか正しく設定されていないことの印です:\n\n```\nDirect rendering is disabled, most likely your OpenGL drivers have not been installed correctly\n```\n\n"
    },
    {
      "title": "サウンド",
      "level": 4,
      "content": "デフォルトの状態では、Wine アプリケーションを実行する際にサウンドの問題が発生する場合があります。winecfg でサウンドデバイスが1つだけ選択されていることを確認してください。\n\nあなたが使いたいオーディオドライバの正しいパッケージをインストールしてください:\n\n- ALSA の場合、lib32-alsa-lib と lib32-alsa-plugins をインストールしてください\n- PulseAudio の場合、lib32-libpulse をインストールしてください\n- PipeWire の場合、lib32-pipewire と、以下のどれかをインストールしてください: PulseAudio をフロントエンドとして使用するには pipewire-pulse と lib32-libpulse。 ALSA をフロントエンドとして使用するには pipewire-alsa、lib32-alsa-lib、lib32-alsa-plugins。\n- OSS の場合、lib32-alsa-oss をインストールしてください\n\n- PulseAudio をフロントエンドとして使用するには pipewire-pulse と lib32-libpulse。\n- ALSA をフロントエンドとして使用するには pipewire-alsa、lib32-alsa-lib、lib32-alsa-plugins。\n\n上記のパッケージをインストールしてもなお、winecfg がオーディオドライバを見つけられない時 (Selected driver: (none)) は、レジストリから設定してください。例えば、64ビットの標準の wine-1.9.7 で32ビットの Windows アプリケーションを使ったときにマイクが機能しない場合、次の手順でサウンドハードウェア (サウンドプレイバックとマイク) にアクセスできるようになります: regedit を開いて HKEY_CURRENT_USER > Software > Wine > Drivers と進んで Audio という名前の文字列を追加して値を alsa に設定してください。また、prefix を再作成することで解決するかもしれません。\n\n90年代のビデオゲームでは音楽に MIDI を使うのが人気でした。古いゲームを動かすときは、設定をしないと音楽が再生できないのは珍しくありません。 Wine には素晴らしい MIDI サポートがあります。ただし、最初に MIDI がシステムで動くように設定する必要があります。詳しくは MIDI を見てください。そして Wine が適切な MIDI 出力を使うように設定しなくてはなりません。\n\n"
    },
    {
      "title": "他の依存パッケージ",
      "level": 4,
      "content": "一部のアプリケーションは追加のパッケージを必要とします [2]。\n\n- 暗号化サポートは、lib32-gnutls をインストールしてください。\n- 32ビットの prefix におけるジョイスティックとゲームパッドのサポートは、lib32-sdl2 をインストールしてください。\n- 32ビットプログラムでのメディアプレイバックは、lib32-gst-plugins-base、lib32-gst-plugins-good、lib32-gst-plugins-badAUR、lib32-gst-plugins-uglyAUR、lib32-gst-libavAUR をインストールしてください。\n- NTLM 認証は、samba をインストールしてください。\n\n"
    },
    {
      "title": "Prefix 内の依存パッケージ",
      "level": 3,
      "content": "システムの依存パッケージとは別に、多くのプログラムは追加のフォントや DLL が Wine prefix にインストールされていることを要求します [3]。これらの依存関係は、Winetricks を使うことでインストールすることができます。Winetricks はシンプルなパッケージマネージャで、何かをインストールしたり、設定の調整を行ったりする verb が用意されています。Winetricks には2つの使い方があります:\n\n- CLI から: winetricks verb_name を実行する。\n- GUI から: zenity か kdialog をインストールし、winetricks を実行する。\n\n依存パッケージ間の衝突により、何でもできる \"完璧な\" Windows 環境を構築することができない場合があります [4] [5]。そうするよりも、(重要な設定やデータが存在しない限り) prefix を使い捨てにして、異なる依存パッケージを必要とするプログラム毎に個別の prefix を使用するほうが良いです。#WINEPREFIX 環境変数を使うことで、どの prefix に対して verb を実行するかを指定することができます。\n\nプログラムが必要とする verb を知るには、多くのトライアンドエラーが必要になる可能性があります。一部のより一般的な依存パッケージは Bottles の依存関係ページを、また以下のプログラム固有のリソースを参照してください:\n\n- Wine Application Database: 公式のリソースですが、古く、他のものと比べてメンテナンスされていないかもしれません。\n- Lutris のウェブサイト。このサイトで扱われているゲームを実行しようとしているならば、ドロップダウンメニューをクリックして、View install script をクリックすることで Lutris で使用されている Winetricks の verb を見ることができます。\n- Bottles のプログラムリポジトリ。小さいですが、ゲーム以外もあります。\n- ProtonDB。Proton は Wine とは異なる互換性があります (それに加え、このサイトを見るなら単に Proton を使うほうが良いかもしれません)。しかし、ユーザーが書き込んだ verb は使えるかもしれません。 また、proton-ge-custom に同梱されている変化の速い protonfixes ツールのソースを参照することもできます。しかし、このツールはゲームを修正する追加の Proton と GE のパッチが存在していることを想定しています。\n\n- また、proton-ge-custom に同梱されている変化の速い protonfixes ツールのソースを参照することもできます。しかし、このツールはゲームを修正する追加の Proton と GE のパッチが存在していることを想定しています。\n\nゲームの prefix を管理するのに多くの時間が掛かる場合は、prefix を管理してくれるサードパーティのアプリケーションを使う方が簡単かもしれません。\n\n"
    },
    {
      "title": "サードパーティ製アプリケーション",
      "level": 3,
      "content": "以下のアプリケーションは、独自のコミュニティーとウェブサイトを持っており、メインの Wine コミュニティによって サポートされていません。詳しくは Wine Wiki を見てください。\n\n- Bottles — Wine 用のグラフィカルな prefix マネージャであり、ランナーマネージャ。GTK ベース。\n\n- CrossOver — 公式の商用版 Wine。グラフィカルなインターフェイスと包括的なエンドユーザーサポートを提供しています。\n\n- Lutris — Wine のゲームから Linux ネイティブのゲーム、エミュレータまで、あらゆるゲームに対応するゲームランチャー (prefix の管理機能が存在します)。\n\n- PlayOnLinux — Wine のグラフィカルな prefix マネージャです。プログラムのインストールと設定を支援するスクリプトが含まれています。\n\n- Proton — Steam のために作成された互換ツール。Wine と追加のコンポーネントをベースとしています。互換性のリストは ProtonDB を見てください。\n\n- PyWinery — シンプルでグラフィカルな Wine 用の prefix マネージャ。\n\n- Q4Wine — Wine のグラフィカルな prefix マネージャ。Qt テーマを Wine の設定に適用することで見た目を統合することができます。\n\n- WINEgui — ユーザフレンドリーな WINE グラフィカルインターフェイス。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "通常 Wine の設定には以下を用います:\n\n- winecfg は Wine の GUI 設定ツールです。winecfg を実行することで起動できます。\n- regedit は Wine のレジストリ編集ツールです。regedit を実行することで起動できます。WineHQ の記事 Useful Registry Keys を見てください。\n- control は Windows コントロールパネルの Wine 実装です。wine control を実行することで起動できます。\n- 完全なリストは WineHQ の List of Commands を見てください。\n\n"
    },
    {
      "title": "WINEPREFIX",
      "level": 3,
      "content": "デフォルトでは、Wine の設定ファイルとインストールされた Windows プログラムは ~/.wine に置かれます。このディレクトリは一般的に \"Wine prefix\" や \"Wine bottle\" と呼ばれます。Windows プログラムを動かしたり、Wine を設定するための winecfg を動かすと自動的にフォルダが作成されます。そして Wine で動いているプログラムはこのフォルダの下のツリーを C: (C ドライブ) とみなします。\n\nWINEPREFIX 環境変数を設定することで、Wine が使用する prefix の場所を指定することができます。これは Windows プログラムにそれぞれ違う設定をしたいときに便利です。初めて新しい Wine の prefix を使ってプログラムを起動した時、Wine は自動で C ドライブとレジストリの入ったディレクトリを作成します。\n\n例えば、env WINEPREFIX=~/.win-a wine program-a.exe と env WINEPREFIX=~/.win-b wine program-b.exe のようにプログラムを動かせば、2つのプログラムは別の C ドライブとレジストリを使います。\n\nWindows プログラムや GUI ツールを実行せずに、デフォルトの prefix を作成するには:\n\n```\n$ env WINEPREFIX=~/.customprefix wineboot -u\n```\n\n"
    },
    {
      "title": "WINEARCH",
      "level": 3,
      "content": "Wine はデフォルトで 64 ビットの環境を作ります。この挙動は WINEARCH 環境変数を使うことで変更できます。~/.wine ディレクトリの名前を変更し、$ WINEARCH=win32 winecfg を実行して新しい Wine 環境を作成してください。これで 32 ビットの Wine 環境が作られます。WINEARCH を設定しないときは 64 ビット環境が作られます。\n\nWINEPREFIX を使うことで win32 環境と win64 環境を分離することができます:\n\n```\n$ WINEARCH=win32 WINEPREFIX=~/win32 winecfg\n$ WINEPREFIX=~/win64 winecfg\n```\n\nWINEARCH を winetricks などの他の Wine プログラムと一緒に使うこともできます (以下の例では Steam):\n\n```\nWINEARCH=win32 WINEPREFIX=~/.local/share/wineprefixes/steam winetricks steam\n```\n\nprefix のアーキテクチャは、レジストリファイルを見ることで確認できます。以下のコマンドは、~/.wine prefix のシステムレジストリを読み込み、アーキテクチャタイプに応じて #arch=win32 か #arch=win64 を返します:\n\n```\n$ grep '#arch' ~/.wine/system.reg\n```\n\n"
    },
    {
      "title": "フォント",
      "level": 3,
      "content": "Wine アプリケーションで読みづらいフォントや不足しているフォントがある場合、フォントがインストールされていないのかもしれません。Wine からアクセスできるようにシステムフォントにすべてリンクするには:\n\n```\n$ cd ${WINEPREFIX:-~/.wine}/drive_c/windows/Fonts && for i in /usr/share/fonts/**/*.{ttf,otf}; do ln -s \"$i\"; done\n```\n\nWine はフォントをレンダリングするために FreeType を使用します。FreeType のデフォルトは数リリース前に変更されました。Wine でプログラムを実行する際に以下の環境変数を使ってみてください:\n\n```\nFREETYPE_PROPERTIES=\"truetype:interpreter-version=35\"\n```\n\n他の手段として、Wine prefix に Microsoft の TrueType フォントをインストールするというものがあります。これでもうまく行かない場合、まず winetricks corefonts を実行し、最後の手段として winetricks allfonts を実行してみてください。\n\nプログラムを実行した後は、すべての Wine サーバを kill して winecfg を実行してください。これでフォントが読めるようになるはずです。\n\nフォントが汚く見える場合、regedit を使って以下のテキストファイルを Wine のレジストリにインポートしてください:\n\n```\nWindows Registry Editor Version 5.00\n[HKEY_CURRENT_USER\\Software\\Wine\\X11 Driver]\n\"ClientSideWithRender\"=\"N\"\n```\n\n高解像度ディスプレイにおいては、dpi の値を winecfg で調整できます。\n\nフォント設定#fontconfig をサポートしていないアプリケーション も参照してください。\n\n"
    },
    {
      "title": "フォントスムージングの有効化",
      "level": 4,
      "content": "Wine のフォントレンダリングを改善する良い方法として、cleartype フォントスムージングを有効化するというものがあります。 \"Subpixel smoothing (ClearType) RGB\" を有効化するには:\n\n```\n/tmp/fontsmoothing.reg\n```\n\n```\nREGEDIT4\n\n[HKEY_CURRENT_USER\\Control Panel\\Desktop]\n\"FontSmoothing\"=\"2\"\n\"FontSmoothingOrientation\"=dword:00000001\n\"FontSmoothingType\"=dword:00000002\n\"FontSmoothingGamma\"=dword:00000578\nEOF\n```\n\n```\n$ WINE=${WINE:-wine} WINEPREFIX=${WINEPREFIX:-$HOME/.wine} $WINE regedit /tmp/fontsmoothing.reg 2> /dev/null\n```\n\n詳細は 元になった回答 を見てください。\n\n"
    },
    {
      "title": "デスクトップランチャーメニュー",
      "level": 3,
      "content": "Windows アプリケーションインストーラによってショートカットが作成された場合、Wine は .desktop ファイルを作成します。Arch Linux ではデフォルトで以下の場所にファイルが作成されます:\n\n- デスクトップショートカットは ~/Desktop に保存されます\n- スタートメニューのショートカットは ~/.local/share/applications/wine/Programs/ に保存されます\n\n"
    },
    {
      "title": "Wine ユーティリティのメニューエントリを作成する",
      "level": 4,
      "content": "デフォルトでは、Wine をインストールしても Wine に付属しているソフトウェア (例:winecfg や winebrowser など) のデスクトップメニューやアイコンは作られません。wine-installerAUR か wine-installer-gitAUR をインストールすることでこれらを作成できます。あるいは、以下の指示により、これらのアプリケーションのエントリを追加できます。\n\nまず、ベースメニューを作るために Wine で Windows プログラムをインストールします。ベースメニューが作られたら、~/.local/share/applications/wine/ に以下のファイルを作成してください:\n\n```\nwine-browsedrive.desktop\n```\n\n```\n[Desktop Entry]\nName=Browse C: Drive\nComment=Browse your virtual C: drive\nExec=wine winebrowser c:\nTerminal=false\nType=Application\nIcon=folder-wine\nCategories=Wine;\n```\n\n```\nwine-uninstaller.desktop\n```\n\n```\n[Desktop Entry]\nName=Uninstall Wine Software\nComment=Uninstall Windows applications for Wine\nExec=wine uninstaller\nTerminal=false\nType=Application\nIcon=wine-uninstaller\nCategories=Wine;\n```\n\n```\nwine-winecfg.desktop\n```\n\n```\n[Desktop Entry]\nName=Configure Wine\nComment=Change application-specific and general Wine options\nExec=winecfg\nTerminal=false\nIcon=wine-winecfg\nType=Application\nCategories=Wine;\n```\n\nそして ~/.config/menus/applications-merged/ に次のファイルを作成してください:\n\n```\nwine.menu\n```\n\n```\n<!DOCTYPE Menu PUBLIC \"-//freedesktop//DTD Menu 1.0//EN\"\n\"http://www.freedesktop.org/standards/menu-spec/menu-1.0.dtd\">\n<Menu>\n  <Name>Applications</Name>\n  <Menu>\n    <Name>wine-wine</Name>\n    <Directory>wine-wine.directory</Directory>\n    <Include>\n      <Category>Wine</Category>\n    </Include>\n  </Menu>\n</Menu>\n```\n\n以上の設定でアイコンが表示されない、あるいはアイコンが醜い場合は、有効になっているアイコンセットにランチャーのためのアイコンが存在しないのが原因です。使いたいアイコンの位置を指定してアイコンの設定を置き換えてください。プロパティメニューのアイコンをクリックしても同じことができます。これらのショートカットをサポートしているアイコンセットは gnome-colors-icon-themeAUR です。\n\n"
    },
    {
      "title": "メニューエントリを削除する",
      "level": 4,
      "content": "Wine によって作成されるエントリは ~/.local/share/applications/wine/Programs/ にあります。プログラムの \".desktop\" エントリを削除すればメニューからアプリケーションが削除されます。\n\nWine による不要な拡張を削除するのに加えて、以下のコマンドを実行: [7]\n\n```\n$ rm ~/.local/share/mime/packages/x-wine*\n$ rm ~/.local/share/applications/wine-extension*\n$ rm ~/.local/share/icons/hicolor/*/*/application-x-wine-extension*\n$ rm ~/.local/share/mime/application/x-wine-extension*\n```\n\n場合によっては、KDE の Wine サブメニューからアイテムを完全に削除するために、wine-*.menu も /.config/menus/ から削除する必要があります。\n\n"
    },
    {
      "title": "外観",
      "level": 3,
      "content": "XP のような見た目のテーマをダウンロードできます。これをインストールするには、この上流の wiki 記事 を見てください。最後に、winecfg を使ってそのテーマを選択してください。\n\nWine staging のユーザは、現在の GTK テーマにマッチさせるために、代わりに winecfg の Staging セクションの Enable GTK3 Theming オプションを有効化する必要があるかもしれません。\n\n"
    },
    {
      "title": "印刷",
      "level": 3,
      "content": "win32 prefix で wine アプリケーション (例: MS Word) を使ってプリンター (ローカル・ネットワーク両方) を使用するには lib32-libcups パッケージをインストールしてください。それから wine アプリケーションを再起動 (wineboot) してください。\n\n"
    },
    {
      "title": "ネットワーク",
      "level": 3,
      "content": "アプリケーションが LTS や HTTPS 接続を行えるようにするために、場合によっては Wine のインストール後に lib32-gnutls をインストールする必要があります。\n\nICMP (ping) の場合、WineHQ FAQ で説明されているように Wine はネットワークアクセスを必要とします:\n\n```\n# setcap cap_net_raw+epi /usr/bin/wine-preloader\n```\n\nこのコマンドを実行した後に問題が発生する場合 (キャッチされない例外や特権命令など)、以下を実行してケーパビリティを削除してください:\n\n```\n# setcap -r /usr/bin/wine-preloader\n```\n\n"
    },
    {
      "title": "使用法",
      "level": 2,
      "content": "Wine の使用法に関する一般的な情報は Wine User's Guide を見てください。\n\nWine における特定の Windows アプリケーションに関する追加の情報は Wine Application Database (AppDB) を見てください。\n\n"
    },
    {
      "title": "Wayland",
      "level": 3,
      "content": "デフォルトでは、Wine は Wayland 上で動作する際に Xwayland を使用します。これは、ほとんどのユーザーにとって十分なエクスペリエンスを得られます。バージョン 9.0rc1 現在、Wine はネイティブな Wayland サポートにおいて大幅な進捗があり、一部のユースケースにおいては使用に適した状態になっています。\n\n最近の Wine バージョンで追加されたネイティブな Wayland ドライバを試すには、以下の手順を踏んでください:\n\n- regedit で以下のテキストファイルを Wine レジストリにインポートしてください:\n\n```\nWindows Registry Editor Version 5.00\n[HKEY_CURRENT_USER\\Software\\Wine\\Drivers]\n\"Graphics\"=\"x11,wayland\"\n```\n\n- DISPLAY 環境変数を空にして、Xwayland を使用せずにネイティブな Wayland ドライバを強制してください:\n\n```\n$ DISPLAY= wine example.exe\n```\n\n2番目の手順で Wine が停止した場合は、インストールされている Wine のバージョンが新しい Wayland ドライバのサポートありでビルドされていることを確認してください。\n\n"
    },
    {
      "title": "Wine の実行を停止する",
      "level": 3,
      "content": "起動済みのプログラムを停止する (wine に対して wine、あるいは wineconsole に対して Ctrl+C を押す) と、バックグラウンドでプロセスが実行中のままになってしまうかもしれません。例えば:\n\n```\n$ ps -xo pid,cmd\n    PID CMD\n    297 -bash\n    933 /usr/bin/wineserver\n    939 C:\\windows\\system32\\services.exe\n    942 C:\\windows\\system32\\winedevice.exe\n    950 C:\\windows\\system32\\explorer.exe /desktop\n    954 C:\\windows\\system32\\winedevice.exe\n    965 C:\\windows\\system32\\plugplay.exe\n    977 C:\\windows\\system32\\svchost.exe -k LocalServiceNetworkRestricted\n    984 C:\\windows\\system32\\rpcss.exe\n    997 mbserver.exe\n   1017 start.exe /exec\n   1019 C:\\windows\\system32\\conhost.exe --unix --width 169 --height 40 --server 0x10\n   1021 Z:\\home\\wineuser\\mbserver.exe\n   1030 ps -xo pid,cmd\n```\n\n実行中の wine と wineconsole プロセスは、wineserver -k コマンドを使って一度にすべて停止できます。例えば:\n\n```\n$ wineserver -k 15\n```\n\nこのコマンドは WINEPREFIX 変数に依存しているため、カスタムの Wine prefix を使用している場合は、以下のコマンドを使用してください:\n\n```\n$ WINEPREFIX=~/wine/my-prefix wineserver -k\n```\n\n上記の例で挙げたプログラムを両方停止するコマンドは以下のようになります:\n\n```\n$ kill 997 1021\n```\n\n"
    },
    {
      "title": "Wineconsole",
      "level": 3,
      "content": ".exe を実行してゲームファイルにパッチを適用する必要がある場合 (例えば古いゲームにワイドスクリーン対応 MOD を適用するなど)、通常の方法で Wine から .exe を実行しても何も起きないことがあります。その場合、ターミナルを開いて以下のコマンドを実行してください:\n\n```\n$ wineconsole cmd\n```\n\nそして、プログラムがあるフォルダまで移動して、.exe プログラムを実行してください。\n\n"
    },
    {
      "title": "Winetricks",
      "level": 3,
      "content": "Winetricks は Windows プログラムを動かすために必要なランタイムなどをインストールするためのスクリプトです。DirectX 9.x や MSXML (Microsoft Office 2007 や Internet Explorer で必要)、Visual ランタイムライブラリなどをインストールできます。\n\n使うには winetricks パッケージ (あるいは winetricks-gitAUR) をインストールしてください。そして、以下で実行してください:\n\n```\n$ winetricks\n```\n\nGUI を使う場合、zenity (GTK) か kdialog (Qt) をインストールしてください。\n\n"
    },
    {
      "title": "CSMT",
      "level": 4,
      "content": "CSMT は OpenGL 呼び出しに対して別のスレッドを使うことでパフォーマンスを著しく向上させる技術で、Wine によって使われています。Wine 3.2 から CSMT はデフォルトで有効になっています。\n\nアプリケーションによっては CSMT がパフォーマンスを劣化させることがあります。そのような場合、wine regedit を実行してレジストリエディタを起動し、HKEY_CURRENT_USER -> Software > Wine > Direct3D > csmt に DWORD の値 0x00 を設定して、CSMT を無効化してください。\n\n詳細:\n\n"
    },
    {
      "title": "ゲームで強制的に OpenGL モードにする",
      "level": 4,
      "content": "多くのゲームには OpenGL モードがあり多くの場合デフォルトの DirectX モードより良いパフォーマンスが出ます。OpenGL レンダリングを有効にする方法はそれぞれのアプリケーションによる一方、多くのゲームは -opengl パラメータを認識します。\n\n```\n$ wine /path/to/3d_game.exe -opengl\n```\n\n詳しい情報は、それぞれのアプリケーションのドキュメントや Wine の AppDB を見てください。\n\n"
    },
    {
      "title": "VKD3D-Proton",
      "level": 4,
      "content": "VKD3D-Proton は VKD3D のフォークで、Vulkan を用いて完全な Direct3D 12 API の実装を目指しています。このプロジェクトは、Proton で Direct3D 12 をサポートし、DirectX 12 ゲームのパフォーマンスと互換性を向上させるものです。\n\nVKD3D-Proton を使うには、vkd3d-proton-mingwAUR または vkd3d-proton-binAUR をインストールしてください。そして、以下のコマンドを実行し、prefix (デフォルトでは ~/.wine) で VKD3D-Proton を有効化してください:\n\n```\n$ WINEPREFIX=your-prefix setup_vkd3d_proton install\n```\n\n"
    },
    {
      "title": "DXVK",
      "level": 4,
      "content": "DXVK は、DirectX 9、10、11 の Vulkan による実装です。ほとんどのゲームにおいて、こちらのほうが WineD3D ドライバよりもパフォーマンス及び互換性で勝っています。\n\nDXVK を使うには、dxvk-mingwAUR または dxvk-binAUR をインストールしてください。そして、以下のコマンドを実行し、prefix (デフォルトでは ~/.wine) で DXVK を有効化してください:\n\n```\n$ WINEPREFIX=your-prefix setup_dxvk install\n```\n\nDXVK をデュアルグラフィックスの環境で使用する場合、Wine は専用の GPU を優先します。ノート PC では、省電力のためにこれを上書きできます:\n\n```\n$ VK_DRIVER_FILES=/usr/share/vulkan/icd.d/your_driver.json wine executable\n```\n\nGamescope と一緒に使用する場合、DXVK (V2.1+) は HDR10 ディスプレイのサポートを提供します (AMDGPU ユーザのみ)。詳細は HDR モニターのサポート を参照してください。\n\n"
    },
    {
      "title": "Gallium Nine",
      "level": 4,
      "content": "Gallium ベースの mesa ドライバを使用する場合 (ほとんどの場合 AMD と Intel のカード)、DirectX 9 で優れたパフォーマンスを出すネイティブな Gallium Direct3D ドライバがあります。このドライバは DXVK によりほとんど使われなくなりましたが、Vulkan のサポートがない場合に依然として便利である場合があります。DXVK と Gallium Nine のパフォーマンスはほぼ同じであるはずです。\n\nGallium Nine を使うには wine-nine をインストールしてください。これはスタンドアローンパッケージで、どの Wine バージョンとも併用できます。有効化されているか確かめるには wine ninewinecfg を実行してください。\n\n古い Intel graphics (4 から 7 世代: GMA 3000, GMA 4500, HD 2000-5000; 2006年-2014年) では、Mesa 21.2 以降 Crocus Gallium ドライバが i965 の代わりに使用されるはずです。Wine を実行する前に以下の環境変数を Export してください:\n\n```\nMESA_LOADER_DRIVER_OVERRIDE=crocus\n```\n\n"
    },
    {
      "title": "Wine によるファイルの関連付けの解除",
      "level": 3,
      "content": "デフォルトで、大量のフォーマットで Wine はデフォルトアプリケーションとして設定されます。Windows にしかないフォーマットもあり (例: vbs や chm)、その場合 Wine で開けるようになるのは便利かもしれません。しかしながら、他のフォーマット (例: gif, jpeg, txt, js) が Wine の素っ気ない Internet Explorer やメモ帳で開かれるのは迷惑と感じることもあるでしょう。\n\nWine のファイルの関連付けは ~/.local/share/applications/ にある wine-extension-extension.desktop というファイルによって設定されます。関連付けを解除したい拡張子の名前が入っているファイルを削除してください。もしくは、Wine の関連付けを全て削除したい場合:\n\n```\n$ rm -f ~/.local/share/applications/wine-extension*.desktop\n$ rm -f ~/.local/share/icons/hicolor/*/*/application-x-wine-extension*\n```\n\n古いキャッシュを削除:\n\n```\n$ rm -f ~/.local/share/applications/mimeinfo.cache\n$ rm -f ~/.local/share/mime/packages/x-wine*\n$ rm -f ~/.local/share/mime/application/x-wine-extension*\n```\n\nキャッシュをアップデート:\n\n```\n$ update-desktop-database ~/.local/share/applications\n$ update-mime-database ~/.local/share/mime/\n```\n\n削除しても、アプリケーションによってファイルの関連付けが設定されたら、Wine はファイルの関連付けを作成し続けます。\n\n"
    },
    {
      "title": "Wine がファイルの関連付けをしないようにする",
      "level": 3,
      "content": "以下の方法は、ファイルの関連付けを作成することを防止しますが、XDG .desktop ファイルは保持します (メニューなどに表示されるかもしれません)。\n\nwinecfg を通して Wine がファイルの関連付けをしないように設定するには、Desktop Integration タブのチェックボックス \"Manage File Associations\" のチェックを解除する必要があります。Wine FAQ を見てください。\n\nレジストリを通して同じ変更を加えるには、以下に文字列 Enable を N という値で追加してください:\n\n```\nHKEY_CURRENT_USER\\Software\\Wine\\FileOpenAssociations\n```\n\nまず、FileOpenAssociations キーを作成する必要があるかもしれません。\n\nこの変更をコマンドラインを通して加えるには、以下のコマンドを実行してください:\n\n```\n$ wine reg add \"HKEY_CURRENT_USER\\Software\\Wine\\FileOpenAssociations\" /v Enable /d N\n```\n\n新しく作成される WINEPREFIX に対してこの変更をデフォルトで加えるようにしたい場合、/usr/share/wine/wine.inf を編集し、例えば以下の行を [Services] セクションに追加してください:\n\n```\nHKCU,\"Software\\Wine\\FileOpenAssociations\",\"Enable\",2,\"N\"\n```\n\nパッケージのアップグレードの際にこのファイルが上書きされないようにするには、pacman フックを作成して上記の変更が自動的に加えられるようにしてください:\n\n```\n/etc/pacman.d/hooks/stop-wine-associations.hook\n```\n\n```\n[Trigger]\nOperation = Install\nOperation = Upgrade\nType = Path\nTarget = usr/share/wine/wine.inf\n\n[Action]\nDescription = Stopping Wine from hijacking file associations...\nWhen = PostTransaction\nExec = /bin/sh -c '/usr/bin/grep -q \"HKCU,\\\"Software\\\\\\Wine\\\\\\FileOpenAssociations\\\",\\\"Enable\\\",2,\\\"N\\\"\" /usr/share/wine/wine.inf || /usr/bin/sed -i \"s/\\[Services\\]/\\[Services\\]\\nHKCU,\\\"Software\\\\\\Wine\\\\\\FileOpenAssociations\\\",\\\"Enable\\\",2,\\\"N\\\"/g\" /usr/share/wine/wine.inf'\n```\n\n詳細は Pacman#フック を見てください。\n\n"
    },
    {
      "title": "Windows バイナリを暗黙的に Wine で実行する",
      "level": 3,
      "content": "wine パッケージは binfmt ファイルをインストールします。このファイルにより、Windows プログラムを直接実行できるようになります。例えば、./myprogram.exe は、wine ./myprogram.exe と入力した時と同じように振る舞います。デフォルトでサービスは起動時に開始されます。Wine をインストールした後に再起動していないのであれば、systemd-binfmt.service を起動することで、すぐに使えるようになります。\n\n"
    },
    {
      "title": "異なる解像度でのデュアルスクリーン",
      "level": 3,
      "content": "デュアルヘッドの設定でディスプレイの解像度が異なったときに問題が起きる場合はおそらく lib32-libxrandr をインストールしていません。\n\nlib32-libxinerama をインストールすることでも wine のデュアルスクリーンの問題が解決することがあります (例えば、最右や最下のモニタでアプリケーションのボタンやメニューがクリックできなくなったり、アプリケーションのインターフェイスが再描画されなかったり、アプリケーションのエリアでマウスカーソルがドラッグの状態のまま固まったりします)。\n\n"
    },
    {
      "title": "光学メディアを焼く",
      "level": 3,
      "content": "CD や DVD を焼くためには、sg カーネルモジュールをロードする必要があります。\n\n"
    },
    {
      "title": "光学メディアイメージの適切なマウント",
      "level": 3,
      "content": "一部のアプリケーションは光学メディアがドライブにあるかの確認をします。ほとんどはデータの確認だけなので、winecfg で CD-ROM ドライブのパスを正しく設定すれば問題ありません。 しかし、アプリケーションによってはメディアの名前やシリアルナンバーを確認するので、イメージを特別なプロパティを使ってマウントする必要があります。\n\nfuse ベースの仮想ドライブ (例えば Acetoneiso) など、仮想ドライブツールはこれらのメタデータを扱えないことがあります。CDemu は適切にこれを処理します。\n\n"
    },
    {
      "title": "ゲーム内に FPS オーバーレイを表示",
      "level": 3,
      "content": "Wine には全てのグラフィカルアプリケーションで使える FPS モニター機能があります。環境変数 WINEDEBUG=fps を設定してください。FPS は標準出力にアウトプットされます。xosd パッケージの osd_cat を使うことでウィンドウ上に FPS を表示することが可能です。ヘルパースクリプト winefps.sh を見てください。\n\n"
    },
    {
      "title": "Wine を別のユーザアカウントで実行する",
      "level": 3,
      "content": "別のユーザーアカウントで Wine を実行することで、Windows アプリケーションからホームディレクトリにアクセスできてしまうという懸念を減らすことができます。\n\nまず Wine 用のユーザーアカウントを作成:\n\n```\n# useradd -m -s /bin/bash wineuser\n```\n\n他の TTY に切り替えて、通常通り X WM や DE を起動するか、このまま読み続けてください。\n\n新しいユーザーアカウントを使って Wine アプリケーションを開けるようにするために、X サーバーのパーミッションリストに新しいユーザーを追加してください:\n\n```\n$ xhost +SI:localuser:wineuser\n```\n\n以下のコマンドを使って Wine を実行することができます (env を使用して Wine の起動する環境を設定します):\n\n```\n$ sudo -u wineuser env HOME=/home/wineuser USER=wineuser USERNAME=wineuser LOGNAME=wineuser wine arguments\n```\n\n以下のようにシェルスクリプトを使って Wine による Windows アプリケーションの実行を自動化できます:\n\n```\n/usr/local/bin/runaswine\n```\n\n```\n#!/bin/sh\nxhost +SI:localuser:wineuser\nsudo -u wineuser env HOME=/home/wineuser USER=wineuser USERNAME=wineuser LOGNAME=wineuser wine \"$@\"\n```\n\nシェルスクリプトを保存したら、以下のようにして Wine アプリケーションを起動できます:\n\n```\n$ runaswine \"C:\\path\\to\\application.exe\"\n```\n\nWine を実行するたびにパスワードが要求されないようにしたい場合、sudoers ファイルに次のエントリを追加してください: mainuser ALL=(wineuser) NOPASSWD: ALL。詳しくは Sudo#設定を参照。\n\nwinecfg を Wine ユーザーで起動して、\"Desktop Integration\" タブから Wine ユーザーのホームディレクトリ以外のディレクトリのバインドを全て削除することを推奨します (Wine によって起動したプログラムが Wine ユーザーのホームディレクトリの外のファイルにアクセスできないようにするため)。\n\nPulseAudio を使用している場合、Wine プログラムで音が鳴らなくなってしまいます。他のユーザーの PulseAudio デーモンに Wine ユーザーからアクセスできるようにする情報が PulseAudio/サンプル#複数のユーザーが同時に PulseAudio を使えるようにするにあります。\n\n"
    },
    {
      "title": "Temp ディレクトリを tmpfs 上に置く",
      "level": 3,
      "content": "Wine が物理ディスク上に一時ファイルを書き込まないようにするために、tmpfs のような別の場所を使うことができます。Wine の一時ファイルのデフォルトのディレクトリを削除し、シンボリックリンクを作成してください:\n\n```\n$ rm -r ~/.wine/drive_c/users/$USER/Temp ~/.wine/drive_c/windows/temp\n$ ln -s /tmp/ ~/.wine/drive_c/users/$USER/Temp\n$ ln -s /tmp/ ~/.wine/drive_c/windows/temp\n```\n\n"
    },
    {
      "title": "Mono/Gecko をインストールさせない",
      "level": 3,
      "content": "Gecko や Mono がシステムと Wine prefix のどちらにも存在しない場合、Wine はそれらをインターネットからダウンロードするか尋ねるダイアログを表示します。Gecko や Mono が必要ない場合、このダイアログを無効化できます: WINEDLLOVERRIDES 環境変数に mscoree=d;mshtml=d を設定してください。\n\n"
    },
    {
      "title": "Vulkan",
      "level": 3,
      "content": "デフォルトの Wine Vulkan ICD ローダは、ほとんどのアプリケーションでうまく動作しますが、高度な機能はサポートしていません (例えば Vulkan レイヤー)。これらの機能を使うには、公式の Vulkan SDK をインストールしなければなりません。オリジナルの Vulkan パッチの作者の GitHub ページ のステップ 2 から 4 を見てください。\n\n"
    },
    {
      "title": "Wine のファイルバインディングを除去する",
      "level": 3,
      "content": "セキュリティ上の理由により、事前にインストールされている Wine バインディングを削除することは有用である場合があります。これにより、Windows アプリケーションはファイルマネージャやブラウザ (Firefox は EXE ファイルを直接 Wine で開くことができます) から直接起動できなくなります。 以下を /etc/pacman.conf の [options] セクションに追加してください:\n\n```\nNoExtract = usr/lib/binfmt.d/wine.conf\nNoExtract = usr/share/applications/wine.desktop\n```\n\n"
    },
    {
      "title": "Wine が自身のアプリケーションをデフォルトとして設定してしまう",
      "level": 3,
      "content": "Wine は、prefix を作成 (または更新) する度に、それに応じて Notepad や Winebrowser などのバンドルされたアプリをデフォルトのテキストエディタやウェブブラウザとして設定します。\n\nこの望ましくない挙動を回避する方法は、以下の環境変数を設定することです:\n\n```\n$ WINEDLLOVERRIDES=winemenubuilder.exe=d ...\n```\n\n"
    },
    {
      "title": "WineASIO",
      "level": 3,
      "content": "Wine で専門的なオーディオサポートが必要な場合、wineasioAUR を使うことができます。これは、Wine 用の ASIO インターフェイスを提供し、JACK で使用できます。\n\nwineasio を使うためには、あなたのユーザアカウントを realtime ユーザーグループに追加する必要があります。\n\n次に、wineasio を wine prefix に登録する必要があります。必要に応じて32ビットバージョンや64ビットバージョンに登録してください:\n\n```\n$ regsvr32 /usr/lib32/wine/i386-windows/wineasio32.dll\n$ wine64 regsvr32 /usr/lib/wine/x86_64-windows/wineasio64.dll\n```\n\n"
    },
    {
      "title": "explorer.exe の起動を無効化する",
      "level": 3,
      "content": "X がインストールされていない状態でテキストモード (Command User Interface) の実行ファイルを実行すると、実行ファイルの起動中に以下のエラーが発生するかもしれません:\n\n```\n0060:err:winediag:nodrv_CreateWindow Application tried to create a window, but no driver could be loaded.\n0060:err:winediag:nodrv_CreateWindow L\"The explorer process failed to start.\"\n0060:err:systray:initialize_systray Could not create tray window\n```\n\nwine はデフォルトで explorer.exe を起動することが原因です。ps の出力を見ればわかる通り、wineconsole ですら explorer.exe /desktop を起動します。\n\n以下のように環境変数を設定することで、systray も含めて explorer の起動を無効化することができます:\n\n```\n$ WINEDLLOVERRIDES=\"explorer.exe=d\" wine program.exe\n```\n\nCUI プログラムによっては、services.exe も無効化することによって目盛り使用量を最小限にすることができるかもしれません:\n\n```\n$ WINEDLLOVERRIDES=\"explorer.exe,services.exe=d\" wine program.exe\n```\n\n"
    },
    {
      "title": "トラブルシューティング",
      "level": 2,
      "content": "一般的なヒントは Wine User's Guide と Wine FAQ (特に Troubleshooting セクション) を見てください。\n\nまた、特定のアプリケーションでの推奨事項は Wine AppDB を見てください。\n\n"
    },
    {
      "title": "インストールの一般的な問題",
      "level": 3,
      "content": "それぞれの Wine prefix には、インストールされているプログラムからレジストリに至るまで多くの永続的な状態があります。プログラムのインストールに関する問題のトラブルシューティングの第一歩として、隔離された prefix を作成するか、rm -rf ~/.wine でデフォルトの prefix を削除してみるべきでしょう。後者のコマンドは、デフォルトの prefix に追加したプログラムと設定を全て削除します。\n\n"
    },
    {
      "title": "libc.so.6 のロードエラー",
      "level": 3,
      "content": "wine を実行すると以下のエラーが発生することがあります:\n\n```\n$ wine cmd\n```\n\n```\n/usr/bin/wine: error while loading shared libraries: libc.so.6: cannot create shared object descriptor: Operation not permitted\n```\n\nこれは、mmap2 のシステムコールが失敗したことが原因です:\n\n```\nmmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = -1 EPERM (Operation not permitted)\n```\n\nこれは Linux カーネルの既知のバグです。\n\nsysctl の vm.mmap_min_addr の値をデフォルトの 65536 から変更することで、問題が解決するようです:\n\n```\n# sysctl -w vm.mmap_min_addr=32768\n```\n\n"
    },
    {
      "title": "Xwayland の問題",
      "level": 3,
      "content": "Xwayland で Wine を使用する場合、以下のような問題を避けるために winecfg の Graphics タブで \"Emulating a virtual desktop\" のオプションを有効化できます:\n\n- チラつき\n- 誤ったウィンドウの位置\n- 誤ったマウスカーソルの位置とクリック\n- キーボード検出\n\n仮想デスクトップを無効化すると winecfg のウィンドウがマウスとキーボードに反応しなくなってしまう場合、以下のコマンドで明示的にどれかの仮想デスクトップ上で winecfg を起動することで、再び使えるようにできます:\n\n```\n$ wine explorer /desktop=name,800x600 winecfg\n```\n\nWayland で GUI ウィンドウ (winecfg など) を起動すると、何も表示されずコンソールに以下のエラーが出力される場合:\n\n```\n$ wine winecfg\n```\n\n```\nAuthorization required, but no authorization protocol specified\n\n008c:err:winediag:nodrv_CreateWindow Application tried to create a window, but no driver could be loaded.\n008c:err:winediag:nodrv_CreateWindow L\"The explorer process failed to start.\"\n008c:err:systray:initialize_systray Could not create tray window\n```\n\nDISPLAY 変数を :1 に設定してみてください:\n\n```\n$ DISPLAY=:1 wine winecfg\n```\n\n"
    },
    {
      "title": "キーボード入力ができない",
      "level": 3,
      "content": "ウィンドウマネージャがフォーカスを切り替えないことにより発生することがあります。winecfg の Graphics タブで、'Allow the window manager...' オプションを無効化してください。あるいは、ウィンドウモードを 'Emulate a virtual desktop' に設定してください。\n\n- Window settings のオプションを全て切り替えて、Apply をクリックし、そしてオプションを全て戻すと問題が解決するという人もいます。これがうまく行かない場合、上記の方法を試してください。\n\nアプリケーションからフォーカスを移動させた後にキーボードが動作しなくなる場合、レジストリを編集してみてください:\n\n- HKEY_CURRENT_USER\\Software\\Wine\\X11 Driver に行き、文字列 UseTakeFocus を追加し、それを N にセットする。\n- あるいは、Winetricks を使って値をセットできます: $ winetricks usetakefocus=n\n\n```\n$ winetricks usetakefocus=n\n```\n\n"
    },
    {
      "title": "アプリケーションが起動に失敗する",
      "level": 3,
      "content": "一部の古いゲームやアプリケーションは、カレントディレクトリが実行ファイルの場所と同じであることを期待します。これらの実行ファイルを他の場所から実行すると、正しく起動しなくなってしまいます。このような問題を防ぐには、Wine を実行する前に cd exeへのパス を使ってください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Wine Homepage\n- Wine Wiki\n- Wine Application Database (AppDB) - 特定のアプリケーションを動作させるための情報 (特定のアプリケーションの既知の問題、評価、ガイドなど)\n- Wine Forums - あなたが FAQ と AppDB を見た後に質問するための素晴らしい場所\n- Gentoo:Wine\n- Darling - MacOS ソフトウェア向けの Wine と似たプロジェクト\n- WineASIO - WineASIO プロジェクトの GitHub ページ。追加の情報あり。\n\n"
    }
  ]
}
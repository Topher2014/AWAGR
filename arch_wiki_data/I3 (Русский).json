{
  "title": "I3 (Русский)",
  "url": "https://wiki.archlinux.org/title/I3_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Сравнение тайловых оконных менеджеров\n- Оконный менеджер\n\ni3 — это динамический тайловый оконный менеджер, вдохновлённый wmii и нацеленный на разработчиков и опытных пользователей.\n\nСреди заявленных целей i3 — понятная документация, надлежащая поддержка нескольких мониторов, древовидная структура для окон и различные режимы, как в vim.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет i3-wm.\n\nТакже есть группа пакетов i3. В её состав входят менеджер окон, блокировщик экрана и две программы, которые записывают строку статуса в i3bar через stdout.\n\n"
    },
    {
      "title": "Из консоли",
      "level": 3,
      "content": "Запустите i3 с помощью xinit.\n\n"
    },
    {
      "title": "Экранный менеджер",
      "level": 3,
      "content": "В состав i3-wm входят i3.desktop и Xsession, который запускает оконный менеджер. i3-with-shmlog.desktop включает журнал (полезно для отладки). i3-gnomeAUR интегрирует i3 с GNOME.\n\n"
    },
    {
      "title": "Использование",
      "level": 2,
      "content": "Для большей информации смотрите официальную документацию, а именно i3 Пользовательское Руководство.\n\n"
    },
    {
      "title": "Назначение клавиш",
      "level": 3,
      "content": "В i3 команды вызываются с помощью клавиши-модификатора, называющейся $mod. По умолчанию (Mod1) это Alt, но также популярна альтернатива (Mod4), которая известна как Super. Клавиша Super обычно изображается на клавиатуре со значком Windows, а на клавиатуре Apple она представлена в виде клавиши Command.\n\nСочетания клавиш, используемые по умолчанию, описаны в документации; смотрите справочную карту i3 и Использование i3. Смотрите назначение клавиш чтобы добавить новые сочетания/горячие клавиши.\n\nПользователи не-Qwerty раскладок могут захотеть обойтись без «мастера настройки», как описано ниже.\n\nЕсли вы переключаетесь между несколькими оконными менеджерами или средами рабочего стола, можно использовать sxhkd или другую программу, не зависящую от среды, для управления сочетаниями клавиш. Дополнительную информацию можно найти в статье Горячие клавиши#Xorg.\n\n"
    },
    {
      "title": "Контейнеры",
      "level": 3,
      "content": "i3 управляет окнами в виде древовидной структуры, с контейнерами, как со строительными блоками. Эта структура разделяется по горизонтали и вертикали. Контейнеры по умолчанию тайловые (tiled), но могут быть установлены как стековые лэйауты (stacked layouts), так и плавающие (floating) (например для диалоговых окон). Плавающие окна всегда поверх.\n\nДля подробностей смотрите Дерево i3 и Данные древовидной структуры и контейнеров.\n\n"
    },
    {
      "title": "Запуск приложений",
      "level": 3,
      "content": "i3 использует dmenu в качестве инструмента для запуска приложений, который по умолчанию вызывается нажатием $mod+d. Так как это опциональная зависимость, перед использованием нужно вручную установить пакет dmenu.\n\ni3-wm содержит i3-dmenu-desktop, Perl оболочку для dmenu, которая использует ярлыки приложений для создания списка всех установленных приложений. Кроме того, можно использовать j4-dmenu-desktop-gitAUR.\n\nrofi — это популярная замена dmenu и других программ, которые могут отображать список ярлыков приложений.\n\n"
    },
    {
      "title": "Использование KRunner для запуска приложений в KDE Plasma/i3",
      "level": 4,
      "content": "Можно запустить i3 вместе с KDE Plasma, как описано здесь: KDE (Русский)#Использование альтернативного оконного менеджера\n\nПри запуске Plasma с KDEWM=/usr/bin/i3 можно установить KRunner в качестве альтернативной программы запуска приложений с помощью $mod+d, добавив следующее в конфигурацию i3:\n\n```\n~/.config/i3/config\n```\n\n```\nset $menu --no-startup-id qdbus org.kde.krunner /App display\nbindsym $mod+d exec $menu\n```\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "Для подробностей смотрите Настройку i3. Данная статья предполагает, что файл настроек i3 расположен в папке ~/.config.\n\n"
    },
    {
      "title": "Мастер настройки и альтернативные раскладки клавиатуры",
      "level": 3,
      "content": "При первом запуске i3 предлагает запустить мастер настройки i3-config-wizard. Этот инструмент создаёт файл ~/.config/i3/config, беря за основу шаблон /etc/i3/config.keycodes. Он вносит в шаблон два изменения:\n\n1. Он просит пользователя выбрать клавишу-модификатор по умолчанию, который он добавляет в шаблон в виде одной строки, например, set $mod Mod1; и\n1. заменяет все строки bindcode на строки bindsym, соответствующие текущей раскладке клавиатуры пользователя.\n\nШаг 2 предназначен для того, чтобы гарантировать, что четыре навигационных сочетания клавиш, j, k, l и ; на Qwerty-клавиатуре будут отображены на символы клавиш, которые имеют такое же расположение, например, h, t, n, s на клавиатуре Dvorak. Побочным эффектом этой магии является то, что до пятнадцати других клавиш могут быть переадресованы таким образом, что это нарушит мнемонику — так, для пользователя Dvorak \"перезапуск\" (\"restart\") будет привязан к $mod1+p вместо $mod1+r, \"разделение по горизонтали\" (\"split horizontally\") будет привязано к $mod1+d вместо $mod1+h, и так далее.\n\nПоэтому пользователи альтернативных раскладок клавиатуры, которым нужны простые привязки клавиш, соответствующие привязкам, приведённым в руководствах, могут предпочесть обойтись без «мастера настройки». Это можно сделать, просто скопировав /etc/i3/config в ~/.config/i3/config (или ~/.i3/config) и отредактировав этот файл.\n\nОбратите внимание, что также возможна конфигурация на основе кодов клавиш, например, для пользователей, которые часто переключаются между раскладками клавиатуры, но хотят, чтобы привязки i3 оставались неизменными.\n\n"
    },
    {
      "title": "Автозапуск программ",
      "level": 3,
      "content": "Добавьте команду exec в файл ~/.config/i3/config. Например:\n\n```\nexec terminator\n```\n\nЕсли использовать exec_always, то команда будет запускаться каждый раз при перезапуске i3.\n\nТакже можно использовать XDG Autostart.\n\n"
    },
    {
      "title": "i3bar",
      "level": 3,
      "content": "В дополнение к показу информации рабочих пространств, i3bar может выступать в качестве входных данных для i3status или альтернативы, такие как те, которые упомянуты в следующем разделе. Например:\n\n```\n~/.config/i3/config\n```\n\n```\nbar {\n    output            LVDS1\n    status_command    i3status\n    position          top\n    mode              hide\n    workspace_buttons yes\n    tray_output       none\n\n    font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1\n\n    colors {\n        background #000000\n        statusline #ffffff\n\n        focused_workspace  #ffffff #285577\n        active_workspace   #ffffff #333333\n        inactive_workspace #888888 #222222\n        urgent_workspace   #ffffff #900000\n    }\n}\n```\n\nЗа дополнительной информацией обращайтесь в раздел Configuring i3bar официального руководства пользователя.\n\n"
    },
    {
      "title": "Альтернативы i3bar",
      "level": 4,
      "content": "Некоторые пользователи предпочитают панели, такие как те, которые предусмотрены обычными средами рабочего стола. Это может быть реализовано в i3 путём запуска приложения панели во время загрузки.\n\nНапример, для использования панели XFCE (xfce4-panel) добавьте следующую строку в любом месте файла ~/.config/i3/config:\n\n```\nexec --no-startup-id xfce4-panel --disable-wm-check\n```\n\nМожно отключить i3bar, закомментировав секцию bar{ } в ~/.config/i3/config, или добавить сочетание клавиш для его переключения:\n\n```\n~/.config/i3/config\n```\n\n```\n# bar toggle, hide or show\nbindsym $mod+m bar mode toggle\n```\n\nАльтернативы, не привязанные к среде рабочего стола:\n\n- polybar — Быстрый и простой в использовании инструмент для создания панелей статуса.\n\n- excalibar — Лёгкий, но настраиваемый статус-бар, написанный на языке C.\n\n"
    },
    {
      "title": "i3status",
      "level": 3,
      "content": "Скопируйте файлы настроек по умолчанию в домашний каталог:\n\n```\n$ cp /etc/i3status.conf ~/.config/i3status/config\n```\n\nНе все плагины определены в настройках по умолчанию, и некоторые значения настроек могут быть недействительными для вашей системы, поэтому должны быть внесены соответствующие изменения. Для подробностей смотрите i3status(1).\n\n"
    },
    {
      "title": "Замены i3status",
      "level": 4,
      "content": "- conky — Высоко расширяемая система мониторинга. Для использования с i3bar смотрите этот учебник.\n\n- i3blocks — Расширяется с помощью shell-скриптов. Может обрабатывать события мыши, прерывания, и определение интервалов регенерации на основе каждого блока.\n\n- i3pystatus — Расширяемый Python 3 статус бар со множеством плагинов и опций настроек по умолчанию.\n\n- j4status — Обеспечивает строку статуса, настраиваемую с помощью плагинов, написан на C. Пакет j4status-plugins-gitAUR[ссылка недействительна: package not found] предоставляет дополнительные плагины.\n\n- goi3bar — Замена i3status, написанная на языке Go. Управляемый конфигурационным файлом, с несколькими плагинами, опциями параллелизма и богатой поддержкой плагинов.\n\n- goblocks — Быстрая, лёгкая замена i3status, написанная на языке Go.\n\n- bumblebee-status — Генератор строк состояния Python с возможностью оформления.\n\n- ty3status — Замена i3status, написанная на языке Typescript. Построена с первоклассной поддержкой блоков javascript.\n\n- i3status-rust — Высокоэффективная и многофункциональная замена, написанная на языке Rust. Может обрабатывать push-обновления, индивидуальные интервалы обновления, тематизацию и события нажатия.\n\n- Barista — Замена i3status, написанная на языке Go.\n\n"
    },
    {
      "title": "Оболочки для i3status",
      "level": 4,
      "content": "- i3cat — Оболочка, написанная на Go, которая может объединить ввод данных из нескольких внешних источников. Может обрабатывать события мыши и перенаправление указаных пользователем сигналов для своих подпроцессов.\n\n- py3status — Расширяемая оболочка i3status написанная на Python.\n\n- YaGoStatus — Еще одна оболочка для i3status (и не только) написанная на Go.\n\n"
    },
    {
      "title": "Шрифты-иконки в строке состояния",
      "level": 4,
      "content": "Поддержка иконочных шрифтов встроена с i3 версии 4.20.\n\n- ttf-font-awesome — Масштабируемые векторные иконки, которые могут быть настроены с помощью CSS. Шпаргалка, показывающая коды Unicode для каждого символа.\n\n- ttf-font-icons — Непересекающаяся и последовательная смесь Awesome и Ionicons. Она также позволяет избежать дублирования между DejaVu Sans и Awesome.\n\n- ttf-ionicons — Premium шрифт иконок для Ionic Framework.\n\nЧтобы использовать несколько шрифтов, в файле настроек укажите резервные шрифты через запятую:\n\n```\n~/.config/i3/config\n```\n\n```\nbar {\n  ...\n  font pango:DejaVu Sans Mono, Icons 8\n  ...\n}\n```\n\nВ соответствии с синтаксисом pango, размер шрифта задаётся только один раз, в конце списка шрифтов. Установка размера для каждого шрифта приведёт к тому, что все шрифты, кроме последнего, будут игнорироваться.\n\nДобавьте иконки в формат строки в ~/.config/i3status/config, используя коды Unicode из приведённой выше шпаргалки. Метод ввода будет варьироваться между текстовыми редакторами. Например, чтобы вставить значок \"heart\" (код unicode f004):\n\n- в различных текстовых редакторах графического интерфейса (например gedit, Leafpad) и терминалов (например GNOME Terminal, xfce4-terminal): ctrl+shift+u, f004, Enter\n- в Emacs: ctrl+x, 8, Enter, f004, Enter\n- в vim (в режиме вставки): Ctrl+v, uf004\n- в urxvt: удерживая Ctrl+Shift, наберите f004\n\n"
    },
    {
      "title": "Эмулятор терминала",
      "level": 3,
      "content": "По умолчанию при нажатии $mod+Enter запускается i3-sensible-terminal — скрипт, вызывающий терминал. Порядок терминалов, которые он пытается запустить, описан в i3-sensible-terminal(1).\n\nЧтобы вместо него запускался выбранный вами терминал, измените эту строку в ~/.config/i3/config:\n\n```\nbindsym $mod+Return exec i3-sensible-terminal\n```\n\nВ качестве альтернативы можно установить переменную окружения $TERMINAL.\n\n"
    },
    {
      "title": "Отключение клика по заголовку",
      "level": 3,
      "content": "Добавьте bindsym button1 nop, чтобы не переключать фокус на окно, когда вы щёлкаете по его заголовку. Полезно, если ваша разметка по умолчанию имеет вкладки и вы часто промахиваетесь и попадаете по вкладкам i3 вместо приложения.\n\n"
    },
    {
      "title": "Быстрый переход к открытому окну",
      "level": 3,
      "content": "- quickswitch-i3 — Python-утилита для быстрого перехода к окнам и определения их местоположения в i3\n\n- i3-wm-scripts — поиск и переход к окнам с поиском по регулярному выражению\n\n- rofi — Search and jump to open and scratchpad window\n\n- i3-easyfocus — Фокус и выбор окон в i3\n\n- wmfocus — Фокус и выбор окон в i3 и других оконных менеджерах\n\n- i3-cycle-focus — Функциональность Alt-Tab для i3\n\n- i3-winmotion — Фокус и выбор видимых окон вi3\n\n"
    },
    {
      "title": "Быстро перейти к необходимому окну",
      "level": 3,
      "content": "Добавьте в ~/.config/i3/config: [1]\n\n```\nbindsym $mod+x [urgent=latest] focus\n```\n\n"
    },
    {
      "title": "Сохранение и восстановление расположения окон",
      "level": 3,
      "content": "Начиная с версии 4.8, i3 может сохранить и восстановить рабочее пространство слоёв (лэйаутов). Чтобы это сделать, необходимы пакеты perl-anyevent-i3 и perl-json-xs.\n\n"
    },
    {
      "title": "Сохранение текущего расположения окон одного рабочего пространства",
      "level": 4,
      "content": "Чтобы сохранить текущее расположение окон, выполните следующие действия:\n\n1. Сначала выполните различные команды, чтобы открыть окна в предпочтительном рабочем пространстве, и измените их размер по необходимости. Запишите каждую выполненную команду для каждого окна.\n1. Теперь в новом рабочем пространстве откройте терминал и выполните следующее: $ i3-save-tree --workspace N > ~/.config/i3/workspace_N.json где N — это номер предпочтительного рабочего пространства. Это позволит сохранить текущую структуру рабочего пространства N в файл ~/.config/i3/workspace_N.json.\n1. Созданный файл должен быть отредактирован. Это можно сделать автоматически с помощью следующей команды: $ sed -i 's|^\\(\\s*\\)// \"|\\1\"|g; /^\\s*\\/\\//d' ~/.config/i3/workspace_N.json\n\n```\n$ i3-save-tree --workspace N > ~/.config/i3/workspace_N.json\n```\n\n```\n$ sed -i 's|^\\(\\s*\\)// \"|\\1\"|g; /^\\s*\\/\\//d' ~/.config/i3/workspace_N.json\n```\n\n"
    },
    {
      "title": "Восстановление расположения окон на рабочем пространстве",
      "level": 4,
      "content": "Есть два способа восстановить расположение окон на рабочем пространстве: написать скрипт или отредактировать ~/.config/i3/config для автоматической загрузки макета. В этом разделе будет рассмотрен только первый случай; обратитесь к официальной документации для второго случая.\n\nДля восстановления сохранённого в предыдущем разделе макета создайте файл с именем load_layout.sh и следующим содержимым:\n\n- Первые строки:\n\n```\n~/load_layout.sh\n```\n\n```\n#!/bin/sh\ni3-msg \"workspace M; append_layout ~/.config/i3/workspace_N.json\"\n```\n\nгде М — номер рабочего пространства, в которую вы хотели бы загрузить ранее сохранённый макет, а N — номер рабочего пространства, сохранённого в предыдущем разделе.\n\n- И команды, которые использовались в предыдущем разделе для открытия нужных окон, но заключённые в круглые скобки и с амперсандом (&) перед закрывающими скобками.\n\nНапример, если сохранённый макет содержит три uxterm окна:\n\n```\n~/load_layout.sh\n```\n\n```\n#!/bin/sh\n\n# Добавим сохранённый макет рабочего пространства N в рабочее пространство M\ni3-msg \"workspace M; append_layout ~/.config/i3/workspace_N.json\"\n\n# И заполним контейнеры программами\n(uxterm &)\n(uxterm &)\n(uxterm &)\n```\n\nСделайте файл исполняемым. И, наконец, макет рабочего пространства N может быть загружен в рабочее пространство М путём запуска команды:\n\n```\n$ ~/load_layout.sh\n```\n\n"
    },
    {
      "title": "Контейнер для электронного блокнота",
      "level": 3,
      "content": "По умолчанию, scratchpads (блокноты) содержат только одно окно. Однако контейнеры также могут быть сделаны блокнотом.\n\nСоздайте новый контейнер (например, Mod+Enter), разделите их (Mod+v) и создайте другой контейнер. Сфокусируйтесь на родительском (Mod+a), разделите в противоположном направлении (Mod+h), и создайте снова.\n\nФокус на первом контейнере (с акцентом родительского по мере необходимости), сделайте окно плавающим (floating) (Mod+Shift+Space), и переместите его в блокнот (Mod+Shift+-). Теперь вы можете разделить контейнеры по предпочтению.\n\nСмотрите также [2] для нескольких scratchpads.\n\n"
    },
    {
      "title": "Хранитель экрана и управление питанием",
      "level": 3,
      "content": "С помощью xss-lock вы можете зарегистрировать экранный блокировщик для вашего сеанса i3. Кроме того, вы можете использовать xautolockAUR для блокировки экрана после заданного периода времени:\n\n```\nxautolock -time 10 -locker \"i3lock -i background_image.png\" &\n```\n\nМожно использовать service-файл systemd для блокировки экрана перед уходом в ждущий или спящий режим; смотрите Управление питанием#Файлы служб. Обратите внимание, что i3lock требует, чтобы тип службы был forking.\n\nСмотрите также DPMS.\n\nДругой вариант — использовать xidlehookAUR с betterlockscreenAUR или любым другим хранителем экрана. xidlehook — это замена xautolock, написанная на Rust и имеющая дополнительные возможности. Сюда входит возможность отключения блокировки при воспроизведении звука или при полноэкранном режиме. Параметр --timer задаётся в секундах:\n\n```\nxidlehook --not-when-audio --not-when-fullscreen --timer 360 \"betterlockscreen -l dim\" \"\" &\n```\n\n"
    },
    {
      "title": "Выключение, перезагрузка, блокировка экрана",
      "level": 3,
      "content": "Так как нет иконок на экране для Выключения, Перезагрузки и Блокировки Экрана, для удобства, мы можем задать комбинацию горячих клавиш. Ниже предпологается, что установлен polkit, чтобы позволять обычным (не привелигелированным) пользователям запускать команды управления питанием.\n\nДобавьте следующие строки в ваш ~/.config/i3/config, по завершению вам будет предложен запрос, когда вы нажимаете $mod+pause.\n\n```\nset $Locker i3lock && sleep 1\n\nset $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown\nmode \"$mode_system\" {\n    bindsym l exec --no-startup-id $Locker, mode \"default\"\n    bindsym e exec --no-startup-id i3-msg exit, mode \"default\"\n    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode \"default\"\n    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode \"default\"\n    bindsym r exec --no-startup-id systemctl reboot, mode \"default\"\n    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode \"default\"\n\n    # выход: Enter или Escape\n    bindsym Return mode \"default\"\n    bindsym Escape mode \"default\"\n}\n\nbindsym $mod+Pause mode \"$mode_system\"\n```\n\nТеперь при каждом нажатии $mod+pause будет появляться запрос. Для более сложного поведения используйте отдельный скрипт и ссылайтесь на него в режиме. [3]\n\n- sleep 1 добавляет небольшую задержку, чтобы предотвратить возможное состояние гонки при уходе в ждущий режим [4]\n- Аргумент -i команды systemctl poweroff позволяет выключить систему, даже если в неё вошли другие пользователи (для этого нужен polkit) или когда logind (ошибочно) предполагает это. [5]\n\nСписок альтернативных блокировщиков экрана есть в статье Список приложений/Безопасность#Блокировка экрана.\n\n"
    },
    {
      "title": "Перекрытие окна терминала",
      "level": 3,
      "content": "Подобно dwm, в i3 можно «поглощать» (swallow) текущее окно терминала новым окном программы, запущенной через этот терминал. Это позволяет сделать пакет i3-swallow-gitAUR.\n\nНапример, чтобы mpv при запуске перекрыл собой окно терминала:\n\n```\n$ swallow mpv video.mp4\n```\n\nТакже можно сымитировать подобное поведение, используя tabbed или stacked контейнер, чтобы скрыть неиспользуемое окно терминала. Недостаток этого способа в том, что в верхней части контейнера всегда будет список окон.\n\n"
    },
    {
      "title": "Ручное управление внешними дисплеями",
      "level": 3,
      "content": "Благодаря xrandr есть много способов лёгкого управления дисплеями. Приведённый ниже пример ведёт себя подобно показанному ранее примеру управления питанием.\n\nПример меню для включения/выключения выходов VGA и HDMI на ноутбуке:\n\n```\n## Ручное управление внешними дисплеями\n# Сочетания клавиш и что они делают\nset $mode_display Ext Screen (v) VGA ON, (h) HDMI ON, (x) VGA OFF, (y) HDMI OFF\nmode \"$mode_display\" {\n    bindsym v exec --no-startup-id xrandr --output VGA1 --auto --right-of LVDS1, mode \"default\"\n    bindsym h exec --no-startup-id xrandr --output HDMI1 --auto --right-of LVDS1, mode \"default\"\n    bindsym x exec --no-startup-id xrandr --output VGA1 --auto --off, mode \"default\"\n    bindsym y exec --no-startup-id xrandr --output HDMI1 --auto --off, mode \"default\"\n\n    # выход: Enter или Escape\n    bindsym Return mode \"default\"\n    bindsym Escape mode \"default\"\n}\n# Сочетание клавиш для вызова меню\nbindsym $mod+x mode \"$mode_display\"\n```\n\nЛюбое окно, которое всё ещё открыто на выключенном дисплее, автоматически возвращается на оставшийся активным дисплей.\n\nСамый простой способ определить имена ваших устройств — подключить устройство, которое вы хотите использовать, и выполнить команду:\n\n```\n$ xrandr --query\n```\n\nкоторая выведет доступные распознанные устройства и их внутренние имена, которые можно использовать для настройки.\n\nСписок доступных опций есть в статье xrandr (Русский). Смотрите также i3 userguide и/или i3 FAQ на reddit.\n\n"
    },
    {
      "title": "Вкладки или стековый просмотр веб-страниц",
      "level": 3,
      "content": "Некоторые веб-браузеры намеренно не внедряют вкладки, управление вкладками считается задачей менеджера окон, не задачей браузера.\n\nЧтобы i3 управлял вкладками веб-браузера (в этом примере для uzbl), добавьте следующую строку в ваш ~/.config/i3/config\n\n```\nfor_window [class=\"Uzbl-core\"] focus child, layout stacking, focus\n```\n\nЭто для стекового просмотра веб-страниц, это означает, что окна будут показаны вертикально. Преимущество над вкладками является то, что названия окон полностью видны, даже если открыто много окон браузера.\n\nЕсли вы предпочитаете вкладки, с окнами в горизонтальном направлении ('tabs'), используйте:\n\n```\nfor_window [class=\"Uzbl-core\"] focus child, layout tabbed, focus\n```\n\n"
    },
    {
      "title": "Переменные рабочих пространств",
      "level": 3,
      "content": "Так как рабочих пространств в i3 определено много, будет полезно присвоить переменные рабочим пространствам. Например:\n\n```\nset $WS1 term\nset $WS2 web\nset $WS3 misc\nset $WS4 media\nset $WS5 code\n```\n\nЗатем замените имена рабочих пространств в соответствии с их переменной:\n\n```\nbindsym $mod+1          workspace $WS1\n...\nbindsym $mod+Shift+1    move container to workspace $WS1\n```\n\nПодробнее в официальной документации: Changing (named) workspaces/moving to workspaces.\n\n"
    },
    {
      "title": "Правильное обращение с плавающими диалогами",
      "level": 3,
      "content": "Хотя диалоги должны открываться по умолчанию в плавающем режиме (floating) [6], многие до сих пор открываются в тайловом режиме (tiling). Чтобы изменить это поведение, проверьте WM_WINDOW_ROLE с помощью xorg-xprop и добавьте правильные правила в ~/.config/i3/config (используя pcre синтаксис):\n\n```\nfor_window [window_role=\"pop-up\"] floating enable\nfor_window [window_role=\"task_dialog\"] floating enable\n```\n\nВы также можете использовать в качестве правила заголовок и регулярные выражения:\n\n```\nfor_window [title=\"Preferences$\"] floating enable\n```\n\nили WM_CLASS:\n\n```\nfor_window [class=\"(?i)mplayer\"] floating enable\n```\n\n"
    },
    {
      "title": "Скорость Загрузки/Отдачи сети в statusbar",
      "level": 3,
      "content": "Можно адаптировать этот скрипт. Для этого:\n\n- переименуйте обе ваши сетевые карты в соответствии с вашей системой (используйте ip addr)\n- найдите их /sys/devices затем замените соответствующими:\n\n```\n$ find /sys/devices -name network_interface\n```\n\nТеперь просто сохраните скрипт в подходящем месте (например ~/.config/i3) и пропишите его в вашу программу статуса.\n\n"
    },
    {
      "title": "Автоматическое переключение горизонтальной / вертикальной ориентации",
      "level": 3,
      "content": "Пакет autotiling позволяет автоматически переключаться между горизонтальной и вертикальной ориентациями окон, что приводит к поведению, похожему на спиральный тайлинг bspwm. После установки добавьте следующее в ~/.config/i3/config и перезагрузите i3.\n\n```\nexec_always --no-startup-id autotiling\n```\n\n"
    },
    {
      "title": "Общее",
      "level": 3,
      "content": "Часто ошибки уже исправлены в разрабатываемых версиях i3-gitAUR и i3status-gitAUR, и в апстриме попросят воспроизвести какие-либо ошибки в этих версиях. [7] Смотрите также Отладка/Трассировка#Параметры компиляции.\n\n"
    },
    {
      "title": "Искажённый текст",
      "level": 3,
      "content": "Установите какие-нибудь шрифты TrueType.\n\n"
    },
    {
      "title": "Кнопки в строке сообщений i3 не работают",
      "level": 3,
      "content": "Кнопки, такие как \"Edit config\" в i3-nagbar вызывают i3-sensible-terminal, поэтому убедитесь, что i3 распознаёт ваш #Эмулятор терминала.\n\n"
    },
    {
      "title": "Неисправная строка оболочки в тайловом терминале",
      "level": 3,
      "content": "i3 v4.3 и выше игнорирует размер инкремента подсказки для тайловых окон [8]. This may cause terminals to wrap lines prematurely, amongst other issues. As a workaround, make the offending window floating, before tiling it again.\n\n"
    },
    {
      "title": "Курсор мыши остаётся в режиме ожидания",
      "level": 3,
      "content": "При запуске приложения или скрипта, которое не поддерживает протокол startup notification, курсор мыши будет оставаться в режиме занят/часы/и т.п. в течение 60 секунд.\n\nЧтобы решить эту проблему для конкретного приложения, используйте параметр --no-startup-id, например:\n\n```\nexec --no-startup-id ~/script\nbindsym $mod+d exec --no-startup-id dmenu_run\n```\n\nЧтобы полностью отключить эту анимацию, смотрите Темы курсора#Создание ссылок на недостающие курсоры.\n\n"
    },
    {
      "title": "Не реагируют сочетания клавиш",
      "level": 3,
      "content": "Некоторые утилиты, такие как scrot, могут не работать при использовании обычных сочетаний клавиш (которые выполняются сразу в момент нажатия клавиш). В таких ситуациях выполняйте команду после отпускания нажатых клавиш, добавив аргумент --release [9]:\n\n```\nbindsym --release Print exec --no-startup-id scrot\nbindsym --release Shift+Print exec --no-startup-id scrot -s\n```\n\n"
    },
    {
      "title": "Тиринг (разрыв картинки по горизонтали)",
      "level": 3,
      "content": "i3 не осуществляет двойную буферизацию должным образом [10] следовательно, может появится тиринг или мерцание. Чтобы предотвратить это, установите и настройте picom.\n\n"
    },
    {
      "title": "Значки трея не видны",
      "level": 3,
      "content": "Директива tray_output primary может потребовать установки первичного вывода с помощью xrandr, явного указания вывода или просто удаления этой директивы. [11] Подробности в статье xrandr (Русский). Конфигурация по умолчанию, которую создаёт i3-config-wizard, больше не добавляет эту директиву в конфигурацию, начиная с i3 версии 4.12.\n\n"
    },
    {
      "title": "Рабочее пространство по умолчанию для Spotify",
      "level": 3,
      "content": "Чтобы назначить рабочее пространство по умолчанию для окон Spotify, нельзя использовать стандартный путь с командой assign, а лучше использовать команду for_window, например\n\n```\n~/.config/i3/config\n```\n\n```\n...\nfor_window [class=\"Spotify\"] move container to workspace $ws10\n```\n\nЧтобы for_window не перемещал окно, если оно уже находится в $ws10, можно вместо этого использовать move --no-auto-back-and-forth.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Официальный сайт\n- Funtoo:I3 Tiling Window Manager\n- Исходный код\n- i3-extras - Коллекция скриптов и патчей\n- i3ipc-glib - Библиотека расширений i3\n- i3ipc-ruby - Усовершенствованная библиотека расширений i3 на Ruby\n- j4tools[устаревшая ссылка 2023-04-23 ⓘ] - неофициальные утилиты для работы с i3\n\nArch Linux Forums\n\n- The i3 thread - A general discussion about i3\n- i3 desktop screenshots and config sharing\n\nScreencasts\n\n- i3 window manager v4.1 screencast\n- i3 window manager v4.1X screencasts\n\n"
    }
  ]
}
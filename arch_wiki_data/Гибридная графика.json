{
  "title": "Гибридная графика",
  "url": "https://wiki.archlinux.org/title/%D0%93%D0%B8%D0%B1%D1%80%D0%B8%D0%B4%D0%BD%D0%B0%D1%8F_%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%B0",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- NVIDIA Optimus (Русский)\n- PRIME\n- Xorg (Русский)\n- External GPU\n\nГибридная графика - это концепция, предполагающая использование двух графических карт на одном компьютере. Производители ноутбуков разработали технологии, предусматривающие использование двух графических карт с разными возможностями и энергопотреблением на одном компьютере. Гибридная графика была разработана для поддержки как высокой производительности, так и энергосбережения за счет неактивности выделенного/дискретного графического процессора, если не требуется производительность 3D-рендеринга по сравнению с интегрированным графическим процессором.\n\nСуществует множество технологий, и каждый производитель разработал свое собственное решение этой проблемы. Эта технология хорошо поддерживается в Windows, но в дистрибутивах Linux она еще не получила должной поддержки. В этой статье мы попытаемся немного рассказать о каждом подходе и описать некоторые решения сообщества, связанные с отсутствием поддержки GNU/Linux систем производителями.\n\n"
    },
    {
      "title": "Динамическое переключение",
      "level": 2,
      "content": "Большинство новых технологий гибридной графики предполагают использование двух графических карт: выделенная и интегрированная карты подключаются к фреймбуферу, при этом аппаратный мультиплексор отсутствует. Интегрированная карта всегда включена, а выделенная карта включается/выключается, когда есть необходимость в энергосбережении или рендеринге производительности. В большинстве случаев нет возможности использовать только выделенную карту, и все переключения и рендеринг контролируются программно. При запуске ядро Linux начинает использовать видеорежим и устанавливать низкоуровневые графические драйверы, которые будут использоваться приложениями. Большинство дистрибутивов Linux затем используют X.org для создания графической среды. Наконец, запускается несколько других программ, сначала менеджер входа в систему, затем оконный менеджер и так далее. Эта иерархическая система была разработана для использования в большинстве случаев на одной графической карте.\n\n"
    },
    {
      "title": "Полное отключение питания дискретного GPU",
      "level": 3,
      "content": "Вы можете отключить высокопроизводительный графический процессор для экономии заряда батареи.\n\n"
    },
    {
      "title": "Использование BIOS/UEFI",
      "level": 4,
      "content": "Некоторые производители ноутбуков предоставляют переключатель в BIOS или UEFI для полной деактивации выделенной карты.\n\n"
    },
    {
      "title": "Использование правил udev",
      "level": 4,
      "content": "Убедитесь, что все настройки экранного менеджера, связанные с NVIDIA, удалены.\n\nВнесите драйверы nouveau в черный список, создав\n\n```\n/etc/modprobe.d/blacklist-nouveau.conf\n```\n\n```\nblacklist nouveau\noptions nouveau modeset=0\n```\n\nЗатем создайте\n\n```\n/etc/udev/rules.d/00-remove-nvidia.rules\n```\n\n```\n# Remove NVIDIA USB xHCI Host Controller devices, if present\nACTION==\"add\", SUBSYSTEM==\"pci\", ATTR{vendor}==\"0x10de\", ATTR{class}==\"0x0c0330\", ATTR{power/control}=\"auto\", ATTR{remove}=\"1\"\n\n# Remove NVIDIA USB Type-C UCSI devices, if present\nACTION==\"add\", SUBSYSTEM==\"pci\", ATTR{vendor}==\"0x10de\", ATTR{class}==\"0x0c8000\", ATTR{power/control}=\"auto\", ATTR{remove}=\"1\"\n\n# Remove NVIDIA Audio devices, if present\nACTION==\"add\", SUBSYSTEM==\"pci\", ATTR{vendor}==\"0x10de\", ATTR{class}==\"0x040300\", ATTR{power/control}=\"auto\", ATTR{remove}=\"1\"\n\n# Remove NVIDIA VGA/3D controller devices\nACTION==\"add\", SUBSYSTEM==\"pci\", ATTR{vendor}==\"0x10de\", ATTR{class}==\"0x03[0-9]*\", ATTR{power/control}=\"auto\", ATTR{remove}=\"1\"\n```\n\nПерезагрузитесь и запустите lspci, чтобы проверить, есть ли ваш графический процессор NVIDIA в списке.\n\n"
    },
    {
      "title": "Использование bbswitch",
      "level": 4,
      "content": "С графическим процессором NVidia это можно сделать более безопасно, используя bbswitch, который состоит из пакета ядра, автоматически выдающего правильные вызовы ACPI для отключения дискретного GPU, когда он не нужен, или автоматически при загрузке.\n\n"
    },
    {
      "title": "Использование acpi_call",
      "level": 4,
      "content": "В противном случае, а также для GPU, не поддерживаемых bbswitch, это можно сделать вручную, установив пакет acpi_call.\n\nПосле установки загрузите модуль ядра:\n\n```\n# modprobe acpi_call\n```\n\nЗагрузив модуль ядра, выполните скрипт по адресу /usr/share/acpi_call/examples/turn_off_gpu.sh.\n\nСкрипт пройдет по всем известным шинам данных и попытается их отключить. Вы получите результат, подобный следующему:\n\n```\n# /usr/share/acpi_call/examples/turn_off_gpu.sh\n```\n\n```\nTrying \\_SB.PCI0.P0P1.VGA._OFF: failed\nTrying \\_SB.PCI0.P0P2.VGA._OFF: failed\nTrying \\_SB_.PCI0.OVGA.ATPX: failed\nTrying \\_SB_.PCI0.OVGA.XTPX: failed\nTrying \\_SB.PCI0.P0P3.PEGP._OFF: failed\nTrying \\_SB.PCI0.P0P2.PEGP._OFF: failed\nTrying \\_SB.PCI0.P0P1.PEGP._OFF: failed\nTrying \\_SB.PCI0.MXR0.MXM0._OFF: failed\nTrying \\_SB.PCI0.PEG1.GFX0._OFF: failed\nTrying \\_SB.PCI0.PEG0.GFX0.DOFF: failed\nTrying \\_SB.PCI0.PEG1.GFX0.DOFF: failed\nTrying \\_SB.PCI0.PEG0.PEGP._OFF: works!\nTrying \\_SB.PCI0.XVR0.Z01I.DGOF: failed\nTrying \\_SB.PCI0.PEGR.GFX0._OFF: failed\nTrying \\_SB.PCI0.PEG.VID._OFF: failed\nTrying \\_SB.PCI0.PEG0.VID._OFF: failed\nTrying \\_SB.PCI0.P0P2.DGPU._OFF: failed\nTrying \\_SB.PCI0.P0P4.DGPU.DOFF: failed\nTrying \\_SB.PCI0.IXVE.IGPU.DGOF: failed\nTrying \\_SB.PCI0.RP00.VGA._PS3: failed\nTrying \\_SB.PCI0.RP00.VGA.P3MO: failed\nTrying \\_SB.PCI0.GFX0.DSM._T_0: failed\nTrying \\_SB.PCI0.LPC.EC.PUBS._OFF: failed\nTrying \\_SB.PCI0.P0P2.NVID._OFF: failed\nTrying \\_SB.PCI0.P0P2.VGA.PX02: failed\nTrying \\_SB_.PCI0.PEGP.DGFX._OFF: failed\nTrying \\_SB_.PCI0.VGA.PX02: failed\n```\n\nВидите \"works\"? Это означает, что скрипт нашел шину, на которой находится ваш GPU, и теперь отключил чип. Чтобы подтвердить это, оставшееся время работы батареи должно увеличиться.\n\nВ настоящее время чип включается при следующей перезагрузке. Чтобы обойти это, добавьте модуль ядра в массив модулей, загружаемых при загрузке:\n\n```\n/etc/modules-load.d/acpi_call.conf\n```\n\n```\n#Load 'acpi_call.ko' at boot.\n\nacpi_call\n```\n\nДля отключения GPU при загрузке можно использовать systemd-tmpfiles.\n\n```\n/etc/tmpfiles.d/acpi_call.conf\n```\n\n```\nw /proc/acpi/call - - - - \\\\_SB.PCI0.PEG0.PEGP._OFF\n```\n\nПриведенная выше конфигурация будет загружена при загрузке systemd. Что она делает, так это записывает определенный сигнал OFF в файл /proc/acpi/call. Очевидно, замените \\_SB.PCI0.PEG0.PEGP._OFF на тот, который работает в вашей системе (обратите внимание, что нужно экранировать обратную косую черту).\n\nВ некоторых системах отключение дискретного GPU до инициализации X-сервера может привести к зависанию системы. В таких случаях лучше отключить GPU после инициализации X-сервера, что возможно с некоторыми экранными менеджерами. В LightDM, например, параметр конфигурации места display-setup-script можно использовать для выполнения скрипта от имени root, который отключает GPU.\n\n"
    },
    {
      "title": "System76",
      "level": 3,
      "content": "Некоторые ноутбуки System76 (например, Oryx Pro) имеют собственную уникальную опцию гибридной графики. Чтобы воспользоваться ею, установите system76-powerAUR, включите system76-power.service и запустите system76-power graphics hybrid.\n\n"
    }
  ]
}
{
  "title": "Full system backup with rsync (Español)",
  "url": "https://wiki.archlinux.org/title/Full_system_backup_with_rsync_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2019-11-15** \n\nArtículos relacionados\n\n- System backup\n- Synchronization and backup programs\n\nrsync es una utilidad de código abierto que proporciona una transferencia de archivos incremental rápida.\n\n"
    },
    {
      "title": "Instalación",
      "level": 2,
      "content": "Instale el paquete rsync.\n\nrsync debe instalarse en la máquina tanto de origen como de destino.\n\n"
    },
    {
      "title": "Interfaces gráficas",
      "level": 3,
      "content": "- Grsync — Front-end GTK.\n\n- gutback — Wrapper de rsync escrito en Shell.\n\n- JotaSync — Interfaz Java Swing para rsync con planificador integrado.\n\n- luckyBackup — Front-end Qt escrito en C++.\n\nOtras herramientas que usan rsync son rdiff-backupAUR y osyncAUR.\n\n"
    },
    {
      "title": "Como alternativa de cp/mv",
      "level": 2,
      "content": "rsync se puede usar como una alternativa avanzada para la orden cp o mv, especialmente para copiar archivos más grandes:\n\n```\n$ rsync -P source destination\n```\n\nLa opción -P es la misma que --partial --progress, que mantiene los archivos parcialmente transferidos y muestra una barra de progreso de la transferencia.\n\nEs posible que desee utilizar la opción -r/--recursive para recoger recursivamente el contenido de los directorios.\n\nLos archivos se pueden copiar localmente como con cp, pero el propósito motivador de rsync es copiar archivos de forma remota, es decir, entre dos servidores diferentes. Las ubicaciones remotas se pueden especificar con una sintaxis de dos puntos entre servidores:\n\n```\n$ rsync source host:destination\n```\n\no\n\n```\n$ rsync host:source destination\n```\n\nLas transferencias de archivos en red utilizan el protocolo SSH de forma predeterminada y host puede ser un nombre de equipo real o un perfil/alias predefinido desde .ssh/config.\n\nYa sea que transfiera archivos de forma local o remota, rsync primero crea una lista de archivos que contiene información (de manera predeterminada, el tamaño del archivo y la última marca de tiempo de modificación) que luego se utilizará para determinar si el archivo necesita ser construido. Para cada archivo que se construirá, se encuentra una suma de comprobación débil y fuerte para todos los bloques, de modo que cada bloque tenga una longitud de S bytes, que no se superponga y que tenga un desplazamiento que sea divisible por S. Con esta información, se puede construir un archivo grande usando rsync sin tener que transferir todo el archivo. Para obtener una explicación práctica y matemática detallada, remítase a how rsync works y the rsync algorithm, respectivamente.\n\nPara pasar a rsync valores predeterminados rápidamente, puede usar algunos alias:\n\n```\nfunction cpr() {\n  rsync --archive -hh --partial --info=stats1 --info=progress2 --modify-window=1 \"$@\"\n} \nfunction mvr() {\n  rsync --archive -hh --partial --info=stats1 --info=progress2 --modify-window=1 --remove-source-files \"$@\"\n}\n```\n\nNote: **no** \n\n"
    },
    {
      "title": "Lidiar con la barra diagonal",
      "level": 3,
      "content": "Arch por defecto usa «cp» de GNU (parte de coreutils de GNU). Sin embargo, rsync sigue la convención de BSD para «cp», que da un tratamiento especial a los directorios de origen con una bara diagonal «/». A pesar de que:\n\n```\n$ rsync -r source destination\n```\n\ncrea un directorio «destination/source» con el contenido de «source»;\n\ny la orden:\n\n```\n$ rsync -r source/ destination\n```\n\ncopia todos los archivos presentes en «source/» directamente a «destination», sin subdirectorio intermedio, como si lo hubiera invocado así:\n\n```\n$ rsync -r source/. destination\n```\n\nEste comportamiento es diferente al de GNU para cp, que trata «source» y «source/» de forma idéntica (pero no «source/.»). Además, algunos intérpretes de órdenes añaden automáticamente la barra inclinada final cuando se completan los nombres de directorios con el tabulador. Debido a estos factores, puede haber cierta tendencia entre los usuarios de rsync nuevos u ocasionales a olvidarse del comportamiento diferente de rsync, y sin darse cuenta provoquen un desastre o incluso sobrescribir archivos importantes al dejar la barra diagonal en la línea de órdenes.\n\nPor lo tanto, puede ser prudente usar un script para eliminar automáticamente las barras diagonales finales antes de invocar rsync:\n\n```\n#!/bin/zsh\nnew_args=();\nfor i in \"$@\"; do\n    case $i in /) i=/;; */) i=${i%/};; esac\n    new_args+=$i;\ndone\nexec rsync \"${(@)new_args}\"\n```\n\nEste script se puede colocar en algún lugar de la ruta y crear un alias a rsync en el archivo de inicio de shell.\n\n"
    },
    {
      "title": "Como herramienta para realizar copias de seguridad",
      "level": 2,
      "content": "El protocolo rsync puede usarse fácilmente para realizar copias de seguridad, transfiriendo solo los archivos que han cambiado desde la última copia de seguridad. Esta sección describe un script para realizar copias de seguridad programada muy simple que utiliza rsync, el cual generalmente se utiliza para realizar copias a medios extraíbles.\n\n"
    },
    {
      "title": "Realizar copia de seguridad automatizada",
      "level": 3,
      "content": "A modo de ejemplo, el script se creará en el directorio /etc/cron.daily, y se ejecutará diariamente si un daemon cron está instalado y configurado correctamente. Configurar y usar cron no entra en el ámbito de este artículo.\n\nPrimero, cree un script que contenga las opciones de órdenes apropiadas:\n\n```\n/etc/cron.daily/backup\n```\n\n```\n#!/bin/bash\nrsync -a --delete --quiet /folder/to/backup /location/of/backup\n```\n\nAquí, /folder/to/backup debe cambiarse por aquello que quiere respaldar (/home, por ejemplo) y /location/of/backup es donde se quiere guardar la copia de seguridad (/media/disk, pongamos por caso).\n\nPor último, el script debe hacerse ejecutable:\n\n```\n# chmod +x /etc/cron.daily/backup\n```\n\n"
    },
    {
      "title": "Realizar copia de seguridad automatizada con SSH",
      "level": 3,
      "content": "Si realiza una copia de seguridad en un servidor remoto utilizando SSH, utilice este script en su lugar:\n\n```\n/etc/cron.daily/backup\n```\n\n```\n#!/bin/bash\nrsync -a --delete --quiet -e ssh /folder/to/backup remoteuser@remotehost:/location/of/backup\n```\n\n"
    },
    {
      "title": "Realizar copia de seguridad automatizada con NetworkManager",
      "level": 3,
      "content": "Este script inicia una copia de seguridad cuando se establece la conexión de red.\n\nPrimero, cree un script que contenga las opciones de órdenes apropiadas:\n\n```\n/etc/NetworkManager/dispatcher.d/backup\n```\n\n```\n#!/bin/bash\n\nif [ x\"$2\" = \"xup\" ] ; then\n        rsync --force --ignore-errors -a --delete --bwlimit=2000 --files-from=files.rsync /folder/to/backup /location/to/backup\nfi\n```\n\nAdemás, el script debe tener permiso de escritura solo para el propietario (root, por supuesto) (vea NetworkManager#Network services with NetworkManager dispatcher para más detalles).\n\n"
    },
    {
      "title": "Realizar copia de seguridad automatizada con systemd e inotify",
      "level": 3,
      "content": "- Debido a las limitaciones de inotify y systemd (vea esta pregunta y respuesta), el monitoreo recursivo del sistema de archivos no es posible. Aunque puede observar un directorio y su contenido, no monitoreará recursivamente los subdirectorios ni observará su contenido; debe especificar explícitamente cada directorio a seguir, incluso si ese directorio es hijo de un directorio que está siendo monitoreado.\n- Esta configuración se basa en una instancia de systemd/User.\n\nEn lugar de ejecutar copias de seguridad a intervalos de tiempo según se haya programado, como las implementadas en cron, es posible ejecutar una copia de seguridad cada vez que uno de los archivos de los que está realizando una copia de seguridad cambia. Las unidades systemd.path usan inotify para monitorear el sistema de archivos, y se pueden usar junto con los archivos systemd.service para iniciar cualquier proceso (en este caso su copia de seguridad con rsync) basado en un evento del sistema de archivos.\n\nPrimero, cree el archivo systemd.path que monitoreará los archivos que está respaldando:\n\n```\n~/.config/systemd/user/backup.path\n```\n\n```\n[Unit]\nDescription=Comprueba si las rutas que se están copiando actualmente han cambiado\n\n[Path]\nPathChanged=%h/documents\nPathChanged=%h/music\n\n[Install]\nWantedBy=default.target\n```\n\nLuego cree un archivo systemd.service que se activará cuando detecte un cambio. De manera predeterminada, se activará un archivo de servicio con el mismo nombre que la unidad de ruta (en este caso, backup.path), salvo por la extensión .service en lugar de .path (en este caso backup.service).\n\n```\n~/.config/systemd/user/backup.service\n```\n\n```\n[Unit]\nDescription=Backs up files\n\n[Service]\nExecStart=/usr/bin/rsync %h/./documents %h/./music -CERrltm --delete ubuntu:\n```\n\nAhora todo lo que tiene que hacer es iniciar/activar backup.path como un servicio de systemd normal y comenzará a monitorear los cambios de los archivos e iniciará en consecuencia backup.service.\n\n"
    },
    {
      "title": "Realizar copia de seguridad diferencial por semana",
      "level": 3,
      "content": "Esta es una opción útil de rsync, que consiste en realizar una copia de seguridad completa (en cada ejecución) y mantener una copia de seguridad diferencial solo de los archivos modificados en un directorio separado para cada día de la semana.\n\nPrimero, cree un script que contenga las opciones de órdenes apropiadas:\n\n```\n/etc/cron.daily/backup\n```\n\n```\n#!/bin/bash\n\nDAY=$(date +%A)\n\nif [ -e /location/to/backup/incr/$DAY ] ; then\n  rm -fr /location/to/backup/incr/$DAY\nfi\n\nrsync -a --delete --quiet --inplace --backup --backup-dir=/location/to/backup/incr/$DAY /folder/to/backup/ /location/to/backup/full/\n```\n\n"
    },
    {
      "title": "Realizar copia de seguridad basada en instantáneas",
      "level": 3,
      "content": "La misma idea se puede utilizar para mantener un árbol de instantáneas de sus archivos. En otras palabras, un directorio con copias de los archivos ordenadas por fecha. Las copias se realizan mediante enlaces, lo que significa que solo los archivos que cambiaron ocuparán espacio. En términos generales, esta es la idea detrás de TimeMachine de Apple.\n\nEste script básico es fácil de implementar y crea instantáneas incrementales rápidas utilizando la opción --link-dest para enlazar archivos sin cambios:\n\n```\n/usr/local/bin/snapbackup.sh\n```\n\n```\n#!/bin/bash\n\n# Script básico de copia de seguridad con rsync de estilo de instantáneas\n# Config\nOPT=\"-aPh\"\nLINK=\"--link-dest=/snapshots/username/last/\" \nSRC=\"/home/username/files/\"\nSNAP=\"/snapshots/username/\"\nLAST=\"/snapshots/username/last\"\ndate=`date \"+%Y-%b-%d:_%T\"`\n\n# Ejecutar rsync para crear una instantánea\nrsync $OPT $LINK $SRC ${SNAP}$date\n\n# Eliminar la instantánea anterior del enlace simbólico\nrm -f $LAST\n\n# Crear un nuevo enlace simbólico a la última instantánea\nln -s ${SNAP}$date $LAST\n```\n\nDebe existir un enlace simbólico a una copia de seguridad completa como destino para --link-dest. Si se elimina la instantánea más reciente, será necesario volver a crear el enlace simbólico para que apunte a la instantánea más reciente. Si --link-dest no encuentra un enlace simbólico que funcione, rsync procederá a copiar todos los archivos de origen en lugar de solo los cambios.\n\nUna versión más sofisticada mantiene una copia de seguridad completa actualizada $SNAP/latest y, en caso de que un cierto número de archivos haya cambiado desde la última copia de seguridad completa, crea una instantánea $SNAP/$DATETAG de la copia de seguridad completa actual utilizando cp -al para vincular archivos sin cambios:\n\n```\n/usr/local/bin/rsnapshot.sh\n```\n\n```\n#!/bin/bash\n\n## mi propio procedimiento de copia de seguridad\n## estilo instantánea basado en rsync\n## (cc) marcio rps AT gmail.com\n\n# config vars\n\nSRC=\"/home/username/files/\" #no olvidar la barra diagonal final\nSNAP=\"/snapshots/username\"\nOPTS=\"-rltgoi --delay-updates --delete --chmod=a-w\"\nMINCHANGES=20\n\n# ejecutar este proceso con prioridad baja\n\nionice -c 3 -p $$\nrenice +12  -p $$\n\n# sincronizar\n\nrsync $OPTS $SRC $SNAP/latest >> $SNAP/rsync.log\n\n# compruebar si ha cambiado lo suficiente y si es así\n# hacer una copia enlazada denominada por fecha\n\nCOUNT=$( wc -l $SNAP/rsync.log|cut -d\" \" -f1 )\nif [ $COUNT -gt $MINCHANGES ] ; then\n        DATETAG=$(date +%Y-%m-%d)\n        if [ ! -e $SNAP/$DATETAG ] ; then\n                cp -al $SNAP/latest $SNAP/$DATETAG\n                chmod u+w $SNAP/$DATETAG\n                mv $SNAP/rsync.log $SNAP/$DATETAG\n                chmod u-w $SNAP/$DATETAG\n        fi\nfi\n```\n\nPara hacer las cosas realmente simples, este script puede ejecutarse desde una unidad systemd/Timers.\n\n"
    },
    {
      "title": "Realizar copia de seguridad completa del sistema",
      "level": 3,
      "content": "Esta sección trata sobre el uso de rsync para transferir una copia de todo el árbol /, excluyendo algunas carpetas seleccionadas. Se considera que este enfoque es mejor que clonar un disco con dd dado que ello utilizar un tamaño diferente, una tabla de partición y un sistema de archivos, y mejor que copiar con cp -a también, porque permite un mayor control sobre los permisos de archivos, atributos, Listas de control de acceso y Atributos extendidos.\n\nrsync funcionará incluso mientras el sistema se está ejecutando, pero los archivos modificados durante la transferencia pueden o no transferirse, lo que puede causar un comportamiento inesperado de algunos programas que usan los archivos transferidos.\n\nEste enfoque funciona bien para migrar una instalación existente a un nuevo disco duro o SSD.\n\nEjecute la siguiente orden como root para asegurarse de que rsync pueda acceder a todos los archivos del sistema y preservar su propiedad:\n\n```\n# rsync -aAXv --exclude={\"/dev/*\",\"/proc/*\",\"/sys/*\",\"/tmp/*\",\"/run/*\",\"/mnt/*\",\"/media/*\",\"/lost+found\"} / /path/to/backup/folder\n```\n\nAl utilizar el conjunto de opciones -aAX, los archivos se transfieren en modo de comprimido, lo que garantiza que los enlaces simbólicos, los dispositivos, los permisos, las propiedades, los tiempos de modificación, los ACL y los atributos extendidos se conserven, suponiendo que el sistema de archivos de destino dé soporte a esta función.\n\nLa opción --exclude hace que se excluyan los archivos que coinciden con los patrones dados. Se excluye el contenido de /dev, /proc, /sys, /tmp y /run en la orden anterior, porque se rellenan en el arranque, aunque las carpetas no se crean por sí mismas. /lost+found es específico del sistema de archivos. La orden anterior depende de la expansión de llaves disponible tanto en las shells bash como zsh.Cuando se utiliza un shell diferente, los patrones --exclude deben repetirse manualmente. Citar los patrones de exclusión evitará la expansión por la shell, lo cual es necesario, por ejemplo, cuando se realiza una copia de seguridad mediante SSH. Al terminar las rutas excluidas con * se garantiza que dichos directorios se creen si aún no existen.\n\n- Si planea hacer una copia de seguridad de su sistema en otro lugar que no sea /mnt o /media, no olvide agregarlo a la lista de patrones de exclusión para evitar un bucle infinito.\n- Si hay montajes de enlace en el sistema, también deben excluirse para que el contenido asociado al enlace se copie solo una vez.\n- Si utiliza un archivo como espacio de intercambio, asegúrese de excluirlo también.\n- Considere si desea hacer una copia de seguridad de la carpeta /home/. Si contiene sus datos, podría ser considerablemente más grande que el sistema. De lo contrario, considere excluir subdirectorios sin importancia como /home/*/.thumbnails/*, /home/*/.cache/mozilla/*, /home/*/.cache/chromium/* y /home/*/.local/share/Trash/*, dependiendo del software instalado en el sistema. Si GVFS está instalado, /home/*/.gvfs debe excluirse para evitar errores de rsync.\n\nEs posible que desee incluir opciones rsync adicionales, como las siguientes. Consulte rsync(1) para ver la lista completa.\n\n- Si usa muchos enlaces duros (por ejemplo, si está usando Flatpak), considere agregar la opción -H, que está desactivada por defecto debido a su gasto de memoria. Sin embargo, no debería ser un problema en la mayoría de los ordenadores modernos. Muchos enlaces duros residen en el directorio /usr/.\n- Es posible que desee agregar la opción --delete de rsync si está ejecutando esto varias veces en la misma carpeta de respaldo. En este caso, asegúrese de que la ruta de origen no termine con /*, o esta opción solo tendrá efecto en los archivos dentro de los subdirectorios del directorio de origen, pero no tendrá ningún efecto en los archivos que residen directamente dentro del directorio de origen.\n- Si utiliza archivos dispersos, como discos virtuales, imágenes Docker y similares, debe agregar la opción -S.\n- La opción --numeric-ids desactivará la asignación de nombres de usuarios y grupos; en su lugar, se transferirán las identificaciones numéricas de grupo y de usuario. Esto es útil cuando se realiza una copia de seguridad mediante SSH o cuando se utiliza un sistema live para hacer una copia de seguridad de un disco con sistema diferente.\n- Al elegir la opción --info=progress2 en lugar de -vse mostrará la información general del progreso y la velocidad de transferencia, en lugar de la lista de archivos que se están transfiriendo.\n- To avoid crossing a filesystem boundary when recursing, add the option -x/--one-file-system. This will prevent backing up any mount point in the hierarchy.\n\n"
    },
    {
      "title": "Restaurar una copia de seguridad",
      "level": 3,
      "content": "Si desea restaurar una copia de seguridad, use la misma orden de rsync que se ejecutó, pero con el origen y el destino invertidos.\n\n"
    },
    {
      "title": "Clonar el sistema de archivos",
      "level": 2,
      "content": "rsync proporciona una forma de hacer una copia de todos los datos en un sistema de archivos al tiempo que conserva la mayor cantidad de información posible, incluidos los metadatos del sistema de archivos. Es un procedimiento de clonación de datos en un nivel de sistema de archivos donde los sistemas de archivos de origen y de destino no necesitan ser del mismo tipo. Se puede utilizar para realizar copias de seguridad, migrar sistemas de archivos o recuperar datos.\n\nEl modo archive de rsync está cerca de ser apto para el trabajo, pero no realiza una copia de seguridad de los metadatos especiales del sistema de archivos, como listas de control de acceso, atributos extendidos o propiedades de archivos dispersos. Para una clonación exitosa a nivel del sistema de archivos, se deben proporcionar algunas opciones adicionales:\n\n```\nrsync -qaHAXS DIRECTORIO_ORIGEN DIRECTORIO_DESTINO\n```\n\nY su significado es (de la página de manual):\n\n```\n-H, --hard-links      preserva los enlaces duros\n-A, --acls            preserva las ACL (implica -p)\n-X, --xattrs          preserva los atributos extendidos\n-S, --sparse          manejar archivos dispersos de manera eficiente\n```\n\nAdemás, use -x si tiene otros sistemas de archivos montados bajo el árbol que desea excluir de la copia. La copia producida se puede volver a leer y verificar (por ejemplo, después de un intento de recuperación de datos) a nivel del sistema de archivos con la opción recursiva de diff:\n\n```\ndiff -r DIRECTORIO_ORIGEN DIRECTORIO_DESTINO\n```\n\nEs posible realizar una migración exitosa del sistema de archivos usando rsync como se describe en este artículo y actualizando fstab y gestor de arranque como se describe en Migrate installation to new hardware.Básicamente, esto proporciona una forma de convertir cualquier sistema de archivos raíz a otro.\n\n"
    },
    {
      "title": "Demonio rsync",
      "level": 2,
      "content": "rsync se puede ejecutar como demonio en un servidor que escucha el puerto 873.\n\nEdite la plantilla /etc/rsyncd.conf, configure un recurso compartido e inicie el servicio rsyncd.service.\n\nUtilización del cliente, por ejemplo listar el contenido del servidor:\n\n```\n$ rsync rsync://server/share\n```\n\nTransferir archivo del cliente al servidor:\n\n```\n$ rsync local-file rsync://server/share/\n```\n\nTenga en cuenta iptables para abrir el puerto 873 y la autenticación de usuario.\n\n"
    },
    {
      "title": "Véase también",
      "level": 2,
      "content": "- Se pueden buscar más ejemplos de uso en los foros Community Contributions y General Programming\n- Howto – local and remote snapshot backup using rsync with hard links Includes file deduplication with hard-links, MD5 integrity signature, 'chattr' protection, filter rules, disk quota, retention policy with exponential distribution (backups rotation while saving more recent backups than older)\n- Using SSH keys/identity files with rsync\n\n"
    }
  ]
}
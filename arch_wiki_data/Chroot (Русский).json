{
  "title": "Chroot (Русский)",
  "url": "https://wiki.archlinux.org/title/Chroot_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- PRoot\n- Linux Containers\n- systemd-nspawn\n\nChroot — операция изменения корневого каталога диска для запущенного процесса и его дочерних процессов. Программа, запущенная в таком окружении, не может получить доступ к файлам вне нового корневого каталога. Это измененное окружение называется chroot jail.\n\n"
    },
    {
      "title": "Причины",
      "level": 2,
      "content": "Изменение корневого каталога обычно производится при обслуживании системы, загрузка и/или вход в которую стали невозможны. В таком режиме, например, могут быть выполнены:\n\n- Переустановка загрузчика.\n- Пересборка образа initramfs.\n- Обновление или откат пакетов.\n- Сброс пароля root.\n- Сборка пакетов в чистом окружении, смотрите DeveloperWiki:Building in a clean chroot.\n\nСмотрите также Wikipedia:Chroot#Limitations.\n\n"
    },
    {
      "title": "Требования",
      "level": 2,
      "content": "- Наличие привилегий суперпользователя.\n- Возможность загрузки с другой среды Linux, например, LiveCD, загрузочного USB-носителя или другого установленного дистрибутива.\n- Совпадение архитектур двух сред: с которой производится загрузка и в которую происходит изменение корня. Архитектуру текущей среды можно узнать командой uname -m (например, i686 или x86_64).\n- Если среде chroot необходимы какие-нибудь модули ядра, они должны быть загружены.\n- Если нужен раздел подкачки, он должен быть включен: # swapon /dev/sdxY.\n- Интернет-соединение установлено, если нужно.\n\n"
    },
    {
      "title": "Использование",
      "level": 2,
      "content": "- Некоторые инструменты systemd, такие как hostnamectl, localectl и timedatectl, не работают внутри внутри chroot, поскольку они требуют активного dbus-соединения. [1]\n- Файловая система, которая станет новым корнем (/), должна быть доступна (т.е. расшифрована, смонтирована).\n\nЕсть два варианта использования chroot.\n\n"
    },
    {
      "title": "Используя arch-chroot",
      "level": 3,
      "content": "Bash-скрипт arch-chroot является частью пакета arch-install-scripts. Перед запуском /usr/bin/chroot он монтирует нужные виртуальные файловые системы, например /proc, и делает /etc/resolv.conf доступным из chroot.\n\n"
    },
    {
      "title": "Переход в chroot",
      "level": 4,
      "content": "Запустите arch-chroot с указанием нового корневого каталога:\n\n```\n# arch-chroot /путь/к/новому/корню\n```\n\nНапример, руководство по установке использует каталог /mnt:\n\n```\n# arch-chroot /mnt\n```\n\nВыход из chroot простой:\n\n```\n# exit\n```\n\n"
    },
    {
      "title": "Запуск одной команды и выход",
      "level": 4,
      "content": "Чтобы запустить команду из chroot и сразу выйти, добавьте команду в конец строки:\n\n```\n# arch-chroot /путь/к/новому/корню команда\n```\n\nЧтобы запустить mkinitcpio -p linux в окружении chroot минуя создание сеанса в командной оболочке:\n\n```\n# arch-chroot /mnt/arch /usr/bin/mkinitcpio -p linux\n```\n\n"
    },
    {
      "title": "Используя chroot",
      "level": 3,
      "content": "В данном примере /путь/к/новому/корню является каталогом, который станет корнем файловой системы внутри chroot.\n\nСмонтируйте временные интерфейсные файловые системы:\n\n```\n# cd /путь/к/новому/корню\n# mount -t proc proc proc/\n# mount -t sysfs /sys sys/\n# mount --rbind /dev dev/\n```\n\nИ, опционально:\n\n```\n# mount --rbind /run run/\n```\n\nЕсли у вас UEFI, вам также может поднадобиться доступ к переменным EFI. Без них попытка установки GRUB приведёт к ошибке вроде UEFI variables not supported on this machine:\n\n```\n# mount --rbind /sys/firmware/efi/efivars sys/firmware/efi/efivars/\n```\n\nЧтобы использовать интернет-соединение в chroot может понадобиться скопировать resolv.conf:\n\n```\n# cp /etc/resolv.conf etc/resolv.conf\n```\n\nЧтобы запустить bash в окружении chroot:\n\n```\n# chroot /путь/к/новому/корню /bin/bash\n```\n\n- chroot: cannot run command '/usr/bin/bash': Exec format error, это значит, что архитектуры основной среды и среды нового корневого каталога не совпадают.\n- chroot: '/usr/bin/bash': permission denied, перемонтируйте раздел с разрешением exec: mount -o remount,exec /mnt/arch. Если это не помогает, убедитесь, что базовые компоненты новой среды не повреждены (если это корень Arch, попробуйте paccheck --root=/путь/к/новому/корню --files --file-properties --md5sum glibc filesystem из пакета pacutils)\n\n- Если это не помогает, убедитесь, что базовые компоненты новой среды не повреждены (если это корень Arch, попробуйте paccheck --root=/путь/к/новому/корню --files --file-properties --md5sum glibc filesystem из пакета pacutils)\n\nПосле входа в сеанс chroot может понадобиться проинициализировать среду командной оболочки в новой среде:\n\n```\n# source /etc/profile\n# source ~/.bashrc\n```\n\n```\n# export PS1=\"(chroot) $PS1\"\n```\n\nПосле завершения работы выйдите из сеанса chroot:\n\n```\n# exit\n```\n\nТеперь размонтируйте временные файловые системы и корневой раздел:\n\n```\n# cd /\n# umount --recursive /путь/к/новому/корню\n```\n\n"
    },
    {
      "title": "Запуск графических приложений в среде chroot",
      "level": 2,
      "content": "Если у вас есть запущенный X-сервер, вы сможете запускать даже графические приложения в среде chroot.\n\nЧтобы разрешить среде chroot соединение с сервером X, откройте виртуальный терминал внутри сервера (то есть, внутри рабочего стола пользователя, который в данный момент вошел в систему), запустите команду xhost, которая даст права каждому подключаться к X-серверу пользователя:\n\n```\n$ xhost +local:\n```\n\nТеперь, для соединения приложений с сервером X, установите переменной окружения DISPLAY в сеансе chroot значение, совпадающее с переменной окружения DISPLAY пользователя, от имени которого запущен сервер. То есть, выполните\n\n```\n$ echo $DISPLAY\n```\n\nот имени этого пользователя для того, чтобы узнать значение переменной, и выполните\n\n```\n# export DISPLAY=:0\n```\n\nв среде chroot, установив переменной нужное значение (в данном примере это :0).\n\n"
    },
    {
      "title": "Без прав суперпользователя",
      "level": 2,
      "content": "Chroot требует привелегий суперпользователя, что может быть нежелательно. Однако, есть несколько способов симулировать работу chroot, используя альтернативные реализации.\n\n"
    },
    {
      "title": "PRoot",
      "level": 3,
      "content": "PRoot может использоваться для изменения корневого раздела и использовать mount --bind без привелегий суперпользователя. Это полезно для ограничивания доступа приложений до единственного каталога или запуска программ, собранных для другой архитектуры. Однако PRoot имеет ограничения, связанные с тем, что все файлы принадлежат пользователю на основной системе. PRoot предоставляет опцию --root-id, которая может быть использована в качестве обходного пути для этих ограничений, по тому же принципу (хотя и более ограниченно), что и в fakeroot.\n\n"
    },
    {
      "title": "Fakechroot",
      "level": 3,
      "content": "fakechroot является небольшой прослойкой, которая перехватывает системные вызовы chroot и симулирует поведение системы, на самом деле не выполняя реальных вызовов (на которые все равно нет прав). Он может использоваться вместе с fakeroot для создания видимости того, что chroot запускается суперпользователем.\n\n```\n# fakechroot fakeroot chroot ~/my-chroot bash\n```\n\n"
    },
    {
      "title": "Unshare",
      "level": 3,
      "content": "Unshare можно использовать для создания нового пространства имён в ядре. Он входит в состав пакета util-linux. Он работает с обычной командой chroot. Пример:\n\n```\n$ unshare --map-root-user chroot ~/namespace /bin/sh\n```\n\n"
    },
    {
      "title": "arch-chroot: /путь/к/новому/корню is not a mountpoint. This may have undesirable side effects.",
      "level": 3,
      "content": "При выполнении arch-chroot /путь/к/новому/корню может появиться такое предупреждение:\n\n```\n==> WARNING: /путь/к/новому/корню is not a mountpoint. This may have undesirable side effects.\n```\n\nОбъяснение этого можно прочитать в arch-chroot(8); там же вы найдёте пример, как превратить каталог в точку монтирования с помощью bind mount.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Basic Chroot\n\n"
    }
  ]
}
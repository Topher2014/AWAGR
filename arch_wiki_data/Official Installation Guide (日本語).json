{
  "title": "Official Installation Guide (日本語)",
  "url": "https://wiki.archlinux.org/title/Official_Installation_Guide_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "このドキュメントは、公式のインストールイメージから作られたインストールメディアから起動したライブ環境を使って Arch Linux をインストールする過程を案内するものです。インストールメディアが提供するアクセシビリティ機能は アクセシビリティ機能を使って Arch Linux をインストール ページで説明されています。他のインストール方法については、カテゴリ:Arch の入手とインストール を参照してください。\n\nインストールの前に、FAQ に目を通しておくことをお勧めします。使用されている用語については、ヘルプ:読み方を見てください。コードの例にはプレースホルダ (斜体 の文字) を含んでいる場合があり、手動で置き換える必要があります。\n\nより詳しい情報は、対応する Arch Wiki の記事や、プログラムの man ページ を見てください。両方ともこのガイドからリンクされています。対話的な助けが必要であれば、Slack や、フォーラム を使うこともできます。\n\nArch Linux は 512 MiB 以上のメモリが搭載された x86_64 互換のマシンで動作します。ただし、インストールのためにライブシステムを起動するためにはより多くのメモリが必要です。[1] 基本的なインストールで使用するディスク容量は 2 GiB 以下です。インストールする際はリモートリポジトリからパッケージを取得する必要があるため、このガイドはインターネットに接続できる環境を前提としています。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストールの準備 1.1 インストールメディアの入手 1.2 署名の検証 1.3 インストールメディアの準備 1.4 ライブ環境の起動 1.5 コンソールのキーボードレイアウト 1.6 起動モードの確認 1.7 インターネットへの接続 1.8 システムクロックの更新 1.9 パーティション 1.9.1 レイアウト例 1.10 パーティションのフォーマット 1.11 ファイルシステムのマウント\n- 2 インストール 2.1 ミラーの選択 2.2 必須パッケージのインストール\n- 3 システムの設定 3.1 fstab の生成 3.2 chroot 3.3 タイムゾーン 3.4 ローカリゼーション 3.5 ネットワーク設定 3.6 Initramfs 3.7 Root パスワード 3.8 ブートローダー\n- 4 再起動\n- 5 インストール後\n\n- 1.1 インストールメディアの入手\n- 1.2 署名の検証\n- 1.3 インストールメディアの準備\n- 1.4 ライブ環境の起動\n- 1.5 コンソールのキーボードレイアウト\n- 1.6 起動モードの確認\n- 1.7 インターネットへの接続\n- 1.8 システムクロックの更新\n- 1.9 パーティション 1.9.1 レイアウト例\n- 1.10 パーティションのフォーマット\n- 1.11 ファイルシステムのマウント\n\n- 1.9.1 レイアウト例\n\n- 2.1 ミラーの選択\n- 2.2 必須パッケージのインストール\n\n- 3.1 fstab の生成\n- 3.2 chroot\n- 3.3 タイムゾーン\n- 3.4 ローカリゼーション\n- 3.5 ネットワーク設定\n- 3.6 Initramfs\n- 3.7 Root パスワード\n- 3.8 ブートローダー\n\n"
    },
    {
      "title": "インストールメディアの入手",
      "level": 3,
      "content": "ダウンロード ページを開いて、希望する起動方法に応じて ISO ファイルやネットブートイメージ、さらに対応する GnuPG 署名を入手してください。\n\n"
    },
    {
      "title": "署名の検証",
      "level": 3,
      "content": "イメージは使用する前に署名を検証することを推奨します。特に「HTTP ミラー」からイメージをダウンロードした場合、悪意のあるイメージ に差し替えられる可能性があるため検証を行ってください。\n\nGnuPG がインストールされている場合、ISO イメージのあるディレクトリに (ダウンロードページの中の \"チェックサム\" の下にある) \"PGP 署名\" をダウンロードして、以下のコマンドを実行すれば検証できます:\n\n```\n$ gpg --keyserver-options auto-key-retrieve --verify archlinux-version-x86_64.iso.sig\n```\n\nもしくは、既存の Arch Linux 環境から以下のコマンドを実行してください:\n\n```\n$ pacman-key -v archlinux-version-x86_64.iso.sig\n```\n\n- 上記の archlinux.jp ではなくミラーサイトから署名をダウンロードした場合、署名も改変されている可能性があります。その場合、署名をデコードするのに使用する公開鍵が他の信用できる鍵によって署名されていることを確認してください。gpg コマンドで公開鍵のフィンガープリントが出力されます。\n- 署名を検証する他の方法として ISO ファイルに署名している Arch Linux の開発者 のフィンガープリントと公開鍵のフィンガープリントが一致していることを確認することでも検証できます。公開鍵認証について詳しくは Wikipedia:ja:公開鍵暗号 を見てください。\n\n"
    },
    {
      "title": "インストールメディアの準備",
      "level": 3,
      "content": "インストールメディアは対象のマシンに、USB メモリ、光ディスク やネットワーク経由の PXEにより提供することができます。適切なページに従って、選択したイメージからインストールメディアを準備してください。\n\n"
    },
    {
      "title": "ライブ環境の起動",
      "level": 3,
      "content": "1. Arch インストールメディアが含まれているデバイスから起動するように指定してください。大抵の場合、起動時の POST フェイズで起動画面に書かれたキーを押すことで指定できます。詳しくは使用しているマザーボードのマニュアルを見てください。\n1. インストールメディアのブートローダーのメニューが表示されたら、Arch Linux install medium を選択して Enter を押すことでインストール環境が開きます。 ヒント: インストールイメージは UEFI での起動に GRUB を、BIOS での起動に syslinux を使います。ブートパラメータの一覧については README.bootparams を参照してください。\n1. 最初に仮想コンソールに root ユーザーでログインされ、Zsh のシェルプロンプトが表示されます。\n\nAlt+arrow ショートカットを使用することでコンソールを切り替えることができます (例えば Lynx でガイドを見ながら操作できます)。設定ファイルを編集するときは mcedit(1)、nano、vim が使えます。インストールメディアに含まれているパッケージの一覧は pkglist.x86_64.txt を参照してください。\n\n"
    },
    {
      "title": "コンソールのキーボードレイアウト",
      "level": 3,
      "content": "デフォルトのキーボードレイアウトは US キーボードです。利用可能なキーマップは以下のコマンドで確認できます:\n\n```\n# ls /usr/share/kbd/keymaps/**/*.map.gz\n```\n\nキーボードレイアウトを指定するには使用したいファイルの名前を指定して loadkeys(1) を実行してください。パスや拡張子は省略可能です。例えば、日本語キーボードレイアウトに設定するには:\n\n```\n# loadkeys jp106\n```\n\nコンソールフォントは /usr/share/kbd/consolefonts/ に存在し、setfont(8) で設定ができます。\n\n"
    },
    {
      "title": "起動モードの確認",
      "level": 3,
      "content": "起動モードを確認するには、efivars ディレクトリの一覧を表示してください:\n\n```\n# ls /sys/firmware/efi/efivars\n```\n\nもし正しく表示されれば、システムは UEFI モードで起動しています。ディレクトリが存在しない場合、BIOS (または CSM) モードで起動しています。希望するモードでシステムが起動しなかった場合は、使用しているマザーボードのマニュアルを読んでください。\n\n"
    },
    {
      "title": "インターネットへの接続",
      "level": 3,
      "content": "ライブ環境上でネットワーク接続を確立するために、以下の手順に従ってください:\n\n- ネットワークインターフェイスが認識・有効化されていることを確認してください、例えば ip-link(8) を使って確認: # ip link\n- 無線接続と無線WANのために、カードが rfkill にブロックされていないか確認してください。\n- ネットワークに接続してください: 有線 — イーサネットケーブルを接続する。 Wi-Fi — iwctl を使って無線ネットワークに認証してください。 モバイルブロードバンドモデム — mmcli ユーティリティを使ってモバイルネットワークに接続してください。\n- ネットワーク接続を設定してください: DHCP: イーサネット、無線 LAN と無線 WAN ネットワークインターフェースでの、動的な IP アドレスと DNS サーバーの割り当て (systemd-networkd と systemd-resolved により提供) は設定不要でそのまま使えるはずです。 固定 IP アドレス: 固定 IP アドレス に従ってください。\n- ping で接続を確認できます: # ping archlinux.jp\n\n```\n# ip link\n```\n\n- 有線 — イーサネットケーブルを接続する。\n- Wi-Fi — iwctl を使って無線ネットワークに認証してください。\n- モバイルブロードバンドモデム — mmcli ユーティリティを使ってモバイルネットワークに接続してください。\n\n- DHCP: イーサネット、無線 LAN と無線 WAN ネットワークインターフェースでの、動的な IP アドレスと DNS サーバーの割り当て (systemd-networkd と systemd-resolved により提供) は設定不要でそのまま使えるはずです。\n- 固定 IP アドレス: 固定 IP アドレス に従ってください。\n\n```\n# ping archlinux.jp\n```\n\n"
    },
    {
      "title": "システムクロックの更新",
      "level": 3,
      "content": "ライブ環境では、systemd-timesyncd はデフォルトで有効になっており、インターネットへの接続が確立されると自動的に時刻が同期されるようになっています。\n\ntimedatectl(1) を使ってシステムクロックを正確にしてください:\n\n```\n# timedatectl status\n```\n\n"
    },
    {
      "title": "パーティション",
      "level": 3,
      "content": "ライブ環境によって認識されたディスクには /dev/sda や /dev/nvme0n1、/dev/mmcblk0 などのようにブロックデバイスが割り当てられます。デバイスを確認するには、lsblk または fdisk を使ってください:\n\n```\n# fdisk -l\n```\n\nrom, loop, airoot などで終わるデバイスは無視してかまいません。\n\nArch Linux をインストールするデバイスには以下のパーティションが必要です:\n\n- ルートディレクトリ / のパーティション。\n- UEFI モードで起動するために: EFI システムパーティション。\n\nLVM, システム暗号化, RAID などを使う場合は、この段階で用意をします。\n\nfdisk や parted を使って、パーティションテーブルを変更します。例:\n\n```\n# fdisk /dev/the_disk_to_be_partitioned\n```\n\n- ディスクが表示されない場合は、ディスクコントローラが RAID モードになっていないことを確認してください。\n- 起動に使いたいディスクに 既に EFI システムパーティションが存在する 場合、新しく作らずに、代わりに既に存在するパーティションを使用してください。\n- スワップ領域は、ファイルシステムがサポートしている場合はスワップファイルで設定することもできます。\n\n"
    },
    {
      "title": "レイアウト例",
      "level": 4,
      "content": "Table content:\nマウントポイント | パーティション | パーティションタイプ | 容量\n/mnt/boot1 | /dev/efi_system_partition | EFI システムパーティション | 最低 300 MiB。複数のカーネルをインストールする場合は、最低 1 GiB。\n[スワップ] | /dev/swap_partition | Linux swap | 512 MiB 以上\n/mnt | /dev/root_partition | Linux x86-64 root (/) | デバイスの残り容量全て\n\n1. /mnt/efi のような 他のマウントポイント は、使用しているブートローダーがカーネルと initramfs イメージを root ボリュームから読み込むことができるときに限って可能です。Arch ブートプロセス#ブートローダー の警告も参照してください。\n\nTable content:\nマウントポイント | パーティション | パーティションタイプ | 容量\n[スワップ] | /dev/swap_partition | Linux swap | 512 MiB 以上\n/mnt | /dev/root_partition | Linux | デバイスの残り容量全て\n\n詳しくはパーティショニングを見てください。\n\n"
    },
    {
      "title": "パーティションのフォーマット",
      "level": 3,
      "content": "パーティションを作成したら、それぞれの新しく作成されたパーティションは適切なファイルシステムでフォーマットされる必要があります。詳しくはファイルシステム#ファイルシステムを作成するを参照して下さい。\n\n例えば、ext4 ファイルシステムを /dev/root_partition に作成するには、以下のコマンドを実行:\n\n```\n# mkfs.ext4 /dev/root_partition\n```\n\nスワップ 用のパーティションを作成した場合は、mkswap(8) で初期化してください:\n\n```\n# mkswap /dev/swap_partition\n```\n\nEFI システムパーティションを作成した場合、mkfs.fat(8) を使って FAT32 に フォーマット してください。\n\n```\n# mkfs.fat -F 32 /dev/efi_system_partition\n```\n\n"
    },
    {
      "title": "ファイルシステムのマウント",
      "level": 3,
      "content": "ルートボリュームを /mnt にマウントしてください。例えば、ルートボリュームが /dev/root_partition の場合:\n\n```\n# mount /dev/root_partition /mnt\n```\n\n他のパーティション(例えば /mnt/efi)については、マウントポイントを作成して、それぞれ対応するボリュームをマウントしてください。\n\nUEFI システムでは、EFI システムパーティションをマウントしてください。\n\n```\n# mount --mkdir /dev/efi_system_partition /mnt/boot\n```\n\nスワップ ボリュームを作成した場合、swapon(8) で有効化してください:\n\n```\n# swapon /dev/swap_partition\n```\n\n後で実行する genfstab(8) は、マウントされているファイルシステムやスワップ領域を認識します。\n\n"
    },
    {
      "title": "ミラーの選択",
      "level": 3,
      "content": "インストールされるパッケージは、 /etc/pacman.d/mirrorlist に定義されているミラーからダウンロードされます。ライブ環境では、インターネットに接続した後に、reflector が 20 個の最も最近同期された HTTPS ミラーを選択し、ダウンロード速度で並べ替えを行ってミラーリストを更新します。\n\n上の方に書かれているミラーほど、パッケージのダウンロードで優先されます。ファイルを確認して満足のいく内容か確認するとよいでしょう。もし不満があれば、ファイルを 編集 して、位置的に一番近いミラーをリストの一番上に移動することができますが、他の判断基準も考慮に入れるべきです。\n\n設定したミラーリストが pacstrap によって後のインストール時にコピーされます。そのため、正しく設定しておいた方がよいでしょう。\n\n"
    },
    {
      "title": "必須パッケージのインストール",
      "level": 3,
      "content": "pacstrap(8) スクリプトを使用して base パッケージと Linux カーネル、一般的なハードウェアのためのファームウェアをインストールしてください:\n\n```\n# pacstrap -K /mnt base linux linux-firmware\n```\n\n- linux は他のカーネルパッケージに置き換えることも、コンテナ にインストールする場合には完全に省略することもできます。\n- 仮想マシンまたはコンテナにインストールする場合、ファームウェアパッケージのインストールを省略できます。\n\nbase パッケージにはライブ環境に含まれているツールが全て含まれているわけではありません。したがって、ベースシステムを機能させるには別途以下のようなパッケージをインストールする必要があるかもしれません。\n\n- システムで使用するファイルシステムのユーザースペースユーティリティ\n- RAID や LVM パーティションにアクセスするためのユーティリティ\n- linux-firmware に含まれていないデバイスを動かすためのファームウェアファイル (例: サウンドカード のための sof-firmware)\n- ネットワークを設定するのに必要なソフトウェア (例: ネットワークマネージャーや DHCP クライアント)\n- テキストエディタ\n- man や info ページのドキュメントを読むためのパッケージ: man-db, man-pages, texinfo\n\n他のパッケージやグループを インストール したい場合、上記の pacstrap コマンドの後ろに（スペースで区切って）パッケージ名を追加してください。また、chroot を実行した後に pacman コマンドでインストールすることも可能です。ライブ環境に含まれているパッケージと比較するには pkglist.x86_64.txt を見てください。\n\n"
    },
    {
      "title": "fstab の生成",
      "level": 3,
      "content": "以下のコマンドを実行して fstab を生成してください (UUID を使う場合は -U オプション、ラベルを使う場合は -L オプションのどちらかを指定します):\n\n```\n# genfstab -U /mnt >> /mnt/etc/fstab\n```\n\n作成された /mnt/etc/fstab を確認して、問題があれば 編集 してください。\n\n"
    },
    {
      "title": "chroot",
      "level": 3,
      "content": "以下のコマンドを実行して、新しくインストールしたシステムに chroot します:\n\n```\n# arch-chroot /mnt\n```\n\n"
    },
    {
      "title": "タイムゾーン",
      "level": 3,
      "content": "以下のコマンドを実行して、タイムゾーンを設定してください(例えば、日本の場合は Region/City を Asia/Tokyo で置き換えてください):\n\n```\n# ln -sf /usr/share/zoneinfo/Region/City /etc/localtime\n```\n\nhwclock(8) を実行して /etc/adjtime を生成してください。\n\n```\n# hwclock --systohc\n```\n\nこのコマンドは、ハードウェアクロックが UTC に設定されていると仮定します。詳しくは時刻#時刻系を見てください。\n\n"
    },
    {
      "title": "ローカリゼーション",
      "level": 3,
      "content": "/etc/locale.gen を 編集 して、en_US.UTF-8 UTF-8 と他の使用する ロケール (例: ja_JP.UTF-8 UTF-8) をアンコメントします。次のコマンドを実行してロケールを生成してください:\n\n```\n# locale-gen\n```\n\nlocale.conf(5) ファイルを 作成 して、同じように LANG 環境変数を設定 します:\n\n```\n/etc/locale.conf\n```\n\n```\nLANG=en_US.UTF-8\n```\n\nコンソールキーマップを設定している場合は、vconsole.conf(5) に変更を永続化します:\n\n```\n/etc/vconsole.conf\n```\n\n```\nKEYMAP=de-latin1\n```\n\n"
    },
    {
      "title": "ネットワーク設定",
      "level": 3,
      "content": "ホストネームファイルを 作成 してください:\n\n```\n/etc/hostname\n```\n\n```\nmyhostname\n```\n\n新しくインストールされた環境でネットワーク設定を完了させてください。必要に応じて、適切なネットワーク管理ソフトウェアをインストールする必要があります。\n\n"
    },
    {
      "title": "Initramfs",
      "level": 3,
      "content": "pacstrap でカーネルパッケージをインストールしたときに mkinitcpio が実行されているため、普通は新しい initramfs の作成は必要ありません。\n\nLVM, システム暗号化, RAID 環境などであれば、 mkinitcpio.conf(5) を編集して以下のコマンドで initramfs を再生成してください:\n\n```\n# mkinitcpio -P\n```\n\n"
    },
    {
      "title": "Root パスワード",
      "level": 3,
      "content": "root パスワードを設定します:\n\n```\n# passwd\n```\n\n"
    },
    {
      "title": "ブートローダー",
      "level": 3,
      "content": "Linux に対応しているブートローダーを選択してインストールしてください。Intel または AMD の CPU を使っている場合はマイクロコードのアップデートを有効にしてください。\n\n"
    },
    {
      "title": "再起動",
      "level": 2,
      "content": "chroot 環境から抜けるには、exit と打つか、Ctrl+d を押します。\n\nまた、任意で /mnt にマウントした全てのパーティションを手動でアンマウントするには、 umount -R /mnt を実行します。「ビジー」状態のパーティションを見つけて、 fuser(1) で原因を探すことができます。\n\nそして reboot と入力してマシンを再起動してください。まだマウントされている全てのパーティションは systemd によって自動でアンマウントされます。忘れずにインストールメディアを取り除いて、root アカウントで新しいシステムにログインします。\n\n"
    },
    {
      "title": "インストール後",
      "level": 2,
      "content": "システム管理の方法やインストール後のチュートリアルは一般的な推奨事項を参照 (非特権ユーザーアカウントの作成、グラフィカルユーザーインターフェイス、サウンド、タッチパッドなど)。\n\nあなたの興味を引くであろうアプリケーションの一覧は、アプリケーション一覧を参照。\n\n"
    }
  ]
}
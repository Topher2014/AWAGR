{
  "title": "Расширенный формат",
  "url": "https://wiki.archlinux.org/title/%D0%A0%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%BD%D1%8B%D0%B9_%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%82",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Минимальная физическая единица хранения данных на жёстком диске (HDD) называется сектор. На твердотельных накопителях (SSD) его аналогом является страница.[1] Прошивки накопителей абстрагируют физические сектора с помощью логических секторов, с которыми могут работать программы. Размер сектора соответствует размеру наименьшей адресуемой единицы на диске.\n\nРазные «слои» (устройство / стековые блочные устройства / файловые системы) должны использовать один и тот же размер сектора для эффективной работы. Если размеры сектора не будут совпадать, будет выполняться преобразование из секторов файловой системы в физические сектора, что может снизить производительность.\n\nТекущие сообщаемые устройством размеры физического и логического секторов можно узнать несколькими способами (однако сообщаемый размер физического сектора может отличаться от реального, особенно на NVMe-накопителях). Например, с помощью lsblk:\n\n```\n$ lsblk -td\n```\n\n```\nNAME    ALIGNMENT MIN-IO OPT-IO PHY-SEC LOG-SEC ROTA SCHED       RQ-SIZE  RA WSAME\nsda             0   4096      0    4096    4096    1 mq-deadline      64 128    0B\nnvme1n1         0   4096      0    4096    4096    0 none           1023 128    0B\nnvme0n1         0   4096      0    4096    4096    0 none           1023 128    0B\n```\n\nВ столбце PHY-SEC указан размер физического сектора, а в LOG-SEC — логического.\n\nДругой способ — с помощью обращения к sysfs:\n\n```\n$ cat /sys/class/block/устройство/queue/physical_block_size\n$ cat /sys/class/block/устройство/queue/logical_block_size\n```\n\nИнформация о размерах секторов также есть в выводе программ fdisk, smartctl и hdparm.\n\n"
    },
    {
      "title": "Изменение размера сектора",
      "level": 2,
      "content": "Некоторые накопители NVMe и «корпоративные» жёсткие диски SATA поддерживают изменение сообщаемого ими размера сектора с помощью стандартных команд NVMe (Format NVM из NVM Command Set Specification 1.0 или новее) или (SET SECTOR CONFIGURATION EXT from ATA Command Set - 4 или новее) соответственно. На жёстких дисках при этом изменяется логический размер сектора так, чтобы он соответствовал физическому размеру сектора для оптимальной производительности, а на NVMe SSD можно изменить как логический, так и физический размер сектора.\n\nТвердотельные накопители SATA, как правило, не поддерживают изменение размера сектора. Исключение составляют некоторые Intel SATA SSD, которые могут изменять сообщаемый ими физический размер сектора, но не логический.[2] Смотрите раздел #Intel.\n\nИзменение размера сектора диска — сложный процесс, требующий низкоуровневого форматирования. В качестве альтернативы можно вручную указать нужный размер сектора при создании файловых систем на диске для достижения оптимальной производительности. Смотрите разделы #dm-crypt и #Файловые системы.\n\n"
    },
    {
      "title": "Жёсткие диски Advanced Format",
      "level": 3,
      "content": "Чтобы узнать, можно ли изменить размер сектора жёсткого диска Advanced Format, можно использовать hdparm:\n\n```\n# hdparm -I /dev/sdX | grep 'Sector size:'\n```\n\nНа дисках Advanced Format, в Sector Configuration Log которых указано несколько логических размеров секторов, будет показан их список:\n\n```\nLogical  Sector size:                   512 bytes [ Supported: 512 4096 ]\n        Physical Sector size:                  4096 bytes\n```\n\nЖёсткие диски, не поддерживающие несколько изменяемых размеров логических секторов, просто сообщают текущие размеры секторов. Например, диск Advanced Format 512e:\n\n```\nLogical  Sector size:                   512 bytes\n        Physical Sector size:                  4096 bytes\n```\n\nДля достижения оптимальной производительности на дисках такого типа убедитесь, что #dm-crypt или #Файловые системы имеют размер блока не менее 4096 байт и что соответствующие разделы выровнены по физическому размеру сектора.\n\nДиск Advanced Format 4Kn:\n\n```\nLogical  Sector size:                  4096 bytes\n        Physical Sector size:                  4096 bytes\n```\n\nДиски 4Kn уже изначально имеют оптимальную конфигурацию и не нуждаются в особом внимании при разметке разделов и форматировании. Их можно просто использовать как есть.\n\nЕсли жёсткий диск SATA поддерживает несколько размеров логических секторов и опциональную ATA-команду SET SECTOR CONFIGURATION EXT (например, диски Seagate, заявляющие поддержку FastFormat), то для переключения между поддерживаемыми размерами логических секторов можно использовать hdparm. Чтобы установить значение 4096 байт, то есть 4Kn, выполните команду:\n\n```\n# hdparm --set-sector-size 4096 --please-destroy-my-drive /dev/sdX\n```\n\nПосле этого hdparm должен сообщить, что размер логического сектора составляет 4096 байт:\n\n```\n# hdparm -I /dev/sdX | grep 'Sector size:'\n```\n\n```\nLogical  Sector size:                  4096 bytes [ Supported: 512 4096 ]\n        Physical Sector size:                  4096 bytes\n```\n\n"
    },
    {
      "title": "NVMe",
      "level": 3,
      "content": "Большинство твердотельных накопителей (SSD) сообщают логический размер 512 байт, хотя физически они используют более крупные блоки — 4 КиБ, 8 КиБ или даже больше.\n\nЧтобы проверить размер логического блока (formatted logical block address size, FLBAS) на устройстве NVMe, используйте команду Identify Namespace:\n\n```\n# nvme id-ns -H /dev/nvme0n1 | grep \"Relative Performance\"\n```\n\n```\nLBA Format  0 : Metadata Size: 0   bytes - Data Size: 512 bytes - Relative Performance: 0x2 Good (in use)\nLBA Format  1 : Metadata Size: 0   bytes - Data Size: 4096 bytes - Relative Performance: 0x1 Better\n```\n\n- Metadata Size — это количество дополнительных байт метаданных, связанных с адресом логического блока (LBA). Это не очень хорошо поддерживается в Linux, поэтому лучше выбрать формат со значением 0.\n- Relative Performance — указывает, какой формат обеспечит сниженную (degraded), хорошую (good), получше (better) или наилучшую (best) производительность.\n\nsmartctl также умеет показывать поддерживаемые размеры, но не предоставляет удобных для пользователя описаний:\n\n```\n# smartctl -c /dev/nvme0n1\n```\n\n```\n...\nSupported LBA Sizes (NSID 0x1)\nId Fmt  Data  Metadt  Rel_Perf\n 0 +     512       0         2\n 1 -    4096       0         1\n```\n\nДля изменения размера сектора выполните nvme format с указанием предпочтительного значения в параметре --lbaf:\n\n```\n# nvme format --lbaf=1 /dev/nvme0n1\n```\n\n```\nYou are about to format nvme0n1, namespace 0x1.\nWARNING: Format may irrevocably delete this device's data.\nYou have 10 seconds to press Ctrl-C to cancel this operation.\n\nUse the force [--force] option to suppress this warning.\nSending format operation ...\nSuccess formatting namespace:1\n```\n\nЭто должно занять всего несколько секунд.\n\nНекоторые старые накопители (до 2020 года) блокируют команду Format NVM, если прошивка системы отправляет им нестандартную команду «security freeze» после этапа POST.[3][4] Если nvme format не работает, попробуйте перевести систему в ждущий режим (убедитесь, что используется именно режим S3, а не S0ix) и выполнить nvme format после пробуждения системы.[5][6]\n\n"
    },
    {
      "title": "Использование программ производителя",
      "level": 3,
      "content": "Если перечисленные выше универсальные инструменты не позволяют изменить размер сектора, возможно, его можно изменить с помощью инструмента от производителя диска.\n\n"
    },
    {
      "title": "Intel",
      "level": 4,
      "content": "Для Intel используйте Intel Memory and Storage (MAS) Tool (intel-mas-cli-toolAUR) с опцией -set PhysicalSectorSize=4096.\n\n"
    },
    {
      "title": "Seagate",
      "level": 4,
      "content": "Для Seagate используйте openseachestAUR.\n\nПросканируйте все диски, чтобы найти нужный, и выведите информацию о нём:\n\n```\n# openSeaChest_Basics --scan\n# openSeaChest_Basics -d /dev/sdX -i\n```\n\nПроверьте серийный номер.\n\nПроверьте размеры логических блоков, поддерживаемые диском:\n\n```\n# openSeaChest_Format -d /dev/sdX --showSupportedFormats\n```\n\nЕсли в списке есть 4096, вы можете изменить размер логического сектора на него следующим образом:\n\n```\n# openSeaChest_Format -d /dev/sdX --setSectorSize=4096 --confirm this-will-erase-data\n```\n\nЭто займёт несколько минут, после чего ваш диск будет использовать размер сектора 4K.\n\n"
    },
    {
      "title": "Выравнивание разделов",
      "level": 2,
      "content": "Правильное выравнивание разделов позволяет избежать лишних циклов read-modify-write. Типичной практикой для персональных компьютеров является выравнивание начала и размера каждого раздела по числам, кратным 1 МиБ (1 048 576 байт). Это значение очень удобно, так как делится на все часто используемые размеры страницы и блока — 1 МиБ, 512 КиБ, 128 КиБ, 4 КиБ и 512 байт.\n\n- fdisk, cfdisk и sfdisk выполняют выравнивание автоматически.\n- gdisk и cgdisk выполняют выравнивание автоматически. sgdisk по умолчанию выравнивает только начала разделов. Используйте опцию -I/--align-end для выравнивания размеров разделов.\n- Parted выравнивает только начало раздела, но не размер. При создании разделов обязательно указывайте конец раздела в мебибайтах или более крупной двоичной единице МЭК.\n\n- sgdisk по умолчанию выравнивает только начала разделов. Используйте опцию -I/--align-end для выравнивания размеров разделов.\n\n"
    },
    {
      "title": "dm-crypt",
      "level": 2,
      "content": "В Cryptsetup 2.4.0 luksFormat автоматически определяет оптимальный размер сектора шифрования для формата LUKS2 [8].\n\nОднако, чтобы это работало, устройство должно сообщать правильный размер сектора по умолчанию; смотрите раздел #Изменение размера сектора.\n\nПосле использования cryptsetup luksFormat вы можете проверить размер сектора, используемого томом LUKS2, с помощью команды\n\n```\n# cryptsetup luksDump устройство | grep sector\n```\n\nЕсли размер сектора оказался неверный, вы можете принудительно создать контейнер LUKS2, указав размер сектора 4K и оставив другие параметры со значениями по умолчанию:\n\n```\n# cryptsetup luksFormat --sector-size=4096 устройство\n```\n\nКоманда выдаст ошибку, если запрашиваемый размер не соответствует вашему устройству:\n\n```\n# cryptsetup luksFormat --sector-size 4096 устройство\n(...)\nVerify passphrase:\nDevice size is not aligned to requested sector size.\n```\n\nЕсли вы уже зашифровали устройство с неправильным размером сектора, устройство можно перешифровать командой:\n\n```\n# cryptsetup reencrypt --sector-size=4096 устройство\n```\n\n"
    },
    {
      "title": "Файловые системы",
      "level": 2,
      "content": "mkfs.btrfs(8), mkfs.jfs(8), mkfs.nilfs2(8), mkfs.reiserfs(8) и mkswap(8) по умолчанию используют размер сектора 4096 байт.\n\nmkfs.ext4(8) по умолчанию использует размер сектора 1024 байт для файловых систем меньше чем 512 МиБ и 4096 байт для 512 МиБ и больше.\n\nmkfs.xfs(8) по умолчанию использует размер сектора 512 байт, но будет использовать 4096 для 512e и 4Kn дисков.\n\nmkfs.f2fs(8), mkfs.fat(8), mkfs.ntfs(8) и mkfs.udf(8) используют логический размер сектора, сообщаемый устройством — то есть 512 байт для 512e и 4096 байт для 4Kn дисков.\n\nzpool-create(8) (из ZFS[ссылка недействительна: раздел не найден]) по умолчанию использует размер сектора 512 (2⁹) байт, для использования другого размера его нужно явно указать во время создания пула с помощью параметра -o ashift=12 (2¹², 4096 байт).\n\nЕсли накопитель не сообщает правильный размер сектора, можно явно указать нужный размер сектора при форматировании.\n\nВ частности, для дисков с черепичной магнитной записью (Shingled Magnetic Recording, SMR), управляемых прошивкой, использование логического размера сектора 512 байт, если их физический размер сектора составляет 4096 байт, приводит к серьёзным негативным последствиям. Эти диски имеют зоны записи с разной производительностью, и перераспределение выполняется во время простоя, но во время активной записи (например, при ресинхронизации RAID, резервном копировании, записи множества небольших файлов, rsync и т. д.) другой размер сектора файловой системы может снизить скорость записи до единиц МиБ/с, так как более производительные зоны записи заканчиваются, а слой трансляции секторов перегружается.\n\nПримеры явной установки размера сектора 4096 байт:\n\n- ext4: # mkfs.ext4 -b 4096 /dev/устройство\n- XFS: # mkfs.xfs -s size=4096 /dev/устройство\n- FAT: # mkfs.fat -S 4096 /dev/устройство\n- NTFS-3G: # mkfs.ntfs -Q -s 4096 /dev/устройство\n- UDF: # mkfs.udf -b 4096 /dev/устройство\n- ZFS[ссылка недействительна: раздел не найден]: # zpool create -o ashift=12 имя-пула raidz устройство0 … устройствоN\n\n```\n# mkfs.ext4 -b 4096 /dev/устройство\n```\n\n```\n# mkfs.xfs -s size=4096 /dev/устройство\n```\n\n```\n# mkfs.fat -S 4096 /dev/устройство\n```\n\n```\n# mkfs.ntfs -Q -s 4096 /dev/устройство\n```\n\n```\n# mkfs.udf -b 4096 /dev/устройство\n```\n\n```\n# zpool create -o ashift=12 имя-пула raidz устройство0 … устройствоN\n```\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Расширенный формат Western Digital: начинается переход на сектора 4K\n- Белая книга под названием \"Advanced Format Technology.\"\n- Несоблюдение правил обращения с жёстким диском приводит к ухудшению производительности чтения/записи. Смотрите эту статью для конкретных примеров.\n\n"
    }
  ]
}
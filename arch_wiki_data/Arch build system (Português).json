{
  "title": "Arch build system (Português)",
  "url": "https://wiki.archlinux.org/title/Arch_build_system_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Padrões de empacotamento do Arch\n- Arch User Repository\n- Criando pacotes\n- Kernel/Arch build system\n- makepkg\n- Repositórios oficiais\n- pacman\n- PKGBUILD\n- Aplicação de patch em pacotes\n\nO sistema de compilação do Arch (em inglês, Arch build system – ABS) é um sistema tipo portação para compilar e empacotar software a partir do código-fonte. Enquanto o pacman é a ferramenta especializada do Arch para gerenciamento de pacote binário, o sistema de compilação do Arch é uma coleção de ferramentas para compilar o fonte em pacotes .pkg.tar.zst instaláveis.\n\nPorts é um sistema usado por *BSD para automatizar o processo de compilação de software a partir do código-fonte. O sistema usa um port para baixar, descompactar, patch, compilar e instalar o software dado. Um port é meramente um pequeno diretório no computador do usuário, nomeado pelo software correspondente para ser instalado, que contém uns poucos arquivos com as instruções para compilar e instalar o software a partir dos fontes. Isso torna a instalação de softwares tão simples quanto digitar make ou make install clean dentro de diretório de portação.\n\nO sistema de compilação do Arch é baseado um conceito similar. Ele compreende uma coleção de repositórios git para cada pacote disponível no Arch Linux. Cada repositório contém um arquivo PKGBUILD (e às vezes outros arquivos) e não contém a fonte do software nem o binário. Ao executar o makepkg dentro de um diretório, as fontes do software são baixadas, o software é compilado e empacotado no diretório de compilação. Então, você pode usar pacman para instalar o pacote.\n\n"
    },
    {
      "title": "Conjunto de ferramentas",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nO sistema de compilação do Arch inclui e depende de vários outros componentes e ferramentas que são usadas no processo de compilação de pacotes a partir da fonte:\n\n"
    },
    {
      "title": "Estrutura de repositórios",
      "level": 3,
      "content": "Os repositórios oficiais core, extra, core-testing e extra-testing estão hospedados na instância GitLab do Arch Linux.\n\nCada pacote tem seu próprio repositório no espaço de nomes archlinux/packaging/packages. Cada repositório contém o PKGBUILD e os arquivos usados nas compilações oficiais. Além disso, alguns arquivos que são usados pelos desenvolvedores para o processo de compilação podem ser encontrados lá.\n\nPor exemplo, a árvore para acl se parece com isso:\n\n```\nacl\n├── keys\n│   └── pgp\n│       ├── 259B3792B3D6D319212CC4DCD5BF9FEB0313653A.asc\n│       ├── 600CD204FBCEA418BD2CA74F154343260542DF34.asc\n│       └── B902B5271325F892AC251AD441633B9FE837F581.asc\n└── PKGBUILD\n```\n\nO código-fonte do pacote não está presente no diretório ABS. Em vez disso, o PKGBUILD contém uma URL que vai baixar o código-fonte quando o pacote é compilado.\n\n"
    },
    {
      "title": "Casos de uso",
      "level": 2,
      "content": "O sistema de compilação do Arch automatiza certas tarefas relacionadas à compilação a partir do código-fonte. Seus casos de uso são:\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n- Em qualquer caso que você queria compilar ou recompilar um pacote\n- Make e instalar novos pacotes de fontes de software para os quais nenhum pacote está instalado ainda (veja Criando pacotes)\n- Personalizar pacotes existentes para atender suas necessidades (por exemplo, habilitar ou desabilitar opções, patching)\n- Recompilar todo o seu sistema usando suas flags de compilador, \"à la FreeBSD\"\n- Compilar e instalar, sem interferências, seu próprio kernel personalizado (veja Compilação de kernel)\n- Fazer com que módulos de kernel funcionem com um kernel personalizado\n- Compilar e instalar facilmente uma versão mais nova, antiga, beta ou de desenvolvimento de um pacote do Arch editando o número de versão no PKGBUILD\n\nO ABS automatiza determinadas tarefas relacionadas à compilação a partir do código-fonte. Como alternativa ao uso do ABS, você pode executar essas tarefas manualmente.\n\n"
    },
    {
      "title": "Obtendo fonte de PKGBUILD",
      "level": 3,
      "content": "Para obter o arquivo PKGBUILD necessário para compilar um certo pacote a partir do fonte, você pode usar a ferramenta pkgctl ou usar diretamente o Git.\n\n"
    },
    {
      "title": "Usando a ferramenta pkgctl",
      "level": 4,
      "content": "Como pré-condição, instale o pacote devtools. pkgctl é uma ferramenta que trabalha com arquivos-fonte de compilação para pacotes do Arch Linux usando Git.\n\nPara clonar o repositório git com os arquivos de compilação mais recentes usando pkgctl, o seguinte comando é usado:\n\n```\n$ pkgctl repo clone pkgname\n```\n\nObserve que aqui, os arquivos-fonte de compilação referem-se a PKGBUILD, possivelmente com alguns outros arquivos necessários, como chaves. Ou seja, os arquivos essenciais são necessários para o sistema de compilação do Arch Linux. Ele não se refere aos arquivos-fonte do pacote que foram escritos pela equipe que criou o pacote, como arquivos C ou Python.\n\nIsso fornecerá a você não apenas os arquivos de compilação dos fontes atuais, mas também suas versões anteriores. Além disso, você pode usar todos os outros comandos git para verificar uma versão mais antiga do pacote ou rastrear alterações personalizadas.\n\nSe você deseja obter uma versão específica de um pacote, pode usar algo como o seguinte:\n\n```\n$ pkgctl repo clone --switch=\"2:1.19.5-1\" go\n```\n\nLeia pkgctl-repo-clone(1) para mais informações e para os outros comandos disponíveis.\n\n"
    },
    {
      "title": "Usando o git diretamente",
      "level": 4,
      "content": "Use o seguinte comando git para clonar um pacote:\n\n```\n$ git clone https://gitlab.archlinux.org/archlinux/packaging/packages/pkgname.git\n```\n\nPor exemplo, para copiar os arquivos de compilação do Apache:\n\n```\n$ git clone https://gitlab.archlinux.org/archlinux/packaging/packages/apache.git\n```\n\n"
    },
    {
      "title": "Compilar pacote",
      "level": 3,
      "content": "Configure o makepkg para compilar pacotes dos PKGBUILDs que você fez checkout, como explicado em makepkg (Português)#Configuração.\n\nEm seguida, copie o diretório contendo o PKGBUILD que você deseja modificar para uma nova localização. Faça as modificações desejadas lá e use makepkg, como descrito em makepkg (Português)#Uso, para criar e instalar o novo pacote.\n\n"
    },
    {
      "title": "Preserve pacotes modificados",
      "level": 3,
      "content": "Atualizar o sistema com o pacman vai substituir um pacote modificado com o pacote de menos nome dos repositórios oficiais. Veja as instruções a seguir para como evitar isso.\n\nInsira um vetor de grupo no PKGBUILD, e adicione o pacote para um grupo chamado modified.\n\n```\nPKGBUILD\n```\n\n```\ngroups=('modified')\n```\n\nAdicione esse grupo à seção IgnoreGroup no /etc/pacman.conf.\n\n```\n/etc/pacman.conf\n```\n\n```\nIgnoreGroup = modified\n```\n\nSe novas versões estiverem disponíveis nos repositórios oficiais durante uma atualização de sistema, pacman emite uma nota de que ele está ignorando essa atualização porque ele está na seção IgnoreGroup. Neste ponto, o pacote modificado deve ser recompilado para evitar atualizações parciais.\n\n"
    },
    {
      "title": "Outras ferramentas",
      "level": 2,
      "content": "- pbget - obtém PKGBUILDs de pacotes individuais diretamente da interface web. Inclui suporte ao AUR.\n\n"
    }
  ]
}
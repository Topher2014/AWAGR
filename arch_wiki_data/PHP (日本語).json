{
  "title": "PHP (日本語)",
  "url": "https://wiki.archlinux.org/title/PHP_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "PHP は広く使われている多目的のスクリプト言語で、特にウェブ開発に適しており HTML に埋め込むことができます。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 起動\n- 3 設定\n- 4 拡張 4.1 gd 4.2 imagemagick 4.2.1 AUR を使う 4.2.2 pecl を使う 4.3 pthreads 4.4 PCNTL 4.5 MySQL/MariaDB 4.6 Redis 4.7 PostgreSQL 4.8 Sqlite 4.9 XDebug 4.10 IMAP\n- 5 キャッシュ 5.1 OPCache 5.2 APCu\n- 6 開発ツール 6.1 Aptana Studio 6.2 Eclipse PDT 6.3 Komodo 6.4 Netbeans 6.5 PhpStorm 6.6 Zend Studio\n- 7 コマンドラインツール 7.1 Composer 7.1.1 ユーザー全体のインストールの許可 7.2 Box 7.3 PDepend 7.4 PHP Coding Standards Fixer 7.5 PHP-CodeSniffer 7.6 phpcov 7.7 phpDox 7.8 PHPLoc 7.9 PhpMetrics 7.10 phptok 7.11 PHPUnit 7.12 PHPUnit Skeleton Generator 7.13 Producer\n- 8 トラブルシューティング 8.1 PHP Fatal error: Class 'ZipArchive' not found 8.2 /etc/php/php.ini が適用されない 8.3 PHP Warning: PHP Startup: <module>: Unable to initialize module\n- 9 参照\n\n- 4.1 gd\n- 4.2 imagemagick 4.2.1 AUR を使う 4.2.2 pecl を使う\n- 4.3 pthreads\n- 4.4 PCNTL\n- 4.5 MySQL/MariaDB\n- 4.6 Redis\n- 4.7 PostgreSQL\n- 4.8 Sqlite\n- 4.9 XDebug\n- 4.10 IMAP\n\n- 4.2.1 AUR を使う\n- 4.2.2 pecl を使う\n\n- 5.1 OPCache\n- 5.2 APCu\n\n- 6.1 Aptana Studio\n- 6.2 Eclipse PDT\n- 6.3 Komodo\n- 6.4 Netbeans\n- 6.5 PhpStorm\n- 6.6 Zend Studio\n\n- 7.1 Composer 7.1.1 ユーザー全体のインストールの許可\n- 7.2 Box\n- 7.3 PDepend\n- 7.4 PHP Coding Standards Fixer\n- 7.5 PHP-CodeSniffer\n- 7.6 phpcov\n- 7.7 phpDox\n- 7.8 PHPLoc\n- 7.9 PhpMetrics\n- 7.10 phptok\n- 7.11 PHPUnit\n- 7.12 PHPUnit Skeleton Generator\n- 7.13 Producer\n\n- 7.1.1 ユーザー全体のインストールの許可\n\n- 8.1 PHP Fatal error: Class 'ZipArchive' not found\n- 8.2 /etc/php/php.ini が適用されない\n- 8.3 PHP Warning: PHP Startup: <module>: Unable to initialize module\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "php パッケージをインストールしてください。\n\n古いバージョンの PHP は php53AUR、 php55AUR、 php56AUR、 php70AUR、 php71AUR、 php72AUR、php73AUR、php74AUR、php80AUR、php81AUR および php82AUR.パッケージなどが AUR に存在します。これらは openSUSE Build Service を使ったバイナリビルドです。\n\n"
    },
    {
      "title": "起動",
      "level": 2,
      "content": "PHP はスタンドアロンで実行できますが、通常は Web サーバで使用します。そのためには、追加のパッケージをインストールして、設定ファイルを編集する必要があります。一般的な設定については、Apache HTTP Server、 nginx、 lighttpd および Hiawatha を参照してください。PHP スクリプトを 純粋な CGI として実行するには、php-cgi パッケージが必要です。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "メインの PHP 設定ファイルは /etc/php/php.ini にあり豊富なドキュメントが揃っています。\n\n- /etc/php/php.ini には以下のようにタイムゾーンを設定することが推奨されています (タイムゾーンのリスト):\n\n```\ndate.timezone = Asia/Tokyo\n```\n\n- PHP のコードをデバッグするためにエラーを表示したい場合、/etc/php/php.ini の display_errors を On に変更してください:\n\n```\ndisplay_errors=On\n```\n\n- open_basedir ディレクティブは、PHP がアクセスできるパスを制限することで、セキュリティを向上させますが、その代わりに通常のプログラムの実行に支障をきたす可能性があります。PHP 7.0 以降、このディレクティブは上流にあわせるかたちでデフォルトでは設定されていないため、使用したいユーザーは手動で設定する必要があります。すべてのシンボリックリンクは解決されるので、シンボリックリンクでこの制限を回避することはできません。nextcloud や phpmyadmin のような特定のウェブアプリのためのデフォルトの Arch パッケージは、 /usr/share/webapps の下にウェブアプリをインストールし、/etc/webapps の下にそれらのウェブアプリのための実際の設定ファイルを示すシンボリックリンクを作成します。そのため、open_basedir を設定している場合は、これらのフォルダが両方とも open_basedir にある事を確認してください。これは他の場所にインストールされたウェブアプリの場合は当然異なります。例:\n\n```\nopen_basedir = /srv/http/:/var/www/:/home/:/tmp/:/var/tmp/:/var/cache/:/usr/share/pear/:/usr/share/webapps/:/etc/webapps/\n```\n\n"
    },
    {
      "title": "拡張",
      "level": 2,
      "content": "よく使われる PHP の拡張は公式リポジトリに入っています:\n\n```\n# pacman -Ss php-\n```\n\nAUR にある PHP の拡張のパッケージには名前の前に php-* または php56-* が付きます。例: php-imagick, php-redis, php56-mcryptAUR。\n\n"
    },
    {
      "title": "gd",
      "level": 3,
      "content": "php-gd を使うには /etc/php/php.ini の次の行をアンコメント:\n\n```\nextension=gd\n```\n\n"
    },
    {
      "title": "imagemagick",
      "level": 3,
      "content": "imagemagick と PHP の拡張ライブラリをインストールしてから、PHP の設定に extension=imagick を追加することで使うことができます。\n\n"
    },
    {
      "title": "AUR を使う",
      "level": 4,
      "content": "php-imagick をインストールしてください。imagemagick も依存パッケージとしてインストールされます。パッケージをインストールすると /etc/php/conf.d/imagick.ini が作成されるため自動的に PHP の設定で拡張が有効になります。\n\n"
    },
    {
      "title": "pecl を使う",
      "level": 4,
      "content": "先に imagemagick をインストールしてください。pecl バイナリは php-pearAUR パッケージに含まれています。pecl をインストールしたら、以下のコマンドで imagemagick の PHP 拡張をインストール:\n\n```\n# pecl install imagick\n```\n\nそして以下のコマンドで拡張を有効化:\n\n```\n# echo 'extension=imagick'>/etc/php/conf.d/imagick.ini\n```\n\n"
    },
    {
      "title": "pthreads",
      "level": 3,
      "content": "POSIX マルチスレッディングを使いたい場合、pthreads 拡張が必要になります。pecl を使って pthreads (http://pecl.php.net/package/pthreads) をインストールするにはスレッドセーフティフラグ --enable-maintainer-zts を付けてコンパイルされた PHP を使わなくてはなりません。元のパッケージにフラグをつけて再ビルドするのが一番簡単な方法になります。\n\n手順は PHP pthreads 拡張のページに記載されています。\n\n"
    },
    {
      "title": "PCNTL",
      "level": 3,
      "content": "PCNTL を使うことでサーバーサイドのマシンにプロセスを直接作成することができるようになります。これでやりたいことがやれるようになる一方、状況をぐちゃぐちゃにするパワーを PHP に与えることにもなります。そのため、他の便利なエクステンションと同じようにロードすることはできない PHP エクステンションです。この拡張を有効にするには (デフォルトでは有効になっていません) PCNTL を PHP に組み込んでコンパイルする必要があります。\n\n"
    },
    {
      "title": "MySQL/MariaDB",
      "level": 3,
      "content": "MariaDB に書かれている手順に従って MySQL/MariaDB をインストール・設定ください。\n\n/etc/php/php.ini の 以下の行 をアンコメントします:\n\n```\nextension=pdo_mysql\nextension=mysqli\n```\n\nウェブスクリプト用に権限を抑えた MySQL ユーザーを追加することができます。また、/etc/mysql/my.cnf を編集して skip-networking 行をアンコメントすると MySQL サーバーはローカルホストからしかアクセスできなくなります。変更を適用するには MySQL の再起動が必要です。\n\n"
    },
    {
      "title": "Redis",
      "level": 3,
      "content": "Redis をインストール・設定してから php-redis または phpredis-gitAUR パッケージをインストールしてください。\n\nそれからパッケージの行をアンコメントしてください。例: /etc/php/conf.d/redis.ini。\n\n"
    },
    {
      "title": "PostgreSQL",
      "level": 3,
      "content": "PostgreSQL をインストール・設定したら、php-pgsql パッケージをインストールして /etc/php/php.ini の以下の行をアンコメントしてください:\n\n```\nextension=pdo_pgsql\nextension=pgsql\n```\n\n"
    },
    {
      "title": "Sqlite",
      "level": 3,
      "content": "Sqlite をインストール・設定したら、php-sqlite パッケージをインストールして /etc/php/php.ini の以下の行をアンコメントしてください:\n\n```\nextension=pdo_sqlite\nextension=sqlite3\n```\n\n"
    },
    {
      "title": "XDebug",
      "level": 3,
      "content": "XDebug は var_dump() 関数による php コードのデバッグを楽にします。xdebug をインストールして /etc/php/conf.d/xdebug.ini の以下の行をアンコメントしてください:\n\n```\nzend_extension=xdebug\nxdebug.remote_enable=on\nxdebug.remote_host=127.0.0.1\nxdebug.remote_port=9000\nxdebug.remote_handler=dbgp\n```\n\n"
    },
    {
      "title": "IMAP",
      "level": 3,
      "content": "php-imap をインストールして /etc/php/php.ini の以下の行をアンコメントしてください:\n\n```\nextension=imap\n```\n\n"
    },
    {
      "title": "キャッシュ",
      "level": 2,
      "content": "PHP には2種類のキャッシュが存在します: opcode/bytecode キャッシュと userland/user data キャッシュです。両方を使うことでアプリケーションの速度を相当上げることができるため、できるかぎり有効にすることを推奨します。\n\n- Zend OPCache は opcode のキャッシュだけを行います。\n- APCu は userland のキャッシュだけを行います。\n\nキャッシュを最適化するために、両方を有効にしてください。以下の #OPCache と #APCu の両方を読むことで有効化できます。\n\n"
    },
    {
      "title": "OPCache",
      "level": 3,
      "content": "OPCache は標準の PHP ディストリビューションに付属しているため、OPCache は PHP 設定ファイルに以下の行を追加あるいはアンコメントするだけで有効化できます:\n\n```\n/etc/php/php.ini\n```\n\n```\nzend_extension=opcache\n```\n\nPHP のウェブサイトにある 公式エントリ に OPCache のオプションのリストや推奨される設定が載っています。\n\n"
    },
    {
      "title": "APCu",
      "level": 3,
      "content": "APCu は php-apcu パッケージでインストールできます。/etc/php/conf.d/apcu.ini の以下の行をアンコメントするか、以下の行を PHP 設定ファイルに追加することで有効にします:\n\n```\nextension=apcu\n```\n\nAPCu の作者は推奨される設定を 記述 しています:\n\n- apc.enabled=1 と apc.shm_size=32M は デフォルト値 なので設定しなくても問題ありません。\n- その一方 apc.ttl=7200 は 多少効果がある ようです。\n- 最後に apc.enable_cli=1 はマニュアルでは 非推奨 になっていますが、ownCloud などソフトウェアによっては必須です。\n\n"
    },
    {
      "title": "Aptana Studio",
      "level": 3,
      "content": "Aptana Studio は PHP でのプログラミングやウェブ開発に向いている IDE です。aptana-studioAUR パッケージでインストールできます。現在のバージョン (3.2.2) には PHP デバッガは含まれていません。\n\n"
    },
    {
      "title": "Eclipse PDT",
      "level": 3,
      "content": "Eclipse PDT は Eclipse の PHP バージョンです。eclipse-phpAUR パッケージでインストールできます。詳しくは Eclipse を参照。\n\nJavaScript サポートや DB クエリなどのプラグインも必要になるでしょう。\n\n"
    },
    {
      "title": "Komodo",
      "level": 3,
      "content": "Komodo は PHP+HTML+JavaScript の素晴らしい統合を提供する IDE です。Komodo Edit にはエディタだけが含まれています。komodo-editAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "Netbeans",
      "level": 3,
      "content": "PHP を含む多数の言語に対応した完全な IDE です。デバッグ・リファクタリング・コードテンプレート・自動補完・XML 機能・ウェブデザイン・開発機能 (CSS の自動補完機能や PHP/JavaScript コードのヒント) などの機能があります。netbeans パッケージでインストールしてください。\n\n"
    },
    {
      "title": "PhpStorm",
      "level": 3,
      "content": "JetBrains PhpStorm は JetBrains の IntelliJ IDEA プラットフォームで作られた商用・クロスプラットフォームの PHP 向け IDE です。phpstormAUR パッケージでインストールできます。あるいは phpstorm-eapAUR で30日間のトライアル版を使えます。Jetbrains からは教育用のフリーライセンスをもらうことが可能です [1]。\n\n"
    },
    {
      "title": "Zend Studio",
      "level": 3,
      "content": "Zend Studio は Eclipse ベースの公式 PHP IDE です。この IDE には自動補完・高度なコードフォーマット・WYSIWYG html エディタ・リファクタリング・db アクセスやバージョン管理の統合、さらに他の Eclipse プラグインで得ることができる Eclipse の機能全てが含まれています。AUR の zendstudioAUR パッケージでインストール可能です。\n\n"
    },
    {
      "title": "Composer",
      "level": 3,
      "content": "Composer は PHP の依存関係マネージャです。composer パッケージでインストールできます。\n\n"
    },
    {
      "title": "ユーザー全体のインストールの許可",
      "level": 4,
      "content": "現在のユーザーを使ってグローバルにパッケージをインストールするには (例: $ composer global require \"package/name\")、環境変数でデフォルトの場所を指定すると良いでしょう:\n\n```\nPATH=\"$HOME/.config/composer/vendor/bin:$PATH\"\n```\n\n"
    },
    {
      "title": "Box",
      "level": 3,
      "content": "Box は Phar をビルド・管理するためのアプリケーションです。php-boxAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "PDepend",
      "level": 3,
      "content": "PHP Depend (pdepend) は PHP のソフトウェアメトリクスツールです。pdependAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "PHP Coding Standards Fixer",
      "level": 3,
      "content": "PHP Coding Standards Fixer はコードを PSR-1 や PSR-2 コーディング規約にしたがって修正します。php-cs-fixerAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "PHP-CodeSniffer",
      "level": 3,
      "content": "PHP CodeSniffer は PHP, JavaScript, CSS ファイルをトークン化してコーディング規約に違反していないか確認します。php-codesnifferAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "phpcov",
      "level": 3,
      "content": "phpcov は PHP_CodeCoverage ライブラリのコマンドラインフロントエンドです。phpcovAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "phpDox",
      "level": 3,
      "content": "phpDox は PHP プロジェクトのドキュメントジェネレータです。API ドキュメントなどが生成できます。phpdoxAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "PHPLoc",
      "level": 3,
      "content": "PHPLoc は PHP プロジェクトのサイズを測定するツールです。phplocAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "PhpMetrics",
      "level": 3,
      "content": "PhpMetrics は PHP プロジェクトの様々なメトリクスを提供します。phpmetricsAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "phptok",
      "level": 3,
      "content": "phptok は PHP のソースコードファイルのトークンを素早くダンプできるツールです。phptokAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "PHPUnit",
      "level": 3,
      "content": "PHPUnit はプログラマー用の PHP テストフレームワークです。phpunitAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "PHPUnit Skeleton Generator",
      "level": 3,
      "content": "PHPUnit Skeleton Generator は実運用しているコードのクラスからテストクラスを生成したりその逆ができるツールです。phpunit-skeleton-generatorAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "Producer",
      "level": 3,
      "content": "Producer は PHP ライブラリパッケージを検証するコマンドラインの品質保証ツールです。producerAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "PHP Fatal error: Class 'ZipArchive' not found",
      "level": 3,
      "content": "zip エクステンションが有効になっていることを確認してください。\n\n```\n$ grep zip /etc/php/php.ini\n```\n\n```\nextension=zip\n```\n\n"
    },
    {
      "title": "/etc/php/php.ini が適用されない",
      "level": 3,
      "content": "php.ini が適用されない場合、ini ファイルの名前が使用している sapi に合わせて変更されています。例えば uwsgi を使っている場合、ファイルの名前は /etc/php/php-uwsgi.ini になり、cli を使っている場合 /etc/php/php-cli.ini になります。\n\n"
    },
    {
      "title": "PHP Warning: PHP Startup: <module>: Unable to initialize module",
      "level": 3,
      "content": "php を実行したときにこのエラーが表示される場合、モジュールのバージョンが古くなっています。PHP のコアやモジュールは全て互換性を保つようにメンテナンスされているので Arch Linux で発生するのは稀です。\n\nAUR からコンパイルしたモジュールを使用していると発生することがあります。/usr/lib/php/modules/ のファイルの日付をチェックして確認してください。\n\n修正するには、AUR を検索してモジュールにアップデートが来ていないか確認してください。\n\nもしモジュールがアップデートされていたら、AUR パッケージの Out of Date フラグを立ててください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- PHP 公式ウェブサイト\n\n"
    }
  ]
}
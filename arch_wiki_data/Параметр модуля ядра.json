{
  "title": "Параметр модуля ядра",
  "url": "https://wiki.archlinux.org/title/%D0%9F%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80_%D0%BC%D0%BE%D0%B4%D1%83%D0%BB%D1%8F_%D1%8F%D0%B4%D1%80%D0%B0",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Отладка загрузки\n- Ядро\n- Параметры ядра\n- Compile kernel module\n\nМодули ядра — это отдельные кусочки кода, которые могут быть загружены в ядро и выгружены из ядра по мере необходимости. Они расширяют функциональность ядра без необходимости перезагрузки системы.\n\nЧтобы создать модуль ядра, вы можете прочитать The Linux Kernel Module Programming Guide. Модуль может быть как вкомпилирован непосредственно в ядро, так и собран в виде отдельного загружаемого файла. Чтобы иметь возможность динамически загружать или выгружать модуль, его необходимо сконфигурировать как загружаемый модуль в настройке ядра (в этом случае строка, относящаяся к модулю, должна быть отмечена буквой M).\n\nДля автоматической пересборки модулей после установки новой версии ядра используется DKMS.\n\n"
    },
    {
      "title": "Получение информации",
      "level": 2,
      "content": "Модули хранятся в каталоге /usr/lib/modules/версия_ядра. Чтобы узнать текущую версию вашего ядра, используйте команду uname -r.\n\nЧтобы узнать, какие модули ядра загружены в настоящий момент:\n\n```\n$ lsmod\n```\n\nЧтобы показать информацию о модуле:\n\n```\n$ modinfo имя_модуля\n```\n\nЧтобы вывести список опций, с которыми загружен модуль, используйте systool(1) из пакета sysfsutils:\n\n```\n$ systool -v -m имя_модуля\n```\n\nЧтобы отобразить настройки для всех модулей:\n\n```\n$ modprobe -c | less\n```\n\nЧтобы отобразить настройки для отдельного модуля:\n\n```\n$ modprobe -c | grep имя_модуля\n```\n\nЧтобы узнать зависимости модуля (или его псевдонима), включая сам модуль:\n\n```\n$ modprobe --show-depends имя_модуля\n```\n\n"
    },
    {
      "title": "Автоматическая загрузка модулей",
      "level": 2,
      "content": "Сегодня все необходимые модули загружаются автоматически с помощью udev, поэтому, если вам не нужно загружать какие-либо модули, не входящие в стандартное ядро, вам не придётся самостоятельно прописывать настройки для загрузки модулей. Однако бывают случаи, когда вам необходимо загружать свой модуль в процессе загрузки или наоборот запретить загрузку какого-то стандартного модуля, чтобы ваш компьютер правильно функционировал.\n\n"
    },
    {
      "title": "systemd",
      "level": 3,
      "content": "В процессе загрузки systemd загружает модули, прописанные в файлах настроек в каталоге /etc/modules-load.d/. Названия файлов соответствуют схеме /etc/modules-load.d/program.conf. Эти файлы просто содержат список названий модулей ядра, которые необходимо загружать, разделённых переносом строки. Пустые строки и строки, в которых первым непробельным символом является # или ;, игнорируются.\n\n```\n/etc/modules-load.d/virtio-net.conf\n```\n\n```\n# Load virtio_net.ko at boot\nvirtio_net\n```\n\nСмотрите modules-load.d(5) для дополнительной информации.\n\n"
    },
    {
      "title": "Ранняя загрузка модулей",
      "level": 3,
      "content": "Можно выполнять загрузку модулей в «early userspace», но для этого их нужно добавить в образ initramfs. Как именно это делается, зависит от используемого вами генератора initramfs:\n\n- mkinitcpio: смотрите mkinitcpio (Русский)#MODULES\n- dracut: смотрите Dracut#Early kernel module loading\n- booster: смотрите Booster#Early module loading\n\n"
    },
    {
      "title": "Управление модулями вручную",
      "level": 2,
      "content": "Управление модулями ядра производится с помощью утилит, предоставляемых пакетом kmod. Вы можете использовать эти утилиты вручную.\n\nЗагрузка модуля:\n\n```\n# modprobe имя_модуля\n```\n\nЗагрузка модуля из другого места (для тех модулей, которых нет в /usr/lib/modules/$(uname -r)/):\n\n```\n# insmod имя_файла [параметры]\n```\n\nВыгрузка модуля:\n\n```\n# modprobe -r имя_модуля\n```\n\nАльтернативный вариант выгрузки модуля:\n\n```\n# rmmod имя_модуля\n```\n\n"
    },
    {
      "title": "Настройка параметров модуля",
      "level": 2,
      "content": "Чтобы передать параметр модулю ядра, вы можете прописать их вручную для команды modprobe, создать файл конфигурации modprobe, который будет гарантировать, что параметры будут применяться всегда, или использовать командную строку ядра. Для модулей, вкомпилированных в ядро, параметры задаются только через командную строку ядра.\n\n"
    },
    {
      "title": "Вручную при загрузке с помощью modprobe",
      "level": 3,
      "content": "Основной способ передать параметры модулю — использовать команду modprobe. Параметры указываются с помощью простых присваиваний ключ=значение:\n\n```\n# modprobe имя_модуля имя_параметра=значение_параметра\n```\n\n"
    },
    {
      "title": "С помощью файлов в /etc/modprobe.d/",
      "level": 3,
      "content": "Файлы в каталоге /etc/modprobe.d/ можно использовать для передачи настроек модуля в udev, который через modprobe управляет загрузкой модулей во время загрузки системы. Файлы в этом каталоге могут иметь любое имя, оканчивающееся расширением .conf. Синтаксис следующий:\n\n```\n/etc/modprobe.d/myfilename.conf\n```\n\n```\noptions имя_модуля имя_параметра=значение_параметра\n```\n\nДля передачи нескольких параметров разделяйте их пробелами, в свою очередь параметр может принимать список значений, которые разделяются запятыми:\n\n```\n/etc/modprobe.d/myfilename.conf\n```\n\n```\noptions имя_модуля имя_параметра1=значение_параметра1 имя_параметра2=значение_параметра2а,значение_параметра2б …\n```\n\nНапример:\n\n```\n/etc/modprobe.d/thinkfan.conf\n```\n\n```\n# On ThinkPads, this lets the 'thinkfan' daemon control fan speed\noptions thinkpad_acpi fan_control=1\n```\n\n"
    },
    {
      "title": "С помощью командной строки ядра",
      "level": 3,
      "content": "Можно передать параметры модулю с помощью командной строки ядра. Это работает только для модулей, вкомпилированных в ядро. Для всех основных загрузчиков подойдёт следующий синтаксис:\n\n```\nимя_модуля.имя_параметра=значение_параметра\n```\n\nНапример:\n\n```\nthinkpad_acpi.fan_control=1\n```\n\nПросто добавьте это в загрузчике в строку с ядром, как описано в статье Параметры ядра.\n\n"
    },
    {
      "title": "Создание псевдонимов",
      "level": 2,
      "content": "Псевдонимы (алиасы) — это альтернативные названия для модуля. Например: alias my-mod really_long_modulename означает, что вы можете использовать modprobe my-mod вместо modprobe really_long_modulename. Вы также можете использовать звёздочки в стиле shell, то есть alias my-mod* really_long_modulename означает, что modprobe my-mod-something будет иметь такой же эффект. Создайте алиас:\n\n```\n/etc/modprobe.d/myalias.conf\n```\n\n```\nalias mymod really_long_module_name\n```\n\nУ некоторых модулей есть алиасы, которые используются для их автоматической загрузки, когда они потребуются определённой программе. Отключение этих алиасов может предотвратить их автоматическую загрузку, при этом остаётся возможность из загрузки вручную.\n\n```\n/etc/modprobe.d/modprobe.conf\n```\n\n```\n# Prevent Bluetooth autoload\nalias net-pf-31 off\n```\n\n"
    },
    {
      "title": "Запрет загрузки",
      "level": 2,
      "content": "В терминах модулей ядра blacklisting означает механизм, предотвращающий загрузку какого-то модуля. Это может понадобиться, например, если вам не нужна работа какого-то оборудования или если загрузка данного модуля вызывает проблемы: например, могут быть два модуля ядра, которые пытаются управлять одним и тем же оборудованием, и их совместная загрузка приводит к конфликту.\n\nНекоторые модули загружаются как часть initramfs. Команда mkinitcpio -M напечатает все автоматически обнаруженные модули: чтобы предотвратить загрузку каких-то из этих модулей в initramfs, занесите их в чёрный список в файле .conf в каталоге /etc/modprobe.d/, и хук modconf добавит этот файл в образ initramfs при его генерации. Команда mkinitcpio -v отобразит все модули, которые необходимы некоторым хукам (например, хуку filesystems, хуку block и т. д.). Если вы не используете хук modconf, то не забудьте добавить нужный вам .conf файл в секцию FILES в /etc/mkinitcpio.conf. После того, как вы запретили загрузку модулей, пересоберите образ initramfs, а затем перезагрузитесь.\n\n"
    },
    {
      "title": "С помощью файлов в /etc/modprobe.d/",
      "level": 3,
      "content": "Создайте файл .conf в каталоге /etc/modprobe.d/ и добавьте строку для каждого модуля, который вы хотите запретить, используя ключевое слово blacklist. Например, если вы хотите отключить PC speaker путём запрета загрузки модуля pcspkr:\n\n```\n/etc/modprobe.d/nobeep.conf\n```\n\n```\n# Do not load the 'pcspkr' module on boot.\nblacklist pcspkr\n```\n\nNote: Можно изменить такое поведение. Команда install заставляет modprobe запускать вашу собственную команду вместо вставки модуля в ядро как обычно. Поэтому вы можете насильно сделать так, чтобы модуль никогда не загружался:\n\nМожно изменить такое поведение. Команда install заставляет modprobe запускать вашу собственную команду вместо вставки модуля в ядро как обычно. Поэтому вы можете насильно сделать так, чтобы модуль никогда не загружался:\n\n```\n/etc/modprobe.d/blacklist.conf\n```\n\n```\n...\ninstall имя_модуля /bin/true\n...\n```\n\nЭто запретит данный модуль и все модули, зависящие от него.\n\n"
    },
    {
      "title": "С помощью командной строки ядра",
      "level": 3,
      "content": "Вы также можете запрещать модули из загрузчика.\n\nПросто добавьте module_blacklist=модуль1,модуль2,модуль3 в вашем загрузчике в строку ядра, как описано в статье Параметры ядра.\n\n"
    },
    {
      "title": "Модули не загружаются",
      "level": 3,
      "content": "В случае, если конкретный модуль не загружается и журнал загрузки (доступный с помощью journalctl -b) говорит, что модуль в чёрном списке, но в каталоге /etc/modprobe.d/ нет соответствующей записи, проверьте другой каталог /usr/lib/modprobe.d/ на наличие в нём записей чёрного списка.\n\nМодуль не будет загружен, если строка «vermagic», содержащаяся в модуле ядра, не соответствует значению текущего запущенного ядра. Если достоверно известно, что модуль совместим с текущим запущенным ядром, проверку «vermagic» можно отключить с помощью modprobe --force-vermagic.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Отключение PC Speaker\n- Writing a WMI driver - an LWM introduction\n\n"
    }
  ]
}
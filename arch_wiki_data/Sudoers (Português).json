{
  "title": "Sudoers (Português)",
  "url": "https://wiki.archlinux.org/title/Sudoers_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Usuários e grupos\n- su\n\nSudo possibilita que um adminitrador do sistema dê autoridade a certos usuários —ou grupos de usuários— de executar comandos como root ou outro usuário enquanto fornece uma trilha de auditoria dos comandos e seus argumentos.\n\nSudo é uma alternativa ao su para executar comandos como root. Diferente do su, que lança um shell root que faz todos os próximos comandos terem acesso root, sudo garante escalação de privilégio temporária para um único comando. Ao habilitar privilégios root somente quando necessário, o uso do sudo reduz a probabilidade que um erro de digitação ou bug no comando arruine o sistema.\n\nSudo também pode ser usado para executar comandos como outros usuários; adicionalmente, sudo faz log de todos os comandos e tentativas de acesso fracassadas para auditoria de segurança.\n\n"
    },
    {
      "title": "Instalação",
      "level": 2,
      "content": "Instale o pacote sudo.\n\n"
    },
    {
      "title": "Uso",
      "level": 2,
      "content": "Para começar a usar sudo como um usuário sem privilégios, é necessário configurá-lo apropriadamente. Veja #Configuração.\n\nPara usar sudo, simplesmente prefixe o comando e seus argumentos com sudo e um espaço:\n\n```\n$ sudo comando\n```\n\nPor exemplo, para usar pacman:\n\n```\n$ sudo pacman -Syu\n```\n\nVeja sudo(8) para mais informações.\n\n"
    },
    {
      "title": "Configuração",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n"
    },
    {
      "title": "Estrutura do Defaults",
      "level": 3,
      "content": "O site do autor tem uma lista de todas as opções (inglês) que podem ser usadas com o comando Defaults no arquivo /etc/sudoers.\n\nVeja [1] para uma lista de opções (parseada da versão 1.8.7 do código fonte) em um formato otimizado para o sudoers.\n\nVeja sudoers(5) para mais informações, como configurar o tempo antes de pedir novamente a senha.\n\n"
    },
    {
      "title": "Ver as configurações atuais",
      "level": 3,
      "content": "Execute sudo -ll para mostrar a configuração atual do sudo, ou sudo -lU usuário para a configuração específica de um usuário.\n\n"
    },
    {
      "title": "Usando visudo",
      "level": 3,
      "content": "O arquivo de configuração do sudo é o /etc/sudoers. Ele deve sempre ser editado com o comando visudo(8). visudo trava o arquivo sudoers, salva as modificações para um arquivo temporário e verifica se o arquivo foi configurado corretamente antes de copiá-las para o /etc/sudoers.\n\nNote: **Sempre** \n\n- É imperativo que sudoers não tenha erros de sintaxe! Qualquer erro inutiliza o sudo. Sempre edite ele com visudo para evitar erros.\n- Do visudo(8) (traduzido): Note que isto pode ter um buraco na segurança considerando que o usuário pode executar qualquer programa ao simplesmente definir as váriaveis de ambiente VISUAL ou EDITOR.\n\nO editor padrão do visudo é o vi. O sudo do repositório core é compilado com --with-env-editor por padrão e possibilita o uso das váriaveis VISUAL e EDITOR. EDITOR não é usada quando VISUAL está definida.\n\nPara usar nano como o editor do visudo durante o shell atual execute export EDITOR=nano; para usar um editor diferente somente uma vez simplesmente defina a váriavel antes de executar o visudo:\n\n```\n# EDITOR=nano visudo\n```\n\nAlternativamente você pode editar uma cópia do arquivo /etc/sudoers e verificá-lo com visudo -c -f /cópia/do/sudoers. Isto pode ser útil caso você queira evitar a trava do arquivo com visudo.\n\nPara mudar o editor permanentemente, veja Variáveis de ambiente#Por usuário. Para mudar o editor permanentemente no sistema todo somente para o visudo, adicione o seguinte para o /etc/sudoers (assumindo que nano é o editor escolhido):\n\n```\n# Reseta o ambiente para o padrão\nDefaults      env_reset\n# Define EDITOR para o nano, e não permite que o visudo use EDITOR/VISUAL.\nDefaults      editor=/usr/bin/nano, !env_editor\n```\n\n"
    },
    {
      "title": "Exemplos de entradas",
      "level": 3,
      "content": "Para permitir um usuário à ganhar todos os privilégios root quando precedido com o comando sudo, adicione a seguinte linha:\n\n```\nNOME_DO_USUÁRIO   ALL=(ALL) ALL\n```\n\nPara permitir que um usuário execute todos os comandos como qualquer usuário mas somente na máquina com o nome NOME_DA_MÁQUINA (hostname):\n\n```\nNOME_DO_USUÁRIO   NOME_DA_MÁQUINA=(ALL) ALL\n```\n\nPara permitir que membros do grupo wheel usem o sudo:\n\n```\n%wheel      ALL=(ALL) ALL\n```\n\nPara desabilitar a solicitação de senha para o usuário NOME_DO_USUÁRIO:\n\n```\nDefaults:NOME_DO_USUÁRIO      !authenticate\n```\n\nPara habilitar explicitamente comandos definidos somente pelo usuário NOME_DO_USUÁRIO na máquina NOME_DA_MÁQUINA:\n\n```\nNOME_DO_USUÁRIO NOME_DA_MÁQUINA=/usr/bin/halt,/usr/bin/poweroff,/usr/bin/reboot,/usr/bin/pacman -Syu\n```\n\nPara habilitar explicitamente comandos definido somente para o usuário NOME_DO_USUÁRIO na máquina NOME_DA_MÁQUINA sem senha:\n\n```\nNOME_DO_USUÁRIO NOME_DA_MÁQUINA= NOPASSWD: /usr/bin/halt,/usr/bin/poweroff,/usr/bin/reboot,/usr/bin/pacman -Syu\n```\n\nUm exemplo detalhado do sudoers está disponível em /usr/share/doc/sudo/examples/sudoers. De outro modo, veja sudoers(5) para informações detalhadas.\n\n"
    },
    {
      "title": "Permissões padrão do arquivo sudoers",
      "level": 3,
      "content": "O dono e grupo para o arquivo sudoers devem ser ambos 0. As permissões do arquivo devem ser definidas para 0440. Estas permissões são definidas por padrão, mas se você acidentalmente mudá-las, elas devem ser mudadas de volta imediatamente ou sudo vai dar erro.\n\n```\n# chown -c root:root /etc/sudoers\n# chmod -c 0440 /etc/sudoers\n```\n\n"
    },
    {
      "title": "Desabilitar o tempo de solicitação da senha",
      "level": 3,
      "content": "Um incômodo comum é um processo com grande tempo de execução que é executado em segundo plano com permissões normais e as eleva somente quando necessário. Isto leva a solicitação da senha não ser notada e esgotar o tempo dela, fazendo com que o processo morra e o trabalho feito seja perdido, ou no melhor caso, salvo em cache. O conselho comum é habilitar o sudo sem senha, ou extender o tempo que o sudo se lembra da senha. Ambos tem implicações negativas de segurança. O tempo de solicitação pode ser desabilitado e considerando que isto não serve qualquer próposito de maior segurança, esta deve ser a solução aqui:\n\n```\nDefaults passwd_timeout=0\n```\n\n"
    },
    {
      "title": "Adicionar toque no terminal na solicitação de senha",
      "level": 3,
      "content": "Para chamar atenção na solicitação de senha do sudo em um terminal no segundo plano, usuários podem simplesmente fazé-lo tocar um caractere bell\n\n```\nDefaults passprompt=\"^G[sudo] password for %p: \"\n```\n\nNote que ^G é um caractere bell literal. E.x. no vim, insira usando a sequência ^V ^G.\n\n"
    },
    {
      "title": "Utilizando aliases",
      "level": 3,
      "content": "Se você usa muitas aliases, você pode ter notado que elas não são levadas a conta root quando o sudo é usado. No entanto, tem uma maneira fácil de fazê-los funcionar. Simplesmente adicione o seguinte para seu ~/.bashrc ou /etc/bash.bashrc:\n\n```\nalias sudo='sudo '\n```\n\n"
    },
    {
      "title": "Desabilitar sudo por terminal",
      "level": 3,
      "content": "Se você está incomodado pelo padrão do sudo em solicitar a senha toda vez que você abre um novo terminal, defina timestamp_type para global:\n\n```\nDefaults timestamp_type=global\n```\n\n"
    },
    {
      "title": "Reduzir o número de vezes que você tem que digitar a senha",
      "level": 3,
      "content": "Se você está incomodado em ter que entrar com sua senha a cada 5 minutos (padrão), você pode mudar isto ao definir um valor maior para timestamp_timeout (em minutos):\n\n```\nDefaults timestamp_timeout=10\n```\n\nSe você está usando vários comandos sudo em sequência, é mais lógico atualizar o tempo de solicitação da senha toda vez que você usa o sudo do que aumentar timestamp_timeout. Essa atualização pode ser feita com sudo -v (onde sudo -K revoca imediatamente).\n\nVocê pode querer automatizar isto ao adicionar o seguinte para seu .bashrc:\n\n```\nalias sudo='sudo -v; sudo '\n```\n\nÉ também possível usar uma função bash; para mais detalhes veja stackexchange.\n\n"
    },
    {
      "title": "Variáveis de ambiente",
      "level": 3,
      "content": "Se você tem várias variáveis de ambiente, ou você exporta suas configurações de proxy com export http_proxy=\"...\", quando você usar o sudo estas variáveis não vão ser passadas para a conta root a menos que você o execute com a opção -E.\n\n```\n$ sudo -E pacman -Syu\n```\n\nA maneira recomendada de preservar as variáveis de ambiente é adicioná-las ao env_keep:\n\n```\n/etc/sudoers\n```\n\n```\nDefaults env_keep += \"ftp_proxy http_proxy https_proxy no_proxy\"\n```\n\n"
    },
    {
      "title": "Senha do root",
      "level": 3,
      "content": "Usuários podem configurar o sudo para pedir a senha do root ao invês da senha do usuário ao adicionar targetpw (usuário alvo, o padrão é o root) ou rootpw para a linha Defaults em /etc/sudoers:\n\n```\nDefaults targetpw\n```\n\nPara evitar a exposição da sua senha root para os usuários, você pode restringir isto para um grupo específico:\n\n```\nDefaults:%wheel targetpw\n%wheel ALL=(ALL) ALL\n```\n\n"
    },
    {
      "title": "Desabilitar o login do root",
      "level": 3,
      "content": "Usuários podem desejar desabilitar o login do root. Sem o root, atacantes devem primeiro supor o nome do usuário configurado como um sudoer e também a senha dele. Veja por exemplo OpenSSH#Deny.\n\n- Tenha cuidado, você pode se trancar fora do sistema ao desabilitar o login do root. Sudo não é automaticamente instalado e sua configuração padrão não permite acesso ao root sem senha e nem com a senha do seu usuário. Garanta que um usuário está configurado apropriadamente como um sudoer antes de desabilitar a conta root!\n- Se você modificou seu arquivo sudoers para usar rootpw por padrão, então não desabilite o login do root com qualquer um dos comandos a seguir!\n- Se você já está trancado fora do sistema, veja Recuperação de senha para ajuda.\n\nA conta pode ser bloqueada com passwd:\n\n```\n# passwd -l root\n```\n\nUm comando similar desbloqueia o root.\n\n```\n$ sudo passwd -u root\n```\n\nAlternativamente, edite /etc/shadow e troque a senha criptografada do root com \"!\":\n\n```\nroot:!:12345::::::\n```\n\nPara habilitar o login do root novamente:\n\n```\n$ sudo passwd root\n```\n\n"
    },
    {
      "title": "kdesu",
      "level": 4,
      "content": "kdesu pode ser usado no KDE para lançar programas gráficos com privilégios root. É possível que por padrão kdesu vai tentar usar su até mesmo se a conta root está desabilitada. Felizmente, você pode configurar o kdesu para usar sudo ao invês do su. Crie/edite o arquivo ~/.config/kdesurc:\n\n```\n[super-user-command]\nsuper-user-command=sudo\n```\n\nou use o seguinte comando:\n\n```\n$ kwriteconfig5 --file kdesurc --group super-user-command --key super-user-command sudo\n```\n\n"
    },
    {
      "title": "Exemplo de como aumentar a segurança com sudo",
      "level": 3,
      "content": "Vamos supor que você criou 3 usuários: admin, devel, e joe. O usuário \"admin\" é usado para journalctl, systemctl, mount, kill, e iptables; \"devel\" é usado para instalar pacotes, e editar arquivos de configuração; e \"joe\" é o usuário que você entra no sistema. Para permitir que \"joe\" reinicie e desligue o sistema e use netctl, devemos fazer o seguinte:\n\nEdite /etc/pam.d/su e /etc/pam.d/su-l Faça necessário que o usuário esteja no grupo wheel, mas não coloque ninguém nele.\n\n```\n#%PAM-1.0\nauth            sufficient      pam_rootok.so\n# Uncomment the following line to implicitly trust users in the \"wheel\" group.\n#auth           sufficient      pam_wheel.so trust use_uid\n# Uncomment the following line to require a user to be in the \"wheel\" group.\nauth            required        pam_wheel.so use_uid\nauth            required        pam_unix.so\naccount         required        pam_unix.so\nsession         required        pam_unix.so\n```\n\nLimite o login pelo SSH para o grupo 'ssh'. Somente \"joe\" vai ser parte desse grupo.\n\n```\ngroupadd -r ssh\ngpasswd -a joe ssh\necho 'AllowGroups ssh' >> /etc/ssh/sshd_config\n```\n\nReinicie sshd.service.\n\nAdicione usuários para outros grupos.\n\n```\nfor g in power network ;do ;gpasswd -a joe $g ;done\nfor g in network power storage ;do ;gpasswd -a admin $g ;done\n```\n\nDefina permissões nos arquivos de configuração para que devel possa editá-los.\n\n```\nchown -R devel:root /etc/{http,openvpn,cups,zsh,vim,screenrc}\n```\n\n```\nCmnd_Alias  POWER       =   /usr/bin/shutdown -h now, /usr/bin/halt, /usr/bin/poweroff, /usr/bin/reboot\nCmnd_Alias  STORAGE     =   /usr/bin/mount -o nosuid\\,nodev\\,noexec, /usr/bin/umount\nCmnd_Alias  SYSTEMD     =   /usr/bin/journalctl, /usr/bin/systemctl\nCmnd_Alias  KILL        =   /usr/bin/kill, /usr/bin/killall\nCmnd_Alias  PKGMAN      =   /usr/bin/pacman\nCmnd_Alias  NETWORK     =   /usr/bin/netctl\nCmnd_Alias  FIREWALL    =   /usr/bin/iptables, /usr/bin/ip6tables\nCmnd_Alias  SHELL       =   /usr/bin/zsh, /usr/bin/bash\n%power      ALL         =   (root)  NOPASSWD: POWER\n%network    ALL         =   (root)  NETWORK\n%storage    ALL         =   (root)  STORAGE\nroot        ALL         =   (ALL)   ALL\nadmin       ALL         =   (root)  SYSTEMD, KILL, FIREWALL\ndevel\t    ALL         =   (root)  PKGMAN\njoe\t    ALL         =   (devel) SHELL, (admin) SHELL\n```\n\nCom esta configuração, você quase nunca vai precisar logar como o usuário root.\n\n\"joe\" pode se conectar ao WiFi de sua casa.\n\n```\nsudo netctl start home\nsudo poweroff\n```\n\n\"joe\" não pode usar netctl como qualquer outro usuário.\n\n```\nsudo -u admin -- netctl start home\n```\n\nQuando \"joe\" precisa usar journalctl ou matar processos ele pode trocar para outro usuário.\n\n```\nsudo -i -u devel\nsudo -i -u admin\n```\n\nMas \"joe\" não pode trocar para o usuário root.\n\n```\nsudo -i -u root\n```\n\nSe \"joe\" quer iniciar uma sessão do gnu-screen como admin ele pode fazer isto:\n\n```\nsudo -i -u admin\nadmin% chown admin:tty `echo $TTY`\nadmin% screen\n```\n\n"
    },
    {
      "title": "Configurar o sudo usando arquivos presentes no /etc/sudoers.d",
      "level": 3,
      "content": "sudo lê os arquivos contidos no diretório /etc/sudoers.d/. Isto significa que ao invês de editar /etc/sudoers, você pode mudar as configurações em arquivos separados e jogá-los nesse diretório. Isto tem duas vantagens:\n\n- Não há necessidade de editar um arquivo sudoers.pacnew;\n- Se existe um problema com uma nova entrada, você pode remover o respectivo arquivo ao invês de editar o /etc/sudoers (mas veja o aviso abaixo).\n\nO formato para entradas nestes arquivos é o mesmo do /etc/sudoers. Para editá-los diretamente, use visudo -f /etc/sudoers.d/algum_arquivo. Veja a seção \"Including other files from within sudoers\" do sudoers(5) para detalhes.\n\nOs arquivos no diretório /etc/sudoers.d/ são lidos em ordem lexicográfica, nomes do arquivos contendo . ou ~ são ignorados. Para evitar problemas de ordenamento, o nome dos arquivos devem começar com dois dígitos, e.x. 01_foo.\n\n"
    },
    {
      "title": "Editando arquivos",
      "level": 3,
      "content": "sudo -e ou sudoedit possibilita que você modifique um arquivo como outro usuário enquanto ainda executa o editor de texto com seu usuário.\n\nIsto é especialmente útil para editar arquivos como root sem elevar o privilégios do seu editor de texto, para mais detalhes leia sudo(8) § e.\n\nNote que você pode definir o editor para qualquer programa, por exemplo, pode usar o meld para gerenciar arquivos pacnew:\n\n```\n$ SUDO_EDITOR=meld sudo -e /etc/file{,.pacnew}\n```\n\n"
    },
    {
      "title": "Habilitar insultos",
      "level": 3,
      "content": "Usuários podem habilitar insultos ao adicionar a seguinte linha no arquivo sudoers com visudo.\n\nAo entrar com uma senha incorreta, a mensagem Sorry, try again. (ou Sinto muito, tente novamente.) será trocada por uma com insultos engraçados.\n\n```\n/etc/sudoers\n```\n\n```\nDefaults insults\n```\n\n"
    },
    {
      "title": "Problema do SSH sem TTY",
      "level": 3,
      "content": "SSH não aloca uma tty por padrão quando executa um comando remotamente. Sem um tty alocado, o sudo não pode impedir a senha de ser exibida. Você pode executar o ssh com a opção -t para forçá-lo a alocar uma tty.\n\nA opção requiretty do Defaults somente permite que o usuário execute sudo se ele tiver uma tty.\n\n```\n# Disable \"ssh hostname sudo <cmd>\", because it will show the password in clear text. You have to run \"ssh -t hostname sudo <cmd>\".\n#\n#Defaults    requiretty\n```\n\n"
    },
    {
      "title": "Umask permissivo",
      "level": 3,
      "content": "Sudo vai unir o valor umask do usuário com o seu próprio (que por padrão é 0022). Isto evita que o sudo crie arquivos com permissões mais abertas que o umask do usuário permite. Enquanto isto é um padrão válido se nenhum umask customizado é usado, isto pode levar a situações onde um utilitário executado com sudo crie arquivo com permissões diferentes das que seriam criadas se fosse executado diretamente pelo root. Se erros aparecerem devido a isto, sudo fornece uma forma de consertar o umask, até mesmo se o umask desejado é mais permissivo que o especificado do usuário. Adicionar isto (usando visudo) vai sobrescrever o comportamento padrão do sudo:\n\n```\nDefaults umask = 0022\nDefaults umask_override\n```\n\nIsto define o umask do sudo para o padrão do root (0022) e sobrescreve o comportamento padrão, sempre usando o umask indicado não importando como o umask do usuário está definido.\n\n"
    }
  ]
}
{
  "title": "Avahi (Français)",
  "url": "https://wiki.archlinux.org/title/Avahi_(Fran%C3%A7ais)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Selon Wikipedia:\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Installez le paquet avahi.\n\nVous pouvez gérer le daemon Avahi avec avahi-daemon.service en utilisant systemd.\n\n"
    },
    {
      "title": "Résolution des noms d'hôtes",
      "level": 3,
      "content": "Avahi fournit la résolution des noms d'hôtes locaux en utilisant un schéma de nommage \"hostname.local\". Pour l'activer, installez le paquet nss-mdns et démarrez et/ou activez avahi-daemon.service.\n\nEnsuite, éditez le fichier /etc/nsswitch.conf et modifiez la ligne hosts pour inclure mdns_minimal [NOTFOUND=return] avant resolve et dns :\n\n```\nhosts : mymachines mdns_minimal [NOTFOUND=return] resolve [!UNAVAIL=return] files myhostname dns\n```\n\n- Si vous rencontrez des ralentissements dans la résolution des hôtes .local (ou que vous ne souhaitez pas utiliser IPv6), essayez d'utiliser mdns4_minimal et mdns4 au lieu de mdns_minimal et mdns respectivement.\n- La ligne ci-dessus rend nss-mdns autoritaire pour le domaine .local, à moins que votre serveur DNS unicast ne réponde à des requêtes SOA pour le nom local de premier niveau, ou si la requête comporte plus de deux labels. Consultez les notes d'activation de nss-mdns. systemd-resolved répond à ces requêtes même si son support mDNS est désactivé. Consultez #systemd-resolved empêche nss-mdns de fonctionner. Plus d'informations sur la configuration de nss peuvent être trouvées sur nss-mymachines(8) et dans la documentation d'Avahi.\n\n- systemd-resolved répond à ces requêtes même si son support mDNS est désactivé. Consultez #systemd-resolved empêche nss-mdns de fonctionner.\n- Plus d'informations sur la configuration de nss peuvent être trouvées sur nss-mymachines(8) et dans la documentation d'Avahi.\n\n"
    },
    {
      "title": "Configuration du mDNS pour un TLD personnalisé",
      "level": 4,
      "content": "Le module mdns_minimal gère uniquement les requêtes pour le TLD .local. TLD uniquement. Notez le [NOTFOUND=return], qui spécifie que si mdns_minimal ne trouve pas *.local, il ne continuera pas à le chercher dans dns, myhostname, etc.\n\nSi vous voulez qu'Avahi prenne en charge d'autres TLDs, vous devez :\n\n- remplacer mdns_minimal [NOTFOUND=return] par le module mdns complet. Il existe également des modules IPv4 seulement et IPv6 seulement mdns[46](_minimal)\n- Personnalisez /etc/avahi/avahi-daemon.conf avec le domain-name de votre choix.\n- Liste blanche des TLD personnalisés d'Avahi dans /etc/mdns.allow.\n\n"
    },
    {
      "title": "Outils",
      "level": 4,
      "content": "Avahi comprend plusieurs utilitaires qui vous aident à découvrir les services fonctionnant sur un réseau. Par exemple, exécutez\n\n```\n$ avahi-browse --all --ignore-local --resolve --terminate\n```\n\npour découvrir les services de votre réseau.\n\nLe navigateur Zeroconf d'Avahi (avahi-discover) - notez qu'il nécessite les dépendances facultatives d'Avahi gtk3, python-dbus et python-gobject) affiche les différents services de votre réseau. Vous pouvez également parcourir les serveurs SSH et VNC en utilisant respectivement bssh et bvnc.\n\n"
    },
    {
      "title": "Pare-feu",
      "level": 3,
      "content": "Assurez-vous d'ouvrir le port UDP 5353 si vous utilisez un pare-feu.\n\n"
    },
    {
      "title": "Chat local (Bonjour/Zeroconf)",
      "level": 3,
      "content": "Avahi peut être utilisé pour prendre en charge le protocole Bonjour sous Linux. Consultez Wikipedia:Comparison of cross-platform instant messaging clients ou List of applications/Internet#Instant messaging clients pour obtenir une liste des clients prenant en charge le protocole Bonjour.\n\n"
    },
    {
      "title": "Obtention de l'adresse IPv4LL",
      "level": 3,
      "content": "Par défaut, si vous obtenez une IP en utilisant DHCP, vous utilisez le paquet dhcpcd. Il peut tenter d'obtenir une adresse IPv4LL s'il n'a pas réussi à en obtenir une via DHCP. Par défaut, cette option est désactivée. Pour l'activer, commentez la chaîne noipv4ll :\n\n```\n/etc/dhcpcd.conf\n```\n\n```\n].\n...\n#noipv4ll\n...\n```\n\nAlternativement, exécutez avahi-autoipd :\n\n```\n# avahi-autoipd -D\n```\n\n"
    },
    {
      "title": "Ajout de services",
      "level": 2,
      "content": "Avahi annonce les services dont les fichiers *.service se trouvent dans /etc/avahi/services. Les fichiers de ce répertoire doivent être lisibles par l'utilisateur/groupe avahi.\n\nSi vous voulez faire la publicité d'un service pour lequel il n'existe pas de fichier *.service, il est très facile de créer le vôtre. Par exemple, disons que vous voulez faire la publicité d'un service de citation du jour (QOTD) fonctionnant selon la RFC:865 sur le port TCP 17 que vous exécutez sur votre machine.\n\nLa première chose à faire est de déterminer le <type>. avahi.service(5) indique que le type doit être \"le type de service DNS-SD pour ce service, par exemple '_http._tcp'\". Comme le registre DNS-SD a été fusionné dans le registre IANA en 2010, nous recherchons le nom du service sur le registre IANA ou dans le fichier /etc/services. Le nom du service qui y figure est qotd. Puisque nous exécutons QOTD sur tcp, nous savons maintenant que le service est _qotd._tcp et que le port (selon l'IANA et la RFC 865) est 17.\n\nNotre fichier de service est donc :\n\n```\nqotd.service\n```\n\n```\n<?xml version=\"1.0\" standalone='no'?><!--*-nxml-*-->\n<!DOCTYPE service-group SYSTEM \"avahi-service.dtd\">\n\n<service-group>\n\n  <name replace-wildcards=\"yes\">%h</name>\n\n  <service>\n    <type>_qotd._tcp</type>\n    <port>17</port>\n  </service>\n\n</service-group>\n```\n\nPour des scénarios plus compliqués, tels que les services de publicité fonctionnant sur un serveur différent, les sous-types DNS et ainsi de suite, consultez avahi.service(5).\n\nGardez à l'esprit qu'Avahi ne prends pas en charge les chaînes arbitraires dans le champ <type>, vous ne pouvez définir que des valeurs connues dans la base de données des services d'Avahi. Si vous voulez enregistrer une valeur personnalisée, vous devrez probablement modifier la définition de la base de données, construire une version mise à jour et la distribuer à vos hôtes.\n\n"
    },
    {
      "title": "SSH",
      "level": 3,
      "content": "Avahi est livré avec un exemple de fichier de service pour annoncer un serveur SSH. Pour l'activer :\n\n```\n# cp /usr/share/doc/avahi/ssh.service /etc/avahi/services/\n```\n\n"
    },
    {
      "title": "NFS",
      "level": 4,
      "content": "Si vous avez configuré un partage NFS, vous pouvez utiliser Avahi pour pouvoir les monter automatiquement dans les navigateurs compatibles avec Zeroconf (comme Konqueror sur KDE et Finder sur macOS) ou les gestionnaires de fichiers comme GNOME/Files.\n\nCréez un fichier .service dans /etc/avahi/services avec le contenu suivant :\n\n```\n/etc/avahi/services/nfs_Zephyrus_Music.service\n```\n\n```\n<?xml version=\"1.0\" standalone='no'?>\n<!DOCTYPE service-group SYSTEM \"avahi-service.dtd\">\n<service-group>\n  <name replace-wildcards=\"yes\">NFS Music Share on %h</name>\n  <service>\n    <type>_nfs._tcp</type>\n    <port>2049</port>\n    <txt-record>path=/data/shared/Music</txt-record>\n  </service>\n</service-group>\n```\n\nLe port est correct si vous avez insecure comme option dans votre /etc/exports ; sinon, il doit être modifié (notez que insecure est nécessaire pour les clients macOS). Le chemin est le chemin de votre exportation, ou un sous-répertoire de celui-ci. Pour une raison quelconque, la fonctionnalité de montage automatique a été supprimée dans Leopard, mais un script est disponible. Ceci était basé sur ce post.\n\n"
    },
    {
      "title": "Samba",
      "level": 4,
      "content": "Si le daemon Avahi est exécuté à la fois sur le serveur et le client, le gestionnaire de fichiers du client devrait trouver automatiquement le serveur.\n\n"
    },
    {
      "title": "Vsftpd",
      "level": 4,
      "content": "Vous pouvez également détecter automatiquement les serveurs FTP ordinaires, tels que vsftpd. Installez le paquet vsftpd et modifiez les paramètres de vsftpd en fonction de vos préférences personnelles (consultez cette discussion sur ubuntuforums.org ou vsftpd.conf(5)).\n\nCréez un fichier .service dans /etc/avahi/services avec le contenu suivant :\n\n```\n/etc/avahi/services/ftp.service\n```\n\n```\n.\n<?xml version=\"1.0\" standalone='no'?>\n<!DOCTYPE service-group SYSTEM \"avahi-service.dtd\">\n<service-group>\n  <name>Partage de fichiers FTP</name>\n  <service>\n    <type>_ftp._tcp</type>\n    <port>21</port>\n  </service>\n</service-group>\n```\n\nLe serveur FTP devrait maintenant être annoncé par Avahi. Vous devriez maintenant être en mesure de trouver le serveur FTP à partir d'un gestionnaire de fichiers sur un autre ordinateur de votre réseau. Vous devrez peut-être activer la #Résolution des noms d'hôtes sur le client.\n\n"
    },
    {
      "title": "Changements de nom d'hôte avec ajout de nombres incrémentaux",
      "level": 3,
      "content": "Il s'agit d'un bug connu qui est causé par une condition de concurrence de nom d'hôte. Une solution possible est de désactiver IPv6 pour essayer d'empêcher la condition de concurrence. Si plusieurs interfaces sont présentes, utiliser allow-interfaces pour limiter Avahi à une seule interface. Une autre solution possible est de désactiver le cache pour empêcher Avahi de vérifier les conflits de noms d'hôtes, mais cela empêche Avahi d'effectuer des recherches.\n\n"
    },
    {
      "title": "systemd-resolved empêche nss-mdns de fonctionner",
      "level": 3,
      "content": "nss-mdns ne fonctionne que si le serveur DNS listé dans /etc/resolv.conf renvoie NXDOMAIN aux requêtes SOA pour le domaine \"local\". [1]\n\nVérifiez si votre serveur DNS configuré répond d'abord à la requête SOA pour le domaine \"local\" avec NXDOMAIN. Par exemple :\n\n```\n$ host -t SOA local\n```\n\nSi le serveur DNS répond avec NXDOMAIN, vous n'avez pas besoin de suivre les étapes ci-dessous. Avahi devrait être capable de trouver des ressources sur le réseau normalement, même en utilisant systemd-resolved.\n\nDans les anciennes versions de systemd-resolved, le paramètre global pour MulticastDNS=no dans resolved.conf(5) entraînait des codes de réponse incompatibles avec Avahi pour le domaine \"local\". Il en résultait qu'Avahi ne trouvait pas correctement les ressources (imprimantes). Voir le problème n°21659 de systemd pour référence.\n\nToutefois, si la requête DNS ci-dessus ne renvoie pas NXDOMAIN pour le domaine \"local\", vous pouvez utiliser le module NSS mdns complet au lieu de mdns. NSS complet au lieu de mdns_minimal et créer /etc/mdns.allow pour autoriser uniquement le domaine \"local\". Par exemple :\n\n```\n/etc/nsswitch.conf\n```\n\n```\nhosts : mymachines mdns [NOTFOUND=return] resolve [!UNAVAIL=return] files myhostname dns\n```\n\n```\n/etc/mdns.allow\n```\n\n```\n.local.\n.local\n```\n\n"
    },
    {
      "title": "ECONNREFUSED (Connexion refusée) sur la socket avahi",
      "level": 3,
      "content": "Si votre instance d'Avahi démarre et fonctionne correctement, mais que nss ne semble pas transmettre les requêtes à mdns, cela peut être dû à un socket bloqué /run/avahi-daemon/socket. Ceci peut être vérifié, par exemple, avec strace. Dans ce cas, redémarrez à la fois avahi-daemon.service et avahi-daemon.socket pour que cela fonctionne correctement.\n\n"
    },
    {
      "title": "Voir aussi",
      "level": 2,
      "content": "- Avahi - Site officiel du projet\n- Wikipedia:fr:Avahi (logiciel)\n- iTunes (inclus Bonjour) - Configurer Zeroconf pour Windows\n- http://www.zeroconf.org/\n\n"
    }
  ]
}
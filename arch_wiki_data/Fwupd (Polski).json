{
  "title": "Fwupd (Polski)",
  "url": "https://wiki.archlinux.org/title/Fwupd_(Polski)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Powiązane artykuły\n\n- Bezpieczny rozruch\n- UEFI\n\nfwupd to prosty demon pozwalający oprogramowaniu sesyjnemu na zaktualizowanie oprogramowania układowego na twojej lokalnej maszynie. Został on zaprojektowany dla komputerów stacjonarnych, można go również używać na telefonach oraz serwerach bez ekranów.\n\nLista wspieranych urządzeń znajduje się tutaj, ponadto ma pojawić się ich więcej.\n\n"
    },
    {
      "title": "Instalacja",
      "level": 2,
      "content": "Zainstaluj pakiet fwupd.\n\nZobacz #Konfiguracja dla aktualizacji UEFI jeżeli planujesz takie użycie.\n\n"
    },
    {
      "title": "Interfejsy graficzne",
      "level": 3,
      "content": "Niektóre środowiska pulpitowe zawierają interfejsy graficzne z wbudowanym wsparciem dla fwupd:\n\n- GNOME Software — Będzie okresowo sprawdzać dostępność aktualizacji i automatycznie pobierać oprogramowanie sprzętowe w tle w GNOME. Po pobraniu oprogramowania układowego w GNOME Software zostanie wyświetlone wyskakujące okienko, aby wykonać aktualizację.\n\n- KDE Discover — Centrum oprogramowania używane z Plasma. Wraz z wydaniem KDE Plasma 5.14, nowy backend fwupd został zaimplementowany w KDE Discover dla aktualizacji firmware. Te aktualizacje oprogramowania sprzętowego są wyświetlane wraz z innymi aktualizacjami systemu.\n\n- GNOME Firmware — Aplikacja do aktualizacji, obniżania wersji i ponownej instalacji oprogramowania sprzętowego na urządzeniach obsługiwanych przez fwupd. Może odblokować zablokowane urządzenia fwupd, zweryfikować oprogramowanie układowe na obsługiwanych urządzeniach i wyświetlić wszystkie wersje dla urządzenia fwupd.\n\n"
    },
    {
      "title": "Użycie",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nTen pakiet dostarcza jednostkę fwupd.service, która będzie automatycznie uruchamiała demona fwupd, gdy otrzyma ona pierwsze zapytanie. [1]\n\nAby wyświetlić wszystkie urządzenia wykryte przez fwupd:\n\n```\n$ fwupdmgr get-devices\n```\n\nAby pobrać najnowsze metadata z LVFS:\n\n```\n$ fwupdmgr refresh\n```\n\nAby pokazać aktualizacje dostępne dla urządzeń w systemie:\n\n```\n$ fwupdmgr get-updates\n```\n\nAby zainstalować aktualizacje:\n\n```\n$ fwupdmgr update\n```\n\n- Aktualizacje, które mogą zostać zaaplikowane na żywo, zostaną wykonane natychmiastowo.\n- Aktualizacje, które muszą zostać wykonane przy starcie, zostaną zaplanowane na następne uruchomienie systemu.\n- Użytkownik root może być wymagany do wykonania poszczególnych aktualizacji.\n\n"
    },
    {
      "title": "Konfiguracja dla aktualizacji UEFI",
      "level": 2,
      "content": "Następujące wymagania powinny być spełnione:\n\n1. Upewnij się, że system został uruchomiony w trybie UEFI, ponieważ aktualizacja nie jest możliwa w starszym trybie bootowania.\n1. Zweryfikuj czy dostęp do zmiennych EFI jest możliwy.\n1. Zamontuj partycję systemową EFI (ESP). esp jest używane do określenia punktu montowania w tej sekcji.\n1. Upewnij się, że opcjonalna zależność udisks2 jest zainstalowana oraz że powiązana z nią jednostka systemd zostanie uruchomiona przed jednostką fwupd; dostarczy ona wsparcie dla aktualizacji oprogramowania UEFI.\n\n"
    },
    {
      "title": "Przygotuj ESP",
      "level": 3,
      "content": "fwupd skopiuje wszystkie potrzebne pliki do esp, ale żeby to zadziałało, potrzeba stworzyć prosty układ folderów na twoim esp; oznacza to stworzenie folderu EFI na twoim esp:\n\n```\n# mkdir esp/EFI/\n```\n\nNote: **musi** \n\nZrestartuj jednostkę fwupd.service. Możesz teraz wykonać polecenia fwupdmgr refresh i fwupdmgr update. System poprosi Cię o ponowne uruchomienie (do aktualizatora oprogramowania).\n\nNote: **czarny ekran bez żadnych wiadomości** \n\n"
    },
    {
      "title": "Bezpieczny rozruch",
      "level": 3,
      "content": "Currently, fwupd relies on shim to chainload the fwupd EFI binary on systems with Secure Boot enabled; for this to work, shim has to be installed correctly.\n\nAktualnie fwupd polega na shim aby załadować plik binarny EFI fwupd na systemach z włączonym Secure Boot. Aby to zadziałało, shim musi zostać poprawnie zainstalowany.\n\n"
    },
    {
      "title": "Używanie własnych kluczy",
      "level": 4,
      "content": "Alternatywnie można ręcznie podpisać plik wykonywalny UEFI używany do wykonywania aktualizacji, który znajduje się w /usr/lib/fwupd/efi/fwupdx64.efi. Podpisany plik wykonywalny UEFI jest oczekiwany w /usr/lib/fwupd/efi/fwupdx64.efi.signed. Używając sbsigntools, można to osiągnąć uruchamiając:\n\n```\n# sbsign --key plik_z_kluczem --cert plik_z_certyfikatem /usr/lib/fwupd/efi/fwupdx64.efi\n```\n\nTo automatically sign this file when installed or upgraded, a Pacman hook can be used:\n\nAby automatycznie podpisywać ten plik kiedy jest on instalowany albo aktualizowany, można użyć haków Pacmana:\n\n```\n/etc/pacman.d/hooks/sign-fwupd-secureboot.hook\n```\n\n```\n[Trigger]\nOperation = Install\nOperation = Upgrade\nType = Path\nTarget = usr/lib/fwupd/efi/fwupdx64.efi\n\n[Action]\nWhen = PostTransaction\nExec = /usr/bin/sbsign --key plik_z_kluczem --cert plik_z_certyfikatem /usr/lib/fwupd/efi/fwupdx64.efi\nDepends = sbsigntools\n```\n\nMiej pewność, aby podmienić plik_z_kluczem oraz plik_z_certyfikatem na odpowiadające im ścieżki do twoich kluczy.\n\nZamiast haka pacman można również utworzyć dowiązanie symboliczne z /usr/lib/fwupd/efi/fwupdx64.efi do /usr/lib/fwupd/efi/fwupdx64.efi.signed i dodać plik do listy EXTRA_SIGN w /etc/sbupdate.conf.\n\nNa koniec należy ustawić DisableShimForSecureBoot w /etc/fwupd/fwupd.conf i zrestartować fwupd.service:\n\n```\n/etc/fwupd/fwupd.conf\n```\n\n```\n...\n\n[uefi_capsule]\nDisableShimForSecureBoot=true\n```\n\n- Jeżeli ta konfiguracja została wykonana przed wersją fwupd 1.9, wtedy ta opcja jest dostępna w /etc/fwupd/uefi_capsule.conf.\n- Jeżeli ta konfiguracja została wykonana przed wersją fwupd 1.4, należy być świadomym o subtelnej zmianie w nazwie opcji konfiguracyjnej.\n\nZobacz https://github.com/fwupd/fwupd/issues/669 po więcej informacji.\n\n"
    },
    {
      "title": "Utknięcie podczas ponownego uruchamiania",
      "level": 3,
      "content": "fwupdmgr update nie zgłasza żadnego błędu, ale ponowne uruchomienie powoduje zablokowanie a przytrzymanie przycisku zasilania nic nie daje. Spróbuj wyłączyć zasilanie lub naciśnij przycisk resetowania (na laptopie może to być otwór z tyłu), aby wymusić ponowne uruchomienie.\n\n"
    },
    {
      "title": "Brak błędu, ale brak aktualizacji po ponownym uruchomieniu",
      "level": 3,
      "content": "Symptom: fwupdmgr update nie zgłasza błędu i wyświetla monit o ponowne uruchomienie (np. przy aktualizacji BIOS-u). Jednak system uruchamia się ponownie normalnie (lub zacina się), a aktualizacja oprogramowania sprzętowego NIE następuje.\n\nMożliwa przyczyna: W ustawieniach BIOS zmiana kolejności rozruchu musi być dozwolona.\n\nMożliwe inne rozwiązanie, jeśli w toku jest wiele aktualizacji: Spróbuj aktualizować pakiety pojedynczo. Aby wybrać pakiety, użyj poniższych poleceń:\n\n```\n$ fwupdmgr update update_ID\n```\n\n(Gdzie update_ID to coś w stylu f95c9218acd12697af946874bfe4239587209232.)\n\n"
    },
    {
      "title": "Błąd systemu plików tylko do odczytu",
      "level": 3,
      "content": "Przynajmniej fwupdmgr 1.5.2 dedukuje nieprawidłowy punkt montowania, jeśli bind jest używany do montowania partycji systemowej EFI do /boot. W rezultacie nie zapisuje pliku aktualizacji UEFI do /boot/EFI/arch/fw (fwupdmgr), podczas gdy powinien on zostać zapisany do esp/EFI/arch/fw). Skutkuje to (mylącym) komunikatem o błędzie file system is read-only. W przypadku, gdy aktualizacja została wykonana przez Discover (lub dowolny inny interfejs GUI aktualizacji obsługujący fwupd), może nie zostać wyświetlony żaden błąd lub mogą zostać wyświetlone mylące błędy.\n\nAby obejść ten problem, należy najpierw uruchomić umount /boot, jeśli wcześniej był on zamontowany do esp/EFI/arch, a następnie uruchomić fwupdmgr update, aby zapisać plik aktualizacji UEFI do esp/EFI/arch/fw, mount /boot i ponownie uruchomić system, aby wykonać aktualizację UEFI.\n\n"
    },
    {
      "title": "Partycja UEFI ESP nie została wykryta lub skonfigurowana",
      "level": 3,
      "content": "Jeśli partycja ESP nadal nie zostanie wykryta po spełnieniu wszystkich wymagań #Konfiguracja dla aktualizacji UEFI, punkt montowania można określić ręcznie:\n\n```\n/etc/fwupd/uefi_capsule.conf\n```\n\n```\n[uefi_capsule]\nOverrideESPMountPoint=/efi   # Zmień odpowiednio dla twojego systemu\n```\n\nZobacz również powiązany artykuł na wiki fwupd.\n\n"
    },
    {
      "title": "Nie można załadować wtyczki MSR",
      "level": 3,
      "content": "Wtyczka MSR umożliwia odpytywanie stanu DCI, interfejsu debugowania dostępnego dla procesorów Intel, który powinien być wyłączony na maszynach produkcyjnych zgodnie z dokumentacją fwupd.\n\nTa wtyczka wymaga załadowania modułu jądra msr. msr jest wbudowanym modułem jądra we wszystkich oficjalnych pakietach jądra Arch Linux, ale nieoficjalne pakiety jądra mogą mieć go jako ładowalny moduł jądra. W tym drugim przypadku musimy jawnie załadować moduł podczas uruchamiania.\n\n"
    },
    {
      "title": "Failed to load daemon: failed to load engine: No ESP with path",
      "level": 3,
      "content": "Podczas uruchamiania fwupd sprawdza lokalizację esp jako EspLocation z /etc/fwupd/daemon.conf. Zmodyfikuj go do odpowiedniej konfiguracji, jeśli napotkasz ten błąd.\n\n"
    }
  ]
}
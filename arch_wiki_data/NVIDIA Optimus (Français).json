{
  "title": "NVIDIA Optimus (Français)",
  "url": "https://wiki.archlinux.org/title/NVIDIA_Optimus_(Fran%C3%A7ais)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- PRIME\n- Bumblebee (Français)\n- Nouveau (Français)\n- NVIDIA (Français)\n- nvidia-xrun\n- External GPU\n\nNVIDIA Optimus est une technologie qui permet d'intégrer un GPU intégré Intel et un GPU dédié NVIDIA dans un ordinateur portable et d'y accéder.\n\n"
    },
    {
      "title": "Méthodes disponibles",
      "level": 2,
      "content": "Il y a plusieurs méthodes disponibles :\n\n- #Utiliser uniquement la carte Intel - économise de l'énergie, car le GPU NVIDIA sera complètement éteint.\n- #Utiliser uniquement la carte NVIDIA - donne plus de performance que la carte Intel, mais draine plus de batterie (ce qui n'est pas bienvenu pour les appareils mobiles). Cette option utilise le même processus sous-jacent que les options optimus-manager et nvidia-xrun, elle devrait être utilisée pour le dépannage et la vérification du fonctionnement général, avant d'opter pour l'une des approches plus automatisées.\n- Utiliser les deux (utiliser le GPU NVIDIA quand c'est nécessaire et le garder éteint pour économiser de l'énergie) : #Utiliser le déchargement de rendu PRIME - méthode officielle prise en charge par NVIDIA. #Utiliser optimus-manager - choisir la carte graphique avec une seule commande (déconnexion et connexion requises pour prendre effet). Il permet d'obtenir les performances maximales du GPU NVIDIA et de le désactiver s'il n'est pas utilisé. Depuis la version 1.4, la combinaison AMD+NVIDIA est également prise en charge. #Utiliser nvidia-xrun - exécute une session X séparée sur différents TTY avec des cartes NVIDIA. Il atteint les performances maximales du GPU NVIDIA et le désactive s'il n'est pas utilisé. #Utiliser Bumblebee - fournit des fonctionnalités similaires à celles de Windows en permettant de faire tourner certaines applications avec des cartes NVIDIA tout en utilisant des cartes Intel pour tout le reste. A des problèmes de performance significatifs. #Utiliser nouveau - offre de moins bonnes performances (par rapport au pilote propriétaire NVIDIA) et peut causer des problèmes avec la mise en veille et la mise en veille prolongée. Ne fonctionne pas avec les derniers GPU NVIDIA. #Utiliser EnvyControl - Similaire à optimus-manager mais ne nécessite pas de configuration extensive ou d'avoir un daemon tournant en arrière-plan ainsi que d'avoir à installer une version patchée de GDM si vous êtes un utilisateur de GNOME. #Utiliser NVidia-eXec - Similaire à Bumblebee, mais sans l'impact sur les performances. Il fonctionne à la fois sur Xorg et Wayland. Ce paquet est expérimental, et est actuellement testé uniquement sous GNOME/GDM. #Utiliser nvidia-switch - Similaire à nvidia-xrun, mais sans avoir besoin de changer de TTY, les changements seront faites par les ouvertures et fermetures de session dans votre gestionnaire d'affichage. Ce paquet est en cours de test sur un système basé sur Debian, mais, comme nvidia-xrun, il doit fonctionner sur tous les systèmes Linux.\n\n- #Utiliser le déchargement de rendu PRIME - méthode officielle prise en charge par NVIDIA.\n- #Utiliser optimus-manager - choisir la carte graphique avec une seule commande (déconnexion et connexion requises pour prendre effet). Il permet d'obtenir les performances maximales du GPU NVIDIA et de le désactiver s'il n'est pas utilisé. Depuis la version 1.4, la combinaison AMD+NVIDIA est également prise en charge.\n- #Utiliser nvidia-xrun - exécute une session X séparée sur différents TTY avec des cartes NVIDIA. Il atteint les performances maximales du GPU NVIDIA et le désactive s'il n'est pas utilisé.\n- #Utiliser Bumblebee - fournit des fonctionnalités similaires à celles de Windows en permettant de faire tourner certaines applications avec des cartes NVIDIA tout en utilisant des cartes Intel pour tout le reste. A des problèmes de performance significatifs.\n- #Utiliser nouveau - offre de moins bonnes performances (par rapport au pilote propriétaire NVIDIA) et peut causer des problèmes avec la mise en veille et la mise en veille prolongée. Ne fonctionne pas avec les derniers GPU NVIDIA.\n- #Utiliser EnvyControl - Similaire à optimus-manager mais ne nécessite pas de configuration extensive ou d'avoir un daemon tournant en arrière-plan ainsi que d'avoir à installer une version patchée de GDM si vous êtes un utilisateur de GNOME.\n- #Utiliser NVidia-eXec - Similaire à Bumblebee, mais sans l'impact sur les performances. Il fonctionne à la fois sur Xorg et Wayland. Ce paquet est expérimental, et est actuellement testé uniquement sous GNOME/GDM.\n- #Utiliser nvidia-switch - Similaire à nvidia-xrun, mais sans avoir besoin de changer de TTY, les changements seront faites par les ouvertures et fermetures de session dans votre gestionnaire d'affichage. Ce paquet est en cours de test sur un système basé sur Debian, mais, comme nvidia-xrun, il doit fonctionner sur tous les systèmes Linux.\n\n"
    },
    {
      "title": "Utiliser uniquement la carte Intel",
      "level": 2,
      "content": "Si vous ne souhaitez utiliser qu'un seul GPU sans changer de carte, vérifiez les options du BIOS de votre système. Il devrait y avoir une option pour désactiver l'une des cartes. Certains ordinateurs portables ne permettent de désactiver que la carte dédiées, ou vice-versa, mais cela vaut la peine de vérifier si vous ne prévoyez d'utiliser qu'une seule des cartes.\n\nSi votre BIOS ne permet pas de désactiver la carte graphique Nvidia, vous pouvez la désactiver à partir du noyau Linux lui-même. Consultez Hybrid graphics#Fully power down discrete GPU.\n\n"
    },
    {
      "title": "Utiliser CUDA sans changer de fournisseur de rendu",
      "level": 3,
      "content": "Vous pouvez utiliser CUDA sans basculer le rendu vers la carte graphique Nvidia. Tout ce que vous devez faire est de vous assurer que la carte Nvidia est sous tension avant de lancer une application CUDA, consultez Hybrid graphics#Fully power down discrete GPU pour plus de détails.\n\nDésormais, lorsque vous lancerez une application CUDA, celle-ci chargera automatiquement tous les modules du noyau nécessaires. Avant d'éteindre la carte Nvidia après avoir utilisé CUDA, les modules du noyau nvidia doivent d'abord être déchargés :\n\n```\n# rmmod nvidia_uvm\n# rmmod nvidia\n```\n\n"
    },
    {
      "title": "Utiliser uniquement la carte NVIDIA",
      "level": 2,
      "content": "Le pilote propriétaire NVIDIA peut être configuré pour être le principal fournisseur de rendu. Il présente également des problèmes notables de lissage d'écran, sauf si vous activez la synchronisation principale en activant le paramètre NVIDIA (Français)#DRM kernel mode setting, consultez [1] pour plus d'informations. Il permet d'utiliser le GPU dédié et présente (à partir de janvier 2017) un avantage marqué en termes de performances par rapport au pilote nouveau.\n\nTout d'abord, installez le pilote NVIDIA et xorg-xrandr. Ensuite, configurez /etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf dont les options seront combinées avec le paquet fourni /usr/share/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf pour assurer la compatibilité avec cette configuration.\n\n```\n/etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf\n```\n\n```\nSection \"OutputClass\"\n    Identifier \"intel\"\n    MatchDriver \"i915\"\n    Driver \"modesetting\"\nEndSection\n\nSection \"OutputClass\"\n    Identifier \"nvidia\"\n    MatchDriver \"nvidia-drm\"\n    Driver \"nvidia\"\n    Option \"AllowEmptyInitialConfiguration\"\n    Option \"PrimaryGPU\" \"yes\"\n    ModulePath \"/usr/lib/nvidia/xorg\"\n    ModulePath \"/usr/lib/xorg/modules\"\nEndSection\n```\n\nEnsuite, ajoutez les deux lignes suivantes au début de votre ~/.xinitrc :\n\n```\n~/.xinitrc\n```\n\n```\nxrandr --setprovideroutputsource modesetting NVIDIA-0\nxrandr --auto\n```\n\nMaintenant, redémarrez pour charger les pilotes, et X devrait démarrer.\n\nSi le dpi de votre affichage n'est pas correct, ajoutez la ligne suivante :\n\n```\nxrandr --dpi 96\n```\n\nSi vous obtenez un écran noir au démarrage de X, vérifiez qu'il n'y a pas d'esperluettes après les deux commandes xrandr dans ~/.xinitrc. S'il y a des esperluettes, il semble que le gestionnaire de fenêtres puisse s'exécuter avant que les commandes xrandr ne finissent de s'exécuter, ce qui conduit à un écran noir.\n\n"
    },
    {
      "title": "Gestionnaires d'affichage",
      "level": 3,
      "content": "Si vous utilisez un gestionnaire d'affichage, vous devrez créer ou modifier un script de configuration d'affichage pour votre gestionnaire d'affichage au lieu d'utiliser ~/.xinitrc.\n\n"
    },
    {
      "title": "LightDM",
      "level": 4,
      "content": "Pour le gestionnaire d'affichage LightDM :\n\n```\n/etc/lightdm/display_setup.sh\n```\n\n```\n#!/bin/sh\nxrandr --setprovideroutputsource modesetting NVIDIA-0\nxrandr --auto\n```\n\nRendez le script exécutable.\n\nConfigurez maintenant lightdm pour qu'il exécute le script en éditant la section [Seat:*] dans /etc/lightdm/lightdm.conf :\n\n```\n/etc/lightdm/lightdm.conf\n```\n\n```\n[Seat:*]\ndisplay-setup-script=/etc/lightdm/display_setup.sh\n```\n\nMaintenant, redémarrez et votre gestionnaire d'affichage devrait démarrer.\n\n"
    },
    {
      "title": "SDDM",
      "level": 4,
      "content": "Pour le gestionnaire d'affichage SDDM (SDDM est le DM par défaut pour KDE) :\n\n```\n/usr/share/sddm/scripts/Xsetup\n```\n\n```\nxrandr --setprovideroutputsource modesetting NVIDIA-0\nxrandr --auto\n```\n\n"
    },
    {
      "title": "GDM",
      "level": 4,
      "content": "Pour le gestionnaire d'affichage GDM, créez deux nouveaux fichiers .desktop :\n\n```\n/usr/share/gdm/greeter/autostart/optimus.desktop\n/etc/xdg/autostart/optimus.desktop\n```\n\n```\n[Desktop Entry]\nType=Application\nName=Optimus\nExec=sh -c \"xrandr --setprovideroutputsource modesetting NVIDIA-0; xrandr --auto\"\nNoDisplay=true\nX-GNOME-Autostart-Phase=DisplayServer\n```\n\nAssurez-vous que GDM utilise X comme serveur par défaut.\n\n"
    },
    {
      "title": "Vérification de la 3D",
      "level": 3,
      "content": "Vous pouvez vérifier si la carte NVIDIA est utilisée en installant mesa-utils et en exécutant\n\n```\n$ glxinfo | grep NVIDIA\n```\n\n"
    },
    {
      "title": "Informations complémentaires",
      "level": 3,
      "content": "Pour plus d'informations, consultez la page officielle de NVIDIA sur le sujet [2].\n\n"
    },
    {
      "title": "Utiliser le déchargement de rendu PRIME",
      "level": 3,
      "content": "Il s'agit de la méthode officielle de NVIDIA pour prendre en charge le choix de cartes graphiques.\n\nConsultez PRIME#PRIME render offload pour plus de détails.\n\n"
    },
    {
      "title": "Utiliser nouveau",
      "level": 3,
      "content": "Consultez PRIME pour choisir votre carte graphique et nouveau pour le pilote NVIDIA open-source.\n\n"
    },
    {
      "title": "Utiliser Bumblebee",
      "level": 3,
      "content": "Consultez Bumblebee.\n\n"
    },
    {
      "title": "Utiliser nvidia-xrun",
      "level": 3,
      "content": "Consultez nvidia-xrun.\n\n"
    },
    {
      "title": "Utiliser optimus-manager",
      "level": 3,
      "content": "Consultez la documentation en amont d'Optimus-manager. Elle couvre à la fois l'installation et la configuration avec Arch Linux.\n\n"
    },
    {
      "title": "Utiliser EnvyControl",
      "level": 3,
      "content": "Consultez la documentation en amont d'EnvyControl. Elle couvre à la fois l'installation et les instructions d'utilisation.\n\n"
    },
    {
      "title": "Utiliser NVidia-eXec",
      "level": 3,
      "content": "Consultez la documentation en amont de NVidia-eXec. Elle couvre à la fois les instructions d'installation et d'utilisation.\n\n"
    },
    {
      "title": "Utiliser nvidia-switch",
      "level": 3,
      "content": "Voir la documentation en amont de nvidia-switch. Elle couvre à la fois les instructions d'installation et d'utilisation.\n\n"
    },
    {
      "title": "Tearing/perte de VSync",
      "level": 3,
      "content": "Activez le DRM kernel mode setting, qui activera à son tour la synchronisation PRIME et corrigera le tearing.\n\nVous pouvez lire le fil de discussion officiel du forum [3] pour plus de détails.\n\n"
    },
    {
      "title": "Failed to initialize the NVIDIA GPU at PCI:1:0:0 (GPU fallen off the bus / RmInitAdapter failed!)",
      "level": 3,
      "content": "Ajouter rcutree.rcu_idle_gp_delay=1 aux paramètres du noyau. Le sujet original se trouve dans [4] et [5].\n\n"
    },
    {
      "title": "Résolution, balayage d'écran incorrect. Erreurs EDID dans Xorg.log",
      "level": 3,
      "content": "Ceci est dû au fait que le pilote NVIDIA ne détecte pas l'EDID de l'écran. Vous devez spécifier manuellement le chemin d'accès à un fichier EDID ou fournir les mêmes informations d'une manière similaire.\n\nPour fournir le chemin d'accès au fichier EDID, éditez la section Device de la carte NVIDIA dans Xorg.conf, en ajoutant ces lignes et en modifiant certaines parties pour refléter votre propre système :\n\n```\n/etc/X11/xorg.conf\n```\n\n```\nSection \"Device\" (Périphérique)\n       \tOption \"ConnectedMonitor\" \"CRT-0\" (moniteur connecté)\n       \tOption \"CustomEDID\" \"CRT-0:/sys/class/drm/card0-LVDS-1/edid\"\n\tOption \"IgnoreEDID\" \"false\" (ignorer l'identifiant)\n\tOption \"UseEDID\" \"true\" (vrai)\nEndSection\n```\n\nSi Xorg ne démarre pas, essayez de remplacer toutes les références de CRT par DFB. card0 est l'identifiant de la carte Intel à laquelle l'écran est connecté via LVDS. Le binaire edid se trouve dans ce répertoire. Si l'arrangement matériel est différent, la valeur de CustomEDID peut varier mais ceci doit encore être confirmé. Le chemin commencera dans tous les cas par /sys/class/drm.\n\nVous pouvez également générer votre edid avec des outils comme read-edid et faire pointer le pilote vers ce fichier. Même les modélisations peuvent être utilisées, mais assurez-vous alors de modifier UseEDID et IgnoreEDID.\n\n"
    },
    {
      "title": "Mauvaise résolution sans erreur EDID",
      "level": 3,
      "content": "En utilisant nvidia-xconfig, des informations incorrectes peuvent être générées dans xorg.conf et en particulier des taux de rafraîchissement de moniteur erronés qui restreignent les résolutions possibles. Essayez de commenter les lignes HorizSync/VertRefresh. Si cela vous aide, vous pouvez probablement aussi supprimer tout ce qui n'est pas mentionné dans cet article.\n\n"
    },
    {
      "title": "Problème de verrouillage (lspci hangs)",
      "level": 3,
      "content": "Symptômes : lspci se bloque, la suspension du système échoue, l'arrêt se bloque, optirun se bloque.\n\nConcerne : les ordinateurs portables récents avec GTX 965M ou similaire lorsque bbswitch (par exemple via Bumblebee) ou nouveau est utilisé.\n\nLorsque la ressource d'alimentation dGPU est activée, elle peut ne pas le faire et se bloquer dans le code ACPI (kernel bug 156341).\n\nLorsque vous utilisez nouveau, la désactivation de la gestion de l'alimentation au moment de l'exécution l'empêche de changer l'état de l'alimentation, évitant ainsi ce problème. Pour désactiver la gestion de l'alimentation au moment de l'exécution, ajoutez nouveau.runpm=0 aux paramètres du noyau.\n\nPour les solutions de contournement spécifiques aux modèles connus, consultez this issue. Dans d'autres cas, vous pouvez essayer de démarrer avec acpi_osi=\"!Windows 2015\" ou acpi_osi= ! acpi_osi=\"Windows 2009\" ajoutés à vos paramètres du noyau. (Pensez à signaler votre ordinateur portable dans ce rapport de bug).\n\n"
    },
    {
      "title": "Aucun écran trouvé sur un ordinateur portable/NVIDIA Optimus",
      "level": 3,
      "content": "Vérifiez si le résultat ressemble à :\n\n```\n$ lspci | grep VGA\n```\n\n```\n00:02.0 VGA compatible controller: Intel Corporation Core Processor Integrated Graphics Controller (rev 02)\n01:00.0 VGA compatible controller: nVidia Corporation Device 0df4 (rev a1)\n```\n\nLes pilotes NVIDIA prennent en charge Optimus depuis la version 319.12 Beta [6] avec les noyaux 3.9 et plus.\n\nUne autre solution consiste à installer le pilote Intel pour gérer les écrans, puis si vous voulez des logiciels 3D, vous devez les faire passer par Bumblebee pour leur dire d'utiliser la carte NVIDIA.\n\n"
    },
    {
      "title": "Gels aléatoires \"(EE) NVIDIA(GPU-0) : WAIT\"",
      "level": 3,
      "content": "En utilisant les pilotes propriétaires sur une configuration avec une carte AMD intégrée et avec la carte NVIDIA dédiée comme seule carte utilisée, les utilisateurs signalent des blocages pouvant durer jusqu'à 10 secondes, avec les erreurs suivantes dans les journaux Xorg :\n\n```\n[219.796] (EE) NVIDIA(GPU-0) : WAIT (2, 8, 0x8000, 0x0002e1c4, 0x0002e1cc)\n[226.796] (EE) NVIDIA(GPU-0) : WAIT (1, 8, 0x8000, 0x0002e1c4, 0x0002e1cc)\n```\n\nBien que la cause du problème ne soit pas encore identifiée, elle semble liée à un conflit dans la façon dont les cartes intégrées et dédiées interagissent avec Xorg.\n\nLa solution consiste à utiliser des graphiques interchangeables, voir PRIME#PRIME render offload pour plus de détails.\n\n"
    }
  ]
}
{
  "title": "Gocryptfs (Português)",
  "url": "https://wiki.archlinux.org/title/Gocryptfs_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Criptografia de dados em repouso\n- Encfs\n\nDo gocryptfs (traduzido):\n\nVeja a página oficial do gocryptfs para uma introdução de suas funcionalidades, benchmarks, etc. Veja criptografia de dados em repouso#Tabela de comparação para uma visão geral de métodos alternativos e EncFS como alternativa direta.\n\n"
    },
    {
      "title": "Instalação",
      "level": 2,
      "content": "Instale gocryptfs ou gocryptfs-gitAUR.\n\nComo um sistema de arquivos FUSE, gocryptfs é totalmente configurável sem necessidade de poderes administrativos e guarda seus arquivos no diretório do usuário.\n\n"
    },
    {
      "title": "Uso",
      "level": 2,
      "content": "Veja gocryptfs(1) e seus exemplos primeiro.\n\n- Para alcançar seu objetivo de encriptação autentificada, gocryptfs implementa um modo de encriptação AES-EME (para nomes de arquivos, não o conteúdo). Apesar deste modo não ter sido amplamente usado/auditado ainda, oferece integridade para proteção dos dados uma funcionalidade não disponível para métodos alternativos de encriptação direta.\n- Veja esta issue do projeto para ver as descobertas da primeira auditoria de segurança para mais informações.\n\n"
    },
    {
      "title": "Exemplo usando o modo reverso",
      "level": 3,
      "content": "Uma das principais aplicações para métodos de encriptação baseada em arquivo são backups criptografados. Sistemas de arquivos baseados no FUSE são flexíveis para isto, desde que eles permitem uma ampla variedade de backup usando ferramentas comuns. Por exemplo, um ponto criptografado com gocryptfs FUSE pode ser facilmente criado diretamente em um compartilhamento Samba/NFS ou localização Dropbox, sincronizada para um host remoto com rsync, ou somente ser manualmente copiado para um amarzenamento remoto de backup.\n\nO modo reverso do gocryptfs é particularmente útil para criar backups criptografados, desde que virtualmente não requer capacidade de armazenamento extra na máquina para realizar o backup.\n\nA seguir é mostrado o usuário archie criando um backup de /home/archie:\n\nPrimeiro, archie inicializa a configuração para seu diretório home:\n\n```\n$ gocryptfs -init -reverse /home/archie\n```\n\n```\nChoose a password for protecting your files.\nPassword:\n...\n```\n\nSegundo, um diretório vazio para a versão criptografada é criada e montada:\n\n```\n$ mkdir /tmp/crypt\n$ gocryptfs -reverse /home/archie /tmp/crypt\nPassword:\nDecrypting master key\n\nYour master key is:\n...\nFilesystem mounted and ready.\n$\n```\n\nTerceiro, archie cria um backup do diretório criptografado, uma simples cópia local para este exemplo:\n\n```\n$ cp -a /tmp/crypt /tmp/backup\n```\n\ne pronto.\n\nO diretório criptografado pode permanecer montado para a sessão do usuário, ou desmontado manualmente:\n\n```\n$ fusermount -u /tmp/crypt\n$ rmdir /tmp/crypt\n```\n\nPara restaurar do backup criptografado, uma visão de texto puro é montada usando o modo normal do gocryptfs:\n\n```\n$ mkdir /tmp/restaurar\n$ gocryptfs /tmp/backup/ /tmp/restaurar\nPassword: \nDecrypting master key\n...\nFilesystem mounted and ready.\n$\n```\n\nAgora os arquivos necessários podem ser restaurados.\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- A primeira auditoria de segurança do gocryptfs (inglês)\n- RFC5297 Synthetic Initialization Vector (SIV) Authenticated Encryption Using the Advanced Encryption Standard (AES)\n\n"
    }
  ]
}
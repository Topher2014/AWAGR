{
  "title": "Nápověda:Čtení",
  "url": "https://wiki.archlinux.org/title/N%C3%A1pov%C4%9Bda:%C4%8Cten%C3%AD",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Související články\n\n- Help:Browsing\n- Help:Style\n\nJelikož většina ArchWiki obsahuje označení, jež nemusí být pochopitelná pro nové uživatele Arch GNU/Linuxu, zde si vysvětlíme, co přesně znamenají, abychom to nemuseli popisovat pokaždé v jednotlivých článcích.\n\n"
    },
    {
      "title": "Rozvržení",
      "level": 2,
      "content": "Většina článků na ArchWiki se nesnaží poskytnout celostní úvod ke každému námětu; namísto toho jsou napsány podle DRY (Neopakuj se) zásady; od uživatelů se očekává, že si vyhledají a přečtou články, které jsou potřeba k porozumění textu. Kde to je možno, text je vyznačen tak, aby odkazoval na užitečný článek. Vizte #Formátování pro podrobnosti.\n\nKvůli tomuto rozvržení může být nutné si přečíst všechny příbuzné články, abyste textu porozuměli. Obzvlášť od nových Arch (nebo obecně GNU/Linux) uživatelů se očekává, že si přečtou větší počet článků předtím, než budou vůbec schopni řešit i jednoduché potíže. Je velice důležité zkonzultovat všechny podpůrné články ještě předtím, než budete žádat jiné uživatele o pomoc.\n\n"
    },
    {
      "title": "Formátování",
      "level": 2,
      "content": "- odkaz na část článku: #Rozvržení\n- odkaz na jiný ArchWiki článek\n- odkaz na externí webovou stránku\n- odkaz na návod: intro(1)\n- stránka návodu, která je dostupná pouze offline: foo(1)\n- odkaz na balíček v oficiálním repozitáři: foobar\n- odkaz na balíček v AUR: foobarAUR\n\n"
    },
    {
      "title": "Běžný uživatel nebo root",
      "level": 2,
      "content": "Některé části jsou napsány takto:\n\n```\n# mkinitcpio -p linux\n```\n\nJiné mají odlišnou předponu:\n\n```\n$ makepkg -s\n```\n\nKřížek (#) označuje, že příkaz musí být spuštěn jako root, zatímco příkaz s dolarem ($) by se měl spustit pod uživatelským účtem.\n\nZnamenité výjimky, na něž byste si měli dávat pozor:\n\n```\n# Tento alias činí výstup z ls barevným\nalias ls='ls --color=auto'\n```\n\nV tomto případě kód kolem křížku naznačuje, že se nemá spouštět jako příkaz; mělo by se to vepsat do souboru. Tady křížek označuje komentář. Komentář je popisný text, který nebude překládán programem. Bash používá stejného znaku pro komentáře jako pro root PS1.\n\nPokud se zamyslíte, rozeznáte tyto dva případy tím, že první písmeno po # je velké. Většinou se Unix příkazy tak nepíšou; místo toho jsou zkráceniny namísto úplných slov (například z Copy se stane cp).\n\nNicméně většina článků upozorňuje uživatele:\n\nDoplňte k ~/path/to/file:\n\n```\n# Tento alias činí výstup z ls barevným\nalias ls='ls --color=auto'\n```\n\n"
    },
    {
      "title": "Doplňování, přidávání, vytváření, editování",
      "level": 2,
      "content": "Když Vás pobízíme, abyste doplnili, přidali, vytvořili nebo editovali jeden nebo více souborů, dáváme tím najevo, že byste měli použít jeden z následujících způsobů.\n\nK vytvoření nebo upravování víceřádkových souborů doporučujeme použít textový editor. Například k poupravení soboru /etc/bash.bashrc pomocí nano:\n\n```\n# nano /etc/bash.bashrc\n```\n\nK vytvoření nebo přepsání souboru jedním stringem je jednodušší použít přesměrování výstupu. Následující příklady vytvoří nebo přepíše obsah souboru /etc/hostname textem myhostname.\n\n```\n# echo myhostname > /etc/hostname\n```\n\nPřesměrování výstupu může být také užito pro doplnění stringu k souboru. Následující příklad doplní text {{ic[[custom-repo}} k souboru /etc/pacman.conf.\n\n```\n# echo \"[custom-repo]\" >> /etc/pacman.conf\n```\n\nKdyž Vás pobízíme, abyste vytvořili adresáře, užijte příkazu mkdir:\n\n```\n# mkdir /mnt/boot\n```\n\n"
    },
    {
      "title": "Spustitelné soubory",
      "level": 3,
      "content": "Pokud má být soubor využíván jako skript (ať už má být spouštěn ručně nebo jiným programem), musí být označen jako executable (spustitelný), například pomocí:\n\n```\n$ chmod +x script\n```\n\nVizte chmod pro více podrobností. Některé aplikace jako správce souborů mohou poskytovat grafická rozhraní pro to samé.\n\n"
    },
    {
      "title": "Zdroje",
      "level": 2,
      "content": "Některé aplikace, obzvlášť příkazové řádky, využívají skripty pro svou konfiguraci: pokud je upravíte, musí být sourced, aby se uplatnily změny. Například pro bash bychom toho docílili takto (source můžete nahradit .:\n\n```\n$ source ~/.bashrc\n```\n\nPokud wiki doporučuje upravit konfigurační skript, neupozorní Vás, že musíte znovu načíst konfigurační soubor, a pouze v některých případech Vás odkáže sem.\n\n"
    },
    {
      "title": "Instalace balíčků",
      "level": 2,
      "content": "Pokud po Vás článek chce nainstalovat balíčky obvyklým způsobem, neřekne Vám, jak toho dosáhnete; prostě zmíní, které balíčky máte nainstalovat.\n\nČásti níže skýtají přehled běžných instalačních postupů podle druhu balíčku.\n\n"
    },
    {
      "title": "Oficiální balíčky.",
      "level": 3,
      "content": "Pro balíčky z oficiálních repozitářů přečtete přibližně takový text:\n\nTo znamená, že použijete příkaz:\n\n```\n# pacman -S foobar\n```\n\nČlánek o pacmanovi poskytuje důkladné podrobnosti týkající se účinné správy balíčků na Arch GNU/Linuxu.\n\n"
    },
    {
      "title": "Arch Uživatelský Repozitář",
      "level": 3,
      "content": "Pro balíčky z Arch Uživatelského Repozitáře (AUR) přečtete spíše něco takového:\n\nTo obecně znamená, že musíte následovat odkaz foobarAUR, stáhnout PKGBUILD archív, extrahovat jej, potvrdit obsah a následně zadat v stejném adresáři:\n\n```\n$ makepkg -si\n```\n\nČlánek Arch Uživatelský Repozitář poskytuje podrobné vysvětlivky a dobré rady pro spravování AUR balíčků.\n\n"
    },
    {
      "title": "Spravování systemd unit",
      "level": 2,
      "content": "Pokud Vás článek pobízí, abyste spustili (start), povolili (enable), zastavili (stop) nebo restartovali (restart) některé systemd unity (například některou službu), neposkytne k tomu potřebné kroky. Místo toho uvidíte něco takového:\n\nTo znamená, že máte užít příkazu:\n\n```\n# systemctl start example.service\n```\n\nOdkaz Spusťte Vás přesměruje na systemd článek, jenž skýtá všechny potřebné podrobnosti k účinnému spravování systemd unit na Arch GNU/Linuxu.\n\n"
    },
    {
      "title": "Systémové konfigurace oproti uživatelským",
      "level": 2,
      "content": "Je důležité si pamatovat, že jsou dva různé druhy konfigurací na GNU/Linux systému. Systémové konfigurace ovlivňují všechny uživatele. Jelikož systémová nastavení se nacházejí v adresáři /etc, je potřebné mít root práva k úpravě těchto souborů. Například k aplikování Bash nastavení systémově, musí se upravit /etc/bash.bashrc\n\nUživatelská nastavení ovlivňují pouze jednoho uživatele. Dotfiles (doslova soubory s tečkou) jsou využívány pro uživatelské konfigurace. Například soubor ~/.bashrc je konfigurační soubor pro uživatele. Každý uživatel si vytváří vlastní nastavení; vlastní aliasy, funkce nebo jiné interaktivní vymoženosti jako pobídky, aniž ovlivňují ostatní uživatele.\n\n"
    },
    {
      "title": "Často používané shell soubory",
      "level": 3,
      "content": "Bash a jiné Bourne-kompatibilní shelly, jako například Zsh, také používají zdrojové soubory podle toho, zdali to je přihlašovací shell nebo interaktivní shell. Vizte Bash#Konfigurační soubory a Zsh#Spouštěcí a vypínací soubory pro podrobnější ponaučení.\n\n"
    },
    {
      "title": "Pseudo proměnné v příkladech",
      "level": 2,
      "content": "Některé kódové bloky obsahují takzvané pseudo proměnné, které, jak název napovídá, nejsou opravdové proměnné. Místo toho zastupují systémová nastavení, která se musí nahradit ještě před spuštěním/přeložením kódu. Běžně užívané shelly jako bash nebo zsh poskytují tab-completion k samovolnému doplňování proměnných pro běžné užívané příkazy jako systemctl.\n\nV článcích, jež se shodují s Pravidly formátování a interpunkce, pseudo proměnné jsou psány zkoseným textem. Například:\n\n- Povolte dhcpcd@název_rozhraní.service pro síťové rozhraní rozpoznáno z výstupu příkazu ip link.\n\nV tomto případě jméno_rozhraní je využito jako pseudo proměnná v systemd template unit. Všechny systemd template unity, rozeznatelné @ symbolem, vyžadují položku systémové konfigurace jako vstup. Vizte Využívání unit.\n\n- Příkaz dd if==datový_zdroj of=/dev/sdX bs= velikost_sektoru count=číslo_sektoru seek=sektor_počátečního_oddílu může být spuštěn jako root k pročištění diskového oddílu s určenými parametry.\n\nV tomto případě pseudo proměnné jsou využity k popisu parametrů, které je musí nahradit. Podrobnosti, jak je využít, naleznete v části Bezpečné smazání disku|Spočítání bloků k ručnímu smazání, které skýtají daný příkaz.\n\nCo se týká souborů, psaní pseudoproměnných do skutečných konfiguračních souborů může rozbít programy, které je využívají.\n\n"
    },
    {
      "title": "Elipsy",
      "level": 3,
      "content": "Často elipsy (...) nejsou součástí opravdového souboru nebo výstupu kódu; místo toho představují přeskočené části nebo dobrovolný text, jenž není podstatný pro dané téma.\n\nNapříklad HOOKS=\"... šifruj ... souborové systémy ...\" nebo:\n\n```\n/etc/X11/xorg.conf.d/50-synaptics.conf\n```\n\n```\nSection \"InputClass\"\n    ...\n    Option      \"CircularScrolling\"          \"on\"\n    Option      \"CircScrollTrigger\"          \"0\"\n    ...\nEndSection\n```\n\nUvědomte si ale, že v některých případech mohou elipsy být důležitá část kódové syntaxe: všímaví uživatelé rozeznají případy z kontextu.\n\n"
    }
  ]
}
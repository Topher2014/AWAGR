{
  "title": "Pacman (Italiano)/Package signing (Italiano)",
  "url": "https://wiki.archlinux.org/title/Pacman_(Italiano)/Package_signing_(Italiano)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Il sistema di firmatura pacchetti in pacman utilizza il modello \"web of trust\" per assicurare che i pacchetti vengano dagli sviluppatori e non da qualcuno che si sostituisca a loro indebitamente. Gli sviluppatori dei pacchetti e i Trusted User hanno chiavi PGP individuali che utilizzano per firmare i propri pacchetti. Questo significa che loro garantiscono il contenuto del pacchetto. Anche l'utente comune possiede una PGP key unica, che viene generata quando questi configura pacman-key(8). È questa \"web of trust\" che collega la chiave dell'utente alle chiavi principali (master-key).\n\nEsempi di \"web of trust\":\n\n- Pacchetti personali (custom): l'utente crea da sé il proprio pacchetto e lo firma con una key personale.\n- Pacchetti non ufficiali (unofficial): uno sviluppatore fa un pacchetto e lo firma. L'utente utilizza la propria key per firmare quella dello sviluppatore.\n- Pacchetti ufficiali (official): uno sviluppatore fa un pacchetto e lo firma. La chiave dello sviluppatore viene convalidata dalle chiavi principali (master-key). L'utente fa poi affidamento su queste ultime per garantire gli sviluppatori.\n\n"
    },
    {
      "title": "Configurare pacman",
      "level": 3,
      "content": "Prima di tutto, si deve decidere che livello di controllo si desidera quando si installa un pacchetto con pacman -S. A determinarlo è l'opzione SigLevel nel file /etc/pacman.conf. Alcune possibilità sono anche menzionate nei commenti di quel file. Per un'esposizione più dettagliata, si rimanda alla pagina di manuale pacman.conf(5) § PACKAGE AND DATABASE SIGNATURE CHECKING. Fondamentalmente si può abilitare il controlle delle firme a livello globale o per repository. Si tenga presente che settando il SigLevel a livello globale (globally) nella sezione [options], non sarà permesso di installare i propri pacchetti usando il comando pacman -U, a meno che siano firmati da una chiave fidata (ing. trusted key).\n\nIl valore predefinito di LocalFileSigLevel in pacman.conf, invece, non richiede la firma di pacchetti creati dall'utente stesso tramite makepkg ed installati con pacman -U.\n\n```\nSigLevel = Required DatabaseOptional TrustedOnly\n```\n\nPer pacchetti remoti, la configurazione predefinita appoggia soltanto l'installazione di pacchetti firmati da chiavi fidate:\n\n```\n/etc/pacman.conf\n```\n\n```\nSigLevel = Required DatabaseOptional\n```\n\nTrustedOnly è il parametro compilato in pacman come predefinito. La configurazione predefinita è funzionalmente identica all'utilizzo globale dell'impostazione:\n\n```\nSigLevel = Required DatabaseOptional TrustedOnly\n```\n\nLa funzionalità appena descritta può anche essere realizzata a livello dei repositori specificando quanto segue (più in basso, in pacman.conf:\n\n```\n[core]\nSigLevel = PackageRequired\nInclude = /etc/pacman.d/mirrorlist\n```\n\nQuesto introduce esplicitamente la convalida delle firme per i pacchetti nel repositore, ma non richiede che il database stesso sia firmato. Usando Optional in questo punto negherebbe l'impostazione globale di Required per questo repositore.\n\n"
    },
    {
      "title": "Inizializzare il portachiavi",
      "level": 3,
      "content": "Per inizializzare il portachiavi di pacman, usare il comando:\n\n```\n# pacman-key --init\n```\n\n"
    },
    {
      "title": "Verificare le cinque chiavi principali o master-key",
      "level": 3,
      "content": "L'installazione iniziale delle chiavi è ottenuta usando\n\n```\n# pacman-key --populate archlinux\n```\n\nÈ opportuno prendersi del tempo per verificare le Chiavi principali quando vengono mostrate, in quanto sono usate per co-firmare (e convalidare) tutte le altre chiavi degli sviluppatori.\n\nLe chiavi PGP di solito sono troppo grandi (2048 bit o più) perché le persone possano lavorarci, quindi di solito sono spezzate per creare una fingerprint a 40 cifre esadecimali, che possono essere usate per controllare a mano che le due chiavi siano le medesime. Le ultime otto cifre sono note come \"key ID\" (versione corta) e rappresentano una sorta di \"nome\" della key. Le ultime sedici cifre del fingerprint corrispondono all'ID lungo.\n\n"
    },
    {
      "title": "Aggiungere le chiavi degli sviluppatori",
      "level": 3,
      "content": "Le chiavi degli sviluppatori ufficiali e dei Trusted User vengono firmate dalle master-key, quindi all'utente non sarà necessario usare pacman-key per firmarle in locale. Nel caso in cui pacman incontri una key e non la riconosca, domanderà all'utente se desidera scaricarla dal keyserver impostato in /etc/pacman.d/gnupg/gpg.conf (o usasndo l'opzione --keyserver da riga di comando). Wikipedia mette a disposizione una lista di keyserver.\n\nUna volta che la chiave di uno sviluppatore è stata scaricata, non sarà necessario farlo una seconda volta: quella key verrà usata per verificare ogni pacchetto da lui firmato.\n\nNote: E' possibile aggiornarle manualmente eseguendo:\n\nE' possibile aggiornarle manualmente eseguendo:\n\n```\n# pacman-key --refresh-keys\n```\n\n"
    },
    {
      "title": "Aggiungere chiavi non ufficiali",
      "level": 3,
      "content": "È possibile utilizzare questo metodo per aggiungere la propria key al keyring di pacman, o quando si abilita un repository firmato non ufficiale.\n\nPrima di tutto, ci si deve procurare l'ID dal proprietario della key, quindi si deve aggiungere la chiave al keyring.\n\n- Se la chiave si trova su un keyserver, la si importi con: # pacman-key -r <keyid>\n- Se invece viene fornito un link ad un keyfile, lo si scarichi e si esegua: # pacman-key --add /percorso/al/keyfile\n\n```\n# pacman-key -r <keyid>\n```\n\n```\n# pacman-key --add /percorso/al/keyfile\n```\n\nAssicurarsi di verificare il fingerprint, come si farebbe per una chiave principale, o con ogni altra chiave che si stia per convalidare:\n\n```\n$ pacman-key -f keyid\n```\n\nSarà quindi necessario firmare localmente la chiave appena importata:\n\n```\n# pacman-key --lsign-key keyid\n```\n\nIn questo modo si permetterà alla chiave di firmare i pacchetti.\n\n"
    },
    {
      "title": "Debugging con gpg",
      "level": 3,
      "content": "È possibile accedere al keyring di pacman direttamente tramite gpg. Esempio:\n\n```\n# gpg --homedir /etc/pacman.d/gnupg --list-keys\n```\n\n"
    },
    {
      "title": "Aggiornare spesso il sistema",
      "level": 3,
      "content": "Aggiornare spesso nel modo descritto in pacman (Italiano)#Aggiornamento dei pacchetti è il modo migliore di evitare errori di firma. Se dovesse comunque accadere di non aggiornare il sistema in un intervallo di tempo prolungato, si consiglia di sincronizzare manualmente il database dei pacchetti e di aggiornare il pacchetto archlinux-keyring prima di effettuare l'aggiornamento del sistema:\n\n```\n# pacman -Sy archlinux-keyring && pacman -Su\n```\n\nQuesto comando non è considerato un aggiornamento parziale dato che sincronizza il database dei pacchetti ed aggiorna prima il portachiavi. Ambo le operazioni vanno eseguite prima di aggiornare il sistema in modo da essere sicuri di potere convalidare correttamente le firme di tutti i pacchetti da aggiornare.\n\n"
    },
    {
      "title": "Aggiornare regolarmente l'ora del sistema",
      "level": 3,
      "content": "Quando l'ora del sistema non è giusta, la firma delle chiavi può essere considerata scaduta (o invalida) e la convalida delle firme fallisce. Si sincronizzi l'ora regolarmente utilizzando il Network Time Protocol daemon.\n\n"
    },
    {
      "title": "Errori del tipo \"Invalid signature\"",
      "level": 3,
      "content": "pacman-key dipende dall'orario di sistema. Se è impostato in maniera errata, si avrà il seguente errore:\n\n```\nerror: PackageName: signature from \"User <email@archlinux.org>\" is invalid\nerror: failed to commit transaction (invalid or corrupted package (PGP signature))\nErrors occured, no packages were upgraded.\n```\n\nSe si utilizza ntpd, si corregga l'orario del sistema dando i comandi\n\n```\n# ntpd -qg\n# hwclock -w\n```\n\nSi possono anche impiegare altri client NTP (vedere time synchronization).\n\nQualora la correzione dell'ora non dovesse risolvere il problema, si provi uno dei seguenti metodi.\n\n"
    },
    {
      "title": "Rimuovere pacchetti dalla cache",
      "level": 4,
      "content": "Alcuni pacchetti potrebbero essere corrotti o non firmati, provocando questo problema. Rimuovere tutti i pacchetti coinvolti dalla cache dando\n\n```\n# rm /var/cache/pacman/pkg/nome_pacchetto\n```\n\nin modo tale da riscaricare il pacchetto. Si può anche ripulire l'intera cache.\n\n"
    },
    {
      "title": "Ripristinare tutte le chiavi",
      "level": 4,
      "content": "Si possono rimuovere tutte le chiavi installate rimuovendo la directory /etc/pacman.d/gnupg (da root) e dando nuovamente il comando pacman-key --init seguito da pacman-key --populate per riaggiungere le chiavi predefinite.\n\n"
    },
    {
      "title": "Disabilitare la convalida della firma",
      "level": 4,
      "content": "Se non ci si preoccupa della firma dei pacchetti si può disabilitare completamente la convalida delle firme OpenPGP. Si modifichi /etc/pacman.conf per aggiungere le seguenti righe sotto [options]:\n\n```\nSigLevel = Never\n#LocalFileSigLevel = Optional\n#RemoteFileSigLevel = Required\n```\n\nSi rimuovere tutte le impostazioni del tipo SigLevel a livello di repositore (per esempio aggiungendo il prefisso # a capo della riga) perché sostituiscono le impostazioni globali. Questo risulterà nella non-convalida delle firme, comportamento prima di pacman 4. Se si imposta questo sistema non vi è bisogno di istituire un portachiavi con pacman-key. Queste impostazioni possono essere cambiate in seguite se si dovesse decidere di riabilitare la convalida dei pacchetti.\n\n"
    },
    {
      "title": "Impossibile importare le chiavi",
      "level": 3,
      "content": "Questo problema può essere causato da:\n\n- Pacchetto archlinux-keyring non aggiornato\n- Data incorretta\n- Il proprio ISP blocca le porte per l'importazione delle chiavi PGP\n- La propria cache di pacman contiene copie di pacchetti non firmati creati con tentativi precedenti\n- dirmngr non è stato configurato correttamente\n\nSi potrebbe essere impossibilitati a portare a termine un aggiornamento se il proprio pacchetto archlinux-keyring non è aggiornato. Si provi ad aggiornare il sistema.\n\nSe quanto sopra non funziona e la data è corretta si possono provare i seguenti metodi.\n\n"
    },
    {
      "title": "Aggiornare il sistema",
      "level": 4,
      "content": "Si tenti di aggiornare il sistema e si verifichi se così facendo, il problema risulta risolto.\n\n"
    },
    {
      "title": "Cambio di keyserver",
      "level": 4,
      "content": "Se si sospetta che ci sia qualcosa che non va con il keyserver, se ne provi un altro.\n\nUna possibilità è il server Ubuntu. Per impostare questo, si modifichi il file /etc/pacman.d/gnupg/gpg.conf… e si modifichi la riga keyserver in:\n\n```\nkeyserver hkp://keyserver.ubuntu.com\n```\n\nUn'altro keyserver è quello MIT, che fornisce una porta alternativa. Per farlo, si modifichi /etc/pacman.d/gnupg/gpg.conf e si cambi la riga keyserver in:\n\n```\nkeyserver hkp://pgp.mit.edu:11371\n```\n\nSe anche quanto sopra non è d'aiuto, si utilizzi il keyserver kjsl, che fornisce il servizio attraverso la porta 80 (HTTP).\n\n```\nkeyserver hkp://keyserver.kjsl.com:80\n```\n\nSe si è disabilitato IPv6, gpg non funzionerà se verrà specificato un indirizzo IPv6. Utilizzare quindi un keyserver IPv4 come:\n\n```\nkeyserver hkp://ipv4.pool.sks-keyservers.net:11371\n```\n\nQualora ci si fosse dimenticati di avviare pacman-key --populate archlinux si potrebbero avere degli errori tentando di importare le chiavi.\n\n"
    },
    {
      "title": "Ripulire la cache dei pacchetti",
      "level": 4,
      "content": "Se nessuno dei metodi di cui sopra funziona, è possibile che la propria cache di pacman, situata in /var/cache/pacman/pkg/, contenga copie di pacchetti non firmati creati con tentativi precedenti. Si provi ad eliminare la cache manualmente o eseguendo:\n\n```\n# pacman -Sc\n```\n\nQuesto comando elimina dalla cache tutti i pacchetti non installati.\n\n"
    },
    {
      "title": "Rimuovere pacchetti non aggiornati",
      "level": 4,
      "content": "Se gli stessi pacchetti continuano a fallire l'installazione o l'aggiornamento e si è certi di aver eseguito il procedimento d'installazione di pacman-key in maniera corretta, si provi a rimuovere questi pacchetti con rm /var/cache/pacman/pkg/pacchettocattivo*. In questo modo saranno riscaricati dal processo di aggiornamento.\n\nQuesta potrebbe essere la soluzione anche qualora si stia ricevendo un messaggio come error: linux: signature from \"Some Person <Some.Person@example.com>\" is invalid o simili quando si sta aggiornando (es. si potrebbe non essere vittima di un attacco MITM, dopo di tutto: semplicemente il pacchetto scaricato potrebbe essere corroto).\n\n"
    },
    {
      "title": "Affidabilità dubbia della firma",
      "level": 3,
      "content": "Talvolta quando si esegue pacman -Syu si può incontrare questo errore:\n\n```\nerror: package-name: signature from \"packager\" is unknown trust\n```\n\nQuesto accade perché la chiave della persona (packager) che ha compilato il pacchetto (package-name) non è presente e/o non è marchiata come fidata nel database gpg locale di pacman-key. Pacman sembrerebbe non essere sempre in grado di verificare se la chiave è stata ricevuta e risulta come fidata prima di proseguire. Questo potrebbe anche darsi nel caso in cui una chiave sia scaduta dopo essere stata aggiunta al portachiavi personale.\n\nQuesta situazione può essere evitata:\n\n- Si aggiorni manualmente il portachiavi tramite il pacchetto archlinux-keyring prima di aggiornare il sistema intero, oppure\n- si aggiornino le chiavi con pacman-key --refresh-keys, oppure\n- Si ripristino tutte le chiavi, oppure\n- Si firmi manualmente con una chiave locale (sconsigliato), oppure\n- Si imposti temporaneamente SigLevel to TrustAll (sconsigliato).\n\nLe ultime due operazioni violano la catena di fiducia e vanno usate con cautela.\n\n"
    },
    {
      "title": "Aggiornamento chiavi via proxy",
      "level": 3,
      "content": "Un bug in gnupg impedisce di aggiornare le chiavi tramite proxy (https://bugs.g10code.com/gnupg/issue1786[link interrotto 2020-08-04]).\n\nPer aggirare il problema, è possibile procedere come segue:\n\nModificare /etc/hosts:\n\n```\n/etc/hosts\n```\n\n```\n127.0.0.1 pool.sks-keyservers.net\n```\n\nCreare un tunnel con socat. Il programma dovrà rimanere in ascolto sulla porta TCP 80, quindi sarà necessario eseguirlo da root:\n\n```\n# socat TCP-LISTEN:80,reuseaddr,fork PROXY:localhost:pool.sks-keyservers.net:80,proxyport=3128\n```\n\nAggiornare le chiavi:\n\n```\n# pacman-key --refresh-keys\n```\n\nAnnullare le modifiche apportate quando il proxy non è più necessario.\n\n"
    },
    {
      "title": "gpg: keyserver receive failed: No dirmngr",
      "level": 3,
      "content": "Si veda FS#42798. Si esegua:\n\n```\n# dirmngr < /dev/null\n```\n\n"
    },
    {
      "title": "Fonti aggiuntive",
      "level": 2,
      "content": "- Firma dei pacchetti di Pacman – 1: Makepkg e Aggiunta Repo\n- Firma dei pacchetti di Pacman – 2: Pacman-key\n- Firma dei pacchetti di Pacman – 3: Pacman\n- Firma dei pacchetti di Pacman – 4: Arch Linux\n\n"
    }
  ]
}
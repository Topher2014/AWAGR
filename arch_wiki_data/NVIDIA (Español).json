{
  "title": "NVIDIA (Español)",
  "url": "https://wiki.archlinux.org/title/NVIDIA_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artículos relacionados\n\n- NVIDIA/Tips and tricks\n- NVIDIA/Troubleshooting\n- Nouveau\n- NVIDIA Optimus (Español)\n- PRIME (Español)\n- Bumblebee (Español)\n- nvidia-xrun\n- Xorg (Español)\n- Vulkan (Español)\n\nNote: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nNote: **2024-02-28** \n\nEste artículo cubre el controlador de tarjeta gráfica propietario NVIDIA. Para el controlador de código abierto, consulta Nouveau (Español). Si tienes un portátil con gráficos híbridos Intel/NVIDIA, consulta NVIDIA Optimus (Español) en su lugar.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n1. Si no sabe qué tarjeta gráfica tiene, averígüelo usando el comando: $ lspci -k | grep -A 2 -E \"(VGA|3D)\"\n1. Determine la versión de controlador necesaria para su tarjeta mediante: Visitando la página de NVIDIA sitio de descarga de controladores y utilizando las listas desplegables. Buscando el nombre del código (por ejemplo, NV50, NVC0, etc.) en página de nombres en clave de Nouveau wiki o GitLab de Nouveau, luego buscando el nombre en la lista de tarjetas de legado de NVIDIA: si tu tarjeta no está ahí puedes usar el controlador más reciente.\n1. Instale el controlador adecuado para su tarjeta: Nota: Al instalar dkms, lea Dynamic Kernel Module Support#Installation. Para la serie Maxwell (NV110/GMXXX)[enlace roto 2025-04-06] y posteriores, instale el paquete nvidia (para su uso con el kernel linux) o el paquete nvidia-lts (para su uso con el kernel linux-lts) o el paquete nvidia-dkms (para el resto de kernels). Si estos paquetes no funcionan, es posible que nvidia-betaAUR tenga una versión de controlador más reciente que ofrezca compatibilidad. Alternativamente, para la serie Turing (NV160/TUXXX)[enlace roto 2025-04-06] o posterior, puede instalarse el paquete nvidia-open para módulos de kernel de código abierto en el kernel linux (En otros kernels debe usarse nvidia-open-dkms). Esto es actualmente calidad Beta en tarjetas de escritorio, por lo que habrá problemas. Debido a nvidia-open issue #282, no funciona en sistemas que tengan GPUs integradas AMD. Para la serie Kepler (NVE0/GKXXX)[enlace roto 2025-04-06], instale el paquete nvidia-470xx-dkmsAUR. Nota: Es posible que los controladores 470xx y anteriores no funcionen correctamente en Linux 5.18 (o posterior) en sistemas con CPUs Intel de 11ma generación y posteriores[enlace roto 2024-07-30] debido a una incompatibilidad con Indirect Branch Tracking. Puede desactivarlo estableciendo ibt=off Kernel parameters (Español) desde el Boot loader (Español). Ten en cuenta que esta característica de seguridad es responsable de mitigar una clase de técnicas de explotación. Para tarjetas aún más antiguas, eche un vistazo a #Controladores no compatibles.\n1. Para soporte con aplicaciones de 32 bits, instale también el paquete lib32 correspondiente del repositorio multilib (por ejemplo, lib32-nvidia-utils).\n1. Elimine kms del conjunto HOOKS en /etc/mkinitcpio.conf y regenera el initramfs. Esto evitará que el initramfs contenga el módulo nouveau asegurando que el kernel no pueda cargarlo durante el arranque temprano.\n1. Reiniciar. El paquete nvidia-utils contiene un archivo que pone en la lista negra el módulo nouveau, por lo que es necesario reiniciar.\n\n```\n$ lspci -k | grep -A 2 -E \"(VGA|3D)\"\n```\n\n- Visitando la página de NVIDIA sitio de descarga de controladores y utilizando las listas desplegables.\n- Buscando el nombre del código (por ejemplo, NV50, NVC0, etc.) en página de nombres en clave de Nouveau wiki o GitLab de Nouveau, luego buscando el nombre en la lista de tarjetas de legado de NVIDIA: si tu tarjeta no está ahí puedes usar el controlador más reciente.\n\n- Para la serie Maxwell (NV110/GMXXX)[enlace roto 2025-04-06] y posteriores, instale el paquete nvidia (para su uso con el kernel linux) o el paquete nvidia-lts (para su uso con el kernel linux-lts) o el paquete nvidia-dkms (para el resto de kernels). Si estos paquetes no funcionan, es posible que nvidia-betaAUR tenga una versión de controlador más reciente que ofrezca compatibilidad.\n- Alternativamente, para la serie Turing (NV160/TUXXX)[enlace roto 2025-04-06] o posterior, puede instalarse el paquete nvidia-open para módulos de kernel de código abierto en el kernel linux (En otros kernels debe usarse nvidia-open-dkms). Esto es actualmente calidad Beta en tarjetas de escritorio, por lo que habrá problemas. Debido a nvidia-open issue #282, no funciona en sistemas que tengan GPUs integradas AMD.\n- Para la serie Kepler (NVE0/GKXXX)[enlace roto 2025-04-06], instale el paquete nvidia-470xx-dkmsAUR. Nota: Es posible que los controladores 470xx y anteriores no funcionen correctamente en Linux 5.18 (o posterior) en sistemas con CPUs Intel de 11ma generación y posteriores[enlace roto 2024-07-30] debido a una incompatibilidad con Indirect Branch Tracking. Puede desactivarlo estableciendo ibt=off Kernel parameters (Español) desde el Boot loader (Español). Ten en cuenta que esta característica de seguridad es responsable de mitigar una clase de técnicas de explotación.\n- Para tarjetas aún más antiguas, eche un vistazo a #Controladores no compatibles.\n\n- Si estos paquetes no funcionan, es posible que nvidia-betaAUR tenga una versión de controlador más reciente que ofrezca compatibilidad.\n\n- Esto es actualmente calidad Beta en tarjetas de escritorio, por lo que habrá problemas. Debido a nvidia-open issue #282, no funciona en sistemas que tengan GPUs integradas AMD.\n\nUna vez instalado el controlador, continúe con #Configuración de Xorg o #Wayland.\n\n"
    },
    {
      "title": "Controladores no compatibles",
      "level": 3,
      "content": "Si tienes una tarjeta antigua, NVIDIA ya no da soporte activo a los controladores para tu tarjeta. Esto significa que estos controladores no soportan oficialmente la versión actual de Xorg. Por lo tanto, podría ser más fácil utilizar el controlador nouveau, que soporta las tarjetas antiguas con el Xorg actual.\n\nSin embargo, los controladores de antiguos de NVIDIA siguen estando disponibles y podrían proporcionar un mejor rendimiento/estabilidad 3D.\n\n- Para la serie Fermi (NVC0/GF1XX)[enlace roto 2025-04-06], instale el paquete nvidia-390xx-dkmsAUR.\n- Para la serie Tesla (NV50/G80-90-GT2XX)[enlace roto 2025-04-06], instale el paquete nvidia-340xx-dkmsAUR.\n- Para las series Curie (NV40/G70)[enlace roto 2025-04-06] y anteriores, los controladores ya no están disponibles para Arch Linux.\n\n"
    },
    {
      "title": "Kernel personalizado",
      "level": 3,
      "content": "Asegúrese de que su kernel t CONFIG_DRM_SIMPLEDRM=y, y si utiliza CONFIG_DEBUG_INFO_BTF entonces esto es necesario en el PKGBUILD (desde el kernel 5.16):\n\n```\ninstall -Dt \"$builddir/tools/bpf/resolve_btfids\" tools/bpf/resolve_btfids/resolve_btfids\n```\n\n"
    },
    {
      "title": "DRM kernel mode setting",
      "level": 3,
      "content": "Dado que NVIDIA no admite la carga tardía automática de KMS, es necesario activar DRM (Direct Rendering Manager) usando kernel modesetting para que los compositores de Wayland funcionen correctamente, o para permitir Xorg sin usuario root.\n\nPara habilitarlo, establezca el parametro de kernel modeset=1 para el módulo nvidia_drm.\n\nPara comprobar que nvidia_drm.modeset=1 se ha aplicado correctamente tras un reinicio, ejecute lo siguiente:\n\n```\n# cat /sys/module/nvidia_drm/parameters/modeset\n```\n\nQue ahora debería devolver Y, y ya no N.\n\nAdemás, con el controlador de la versión 545 y superiores, también puede establecer el parámetro experimental fbdev=1, que se requiere para decirle al controlador de NVIDIA para proporcionar su propio dispositivo framebuffer en lugar de depender de efifb o vesafb, que no funcionan bajo simpledrm.\n\nPara la versión del controlador NVIDIA < 545 o cuando también no se utiliza fbdev=1, la opción nvidia_drm.modeset=1 debe establecerse a través de parámetros del kernel, con el fin de desactivar simpledrm. [1] (para más información, consulte FS#73720).\n\n- fbdev=1 tiene problemas conocidos que sólo están posiblemente solucionados en la versión 550 y superiores del controlador, vea Talk:NVIDIA#Framebuffer consoles experimental support para más información.\n- Los controladores NVIDIA anteriores a la versión 470 (por ejemplo, nvidia-390xx-dkmsAUR) no soportan Xwayland acelerado por hardware, lo que provoca que las aplicaciones no nativas de Wayland sufran un bajo rendimiento en las sesiones Wayland.\n\n"
    },
    {
      "title": "Carga temprana",
      "level": 4,
      "content": "Para una funcionalidad básica, añadir el parámetro del kernel debería ser suficiente. Si quieres asegurarte de que se carge lo antes posible, o estás notando problemas de arranque (como que el módulo del kernel nvidia se carga después que el gestor de pantalla) puedes añadir nvidia, nvidia_modeset, nvidia_uvm y nvidia_drm al initramfs.\n\nSi usas mkinitcpio initramfs, sigue mkinitcpio (Español)#MODULES para añadir módulos.\n\nSi se añaden al initramfs, no olvide ejecutar mkinitcpio cada vez que haya una actualización de controladores nvidia. Vea #pacman hook para automatizar estos pasos.\n\nNote: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nSi utilizas Booster, sigue Booster#Early module loading.\n\nPara evitar la posibilidad de olvidar actualizar initramfs después de una actualización de controladores NVIDIA, es posible que desee utilizar un pacman hook:\n\n```\n/etc/pacman.d/hooks/nvidia.hook\n```\n\n```\n[Trigger]\nOperation=Install\nOperation=Upgrade\nOperation=Remove\nType=Package\nTarget=nvidia\nTarget=linux\n# Cambie la parte linux de arriba si se utiliza un kernel diferente.\n# Ejemplo: Si usa linux-lts, cambie Target=linux por Target=linux-lts\n\n[Action]\nDescription=Actualizar el módulo NVIDIA en initcpio\nDepends=mkinitcpio\nWhen=PostTransaction\nNeedsTargets\nExec=/bin/sh -c 'while read -r trg; do case $trg in linux*) exit 0; esac; done; /usr/bin/mkinitcpio -P'\n```\n\nAsegúrese de que el paquete Target establecido en este hook es el que ha instalado en los pasos anteriores (por ejemplo, nvidia o nvidia-lts).\n\n"
    },
    {
      "title": "Descodificación de vídeo acelerada por hardware",
      "level": 3,
      "content": "Note: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nLa descodificación de vídeo acelerada con VDPAU es compatible con las tarjetas GeForce serie 8 y posteriores. La descodificación acelerada de vídeo con NVDEC es compatible con las tarjetas Fermi (serie ~400) y posteriores. Consulte Hardware video acceleration para obtener más información.\n\n"
    },
    {
      "title": "Codificación de vídeo acelerada por hardware con NVENC",
      "level": 3,
      "content": "Note: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nNVENC requiere el módulo nvidia_uvm y la creación de nodos de dispositivo relacionados bajo /dev.\n\nLa ultima versión de los controladores proporciona una udev rule que crea nodos de dispositivo automáticamente, por lo que no se requiere ninguna acción adicional.\n\nSi utiliza un controlador antiguo (por ejemplo, nvidia-340xx-dkmsAUR), deberá crear nodos de dispositivo. Ejecutar la utilidad nvidia-modprobe los crea automáticamente. Puedes crear /etc/udev/rules.d/70-nvidia.rules para ejecutarla automáticamente:\n\n```\n/etc/udev/rules.d/70-nvidia.rules\n```\n\n```\nACTION==\"add\", DEVPATH==\"/bus/pci/drivers/nvidia\", RUN+=\"/usr/bin/nvidia-modprobe -c 0 -u\"\n```\n\n"
    },
    {
      "title": "Configuración de Xorg",
      "level": 2,
      "content": "The proprietary NVIDIA graphics card driver does not need any Xorg server configuration file. You can start X to see if the Xorg server will function correctly without a configuration file. However, it may be required to create a configuration file (prefer /etc/X11/xorg.conf.d/20-nvidia.conf over /etc/X11/xorg.conf) in order to adjust various settings. This configuration can be generated by the NVIDIA Xorg configuration tool, or it can be created manually. If created manually, it can be a minimal configuration (in the sense that it will only pass the basic options to the Xorg server), or it can include a number of settings that can bypass Xorg's auto-discovered or pre-configured options.\n\nNote: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nEl controlador propietario de la tarjeta gráfica NVIDIA no necesita ningún archivo de configuración del servidor Xorg. Puede iniciar X para ver si el servidor Xorg funciona correctamente sin un archivo de configuración. Sin embargo, puede ser necesario crear un archivo de configuración (es preferible usar /etc/X11/xorg.conf.d/20-nvidia.conf en lugar de /etc/X11/xorg.conf) para ajustar varias opciones. Esta configuración puede ser generada por la herramienta de configuración Xorg de NVIDIA, o puede ser creada manualmente. Si se crea manualmente, puede ser una configuración mínima (en el sentido de que sólo pasará las opciones básicas al servidor Xorg), o puede incluir una serie de ajustes que pueden evitar las opciones autodescubiertas o preconfiguradas de Xorg.\n\n"
    },
    {
      "title": "Configuración automática",
      "level": 3,
      "content": "El paquete NVIDIA incluye una herramienta de configuración automática para crear un archivo de configuración del servidor Xorg (xorg.conf) y puede ejecutarse mediante:\n\n```\n# nvidia-xconfig\n```\n\nEste comando autodetectará y creará (o editará, si ya existe) la configuración /etc/X11/xorg.conf de acuerdo con el hardware actual.\n\nSi hay elementos de DRI, asegúrese de que estén comentadas:\n\n```\n#    Load        \"dri\"\n```\n\nComprueba dos veces tu /etc/X11/xorg.conf para asegurarte de que tu profundidad, sincronización horizontal, refresco vertical y resoluciones por defecto sean aceptables.\n\n"
    },
    {
      "title": "nvidia-settings",
      "level": 3,
      "content": "La herramienta nvidia-settings te permite configurar muchas opciones usando CLI o GUI. Ejecutar nvidia-settings sin ninguna opción ejecutara la GUI, para opciones CLI vea nvidia-settings(1).\n\nPuedes ejecutar la CLI/GUI como usuario no root y guardar la configuración en ~/.nvidia-settings-rc usando la opción Save Current Configuration en la pestaña nvidia-settings Configuration.\n\nPara cargar el ~/.nvidia-settings-rc para el usuario actual:\n\n```\n$ nvidia-settings --load-config-only\n```\n\nVea Autostarting (Español) para iniciar este comando en cada arranque.\n\n- Xorg puede no iniciar o bloquearse al arrancar después de guardar los cambios de nvidia-settings. Ajustando o borrando los archivos generados de ~/.nvidia-settings-rc y/o Xorg debería recuperar el inicio normal.\n- El escritorio Cinnamon puede anular los cambios realizados a través de nvidia-settings. Puede ajustar el comportamiento de inicio de Cinnamon para evitarlo.\n\n"
    },
    {
      "title": "Configuración manual",
      "level": 3,
      "content": "Varios ajustes (que no se pueden activar automaticamente o con nvidia-settings) se pueden realizar editando el archivo de configuración. Será necesario reiniciar el servidor Xorg antes de aplicar los cambios.\n\nConsulta NVIDIA Accelerated Linux Graphics Driver README and Installation Guide para más detalles y opciones.\n\n"
    },
    {
      "title": "Configuración mínima",
      "level": 4,
      "content": "Un bloque de configuración básico en 20-nvidia.conf (o obsoleto en xorg.conf) tendría el siguiente aspecto:\n\n```\n/etc/X11/xorg.conf.d/20-nvidia.conf\n```\n\n```\nSection \"Device\"\n        Identifier \"NVIDIA Card\"\n        Driver \"nvidia\"\n        VendorName \"NVIDIA Corporation\"\n        BoardName \"GeForce GTX 1050 Ti\"\nEndSection\n```\n\n"
    },
    {
      "title": "Desactivar el logo al inicio",
      "level": 4,
      "content": "Añade la opción \"NoLogo\" en la sección Device:\n\n```\nOption \"NoLogo\" \"1\"\n```\n\n"
    },
    {
      "title": "Overriding monitor detection",
      "level": 4,
      "content": "La opción \"ConnectedMonitor\" de la sección Device permite anular la detección del monitor cuando se inicia el servidor X, lo que puede ahorrar una cantidad significativa de tiempo en el arranque. Las opciones disponibles son: \"CRT\" para conexiones analógicas, \"DFP\" para monitores digitales y \"TV\" para televisores.\n\nLa siguiente declaración fuerza al controlador NVIDIA a saltarse las comprobaciones de arranque y reconocer el monitor como DFP:\n\n```\nOption \"ConnectedMonitor\" \"DFP\"\n```\n\n"
    },
    {
      "title": "Activar el control de brillo",
      "level": 4,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nNote: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nAñadir a los parámetros del kernel:\n\n```\nnvidia.NVreg_RegistryDwords=EnableBrightnessControl=1\n```\n\nComo alternativa, añada lo siguiente en la sección Device:\n\n```\nOption \"RegistryDwords\" \"EnableBrightnessControl=1\"\n```\n\nSi el control de brillo sigue sin funcionar con esta opción, prueba a instalar nvidia-bl-dkmsAUR.\n\n"
    },
    {
      "title": "Habilitar SLI",
      "level": 4,
      "content": "Tomado y traducido de el README del controlador de NVIDIA. Apéndice B: Esta opción controla la configuración del renderizado SLI en configuraciones compatibles. Una \"configuración compatible\" es un ordenador equipado con una placa base con certificación SLI y 2 ó 3 GPU GeForce con certificación SLI.\n\nBusque el ID del bus PCI de la primera GPU utilizando lspci:\n\n```\n# lspci | grep -E \"VGA|3D controller\"\n```\n\n```\n00:02.0 VGA compatible controller: Intel Corporation Xeon E3-1200 v2/3rd Gen Core processor Graphics Controller (rev 09)\n03:00.0 VGA compatible controller: NVIDIA Corporation GK107 [GeForce GTX 650] (rev a1)\n04:00.0 VGA compatible controller: NVIDIA Corporation GK107 [GeForce GTX 650] (rev a1)\n08:00.0 3D controller: NVIDIA Corporation GM108GLM [Quadro K620M / Quadro M500M] (rev a2)\n```\n\nAñada el BusID (3 en el ejemplo anterior) bajo la sección Device:\n\n```\nBusID \"PCI:3:0:0\"\n```\n\nAñada el valor del modo de renderizado SLI deseado en la sección Screen:\n\n```\nOption \"SLI\" \"AA\"\n```\n\nLa siguiente tabla presenta los modos de renderizado disponibles.\n\nTable content:\nValue | Behavior\n0, no, off, false, Single | Utiliza sólo una GPU al renderizar.\n1, yes, on, true, Auto | Activa SLI y deja que el controlador seleccione automáticamente el modo de renderizado adecuado.\nAFR | Activa SLI y utiliza el modo de renderizado de fotogramas alternos.\nSFR | Activa SLI y utiliza el modo de renderizado de fotogramas divididos.\nAA | Activa SLI y utiliza el antialiasing SLI. Utilízalo junto con el antialiasing de escena completa para mejorar la calidad visual.\n\nAlternativamente, puede utilizar la utilidad nvidia-xconfig para insertar estos cambios en xorg.conf con un solo comando:\n\n```\n# nvidia-xconfig --busid=PCI:3:0:0 --sli=AA\n```\n\nPara comprobar si el modo SLI está activado, utilize este comando:\n\n```\n$ nvidia-settings -q all | grep SLIMode\n```\n\n```\nAttribute 'SLIMode' (arch:0.0): AA\n    'SLIMode' is a string attribute.\n    'SLIMode' is a read-only attribute.\n    'SLIMode' can use the following target types: X Screen.\n```\n\nSi esta configuración no funciona, es posible que tenga que utilizar el ID de bus PCI proporcionado por nvidia-settings,\n\n```\n$ nvidia-settings -q all | grep -i pcibus\n```\n\n```\nAttribute 'PCIBus' (host:0[gpu:0]): 101.\n  'PCIBus' is an integer attribute.\n  'PCIBus' is a read-only attribute.\n  'PCIBus' can use the following target types: GPU, SDI Input Device.\nAttribute 'PCIBus' (host:0[gpu:1]): 23.\n  'PCIBus' is an integer attribute.\n  'PCIBus' is a read-only attribute.\n  'PCIBus' can use the following target types: GPU, SDI Input Device.\n```\n\ny comente la opción PrimaryGPU en su configuración de xorg.conf.d,\n\n```\n/usr/share/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf\n```\n\n```\n...\n\nSection \"OutputClass\"\n...\n    # Option \"PrimaryGPU\" \"yes\"\n...\n```\n\nEl uso de esta configuración también puede resolver cualquier problema gráfico de arranque.\n\n"
    },
    {
      "title": "Múltiples monitores",
      "level": 3,
      "content": "Note: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nVea Multihead para obtener más información general.\n\n"
    },
    {
      "title": "Using nvidia-settings",
      "level": 4,
      "content": "La herramienta nvidia-settings puede configurar múltiples monitores.\n\nPara la configuración CLI, primero obtenga el CurrentMetaMode ejecutando:\n\n```\n$ nvidia-settings -q CurrentMetaMode\n```\n\n```\nAttribute 'CurrentMetaMode' (hostnmae:0.0): id=50, switchable=no, source=nv-control :: DPY-1: 2880x1620 @2880x1620 +0+0 {ViewPortIn=2880x1620, ViewPortOut=2880x1620+0+0}\n```\n\nGuarde todo después de la :: al final del atributo (en este caso: DPY-1: 2880x1620 @2880x1620 +0+0 {ViewPortIn=2880x1620, ViewPortOut=2880x1620+0+0}) y utilize este comando para reconfigurar sus pantallas: nvidia-settings --assign \"CurrentMetaMode=your_meta_mode\".\n\n"
    },
    {
      "title": "ConnectedMonitor",
      "level": 4,
      "content": "Si el controlador no detecta correctamente un segundo monitor, puede forzarlo usando la opción ConnectedMonitor.\n\nEjemplo de configuración:\n\n```\n/etc/X11/xorg.conf\n```\n\n```\nSection \"Monitor\"\n    Identifier     \"Monitor1\"\n    VendorName     \"Panasonic\"\n    ModelName      \"Panasonic MICRON 2100Ex\"\n    HorizSync       30.0 - 121.0 # this monitor has incorrect EDID, hence Option \"UseEDIDFreqs\" \"false\"\n    VertRefresh     50.0 - 160.0\n    Option         \"DPMS\"\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Monitor2\"\n    VendorName     \"Gateway\"\n    ModelName      \"GatewayVX1120\"\n    HorizSync       30.0 - 121.0\n    VertRefresh     50.0 - 160.0\n    Option         \"DPMS\"\nEndSection\n\nSection \"Device\"\n    Identifier     \"Device1\"\n    Driver         \"nvidia\"\n    Option         \"NoLogo\"\n    Option         \"UseEDIDFreqs\" \"false\"\n    Option         \"ConnectedMonitor\" \"CRT,CRT\"\n    VendorName     \"NVIDIA Corporation\"\n    BoardName      \"GeForce 6200 LE\"\n    BusID          \"PCI:3:0:0\"\n    Screen          0\nEndSection\n\nSection \"Device\"\n    Identifier     \"Device2\"\n    Driver         \"nvidia\"\n    Option         \"NoLogo\"\n    Option         \"UseEDIDFreqs\" \"false\"\n    Option         \"ConnectedMonitor\" \"CRT,CRT\"\n    VendorName     \"NVIDIA Corporation\"\n    BoardName      \"GeForce 6200 LE\"\n    BusID          \"PCI:3:0:0\"\n    Screen          1\nEndSection\n```\n\nEl dispositivo duplicado con Screen es como se consigue que X use dos monitores en una tarjeta sin TwinView. Ten en cuenta que nvidia-settings eliminará cualquier opción ConnectedMonitor que hayas añadido.\n\n"
    },
    {
      "title": "TwinView",
      "level": 4,
      "content": "Quieres una sola pantalla grande en lugar de dos. Ajuste el argumento TwinView a 1. Esta opción debe utilizarse si desea composición. TwinView sólo funciona por cada tarjeta grafica, cuando todos los monitores participantes están conectados a la misma tarjeta.\n\n```\nOption \"TwinView\" \"1\"\n```\n\nEjemplo de configuración:\n\n```\n/etc/X11/xorg.conf.d/10-monitor.conf\n```\n\n```\nSection \"ServerLayout\"\n    Identifier     \"TwinLayout\"\n    Screen         0 \"metaScreen\" 0 0\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Monitor0\"\n    Option         \"Enable\" \"true\"\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Monitor1\"\n    Option         \"Enable\" \"true\"\nEndSection\n\nSection \"Device\"\n    Identifier     \"Card0\"\n    Driver         \"nvidia\"\n    VendorName     \"NVIDIA Corporation\"\n\n    #refer to the link below for more information on each of the following options.\n    Option         \"HorizSync\"          \"DFP-0: 28-33; DFP-1: 28-33\"\n    Option         \"VertRefresh\"        \"DFP-0: 43-73; DFP-1: 43-73\"\n    Option         \"MetaModes\"          \"1920x1080, 1920x1080\"\n    Option         \"ConnectedMonitor\"   \"DFP-0, DFP-1\"\n    Option         \"MetaModeOrientation\" \"DFP-1 LeftOf DFP-0\"\nEndSection\n\nSection \"Screen\"\n    Identifier     \"metaScreen\"\n    Device         \"Card0\"\n    Monitor        \"Monitor0\"\n    DefaultDepth    24\n    Option         \"TwinView\" \"True\"\n    SubSection \"Display\"\n        Modes          \"1920x1080\"\n    EndSubSection\nEndSection\n```\n\nInformación sobre las opciones del dispositivo (Ingles).\n\nSi tienes varias tarjetas con capacidad SLI, es posible ejecutar más de un monitor conectado a tarjetas distintas (por ejemplo: dos tarjetas en SLI con un monitor conectado a cada una). La opción \"MetaModes\", junto con el modo SLI Mosaic, permite hacerlo. A continuación se muestra una configuración que funciona para el ejemplo mencionado y ejecuta GNOME sin problemas.\n\n```\n/etc/X11/xorg.conf.d/10-monitor.conf\n```\n\n```\nSection \"Device\"\n        Identifier      \"Card A\"\n        Driver          \"nvidia\"\n        BusID           \"PCI:1:00:0\"\nEndSection\n\nSection \"Device\"\n        Identifier      \"Card B\"\n        Driver          \"nvidia\"\n        BusID           \"PCI:2:00:0\"\nEndSection\n\nSection \"Monitor\"\n        Identifier      \"Right Monitor\"\nEndSection\n\nSection \"Monitor\"\n        Identifier      \"Left Monitor\"\nEndSection\n\nSection \"Screen\"\n        Identifier      \"Right Screen\"\n        Device          \"Card A\"\n        Monitor         \"Right Monitor\"\n        DefaultDepth    24\n        Option          \"SLI\" \"Mosaic\"\n        Option          \"Stereo\" \"0\"\n        Option          \"BaseMosaic\" \"True\"\n        Option          \"MetaModes\" \"GPU-0.DFP-0: 1920x1200+4480+0, GPU-1.DFP-0:1920x1200+0+0\"\n        SubSection      \"Display\"\n                        Depth           24\n        EndSubSection\nEndSection\n\nSection \"Screen\"\n        Identifier      \"Left Screen\"\n        Device          \"Card B\"\n        Monitor         \"Left Monitor\"\n        DefaultDepth    24\n        Option          \"SLI\" \"Mosaic\"\n        Option          \"Stereo\" \"0\"\n        Option          \"BaseMosaic\" \"True\"\n        Option          \"MetaModes\" \"GPU-0.DFP-0: 1920x1200+4480+0, GPU-1.DFP-0:1920x1200+0+0\"\n        SubSection      \"Display\"\n                        Depth           24\n        EndSubSection\nEndSection\n\nSection \"ServerLayout\"\n        Identifier      \"Default\"\n        Screen 0        \"Right Screen\" 0 0\n        Option          \"Xinerama\" \"0\"\nEndSection\n```\n\nSi estás usando TwinView y sincronización vertical (la opción \"Sync to VBlank\" en nvidia-settings), notarás que sólo una pantalla está siendo sincronizada correctamente, a menos que tengas dos monitores idénticos. Aunque nvidia-settings ofrece una opción para cambiar qué pantalla está siendo sincronizada (la opción \"Sync to this display device\"), esto no siempre funciona. Una solución es añadir las siguientes variables de entorno en el inicio, por ejemplo añadir en /etc/profile:\n\n```\nexport __GL_SYNC_TO_VBLANK=1\nexport __GL_SYNC_DISPLAY_DEVICE=DFP-0\nexport VDPAU_NVIDIA_SYNC_DISPLAY_DEVICE=DFP-0\n```\n\nPuedes cambiar DFP-0 con tu pantalla preferida (DFP-0 es el puerto DVI y CRT-0 es el puerto VGA). Puedes encontrar el identificador de tu pantalla desde nvidia-settings en la sección \"X Server XVideoSettings\".\n\nEn caso de que quieras jugar juegos a pantalla completa usando TwinView, notarás que los juegos reconocen las dos pantallas como si fueran una sola pantalla grande. Aunque esto es técnicamente correcto (la pantalla virtual X es realmente el tamaño de tus pantallas combinadas), probablemente no quieras jugar en ambas pantallas al mismo tiempo.\n\nPara corregir este comportamiento para SDL, pruebe:\n\n```\nexport SDL_VIDEO_FULLSCREEN_HEAD=1\n```\n\nPara OpenGL, añade los Metamodes apropiados a tu xorg.conf en la sección Device y reinicia X:\n\n```\nOption \"Metamodes\" \"1680x1050,1680x1050; 1280x1024,1280x1024; 1680x1050,NULL; 1280x1024,NULL;\"\n```\n\nNote: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nOtro método que puede funcionar solo o junto con los mencionados anteriormente es iniciar juegos en un servidor X separado.\n\n"
    },
    {
      "title": "Modo \"Mosaic\"",
      "level": 4,
      "content": "El modo \"Mosaic\" es la única manera de utilizar más de 2 monitores a través de múltiples tarjetas gráficas con composición. Tu gestor de ventanas puede o no reconocer la distinción entre cada monitor. El modo \"Mosaic\" requiere una configuración SLI válida. Aunque utilices el modo Base sin SLI, las GPU deben ser compatibles con SLI.\n\nLa Base \"Mosaic\" funciona en cualquier conjunto de GPUs Geforce serie 8000 o superior. No puede activarse desde la interfaz gráfica de usuario nvidia-setting. Debe utilizar el programa de línea de comandos nvidia-xconfig o editar xorg.conf a mano. Deben especificarse los metamodes. El siguiente es un ejemplo para cuatro DFP en una configuración 2x2, cada uno funcionando a 1920x1024, con dos DFP conectados a dos tarjetas:\n\n```\n$ nvidia-xconfig --base-mosaic --metamodes=\"GPU-0.DFP-0: 1920x1024+0+0, GPU-0.DFP-1: 1920x1024+1920+0, GPU-1.DFP-0: 1920x1024+0+1024, GPU-1.DFP-1: 1920x1024+1920+1024\"\n```\n\nSi tienes una configuración SLI y cada GPU es una Quadro FX 5800, Quadro Fermi o posterior, puedes utilizar el modo Mosaico SLI. Puede activarse desde la interfaz gráfica nvidia-settings o desde la línea de comandos:\n\n```\n$ nvidia-xconfig --sli=Mosaic --metamodes=\"GPU-0.DFP-0: 1920x1024+0+0, GPU-0.DFP-1: 1920x1024+1920+0, GPU-1.DFP-0: 1920x1024+0+1024, GPU-1.DFP-1: 1920x1024+1920+1024\"\n```\n\n"
    },
    {
      "title": "Wayland",
      "level": 2,
      "content": "Vea Wayland (Español)#Requisitos para más información.\n\nPara más opciones de configuración, eche un vistazo a las páginas wiki o a la documentación del respectivo compositor.\n\nEn cuanto a Xwayland, eche un vistazo a Wayland (Español)#Xwayland.\n\nNote: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nLea GDM#Wayland and the proprietary NVIDIA driver cuando utilices GDM.\n\n"
    },
    {
      "title": "Trucos y consejos",
      "level": 2,
      "content": "Note: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nVea NVIDIA/Trucos y consejos.\n\n"
    },
    {
      "title": "Solución de problemas",
      "level": 2,
      "content": "Note: **Este artículo o sección necesita ser traducido.** Este artículo o sección necesita ser traducido.\n\nEste artículo o sección necesita ser traducido.\n\nVea NVIDIA/Solución de problemas.\n\n"
    },
    {
      "title": "Vea también",
      "level": 2,
      "content": "- Versiones actuales de controladores gráficos en el foro oficial de NVIDIA (Ingles)\n- Foro de desarrolladores de NVIDIA - Subforo Linux (Ingles)\n\n"
    }
  ]
}
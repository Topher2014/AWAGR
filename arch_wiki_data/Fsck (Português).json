{
  "title": "Fsck (Português)",
  "url": "https://wiki.archlinux.org/title/Fsck_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Ext4\n- Btrfs\n- fstab\n\nfsck, acrônimo do inglês de \"File System Check\", que significa \"verificação do sistema de arquivos \" é usado para verificar e, opcionalmente, reparar um ou mais sistemas de arquivos Linux. Normalmente, o programa fsck irá tentar manusear sistemas de arquivos em diferentes discos físicos em paralelo para reduzir o tempo total necessário para verificar todos os sistemas de arquivos (veja: fsck(8)).\n\nO processo de inicialização do Arch Linux convenientemente cuida dos procedimentos fsck por você e irá verificar todas as partições relevantes em seu(s) dispositivo(s) automaticamente em cada inicialização. Consequentemente, geralmente não há necessidade de recorrer à linha de comando.\n\n"
    },
    {
      "title": "Mecanismo",
      "level": 3,
      "content": "Há duas opções:\n\n1. mkinitcpio oferece a opção de executar fsck em seu sistema de arquivos raiz antes de montá-lo pelo hook do fsck. Ao fazer isto, você deverá montar a raiz em modo de escrita pelo apropriado parâmetro do kernel rw.[1]\n1. systemd irá executar fsck em todos os sistemas de arquivos, exceto os que tenham um código execução definido superior a 0 (em /etc/fstab ou arquivo init definido pelo usuário). Para o sistema de arquivos raiz, ele também deve ser montado inicialmente em modo somente-leitura com o parâmetro do kernel ro para depois ser remontado em modo de escrita pelo fstab (note que a opção de montagem defaults implica rw).\n\nA primeira opção descrita é a padrão, e é a obtida se você seguir o guia de instalação. Se, ao invés dela, ocorrer a opção 2, você precisará remover o hook do fsck de mkinitcpio.conf e usar ro na linha de comando do kernel. O parâmetro do kernel fsck.mode=skip pode ser usado para certificar-se de que fsck está completamente desativado para ambas as opções.\n\n"
    },
    {
      "title": "Forçando a verificação",
      "level": 3,
      "content": "Se você usar o hook base do mkinitcpio, será possível forçar a execução do fsck durante a inicialização passando fsck.mode=force como um parâmetro do kernel. Isto fará com que ele verifique cada sistema de arquivos existente na máquina.\n\nAlternativamente, systemd fornece systemd-fsck@.service(8), que verifica todos os sistemas de arquivos configurados, os quais não foram verificados em initramfs. Contudo, verificar o sistema de arquivos raiz dessa maneira irá causar uma demora no processo de inicialização, já que o sistema de arquivos precisará ser remontado.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n"
    },
    {
      "title": "Tentar reparar blocos danificados",
      "level": 3,
      "content": "Para automaticamente reparar setores danificados, execute:\n\nNote: **Sim** \n\n```\n# fsck -a\n```\n\n"
    },
    {
      "title": "Reparar blocos danificados interativamente",
      "level": 3,
      "content": "Para reparar setores danificados, execute:\n\n```\n# fsck -r <drive>\n```\n\n"
    },
    {
      "title": "Alterando a frequência de verificação",
      "level": 3,
      "content": "Por padrão, fsck verifica o sistema de arquivos a cada 30 inicializações (contadas individualmente para cada partição). Para alterar a frequência de verificação, execute:\n\n```\n# tune2fs -c 20 /dev/sda1\n```\n\nNeste exemplo, 20 é o número de inicializações que ocorrerão entre duas verificações.\n\nNote que 1 fará com que a verificação ocorra em cada inicialização, ao passo que 0 faria com que a varredura deixasse de ocorrer.\n\n```\n# dumpe2fs -h /dev/sda1 | grep -i 'mount count'\n```\n\n"
    },
    {
      "title": "Opções do fstab",
      "level": 3,
      "content": "fstab é um arquivo de configuração do sistema e é usado para informar ao Linux kernel quais partições (sistemas de arquivos) montar e onde estará a árvore do sistema de arquivos.\n\nUm entrada típica do /etc/fstab será algo semelhante a isto:\n\n```\n/dev/sda1   /         ext4      defaults       0  1\n/dev/sda2   /other    ext4      defaults       0  2\n/dev/sda3   /win      ntfs-3g   defaults       0  0\n```\n\nA sexta coluna (em negrito) é a opção do fsck.\n\n- 0 = Não verificar.\n- 1 = Primeiro sistema de arquivos (partição) passar pela verificação; / (partição raiz) deverá ser definida com 1.\n- 2 = Todos os outros sistemas de arquivos a serem verificados.\n\n"
    },
    {
      "title": "Não é possível executar fsck em uma partição /usr separada",
      "level": 3,
      "content": "1. Certifique-se de que você definiu hooks em /etc/mkinitcpio.conf e que você lembrou-se de recriar sua imagem initramfs após editar este arquivo.\n1. Verifique seu fstab! Somente a partição raiz precisa de \"1\" ao final da linha, todos os demais deverão conter \"2\" ou \"0\". Cuidadosamente verifique se há quaisquer erros de digitação.\n\n"
    },
    {
      "title": "ext2fs : no external journal",
      "level": 3,
      "content": "Às vezes (devido à falta de energia), um sistema de arquivos ext(3/4) poderá corromper-se de modo que um reparo normal não será capaz de solucionar. Normalmente, haverá um prompt do fsck indicando que não pôde encontrar um journal externo. Neste caso, execute os seguintes comandos:\n\nDesmontar a partição baseada em seu diretório\n\n```\n# umount <diretório>\n```\n\nGravar um novo journal à partição\n\n```\n# tune2fs -j /dev/<partition>\n```\n\nExecutar fsck para reparar a partição\n\n```\n# fsck -p /dev/<partition>\n```\n\n"
    }
  ]
}
{
  "title": "Backlight (日本語)",
  "url": "https://wiki.archlinux.org/title/Backlight_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "画面の輝度を操作するのは難易度が高いことがしばしばです。多くのマシンでは、物理的なハードウェアスイッチが付いておらず、ソフトウェアによる方法は動いたり動かなかったりとまちまちです。ハードウェアにあった方法を使うようにしてください。画面が明るすぎると眼精疲労を起こす可能性があります。\n\nソフトウェアを使ってモニターやノートパソコン、統合パネル (iMac など) の画面のバックライトを調整する方法は多数存在します。これらの 議論とこの wiki ページによると、制御方法は次のカテゴリに分類できます。\n\n- 明るさはベンダー指定のホットキーによって制御され、OS が明るさを調整するためのインターフェイスはありません。\n- 明るさは、ACPI、グラフィック、またはプラットフォーム ドライバーのいずれかによって制御されます。この場合、バックライト制御は、ユーザー空間の バックライト ユーティリティで使用できる /sys/class/backlight を通じてユーザーに公開されます。\n- 明るさは、setpci を介してグラフィック カード レジスタに書き込むことによって制御されます。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 ハードウェアインターフェイス 1.1 ACPI 1.1.1 カーネルコマンドラインオプション 1.1.2 Udev ルール 1.2 setpci 1.3 External monitors\n- 2 バックライトをオフにする\n- 3 systemd-backlight サービス\n- 4 バックライトユーティリティ 4.1 xbacklight 4.2 brightnessctl 4.3 light 4.4 relight 4.5 setpci (細心の注意を払って使用してください) 4.6 Calise 4.7 brightd 4.8 KDE\n- 5 色補正 5.1 Wayland 5.2 xcalib 5.3 Xflux 5.4 redshift 5.5 NVIDIA の設定\n- 6 トラブルシューティング 6.1 バックライト PWM 変調周波数 (Intel i915 のみ) 6.2 カーネル 3.13 で Intel チップセットでバックライトが調整できない 6.3 sysfs を変更しても明るさが変更されない\n\n- 1.1 ACPI 1.1.1 カーネルコマンドラインオプション 1.1.2 Udev ルール\n- 1.2 setpci\n- 1.3 External monitors\n\n- 1.1.1 カーネルコマンドラインオプション\n- 1.1.2 Udev ルール\n\n- 4.1 xbacklight\n- 4.2 brightnessctl\n- 4.3 light\n- 4.4 relight\n- 4.5 setpci (細心の注意を払って使用してください)\n- 4.6 Calise\n- 4.7 brightd\n- 4.8 KDE\n\n- 5.1 Wayland\n- 5.2 xcalib\n- 5.3 Xflux\n- 5.4 redshift\n- 5.5 NVIDIA の設定\n\n- 6.1 バックライト PWM 変調周波数 (Intel i915 のみ)\n- 6.2 カーネル 3.13 で Intel チップセットでバックライトが調整できない\n- 6.3 sysfs を変更しても明るさが変更されない\n\n"
    },
    {
      "title": "ACPI",
      "level": 3,
      "content": "スクリーンバックライトの明るさはバックライト LED やカソードの電力レベルの設定によって調整されます。電力レベルは大抵の場合ビデオ用の ACPI カーネルモジュールを使用することで操作することが可能です。このモジュールのインターフェイスは sysfs のフォルダ /sys/class/backlight によって提供されます。\n\nフォルダの名前はグラフィックカードのモデルによります。\n\n```\n# ls /sys/class/backlight/\n```\n\n```\nintel_backlight\n```\n\nこの例ではバックライトは Intel のグラフィックカードによって管理されています。ATI のカードでは acpi_video0 と呼ばれます。下の例では acpi_video0 を使っています。\n\nディレクトリには以下のファイルとフォルダが含まれています:\n\n```\nactual_brightness  brightness         max_brightness     subsystem/    uevent             \nbl_power           device/            power/             type\n```\n\n最大輝度は max_brightness を見ることでわかります、多くの場合15です。\n\n```\n# cat /sys/class/backlight/acpi_video0/max_brightness\n```\n\n```\n15\n```\n\n数値を brightness に書き込むことで明るさを設定できます。最大輝度よりも高い数値を設定することはできません。\n\n```\n# tee /sys/class/backlight/acpi_video0/brightness <<< 5\n```\n\n"
    },
    {
      "title": "カーネルコマンドラインオプション",
      "level": 4,
      "content": "たまに、マザーボードの実装が ACPI と異なっているために ACPI が上手く動作しないことがあります。これにはデュアルグラフィックのノートパソコンなども含まれます (例: Nvidia/Radeon のディスクリート GPU と Intel/AMD の内蔵 GPU) - この問題が発生するノートパソコンの例として Dell Studio, Dell XPS 14/15/17 や Lenovo のノートパソコンなどが挙げられます。カーネル開発者の Kamal Mostafa がこの問題を解決するパッチを作成しました - パッチは Linux 3.1 から含まれています。さらに、Nvidia-optimus ノートパソコンでは、nomodeset カーネルパラメータがバックライトの調整機能に干渉することがあります。以下のカーネルパラメータをブートローダー (grub, syslinux...) に追加してみてください:\n\n```\nvideo.use_native_backlight=1\n```\n\nまたは\n\n```\nacpi_osi=Linux acpi_backlight=vendor\n```\n\nまたは\n\n```\nacpi_osi=Linux acpi_backlight=legacy\n```\n\nacpi_backlight=vendor は ACPI video.ko ドライバーの代わりにベンダー固有のドライバー (例: thinkpad_acpi, sony_acpi など) を優先して使用します。\n\nLenovo IdeaPad ノートパソコンの場合、blacklist ideapad_laptop を /etc/modprobe.d/blacklist.conf に追加して ideapad_laptop モジュールをブラックリスト化する必要があるかもしれません (必要に応じてファイルを作成してください)。ソース。\n\n"
    },
    {
      "title": "Udev ルール",
      "level": 4,
      "content": "ACPI インターフェイスが利用できる場合、udev ルールを使って起動時にバックライトのレベルを設定することができます。\n\n```\n/etc/udev/rules.d/81-backlight.rules\n```\n\n```\n# Set backlight level to 8\nSUBSYSTEM==\"backlight\", ACTION==\"add\", KERNEL==\"acpi_video0\", ATTR{brightness}=\"8\"\n```\n\nこのルールで値を固定しても、systemd-backlight サービスによって起動時に以前の輝度レベルに戻されます。このルールを使いたいときは、systemd-backlight サービスで説明されているように system-backlight サービスをマスクする必要があります。\n\n"
    },
    {
      "title": "setpci",
      "level": 3,
      "content": "In some cases (e.g. Intel Mobile 945GME [1]), it is possible to set the register of the graphic card to adjust the backlight. It means you adjust the backlight by manipulating the hardware directly, which can be risky and generally is not a good idea. Not all of the graphic cards support this method.\n\nWhen using this method, you need to use lspci first to find out where your graphic card is.\n\n```\n# setpci -s 00:02.0 F4.B=0\n```\n\n"
    },
    {
      "title": "External monitors",
      "level": 3,
      "content": "DDC/CI (Display Data Channel Command Interface) can be used to communicate with external monitors implementing MCCS (Monitor Control Command Set) over I2C. DDC can control brightness, contrast, inputs, etc on supported monitors. Settings available via the OSD (On-Screen Display) panel can usually also be managed via DDC. The kernel module i2c-dev may need to be loaded if the /dev/i2c-* devices do not exist.\n\nddcutil can be used to query and set brightness settings:\n\n```\n# ddcutil capabilities | grep \"Feature: 10\"\n```\n\n```\nFeature: 10 (Brightness)\n```\n\n```\n# ddcutil getvcp 10\n```\n\n```\nVCP code 0x10 (Brightness                    ): current value =    60, max value =   100\n```\n\n```\n# ddcutil setvcp 10 70\n```\n\nAlternatively, one may use ddcci-driver-linux-dkmsAUR to expose external monitors in sysfs. Then, after loading the ddcci kernel module, one can use any backlight utility.\n\n- Using ddcci and i2c-dev simultaneously may result in resource conflicts such as a Device or resource busy error.\n- Users of NVIDIA's proprietary drivers may need to add Option \"RegistryDwords\" \"RMUseSwI2c=0x01; RMI2cSpeed=100\" to the Device section in /etc/X11/xorg.conf.d/20-nvidia.conf (generated by nvidia-xconfig) or options nvidia NVreg_RegistryDwords=RMUseSwI2c=0x01;RMI2cSpeed=100 to /etc/modprobe/conf.d/nvidia.conf. Confirm that the settings are correctly applied with grep RegistryDwords /proc/driver/nvidia/params and check that the values are not empty. See [2] and [3]\n- ddcutil will fail to set some VCP features if there is a feature enabled on the monitor which already automatically adjusts them (e.g. Dynamic Contrast Ratio or BenQ's Eye Care technology).\n- To facilitate binding screen brightness control to a keyboard shortcut, it may be convenient to enable non-superuser access to the relevant I2C devices. This can be achieved by adding a group i2c and configuring udev to set this group as the owner of the I2C devices. See [4].\n- If ddcutil is installed, it provides the /usr/share/ddcutil/data/90-nvidia-i2c.conf file, which can be copied to /etc/X11/xorg.conf.d/ instead of manually editing Xorg configuration files. It also provides /usr/share/ddcutil/data/45-ddcutil-i2c.rules and /usr/share/ddcutil/data/45-ddcutil-usb.rules for udev rules.\n\n"
    },
    {
      "title": "バックライトをオフにする",
      "level": 2,
      "content": "(ノートブックをロックした時などに) バックライトを切ることはバッテリーの節電に役に立ちます。グラフィカルセッションから次のコマンドを実行すればオフにできます:\n\n```\nsleep 1 && xset dpms force off\n```\n\nマウスを動かしたりキーボードで入力したりするとバックライトはまたオンになります。上のコマンドが使えない場合でも、vbetool が使える可能性があります。ただし、この場合バックライトを戻すには手動で有効にする必要があるので注意してください。コマンドは以下の通りです:\n\n```\nvbetool dpms off\n```\n\nバックライトをもう一度有効にするには:\n\n```\nvbetool dpms on\n```\n\n例えば、Acipd のエントリで書かれているように、ノートパソコンのフタを閉じた時にこのコマンドを使用することが可能です。\n\n"
    },
    {
      "title": "systemd-backlight サービス",
      "level": 2,
      "content": "systemd パッケージにはサービス systemd-backlight@.service が含まれており、デフォルトで有効になっていて\"固定\"されています。シャットダウン時にバックライトの明るさのレベルを保存して、起動時にそれを復元します。このサービスは #ACPI で説明されている ACPI による方法を使っていて、/sys/class/backlight/ にあるフォルダごとにサービスを生成します。例えば、acpi_video0 という名前のフォルダがあった場合、systemd-backlight@backlight:acpi_video0.service という名前のサービスを生成します。起動時に他の方法を使ってバックライトを設定するときは、systemd-backlight@.service サービスをマスクすることが推奨されます。\n\n"
    },
    {
      "title": "xbacklight",
      "level": 3,
      "content": "xorg-server のコマンド xbacklight を使ってバックライトを調整することが可能です。このユーティリティは [extra] の xorg-xbacklight パッケージに入っています。\n\nYouTube の gotbletu によってデモンストレーションが投稿されています。彼は以下のコマンドを使ってバックライトを調整することを提案しています:\n\n- 明るくする:\n\n```\nxbacklight -inc 40\n```\n\n- 弱くする:\n\n```\nxbacklight -dec 40\n```\n\n"
    },
    {
      "title": "brightnessctl",
      "level": 3,
      "content": "brightnessctlをインストール後、そのまま使用することができます。\n\nバックライトの輝度を 5% 上げる:\n\n```\n$ brightnessctl set 5%+\n```\n\nバックライトの輝度を 5％ 下げる。\n\n```\n$ brightnessctl set 5%-\n```\n\n"
    },
    {
      "title": "light",
      "level": 3,
      "content": "light をインストールし、video グループにユーザーを追加してください。\n\nバックライトの輝度を 5% 上げる:\n\n```\n$ light -A 5\n```\n\nバックライトの輝度を 5％ 下げる。\n\n```\n$ light -U 5\n```\n\nバックライトの輝度を 100% に設定する。\n\n```\n$ light -S 100\n```\n\n"
    },
    {
      "title": "relight",
      "level": 3,
      "content": "relight は Xyne のリポジトリ から利用でき、また、AUR からはパッケージ relightAUR として取得可能です。このパッケージは上記の ACPI による方法を使って、再起動時に以前のバックライト設定を自動的に復元させるサービスを提供します。また、スクリーンごとにバックライトを選択・設定できるダイアログベースのメニューも入っています。\n\n"
    },
    {
      "title": "setpci (細心の注意を払って使用してください)",
      "level": 3,
      "content": "グラフィックカードのレジスタをセットして、バックライトの調整をすることが可能です。ハードウェアを直接操作してバックライトを調整するので、危険性が存在し、あまり勧められる方法ではありません。また、グラフィックカードによってはこの方法をサポートしていません。\n\nこの方法を使う際には、まず lspci を使ってあなたの使っているグラフィックカードの場所を確認する必要があります。\n\n```\n# setpci -s 00:02.0 F4.B=0\n```\n\n"
    },
    {
      "title": "Calise",
      "level": 3,
      "content": "ソフトウェア calise は AUR にあります。\n\n- 安定版: caliseAUR[リンク切れ: パッケージが存在しません]\n- 開発版: calise-gitAUR[リンク切れ: パッケージが存在しません]\n\n光センサーを搭載していないノートパソコンのために、ウェブカメラからキャプチャして周りの明るさを計算し、画面のバックライトを設定します。 詳細は calise の wiki を見て下さい: Calise wiki。\n\nこのプログラムの主な特徴としては、計算が非常に正確で、リソースの使用量がかなり少なく、デーモンバージョンが存在し (systemd ユーザーのための .service ファイルもあります)、バッテリー持ちにほとんど影響がないことが挙げられます。\n\n"
    },
    {
      "title": "brightd",
      "level": 3,
      "content": "Macbook にインスパイアされた brightdAUR はユーザーの操作がしばらくないと自動的に画面を薄暗くします (スタンバイ状態にはしません)。さっくり画面をオフにする Display Power Management Signaling と上手く併用することができます。\n\n"
    },
    {
      "title": "KDE",
      "level": 3,
      "content": "KDE のユーザーは System Settings > Power Management > Energy Saving からバックライトを調整できます。 kdm よりも前にバックライトを設定したい場合は /usr/share/config/kdm/Xsetup に次を記述してください:\n\n```\nxbacklight -inc 10\n```\n\n"
    },
    {
      "title": "Wayland",
      "level": 3,
      "content": "Redshift は Wayland (パッチなし) をサポートしていません。ただし、コンポジタを開始する前に、 tty で目的の温度を適用することは可能です。例:\n\n```\n$redshift-m drm-PO 3000\n```\n\nそうしないと、一部のコンポジタがランタイム中にカラー補正を適用する可能性があります。\n\n- GNOME では、組み込みの 夜間モード を使用できます。\n- KDE Plasma では、内蔵の KDE#Night Color を使用できます。\n- Sway 1.0 やその他の wlroot ベースのコンポジタは、Orbital や Redshift fork gammastep、clightAUR、wlsunset-gitAUR などと同様に使用できます。\n\n"
    },
    {
      "title": "xcalib",
      "level": 3,
      "content": "AUR にあるパッケージ xcalib (上流のサイト) を使って画面を調光することができます。これも同じく、ユーザーの gotbletu が Youtube にデモンストレーションを投稿しています。このプログラムはガンマ補正と色の反転、コントラストの低減をすることが可能で、ここでは後者を使用します:\n\n- 暗くする:\n\n```\nxcalib -co 40 -a\n```\n\nこのプログラムは ICC を使って X11 と通信するので、画面が暗くなっても、マウスカーソルの明るさは変わりません。\n\n"
    },
    {
      "title": "Xflux",
      "level": 3,
      "content": "Xflux は X-Windows system 向けの f.lux ポートです。日中は青に夜は黄色・橙色に画面を変化させることで、一日の流れに画面の輝度を合わせて夜ふかしを止めるのに役立ちます。\n\nAUR には f.lux を使用するためのパッケージがいくつか存在します [5]。「メイン」のパッケージは xfluxAUR で、f.lux のコマンドライン機能を扱います。xflux パッケージの自動起動を行うためのデーモンも様々あります。\n\n"
    },
    {
      "title": "redshift",
      "level": 3,
      "content": "公式リポジトリに入っているプログラム redshift は、時刻と地理情報にあわせて randr を使って画面の明るさを調整します。RGB ガンマ補正をしたり色温度の設定も可能です。xcalib と同じように、ソフトウェアによる方法なのでマウスカーソルの見た目は変わりません。明るさのクイック調整を実行するために、次のようなコマンドを使ってみて下さい:\n\n```\nredshift -o -l 0:0 -b 0.8 -t 6500:6500\n```\n\n```\nredshift-gtk -l 37.8717:-122.2728\n```\n\n"
    },
    {
      "title": "NVIDIA の設定",
      "level": 3,
      "content": "NVIDIA のプロプライエタリドライバーを使っている場合、nvidia-settings ユーティリティの \"X Server Color Correction\" からディスプレイの輝度を変更することができます。ただし、バックライト (の強さ) には全く変更がされないので注意してください、あくまでカラー出力の調整だけが行われます (この方法で明るさを下げても電力効率は良くならないので他の方法が全て使えない時の最後の手段といったところです。明るさを上げると、露出オーバーの写真と同じように、色味が完全に落ちます)。\n\n"
    },
    {
      "title": "バックライト PWM 変調周波数 (Intel i915 のみ)",
      "level": 3,
      "content": "LED バックライトを搭載したノートパソコンではときどき画面にちらつきが発生することが知られています。これは LED の点灯と消灯をヒトの目には識別できない時間で高速に切り替えることで明るさを制御しているためですが、(PWM 変調周期と呼ばれる) 切り替えの周波数が高くないために、はっきり判別できるほどのちらつきが生じたり、人によっては頭痛や眼精疲労の原因になることがあります。\n\nIntel i915 GPU を使っている場合、PWM 変調周期を調整することでちらつきを取り除くことが可能です。\n\n公式リポジトリから intel-gpu-tools をインストールしてください。PWM 変調周期を決めているレジスタの値を取得します:\n\n```\n# intel_reg_read 0xC8254\n```\n\n```\n0xC8254 : 0x12281228\n```\n\n戻り値が PWM 変調の周期を表しています。PWM 変調周期を増加させるには、レジスタの値を減らす必要があります。例えば、上の例から周期を2倍にするには、次を実行します:\n\n```\n# intel_reg_write 0xC8254 0x09140914\n```\n\nオンラインの計算器を使って設定すべき値を計算できます http://devbraindom.blogspot.com/2013/03/eliminate-led-screen-flicker-with-intel.html\n\n詳しくは次のトピックを参照してください https://bbs.archlinux.org/viewtopic.php?pid=1245913\n\nIntel GM45 チップセットを使用している場合は 0xC8254 の代わりにアドレス 0x61254 を使用してください。\n\n"
    },
    {
      "title": "カーネル 3.13 で Intel チップセットでバックライトが調整できない",
      "level": 3,
      "content": "以下のファイルを追加すると直ります。\n\n```\n/etc/X11/xorg.conf.d/20-intel.conf\n```\n\n```\nSection \"Device\"\n        Identifier  \"Backlight fix\"\n        Driver      \"intel\"\n        Option      \"Backlight\"  \"intel_backlight\"\nEndSection\n```\n\n"
    },
    {
      "title": "sysfs を変更しても明るさが変更されない",
      "level": 3,
      "content": "環境によっては、キーボードの輝度ホットキーで /sys/class/backlight/acpi_video0/actual_brightness の acpi インターフェイスの値は変更されるのに、画面の輝度が変更されないことがあります。また、デスクトップ環境の輝度アプレットが使えないこともあります。\n\nカーネルパラメータの変更をテストしてみて xbacklight だけが動作する場合、BIOS とカーネルドライバーの互換性がない可能性があります。\n\nその場合、BIOS や GPU ドライバーのメーカーから修正がリリースされるのを待つしかありません。\n\n応急手段として inotify カーネル api を使って /sys/class/backlight/acpi_video0/actual_brightness の値が変更されるたびに xbacklight を実行することができます。\n\nまず inotify-tools をインストールしてください。そして inotify を使用するスクリプトを作成して、自動起動するように設定します。\n\n```\n/usr/local/bin/xbacklightmon\n```\n\n```\n#!/bin/bash\nmax=/sys/class/backlight/acpi_video0/max_brightness\nlevel=/sys/class/backlight/acpi_video0/actual_brightness\nfactor=$(awk '{print $1/100}' <<< $(<$max)) \n\nxblevel() { awk '{print int($1/$2)}' <<< \"$(<$level) $factor\"; }\nxbacklight -set $(xblevel)\ninotifywait -m -qe modify $level | while read -r file event; do\n    xbacklight -set $(xblevel)\ndone\n```\n\n"
    }
  ]
}
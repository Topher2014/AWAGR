{
  "title": "Webcam Setup (日本語)",
  "url": "https://wiki.archlinux.org/title/Webcam_Setup_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "こちらはウェブカメラを設定するガイドです。\n\nほとんどの場合、ウェブカメラは何も設定しなくても動作します。ビデオデバイス (例えば /dev/video0) へのアクセスの許可は udev により管理されており、追加の設定は必要ありません。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 ロード\n- 2 設定 2.1 コマンドライン 2.2 グラフィカル 2.3 設定の変更を永続化する 2.4 ノートパソコンの内蔵ウェブカメラを無効化する 2.5 ウェブカメラを完全に無効化する\n- 3 アプリケーション 3.1 xawtv 3.2 VLC 3.3 MPlayer 3.4 mpv 3.5 FFmpeg\n- 4 トラブルシューティング 4.1 V4L1 サポート 4.2 xawtv と nvidia カード 4.3 Microsoft Lifecam Studio/Cinema 4.4 Skype 4.5 USB ウェブカメラにより使用されている帯域幅を確認する 4.6 ビデオストリームを反転させる 4.7 画像の品質が悪い 4.8 Logitech Quickcam Pro 9000\n\n- 2.1 コマンドライン\n- 2.2 グラフィカル\n- 2.3 設定の変更を永続化する\n- 2.4 ノートパソコンの内蔵ウェブカメラを無効化する\n- 2.5 ウェブカメラを完全に無効化する\n\n- 3.1 xawtv\n- 3.2 VLC\n- 3.3 MPlayer\n- 3.4 mpv\n- 3.5 FFmpeg\n\n- 4.1 V4L1 サポート\n- 4.2 xawtv と nvidia カード\n- 4.3 Microsoft Lifecam Studio/Cinema\n- 4.4 Skype\n- 4.5 USB ウェブカメラにより使用されている帯域幅を確認する\n- 4.6 ビデオストリームを反転させる\n- 4.7 画像の品質が悪い\n- 4.8 Logitech Quickcam Pro 9000\n\n"
    },
    {
      "title": "ロード",
      "level": 2,
      "content": "最近のほとんどのウェブカメラは UVC (USB Video Class) に対応しており、汎用の uvcvideo カーネルドライバモジュールによりサポートされています。あなたのウェブカメラが認識されているかどうか確かめるには、ウェブカメラを接続した直後に journal を確認してください。以下と似たようなものが出力されるはずです:\n\n```\nkernel: sn9c102: V4L2 driver for SN9C10x PC Camera Controllers v1:1.24a\nusb 1-1: SN9C10[12] PC Camera Controller detected (vid/pid 0x0C45/0x600D)\nusb 1-1: PAS106B image sensor detected\nusb 1-1: Initialization succeeded\nusb 1-1: V4L2 device registered as /dev/video0\nusb 1-1: Optional device control through 'sysfs' interface ready\nusbcore: registered new driver sn9c102\n```\n\nUVC 以前のウェブカメラの中には、gspca カーネルドライバモジュールによってサポートされているものもあります。このフレームワークでサポートされているデバイスの完全ではないリストは gspca cards list を見てください。\n\nあなたのウェブカメラがカーネルのドライバによってサポートされていない場合、外部のドライバが必要となります。まず、ウェブカメラの名前を調べます (lsusb などを使って)。次に、ウェブカメラに関する情報やリソースが載っている webcam devices を見ます。あなたのウェブカメラと互換性のあるドライバを見つけたら、ブート時にそのモジュールをロードさせることができます。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "輝度、色、その他のウェブカメラのパラメータを設定したい場合 (例えば、デフォルトの色が青/赤/緑っぽい場合)、様々なアプリケーションを利用できます。一部の特定のウェブカメラ (Logitech Brio や Razer Kiyo Pro など) は、HDR などの特定のオプションを設定するために特定のアプリケーションが必要かもしれません。通常、V4L の設定を行うアプリケーションで設定を変更すると、アプリケーション自体が設定をオーバーライドしない限り、そのようなカメラを使用する全てのアプリケーションに対して変更が適用されます。\n\n"
    },
    {
      "title": "コマンドライン",
      "level": 3,
      "content": "v4l-utils はコマンドラインツール v4l2-ctl をインストールします。すべてのビデオデバイスを一覧表示するには:\n\n```\n$ v4l2-ctl --list-devices\n```\n\nビデオデバイスの設定可能な項目を一覧表示するには:\n\n```\n$ v4l2-ctl -d /dev/video0 --list-ctrls\n```\n\nまた、cameractrls を使用することもできます:\n\n```\n$ cameractrls -c brightness=128\n```\n\n"
    },
    {
      "title": "グラフィカル",
      "level": 3,
      "content": "汎用のグラフィカルなウェブカメラ設定ツールとしては、v4l-utils の qv4l2 や guvcview があります。加えて、cameractrls には cameractrlsgtk という、v4l の全オプションだけでなく Logitech Brio や Razer Kiyo Pro のカメラ固有の機能を設定できるツールが含まれています。\n\n"
    },
    {
      "title": "設定の変更を永続化する",
      "level": 3,
      "content": "V4L2 を通して加えられた設定は、ウェブカメラが切断されたり再接続されると破棄されます。v4l2-ctl と udev ルールを使って、特定のカメラが接続されるたびに設定を適用することができます。\n\n例えば、特定の Logitech ウェブカメラに対して、それが接続されるたびにデフォルトの拡大設定を適用するには、以下のような udev ルールを追加してください:\n\n```\n/etc/udev/rules.d/99-logitech-default-zoom.rules\n```\n\n```\nSUBSYSTEM==\"video4linux\", KERNEL==\"video[0-9]*\", ATTR{index}==\"0\", ATTRS{idVendor}==\"046d\", ATTRS{idProduct}==\"0892\", RUN+=\"/usr/bin/v4l2-ctl -d $devnode --set-ctrl=zoom_absolute=170\"\n```\n\n上記のルールは、Logitech C920 HD Pro Webcam (ハードウェア ID 046d:0892) で有効です。\n\nデバイスのベンダ ID とプロダクト ID は、lsusb を使って調べることができます。これらの ID は、製品ごとにユニークで、製品が新しいハードウェアリビジョンにならない限り変更されません。\n\nプロダクト名やシリアル ID のような udev の属性を調べるには、Udev#デバイスの属性を一覧表示する を見てください (ビデオデバイスに対して固定デバイス名を設定することもできます)。\n\n"
    },
    {
      "title": "ノートパソコンの内蔵ウェブカメラを無効化する",
      "level": 3,
      "content": "USB で接続されているカメラだけが見えるようにするために、場合によってはノートパソコンの内蔵ウェブカメラを無効化する必要があります。udev ルールで内蔵ウェブカメラを無効化できます。 まず、lsusb を使って、デバイスのベンダ ID とプロダクト ID を手に入れる必要があります:\n\n```\nlsusb\n```\n\n```\nBus 001 Device 008: ID 1bcf:28c1 Sunplus Innovation Technology Inc. Integrated_Webcam_HD\n```\n\n次に、このデバイスが検出されたらすぐにデバイスを取り除くための udev ルールを新しく追加します:\n\n```\n/etc/udev/rules.d/40-disable-internal-webcam.rules\n```\n\n```\nACTION==\"add\", ATTR{idVendor}==\"1bcf\", ATTR{idProduct}==\"28c1\", RUN=\"/bin/sh -c 'echo 1 >/sys/\\$devpath/remove'\"\n```\n\n"
    },
    {
      "title": "ウェブカメラを完全に無効化する",
      "level": 3,
      "content": "uvcvideo カーネルモジュールをブラックリスト化することで、ウェブカメラを完全に無効化できます。例えば:\n\n```\n/etc/modprobe.d/nowebcam.conf\n```\n\n```\nblacklist uvcvideo\n```\n\n"
    },
    {
      "title": "アプリケーション",
      "level": 2,
      "content": "アプリケーション一覧/マルチメディア#ウェブカメラ も見てください。\n\n"
    },
    {
      "title": "xawtv",
      "level": 3,
      "content": "ベーシックな Video4Linux2 デバイスビュアーです。TV チューナーカードで使うことが想定されていますが、ウェブカメラでも問題なく動作します。ウィンドウにウェブカメラの映像を表示します。\n\nxawtvAUR をインストールし、以下のコマンドで実行してください:\n\n```\n$ xawtv -c /dev/video0\n```\n\nエラーが発生する場合は、#xawtv と nvidia カード を見てください。\n\n"
    },
    {
      "title": "VLC",
      "level": 3,
      "content": "VLC を使ってウェブカメラを表示したり記録することもできます。VLC の メディア メニューから キャプチャーデバイスを開く ダイアログを開いて、ビデオとオーディオのデバイスファイルを入力してください。もしくは、コマンドラインから例えば以下のように実行してください:\n\n```\n$ vlc v4l2://:input-slave=alsa://:v4l-vdev=\"/dev/video0\"\n```\n\nこれで VLC はウェブカメラのミラーを作ります。\n\n- 写真を撮影するには、Video メニューの Snapshot を選択してください。\n- 動画を記録するには、--sout 引数を追加します、例:\n\n```\n$ vlc v4l://:v4l-vdev=\"/dev/video0\":v4l-adev=\"/dev/audio2\" --sout \"#transcode{vcodec=mp1v,vb=1024,scale=1,acodec=mpga,ab=192,channels=2}:duplicate{dst=std{access=file,mux=mpeg1,dst=/tmp/test.mpg}}\"\n```\n\nデフォルトではビデオを表示しないことに注意してください。録画中のものを見るには、引数に表示先のディスプレイを追加する必要があります (ハードウェアの負担は増えます):\n\n```\n... :duplicate{dst=display,dst=std{access= ....\n```\n\n"
    },
    {
      "title": "MPlayer",
      "level": 3,
      "content": "MPlayer を使ってウェブカメラのスナップショットを撮るには、ターミナルから次のコマンドを実行します:\n\n```\n$ mplayer tv:// -tv driver=v4l2:width=640:height=480:device=/dev/video0 -fps 15 -vf screenshot\n```\n\nここから s を押すことでスナップショットが作られます。スナップショットはあなたのカレントフォルダに shotXXXX.png と保存されます。 連続動画を記録したい場合:\n\n```\n$ mencoder tv:// -tv driver=v4l2:width=640:height=480:device=/dev/video0:forceaudio:adevice=/dev/dsp -ovc lavc -oac mp3lame -lameopts cbr:br=64:mode=3 -o filename.avi\n```\n\nCtrl+c を押せば録画が終了します。\n\nデフォルト (ほとんどの場合 YUYV) の代わりに MJPEG をピクセル形式として使って MPlayer で動画を再生するには、以下を実行することで可能です:\n\n```\n$ mplayer tv:// -tv driver=v4l2:width=640:height=480:device=/dev/video0:outfmt=mjpeg -fps 15\n```\n\n"
    },
    {
      "title": "mpv",
      "level": 3,
      "content": "mpv を使ってウェブカメラの画像を取得するにはターミナルから以下のコマンドを実行:\n\n```\n$ mpv av://v4l2:/dev/video0 --profile=low-latency --untimed\n```\n\ns を押すことでスナップショットが取得されます。スナップショットはカレントフォルダに mpv-shotNNNN.jpg という名前で保存されます。\n\nデフォルト (ほとんどの場合 YUYV) の代わりに MJPEG をピクセル形式として使って MPlayer で動画を再生するには、以下を実行することで可能です:\n\n```\n$ mpv --demuxer-lavf-format=video4linux2 --demuxer-lavf-o-set=input_format=mjpeg av://v4l2:/dev/video0\n```\n\nこうすることで、品質とパフォーマンスが劇的に向上することがあります (例えば 5FPS -> 30FPS)。\n\nウェブカメラの設定を調整するには (解像度など)、mpv のドキュメント を見てください。\n\n"
    },
    {
      "title": "FFmpeg",
      "level": 3,
      "content": "例は v4l2loopback#使用例 を参照してください。v4l2 デバイスへビデオを出力するために FFmpeg が使用されています。これは、ウェブカメラとしても使用できます。\n\nウェブカメラの無いノートパソコンの場合、droidcam の代替として IP カメラを使用できます。こうすることで、追加のウェブカメラデバイスがかさばることはありません。Android の場合、IP ウェブカメラのようなものを携帯電話でホストし、ノートパソコンのビデオ入力として IP カメラを使用できます。まず、linux-headers と v4l2loopback-dkms をインストールしてください。次に、v4l2loopback を使ってビデオソースに v4l2loopback として接続してください、携帯電話の IP アドレスが 192.168.1.xxx であるとすると:\n\n```\n# modprobe v4l2loopback exclusive_caps=1\n$ ffmpeg -i http://192.168.1.xxx:8080/video -vf format=yuv420p -f v4l2 /dev/video0\n```\n\n"
    },
    {
      "title": "V4L1 サポート",
      "level": 3,
      "content": "Linux カーネルのバージョン 2.6.27 で、レガシーな Video4Linux (1) API のサポートが打ち切られました。Video4Linux バージョン 2 はカーネルスペースでのデコードをサポートしていないため、ピクセル形式のデコードはユーザスペースで行うようになりました。libv4l ライブラリは、ユーザランドのアプリケーションにピクセルデコードサービスを提供し、ほとんどのプログラムで使用されるようになるでしょう。他の互換レイヤも利用可能です。\n\nデバイスファイルが作成されたが、画像がおかしい場合 (例えば、ほぼ完全に緑になっている)、おそらく以下のことを行う必要があります。\n\nアプリケーションが V4L2 に対応しているが、ピクセル形式に対応していない場合、以下のコマンドを使ってください:\n\n```\nLD_PRELOAD=/usr/lib/libv4l/v4l2convert.so application\n```\n\nアプリケーションが古いバージョンの V4L にしか対応していない場合、以下のコマンドを使ってください:\n\n```\nLD_PRELOAD=/usr/lib/libv4l/v4l1compat.so application\n```\n\n32ビットの multilib アプリケーションの場合は、lib32-v4l-utils パッケージをインストールして、上記のコマンドの /usr/lib/libv4l/ の部分を /usr/lib32/libv4l/ に置き換えてください。\n\n"
    },
    {
      "title": "xawtv と nvidia カード",
      "level": 3,
      "content": "nvidia のグラフィックカードを使用していて、以下のようなエラーが発生する場合:\n\n```\nX Error of failed request:  XF86DGANoDirectVideoMode\n Major opcode of failed request:  139 (XFree86-DGA)\n Minor opcode of failed request:  1 (XF86DGAGetVideoLL)\n Serial number of failed request:  69\n Current serial number in output stream:  69\n```\n\nxawtv を $ xawtv -nodga として実行する必要があります。\n\n"
    },
    {
      "title": "Microsoft Lifecam Studio/Cinema",
      "level": 3,
      "content": "特定の設定下で、Microsoft lifecam studio/cinema は過大な usb 帯域を要求して失敗します、Uvcvideo FAQ を見て下さい。この場合、uvcvideo ドライバーを quirks=0x80 でロードしてください。以下を /etc/modprobe.d/uvcvideo.conf に追加します:\n\n```\n/etc/modprobe.d/uvcvideo.conf\n```\n\n```\n## fix bandwidth issue for lifecam studio/cinema\noptions uvcvideo quirks=0x80\n```\n\n"
    },
    {
      "title": "Skype",
      "level": 3,
      "content": "ウェブカメラをテストする際は、以下のことに注意してください:\n\n- echobot は videochat をサポートしていません。ウェブカメラをテストするために使用しないでください。\n- Skype は異なるビデオデバイス/カメラデバイス (/dev/video*) を認識するかもしれません。これらのデバイスは、カメラの設定画面のドロップダウンメニューで \"integrated camera...\" のようにリストアップされます。それぞれのカメラを試し、数秒間待ってください (別のカメラに切り替えるのに時間がかかるからです)。\n\n"
    },
    {
      "title": "USB ウェブカメラにより使用されている帯域幅を確認する",
      "level": 3,
      "content": "ひとつの USB バスで複数のウェブカメラを使用した場合、USB バスの帯域幅が足りずにウェブカメラが機能しなくなることがあります。usbtopAUR パッケージの usbtop ツールで問題を診断できます。\n\n"
    },
    {
      "title": "ビデオストリームを反転させる",
      "level": 3,
      "content": "ビデオストリームが反転している場合、反転しているビデオをさらに反転させる仮想ビデオカメラを作成することができます。v4l-utils と v4l2loopback-dkms をインストールする必要があります。仮想ビデオカメラを作成してください:\n\n```\n# modprobe v4l2loopback\n```\n\n新しく作成したカメラの名前を確認してください:\n\n```\n$ v4l2-ctl --list-devices\nDummy video device (0x0000) (platform:v4l2loopback-000):\n   \t/dev/video1\n```\n\nこれで、ffmpeg を実行して、実際のウェブカメラ (ここでは /dev/video0) からビデオを読み出し、それを反転させて、仮想カメラに書き込むことができます:\n\n```\n$ ffmpeg -f v4l2 -i /dev/video0 -vf \"vflip\" -f v4l2 /dev/video1\n```\n\nここで、vflip はビデオストリームを垂直方向に反転させます。水平方向に反転させるには hflip を使用してください。\n\nエラーを避けるために、format 引数 yuv420p が必要かもしれません。そうしないと、ビデオストリームを取得できず、黒画面が表示されるかもしれません [2]。言い換えると:\n\n```\n$ ffmpeg -f v4l2 -i /dev/video0 -vf \"hflip,format=yuv420p\" -f v4l2 /dev/video1\n```\n\nこれで、アプリケーションで \"Integrated\" カメラの代わりに \"Dummy\" カメラを使えるようになります。\n\n"
    },
    {
      "title": "画像の品質が悪い",
      "level": 3,
      "content": "画像が明るすぎたり、暗すぎたり、露出が高すぎたりする場合、v4l2ucpAUR をインストールして画像出力を調整できます。\n\n"
    },
    {
      "title": "Logitech Quickcam Pro 9000",
      "level": 3,
      "content": "オートフォーカス制御を有効化するために libwebcam-gitAUR をインストールしてください。インストール後、カメラを一旦切断し、その後接続し直して、新しく追加された udev ルールをトリガーしてください。\n\n"
    }
  ]
}
{
  "title": "Микрокод",
  "url": "https://wiki.archlinux.org/title/%D0%9C%D0%B8%D0%BA%D1%80%D0%BE%D0%BA%D0%BE%D0%B4",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Производители процессоров выпускают обновления стабильности и безопасности для микрокода процессора. Несмотря на то, что микрокод можно обновить с помощью BIOS, ядро Linux также может применять эти обновления во время загрузки. Эти обновления предоставляют исправления ошибок, которые могут быть критичны для стабильности вашей системы. Без этих обновлений вы можете наблюдать ложные падения или неожиданные зависания системы, которые может быть сложно отследить.\n\nОсобенно пользователи процессоров семейства Intel Haswell и Broadwell должны установить эти обновления, чтобы обеспечить стабильность системы. Но, понятное дело, все пользователи должны устанавливать эти обновления.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Для процессоров AMD установите пакет amd-ucode.\n\nДля процессоров Intel установите пакет intel-ucode.\n\nЕсли Arch находится на съемном носителе, вы должны установить микрокод для обоих производителей процессоров.\n\n"
    },
    {
      "title": "Включение раннего обновления микрокода",
      "level": 2,
      "content": "Микрокод должен быть загружен загрузчиком. Из-за большого разнообразия конфигураций ранней загрузки у пользователей обновления микрокода могут быть не применены автоматически конфигурацией Arch по умолчанию. Многие ядра в AUR пошли по пути официальных ядер Arch в этом вопросе.\n\nЧтобы применить эти обновления, добавьте /boot/amd-ucode.img или /boot/intel-ucode.img в качестве первого initrd в конфигурационном файле загрузчика. Это в дополнение к обычному initrd файлу. Смотрите ниже инструкции для популярных загрузчиков.\n\n"
    },
    {
      "title": "Автоматический способ",
      "level": 4,
      "content": "Утилита grub-mkconfig автоматически определит обновления микрокода и настроит соответственным образом GRUB. После установки пакета микрокода, перегенерируйте настройки GRUB, чтобы включить обновление микрокода при запуске:\n\n```\n# grub-mkconfig -o /boot/grub/grub.cfg\n```\n\n"
    },
    {
      "title": "Ручной способ",
      "level": 4,
      "content": "Альтернативно пользователи, управляющие настройками GRUB вручную, могут добавить /boot/производитель_цп-ucode.img (или /производитель_цп-ucode.img, если есть отдельный раздел /boot) следующим образом:\n\n```\n/boot/grub/grub.cfg\n```\n\n```\n...\necho 'Loading initial ramdisk'\ninitrd /boot/производитель_цп-ucode.img /boot/initramfs-linux.img\n...\n```\n\nПовторите это для каждой записи в меню.\n\n"
    },
    {
      "title": "systemd-boot",
      "level": 3,
      "content": "Используйте параметры initrd для загрузки микрокода перед исходным ramdisk следующим образом:\n\n```\n/boot/loader/entries/запись.conf\n```\n\n```\ntitle   Arch Linux\nlinux   /vmlinuz-linux\ninitrd  /производитель_цп-ucode.img\ninitrd  /initramfs-linux.img\n...\n```\n\nСамый последний микрокод производитель_цп-ucode.img должен быть доступен во время загрузки вашего системного раздела EFI (ESP). ESP должен быть смонтирован как /boot, чтобы обновлять микрокод каждый раз, когда обновляется amd-ucode или intel-ucode. В противном случае копируйте /boot/производитель_цп-ucode.img в ваш ESP при каждом обновлении пакета микрокода.\n\n"
    },
    {
      "title": "EFI boot stub / EFI handover",
      "level": 3,
      "content": "Добавьте два параметра initrd=:\n\n```\ninitrd=/производитель_цп-ucode.img initrd=/initramfs-linux.img\n```\n\nNote: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nДля ядер, которые были сгенерированы как один файл, содержащий все initrd, cmdline и ядро, сначала сгенерируйте initrd для интеграции, создав новый, следующим образом:\n\n```\ncat /boot/производитель_цп-ucode.img /boot/initramfs-linux.img > my_new_initrd\nobjcopy ... --add-section .initrd=my_new_initrd\n```\n\n"
    },
    {
      "title": "rEFInd",
      "level": 3,
      "content": "Отредактируйте опции загрузки в /boot/refind_linux.conf также как в примере EFI boot stub выше, например:\n\n```\n\"Boot with standard options\" \"rw root=UUID=(...) initrd=/boot/производитель_цп-ucode.img initrd=/boot/initramfs-linux.img\"\n```\n\nПользователи, использующие ручные строфы в esp/EFI/refind/refind.conf для определения ядер, должны просто добавить initrd=/boot/производитель_цп-ucode.img (или /производитель_цп-ucode.img, если есть отдельный раздел /boot), как требуется для строки опций, а не в основной части строфы. Например:\n\n```\noptions  \"root=root=UUID=(...) rw add_efi_memmap initrd=/boot/производитель_цп-ucode.img\"\n```\n\n"
    },
    {
      "title": "Syslinux",
      "level": 3,
      "content": "Несколько файлов initrd могут быть разделены запятыми в /boot/syslinux/syslinux.cfg:\n\n```\nLABEL arch\n    MENU LABEL Arch Linux\n    LINUX ../vmlinuz-linux\n    INITRD ../производитель_цп-ucode.img,../initramfs-linux.img\n...\n```\n\n"
    },
    {
      "title": "LILO",
      "level": 3,
      "content": "LILO и потенциально другие старые загрузчики не поддерживают несколько образов initrd. В этом случае необходимо объединить производитель_цп-ucode.img и initramfs-linux.img в один образ.\n\nNote: **сверху** \n\nЧтобы объединить образы в один initramfs-merged.img, можно использовать следующую команду:\n\n```\n# cat /boot/производитель_цп-ucode.img /boot/initramfs-linux.img > /boot/initramfs-merged.img\n```\n\nТеперь отредактируйте /etc/lilo.conf для загрузки нового образа.\n\n```\n...\ninitrd=/boot/initramfs-merged.img\n...\n```\n\nИ запустите lilo от суперпользователя:\n\n```\n# lilo\n```\n\n"
    },
    {
      "title": "Позднее обновление микрокода",
      "level": 2,
      "content": "Поздняя загрузка обновления микрокода происходит после запуска системы. Для этого используются файлы в /usr/lib/firmware/amd-ucode/ и /usr/lib/firmware/intel-ucode/.\n\nДля процессоров AMD файлы обновления микрокода предоставляются пакетом linux-firmware.\n\nДля процессоров Intel ни один пакет не предоставляет файлы обновления микрокода (FS#59841). Чтобы использовать позднюю загрузку, вам необходимо вручную извлечь intel-ucode/ из предоставленного Intel архива.\n\n"
    },
    {
      "title": "Включение позднего обновления микрокода",
      "level": 3,
      "content": "В отличие от ранней загрузки, поздняя загрузка обновлений микрокода в Arch Linux включена по умолчанию, используя /usr/lib/tmpfiles.d/linux-firmware.conf. После загрузки файл анализируется с помощью systemd-tmpfiles-setup.service(8), а микрокод ЦП обновляется.\n\nДля ручного обновления микрокода на запущенной системе запустите:\n\n```\n# echo 1 > /sys/devices/system/cpu/microcode/reload\n```\n\nЭто позволяет применять обновления микрокода после обновления linux-firmware без перезагрузки системы. Вы можете даже автоматизировать это с помощью хука pacman, например:\n\n```\n/etc/pacman.d/hooks/microcode_reload.hook\n```\n\n```\n[Trigger]\nOperation = Install\nOperation = Upgrade\nOperation = Remove\nType = File\nTarget = usr/lib/firmware/amd-ucode/*\t\n\n[Action]\nDescription = Applying CPU microcode updates...\nWhen = PostTransaction\nDepends = sh\nExec = /bin/sh -c 'echo 1 > /sys/devices/system/cpu/microcode/reload'\n```\n\n"
    },
    {
      "title": "Отключение позднего обновления микрокода",
      "level": 3,
      "content": "Для систем AMD микрокод процессора будет обновляться, даже если пакет amd-ucode не установлен, так как файлы предоставлены linux-firmware (FS#59840). Чтобы отключить позднюю загрузку, вы должны переопределить временные файлы /usr/lib/tmpfiles.d/linux-firmware.conf. Это можно сделать, создав файл с тем же именем в /etc/tmpfiles.d/:\n\n```\n# ln -s /dev/null /etc/tmpfiles.d/linux-firmware.conf\n```\n\n"
    },
    {
      "title": "Проверим, обновился ли microcode при загрузке",
      "level": 2,
      "content": "Чтобы убедиться, что микрокод обновился, воспользуемся dmesg:\n\n```\n# dmesg | grep microcode\n```\n\nНа системах Intel вы должны увидеть что-то похожее на это при каждой загрузке, что говорит о том, что микрокод обновился рано:\n\n```\n[    0.000000] CPU0 microcode updated early to revision 0x1b, date = 2014-05-29\n[    0.221951] CPU1 microcode updated early to revision 0x1b, date = 2014-05-29\n[    0.242064] CPU2 microcode updated early to revision 0x1b, date = 2014-05-29\n[    0.262349] CPU3 microcode updated early to revision 0x1b, date = 2014-05-29\n[    0.507267] microcode: CPU0 sig=0x306a9, pf=0x2, revision=0x1b\n[    0.507272] microcode: CPU1 sig=0x306a9, pf=0x2, revision=0x1b\n[    0.507276] microcode: CPU2 sig=0x306a9, pf=0x2, revision=0x1b\n[    0.507281] microcode: CPU3 sig=0x306a9, pf=0x2, revision=0x1b\n[    0.507286] microcode: CPU4 sig=0x306a9, pf=0x2, revision=0x1b\n[    0.507292] microcode: CPU5 sig=0x306a9, pf=0x2, revision=0x1b\n[    0.507296] microcode: CPU6 sig=0x306a9, pf=0x2, revision=0x1b\n[    0.507300] microcode: CPU7 sig=0x306a9, pf=0x2, revision=0x1b\n[    0.507335] microcode: Microcode Update Driver: v2.2.\n```\n\nВполне возможно, особенно с новым аппаратным обеспечением, что для вашего CPU нет обновления микрокода. В этом случае вы можете увидеть примерно следующее:\n\n```\n[    0.292893] microcode: CPU0 sig=0x306c3, pf=0x2, revision=0x1c\n[    0.292899] microcode: CPU1 sig=0x306c3, pf=0x2, revision=0x1c\n[    0.292906] microcode: CPU2 sig=0x306c3, pf=0x2, revision=0x1c\n[    0.292912] microcode: CPU3 sig=0x306c3, pf=0x2, revision=0x1c\n[    0.292956] microcode: Microcode Update Driver: v2.2.\n```\n\nНа системах AMD, использующих раннюю загрузку, вывод будет выглядеть примерно так:\n\n```\n[    2.119089] microcode: microcode updated early to new patch_level=0x0700010f\n[    2.119157] microcode: CPU0: patch_level=0x0700010f\n[    2.119171] microcode: CPU1: patch_level=0x0700010f\n[    2.119183] microcode: CPU2: patch_level=0x0700010f\n[    2.119189] microcode: CPU3: patch_lev\n[    2.119269] microcode: Microcode Update Driver: v2.2.\n```\n\nНа системах AMD, использующих позднюю загрузку, в выводе будет отображаться версия старого микрокода перед перезагрузкой микрокода, а новая - после перезагрузки. Это будет выглядеть примерно так:\n\n```\n[    2.112919] microcode: CPU0: patch_level=0x0700010b\n[    2.112931] microcode: CPU1: patch_level=0x0700010b\n[    2.112940] microcode: CPU2: patch_level=0x0700010b\n[    2.112951] microcode: CPU3: patch_level=0x0700010b\n[    2.113043] microcode: Microcode Update Driver: v2.2.\n[    6.429109] microcode: CPU2: new patch_level=0x0700010f\n[    6.430416] microcode: CPU0: new patch_level=0x0700010f\n[    6.431722] microcode: CPU1: new patch_level=0x0700010f\n[    6.433029] microcode: CPU3: new patch_level=0x0700010f\n[    6.433073] x86/CPU: CPU features have changed after loading microcode, but might not take effect.\n```\n\n"
    },
    {
      "title": "Каким ЦП нужны обновления микрокода",
      "level": 2,
      "content": "Пользователи могут проконсультироваться как у Intel, так и у AMD насчёт поддержки конкретной модели процессора, перейдя по следующим ссылкам:\n\n- Исследовательский центр операционной системы AMD (англ)[устаревшая ссылка 2023-06-17 ⓘ].\n- Центр загрузки Intel[устаревшая ссылка 2023-07-30 ⓘ].\n\n"
    },
    {
      "title": "Обнаружение доступного обновления микрокода",
      "level": 3,
      "content": "Вы можете узнать, содержит ли intel-ucode.img образ микрокода для вашего процессора с помощью iucode-tool.\n\n1. Установите intel-ucode (для обнаружения обновления не требуется менять initrd)\n1. Установите iucode-tool\n1. # modprobe cpuid\n1. Извлекает образ микрокода и ищет в нём ваш cpuid:# bsdtar -Oxf /boot/intel-ucode.img | iucode_tool -tb -lS -\n1. Если обновление доступно, оно должно отобразиться под selected microcodes\n1. Микрокод может уже быть в вашем биосе и его загрузка может не отображаться в dmesg. Сравните с текущим запуском микрокода {ic|grep microcode /proc/cpuinfo}}\n\n```\n# modprobe cpuid\n```\n\n```\n# bsdtar -Oxf /boot/intel-ucode.img | iucode_tool -tb -lS -\n```\n\n"
    },
    {
      "title": "Применение ранней загрузки микрокода в кастомных ядрах",
      "level": 2,
      "content": "Для того, чтобы ранняя загрузка работала в кастомных ядрах, \"CPU microcode loading support\" должен быть вкомпилирован в ядро, а не скомпилирован как модуль. Это включает приглашение \"Early load microcode\", которое должно быть установлено в Y.\n\n```\nCONFIG_BLK_DEV_INITRD=Y\nCONFIG_MICROCODE=y\nCONFIG_MICROCODE_INTEL=Y\nCONFIG_MICROCODE_AMD=y\n```\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Обновление микрокодов - Опыт сообщества (англ)\n- Замечания по обновлению микрокода Intel - Ben Hawkes (англ)\n- Загрузчик микрокода ядра - документация ядра (англ)\n- Erratum найден в Haswell/Broadwell – AnandTech (англ)\n- проект iucode-tool на GitLab (англ)\n\n"
    }
  ]
}
{
  "title": "Openbox (Русский)",
  "url": "https://wiki.archlinux.org/title/Openbox_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Среда рабочего стола\n- Экранный менеджер\n- Функциональность файлового менеджера\n- Меню Xdg\n- Oblogout (Русский)\n- Оконный менеджер\n\nOpenbox[устаревшая ссылка 2024-10-12 ⓘ] — это лёгкий и гибкий в настройке стековый оконный менеджер, поддерживающий большинство стандартных функций. Он может как запускаться независимо в качестве основы уникальной среды рабочего стола, так и использоваться в существующих средах рабочего стола, таких как KDE и Xfce, в качестве альтернативы предоставляемым ими оконным менеджерам. На Openbox построена среда рабочего стола LXDE.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Установите пакет openbox. Также установите какие-нибудь TTF-шрифты, например ttf-dejavu и ttf-liberation.\n\n"
    },
    {
      "title": "Автономно",
      "level": 3,
      "content": "Выполните команду openbox или openbox-session через xinit. Имейте в виду, что только с openbox-session доступен #Автозапуск приложений.\n\n"
    },
    {
      "title": "В других средах рабочего стола",
      "level": 3,
      "content": "- При замене оконного менеджера, родного для среды рабочего стола, на Openbox имейте в виду, что Openbox не имеет никаких эффектов, связанных с композитингом (например, прозрачность). Смотрите #Эффекты композитинга.\n- Openbox может работать с приложениями GNOME (но смотрите GTK (Русский)#Клиентские декорации). [1]\n\nСмотрите Среда рабочего стола#Использование стороннего оконного менеджера.\n\n"
    },
    {
      "title": "Настройка",
      "level": 2,
      "content": "Основу конфигурации openbox[устаревшая ссылка 2024-10-12 ⓘ] составляют четыре файла, каждый из которых выполняет свою уникальную роль: rc.xml, menu.xml, autostart и environment. Перед настройкой нужно создать локальный профиль Openbox (то есть специфичный для вашей учётной записи). Это можно сделать путём копирования глобального профиля /etc/xdg/openbox (который применяется для всех пользователей) в свой каталог настроек:\n\n```\n$ mkdir -p ~/.config/openbox\n$ cp -a /etc/xdg/openbox/ ~/.config/\n```\n\n"
    },
    {
      "title": "rc.xml",
      "level": 3,
      "content": "~/.config/openbox/rc.xml — это основной файл конфигурации, отвечающий за определение поведения и настроек всего сеанса, в том числе:\n\n- Сочетания клавиш (например, запуск приложений; регулировка громкости)\n- Темы оформления\n- Настройки рабочего стола и виртуального рабочего стола\n- Настройки окна приложения\n\nЭтот файл имеет прописанные настройки по умолчанию, так что достаточно лишь немного подредактировать его в соответствии со своими личными предпочтениями.\n\n"
    },
    {
      "title": "menu.xml",
      "level": 3,
      "content": "~/.config/openbox/menu.xml определяет поведение меню, открывающегося при правом клике по фону. По умолчанию предоставляется статическое меню (которое не обновляется автоматически при установке новых приложений), но можно также использовать динамическое меню, которое будет обновляться автоматически.\n\nДоступные параметры рассматриваются ниже в разделе #Меню.\n\n"
    },
    {
      "title": "Автозапуск приложений",
      "level": 3,
      "content": "openbox-session имеет два механизма автозапуска: XDG Autostart (работает только если установлен пакет python-pyxdg) и свой собственный механизм[устаревшая ссылка 2024-10-12 ⓘ].\n\nСвой механизм:\n\n- считывает переменные (выполняет source) из /etc/xdg/openbox/environment\n- считывает переменные из ~/.config/openbox/environment\n- запускает /etc/xdg/openbox/autostart\n- запускает ~/.config/openbox/autostart\n\nПроблемы, связанные с выполнением команд в ~/.config/openbox/autostart не по порядку (или вообще с пропуском выполнения), часто решаются добавлением небольших задержек. Например:\n\n```\nxset -b\n(sleep 3s && nm-applet) &\n(sleep 3s && conky) &\n```\n\n"
    },
    {
      "title": "environment",
      "level": 3,
      "content": "Файл ~/.config/openbox/environment можно использовать для добавления связанных переменных окружения, например:\n\n- Define new pathways (e.g. execute commands that would otherwise require the entire pathway to be listed with them)\n- Изменить языковые настройки\n- Определить другие переменные, которые будут использоваться (например, здесь можно указать исправление для тем GTK)\n\n"
    },
    {
      "title": "Темы",
      "level": 3,
      "content": "Установите obconfAUR[ссылка недействительна: package not found] и/или lxappearance-obconf, которые предоставляют графический интерфейс для настройки внешнего вида Openbox.\n\nХорошая подборка тем есть в пакете openbox-themesAUR. Некоторые GTK-темы также имеют встроенную поддержку Openbox. Темы устанавливаются в /usr/share/themes и доступны к выбору сразу после установки.\n\nbox-look.org — превосходный источник тем. deviantART.com — ещё один превосходный источник. Можно найти ещё больше тем в сети.\n\n"
    },
    {
      "title": "Изменение или создание",
      "level": 4,
      "content": "Процесс создания или изменения тем хорошо описан на официальном сайте openbox.org[устаревшая ссылка 2024-10-12 ⓘ]. obthemeAUR предоставляет графический интерфейс для этого.\n\n"
    },
    {
      "title": "Графический интерфейс настроек",
      "level": 3,
      "content": "Есть несколько графических приложений, позволяющих быстро и удобно настраивать ваше окружение Openbox.\n\n- ObConf — Инструмент настройки, использующий GTK3.\n\n- LXAppearance ObConf — Плагин для LXAppearance, добавляющий возможность настройки Openbox. В нём реализованы не все возможные настройки, так что вам всё равно может понадобиться obconf.\n\n- LXInput — Настройка мыши и клавиатуры в LXDE\n\n- LXRandR — Настройка мониторов в LXDE\n\n- obkey — Настройка сочетаний клавиш\n\n- obapps — Инструмент для настройки поведения приложений в Openbox.\n\nПрограммы для редактирования меню описаны ниже в разделе #Меню.\n\n"
    },
    {
      "title": "Перенастройка Openbox",
      "level": 2,
      "content": "Openbox не всегда автоматически применяет изменения, внесённые в его файлы конфигурации в течение сеанса. Как следствие, необходимо будет вручную перезагрузить эти файлы после того, как они были изменены. Для этого введите следующую команду:\n\n```\n$ openbox --reconfigure\n```\n\nЕсли вы хотите прописать сочетание клавиш для этой команды в файле ~/.config/openbox/rc.xml, достаточно просто указать команду reconfigure. Ниже приведён пример с использованием комбинации клавиш Super+F11:\n\n```\n<keybind key=\"W-F11\">\n  <action name=\"Reconfigure\"/>\n</keybind>\n```\n\n"
    },
    {
      "title": "Сочетания клавиш",
      "level": 2,
      "content": "Все сочетания клавиш добавляются в файл ~/.config/openbox/rc.xml под заголовком <!-- Keybindings for running aplications -->. Здесь представлено кратное описание, а подробности можно почитать на openbox.org[устаревшая ссылка 2024-10-12 ⓘ].\n\nСинтаксис добавления сочетания клавиш такой:\n\n```\n<keybind key=\"моё-сочетание-клавиш\">\n  <action name=\"моё-действие\">\n    ...\n  </action>\n</keybind>\n```\n\nДля выполнения внешней команды используется действие Execute. Синтаксис такой:\n\n```\n<action name=\"Execute\">\n  <command>моя-команда</command>\n</action>\n```\n\nСписок всех доступных действий можно посмотреть на the Openbox wiki[устаревшая ссылка 2024-10-12 ⓘ].\n\nХотя использование стандартных буквенно-цифровых клавиш не требует пояснений, другим типам клавиш присваиваются специальные имена, например modifiers, multimedia и navigation.\n\n"
    },
    {
      "title": "Модификаторы",
      "level": 3,
      "content": "Клавиши-модификаторы играют важную роль в сочетаниях клавиш (например, удерживание клавиши Shift или Ctrl в сочетании с другой клавишей для выполнения действия). Использование модификаторов помогает предотвратить конфликты сочетаний клавиш, когда два или более действия связаны с одной и той же клавишей или комбинацией клавиш. Синтаксис использования модификатора с клавишей:\n\n```\n\"<modifier>-<key>\"\n```\n\nКоды модификаторов:\n\n- S: Shift\n- C: Control\n- A: Alt\n- W: Super\n- M: Meta\n- H: Hyper (If it is bound to something)\n\n"
    },
    {
      "title": "Мультимедиа-клавиши",
      "level": 3,
      "content": "Если есть мультимедийные клавиши, можно прописать им соответствующие действия, например изменение громкости или яркости экрана. Смотрите статью Keyboard input (Русский) для более подробной информации.\n\nКоды клавиш громкости и яркости следующие (обратите внимание, что им всё равно нужно назначить какие-то команды, чтобы они действительно работали):\n\n- XF86AudioRaiseVolume: Увеличение громкости\n- XF86AudioLowerVolume: Уменьшение громкости\n- XF86AudioMute: Включение / выключение звука\n- XF86MonBrightnessUp: Увеличение яркости экрана\n- XF86MonBrightnessDown: Уменьшение яркости экрана\n\nПолный список XF86 мультимедиа-клавиш можно посмотреть здесь: LQWiki:XF86 keyboard symbols.\n\n"
    },
    {
      "title": "Управление громкостью",
      "level": 4,
      "content": "Какие команды следует использовать для управления громкостью, зависит от того, используется ли для звука ALSA, PulseAudio или OSS.\n\n- ALSA: смотрите Advanced Linux Sound Architecture#Keyboard volume control.\n- PulseAudio: смотрите PulseAudio (Русский)#Регулировка звука клавиатурой.\n- OSS: смотрите Open Sound System#Keyboard volume control.\n\n"
    },
    {
      "title": "Клавиши навигации",
      "level": 3,
      "content": "Это клавиши-стрелки, обычно используемые для перемещения курсора вверх, вниз, влево или вправо. Коды (не требующие пояснений) следующие:\n\n- Up: Вверх\n- Down: Вниз\n- Left: Влево\n- Right: Вправо\n\n"
    },
    {
      "title": "Меню",
      "level": 2,
      "content": "В Openbox можно использовать три типа меню: static, pipes (динамическое) и generators (статическое или динамическое). Их также можно использовать по отдельности или в любой комбинации.\n\n"
    },
    {
      "title": "Static",
      "level": 3,
      "content": "Как следует из названия, этот тип меню не меняется сам по себе и редактируется вручную и/или (ре)генерируется автоматически в соответствующей программе редактирования.\n\nХотя этот тип меню можно использовать для запуска приложений, он также может быть полезен для доступа к определённым функциям и/или выполнения определённых задач (например, настройки рабочего стола), а для работы со списком приложений можно использовать другую программу (например, synapse или xfce4-appfinder).\n\nФайл ~/.config/openbox/menu.xml будет единственным источником статического содержимого меню рабочего стола.\n\n"
    },
    {
      "title": "menumaker",
      "level": 4,
      "content": "menumaker автоматически генерирует xml меню для нескольких оконных менеджеров, в том числе Openbox, Fluxbox, IceWM и Xfce. Он ищет установленные программы на компьютере и по результатам генерирует меню. Можно настроить MenuMaker так, чтобы исключить определённые типы приложений (например, имеющие отношения к GNOME или KDE), если вам это требуется.\n\nПосле установки и запуска он автоматически сгенерирует новый файл ~/.config/openbox/menu.xml. Чтобы избежать перезаписи существующего файла, введите:\n\n```\n$ mmaker -v OpenBox3\n```\n\nИначе, чтобы перезаписать существующий файл, добавьте аргумент force (f):\n\n```\n$ mmaker -vf OpenBox3\n```\n\nПосле создания нового файла ~/.config/openbox/menu.xml его можно изменить вручную или настроить с помощью графических программ, например obmenuAUR.\n\n"
    },
    {
      "title": "obmenu",
      "level": 4,
      "content": "obmenuAUR — это графический редактор меню для Openbox, позволяющий редактировать ~/.config/openbox/menu.xml без необходимости вручную писать xml.\n\n"
    },
    {
      "title": "xdg-menu",
      "level": 4,
      "content": "archlinux-xdg-menu автоматически сгенерирует меню на основе файлов xdg, содержащихся в каталоге /etc/xdg/, для многих оконных менеджеров, включая Openbox. Подробнее смотрите Xdg-menu (Русский)#OpenBox.\n\n"
    },
    {
      "title": "Параметры меню выхода",
      "level": 4,
      "content": "Файл ~/.config/openbox/menu.xml можно изменить так, чтобы в подменю были те же параметры, что и в oblogout. Пример скрипта ниже предоставит все эти параметры, за исключением возможности блокировки экрана:\n\n```\n<menu id=\"exit-menu\" label=\"Exit\">\n\t<item label=\"Log Out\">\n\t\t<action name=\"Execute\">\n\t\t\t<command>openbox --exit</command>\n\t\t</action>\n\t</item>\n\t<item label=\"Shutdown\">\n\t\t<action name=\"Execute\">\n\t\t\t<command>systemctl poweroff</command>\n\t\t</action>\n\t</item>\n\t<item label=\"Restart\">\n\t\t<action name=\"Execute\">\n\t\t        <command>systemctl reboot</command>\n\t\t</action>\n\t</item>\n\t<item label=\"Suspend\">\n\t\t<action name=\"Execute\">\n\t\t        <command>systemctl suspend</command>\n\t\t</action>\n\t</item>\n\t<item label=\"Hibernate\">\n\t\t<action name=\"Execute\">\n\t\t        <command>systemctl hibernate</command>\n\t\t</action>\n\t</item>\n</menu>\n```\n\nПосле этого добавьте следующую строку для добавление подменю в желаемом месте главного меню рабочего стола (обычно в качестве последней записи):\n\n```\n<menu id=\"exit-menu\"/>\n```\n\n"
    },
    {
      "title": "Pipes",
      "level": 3,
      "content": "Этот тип меню, по сути, представляет собой скрипт, который предоставляет динамические, обновляемые списки на лету по мере выполнения. Эти списки могут использоваться для различных целей, в том числе для составления списка приложений, предоставления информации и обеспечения функций управления. Несколько готовых скриптов можно найти в AUR. Опытные пользователи также могут изменять и/или создавать свои собственные скрипты. Файл ~/.config/openbox/menu.xml может и обычно будет содержать несколько pipe меню.\n\n"
    },
    {
      "title": "Примеры",
      "level": 4,
      "content": "- openbox-xdgmenuAUR[ссылка недействительна: package not found]: быстрый конвертер xdg-menu в xml-pipe-menu\n- obfilebrowserAUR: Приложение и браузер файлов\n- obdevicemenuAUR[ссылка недействительна: package not found]: Управление съёмными носителями через udisks\n- wifi pipe menu: Управление беспроводной сетью через netctl\n\nOpenbox.org[устаревшая ссылка 2024-10-12 ⓘ] также предоставляет список pipe меню.\n\n"
    },
    {
      "title": "Generators",
      "level": 3,
      "content": "Этот тип меню сродни тем, которые предоставляются панелями задач в средах рабочего стола, таких как Xfce или LXDE. Этот тип меню с автоматическим обновлением на лету может быть мощным и очень удобным. Также возможно добавление пользовательских категорий и пунктов меню; прочтите документацию по предполагаемому динамическому меню, чтобы определить, можно ли и как это сделать.\n\nГенератор меню должен быть запущен из файла ~/.config/openbox/menu.xml.\n\n"
    },
    {
      "title": "obmenu-generator",
      "level": 4,
      "content": "obmenu-generatorAUR крайне рекомендуется, хоть это и неофициальный пакет. Благодаря возможности использования в качестве статического или динамического меню оно обладает широкими возможностями настройки, функциональностью и универсальностью. Категории меню и отдельные записи также можно легко скрыть, настроить и/или легко добавить. На странице проекта есть дополнительная информация и скриншоты.\n\nПример выполнения obmenu-generator без значков в ~/.config/openbox/menu.xml:\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<openbox_menu>\n    <menu id=\"root-menu\" label=\"OpenBox 3\" execute=\"/usr/bin/obmenu-generator\">\n    </menu>\n</openbox_menu>\n```\n\nДля автоматического добавления значков можно использовать опцию -i:\n\n```\n<menu id=\"root-menu\" label=\"OpenBox 3\" execute=\"/usr/bin/obmenu-generator -i\">\n```\n\n"
    },
    {
      "title": "openbox-menu",
      "level": 4,
      "content": "openbox-menuAUR использует menu-cache из LXDE для создания динамических меню. На странице проекта есть дополнительная информация и скриншоты.\n\n"
    },
    {
      "title": "Значки меню",
      "level": 3,
      "content": "Чтобы отображать значки рядом с пунктами меню, убедитесь, что они включены в разделе <menu> файла ~/.config/openbox/rc.xml:\n\n```\n<showIcons>yes</showIcons>\n```\n\nПри использовании статического меню также нужно изменить файл ~/.config/openbox/menu.xml указав команду icon = и путь к значку для каждого пункта. Пример синтаксиса для добавления значка категории:\n\n```\n<menu id=\"apps-menu\" label=\"[label name]\" icon=\"[pathway to icon]/[icon name]\">\n```\n\n"
    },
    {
      "title": "Меню рабочего стола в качестве меню панели",
      "level": 3,
      "content": "xdotool — это пакет, который может выдавать команды для имитации нажатия клавиш и их сочетаний, что позволяет использовать его для вызова действий, связанных с сочетаниями клавиш, без необходимости фактически нажимать назначенные им клавиши. Можно использовать сочетание клавиш для вызова меню Openbox, чтобы превратить меню рабочего стола Openbox в меню панели. Если меню рабочего стола настроено под себя и содержит множество функций, это может оказатья полезным для:\n\n- Замены существующего меню панели\n- Реализации меню панели, если иное не предусмотрено или невозможно (например, для tint2)\n- Альтернативного варианта доступа к меню, если рабочий стол занят каким-то приложением (например xfdesktop).\n\nПосле установки XDoTool добавьте сочетание клавиш для вызова меню в ~/.config/openbox/rc.xml ниже заголовка <!-- Keybindings for running aplications -->. Пример для сочетания клавиш Ctrl+m:\n\n```\n<keybind key=\"C-m\">\n    <action name=\"ShowMenu\">\n       <menu>root-menu</menu>\n    </action>\n</keybind>\n```\n\nПосле изменения не забудьте перенастроить Openbox. Теперь можно эмулировать нажатие Ctrl+m с помощью XDoTool (обратите внимание, что используется + вместо -):\n\n```\nxdotool key control+m\n```\n\nКак использовать эту команду на панели — зависит от конкретной панели. Некоторые позволяют выполнять произвольные команды, для некоторых необходимо создать скрипт. Например, можно создать скрипт obpanelmenu.sh в каталоге ~/.config, записав в него показанную выше команду xdotool:\n\n```\n~/.config/obpanelmenu.sh\n```\n\n```\nxdotool key control+m\n```\n\nПосле сохранения не забудьте сделать его исполняемым.\n\nТеперь, если панель поддерживает перетаскивание исполняемых файлов на себя, просто перетащите этот скрипт на вашу панель.\n\n"
    },
    {
      "title": "XDG compliant menu",
      "level": 3,
      "content": "A xdg compliant menu is based on the freedesktop.org standard. The menu is defined in menu-files which reside in /etc/xdg/menus. New applications will occur automatically in the menu.\n\n"
    },
    {
      "title": "Example",
      "level": 4,
      "content": "The archlinux-menusAUR package provides an Arch Linux specific XDG-compliant menu.\n\n"
    },
    {
      "title": "Вызов и работа меню",
      "level": 3,
      "content": "В openbox каждое (под)меню имеет имя (id), по которому это меню может быть вызвано как меню верхнего уровня. Для этого надо привязать действие ShowMenu к горячей клавише (keybind) или к событию мыши (mousebind). Некоторые имена являются зарезервированными внутренними именами openbox (client-list-menu, client-list-combined-menu). Имя главного меню не зарезервировано, имя root-menu, используемое \"из коробки\", можно заменить на любое другое, и можно иметь любое число меню верхнего уровня, вызываемых по горячим клавишам. Эти же меню могут входить в главное меню в качестве подменю любого уровня. Когда меню верхнего уровня вызвано, дальнейшая навигация возможна как мышью, так и клавиатурой.\n\nПо умолчанию меню появляется на экране рядом с указателем мыши. Это очень удобно для последующей навигации мышью, но для чисто клавиатурной работы удобнее было бы появление меню в фиксированной позиции, чтобы не приходилось разыскивать его по всему экрану. Начиная с версии 3.6 это возможно: в действии ShowMenu можно задать позицию меню. Синтаксис такой же, как и во всех остальных случаях задания позиции (см. пример ниже).\n\nПункт меню (item) выполняется по щелчку мыши, или по Enter или пробелу, или по уникальному ускорителю (см.ниже). Меню при этом автоматически закрывается. Однако, если при этом удерживать клавишу Ctrl, то меню не закрывается и можно выполнить ещё какие-то пункты.\n\nДля навигации мышью существенными являются два параметра из секции <menu> в файле rc.xml - submenuShowDelay и submenuHideDelay. Первый из них предотвращает нежелательный вызов генератора pipe-меню, когда мышь перемещается через соответствующий пункт. Второй даёт возможность переместить мышь в раскрывшееся меню по диагонали, не опасаясь, что вместо этого подменю раскроется другое, которое мышь зацепила по пути.\n\nНавигация клавиатурой возможна при помощи курсорных клавиш (тут пояснять нечего), и при помощи ускорителей. По умолчанию ускорителями являются первые буквы меток (label) пунктов меню. Если нажать клавишу такой буквы, то дальнейшее зависит от того, уникален ли данный ускоритель в пределах этого меню. Если да, то соответствующий пункт будет выполнен (или произойдёт переход в подменю). Если ускоритель не уникален, то будет выбран ближайший пункт с таким ускорителем, а дальнейшие нажатия этой же клавиши будут перебирать по кругу пункты с этим ускорителем. В качестве ускорителя может быть использована любая буква в метке. Для этого перед этой буквой следует поставить символ подчёркивания. (Похоже, в качестве ускорителей можно использовать только английские буквы.)\n\nЭта техника позволяет наглядно и не особо напрягая память, вызывать любую из нескольких десятков команд в два-три касания к клавиатуре. Эти команды следует разбить на группы, для каждой из которых составить меню, вызываемое по легко запоминаемой горячей клавише. А в пределах каждого такого меню нужно расставить ускорители так, чтобы они тоже легко запоминались и чтобы все они были уникальными (в пределах одного меню). Например, в главном меню может быть такое подменю:\n\n```\n<menu id=\"filemanager\" label=\"_File Manager\">\n  <item label=\"m_c\" icon=\"/usr/share/pixmaps/midnightcommander.png\">\n    <action name=\"Execute\"> <execute>urxvt -e mc</execute> </action>\n  </item>\n  <item label=\"Double Commander\" icon=\"/usr/share/pixmaps/doublecmd.png\">\n    <action name=\"Execute\"> <command>doublecmd</command> </action>\n  </item>\n  <item label=\"Pcmanfm\" icon=\"/usr/share/icons/gnome/16x16/apps/system-file-manager.png\">\n    <action name=\"Execute\"> <command>pcmanfm</command> </action>\n  </item>\n  <item label=\"Thunar\" icon=\"/usr/share/icons/hicolor/16x16/apps/Thunar.png\">\n    <action name=\"Execute\"> <execute>thunar</execute> </action>\n  </item>\n</menu>\n```\n\nДля вызова этого же меню на верхнем уровне в файл rc.xml помещаем такое определение:\n\n```\n<keybind key=\"W-f\">\n     <action name=\"ShowMenu\"> \n       <menu>filemanager</menu> \n       <position> <x> center </x> <y> center </y> </position>\n     </action>\n   </keybind>\n```\n\nТеперь, чтобы вызвать mc, достаточно нажать Win-f (появится меню из 4 пунктов) и затем c, а чтобы вызвать thunar, достаточно нажать Win-f и затем t.\n\n"
    },
    {
      "title": "Темы курсора и значков",
      "level": 3,
      "content": "Смотрите статьи Темы курсора и Значки.\n\n"
    },
    {
      "title": "Значки и фон рабочего стола",
      "level": 3,
      "content": "Openbox не поддерживает использование значков и фона на рабочем столе, но можно использовать сторонние программы, например PCManFM, SpaceFM или Idesk.\n\nСмотрите List of applications/Other#Wallpaper setters.\n\n"
    },
    {
      "title": "Эффекты композитинга",
      "level": 3,
      "content": "Openbox не поддерживает композитинг, поэтому для него нужно установить сторонний композитор.\n\nХотя композитинг необязателен, его использование может решить некоторые визуальные проблемы с oblogout, прозрачностью и тирингом. Смотрите Xorg (Русский)#Список композитных менеджеров.\n\n"
    },
    {
      "title": "oblogout",
      "level": 3,
      "content": "Oblogout предоставляет красивый графический интерфейс выхода из системы.\n\n"
    },
    {
      "title": "Запуск сложной команды сочетанием клавиш",
      "level": 3,
      "content": "Если вам нужно выполнить сложную команду, используйте функции командной оболочки.\n\nПри написании команд не забудьте экранировать специальные символы xml, такие как \"&\" (\"&amp;\"), \"<\" (\"&lt;\"), \">\" (\"&gt;\") и другие.\n\nВ этом примере дисплей немедленно отключится, а экран заблокируется с помощью slock. Он был взят из этой темы на форуме.\n\n```\n<keybind key=\"W-l\">\n   <action name=\"Execute\">\n     <command>sh -c 'slock &amp; (sleep .5 &amp;&amp; xset dpms force off)'</command>\n   </action>\n </keybind>\n```\n\nЕсли нужно прописать переменную окружения для программы:\n\n```\n<keybind key=\"A-F7\">\n   <action name=\"Execute\">\n     <command>sh -c \"LC_ALL=C obconf\"</command>\n   </action>\n </keybind>\n```\n\nЗапись stdout и stderr из запускаемой программы в файл:\n\n```\n<keybind key=\"A-f\">\n   <action name=\"Execute\">\n     <command>sh -c sh -c \"exec gimp &gt;/tmp/gimp.out 2&gt;&amp;1\"</command>\n   </action>\n </keybind>\n```\n\nСкриншот:\n\n```\n<keybind key=\"Print\">\n   <action name=\"Execute\">\n     <command>gnome-screenshot --clipboard</command>\n   </action>\n </keybind>\n <keybind key=\"A-Print\">\n   <action name=\"Execute\">\n     <command>gnome-screenshot --clipboard --window</command>\n   </action>\n </keybind>\n <keybind key=\"W-Print\">\n   <action name=\"Execute\">\n     <command>gnome-screenshot --interactive</command>\n   </action>\n </keybind>\n```\n\n"
    },
    {
      "title": "Лаунчеры программ",
      "level": 3,
      "content": "Учитывая отсутствие среды рабочего стола в базовой установке Openbox, может быть полезно установить один или несколько лаунчеров в качестве дополнений к меню Openbox и горячим клавишам. Их список можно посмотреть в Category:Application launchers и List of applications/Other#Application launchers; популярные примеры — Gmrun и dmenu.\n\n"
    },
    {
      "title": "Переключение рабочих столов с помощью мыши",
      "level": 3,
      "content": "Можно сделать переключение рабочих столов путём перемещения курсора мыши к краю экрана. Для этого установите xdotool и добавьте в ~/.xinitrc:\n\n```\nxdotool behave_screen_edge --delay 500 left set_desktop --relative -- -1 &\nxdotool behave_screen_edge --delay 500 right set_desktop --relative -- +1 &\n```\n\n"
    },
    {
      "title": "Выбор приложений по умолчанию",
      "level": 3,
      "content": "Смотрите Приложения по умолчанию.\n\n"
    },
    {
      "title": "Прозрачность окон",
      "level": 3,
      "content": "С помощью transset-dfAUR вы сможете включать прозрачность окон на лету.\n\nДля этого поместите представленные ниже строки в секцию <mouse> файла ~/.config/openbox/rc.xml. Таким образом вы сможете с помощью прокрутки колёсика мыши регулировать прозрачность окон, когда курсор мыши находится над заголовком окна:\n\n```\n<context name=\"Titlebar\">\n    ...\n    <mousebind button=\"Up\" action=\"Click\">\n        <action name= \"Execute\" >\n        <execute>transset-df --point .2 --inc  </execute>\n        </action>\n    </mousebind>\n    <mousebind button=\"Down\" action=\"Click\">\n        <action name= \"Execute\" >\n        <execute>transset-df --point .2 --dec </execute>\n        </action>\n    </mousebind>\n    ...\n</context>\n```\n\n"
    },
    {
      "title": "Использование obxprop для более быстрой настройки",
      "level": 3,
      "content": "Пакет openbox предоставляет команду obxprop, которая может анализировать релевантные значения для настройки приложений в rc.xml. Официально obxprop | grep \"^_OB_APP\" рекомендуется для этой задачи. Запустите эту команду команду, затем щёлкните по нужному окну, чтобы увидеть его свойства в терминале.\n\n"
    },
    {
      "title": "Значения Xprop для приложений",
      "level": 3,
      "content": "Можно использовать xorg-xprop для просмотра значений свойств у выбранных приложений. Если вы используете специальные настройки для приложений, может оказаться удобным такой псевдоним для bash:\n\n```\nalias xp='xprop | grep \"WM_WINDOW_ROLE\\|WM_CLASS\" && echo \"WM_CLASS(STRING) = \\\"NAME\\\", \\\"CLASS\\\"\"'\n```\n\nДля использования запустите xp и кликните на запущенную программу, для которой вы хотите определить собственные настройки. Результат отобразит только информацию, требуемую для Openbox, а именно WM_WINDOW_ROLE и WM_CLASS (имя и класс):\n\n```\nWM_WINDOW_ROLE(STRING) = \"roster\"\nWM_CLASS(STRING) = \"gajim.py\", \"Gajim.py\"\nWM_CLASS(STRING) = \"NAME\", \"CLASS\"\n```\n\n"
    },
    {
      "title": "Переключение раскладок клавиатуры",
      "level": 3,
      "content": "Смотрите Xorg/Конфигурация клавиатуры#Переключение раскладок клавиатуры.\n\n"
    },
    {
      "title": "Изменение сетки виртуальных рабочих столов",
      "level": 3,
      "content": "Установите obsetlayoutAUR. Например, чтобы установить сетку 2x2:\n\n```\nobsetlayout 0 2 2 0\n```\n\nЗапуск без аргументов покажет справку. Эти четыре числа означают следующее:\n\n- расположение рабочих столов в сетке: 0 — по горизонтали, 1 — по вертикали;\n- ширина сетки;\n- высота сетки;\n- в каком углу располагается первый виртуальный рабочий стол: 0 — в левом верхнем, 1 — в правом верхнем, 2 — в правом нижнем, 3 — в левом нижнем.\n\n"
    },
    {
      "title": "Горячие углы",
      "level": 3,
      "content": "lead-gitAUR позволяет сделать активные углы в openbox и других легковесных менеджерах окон. Добавьте команду в #Автозапуск приложений:\n\n```\nlead &\n```\n\nДействия, выполняемые горячими углами, можно прописать в файле ~/.config/lead/lead.conf (замените eDP1 на название вашего вывода экрана, которое вы можете узнать с помощью xrandr):\n\n```\n[eDP1]\nbottom=\nbottomLeft=chromium\nbottomRight=thunar\nleft=\nright=\ntop=\ntopLeft=mlde.californium toggle\ntopRight=skippy-xd\n```\n\nПодробнее смотрите [2].\n\n"
    },
    {
      "title": "Привязка окон",
      "level": 3,
      "content": "Многие среды рабочего стола и оконные менеджеры поддерживают привязку окон (window snapping, например Windows 7 Aero snap), позволяя автоматически выставлять окно в определённое место при его перемещении к краю экрана. Этот эффект можно сымитировать в Openbox с помощью сочетаний клавиш для окон с фокусом.\n\nКак показано в примере, для указания размеров окна необходимо использовать проценты (подробнее смотрите на openbox.org[устаревшая ссылка 2024-10-12 ⓘ]). В этом случае клавиша super используется вместе с navigation:\n\n```\n<keybind key=\"W-Left\">\n    <action name=\"Unmaximize\"/>\n    <action name=\"MaximizeVert\"/>\n    <action name=\"MoveResizeTo\">\n        <width>50%</width>\n    </action>\n    <action name=\"MoveToEdge\"><direction>west</direction></action>\n</keybind>\n<keybind key=\"W-Right\">\n    <action name=\"Unmaximize\"/>\n    <action name=\"MaximizeVert\"/>\n    <action name=\"MoveResizeTo\">\n        <width>50%</width>\n    </action>\n    <action name=\"MoveToEdge\"><direction>east</direction></action>\n</keybind>\n```\n\nОднако после того, как окно было привязано к краю, оно будет оставаться развёрнутым по вертикали до тех пор, пока впоследствии не будет развёрнуто и не восстановлено. Решение — реализовать дополнительные сочетания клавиш: в данном случае с помощью клавиш down и up. Это также ускорит вытягивание привязанных окон за края экрана:\n\n```\n<keybind key=\"W-Down\">\n   <action name=\"Unmaximize\"/>\n</keybind>\n<keybind key=\"W-Up\">\n   <action name=\"Maximize\"/>\n</keybind>\n```\n\nПодробнее можно почитать в этой теме на форуме Ubuntu. Также есть такие приложения, как opensnapAUR, для автоматического моделирования поведения привязки окон без использования сочетаний клавиш. Другой вариант — использовать bunsen-utilities-gitAUR, который предоставляет команды bl-aerosnap --left и bl-aerosnap --right, которые привязывают активное окно к левому или правому краю соответственно, если оно ещё не привязано, и восстанавливают его до исходного размера и положения, если уже привязано. Просто пропишите эти команды для нужных вам сочетаний клавиш.\n\n"
    },
    {
      "title": "Плавный переход из менеджера входа",
      "level": 3,
      "content": "Пользователи экранных менеджеров могут заметить мерцание при переходе из экрана входа в рабочий стол Openbox. Мерцание происходит из-за того, что Openbox устанавливает цвет корневого окна во время запуска. Поэтому есть короткий момент, когда дисплей мигает серым цветом между фоном экранного менеджера и фоном рабочего стола.\n\nУстановку цвета фона корневого окна можно отключить, изменив скрипт запуска Openbox /usr/lib/openbox/openbox-autostart. Просто закомментируйте (или удалите) блок, начинающийся с # Set a background color.\n\n"
    },
    {
      "title": "Декорации окон",
      "level": 3,
      "content": "Чтобы убрать декорации окон для всех или отдельных приложений, используйте опцию <decor> в разделе <applications> файла rc.xml. Пример для Firefox, включая варианты Firefox-Beta и Firefox-Nightly:\n\n```\n<application class=\"Firefox*\">\n   <decor>no</decor>\n </application>\n```\n\nМожно также отключить декорации для всех приложений (используя класс \"*\"), а затем включить их (используя yes) для отдельных. Чтобы применить изменения, перезапустите сеанс рабочего стола и Openbox. Openbox FAQ[устаревшая ссылка 2024-10-12 ⓘ]\n\n"
    },
    {
      "title": "Firefox",
      "level": 3,
      "content": "Firefox и основанные на нём приложения могут игнорировать правила (например <desktop>), если не используется class=\"Firefox\". Смотрите раздел #Значения Xprop для приложений.\n\n"
    },
    {
      "title": "Отсутствуют темы",
      "level": 3,
      "content": "Если не получается выбрать свежеустановленную тему, для начала откройте каталог темы, чтобы убедиться, что она совместима с Openbox — в нём должен быть подкаталог openbox-3, а в нём файл themerc. Иногда также может присутствовать файл .obt (OpenBox Theme), который затем можно вручную загрузить в obconfAUR[ссылка недействительна: package not found].\n\nТема также может быть недоступна из-за неправильных прав у файлов. Подробнее в статье Разрешения и атрибуты файлов.\n\n"
    },
    {
      "title": "Отключение непрерывного переключения рабочих столов",
      "level": 3,
      "content": "По умолчанию Openbox переключается с последнего рабочего стола обратно на первый рабочий стол при прокрутке колёсиком мыши. Если вам такое поведение не нравится, его можно отключить опцией <wrap>no</wrap> в разделе mousebind.\n\n```\n<context name=\"Desktop\">\n     <mousebind button=\"Up\" action=\"Click\">\n       <action name=\"GoToDesktop\">\n         <to>previous</to>\n         <wrap>no</wrap>\n       </action>\n     </mousebind>\n     <mousebind button=\"Down\" action=\"Click\">\n       <action name=\"GoToDesktop\">\n         <to>next</to>\n         <wrap>no</wrap>\n       </action>\n     </mousebind>\n   </context>\n```\n\n"
    },
    {
      "title": "Новые окна загружаются под старыми",
      "level": 3,
      "content": "Некоторые окна приложений (например Firefox или Libreoffice) могут загружаться под активными окнами, и вам придётся переключаться на только что созданное приложение вручную, чтобы увидеть его. Для исправления такого поведения добавьте в файл ~/.config/openbox/rc.xml между строк <openbox_config> и </openbox_config> следующие теги:\n\n```\n<applications>\n  <application class=\"*\">\n    <focus>yes</focus>\n  </application>\n</applications>\n```\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- Openbox Website – Официальный веб-сайт\n- Box-Look.org – Хороший ресурс с темами и соответствующими артами\n- Openbox Hacks and Configs Thread @ Arch Linux Forums\n- Openbox Screenshots Thread @ Arch Linux Forums\n- An Openbox guide\n- Викиучебник по настройке Openbox\n\n"
    }
  ]
}
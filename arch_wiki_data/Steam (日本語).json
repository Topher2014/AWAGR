{
  "title": "Steam (日本語)",
  "url": "https://wiki.archlinux.org/title/Steam_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- Steam/トラブルシューティング\n- Steam/ゲーム別のトラブルシューティング\n- ゲーム\n- ゲームパッド\n- ゲーム一覧\n\nSteam は Valve による人気のゲーム配信プラットフォームです。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール 1.1 SteamCMD 1.2 代替 Flatpak インストール 1.2.1 Flatpak でのアジアフォントの問題\n- 2 ディレクトリ構造 2.1 ライブラリフォルダ\n- 3 使用方法\n- 4 起動オプション 4.1 使用例\n- 5 ヒントとテクニック 5.1 最小化して起動 5.2 Fsync パッチ 5.3 Proton Steam-Play 5.3.1 Proton の使用を強制する 5.3.2 Steam 外で Proton を使用する 5.4 ウィンドウマネージャーを使わない Big Picture モード 5.5 Steam のスキン 5.5.1 スキンの作成 5.6 Steam 通知位置の変更 5.6.1 Use a skin 5.6.2 Live patching 5.7 Steam Remote Play 5.8 Steam Controller 5.9 Sharing Games With Windows Using Proton / Other Compatibility Layers 5.10 Steam フレンド通知の位置を変える 5.10.1 方法 1: スキンを使う 5.10.2 方法 2: オンザフライパッチ\n- 6 トラブルシューティング\n- 7 参照\n\n- 1.1 SteamCMD\n- 1.2 代替 Flatpak インストール 1.2.1 Flatpak でのアジアフォントの問題\n\n- 1.2.1 Flatpak でのアジアフォントの問題\n\n- 2.1 ライブラリフォルダ\n\n- 4.1 使用例\n\n- 5.1 最小化して起動\n- 5.2 Fsync パッチ\n- 5.3 Proton Steam-Play 5.3.1 Proton の使用を強制する 5.3.2 Steam 外で Proton を使用する\n- 5.4 ウィンドウマネージャーを使わない Big Picture モード\n- 5.5 Steam のスキン 5.5.1 スキンの作成\n- 5.6 Steam 通知位置の変更 5.6.1 Use a skin 5.6.2 Live patching\n- 5.7 Steam Remote Play\n- 5.8 Steam Controller\n- 5.9 Sharing Games With Windows Using Proton / Other Compatibility Layers\n- 5.10 Steam フレンド通知の位置を変える 5.10.1 方法 1: スキンを使う 5.10.2 方法 2: オンザフライパッチ\n\n- 5.3.1 Proton の使用を強制する\n- 5.3.2 Steam 外で Proton を使用する\n\n- 5.5.1 スキンの作成\n\n- 5.6.1 Use a skin\n- 5.6.2 Live patching\n\n- 5.10.1 方法 1: スキンを使う\n- 5.10.2 方法 2: オンザフライパッチ\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "multilib リポジトリを有効にして、steam パッケージをインストールします。\n\nArch Linux で Steam を実行するには、以下の要件を満たす必要があります。\n\n- 32 ビット版の OpenGL graphics driver をインストールします。\n- en_US.UTF-8 ロケールを生成して、無効なポインタエラーを防ぎます。\n- GUI は Arial フォントを多用しています。MS フォント を参照してください。別の方法は、代替として ttf-liberation や Steam が提供するフォント を使うこともできます。\n- アジア言語のサポートを追加するには、wqy-zenhei をインストールしてください。\n- ネットワーク管理に systemd-networkd を使用している場合は、Steam がサーバーに接続できるようにするために lib32-systemd をインストールしてください。\n\n"
    },
    {
      "title": "SteamCMD",
      "level": 3,
      "content": "Steam のコマンドライン版 steamcmdAUR をインストールします。\n\n"
    },
    {
      "title": "代替 Flatpak インストール",
      "level": 3,
      "content": "Steam は Flathub から com.valvesoftware.Steam として Flatpak でインストールすることも可能です。現在のユーザーにインストールする最も簡単な方法は、Flathub リポジトリと flatpak コマンドを使用することです。\n\n```\nflatpak --user remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo\n flatpak --user install flathub com.valvesoftware.Steam\n flatpak run com.valvesoftware.Steam\n```\n\n現在、Flatpak アプリケーションはテーマをサポートしていません。また、現在 optirun/primusrun を使ってゲームを実行することはできません。詳しくは Issue#869 を参照してください。\n\nFlatpak 経由でインストールした Steam はホームディレクトリにアクセスできないため、これを上書きすると Steam が安全でないために実行できなくなります。ただし、ホームディレクトリ以外のディレクトリは自由に追加することができます。外部ライブラリを追加する場合は、以下のコマンドを実行して追加してください。\n\n```\nflatpak override com.valvesoftware.Steam --filesystem=/path/to/directory\n```\n\n"
    },
    {
      "title": "Flatpak でのアジアフォントの問題",
      "level": 4,
      "content": "ゲームでアジアフォントを表示するのに問題がある場合は、org.freedesktop.Platform にアジア フォントが含まれていないことが原因です。まず、ローカル フォントをマウントしてみてください。\n\n```\nflatpak run --filesystem=~/.local/share/fonts --filesystem=~/.config/fontconfig  com.valvesoftware.Steam\n```\n\nそれでもうまくいかない場合は、次のハックを検討してください。フォント ファイルを org.freedesktop.Platform のディレクトリに直接コピーして、フォントを利用できるようにします。\n\n```\n# ? をあなたのシステムのバージョンとハッシュで置き換えます\n/var/lib/flatpak/runtime/org.freedesktop.Platform/x86_64/?/?/files/etc/fonts/conf.avail\n/var/lib/flatpak/runtime/org.freedesktop.Platform/x86_64/?/?/files/etc/fonts/conf.d \n/var/lib/flatpak/runtime/org.freedesktop.Platform/x86_64/?/?/files/share/fonts\n```\n\n"
    },
    {
      "title": "ディレクトリ構造",
      "level": 2,
      "content": "Steam のデフォルトのインストール先は、~/.local/share/Steam です。Steam がこの場所を見つけられない場合、再インストールするか新しい場所を選択するように促されます。この記事では、~/.steam/root シンボリックリンクを使用してインストール場所を参照します。\n\n"
    },
    {
      "title": "ライブラリフォルダ",
      "level": 3,
      "content": "すべての Steam アプリケーションには固有の AppID が設定されており、Steam ストアのページパスで探すか、SteamDBを訪問するとわかります。\n\nSteam はゲームを LIBRARY/steamapps/common/ 以下のディレクトリにインストールします。LIBRARY は通常、 ~/.steam/root ですが、複数のライブラリフォルダを作成することもできます。 (Steam > Settings > Downloads > Steam Library Folders).\n\nSteam がゲームを認識するためには、LIBRARY/steamapps/ にappmanifest_AppId.acf ファイルが必要です。appmanifest ファイルは KeyValues フォーマットを使用し、その installdir プロパティでゲームのディレクトリを決定しています。\n\n"
    },
    {
      "title": "使用方法",
      "level": 2,
      "content": "```\nsteam [ -options ] [ steam:// URL ]\n```\n\n使用可能なコマンドラインオプションについては、 Valve Developer Wiki のコマンドラインオプションの記事 を参照してください。\n\nSteam はオプションで Steam URL も受けいれます。 Steam ブラウザプロトコル を参照してください。\n\n"
    },
    {
      "title": "起動オプション",
      "level": 2,
      "content": "Steam ゲームを起動すると、Steam は Bash シェルで 起動コマンド を実行します。起動コマンドを変更するために、Steam は 起動オプション を提供しています。起動オプションはライブラリ内のゲームを右クリックして、properties を選択し、Launch Options を設定します。\n\nデフォルトでは、Steam はオプションの文字列を起動コマンドに追加します。環境変数を設定したり、起動コマンドを他のコマンドの引数として渡したりするには、%command% で代替して使用します。\n\n"
    },
    {
      "title": "使用例",
      "level": 3,
      "content": "- 引数のみ: -foo\n- 環境変数: FOO=bar BAZ=bar %command% -baz\n- 完全に異なるコマンド: othercommand # %command%\n\n"
    },
    {
      "title": "最小化して起動",
      "level": 3,
      "content": "Steam の起動時にフォーカスを取らずにシステムトレイに最小化することができます。autostart ファイルの引数リストに -silent を追加するだけです。\n\n```\n~/.config/autostart/steam.desktop\n```\n\n```\n...\nExec=/usr/bin/steam -silent\n...\n```\n\n"
    },
    {
      "title": "Fsync パッチ",
      "level": 3,
      "content": "Valve はマッシヴ・スレッド・アプリケーションで FPS を向上させるための特別なカーネル・パッチをリリースしました。このパッチを入手して使用するにはいくつかの方法があります。\n\n- Valve から直接提供されたバイナリカーネルを使用する。非公式ユーザーリポジトリ#valveaur リポジトリを追加すると、カーネルパッケージの linux-fsync と linux-fsync-headers が利用可能になります。また、通常のパッケージ（nvidia など）を DKMS パッケージ（nvidia-dkms など）に置き換える必要もあるでしょう。\n- 5.2 リリース[2]以降の fsync パッチを含む linux-zen カーネルをインストールします。\n- linux-pfAUR または linux-pf-gitAUR カーネルをインストールします。\n\n"
    },
    {
      "title": "Proton Steam-Play",
      "level": 3,
      "content": "Value は Steam Play 用の互換ツール Proton を開発しました。これは Wine と追加のコンポーネントで構成されており、多くの Windows 用ゲーム (互換性リストを参照) を起動できます。\n\nProton はオープンソースであり、GitHub で利用可能です。Steam Play が有効になっている場合、Steam は独自のバージョンの Proton をインストールします。\n\nProton は Steam クライアントで有効にする必要があります: Steam > 設定 > 互換性。このダイアログでは、Valve によって公式にサポートされているゲームに対して Steam Play を有効化したり、それら以外のゲームに対して Steam Play を有効化したりできます。\n\nProton は Easy Anti Cheat 統合をサポートしています (開発者が有効化している場合)。ただし、EAC は特定のパッチ適用済みバージョンの glibc を必要とする場合があります: 動作可能と報告されているゲームがあなたのマシンで動作しない場合、Steam Flatpak バージョンを使用してみてください。Flatpak バージョンには glibc のパッチが当てられているからです。\n\n"
    },
    {
      "title": "Proton の使用を強制する",
      "level": 4,
      "content": "必要であれば、あるゲームに対して Proton を強制的に有効化したり、特定のバージョンの Proton を強制したりできます: 対象のゲームを右クリックし、プロパティ > 互換性 > 特定のSteam Play互換ツールの使用を強制する をクリックし、Proton のバージョンを選択してください。この方法は、Linux 移植版が存在するゲームに対して Windows 版を強制的に使用させるためにも使用できます。\n\n"
    },
    {
      "title": "Steam 外で Proton を使用する",
      "level": 4,
      "content": "AUR から protonAUR か proton-gitAUR で Proton をインストールすることもできます。しかし、これらのパッケージを Steam で使用するには追加のセットアップが必要です。インストールされた Proton を Steam に認識させる方法については Proton の GitHub ページを見てください。\n\n"
    },
    {
      "title": "ウィンドウマネージャーを使わない Big Picture モード",
      "level": 3,
      "content": "ディスプレイマネージャから Big Picture モードで Steam を起動するには、次の方法があります。\n\n- steamos-compositorAUR をインストールする\n- 代わりに、steamos-compositor-plusAUR をインストールします。これは Proton ゲームの起動時の煩わしい色の点滅を隠し、バックグラウンドで起動するゲームの修正を追加します。\n- 手動で Steam エントリを追加します(ただし、Steam コンポジタの利点は失われます。主にキーボードやゲームパッドでの Big Picture モードをコントロールできません)。\n\n/usr/share/xsessions/steam-big-picture.desktop ファイルを以下の内容で作成します。\n\n```\n/usr/share/xsessions/steam-big-picture.desktop\n```\n\n```\n[Desktop Entry]\nName=Steam Big Picture Mode\nComment=Start Steam in Big Picture Mode\nExec=/usr/bin/steam -bigpicture\nTryExec=/usr/bin/steam\nIcon=\nType=Application\n```\n\n"
    },
    {
      "title": "Steam のスキン",
      "level": 3,
      "content": "Steam インターフェースは、スキンを使用してカスタマイズできます。スキンは ~/.steam/root にあるインターフェース固有のファイルを上書きできます。\n\nスキンをインストールするには、\n\n1. ファイルを ~/.steam/root/skins ディレクトリの配置します\n1. Steam > Settings > Interface を開き、選択します\n1. Steam を再起動します\n\nスキンの広範なリストは Steam のフォーラム にあります。\n\n"
    },
    {
      "title": "スキンの作成",
      "level": 4,
      "content": "ほとんどすべての Steam スタイルは ~/.steam/root/resource/styles/steam.styles (このファイルは 3,500 行以上あります)で定義されています。スキンが認識されるためには、独自の resource/styles/steam.styles が必要です。Steam のアップデートで公式の steam.styles が変更されると、スキンが古くなり、ビジュアルエラーが発生する可能性があります。\n\nスキンの作成方法については、~/.steam/root/skins/skins_readme.txt を参照してください。\n\n"
    },
    {
      "title": "Steam 通知位置の変更",
      "level": 3,
      "content": "Steam のデフォルトの通知位置は右下です。\n\nNotifications.PanelPosition を変更して、Steam の通知位置を変更することができます。\n\n- resource/styles/steam.styles デスクトップ通知\n- resource/styles/gameoverlay.styles ゲーム内通知\n\n両方のファイルは起動時に Steam によって上書きされ、起動時に steam.styles のみ読み取られます。\n\n"
    },
    {
      "title": "Use a skin",
      "level": 4,
      "content": "You can create a skin to change the notification position to your liking. For example to change the position to top right:\n\n```\n$ cd ~/.steam/root/skins\n$ mkdir -p Top-Right/resource\n$ cp -r ~/.steam/root/resource/styles Top-Right/resource\n$ sed -i '/Notifications.PanelPosition/ s/\"[A-Za-z]*\"/\"TopRight\"/' Top-Right/resource/styles/*\n```\n\n"
    },
    {
      "title": "Live patching",
      "level": 4,
      "content": "gameoverlay.styles can be overwritten while Steam is running, allowing you to have game-specific notification positions.\n\n```\n~/.steam/notifpos.sh\n```\n\n```\nsed -i \"/Notifications.PanelPosition/ s/\\\"[A-Za-z]*\\\"/\\\"$1\\\"/\" ~/.steam/root/resource/styles/gameoverlay.styles\n```\n\nAnd the #Launch options should be something like:\n\n```\n~/.steam/notifpos.sh TopLeft && %command%\n```\n\n"
    },
    {
      "title": "Steam Remote Play",
      "level": 3,
      "content": "Steam has built-in support for remote play.\n\nSee this Steam Community guide on how to setup a headless streaming server on Linux.\n\n"
    },
    {
      "title": "Steam Controller",
      "level": 3,
      "content": "Normally a Steam controller requires the use of the Steam-overlay. In non-Steam native Linux games however the overlay may not be practical. For that, while the Steam client is running it will maintain a \"desktop configuration\". With your Steam controller, configure the desktop configuration for it as a generic XBOX controller. As long as the Steam client is running you can then use your Steam controller in other games, such as GOG games, as an XBOX controller. Make sure to select your type of controller to map to in \"general controller settings\".\n\n"
    },
    {
      "title": "Sharing Games With Windows Using Proton / Other Compatibility Layers",
      "level": 3,
      "content": "With the addition of Proton compatibility for games has increased thanks to Valve, you can use custom forks such as Proton GE or others, to increase the amount of games that will work with it, you can extend this further to create a steam library on an NTFS volume containing your games, the only thing you ideally will have to force the uid and gid of the user you are currently logged in as so Steam may write files as needed, you will also need to make sure not to have the noexec option in your fstab or Steam will not be able to detect your games.\n\n"
    },
    {
      "title": "方法 1: スキンを使う",
      "level": 4,
      "content": "通知コーナーを変更だけを行うスキンを作ることができます。手動でスキンを作成する時間を節約したい場合は mediafire にアップロードされたスキンを使って下さい。ここからダウンロード してホームフォルダに展開します (サブディレクトリには展開しないで下さい、つまり zip の中にある .local フォルダはホームディレクトリに移動する必要があります)。その後 Steam を開いて、設定から、インターフェースタブを開いて下さい。< デフォルトスキン > と書かれたドロップダウンリストからお望みのスキンを選択すれば通知が移動されます。\n\nファイルを手動で作成してみたい場合、以下がその方法です。まずディレクトリを作成する必要があります:\n\n```\n$ mkdir -p $HOME/Top-Right/resource\n$ cp -R $HOME/.steam/steam/resource/styles $HOME/Top-Right/resource/\n$ mv $HOME/Top-Right $HOME/.local/share/Steam/skins/\n$ cd .local/share/Steam/skins/\n$ cp -R Top-Right Top-Left && cp -R Top-Right Bottom-Right\n```\n\nそれから好きなテキストエディタで修正したいファイルを開いてください。gameoverlay.style はゲーム内のオーバーレイでのコーナーを変更し steam.style はデスクトップでのコーナーを変更します。次の例では nano を使ってゲーム内のオーバーレイのファイルを編集します。\n\n```\n$ nano Top-Right/resource/styles/gameoverlay.style\n```\n\nそして開いたファイルの中にある Notifications.PanelPosition エントリを探して適当な値に変更して下さい、例えば右上にするには:\n\n```\nNotifications.PanelPosition     \"TopRight\"\n```\n\nこの行はどちらのファイルでも同じです。3つの種類 (Top-Right, Top-Left, Bottom-Left) があるので満足するまでスキン毎にデスクトップ・ゲーム内オーバーレイのコーナーを調整して、ファイルを保存してください。\n\n上で説明しているように Steam でスキンを選択すれば作業は完了です。このスキンファイルは違うディストリビューションでも Windows でも使用することができます (macOS にはデスクトップ通知の配置を決める別のエントリが存在します)。\n\n"
    },
    {
      "title": "方法 2: オンザフライパッチ",
      "level": 4,
      "content": "この方法は Steam が将来アップデートされても互換性があります。上のスキンファイルは steam の一部としてアップデートされオリジナルのファイルが変更されたような場合、スキンは steam のグラフィックの変更に追従しないため、変更される度に再作成する必要があります。また、この方法ではゲームの起動オプションで通知の位置を変更するパッチを実行するように指定することができるので、ゲームごとに通知の場所を変えることが可能です。\n\nSteam はアップデートするたびに (起動する度に行います) 編集する必要があるファイルを更新するので、Steam を起動した後にファイルにパッチをあてるのが一番効率的です。\n\nまず このパッチ(pastebin バージョン) が必要です。エントリを編集して \"BottomRight\" (デフォルト), \"TopRight\", \"TopLeft\", \"BottomLeft\" で変えることができますが元のファイルでは \"TopRight\" を使っています。このファイルを $HOME/.steam/topright.patch として保存してください。\n\n次に $HOME/.bashrc にエイリアスを作成します:\n\n```\nalias steam_topright='pushd $HOME/.steam/ && patch -p1 -f -r - --no-backup-if-mismatch < topright.patch && popd'\n```\n\n一度ログアウトしてログインしなおしエイリアスを更新してください。Steam を起動して完全にロードされるまで待ってから、エイリアスを実行します:\n\n```\n$ steam_topright\n```\n\nこれでほとんどのゲームで通知が右上のコーナーに表示されるようになります。\n\nゲームによって使用するコーナーを変えたい場合、パッチを複製して他のコーナーのエイリアスを作成することができます。\n\nこの作業を自動化したい場合、steam の起動オプションはエイリアスを読み取れないためスクリプトファイルが必要です。ファイルのパスや名前は例えば $HOME/.scripts/steam_topright.sh などにして、実行可能属性を付与する必要があります:\n\n```\n$ chmod +755 $HOME/.scripts/steam_topright.sh\n```\n\nファイルの中身は以下のようになります:\n\n```\n#!/bin/sh\npushd $HOME/.steam/ && patch -p1 -f -r - --no-backup-if-mismatch < topright.patch && popd\n```\n\n起動オプションは以下のようになります:\n\n```\n$HOME/.scripts/steam_topright.sh && %command%\n```\n\ngameoverlay.style フォルダと同じフォルダに steam.style という名前の別のファイルが存在し、パッチをあてたファイルと同じように働くエントリが存在し、（ゲーム内ではなく）デスクトップの通知コーナーを変更しますが、このファイルを編集して使うには steam を起動する前に設定して steam がファイルを書き換えないように読み取り専用にフォルダを設定する必要があります。そのためこのファイルを編集する方法は、ディレクトリを読み取り専用にして steam が起動時に変更しないようにする (アップデートが壊れる可能性あり) か、方法1のようにスキンを作成するかのどちらかしかありません。\n\n"
    },
    {
      "title": "トラブルシューティング",
      "level": 2,
      "content": "Steam/トラブルシューティングを参照してください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Gentoo:Steam\n- The Big List of DRM-Free Games on Steam at PCGamingWiki\n- List of DRM-free games at Fandom\n- List of DRM-free games at wikia\n- Steam Linux ストア\n- Proton Wine と追加コンポーネントに基づく Steam Play 用の互換ツール\n\n"
    }
  ]
}
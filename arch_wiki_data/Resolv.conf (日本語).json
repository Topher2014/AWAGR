{
  "title": "Resolv.conf (日本語)",
  "url": "https://wiki.archlinux.org/title/Resolv.conf_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- ネットワーク設定\n- パフォーマンスの最大化#ネットワーク\n\n一般に、ドメイン名 は IP アドレスを表し、ドメインネームシステム (DNS) で IP アドレスに関連付けられます。\n\nここでは、ドメイン名前解決の設定方法とドメイン名の解決方法について説明します。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 Name Service Switch 1.1 NSS を使用してドメイン名を解決する\n- 2 Glibc リゾルバ 2.1 /etc/resolv.conf の上書き 2.1.1 nmcli を使用した代替方法 2.2 探索時間を制限する 2.3 IPv6 でホスト名の解決が遅れる 2.4 ローカルドメイン名\n- 3 ルックアップユーティリティ\n- 4 Resolver のパフォーマンス\n- 5 プライバシーとセキュリティ 5.1 アプリケーションレベルの DNS 5.2 Oblivious DNS\n- 6 サードパーティの DNS サービス\n- 7 DNS サーバー 7.1 認証専用サーバー 7.2 条件付き転送\n- 8 参照\n\n- 1.1 NSS を使用してドメイン名を解決する\n\n- 2.1 /etc/resolv.conf の上書き 2.1.1 nmcli を使用した代替方法\n- 2.2 探索時間を制限する\n- 2.3 IPv6 でホスト名の解決が遅れる\n- 2.4 ローカルドメイン名\n\n- 2.1.1 nmcli を使用した代替方法\n\n- 5.1 アプリケーションレベルの DNS\n- 5.2 Oblivious DNS\n\n- 7.1 認証専用サーバー\n- 7.2 条件付き転送\n\n"
    },
    {
      "title": "Name Service Switch",
      "level": 2,
      "content": "Name Service Switch (NSS) 機能は GNU C ライブラリ (glibc) の一部であり、getaddrinfo(3) API をサポートしており、ドメイン名を解決するために使用されます。NSS では、システムデータベースを別々のサービスで提供することができ、その検索順序は管理者が nsswitch.conf(5) で設定することができます。ドメイン名の解決を行うデータベースは hosts データベースであり、glibc は以下のサービスを提供しています。\n\n- files: /etc/hosts ファイルを読み込む。hosts(5) を参照してください。\n- dns :/etc/resolv.conf を読み込む glibc resolver。 resolv.conf(5) を参照してください。\n\nsystemd はホスト名解決のために 3 つの NSS サービスを提供します。\n\n- nss-resolve(8) — で説明されているキャッシング DNS スタブ リゾルバ systemd-resolved\n- nss-myhostname(8) — /etc/hosts を編集せずに ネットワーク設定#ローカルのホストネーム解決 を提供します。\n- nss-mymachines(8) — ローカル systemd-machined(8) コンテナの名前のホスト名解決を提供します\n\n"
    },
    {
      "title": "NSS を使用してドメイン名を解決する",
      "level": 3,
      "content": "NSS データベースは getent(1) でクエリできます。ドメイン名は、NSS を介して解決できます。\n\n```\n$ getent hosts domain_name\n```\n\n"
    },
    {
      "title": "Glibc リゾルバ",
      "level": 2,
      "content": "glibc リゾルバは、解決ごとに /etc/resolv.conf を読み取り、使用するネームサーバーとオプションを決定します。\n\nresolv.conf(5)は、ネームサーバー(nameservers)といくつかの設定オプションを記載するファイルです。 最初に記載された名前解決サーバーが優先的に使用され、最大3つまで記載できます。 先頭に (#) が付いた行は無視されます。\n\n"
    },
    {
      "title": "/etc/resolv.conf の上書き",
      "level": 3,
      "content": "Network manager は /etc/resolv.conf を上書きする傾向があります。詳細については、対応するセクションを参照してください。\n\n- dhcpcd#/etc/resolv.conf\n- Netctl#/etc/resolv.conf\n- NetworkManager#/etc/resolv.conf\n- ConnMan#/etc/resolv.conf\n\nプログラムが /etc/resolv.conf を上書きするのを防ぐために、不変の ファイル属性 を設定して書き込み保護することもできます。\n\n```\n# chattr +i /etc/resolv.conf\n```\n\n"
    },
    {
      "title": "nmcli を使用した代替方法",
      "level": 4,
      "content": "NetworkManager を使用する場合、nmcli(1) を使用して /etc/resolv.conf の永続オプションを設定できます。Wired を接続の名前に変更します。例:\n\n```\n# nmcli con mod Wired +ipv4.dns-options 'rotate,single-request,timeout:1'\n```\n\nその他のオプションについては、nmcli(1)、nm-settings-nmcli(5)、および resolv.conf(5) のマニュアルページを参照してください:\n\n"
    },
    {
      "title": "探索時間を制限する",
      "level": 3,
      "content": "非常に長いホスト名の探索に直面したとき (pacman やブラウジング中など)、代替ネームサーバーが使われるまでの小さなタイムアウトを定義することがしばしば役に立ちます。これを行うには、/etc/resolv.conf に以下を記述してください。\n\n```\noptions timeout:1\n```\n\n"
    },
    {
      "title": "IPv6 でホスト名の解決が遅れる",
      "level": 3,
      "content": "ホスト名の解決時に5秒の遅延が発生した場合は、DNS サーバー/ファイアウォールの誤動作が原因である可能性があり、並列の A および AAAA 要求に対して1つの応答しか返さない可能性があります。[1] /etc/resolv.conf で次のオプションを設定することで、これを修正できます。\n\n```\noptions single-request\n```\n\n"
    },
    {
      "title": "ローカルドメイン名",
      "level": 3,
      "content": "ローカルマシン名のホスト名を完全修飾ドメイン名なしで使用できるようにするには、/etc/resolv.conf にローカルドメインの行を以下のように追加してください。\n\n```\ndomain example.org\n```\n\nこれにより、ssh コマンドを使用する際に mainmachine1.example.org のようなローカルホストを単に mainmachine1 として参照することができますが、 drill コマンドなどは検索を行うために完全修飾ドメイン名を要求します。\n\n"
    },
    {
      "title": "ルックアップユーティリティ",
      "level": 2,
      "content": "特定の DNS サーバーと DNS/DNSSEC レコードを照会するには、専用の DNS ルックアップユーティリティを使用できます。これらのツールは DNS 自体を実装し、NSS を使用しません。\n\nldns は、DNS から情報を取得するために設計されたツールである drill(1) を提供します。\n\nたとえば、drill を使用して特定のネームサーバーにドメインの TXT レコードを照会するには、次のようにします:\n\n```\n$ drill @nameserver TXT domain\n```\n\nDNS サーバーが指定されていない場合、drill は /etc/resolv.conf で定義されたネームサーバーを使用します。\n\n- knot khost(1) と kdig(1) を提供します。\n- Unbound unbound-host(1) を持っています。\n- BIND には、dig(1)、host(1)、nslookup(1)、および多数の dnssec- ツールがあります。\n- systemd-resolved resolvectl(1) があり、DNS 探索用の query サブコマンドを提供します。\n\n"
    },
    {
      "title": "Resolver のパフォーマンス",
      "level": 2,
      "content": "Glibc resolver は問い合わせをキャッシュしません。ローカルキャッシュを実装するには、 systemd-resolved を使用するか、ローカルキャッシュ DNS server を設定し、 127.0.0.1 と ::1 を /etc/resolv.conf または /etc/resolvconf (openresolv を使用する場合) でネームサーバーとして使用します。\n\n- drill または dig は、クエリー時間を報告します。\n- 通常、ルータは自身のキャッシングリゾルバ を ネットワークの DNS サーバーとして設定し、ネットワーク全体に DNS キャッシュを提供します。\n- 次の DNS サーバーへの切り替えに時間がかかりすぎる場合は、 ドメイン名前解決#timeout オプションを使ってホスト名の検索時間を減らす を試してください。\n\n"
    },
    {
      "title": "プライバシーとセキュリティ",
      "level": 2,
      "content": "DNS プロトコルは暗号化されておらず、機密性、完全性、認証を考慮していないため、信頼されていないネットワークや悪意のある ISP を使用すると、DNS クエリが盗聴され、応答が manipulated される可能性があります。さらに、DNSサーバーは DNS hijacking を行うこともできます。\n\nDNS サーバーがあなたのクエリを機密扱いにすることを信頼する必要があります。DNS サーバーは ISP や サードパーティ によって提供されています。また、自分で 再帰型ネームサーバー を運用することもできますが、より多くの労力がかかります。信頼できないネットワークで DHCP クライアントを使う場合は、任意の DNS サーバーを使ったり、その影響を受けたりしないように、必ず静的なネームサーバーを設定するようにしてください。リモート DNS サーバーとの通信を安全にするために、DNS over TLS (RFC 7858) や DNS over HTTPS (RFC 8484) または DNSCrypt などの暗号化プロトコルを使用するとよいでしょう。ただし上流サーバと リゾルバ がこのプロトコルをサポートしていることが条件です。また、stunnel などの通信を暗号化・復号化する専用ソフトを利用する方法もあります。認証付きのサーバー からの応答であることを確認するために、DNSSEC を検証することができます (リゾルバ と上流のサーバの両方がサポートしている場合)\n\n"
    },
    {
      "title": "アプリケーションレベルの DNS",
      "level": 3,
      "content": "主要な Web ブラウザ [2] [3] などの一部のクライアントソフトウェアは、HTTPS 上で DNS を実装し始めていることに注意してください。クエリの暗号化は、しばしばボーナスとみなされるかもしれませんが、それは、ソフトウェアがシステムリゾルバの設定の周りでクエリを横取りすることも意味します[4]\n\nFirefox では、DNS over HTTPS の有効・無効やDNSサーバーを選択するための 設定オプション が提供されています。\n\nChromium はユーザーのシステムリゾルバを調査し、システムリゾルバのアドレスが DNS over HTTPS も提供することが分かっている場合、DNS over HTTPS を有効にします。詳細と DNS over HTTPS を無効にする方法については、このブログの記事 を参照してください。\n\nMozilla [5] は、システムリゾルバがドメイン use-application-dns.net を解決できない場合、普遍的にアプリケーションレベル DNS を無効にすることを提案しています。現在のところ、これはFirefoxにのみ実装されています。\n\n"
    },
    {
      "title": "Oblivious DNS",
      "level": 3,
      "content": "Oblivious DNS は、多くの DNS プライバシーの問題に対処するシステムです。詳しくはCloudflare の記事 をご覧ください。\n\n"
    },
    {
      "title": "サードパーティの DNS サービス",
      "level": 2,
      "content": "さまざまな Public recursive name server が利用可能であり、その一部には専用のソフトウェアもあります。\n\n- cloudflared — HTTPS 経由の Cloudflare DNS の DNS クライアント\n\n- dingo — HTTPS 経由の Google DNS の DNS クライアント\n\n- opennic-up — 最も応答性の高い OpenNIC サーバーを使用して、DNS サーバーの更新を自動化します\n\n- nextdns — NextDNS 用の DNS-over-HTTPS CLI クライアント\n\ndnsperftest を使用して、最も一般的な DNS リゾルバのパフォーマンスを自分の場所からテストできます。dnsperf.com は、プロバイダー間のグローバルベンチマークを提供します。\n\n"
    },
    {
      "title": "DNS サーバー",
      "level": 2,
      "content": "DNSサーバーには、authoritative と recursive があります。そのどちらでもない場合、それらは スタブリゾルバ と呼ばれ、単にすべてのクエリーを別の再帰的ネームサーバーに転送するだけである。スタブリゾルバは通常、ローカルホストまたはネットワークに DNSキャッシュを導入するために使用される。同じことが、本格的なネームサーバーでも実現できることに注意してください。このセクションでは、利用可能なDNSサーバーを比較します。より詳細な比較は、Wikipedia:Comparison of DNS server softwareを参照してください。\n\nTable content:\n名前 | パッケージ | 機能 | resolvconf | サポートされているプロトコル\nAuthoritative | Recursive | Cache | ValidatesDNSSEC | DNS | DNSCrypt | DNSover TLS | DNSover HTTPS | DNSover QUIC\nBIND | bind | Yes | Yes | Yes | Yes | Yes | Yes | No | Server1 | Server | No\nCoreDNS | corednsAUR | Yes | No | Yes | No | No | Yes | No | Yes | Yes | No\nDNS-over-HTTPS | dns-over-https | No | No | No | No | ? | ? | No | No | Yes | No\nDeadwood (MaraDNS recursor) | maradnsAUR | No | Yes | Yes | No | No | Yes | No | No | No | No\ndnscrypt-proxy | dnscrypt-proxy | No | No | Yes | No | No | Server | Resolver | No | Yes | ?\ndnsmasq | dnsmasq | Partial2 | No | Yes | Yes | Yes | Yes | No | No | No | No\ndnsproxy | dnsproxyAUR | No | No | Yes | No | No | Yes | Yes | Yes | Yes | Yes\nKnot Resolver | knot-resolver | No | Yes | Yes | Yes | No | Yes | No | Yes | Server | No\npdnsd | pdnsd | Yes | Yes | Permanent | No | Yes | Yes | No | No | No | No\nPowerDNS Recursor | powerdns-recursor | No | Yes | Yes | Yes | Yes | Yes | No | Partial | No | ?\nRescached | rescached-gitAUR | No | No | Yes | No | Yes | Yes | No | Yes | Yes | No\nRouteDNS | routedns-gitAUR | No | No | Yes3 | No | No | Yes | No | Yes | Yes | Yes\nSmartDNS | smartdns | No | No | Yes | No | ? | Yes | No | Resolver | Resolver | No\nStubby | stubby | No | No | No | Yes | No | Server | No | Resolver | No | No\nsystemd-resolved | systemd | No | No | Yes | Yes | Yes | Resolver and limited server | No | Resolver | No | No\nUnbound | unbound | Partial | Yes | Yes3 | Yes | Yes | Yes | Server | Yes | Server | No\n\n1. BIND は DNS over TLS と DNS over HTTPS の両方を提供できますが (tls{} と listen-on を参照)、DNS over TLS/DNS over HTTPS アップストリームにクエリを転送することはまだできません。dig ツールは DNS over TLS と DNS over HTTPS (+tls と +https オプションを使用) でクエリを実行できますが 証明書チェックなし です。\n1. Wikipediaより: dnsmasq は認証付きのサポートが制限されており、公共のインターネット利用よりもむしろ内部ネットワーク利用を意図しています。\n1. Redis バックエンドを使用して、Unbound に永続的なキャッシュを提供できます。\n\n"
    },
    {
      "title": "認証専用サーバー",
      "level": 3,
      "content": "Table content:\n名前 | パッケージ | DNSSEC | 地理的バランシング\ngdnsd | gdnsd | No | Yes\nKnot DNS | knot | Yes | Yes\nMaraDNS | maradnsAUR | No | ?\nNSD | nsd | No | No\nPowerDNS | powerdns | Yes | Yes\n\n"
    },
    {
      "title": "条件付き転送",
      "level": 3,
      "content": "特定のドメイン名を照会するときに、特定の DNS リゾルバを使用することができます。これは、VPN に接続する場合に特に便利です。これにより、VPN ネットワークへのクエリは VPN の DNS によって解決されますが、インターネットへのクエリは引き続き標準の DNS リゾルバによって解決されます。ローカルネットワークでも使用できます。\n\nこれを実装するには、ローカル リゾルバ を使用する必要があります。これは、glibc がサポートしていないためです。\n\n動的な環境 (ラップトップやある程度はデスクトップ)では、接続しているネットワーク (複数) に基づいてリゾルバを設定する必要があります。そのための最良の方法は openresolv を使うことです。なぜなら multiple subscribers をサポートしているからです。いくつかの ネットワークマネージャ は openresolv を通して、あるいはリゾルバを直接設定して、これをサポートしています。NetworkManager supports conditional forwarding without openresolv は、openresolv を使わずに条件付き転送をサポートしています。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Linux Network Administrators Guide\n- Debian Handbook\n- RFC:7706 - ループバックで動作させることでルートサーバーへのアクセス時間を短縮\n- Domain name system overview - DNS に関する図\n- 代替 DNS サービス\n\n"
    }
  ]
}
{
  "title": "Laptop (日本語)",
  "url": "https://wiki.archlinux.org/title/Laptop_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "このページにはノートパソコンをもっと使いやすいように設定するのに必要なページへのリンクが含まれています。ノートパソコンの設定は多くの点でデスクトップの設定と同じです。しかしながら、重要な違いも多少存在します。Arch Linux はノートパソコンを完全にコントロールするために必要なツールやプログラムを全て提供しています。プログラムやユーティリティについて適切なチュートリアルと一緒に説明しています。\n\n特定のモデルのノートパソコンについて Linux のハードウェア互換性を知りたい場合は、ノートパソコンメーカーごとに分かれているサブページを参照してください。\n\nTable content:\nノートパソコンメインページ\nAcer - Apple - Asus - Compaq (廃業) - Dell - Fujitsu - HP - IBM/Lenovo - MSI - Samsung - Sony - Toshiba - その他\n\nメーカー表にモデルが載っていない場合、カテゴリ:ノートパソコン からメーカーのサブカテゴリを開いて類似のモデルの記事が存在しないか確認すると良いでしょう。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 電源管理 1.1 バッテリーの状態 1.1.1 ACPI 1.1.2 Udev イベント 1.1.2.1 イベントのテスト 1.2 サスペンドとハイバネート 1.3 ハードドライブのスピンダウン問題 1.4 復帰イベントの設定\n- 2 ハードウェアのサポート 2.1 画面の明るさ 2.2 タッチパッド 2.2.1 タッチパッドがまったく検出されない 2.2.1.1 Elantech 2.3 指紋リーダー 2.4 ウェブカメラ 2.5 ハードディスクの衝撃保護 2.6 ハイブリッドグラフィック 2.7 ハードウェアビデオアクセラレーション 2.8 オーディオミュート LED\n- 3 ネットワーク時刻同期\n- 4 ノートパソコンのページを書く\n- 5 参照\n\n- 1.1 バッテリーの状態 1.1.1 ACPI 1.1.2 Udev イベント 1.1.2.1 イベントのテスト\n- 1.2 サスペンドとハイバネート\n- 1.3 ハードドライブのスピンダウン問題\n- 1.4 復帰イベントの設定\n\n- 1.1.1 ACPI\n- 1.1.2 Udev イベント 1.1.2.1 イベントのテスト\n\n- 1.1.2.1 イベントのテスト\n\n- 2.1 画面の明るさ\n- 2.2 タッチパッド 2.2.1 タッチパッドがまったく検出されない 2.2.1.1 Elantech\n- 2.3 指紋リーダー\n- 2.4 ウェブカメラ\n- 2.5 ハードディスクの衝撃保護\n- 2.6 ハイブリッドグラフィック\n- 2.7 ハードウェアビデオアクセラレーション\n- 2.8 オーディオミュート LED\n\n- 2.2.1 タッチパッドがまったく検出されない 2.2.1.1 Elantech\n\n- 2.2.1.1 Elantech\n\n"
    },
    {
      "title": "電源管理",
      "level": 2,
      "content": "バッテリー容量を上手く活用するには電源管理がとても重要です。以下のツールやプログラムを使うことでバッテリーの寿命を伸ばしたりノートパソコンを低温・静音化できます。\n\n"
    },
    {
      "title": "バッテリーの状態",
      "level": 3,
      "content": "バッテリー状態を取得する方法は複数あります。古典的な方法は ACPI インターフェイスを使ってバッテリーレベルを定期的に取得するデーモンを使う方法です。システムによっては、バッテリーを 1% 放電するたびに udev にイベントが送られます。udev ルールを使ってこのイベントを他のアクションに繋げることができます。\n\n"
    },
    {
      "title": "ACPI",
      "level": 4,
      "content": "ターミナルから ACPI ユーティリティを使うことでバッテリーの状態を読み込むことができます。ACPI コマンドラインユーティリティは acpi パッケージに入っています。詳しくは ACPI モジュール を見てください。\n\n- cbatticon はシステムトレイに収まる軽量で高速なバッテリーアイコンです。\n- batterymon-cloneAUR はシステムトレイに表示されるシンプルなバッテリーモニタで、batti と似ています。\n- batifyAUR は電源が接続されたときや残りバッテリーを通知する udev ルールファイルです (x のマルチセッションに対応)。\n\n"
    },
    {
      "title": "Udev イベント",
      "level": 4,
      "content": "バッテリーからイベントが送信される場合、udev ルールを使ってバッテリーが残りわずかになったときにシステムを自動的にサスペンドすることができます。保存していない作業を消失することを防ぐことが可能です。\n\n- 全てのバッテリーが放電イベントを報告してくれるわけではありません。バッテリー使用時に udevadm monitor --property を実行して、イベントが報告されているかどうか確かめてください。バッテリーが最低でも 1% 消費されるまで実行したままで待ってください。イベントが何も表示されず /sys/class/power_supply/BAT0/alarm が 0 以外の数値の場合、おそらくバッテリーがイベントを発生させるのは BAT0/energy_now が警告値を下回ったときのみです。それにあわせてパーセンテージを設定しないと udev ルールは機能しません。\n- 以下のルールは条件が満たされるかぎり何度も実行されます。そのため、バッテリーが少ないときに休止状態から復帰するとコンピュータはすぐにまた休止状態になってしまいます。ノートパソコンによっては一定量のバッテリーが残っていないと起動ができないため、それにあわせてルールを修正する必要があります。\n\n```\n/etc/udev/rules.d/99-lowbat.rules\n```\n\n```\n# Suspend the system when battery level drops to 5% or lower\nSUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", ATTR{capacity}==\"[0-5]\", RUN+=\"/usr/bin/systemctl hibernate\"\n```\n\nバッテリーの値はいきなり低い数値になることがあるので、上記の udev ルールでは 0% から 5% までマッチするパターンを使用しています。\n\n一部のバッテリーは緊急状態の信号しか送信しないため、以下のようにルールを変更します:\n\n```\n/etc/udev/rules.d/99-lowbat.rules\n```\n\n```\nACTION==\"change\", SUBSYSTEM==\"power_supply\", ATTR{capacity_level}==\"Critical\", RUN+=\"/usr/bin/systemctl hibernate\"\n```\n\n電源供給の状態や残量にあわせてアクションを実行するようにルールをカスタマイズすることも可能です。\n\nACPI イベントが発生しない場合、cron で以下のようなスクリプトを実行してください:\n\n```\n#!/bin/sh\nacpi -b | awk -F'[,:%]' '{print $2, $3}' | {\n\tread -r status capacity\n\n\tif [ \"$status\" = Discharging -a \"$capacity\" -lt 5 ]; then\n\t\tlogger \"Critical battery threshold\"\n\t\tsystemctl hibernate\n\tfi\n}\n```\n\nudev ルールをテストする一つの方法はルールが実行される時のファイルを作成させることです。例えば:\n\n```\n/etc/udev/rules.d/98-discharging.rules\n```\n\n```\nSUBSYSTEM==\"power_supply\", ATTR{status}==\"Discharging\", RUN+=\"/usr/bin/touch /home/example/discharging\"\n```\n\nこのルールはノートパソコンの充電器が抜かれた時の /home/example/discharging にファイルを作成します。ノートパソコンの充電を止めてこのファイルを見ることでルールが動作しているかどうか確かめられます。もっと詳しい udev ルールのテスト方法は Udev#ロードする前にルールをテストする を見て下さい。\n\n"
    },
    {
      "title": "サスペンドとハイバネート",
      "level": 3,
      "content": "手動でメモリ (スタンバイ) やディスク (ハイバネート) にオペレーティングシステムをサスペンドすることで、ノートパソコンの使い方によっては、バッテリーの寿命を最適化できることがあります。\n\nサスペンドとハイバネート を見て下さい。\n\n"
    },
    {
      "title": "ハードドライブのスピンダウン問題",
      "level": 3,
      "content": "こちら に情報がまとまっています。\n\nラップトップのハードドライブが頻繁にスピンダウンするのを防ぐには、hdparm# 電源管理の設定 の説明に従って、あまり積極的でない電源管理を設定します。デフォルト値でも強すぎる可能性があります。\n\n"
    },
    {
      "title": "復帰イベントの設定",
      "level": 3,
      "content": "ウェイクアップソース/イベント/トリガーは、ハードウェアが 省電力 状態 のいずれかからシステムを復帰します。これらを見つけて設定するには、電源管理/復帰トリガー を参照してください。\n\n"
    },
    {
      "title": "画面の明るさ",
      "level": 3,
      "content": "バックライト を見て下さい。\n\n"
    },
    {
      "title": "タッチパッド",
      "level": 3,
      "content": "タッチパッドを正しく動かすには libinput のページを見てください。Synaptics タッチパッド は、現在メンテナンスモードにあり、更新されていません。\n\n"
    },
    {
      "title": "タッチパッドがまったく検出されない",
      "level": 4,
      "content": "タッチパッドデバイスが検出されず、デバイスとしてまったく表示されない場合は、次の 1 つ以上のカーネルパラメータを使用することで解決できる可能性があります:\n\n```\ni8042.noloop i8042.nomux i8042.nopnp i8042.reset\n```\n\nElantech タッチパッドが検出されず、ジャーナル に次の行が表示される場合:\n\n```\nelan_i2c 5-0015: 5-0015 supply vcc not found, using dummy regulator\n```\n\nこれは、psmouse モジュールがタッチパッドデバイスのセカンダリバスを使用しようとして、elan_i2c が使用できないという問題に関連しています。修正するには、プライマリを強制的に使用するようにします。以下のファイルを作成し、psmouse モジュールをリロードするか、再起動します:\n\n```\n/etc/modprobe.d/psmouse.conf\n```\n\n```\noptions psmouse elantech_smbus=0\n```\n\n"
    },
    {
      "title": "指紋リーダー",
      "level": 3,
      "content": "Fingerprint-gui, fprint や ThinkFinger (ThinkPad 用) を見て下さい。\n\n"
    },
    {
      "title": "ウェブカメラ",
      "level": 3,
      "content": "ウェブカメラ設定 を見て下さい。\n\n"
    },
    {
      "title": "ハードディスクの衝撃保護",
      "level": 3,
      "content": "様々なメーカーから耐衝撃機能を備えているノートパソコンが出されています。製造会社は必要なソフトウェアコンポーネントのオープンソースの開発をサポートしていませんが、Linux はハードウェア実装が異なる様々な衝撃保護をサポートしています。\n\n現在、HDAPS と Hpfall (AUR から利用可能) という2つのプロジェクトがこの種の保護をサポートしています。HDAPS は IBM/Lenovo の Thinkpad に hpfall は HP/Compaq のノートパソコンに対応しています。\n\n"
    },
    {
      "title": "ハイブリッドグラフィック",
      "level": 3,
      "content": "ノートパソコンのメーカーは1つのコンピューターに2つのグラフィックカードを載せ、高いパフォーマンスと低い電力消費量を両立させる技術を開発しました。こうしたノートパソコンは通常、ディスプレイに Intel を使っているため、まず Intel Graphics ドライバーが必要です。それから2つ目のグラフィックカードを利用する方法を選ぶ ことができます。\n\n"
    },
    {
      "title": "ハードウェアビデオアクセラレーション",
      "level": 3,
      "content": "ハードウェアのデコードとエンコードを使用すると、バッテリ寿命が長くなります。ハードウェアビデオアクセラレーション を参照してください。\n\n"
    },
    {
      "title": "オーディオミュート LED",
      "level": 3,
      "content": "Intel HD Audio を使用するラップトップでは、オーディオミュート LED を機能させるために、ユーザーがコーデックモデルを手動で指定する必要がある場合があります。まず、ラップトップが Intel HD Audio を使用しているかどうかを確認します。その場合、次のコマンドは出力を生成します:\n\n```\n$ lsmod | grep snd_hda_intel\n```\n\n次に、オーディオコーデックモデルを見つける必要があります:\n\n```\n$ grep Codec /proc/asound/card*/codec*\n```\n\nここで、利用可能なモデル名のリスト でコーデックを見つける必要があります。特定のモデル用のコーデックが見つからない場合は、試行錯誤を通じて動作するコーデックを見つけることができる場合があります。\n\nどのモデル固有のオプションをロードするかをカーネルモジュールに指示するには、model= カーネルモジュールパラメータ を指定します。例えば:\n\n```\n/etc/modprobe.d/mute-led.conf\n```\n\n```\noptions snd-hda-intel model=model_name\n```\n\nこれが機能するかどうかをテストするには、カーネルモジュールをリロードする必要があります。これは再起動することで実行できます。\n\n多数のコーデックをテストする必要がある場合は、最初にシステムをプロセスがカーネルモジュールを使用していない状態にしてから、新しいパラメータでモジュールをリロードすることにより、再起動を回避する方が効率的である可能性があります。これを行うには、すべてのグラフィカルセッションとコンソールセッションからログアウトし、ディスプレイマネージャーを使用している場合はそれを停止します。コンソールに再度ログインしたら、次のコマンドを実行します:\n\n```\n# modprobe -r snd_hda_intel\n# modprobe snd_hda_intel model=model_name\n```\n\nモジュールは、model_name で指定された新しいコーデックを使用するようになります。\n\n"
    },
    {
      "title": "ネットワーク時刻同期",
      "level": 2,
      "content": "ノートパソコンでは、ネットワークによる時刻の同期に NTPd や systemd-timesyncd、OpenNTPD の代替である Chrony を使うと良いかもしれません。Chrony は(ノートパソコンのように)ネットワーク接続が途切れてしまうシステムでも上手く動くように作られており、標準的な ntp よりも時刻同期を素早く行うことが可能です。時計のズレを早く修正するために周波数補正の範囲が広かったり、時計の周波数の変化に機敏に対応するので、仮想マシンで動かしているシステムで使うときも Chrony に利点があります。また、メモリの使用量が少なく不必要にプロセスを起こさないので、電力効率を向上できます。\n\n"
    },
    {
      "title": "ノートパソコンのページを書く",
      "level": 2,
      "content": "ノートパソコンのページを作成または変更する場合は、Help:Laptop page guidelines を参照してください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- CPU 周波数スケーリング は主としてノートブックで使われている、システム負担や電源設定にあわせて CPU の周波数を調整する技術です。\n- Display Power Management Signaling では一定時間操作を行わなかったらノートパソコンの画面を自動的に切る (スクリーンセーバーで黒画面にするだけでなく完全に信号を切る) 方法を説明しています。\n- ネットワーク設定/ワイヤレス では無線接続の設定に関する情報を提供しています。\n- 特別なキーボードキー にはメディアキーの設定の説明があります。\n- acpid は ACPI イベントを扱う、柔軟性と拡張性があるデーモンです。\n\n- 特定のモデル・メーカーのページは カテゴリ:ノートパソコン やサブカテゴリを見て下さい。\n- ThinkPad のバッテリー設定は TLP や tp_smapi で説明されています。\n- acerhdf は Acer Aspire One や Packard Bell のノートブックのファンの速度を操作するカーネルモジュールです。\n\n- http://www.linux-on-laptops.com/\n- http://www.linlap.com/\n\n"
    }
  ]
}
{
  "title": "Kernel mode setting (Русский)",
  "url": "https://wiki.archlinux.org/title/Kernel_mode_setting_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- ATI (Русский)\n- Intel graphics (Русский)\n- Nouveau (Русский)\n\nKernel Mode Setting (KMS) представляет собой метод для задания разрешения дисплея и глубины в пространстве ядра, а не в пространстве пользователя.\n\nРеализация KMS в ядре Linux активирует родное расширение в framebuffer и допускает мгновенное переключение консолей (tty). KMS содержит новые технологии (такие как DRI2) которые помогают снизить количество артефактов и увеличить производительность в 3D, даже при включенном режиме энергосбережения.\n\n"
    },
    {
      "title": "История",
      "level": 2,
      "content": "Ранее настройками видео карты занимался непосредственно X сервер. По этой причине достигнуть высокого качества графики в tty консолях было непросто. Кроме того, каждый раз при переключении из X в виртуальную консоль с помощью комбинации клавиш (Ctrl+Alt+F1) сервер должен был передавать управление видеокартой ядру, что было медленным и вызывало мерцания. Особенно \"болезненным\" был переход управления обратно к X серверу (Ctrl+Alt+F7).\n\nС использованием Kernel Mode Setting (KMS) ядру стала доступна установка режимов видео карты. Наряду с другими достоинствами это улучшает визуальные эффекты при установке параметров графики, а также позволяет быстрее переключаться между виртуальными консолями и X.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "Обратите внимание - для любых используемых Вами методов необходимо всегда отключать:\n\n- Любые vga= режимы в загрузчике, так как это вызовет конфликт с разрешением, активированным в KMS.\n- Любые video= строки, активирующие framebuffer, что вызовет конфликт с драйвером.\n- Любые другие драйвера framebuffer (такие как uvesafb).\n\n"
    },
    {
      "title": "Поздний запуск KMS",
      "level": 3,
      "content": "Драйвера Intel, Nouveau и ATI и AMDGPU уже активируют KMS автоматически для всех чипсетов и не требуют ручной настройки.\n\nПроприетарный драйвер NVIDIA поддерживает KMS с версии 364.12, но нужно включить его вручную.\n\n"
    },
    {
      "title": "Ранний запуск KMS",
      "level": 3,
      "content": "Обычно KMS инициализируется после этапа initramfs. Однако можно включить KMS уже на этапе initramfs. Добавьте нужный модуль для видеодрайвера в конфигурационный файл initramfs:\n\n- amdgpu для AMDGPU ли radeon для старого драйвера ATI.\n- i915 для Intel graphics.\n- nouveau для открытого драйвера Nouveau.\n- mgag200 для Matrox.\n- Для QEMU в зависимости от используемого режима графики: virtio-gpu для VirtIO, qxl для QXL или cirrus для Cirrus.\n- nvidia nvidia_modeset nvidia_uvm nvidia_drm для проприетарного драйвера nvidia. Смотрите NVIDIA (Русский)#DRM kernel mode setting для подробностей.\n\nИнструкции по настройке initramfs немного отличаются в зависимости от генератора initramfs, который вы используете.\n\n"
    },
    {
      "title": "mkinitcpio",
      "level": 4,
      "content": "Пример раннего запуска KMS для Intel graphics:\n\n```\n/etc/mkinitcpio.conf\n```\n\n```\nMODULES=(... i915 ...)\n```\n\nЕсли Вы используете изменённый файл EDID (не совпадающий с преднастроенными разрешениями), следует встроить его в initramfs:\n\n```\n/etc/mkinitcpio.conf\n```\n\n```\nFILES=(/usr/lib/firmware/edid/ваш_edid.bin)\n```\n\nПосле изменений пересоберите образ initramfs.\n\n"
    },
    {
      "title": "Booster",
      "level": 4,
      "content": "Пример настройки Booster:\n\n```\n/etc/booster.yaml\n```\n\n```\nmodules_force_load: i915\n```\n\nДобавление дополнительных файлов в образ:\n\n```\n/etc/booster.yaml\n```\n\n```\nextra_files: /usr/lib/firmware/edid/ваш_edid.bin\n```\n\nПосле изменений пересоберите образы booster.\n\n"
    },
    {
      "title": "Мои шрифты слишком маленькие",
      "level": 3,
      "content": "В статье Консоль Linux#Шрифты вы можете узнать, как изменить шрифт в консоли на более крупный. Например, шрифт Terminus (terminus-font) доступен в нескольких размерах, в том числе и в большом ter-132n.\n\nИли можно отключить modesetting, что приведёт к использованию меньшего разрешения экрана, и шрифты станут выглядеть крупнее.\n\n"
    },
    {
      "title": "Проблемы во время загрузки и dmesg",
      "level": 3,
      "content": "Опрос подключенных дисплеев на старых системах может быть довольно громоздким. Опрос происходит периодически и может занять несколько сотен миллисекунд в зависимости от оборудования. Это может приводить к заметным задержкам, например, при воспроизведении видео. Такие задержки могут происходить, даже если видео выводится на HDP-выход, но в конфигурации оборудования есть другие выходы, не HDP. Если у вас наблюдаются задержки в выводе изображения на экран каждые 10 секунд, отключение опроса может помочь.\n\nЕсли выскакивает ошибка с кодом 0x00000010 (2) во время процесса загрузки (Вы можете получить около 10 строк текста, последняя часть содержит этот код), используйте:\n\n```\n/etc/modprobe.d/modprobe.conf\n```\n\n```\noptions drm_kms_helper poll=0\n```\n\n"
    },
    {
      "title": "Принудительный режим и EDID",
      "level": 2,
      "content": "В случае когда Ваш дисплей не отправляет соответствующий EDID или вызывает какие-либо проблемы, Вы будете уведомлены, что родное разрешение автоматически не настроено или не отображается вообще. Ядро пытается отловить проблемы и устанавливает одно из наиболее типичных разрешений.\n\nЕсли у вас есть EDID-файл для вашего монитора, то вам просто нужно явно указать его (смотрите ниже). Однако чаще всего прямого доступа к нормальному файлу нет, и приходится либо извлекать существующий и исправлять его, либо генерировать новый.\n\nСоздание новых бинарных файлов EDID для различных разрешений и конфигураций возможно во время компиляции ядра, следуя документации (также здесь есть краткое руководство). Другие решения подробно описаны в этой статье. Извлечение существующего в большинстве случаев проще, например, если ваш монитор нормально работает под Windows, вам может повезти извлечь EDID из соответствующего драйвера, или есть похожий монитор, который успешно работает с такими же настройками, вы можете использовать get-edid из пакета read-edid. Можно также попробовать поискать в /sys/class/drm/*/edid.\n\nПосле подготовки EDID поместите его в подкаталог, например, с названием edid в каталоге /usr/lib/firmware и скопируйте в него свой бинарный файл.\n\nДля запуска во время загрузки пропишите параметр ядра:\n\n```\ndrm.edid_firmware=edid/your_edid.bin\n```\n\nДля ядер старее 4.13 используется другой параметр:\n\n```\ndrm_kms_helper.edid_firmware=edid/your_edid.bin\n```\n\nТакже, можно указать только для заданного дисплея:\n\n```\ndrm.edid_firmware=VGA-1:edid/your_edid.bin\n```\n\nДля преднастроенные разрешений, смотри таблицу имён спецификаций:\n\nTable content:\nРазрешение | Имя спецификации\n800x600 | edid/800x600.bin\n1024x768 | edid/1024x768.bin\n1280x1024 | edid/1280x1024.bin\n1600x1200 (ядро 3.10 или новее) | edid/1600x1200.bin\n1680x1050 | edid/1680x1050.bin\n1920x1080 | edid/1920x1080.bin\n\nЕсли осуществлён ранний запуск KMS, необходимо включить кастомизированный файл EDID в initramfs иначе возможны проблемы.\n\nЗначение параметра drm.edid_firmware также может быть изменено после загрузки путём записи в /sys/module/drm/parameters/edid_firmware:\n\n```\n# echo edid/your_edid.bin > /sys/module/drm/parameters/edid_firmware\n```\n\nЭто повлияет только на вновь подключенные мониторы; ранее подключенные продолжат использовать старые настройки EDID. Однако для внешних мониторов достаточно переподключить их, чтобы новый EDID применился.\n\nНачиная с ядра 3.15, для изменения EDID после загрузки системы можно использовать debugfs вместо параметра ядра, если ядро не находится в Lockdown-режиме. Это очень полезно, если вы меняете местами мониторы на разъёме или просто для тестирования.\n\n```\n# cat correct-edid.bin > /sys/kernel/debug/dri/0/HDMI-A-2/edid_override\n```\n\nОтключение:\n\n```\n# echo -n reset > /sys/kernel/debug/dri/0/HDMI-A-2/edid_override\n```\n\nВзято из nouveau wiki:\n\n- https://docs.kernel.org/fb/modedb.html\n- https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/gpu/drm/drm_fb_helper.c\n\nВ формате:\n\n```\nvideo=<conn>:<xres>x<yres>[M][R][-<bpp>][@<refresh>][i][m][eDd]\n```\n\n- <conn>: Коннектор, т.н. DVI-I-1, смотри доступные здесь /sys/class/drm/\n- <xres> x <yres>: разрешение\n- M: посчитать режим CVT?\n- R: снижение мерцания?\n- -<bpp>: глубина цвета\n- @<refresh>: частота обновления\n- i: чересстрочный (non-CVT mode)\n- m: поля?\n- e: принудительный вывод on\n- d: принудительный вывод off\n- D: принудительный цифровой вывод on (т.н. DVI-I коннектор)\n\nВы можете переопределять режимы нескольких выходов использующих \"video\" несколько раз, в частности, для вывода DVI в 1024x768 на 85 Hz и отключения TV-out:\n\n```\nvideo=DVI-I-1:1024x768@85 video=TV-1:d\n```\n\nДля получения имени и текущего статуса коннекторов, Вы можете использовать однострочную команду:\n\n```\n$ for p in /sys/class/drm/*/status; do con=${p%/status}; echo -n \"${con#*/card?-}: \"; cat $p; done\n```\n\n```\nDVI-I-1: connected\nHDMI-A-1: disconnected\nVGA-1: disconnected\n```\n\n"
    },
    {
      "title": "Отключение modesetting",
      "level": 2,
      "content": "Вы можете захотеть отключить KMS по различным причинам. Для отключения KMS добавьте nomodeset в параметры ядра.\n\nНаряду с параметром nomodeset, для карт Intel необходимо добавить i915.modeset=0, а для Nvidia nouveau.modeset=0. Для систем двойной графики (dual-graphics system) Nvidia Optimus, нужно добавить все три параметра ядра (\"nomodeset i915.modeset=0 nouveau.modeset=0\").\n\n"
    }
  ]
}
{
  "title": "AUR Trusted User Guidelines (日本語)",
  "url": "https://wiki.archlinux.org/title/AUR_Trusted_User_Guidelines_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- Arch User Repository\n\nTrusted User (TU) は AUR を正常に維持する任を負うコミュニティのメンバーです。彼または彼女は人気のパッケージをメンテナンスして (必要に応じて上流と話を持ったりパッチを送る)、管理上の問題について投票を行います。TU は活動的なコミュニティメンバーから現任の TU によって民主的な方法で選ばれます。TU は AUR の方針について最終的な決定権を持つ唯一のメンバーです。\n\nTU は TU bylaws によって律されます。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 新任 Trusted User のための TODO リスト\n- 2 TU と [unsupported]\n- 3 TU と [community], パッケージメンテナンスのガイドライン 3.1 [community] リポジトリにパッケージを入れるときのルール 3.2 リポジトリにアクセスして更新する 3.3 パッケージを放棄する 3.4 unsupported から [community] にパッケージを移動する 3.5 [community] から unsupported にパッケージを移動する 3.6 [community-testing] から [community] にパッケージを移動する 3.7 unsupported からパッケージを削除する 3.8 参照\n\n- 3.1 [community] リポジトリにパッケージを入れるときのルール\n- 3.2 リポジトリにアクセスして更新する\n- 3.3 パッケージを放棄する\n- 3.4 unsupported から [community] にパッケージを移動する\n- 3.5 [community] から unsupported にパッケージを移動する\n- 3.6 [community-testing] から [community] にパッケージを移動する\n- 3.7 unsupported からパッケージを削除する\n- 3.8 参照\n\n"
    },
    {
      "title": "新任 Trusted User のための TODO リスト",
      "level": 2,
      "content": "1. この wiki ページを全て読む\n1. TU Bylaws を読む。\n1. AUR のあなたのアカウントの情報が最新であること、あなたの後見人によって TU の地位が与えられたことを確認。\n1. Trusted Users のページにあなたの情報を追加。\n1. フォーラムのあなたのアカウントを変更するよう BBS 管理者に催促する。\n1. #archlinux-tu@freenode のキーを TU の誰かに聞いてチャンネルで他のメンバーと話す。これは必須ではありませんが、ときに内緒話がされたり新しいアイデアがたくさん出されるところなので参加すると良いはずです。\n1. 2日間経ってもバグトラッカーの Trusted User グループに昇格されない場合、このことをバグとして公の Arch Linux 開発メーリングリストに報告する (arch-dev-public@archlinux.org)。\n1. 開発インターフェイスにアクセスするためにこのテンプレートに基づく情報を全て Ionuț Bîru (ibiru@archlinux.org) に送る。\n1. devtools パッケージをインストール。\n1. SSH 公開鍵を付した署名付きメールを Florian Pritz に送る。鍵を持ってない場合、ssh-keygen を使って生成する。SSH 鍵に関する詳細は SSH 鍵の wiki ページを参照。\n1. パッケージ署名のための PGP 鍵を作成する。\n1. マスターキーの所有者全員にあなたの PGP 鍵とその鍵の完全なフィンガープリントを記述した署名付きメールを送る。あなたの鍵にはマスターキーを持っている5人のうち最低でも3人の署名が必要。\n1. nymeria.archlinux.org に ~/staging/community と ~/staging/community-testing ディレクトリを作成する (multilib パッケージのメンテをする場合は ~/staging/multilib も)。devtools スクリプトはこのディレクトリを使って新しいパッケージを処理するので、このステップは重要です。\n1. arch-dev-public メーリングリストを購読して Florian にあなたをホワイトリストへ追加するように要求する。\n1. 貢献を始める。\n\n"
    },
    {
      "title": "TU と [unsupported]",
      "level": 2,
      "content": "TU は UNSUPPORTED に投稿されたパッケージが PKGBUILD のスタンダードに従っているか都督したり、悪意のあるコードが入ってないか確認するのも仕事です。UNSUPPORTED の約80%の PKGBUILD はとてもシンプルなもので、TU チームはサニティチェックや悪意のあるコードの確認を迅速に行うことができます。\n\nTU は PKGBUILD のマイナーな間違いをチェックして、修正や改善を提案することも行います。TU は全てのパッケージが Arch Packaging Guidelines/Standards を守るように努め、そうすることで他のパッケージ作成者とスキルを共有し、ディストロ全体のパッケージビルド水準を向上させんと邁進します。\n\nまた、TU は推奨されるプラクティスを文章化するという赫奕たるポジションにも就いています。\n\n"
    },
    {
      "title": "[community] リポジトリにパッケージを入れるときのルール",
      "level": 3,
      "content": "- パッケージが Arch Linux のリポジトリのどれかに既に存在していてはいけません。他のパッケージ作成者が同じパッケージを入れようとしていないか事前に確認する必要があります。AUR のパッケージのコメントを二重点検し、aur-general の最新の見出しを読み、バグトラッカーで全てのプロジェクトを検索、Subversion のログ を grep にかけ、非公開の TU IRC チャンネルに走り書きを残す。\n\n- \"人気のある\"パッケージだけがリポジトリに入ることを許可されます、定義としては pkgstats で使用率が1%か AUR の投票が10以上。\n\n- このルールの機械的な例外は: i18n パッケージ アクセシビリティパッケージ ドライバー 人気のあるパッケージの定義を満たすパッケージの依存パッケージ、makedeps や optdeps を含む まとめて一緒に配布することが意図されているコレクションの一部にあたるパッケージ、コレクションの一部が人気の条件を満たすことが前提\n\n- i18n パッケージ\n- アクセシビリティパッケージ\n- ドライバー\n- 人気のあるパッケージの定義を満たすパッケージの依存パッケージ、makedeps や optdeps を含む\n- まとめて一緒に配布することが意図されているコレクションの一部にあたるパッケージ、コレクションの一部が人気の条件を満たすことが前提\n\n- 上記の基準にあてはまらない特別の場合は、かならず最初に aur-general メーリングリストに提案を行い、その理由を説明しなくてはなりません (例: パッケージの名前が変わった、新しいパッケージ)。パッケージが [community] に入れられるには他の3人の TU の同意が必要です。多数の\"人気ではない\"パッケージの追加を提案しても基本的には却下されます。\n\n- メンテナンスしている中であまり使用していないパッケージは [community] から移すことを TU は強く推奨されます。強制は行われませんが、辞任した TU のパッケージが取り除かれて他の人に承継されることがあります。\n\n"
    },
    {
      "title": "リポジトリにアクセスして更新する",
      "level": 3,
      "content": "現在 [community] リポジトリは [core] や [extra] にパッケージを上げるのに使うと同じシステムである devtools を使用しています。違いは gerolde.archlinux.org の代わりに nymeria.archlinux.org というサーバーを使っているということだけです。そのため Packager Guide に書かれていることがほぼ全てあてはまります。[community] リポジトリ特有の情報 (URL の変更など) はこのページに記載します。devtools を使うためにパッケージ作成者は PACKAGER 変数を設定する必要があります。クリーンな chroot では標準の設定ファイルは置かれないので {{ic|/usr/share/devtools/makepkg-{i686,x86_64}.conf}} で設定します。\n\n最初に [community] リポジトリの non-recursive checkout を行なって下さい:\n\n```\nsvn checkout -N svn+ssh://svn-community@nymeria.archlinux.org/srv/repos/svn-community/svn\n```\n\nこれで空の \"svn\" という名前のディレクトリが作成されます。空ではありますが svn のチェックアウトです。\n\nチェックアウト, 全てのパッケージのアップデート, パッケージの追加については Packager Guide を見て下さい。\n\nパッケージを削除するには:\n\n```\nssh nymeria.archlinux.org /community/db-repo-remove community arch pkgname\n```\n\nこのコマンドや以下の文章で出てくる arch は Arch Linux でサポートされている2つのアーキテクチャである i686 または x86_64 のどちらかになります。 (What about \"any\"?)\n\nPKGBUILD などの編集が完了したら、変更を commit してください (svn commit)。\n\nパッケージをリリースしたいときは、まず scp を使ってパッケージを nymeria.archlinux.org の staging/community ディレクトリにコピーしてそれから pkgname/trunk ディレクトリに移動して archrelease community-arch を実行してパッケージをタグ付けしてください。これによってパッケージが community リポジトリに入っていることを示す community-i686 や community-x86_64 という名前のディレクトリに trunk エントリの svn コピーが作成されます。\n\nNote: 時として、特に community パッケージの場合、x86_64 TU が pkgrel を (+1 ではなく) .1 上げることがあります。これは PKGBUILD への変更が x86_64 特有のものであり i686 メンテナは i686 のパッケージをリビルドしないようにすることを示します。TU が pkgrel を更新しようとするときは、通常の +1 の増加を使用するべきです。ただし、TU によって更新された前の pkgrel=2.1 は pkgrel=3.1 にするのではなく代わりに pkgrel=3 にする必要があります。要するに、混乱を避けるためにドット (.) リリースは x86_64 TU のためだけに取っておいて下さい。\n\nパッケージの更新のプロセスは以下のようにまとめることができます:\n\n- パッケージのディレクトリを Update する (svn update some-package)\n- パッケージの trunk ディレクトリに Change する (cd some-package/trunk)\n- PKGBUILD を Edit して、必要な変更を行ってから makepkg を実行。ビルドは clean chroot で行うのが推奨されます。\n- PKGBUILD やバイナリの pkg.tar.gz を Namcap する。\n- communitypkg \"commit message\" を使ってパッケージを Commit, Copy, Tag。これは以下のことを自動化します: trunk 変更を Commit (svn commit) パッケージを nymeria.archlinux.org に Copy (scp pkgname-ver-rel-arch.pkg.tar.xz* nymeria.archlinux.org:staging/community/) パッケージに Tag ({{ic|archrelease community-{i686,x86_64}}})\n- リポジトリを Update する (ssh nymeria.archlinux.org /community/db-update)\n\n- trunk 変更を Commit (svn commit)\n- パッケージを nymeria.archlinux.org に Copy (scp pkgname-ver-rel-arch.pkg.tar.xz* nymeria.archlinux.org:staging/community/)\n- パッケージに Tag ({{ic|archrelease community-{i686,x86_64}}})\n\nPackager Guide の Miscellaneous セクションも参照してください。Avoid having to enter your password all the time セクションでは gerolde.archlinux.org の代わりに nymeria.archlinux.org を使って下さい。\n\n"
    },
    {
      "title": "パッケージを放棄する",
      "level": 3,
      "content": "TU がこれ以上パッケージをメンテできない・したくないとなったら、他の TU がメンテできるように AUR メーリングリストに告知を投稿する必要があります。メンテしたいという TU が出てこない時でもパッケージを放棄することは可能ですが、TU は多数のパッケージをドロップするべきではありません (割ける時間以上のことには関わらない)。パッケージが廃れたりもう使われなくなったときは、完全に削除することができます。\n\nパッケージを完全に削除したら、TU の代わりに通常のユーザーがパッケージを管理できる、UNSUPPORTED にもう一度 (新しく) アップロードできます。\n\n"
    },
    {
      "title": "unsupported から [community] にパッケージを移動する",
      "level": 3,
      "content": "community に通常の方法に従ってパッケージを追加します、ただし unsupported から該当するパッケージを忘れずに削除してください。\n\n"
    },
    {
      "title": "[community] から unsupported にパッケージを移動する",
      "level": 3,
      "content": "上記の方法でパッケージを削除して AUR にソース tarball をアップロードします。\n\n"
    },
    {
      "title": "[community-testing] から [community] にパッケージを移動する",
      "level": 3,
      "content": "```\nssh nymeria.archlinux.org /srv/repos/svn-community/dbscripts/db-move community-testing community package\n```\n\n"
    },
    {
      "title": "unsupported からパッケージを削除する",
      "level": 3,
      "content": "ダミーパッケージを削除しても意味はありません、依存関係をトラックする際に再作成されるからです。誰かが本当のパッケージをアップロードすると全ての参照先は正しい場所になります。\n\n"
    },
    {
      "title": "参照",
      "level": 3,
      "content": "- DeveloperWiki#Packaging Guidelines\n\n"
    }
  ]
}
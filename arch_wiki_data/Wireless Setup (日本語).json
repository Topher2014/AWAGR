{
  "title": "Wireless Setup (日本語)",
  "url": "https://wiki.archlinux.org/title/Wireless_Setup_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- ソフトウェアアクセスポイント\n- アドホックネットワーク\n- インターネット共有\n- ワイヤレスボンディング\n- ネットワークデバッグ\n- Bluetooth\n\nネットワーク設定に関するメインの記事は ネットワーク設定 です。\n\nワイヤレスネットワークの設定は2段階で行います; まずワイヤレスデバイスを使うために正しいドライバがインストールされているか確認し（インストールメディア上では利用できても、明示的にインストールする必要があります）、インターフェースを設定します。次に、ワイヤレス接続を管理する方法を選びます。この記事では両方をカバーしています。また、ワイヤレス管理ツールへの追加リンクもあります。\n\n#iw セクションでは iw を使ってワイヤレスネットワークインターフェイス/ワイヤレス LAN を手動で管理する方法を説明しています。ネットワーク設定#ネットワークマネージャ セクションでは、ワイヤレスインターフェイスを自動的に管理する際に使用できるいくつかのプログラムについて説明しています。それらはすべてネットワークプロファイルのサポートを含んでおり(ノート PC のようにワイヤレスネットワークを頻繁に切り替える際に便利です)、それらのうち一部は GUI を含んでいます。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 デバイスドライバ 1.1 ドライバーの状態を確認する 1.2 ドライバー・ファームウェアをインストールする\n- 2 ユーティリティ 2.1 iw と wireless_tools の比較\n- 3 iw 3.1 インターフェイス名の取得 3.2 インターフェイスの状態の取得 3.3 インターフェイスの有効化 3.4 アクセスポイント検索 3.5 動作モードの設定 3.6 アクセスポイントへの接続\n- 4 認証 4.1 WPA2 Personal 4.2 WPA2 Enterprise 4.2.1 MS-CHAPv2 4.2.2 eduroam 4.2.3 手動/自動 セットアップ 4.3 WPA3 Personal 4.4 WPA3 Enterprise\n- 5 ヒントとテクニック 5.1 規制範囲に従う 5.2 Rfkill の注意点 5.3 省電力\n- 6 トラブルシューティング 6.1 一時的にネットワークにアクセス 6.2 ログの取得 6.3 IP アドレスの取得に失敗する 6.4 IP アドレスは取得できるのにホスト解決ができない 6.5 RTS や fragmentation のしきい値を設定する 6.6 ランダムに切断する 6.6.1 原因 #1 6.6.2 原因 #2 6.6.3 原因 #3 6.6.4 原因 #4 6.6.5 原因 #5 6.6.6 原因 #6 6.6.7 原因 #7 6.6.8 原因 #8 6.7 規制範囲が間違っているために Wi-Fi ネットワークが認識されない\n- 7 ドライバとファームウェアのトラブルシューティング 7.1 Ralink/Mediatek 7.1.1 rt2x00 7.1.2 rt3090 7.1.3 rt3290 7.1.4 rt3573 7.1.5 mt7612u 7.1.6 mt7921 7.2 Realtek 7.2.1 rtl8192cu 7.2.2 rtl8723ae/rtl8723be 7.2.3 rtl88xxau 7.2.4 rtl8811cu/rtl8821cu 7.2.5 rtl8821ce 7.2.6 rtl8822bu 7.2.7 rtl8xxxu 7.2.8 RTW88 7.2.9 RTW89 7.3 Atheros 7.3.1 ath5k 7.3.2 ath9k 7.3.2.1 省電力機能 7.4 Intel 7.4.1 iwlegacy 7.4.2 iwlwifi 7.4.2.1 Bluetooth の共存 7.4.2.2 ファームウェアの問題 7.4.2.3 Windows から起動するとアダプタが検出されない 7.4.3 LED の点滅を無効化する 7.5 Broadcom 7.6 他のドライバー・デバイス 7.6.1 Tenda w322u 7.6.2 orinoco 7.6.3 prism54 7.6.4 zd1211rw 7.6.5 hostap_cs 7.7 ndiswrapper\n- 8 参照\n\n- 1.1 ドライバーの状態を確認する\n- 1.2 ドライバー・ファームウェアをインストールする\n\n- 2.1 iw と wireless_tools の比較\n\n- 3.1 インターフェイス名の取得\n- 3.2 インターフェイスの状態の取得\n- 3.3 インターフェイスの有効化\n- 3.4 アクセスポイント検索\n- 3.5 動作モードの設定\n- 3.6 アクセスポイントへの接続\n\n- 4.1 WPA2 Personal\n- 4.2 WPA2 Enterprise 4.2.1 MS-CHAPv2 4.2.2 eduroam 4.2.3 手動/自動 セットアップ\n- 4.3 WPA3 Personal\n- 4.4 WPA3 Enterprise\n\n- 4.2.1 MS-CHAPv2\n- 4.2.2 eduroam\n- 4.2.3 手動/自動 セットアップ\n\n- 5.1 規制範囲に従う\n- 5.2 Rfkill の注意点\n- 5.3 省電力\n\n- 6.1 一時的にネットワークにアクセス\n- 6.2 ログの取得\n- 6.3 IP アドレスの取得に失敗する\n- 6.4 IP アドレスは取得できるのにホスト解決ができない\n- 6.5 RTS や fragmentation のしきい値を設定する\n- 6.6 ランダムに切断する 6.6.1 原因 #1 6.6.2 原因 #2 6.6.3 原因 #3 6.6.4 原因 #4 6.6.5 原因 #5 6.6.6 原因 #6 6.6.7 原因 #7 6.6.8 原因 #8\n- 6.7 規制範囲が間違っているために Wi-Fi ネットワークが認識されない\n\n- 6.6.1 原因 #1\n- 6.6.2 原因 #2\n- 6.6.3 原因 #3\n- 6.6.4 原因 #4\n- 6.6.5 原因 #5\n- 6.6.6 原因 #6\n- 6.6.7 原因 #7\n- 6.6.8 原因 #8\n\n- 7.1 Ralink/Mediatek 7.1.1 rt2x00 7.1.2 rt3090 7.1.3 rt3290 7.1.4 rt3573 7.1.5 mt7612u 7.1.6 mt7921\n- 7.2 Realtek 7.2.1 rtl8192cu 7.2.2 rtl8723ae/rtl8723be 7.2.3 rtl88xxau 7.2.4 rtl8811cu/rtl8821cu 7.2.5 rtl8821ce 7.2.6 rtl8822bu 7.2.7 rtl8xxxu 7.2.8 RTW88 7.2.9 RTW89\n- 7.3 Atheros 7.3.1 ath5k 7.3.2 ath9k 7.3.2.1 省電力機能\n- 7.4 Intel 7.4.1 iwlegacy 7.4.2 iwlwifi 7.4.2.1 Bluetooth の共存 7.4.2.2 ファームウェアの問題 7.4.2.3 Windows から起動するとアダプタが検出されない 7.4.3 LED の点滅を無効化する\n- 7.5 Broadcom\n- 7.6 他のドライバー・デバイス 7.6.1 Tenda w322u 7.6.2 orinoco 7.6.3 prism54 7.6.4 zd1211rw 7.6.5 hostap_cs\n- 7.7 ndiswrapper\n\n- 7.1.1 rt2x00\n- 7.1.2 rt3090\n- 7.1.3 rt3290\n- 7.1.4 rt3573\n- 7.1.5 mt7612u\n- 7.1.6 mt7921\n\n- 7.2.1 rtl8192cu\n- 7.2.2 rtl8723ae/rtl8723be\n- 7.2.3 rtl88xxau\n- 7.2.4 rtl8811cu/rtl8821cu\n- 7.2.5 rtl8821ce\n- 7.2.6 rtl8822bu\n- 7.2.7 rtl8xxxu\n- 7.2.8 RTW88\n- 7.2.9 RTW89\n\n- 7.3.1 ath5k\n- 7.3.2 ath9k 7.3.2.1 省電力機能\n\n- 7.3.2.1 省電力機能\n\n- 7.4.1 iwlegacy\n- 7.4.2 iwlwifi 7.4.2.1 Bluetooth の共存 7.4.2.2 ファームウェアの問題 7.4.2.3 Windows から起動するとアダプタが検出されない\n- 7.4.3 LED の点滅を無効化する\n\n- 7.4.2.1 Bluetooth の共存\n- 7.4.2.2 ファームウェアの問題\n- 7.4.2.3 Windows から起動するとアダプタが検出されない\n\n- 7.6.1 Tenda w322u\n- 7.6.2 orinoco\n- 7.6.3 prism54\n- 7.6.4 zd1211rw\n- 7.6.5 hostap_cs\n\n"
    },
    {
      "title": "デバイスドライバ",
      "level": 2,
      "content": "デフォルトの Arch Linux カーネルはモジュール式です、つまり、マシンハードウェアに必要なドライバの多くはハードドライブに置かれ、モジュールとして利用可能となります。起動時に、udev がハードウェアの一覧を作成し、対応するハードウェア用の適切なモジュール（ドライバ）をロードします。これにより、ネットワークインターフェイスの作成が可能になります。\n\n一部のワイヤレスチップセットは、対応するドライバに加えてファームウェアも必要とします。多くのファームウェアイメージは、linux-firmware パッケージによって提供されますが、プロプライエタリなファームウェアイメージは含まれていないため別途インストールする必要があります。#ドライバー・ファームウェアをインストールするで説明されています。\n\n"
    },
    {
      "title": "ドライバーの状態を確認する",
      "level": 3,
      "content": "あなたのカード用のドライバーがロードされていることを確認するには、lspci -k か lsusb -v の出力を見てください (カードが PCI(e) と USB のどちらに接続されているかに依存します)。カーネルドライバーが使われているなら、例えば以下のように表示されるはずです:\n\n```\n$ lspci -k\n```\n\n```\n06:00.0 Network controller: Intel Corporation WiFi Link 5100\n\tSubsystem: Intel Corporation WiFi Link 5100 AGN\n\tKernel driver in use: iwlwifi\n\tKernel modules: iwlwifi\n```\n\n- カードが USB デバイスの場合、dmesg | grep usbcore を root ユーザーとして実行すると usbcore: registered new interface driver rtl8187 のように表示されるはずです。\n- カードを全く確認できない場合、PCI(e) スロット/USB ポートに適切に接続されていないのかもしれません。もう一度、デバイスを接続し直してみてください。\n\nまた、ip link コマンドの出力を確認し、ワイヤレスインターフェイスが作成されたことを確認してください。通常、ワイヤレスネットワークインターフェイスの名前は \"w\" で始まります (例: wlan0、wlp2s0)。そして、以下のコマンドでそのインターフェイスを up 状態にしてください:\n\n```\n# ip link set interface up\n```\n\n例えば、インターフェイスが wlan0 である場合、実行すべきコマンドは ip link set wlan0 up となります。\n\n- RTNETLINK answers: Operation not possible due to RF-kill のようなエラーが発生する場合、デバイスがハードロックまたはソフトロックされていないことを確認してください。詳細は #Rfkill の注意点 を参照してください。\n- SIOCSIFFLAGS: No such file or directory というエラーメッセージが発生する場合、ほぼ確実に、あなたのワイヤレスチップセットが機能するにはファームウェアが必要であることを意味します。\n\nファームウェアがロードされたことを示すカーネルメッセージを確認してください:\n\n```\n# dmesg | grep firmware\n```\n\n```\n[   7.148259] iwlwifi 0000:02:00.0: loaded firmware version 39.30.4.1 build 35138 op_mode iwldvm\n```\n\n関連する出力がない場合、先ほど特定したモジュール (この例では iwlwifi) の完全な出力メッセージを確認して、関連するメッセージやさらなる問題を見つけてください:\n\n```\n# dmesg | grep iwlwifi\n```\n\n```\n[   12.342694] iwlwifi 0000:02:00.0: irq 44 for MSI/MSI-X\n[   12.353466] iwlwifi 0000:02:00.0: loaded firmware version 39.31.5.1 build 35138 op_mode iwldvm\n[   12.430317] iwlwifi 0000:02:00.0: CONFIG_IWLWIFI_DEBUG disabled\n...\n[   12.430341] iwlwifi 0000:02:00.0: Detected Intel(R) Corporation WiFi Link 5100 AGN, REV=0x6B\n```\n\nカーネルモジュールのロードに成功し、インターフェイスが up 状態になっている場合、次のセクションはスキップすることができます。\n\n"
    },
    {
      "title": "ドライバー・ファームウェアをインストールする",
      "level": 3,
      "content": "以下のリストを確認し、あなたのカードがサポートされているか確認してください:\n\n- 既存の Linux ワイヤレスドライバーの表を参照し、サポートされているデバイスのリストを含む特定のドライバーのページにアクセスしてください。List of Wi-Fi Device IDs in Linux もあります。\n- Ubuntu Wiki には、ワイヤレスカードと、そのカードが Linux カーネルかユーザ空間のドライバによってサポートされているかどうかの良質な一覧が (ドライバ名も含めて) あります。\n- Linux Wireless Support と Linux Questions の Hardware Compatibility List (HCL) にも、カーネルフレンドリーなハードウェアの良質なデータベースがあります。\n\n注意点として、一部のベンダーは、異なるチップセットを含む製品を出荷しています (その製品の識別子が同じであるとしてもです)。(USB デバイスの場合) usb-id や (PCI デバイスの場合) pci-id のみが信頼できます。\n\nあなたのワイヤレスカードが上記のリストにあった場合、このページの #ドライバとファームウェアのトラブルシューティング サブセクションを見て下さい、特定のワイヤレスカードのドライバーやファームウェアのインストール情報が載っています。その後、またドライバーの状態を確認してください。\n\nワイヤレスハードウェアが上記のリストになかった場合、おそらくサポートしているのが Windows のみだと思われます (一部の Broadcom、3com など)。その場合、ndiswrapper を使用してみてください。\n\n"
    },
    {
      "title": "ユーティリティ",
      "level": 2,
      "content": "他のネットワークインターフェイスと同じように、ワイヤレスインターフェイスも iproute2 パッケージの ip でコントロールします。\n\nワイヤレス接続は、ワイヤレス認証に wpa_supplicant や iwd を使用するネットワークマネージャを使うか、wpa_supplicant や iwd を直接使うことによって、管理することができます。より低レベルな設定を行いたい場合や、レガシーなドライバやレガシーな認証方式を使用している場合には、iw や非推奨の wireless_tools を使用できます。\n\n"
    },
    {
      "title": "iw と wireless_tools の比較",
      "level": 3,
      "content": "Table content:\nソフトウェア | パッケージ | WEXT2 | nl80211 | WEP | WPA/WPA2/WPA3 | Archiso\niw | iw | No | Yes | Yes | No | Yes\nwireless_tools1 | wireless_tools | Yes | No | Yes | No | Yes\n\n1. 非推奨\n1. 一部の古いドライバは WEXT しかサポートしていないことに注意してください。\n\n以下の表は iw と wireless_tools の比較可能なコマンドの概要です。さらなる例は Replacing iwconfig with iw を見てください。\n\nTable content:\niw コマンド | wireless_tools コマンド | 説明\niw dev wlan0 link | iwconfig wlan0 | リンクの状態を取得。\niw dev wlan0 scan | iwlist wlan0 scan | 利用可能なアクセスポイントをスキャン。\niw dev wlan0 set type ibss | iwconfig wlan0 mode ad-hoc | 動作モードを ad-hoc に設定。\niw dev wlan0 connect your_essid | iwconfig wlan0 essid your_essid | 接続してネットワークを開く。\niw dev wlan0 connect your_essid 2432 | iwconfig wlan0 essid your_essid freq 2432M | 接続して指定したチャンネルのネットワークを開く。\niw dev wlan0 connect your_essid key 0:your_key | iwconfig wlan0 essid your_essid key your_key | 16進数のキーを使って WEP で暗号化されたネットワークに接続。\niwconfig wlan0 essid your_essid key s:your_key | ASCII 文字のキーを使って WEP で暗号化されたネットワークに接続。\niw dev wlan0 set power_save on | iwconfig wlan0 power on | 省電力機能を有効にする。\n\n"
    },
    {
      "title": "iw",
      "level": 2,
      "content": "- ほとんどのコマンドは root 権限で実行する必要があることに注意してください。通常ユーザーで実行すると、コマンドによっては (例: iwlist) エラーを出さずに終了して正しい出力をしないため、混乱をきたすおそれが有ります。\n- ハードウェアや暗号化方式によっては、手順のいくつかは必要ありません。カードによってはアクセスポイントに関連付けをして IP アドレスを取得する前に、インターフェースの有効化やアクセスポイントのスキャニングが必要なことがあります。実験が必要かもしれません。例えば、WPA/WPA2 ユーザーは #関連付け の手順から直接ワイヤレスネットワークを有効化できます。\n\nこのセクションに出てくる例ではあなたのワイヤレスデバイスを interface、Wi-Fi のアクセスポイントを your_essid と仮定しています。それぞれ適切な文字列に置き換えて下さい。\n\n"
    },
    {
      "title": "インターフェイス名の取得",
      "level": 3,
      "content": "ワイヤレスインターフェイスの名前を取得するには:\n\n```\n$ iw dev\n```\n\nインターフェイス名は \"Interface\" という単語のあとに出力されます。例えば、インターフェイス名は wlan0 が一般的です。\n\n"
    },
    {
      "title": "インターフェイスの状態の取得",
      "level": 3,
      "content": "リンクの状態を確認するには、次のコマンドを使ってください。\n\n```\n$ iw dev interface link\n```\n\n次のコマンドで tx/rx バイトの総量やシグナルの強さといった統計値をを取得することができます:\n\n```\n$ iw dev interface station dump\n```\n\n"
    },
    {
      "title": "インターフェイスの有効化",
      "level": 3,
      "content": "カードによっては iw や wireless_tools を使う前にカーネルインターフェースをアクティブ化する必要があります:\n\n```\n# ip link set interface up\n```\n\nインターフェイスが立ち上がっているか確認するには、次のコマンドの出力を見て下さい:\n\n```\n$ ip link show interface\n```\n\n```\n3: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state DOWN mode DORMANT group default qlen 1000\n    link/ether 12:34:56:78:9a:bc brd ff:ff:ff:ff:ff:ff\n```\n\n<BROADCAST,MULTICAST,UP,LOWER_UP> にある UP がインターフェイスが立ち上がっていることを示しています。後ろにある state DOWN は関係ありません。\n\n"
    },
    {
      "title": "アクセスポイント検索",
      "level": 3,
      "content": "利用できるアクセスポイントを見るには:\n\n```\n# iw dev interface scan | less\n```\n\nチェックするべきポイント:\n\n- SSID: ネットワークの名前。\n- Signal: は dBm 単位でワイヤレスの信号強度を報告します(例: -100 から 0)。負の数が 0 に近づくほど、信号の品質が良いことを表します。良質なリンクや低品質なリンクで報告された強度を観察することで、それぞれの範囲を知ることができます。\n- Security: 直接は報告されません、capability から始まる行を見て下さい。capability: ESS Privacy ShortSlotTime (0x0411) のように Privacy が含まれている場合、そのネットワークは保護されています。 RSN 情報ブロックがある場合、そのネットワークは Robust Security Network プロトコル、別名 WPA2 によって保護されています。 WPA 情報ブロックがある場合、そのネットワークは Wi-Fi Protected Access プロトコルによって保護されています。 RSN や WPA ブロックには以下の情報が含まれていることがあります: Group cipher: 値は TKIP, CCMP, その両方, もしくはその他。 Pairwise ciphers: 値は TKIP, CCMP その両方, もしくはその他。Group cipher と同じ値である必要はありません。 Authentication Suites: 値は PSK, 802.1x, もしくはその他。家庭用ルーターでは、一般的に PSK になるでしょう (つまりパスフレーズ)。大学などでは、ログインとパスワードが必要な 802.1x スイートになると思われます。利用するためにはどのキーマネージメント (例: EAP) とカプセル化 (例: PEAP) が使われているか知る必要があります。詳しくは Wikipedia:Authentication protocol と関連記事を見て下さい。 Privacy があるのに RSN や WPA ブロックがない場合、WEP が使われています。\n\n- RSN 情報ブロックがある場合、そのネットワークは Robust Security Network プロトコル、別名 WPA2 によって保護されています。\n- WPA 情報ブロックがある場合、そのネットワークは Wi-Fi Protected Access プロトコルによって保護されています。\n- RSN や WPA ブロックには以下の情報が含まれていることがあります: Group cipher: 値は TKIP, CCMP, その両方, もしくはその他。 Pairwise ciphers: 値は TKIP, CCMP その両方, もしくはその他。Group cipher と同じ値である必要はありません。 Authentication Suites: 値は PSK, 802.1x, もしくはその他。家庭用ルーターでは、一般的に PSK になるでしょう (つまりパスフレーズ)。大学などでは、ログインとパスワードが必要な 802.1x スイートになると思われます。利用するためにはどのキーマネージメント (例: EAP) とカプセル化 (例: PEAP) が使われているか知る必要があります。詳しくは Wikipedia:Authentication protocol と関連記事を見て下さい。\n- Privacy があるのに RSN や WPA ブロックがない場合、WEP が使われています。\n\n- Group cipher: 値は TKIP, CCMP, その両方, もしくはその他。\n- Pairwise ciphers: 値は TKIP, CCMP その両方, もしくはその他。Group cipher と同じ値である必要はありません。\n- Authentication Suites: 値は PSK, 802.1x, もしくはその他。家庭用ルーターでは、一般的に PSK になるでしょう (つまりパスフレーズ)。大学などでは、ログインとパスワードが必要な 802.1x スイートになると思われます。利用するためにはどのキーマネージメント (例: EAP) とカプセル化 (例: PEAP) が使われているか知る必要があります。詳しくは Wikipedia:Authentication protocol と関連記事を見て下さい。\n\n"
    },
    {
      "title": "動作モードの設定",
      "level": 3,
      "content": "ワイヤレスカードの正しい動作モードを設定する必要があるかもしれません。具体的に言うと、アドホックネットワークに接続したい場合、動作モードを ibss に設定する必要があります:\n\n```\n# iw dev interface set type ibss\n```\n\n```\nYou need to run a management daemon, e.g. hostapd,\nsee https://wireless.wiki.kernel.org/en/users/documentation/hostapd\nfor more information on how to do that.\n```\n\nこれは、動作モードを __ap に変更することによりバイパス可能です (iw interface set type __ap)。[1]\n\n"
    },
    {
      "title": "アクセスポイントへの接続",
      "level": 3,
      "content": "暗号化方式によっては、使用するワイヤレスデバイスをアクセスポイントと関連付けて、暗号化キーを渡す必要があります:\n\n- 暗号化なし # iw dev interface connect \"your_essid\"\n- WEP 16進数、または ASCII キーを使用する(WEP のキーは固定長なので、キーの形式は自動的に判別されます): # iw dev interface connect \"your_essid\" key 0:your_key 16進数、または ASCII キーを使用し、3番目に設定したキーをデフォルトとして指定する(キーは 0 からカウントされます。4 つまで可能です): # iw dev interface connect \"your_essid\" key d:2:your_key\n- その他 iw は WEP のみを扱えます。他の暗号化スキームを使用して接続する場合、下記の #認証 を見てください。\n\n```\n# iw dev interface connect \"your_essid\"\n```\n\n- 16進数、または ASCII キーを使用する(WEP のキーは固定長なので、キーの形式は自動的に判別されます): # iw dev interface connect \"your_essid\" key 0:your_key\n- 16進数、または ASCII キーを使用し、3番目に設定したキーをデフォルトとして指定する(キーは 0 からカウントされます。4 つまで可能です): # iw dev interface connect \"your_essid\" key d:2:your_key\n\n```\n# iw dev interface connect \"your_essid\" key 0:your_key\n```\n\n```\n# iw dev interface connect \"your_essid\" key d:2:your_key\n```\n\n- iw は WEP のみを扱えます。他の暗号化スキームを使用して接続する場合、下記の #認証 を見てください。\n\nどの方法を使用しても、正しく関連付けできたかどうかは以下で確認できます:\n\n```\n# iw dev interface link\n```\n\n"
    },
    {
      "title": "認証",
      "level": 2,
      "content": "Linux で Wi-Fi 認証を行う方法としては主に wpa_supplicant と iwd があります。\n\n"
    },
    {
      "title": "WPA2 Personal",
      "level": 3,
      "content": "WPA2 Personal(別名: WPA2-PSK)は Wi-Fi Protected Access のモードの1つです。\n\nwpa_supplicant や iwd を用いて WPA2 Personal ネットワークに認証したり、ネットワークマネージャを用いて接続したりできます。ネットワークに認証しただけの場合、接続はまだ完全には機能せず、手動またはDHCPクライアントを用いて IP アドレスとルートを割り当てる必要があります。\n\n"
    },
    {
      "title": "WPA2 Enterprise",
      "level": 3,
      "content": "WPA2 Enterprise は Wi-Fi Protected Access のモードの1つです。WPA2 Personal よりも優れたセキュリティとキー管理を提供し、VLAN や NAP といった他のエンタープライズタイプの機能を提供します。しかし、ユーザの認証を処理するために RADIUS サーバと呼ばれる外部の認証サーバを必要とします。これは、ワイヤレスルータとアクセスポイント(AP)の他に何も必要とせず、すべてのユーザに対して1つのパスフレーズかパスワードを使用する Personal モードとは対照的です。\n\nEnterprise モードでは、ユーザはユーザ名とパスワード、もしくはデジタル証明書、もしくはその両方を用いて Wi-Fi ネットワークにログインできます。それぞれのユーザは動的でユニークな暗号鍵を持っているため、ワイヤレスネットワーク上のユーザからユーザへの盗聴防止や暗号強度の向上に役立ちます。\n\nこのセクションでは、WPA2 Enterprise モードを用いてワイヤレスアクセスポイントに接続するためのネットワーククライアントの設定について説明します。アクセスポイントそのもののセットアップに関する情報は ソフトウェアアクセスポイント#RADIUS を見てください。\n\nプロトコル間の比較はこの表を見てください。\n\n"
    },
    {
      "title": "MS-CHAPv2",
      "level": 4,
      "content": "PEAP の MSCHAPv2 type-2 認証を要求する WPA2-Enterprise ワイヤレスネットワークは時々、ppp パッケージに加えて pptpclient パッケージを必要とします。しかし、netctl は ppp-mppe 無しでも動作するようです。いずれの場合でも、MSCHAPv2 は非常に脆弱であるため、使用は推奨されません。しかし、他の手段は通常選択肢になりません。\n\n"
    },
    {
      "title": "eduroam",
      "level": 4,
      "content": "eduroam は研究、高等教育、継続教育のユーザー向けの、WPA2 Enterprise ベースの国際ローミングサービスです。\n\n- このセクションにある如何なるプロファイルを適用する前に始めに機関の接続の詳細を確認してください。プロファイル例は機能することもセキュリティ要件を満たすことも保証されません。\n- 接続プロファイルを暗号化せずに保存する場合、root として chmod 600 profile を実行して、ファイルへの読み込みアクセスを root アカウントに制限することを推奨します。\n- NetworkManager で認証が失敗し続ける場合、TLS 1.0 に対しては phase1-auth-flags=32 を、TLS 1.1 に対しては phase1-auth-flags=64 を設定してみてください。これは [2] と NetworkManager#OpenSSL の \"unsupported protocol\" エラーで WPA Enterprise の接続の認証に失敗する で説明されています。\n\n"
    },
    {
      "title": "手動/自動 セットアップ",
      "level": 4,
      "content": "- wpa_supplicant は、設定ファイルを直接編集するか CLI/GUI フロントエンドを使用することで設定できます。また、DHCP クライアントと組み合わせて使うことができます。接続の詳細を設定するには /usr/share/doc/wpa_supplicant/wpa_supplicant.conf の例を見てください。\n- iwd#WPA Enterprise\n- NetworkManager は、nmcli や nmtui、グラフィカルなフロントエンドを使用して WPA2 Enterprise プロファイルを作成できます。\n- ConnMan は、ネットワークに接続する前に、別の設定ファイルを必要とします。詳細は connman-service.config(5) と ConnMan#eduroam に接続 を見てください。\n- netctl は、WPAConfigSection= に含まれるブロックを通して wpa_supplicant の設定をサポートします。詳細は netctl.profile(5) を見てください。\n\n"
    },
    {
      "title": "WPA3 Personal",
      "level": 3,
      "content": "WPA3 Personal (別名 WPA3-SAE) は、Wi-Fi Protected Access のモードの1つです。\n\nwpa_supplicant と iwd の両方が WPA3 Personal をサポートしています。\n\n"
    },
    {
      "title": "WPA3 Enterprise",
      "level": 3,
      "content": "WPA3 Enterprise は Wi-Fi Protected Access のモードの1つです。\n\nwpa_supplicant (バージョン 2:2.10-8 以降) は、WPA3 Enterprise をサポートしています。FS#65314 を参照してください。\n\n"
    },
    {
      "title": "規制範囲に従う",
      "level": 3,
      "content": "規制範囲(regdomain) は、ワイヤレスハードウェアの動作が FCC や ETSI、他の組織により定められた地域の法律に準拠するようにワイヤレスドライバを設定する際に用いられます。規制範囲では ISO 3166-1 alpha-2 国名コードを使用します。例えば、米国は \"US\"、中国は \"CN\"、日本は \"JP\" となります。\n\n規制範囲は、どのワイヤレスチャネルが利用できるかに関与します。2.4GHz 帯で許可されているチャネルは、米国では 1~11、日本では 1~14、他の殆どの国では 1~13 です。5Ghz 帯では、許可されるチャネルの規則は非常に複雑です。どちらの場合でも、より詳細な情報はこの WLAN チャネルのリストを見てください。\n\n規制範囲はまた、ワイヤレスデバイスから放射される電波の実効輻射電力(EIRP)の制限にも関与します。これは送信パワー(Tx Power)から算出され、dBm/mBm (1dBm=100mBm) または mW (対数スケール)により測られます。2.4Ghz 帯では、米国とカナダでは最大が 30dBm、ヨーロッパのほとんどの地域では 20dBm、その他の地域では 20dBm~30dBm です。通常、5Ghz 帯では、最大値はより低く規定されます。より詳細な情報は wireless-regdb を見てください(EIRP の dBm 値はそれぞれの行の2番めのカッコの中にあります)。\n\n規制範囲の設定を誤ると便利である場合があります(例えば、チャネルが混雑している時に未使用のチャネルを利用できたり、送信パワーを増やして送信範囲を広げたり)。しかし、地域の法律に違反したり、他の無線機器と干渉する可能性があるので、推奨されません。\n\nwireless-regdb がインストールされていれば、カーネルは規制範囲のデータベースを直接読み込みます。直接読み込むため、セキュリティ上の理由により、カーネルは CONFIG_CFG80211_USE_KERNEL_REGDB_KEYS を yes に設定して、データベースの暗号検証を有効化してあるべきです。これは Arch のカーネルには有効化されていますが、他のカーネルを使用していたり自分でコンパイルしている場合、これを確認するべきです。さらなる情報はこのガイド[リンク切れ 2024-07-30]で見られます。\n\nregdomain を設定するには、wireless-regdb をインストールし、再起動してください。そして、/etc/conf.d/wireless-regdom を編集し、適切なドメインをアンコメントしてください。\n\n現在の規制範囲を一時的に日本に設定するには:\n\n```\n# iw reg set JP\n```\n\n情報を見るには:\n\n```\n$ iw reg get\n```\n\nしかし、規制範囲を設定しても設定が変わらない場合があります。一部のデバイスは、デバイスの制限を規定する firmware/EEPROM で規制範囲が設定されています。これは、ソフトウェアでは制限を増やすことしかできず、制限を減らすことができないことを意味します。例えば、中国のデバイスはソフトウェアで米国の規制範囲に設定できるでしょうが、中国では EIRP の最大値が 20dBm と規定されているので、デバイスは米国の最大 EIRP である 30dBm で送信を行うことはできません。\n\n例えば、Atheros デバイスのファームウェアで規制範囲が設定されているかどうか確認するには:\n\n```\n# dmesg | grep ath:\n```\n\n他のチップセットの場合、\"EEPROM\" や \"regdomain\"、デバイスドライバの名前で検索すると良いかもしれません。\n\n規制範囲が正しく変更されたかどうかを確認し、利用可能なチャネル数や許可されている送信パワーを確認するには:\n\n```\n$ iw list | grep -A 15 Frequencies:\n```\n\nwpa_supplicant でも、/etc/wpa_supplicant/wpa_supplicant.conf の country= 行で規制範囲を設定できます。\n\ncfg80211 カーネルモジュールでもモジュールオプションを追加することで特定の規制範囲を使用するように設定できます(例: options cfg80211 ieee80211_regdom=JP)。このモジュールオプションは 古い規制範囲の実装から継承されたもので、最近のカーネルでは iw や wpa_supplicant のようなユーティリティから nl80211 を通して来たようなユーザスペースの規制ヒントとして振る舞います。\n\n"
    },
    {
      "title": "Rfkill の注意点",
      "level": 3,
      "content": "多くのノート PC にはワイヤレスカードの電源を切るハードウェアボタン/スイッチがあります。しかし、カードがカーネルによってブロックされている場合があります。これは rfkill(8) によって操作できます。現在の状態を確認するには以下のコマンドを使用してください:\n\n```\n$ rfkill\n```\n\n```\nID TYPE      DEVICE      SOFT      HARD\n 0 bluetooth hci0   unblocked unblocked\n 1 wlan      phy0   unblocked unblocked\n```\n\nカードが hard-blocked である場合、ハードウェアボタン/スイッチを使ってカードをアンロックできます。カードが hard-blocked でなく、soft-blocked である場合、以下のコマンドを使用してください:\n\n```\n# rfkill unblock wlan\n```\n\nワイヤレスカードを切り替えるハードウェアボタンはベンダー固有のカーネルモジュールによって操作されます。これらは WMI モジュールであることが多いです。非常に新しいハードウェアモデルでは特に、最新の安定版カーネルでモデルが完全にサポートされていないことがあります。この場合、カーネルのバグトラッカーで情報を探し、まだ報告されていない場合は各ベンダーのカーネルモジュールのメンテナにモデルを報告することが役に立ちます。\n\n[3] も参照してください。\n\n"
    },
    {
      "title": "省電力",
      "level": 3,
      "content": "電源管理#ネットワークインターフェイス を見てください。\n\n"
    },
    {
      "title": "トラブルシューティング",
      "level": 2,
      "content": "このセクションには、ドライバやファームウェアに強く関連しない問題のトラブルシューティングの一般的なヒントを含んでいます。ドライバやファームウェアに関するトピックは次のセクション #ドライバとファームウェアのトラブルシューティング を見てください。\n\n"
    },
    {
      "title": "一時的にネットワークにアクセス",
      "level": 3,
      "content": "ハードウェアに問題があるときに、インターネットに接続してソフトウェアをダウンロードしたりフォーラムでヘルプを得たい場合、Android に内蔵されている機能を使って USB ケーブルでインターネット共有をすることができます。詳しくは Android テザリング#USB テザリングを見て下さい。\n\n"
    },
    {
      "title": "ログの取得",
      "level": 3,
      "content": "トラブルシューティングで一番初めにするべきなのはシステムのログファイルを解析することです。全部を手でパースしないために、新しいターミナル（コンソール）を開いて、接続を試行している間のカーネルメッセージを次のコマンドで見ると良いでしょう:\n\n```\n$ dmesg -w\n```\n\nネットワーク管理にツールを使っている場合、systemd でも同じことができます:\n\n```\n# journalctl -f\n```\n\n特定の理由コードによる認証解除を伴うワイヤレスエラーがよく起こります。例えば:\n\n```\nwlan0: deauthenticating from XX:XX:XX:XX:XX:XX by local choice (reason=3)\n```\n\n理由コードを見ることでヒントを得られるかもしれません。コントロールメッセージの flowchart を見ることも役に立つかもしれません。ジャーナルのメッセージはこれに従って出力されます。\n\nこの記事にあるそれぞれのツールは詳細なデバッグ出力をするオプションを用意しているので、必要ならば、解析の第二段階としてそれを使うことができます。\n\n"
    },
    {
      "title": "IP アドレスの取得に失敗する",
      "level": 3,
      "content": "Table content:\nこの記事またはセクションは情報が古くなっています。 理由: iwconfig は非推奨となりました。#iw と wireless_tools の比較 を参照してください。(en:talk:Network_configuration/Wireless#wireless_tools) (Discuss)\n\n- 有線インターフェイスでは IP アドレスを取得できるのに、無線インターフェイスではできない場合、ワイヤレスカードの省電力機能を無効にしてみてください(on ではなく off を指定してください)。\n\n- waiting for carrier の問題でタイムアウトエラーになる場合、特定のデバイスのチャンネルモードを auto に設定する必要があるかもしれません:\n\n```\n# iwconfig wlan0 channel auto\n```\n\nチャンネルを auto に変える前に、あなたのワイヤレスインターフェースが止まっていることを確認してください。変更が成功したら、インターフェースを立ち上げなおして次の手順に進んで下さい。\n\n"
    },
    {
      "title": "IP アドレスは取得できるのにホスト解決ができない",
      "level": 3,
      "content": "Captive Portal が存在する可能性のある公共の無線ネットワークを使っている場合、Web ブラウザから(HTTPS ではなく)HTTP ページをクエリしていることを確認してください。一部の captive portal は HTTP のみをリダイレクトするためです。 これが原因ではない場合、ドメイン名を解決できることを確認してください。DHCP を通して広告した DNS サーバを使用することが必須である場合があります。\n\n"
    },
    {
      "title": "RTS や fragmentation のしきい値を設定する",
      "level": 3,
      "content": "無線ハードウェアはデフォルトでは RTS と fragmentation を無効化しています。帯域幅を犠牲にスループットを高める方法は2つ存在します。近隣にアクセスポイントが多く存在する環境で、干渉によってタイムアウトが発生したり接続が途切れる場合、設定によって改善する可能性があります。\n\nパケットの断片化は fragmentation の閾値を越えたパケットを分割してスループットを改善します。最大値 (2346) にするとパケットが超過することはなくなるため断片化を無効化にするのと同義です。最低値 (256) にするとスループットは最大になりますが、かなり帯域幅を消費します。設定するには:\n\n```\n# iw phy0 set frag 512\n```\n\nRTS は RTS の閾値を越えるパケットを送信する前にアクセスポイントとハンドシェイクを実行することでスループットを改善します。最大値 (2347) にするとパケットが超過しなくなり RTS を無効化するのと同じになります。最低値 (0) では全てのパケットで RTS が有効になりますが、大抵の場合は無駄になります。\n\n```\n# iw phy0 set rts 500\n```\n\n"
    },
    {
      "title": "原因 #1",
      "level": 4,
      "content": "Journal に wlan0: deauthenticating from MAC by local choice (reason=3) と表示され Wi-Fi 接続が失われる場合は、おそらく Wi-Fi カードの省電力機能がアグレッシブすぎるのが原因です。無線カードの省電力機能を無効化してみてください(on ではなく off を指定してください)。\n\nあなたのカードが iwconfig wlan0 power off をサポートしていない場合は、BIOS の電源管理のオプションを確認してください。Lenovo W520 では BIOS にある PCI-Express の電源管理を無効化すると問題が解決します。\n\n"
    },
    {
      "title": "原因 #2",
      "level": 4,
      "content": "頻繁に切断が発生し、Journal で以下のようなメッセージが表示される場合:\n\nieee80211 phy0: wlan0: No probe response from AP xx:xx:xx:xx:xx:xx after 500ms, disconnecting\n\nルーターの設定でチャンネルの帯域を 20MHz に変更してみてください。\n\n"
    },
    {
      "title": "原因 #3",
      "level": 4,
      "content": "ノートパソコン (例: Thinkpad X200 シリーズ) に rfkill のハードウェアスイッチが付いている場合、スイッチの経年劣化や設計不良により、スイッチ (またはメインボードへの接続) がゆるくなってしまっている可能性があります。結果として、スイッチに触れたり、ノートパソコンをちょっと動かすだけで、ハードウェアによる無線のブロックが発生して、インターネットから切断されているのかもしれません。このような問題に対するソフトウェアによる解決方法は存在しません。電気仕掛けのスイッチなら、BIOS にスイッチを無効化するオプションが存在することがあります。機械式のスイッチの場合 (ほとんどのスイッチはそうです)、スイッチを壊してしまうというのが解決法になります: メインボードや Wi-Fi カードとの接触点をハンダ付けする、スイッチを糊で固める、塞ぐ、またはスクリューナットを使ってスイッチを固く締める、取り除いてしまう。\n\n"
    },
    {
      "title": "原因 #4",
      "level": 4,
      "content": "頻繁に切断したり接続が成功しない他の原因として、ルーターが仕様に合わない挙動をする、ルーターの設定が誤っている、他の無線デバイスによる干渉、などが考えられます。\n\nトラブルシューティングするには、まず認証なしでルーターにより近くで接続できないか試して下さい。それができない場合、ルーターを再起動し、他のデバイスからでも試してみてください。\n\nそれで動作する場合、WPA/WPA2 を再度有効にして、ルーターの設定を変更してみてください。例えば:\n\n- ルーターが（クライアントで使っている）無線デバイスと比べて相当に旧式である場合、ルーターを別のワイヤレスモードに設定して動作するかテストする\n- mixed-mode 認証を無効化 (例: WPA2 と AES、またはルーターが古い場合 TKIP)\n- \"auto\" チャンネル以外の固定/自由チャンネルを使ってみる (隣家のルーターが古くて干渉している可能性があります)\n- WPS を無効化\n- ルータの 5Ghz チャネルから non-DFS (Dynamic Frequency Selection) チャネル に変更する。そのようなチャネルでは、近くの気象レーダとの干渉により接続が落ちたり、いきなり切り替わったりする場合があります。\n- クライアントに 5Ghz と 2.4Ghz のどちらが良いかを選ばせるのではなく 2.4Ghz のみに設定してみる。(後者はスループットが低いですが、遠距離からの接続でも安定した接続を得られます)\n- cfg80211.cfg80211_disable_40mhz_24ghz=1 を指定して 40Mhz 周波数帯を無効化 (スループットは悪くなりますが衝突は起きにくくなります)\n- ルーターにサービス品質に関する設定がある場合、設定が完全であることを確認 (例: Wi-Fi Multimedia (WMM) は任意の QoS フロー制御の一部です。問題のあるルーターファームウェアは設定が有効になっていない場合も有効であるかのように見せかけてくることがあります)\n\n"
    },
    {
      "title": "原因 #5",
      "level": 4,
      "content": "一部のワイヤレスアダプタ(例: Qualcomm Atheros AR9485)では、DMA エラーによりランダムな接続断が起こる可能性があります:\n\n```\n# journalctl -xb\n```\n\n```\nath: phy0: DMA failed to stop in 10 ms AR_CR=0x00000024 AR_DIAG_SW=0x02000020 DMADBG_7=0x0000a400\nwlp1s0: authenticate with 56:e7:ee:7b:55:bc\nwlp1s0: send auth to 56:e7:ee:7b:55:bc (try 1/3)\nwlp1s0: send auth to 56:e7:ee:7b:55:bc (try 2/3)\nwlp1s0: send auth to 56:e7:ee:7b:55:bc (try 3/3)\nwlp1s0: authentication with 56:e7:ee:7b:55:bc timed out\n```\n\n可能な回避策は Intel IOMMU driver (DMA) を無効化することです。カーネルパラメータに intel_iommu=off を追加してください[4]。\n\n"
    },
    {
      "title": "原因 #6",
      "level": 4,
      "content": "ワイヤレス接続のための iwlwifi と iwlmvm のあるデバイスを使用していて、Wi-Fi カードがバッテリー駆動時に消えたように見える場合、iwlmvm で省電力設定を変更することでこれを修正できます。\n\n/etc/modprobe.d/iwlmvm.conf ファイルが存在しなければ作成し、以下の行を追加してください:\n\n```\n/etc/modprobe.d/iwlmvm.conf\n```\n\n```\noptions iwlmvm power_scheme=1\n```\n\npower_scheme の 1 という数値は iwlmvm が \"常に有効\" になります。利用可能なオプションは以下のとおりです:\n\nTable content:\n値 | 説明\n1 | 常に有効\n2 | バランス\n3 | 低パワー\n\nこの修正法は [5] で発見されました。\n\n"
    },
    {
      "title": "原因 #7",
      "level": 4,
      "content": "デバイスが長時間使用されなかった場合(例: ファイルサーバ)、省電力機能により接続断が発生する場合があります。これにより、受信トラフィックがブロックされ、接続が妨げられます。\"interface\" の省電力機能を無効化してみてください:\n\n```\n# iw dev interface set power_save off\n```\n\nudev ルールを作成してこれを起動時に行うこともできます。電源管理#ネットワークインターフェイス を見てください。\n\n"
    },
    {
      "title": "原因 #8",
      "level": 4,
      "content": "メッシュネットワーク (Wi-Fi 6 など) に接続している時に接続が時々途切れ、以下のようなメッセージが出力される場合:\n\n```\n# journalctl -b\n```\n\n```\nkernel: wlan0: disconnect from AP aa:bb:cc:dd:ee:ff for new auth to 11:22:33:44:55:66\n```\n\nローミングの問題が発生しています。接続の方法と実際の問題に応じて、以下のことができます:\n\n- ローミングが望ましくない場合、NetworkManager で BSSID (上記の aa:bb:cc:dd:ee:ff) をロックする (NetworkManager#定期的なネットワーク接続断、遅延、パケットロス (Wi-Fi) を参照)。\n- Wpa_supplicant#ローミング で bgscan の設定を調整する。\n\n"
    },
    {
      "title": "規制範囲が間違っているために Wi-Fi ネットワークが認識されない",
      "level": 3,
      "content": "コンピュータの Wi-Fi チャンネルがユーザーの居住国の規制範囲に一致していない場合、Wi-Fi ネットワークが認識されないことがあります。#規制範囲に従うを参照して設定を行ってください。\n\n"
    },
    {
      "title": "ドライバとファームウェアのトラブルシューティング",
      "level": 2,
      "content": "このセクションでは、一般的な方法とは異なる、特定のチップセットのカーネルモジュールとファームウェアをインストールする方法を説明します。\n\nモジュールの動作についての一般的な情報はカーネルモジュールを見て下さい。\n\n"
    },
    {
      "title": "rt2x00",
      "level": 4,
      "content": "Ralink のチップセット用の統合ドライバー (rt2500, rt61, rt73 などを置き換えます)。このドライバーは Linux カーネル 2.6.24 から含まれており、チップに合わせて適切なモジュールをロードするだけで問題なく使うことができます: rt2400pci, rt2500pci, rt2500usb, rt61pci, rt73usb は rt2x00 モジュールもそれぞれ自動でロードします。\n\nこのモジュールでサポートされているデバイスの一覧はプロジェクトの ホームページ で見ることができます。\n\n- カーネル 3.0 から、rt2x00 は次のドライバーを含んでいます: rt2800pci, rt2870usb。\n- カーネル 3.0 から、staging ドライバー rt2860sta と rt2870sta は mainline ドライバー rt2800pci と rt2800usb によって置き換えられました[6]。\n- デバイスによっては iwpriv を使って様々なオプションを設定することができます。これらのオプションについては Ralink から入手できる source tarballs にまとめられています。\n\n"
    },
    {
      "title": "rt3090",
      "level": 4,
      "content": "rt3090 を使っているデバイスには rt2800pci ドライバを使うことができますが、うまく動作しないことがあります (例えば、時々 2Mb/s 以上の速度が出なくなります)。\n\n"
    },
    {
      "title": "rt3290",
      "level": 4,
      "content": "rt3290 チップセットはカーネルの rt2800pci モジュールによって認識されます。ただし、問題が起こることもあり、そのような場合はパッチがあてられた Ralink ドライバーに戻すと良いようです。\n\n"
    },
    {
      "title": "rt3573",
      "level": 4,
      "content": "2012年時点で新しいチップセットです。Ralink が提供している新しいプロプライエタリドライバが必要かもしれません。様々な製造会社がそれを使っています、Belkin N750 DB wireless 無線 USB アダプタのスレッドを見て下さい。\n\n"
    },
    {
      "title": "mt7612u",
      "level": 4,
      "content": "2014 年以降の新しい商号 Mediatek でリリースされている最新のチップセットです。AC1200 または AC1300 チップセットになります。サポートページで Linux 用のドライバーがメーカーから公開されています。カーネル 5.5 より、同梱されている mt76 ドライバによりサポートされているはずです。\n\nDFS チャネルは現在 5 GHz AP モードではサポートされていません。\n\n"
    },
    {
      "title": "mt7921",
      "level": 4,
      "content": "この MediaTek チップセットには高レイテンシの問題があります。唯一の解決策は ASPM を無効化することです:\n\n```\n/etc/modprobe.d/wifi.conf\n```\n\n```\noptions mt7921e disable_aspm=1\n```\n\n再起動するか、modprobe でモジュールを再読込すると、この設定ファイルの変更が適用されます:\n\n```\n# modprobe -r mt7921e && modprobe mt7921e\n```\n\n"
    },
    {
      "title": "Realtek",
      "level": 3,
      "content": "Realtek のチップセットと仕様のリストは [7] で見られます。\n\n"
    },
    {
      "title": "rtl8192cu",
      "level": 4,
      "content": "このドライバーはカーネルに含まれていますが、多くのユーザーがネットワークのスキャンはできても接続ができないと報告しています。\n\n問題が起こる場合は 8192cu-dkmsAUR パッケージで改善するかもしれません。\n\n"
    },
    {
      "title": "rtl8723ae/rtl8723be",
      "level": 4,
      "content": "メインラインの Linux カーネルには rtl8723ae と rtl8723be モジュールが含まれています。\n\nこのカードの省電力機能についてエラーが発生することがあります。症状としては、ときどき上位のネットワークマネージャ (netctl、NetworkManager) で認識されなくなり切断されます。このエラーは dmesg -w や journalctl -f を実行して省電力機能や rtl8723ae/rtl8723be モジュールに関連するメッセージを探すことで確認できます。この問題を解決するには、fwlps=0 カーネルモジュールパラメータを使って、Wi-Fi カードが自動的にスリープ状態にならないようにしてください。\n\n信号が弱い場合、デバイスにアンテナがひとつしか接続されておらず自動モードが機能していない可能性があります。ant_sel=1 や ant_sel=2 カーネルオプションでアンテナを強制的に設定することができます [8]。\n\n"
    },
    {
      "title": "rtl88xxau",
      "level": 4,
      "content": "Realtek の rtl8811au/rtl8812au/rtl8814au/rtl8821au チップセットは AC600 から AC1900 までの様々な USB アダプタ用に設計されています。いくつかのパッケージは様々なカーネルドライバを提供しており、これらは DKMS(dkms パッケージとインストールされているカーネルのヘッダファイル) を必要とします:\n\nTable content:\nチップセット | パッケージ | ノート\nrtl8811au, rtl8812au, rtl8821au | rtl88xxau-aircrack-dkms-gitAUR | 8811au, 8812au, 8821au チップセット用の Aircrack-ng カーネルモジュール。モニタモードとインジェクションモードサポート。\nrtl8812au | rtl8812au-dkms-gitAUR | rtl8812au のみ用の公式の最新 Realtek ドライババージョン。\nrtl8811au, rtl8821au | rtl8821au-dkms-gitAUR | rtl8821au 用のより新しいドライババージョン。\nrtl8814au | rtl8814au-dkms-gitAUR | おそらく rtl8813au に対しても機能する。\n\n"
    },
    {
      "title": "rtl8811cu/rtl8821cu",
      "level": 4,
      "content": "rtl8821cu-dkms-gitAUR は Realtek 8811cu と 8821cu チップセット用のカーネルモジュールを提供します。\n\nパッケージをインストールするには DKMS が必要です。適切なカーネルヘッダーをインストールしてください。\n\n8821cu がロードされていてもワイヤレスインターフェイスが見つからない場合、おそらく rtw_RFE_type カーネルモジュールパラメータを手動で指定する必要があります[9][10]。例えば rtw_RFE_type=0x26 や他の値を試してみると、機能するかもしれません。\n\n"
    },
    {
      "title": "rtl8821ce",
      "level": 4,
      "content": "rtl8821ce-dkms-gitAUR は Realtek 8821ce チップセット用のカーネルモジュールを提供します。このチップセットは Asus X543UA に搭載されています。\n\nパッケージをインストールするには DKMS が必要です。適切なカーネルヘッダーをインストールしてください。\n\n"
    },
    {
      "title": "rtl8822bu",
      "level": 4,
      "content": "rtl88x2bu-dkms-gitAUR は Realtek 8822bu チップセット用のカーネルモジュールを提供します。このチップセットは Edimax EW7822ULC USB3、Asus AC53 Nano USB 802.11ac、TP-Link Archer T3U アダプタに搭載されています。\n\nパッケージをインストールするには DKMS が必要です。適切なカーネルヘッダーをインストールしてください。\n\n"
    },
    {
      "title": "rtl8xxxu",
      "level": 4,
      "content": "サードパーティ製のモジュールをコンパイルすることでメインラインカーネルの rtl8xxxu モジュールの問題を解決できる場合があります。ソースコードは GitHub リポジトリ に存在します。\n\n一部のドライバーは AUR の rtl8723bu-dkms-gitAUR パッケージなどでインストールできます。\n\n"
    },
    {
      "title": "RTW88",
      "level": 4,
      "content": "RWT88 カーネルモジュールは公式にサポートされている Arch Linux カーネルの全てに含まれています。サポートされているデバイスの数は時間とともに増え、現在では、必要な設定とコンパイルを行えば、ほとんどの RTW88 チップデバイスをサポートしています。\n\nLinux 6.10.3 の時点では、このドライバは次のデバイスをサポートしています: 882BE (おそらく)、8703B、8723CS、8723D、8723DE、8723DS、8723DU、8723X、8821C、8821CE、8821CS、8821CU、8822B、8822BE、8822BS、8822BU、8822C、8822CE、8822CS、8822CU.\n\nサポートされているデバイスの最新のリストを入手するには、linux の config で CONFIG_RTW88_ と検索するか、上流で wireless-next を確認してください。\n\nwireless-regdom が設定されていることを確認してください。さもないと、Wi-Fi デバイスはすべて見えますが、接続することができなくなってしまいます。Out of tree のドライバである rtl88x2bu-dkms-gitAUR は、そのような設定無しで接続できるので、このドライバから切り替える際は規制範囲を設定しておくことが重要です。\n\nこの症状は dmesg では以下のように見えます:\n\n```\n[ +13.369951] wlan0: send auth to *WiFi_AP_mac* (try 1/3)\n[  +0.000685] wlan0: authenticated\n[  +0.000449] wlan0: associate with *WiFi_AP_mac* (try 1/3)\n[  +0.000866] wlan0: RX AssocResp from *router_mac* (capab=0x1011 status=0 aid=2)\n[  +0.323058] wlan0: associated\n[  +0.000046] wlan0: deauthenticating from *WiFi_AP_mac* by local choice (Reason: 3=DEAUTH_LEAVING)\n```\n\nまた、iwd のログでは:\n\n```\nevent: state, old: autoconnect_full, new: connecting\nevent: connect-timeout, reason: 0\nevent: connect-failed, status: 1\n```\n\n"
    },
    {
      "title": "RTW89",
      "level": 4,
      "content": "RTW89 カーネルモジュールは、上流のカーネルにマージされており、新しい Realtek ワイヤレスチップセットのサポートを提供します。\n\nこのドライバは次をサポートします: 8852AE, 8851BE, 8852BE, 8852CE。\n\n一部のコンピュータで接続が不安定になることがあります。特に最近の Lenovo と HP のモデルに多いようです。 次の設定を用いて ASPM 関係の機能を無効にしてみてください。\n\n```\n/etc/modprobe.d/70-rtw89.conf\n```\n\n```\noptions rtw89_pci disable_aspm_l1=y disable_aspm_l1ss\n```\n\n参考:\n\n- https://github.com/lwfinger/rtw89#option-configuration\n- https://github.com/lwfinger/rtw89/issues/275#issuecomment-1784155449\n\n"
    },
    {
      "title": "Atheros",
      "level": 3,
      "content": "Atheros チップセットのあるデバイス用に3つのモジュールがメンテナンスされています:\n\n- ath5k は madwifi ドライバーの後継ドライバーです。現在、チップセットによってはベターな選択肢ですが、全てのチップセットがサポートされているわけではありません（下を見て下さい）。\n- ath9k は、より新しい Atheros チップセット用に作られています。802.11n 対応のチップは全てサポートしています。\n- ath12k は、Qualcomm Wi-Fi 7 (IEEE 802.11be) デバイス用の Linux ドライバです。ath12k は mac80211 を使用します。\n\nAtheros デバイス向けに他にも複数のドライバーが存在します。詳しくは Linux Wireless ドキュメントを見て下さい。\n\n"
    },
    {
      "title": "ath5k",
      "level": 4,
      "content": "外部の文献:\n\n- https://wireless.docs.kernel.org/en/latest/en/users/drivers/ath5k.html\n- Debian:ath5k\n\nウェブページのロードがランダムで極端に遅くなったり、デバイスが IP アドレスを取得できなくなったら、ath5k モジュールに nohwcrypt=1 オプションを付けてロードして暗号化をハードウェアからソフトウェアに切り替えてください。詳しくはカーネルモジュール#モジュールオプションを設定するを見て下さい。\n\nラップトップによっては無線 LED インディケータが赤と青に点滅する問題が発生することがあります。この問題を解決するには、以下を実行して下さい:\n\n```\n# echo none > /sys/class/leds/ath5k-phy0::tx/trigger\n# echo none > /sys/class/leds/ath5k-phy0::rx/trigger\n```\n\nもしくは このバグレポート を見て下さい。\n\n"
    },
    {
      "title": "ath9k",
      "level": 4,
      "content": "参照:\n\n- https://wireless.wiki.kernel.org/en/users/drivers/ath9k\n- Debian:ath9k\n\nLinux 3.15.1 現在、一部のユーザーが帯域幅が減少することを報告しています。ath9k モジュールに対して nohwcrypt=1 カーネルモジュールパラメータを設定することでこれを修正することができる場合があります。\n\nLinux Wireless には AR9280 よりも新しい Atheros 製の ath9k シングルチップでは動的な省電力機能が有効になると書かれていますが、一部のデバイス (例: AR9285) では powertop を使って確認すると省電力機能が無効になっていることがわかります。そのような場合、手動で有効にしてください。\n\nただし一部のデバイス (例: AR9285) では省電力機能を有効にすると以下のようなエラーが発生します:\n\n```\n# iw dev wlan0 set power_save on\n```\n\n```\ncommand failed: Operation not supported (-95)\n```\n\n解決策は、ath9k モジュールに対して ps_enable=1 カーネルモジュールパラメータを設定することです。\n\n"
    },
    {
      "title": "iwlegacy",
      "level": 4,
      "content": "iwlegacy は Intel の 3945, 4965 ワイヤレスチップのワイヤレスドライバーです。このファームウェアは linux-firmware パッケージに含まれています。\n\nudev が自動でドライバーをロードするはずですが、ロードされないときは手動で iwl3945 か iwl4965 をロードしてください。詳しくはカーネルモジュール#ロードを見てください。\n\n信号品質が極端に悪い場合やネットワークに接続できない場合、802.11n を無効化してみてください:\n\n```\n/etc/modprobe.d/iwl4965.conf\n```\n\n```\noptions iwl4965 11n_disable=1\n```\n\n"
    },
    {
      "title": "iwlwifi",
      "level": 4,
      "content": "iwlwifi は 5100AGN, 5300AGN, 5350AGN などの Intel の最新のワイヤレスチップのワイヤレスドライバーです。full list of supported devices を見て下さい。\n\n接続品質が悪いといった一般的なネットワーク接続の問題が起こる場合は、802.11n を無効にしてソフトウェア暗号を有効にしてみて下さい:\n\n```\n/etc/modprobe.d/iwlwifi.conf\n```\n\n```\noptions iwlwifi 11n_disable=1 swcrypto=1\n```\n\nアップリンクの速度が遅い問題が発生する場合は、無線アダプターの省電力モードを切ってみて下さい。\n\n802.11ax (Wi-Fi 6) アクセスポイントがあり、ビーコンの検出や不安定な接続に関する問題がある場合、Intel Article 54799 を見てみてください。\n\nBluetooth ヘッドセットを接続できない場合やダウンロード速度があまり出ない場合、Bluetooth の共存を無効化してみてください:\n\n```\n/etc/modprobe.d/iwlwifi.conf\n```\n\n```\noptions iwlwifi bt_coex_active=0\n```\n\nドライバがスタックトレースとエラーを出力する問題があり、これによりスタッタリングが発生する可能性があります。\n\n```\n# dmesg\n```\n\n```\nMicrocode SW error detected.  Restarting 0x2000000.\n```\n\nまたは、単に雑多な問題が発生する場合もあります (例: 5GHz での接続の問題、ランダムな接続断、復帰時に接続なし)。\n\nファームウェアが問題の原因であることを確認するには、linux-firmware パッケージをダウングレードしてみてください。\n\n確認が取れたら、バグのあるファームウェアファイルを移動して、古いバージョンが読み込まれるようにしてください (こうすることで、linux-firmware を最新の状態にできます。linux-firmware は Intel Wi-Fi カード以外のファームウェアアップデートも提供するからです。):\n\n```\n# for i in {64..73} ; do mv /usr/lib/firmware/iwlwifi-ty-a0-gf-a0-$i.ucode.xz /usr/lib/firmware/iwlwifi-ty-a0-gf-a0-$i.ucode.xz.bak ; done\n```\n\nアップデートのたびにこの手順を繰り返さないようにするために、pacman.conf 内の NoExtract 配列でワイルドカードを使って、該当するファイルのインストールをブロックしてください。\n\nWindows のセッション終了後に Wi-Fi アダプタが検出されない場合、Windows の高速スタートアップ機能が原因であるかもしれません(この機能はデフォルトで有効になっています)。高速スタートアップを無効化してみてください。iwlwifi カーネルドライバ wiki にはこれのエントリがあります。\n\n"
    },
    {
      "title": "LED の点滅を無効化する",
      "level": 4,
      "content": "デフォルト設定ではモジュールの動作中 LED が点滅するようになっています。人によってはこれが鬱陶しく感じるかもしれません。Wi-Fi を使っている時に LED を固定するには、systemd-tmpfiles を使って下さい:\n\n```\n/etc/tmpfiles.d/phy0-led.conf\n```\n\n```\nw /sys/class/leds/phy0-led/trigger - - - - phy0radio\n```\n\n変更を適用するには、systemd-tmpfiles --create phy0-led.conf を実行するか再起動してください。\n\nLED のトリガの全ての設定値を見るには:\n\n```\n# cat /sys/class/leds/phy0-led/trigger\n```\n\n"
    },
    {
      "title": "Broadcom",
      "level": 3,
      "content": "Broadcom ワイヤレスを見て下さい。\n\n"
    },
    {
      "title": "Tenda w322u",
      "level": 4,
      "content": "この Tenda カードは rt2870sta デバイスとして扱って下さい。#rt2x00 を参照。\n\n"
    },
    {
      "title": "orinoco",
      "level": 4,
      "content": "カーネルパッケージの一部となっているので、別個インストールする必要はありません。\n\nいくつかの Orinoco チップセットは Hermes I/II です。orinoco_cs の代わりに wlags49_h1_cs を使うことで WPA サポートを得ることができます。このドライバーを使うには orinoco_cs をブラックリスト化して下さい。\n\n"
    },
    {
      "title": "prism54",
      "level": 4,
      "content": "このドライバー p54 はカーネルに含まれていますが、このサイト からあなたのカードに対応するファームウェアをダウンロードして /usr/lib/firmware ディレクトリにインストールする必要があります。\n\n"
    },
    {
      "title": "zd1211rw",
      "level": 4,
      "content": "zd1211rw は ZyDAS ZD1211 802.11b/g USB WLAN チップセット用のドライバで、最近の Linux カーネルに含まれています。サポートされているドライバの一覧は [12] を見て下さい。zd1211-firmwareAUR パッケージとして提供されているファームウェアをインストールすることだけが必要です。\n\n"
    },
    {
      "title": "hostap_cs",
      "level": 4,
      "content": "Host AP は Intersil の Prism2/2.5/3 チップセットを使ったワイヤレス LAN カードの Linux ドライバです。ドライバは Linux カーネルに含まれています。\n\n"
    },
    {
      "title": "ndiswrapper",
      "level": 3,
      "content": "Ndiswrapper は Linux で Windows のドライバーを使うためのラッパースクリプトです。Windows のドライバーに含まれる *.inf と .sys ファイルが必要です。\n\nndiswrapper を設定するには以下の手順に従って下さい。\n\n1. ndiswrapper をインストールする。\n1. ドライバを /etc/ndiswrapper/ にインストールする: # ndiswrapper -i filename.inf\n1. ndiswrapper にインストールされたドライバをすべて一覧表示する: $ ndiswrapper -l\n1. ndiswrapper に設定ファイルを /etc/modprobe.d/ndiswrapper.conf に書き出させる: # ndiswrapper -m# depmod -a\n\n```\n# ndiswrapper -i filename.inf\n```\n\n```\n$ ndiswrapper -l\n```\n\n```\n# ndiswrapper -m# depmod -a\n```\n\nndiswrapper のインストールはほとんど終わりました。起動時にモジュールをロードできます。\n\nndiswrapper がロードされるかテストしてください:\n\n```\n# modprobe ndiswrapper\n```\n\nワイヤレスインターフェイスが今存在しているかどうかをより詳しく調べるには ネットワーク設定#ネットワークインターフェイスを表示 を見てください。\n\n問題が起こった場合は次のページを見て下さい:\n\nndiswrapper howto、ndiswrapper FAQ。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Linux Wireless プロジェクト\n- Aircrack-ng guide on installing drivers\n- Wireless Device Database Wiki (このフォークは元の wiki が終了してから wi-cat.ru によってホストされています。これより完全ではないバージョンは: TechInfoDepot, deviwiki)\n- https://github.com/morrownr/USB-WiFi – 様々な Wi-Fi アダプタやチップセットに関する情報や、パフォーマンステスト、ドライバの情報、一般情報を含むサイト。\n\n"
    }
  ]
}
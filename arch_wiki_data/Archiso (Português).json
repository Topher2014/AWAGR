{
  "title": "Archiso (Português)",
  "url": "https://wiki.archlinux.org/title/Archiso_(Portugu%C3%AAs)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Remasterizando a ISO de Instalação\n- Archiso como servidor pxe\n- Instalação offline\n\nArchiso é uma ferramenta altamente customizável para construir imagens ISO do Arch Linux live CD/USB. As imagens oficiais são construídas com Archiso. Ele pode ser usado como base para sistemas de resgate, instaladores de linux ou outros sistemas. Este artigo wiki explica como instalar o Archiso, e como configurá-lo para controlar aspectos da imagem ISO resultante, tais como pacotes e arquivos incluídos. Requisitos técnicos e etapas de construção podem ser encontrados na documentação oficial do projeto. O Archiso é implementado com uma série de scripts bash. O componente central do Archiso é o comando mkarchiso. Suas opções estão documentadas em mkarchiso -h e não são cobertas aqui.\n\n"
    },
    {
      "title": "Instalação",
      "level": 2,
      "content": "Install O pacote archiso ou archiso-gitAUR.\n\n"
    },
    {
      "title": "Preparar um perfil personalizado",
      "level": 2,
      "content": "Archiso vem com dois perfis, releng e baseline.\n\n- releng é utilizado para criar a ISO oficial de instalação mensal. Ela pode ser usada como ponto de partida para a criação de uma imagem ISO personalizada.\n- baseline é uma configuração minimalista, que inclui apenas os pacotes mínimos necessários para arrancar o ambiente vivo a partir do meio.\n\nPara construir uma versão não modificada dos perfis, pule para #Construir a ISO. Caso contrário, se você desejar adaptar ou personalizar um dos perfis enviados pela Archiso, copie-o de /usr/share/archiso/configs/profile-name/ para um diretório gravável com um nome à sua escolha. Por exemplo:\n\n```\n$ cp -r /usr/share/archiso/configs/profile/ archlive\n```\n\nProceder às seções seguintes para personalizar e construir o perfil personalizado.\n\n"
    },
    {
      "title": "Estrutura do perfil",
      "level": 3,
      "content": "Um perfil archiso contém uma configuração que define a imagem ISO resultante. A estrutura do perfil é documentada em /usr/share/doc/archiso/README.profile.rst[1].\n\n"
    },
    {
      "title": "Selecionando pacotes",
      "level": 3,
      "content": "Edite packages.x86_64 para selecionar quais pacotes devem ser instalados na imagem live do sistema, listando os pacotes linha por linha.\n\n"
    },
    {
      "title": "Repositório local personalizado",
      "level": 4,
      "content": "```\narchlive/pacman.conf\n```\n\n```\n...\n[customrepo]\nSigLevel = Optional TrustAll\nServer = file:///path/to/customrepo\n...\n```\n\n"
    },
    {
      "title": "Pacotes de multilib",
      "level": 4,
      "content": "Para instalar pacotes do repositório multilib, simplesmente descomente esse repositório em pacman.conf.\n\n"
    },
    {
      "title": "Adicionando arquivos para a imagem",
      "level": 3,
      "content": "O diretório airootfs é usado como ponto de partida para o diretório root (/) do sistema live da imagem. Todo o seu conteúdo será copiado para o diretório de trabalho antes que os pacotes sejam instalados.\n\nColoque quaisquer arquivos e/ou diretórios personalizados no local desejado sob airootfs/. Por exemplo, se você tiver um conjunto de scripts iptables em seu sistema atual que você deseja utilizar em sua imagem live, copie-os tal como:\n\n```\n$ cp -r /etc/iptables archlive/airootfs/etc\n```\n\nDa mesma forma, é necessário algum cuidado com arquivos de configuração especiais que residem em algum lugar abaixo da hierarquia. Partes em falta da estrutura do diretório podem ser simplesmente criadas com mkdir(1).\n\nPor padrão, permissions será 644 para arquivos e 755 para diretórios. Todos eles serão de propriedade do usuário root. Para definir diferentes permissões ou propriedade para arquivos e/ou pastas específicos, use a matriz associativa file_permissions em profiledef.sh. Veja README.profile.rst para detalhes.\n\n"
    },
    {
      "title": "Kernel",
      "level": 3,
      "content": "Embora ambos os perfis incluídos no Archiso tenham apenas linux, as ISOs podem ser feitas para incluir outros ou mesmo múltiplos kernels.\n\nPrimeiro, edite packages.x86_64 para incluir os nomes dos pacotes do kernel que você deseja. Quando mkarchiso for executado, incluirá todos os arquivos work_dir/airootfs/boot/vmlinuz-* e work_dir/boot/initramfs-*.img no arquivo ISO (e adicionalmente na imagem FAT usada para inicialização da UEFI).\n\nmkinitcpio predefinidos por padrão construirão imagens de initramas de recurso. Para uma ISO, a imagem principal do initramfs não incluiria normalmente o gancho autodetect tornando assim desnecessária uma imagem adicional de fallback. Para evitar a criação de uma imagem de fallback initramfs, para que ela não tome espaço ou retarde o processo de construção, coloque um preset personalizado em archlive/airootfs/etc/mkinitcpio.d/pkgbase.preset por exemplo, para linux-lts:\n\n```\narchlive/airootfs/etc/mkinitcpio.d/linux-lts.preset\n```\n\n```\nPRESETS=('archiso')\n\nALL_kver='/boot/vmlinuz-linux-lts'\nALL_config='/etc/mkinitcpio.conf'\n\narchiso_image=\"/boot/initramfs-linux-lts.img\"\n```\n\nFinalmente criar configuração do boot loader para permitir a inicialização do(s) kernel(s).\n\n"
    },
    {
      "title": "Boot loader",
      "level": 3,
      "content": "Archiso suporta syslinux para a inicialização da BIOS e systemd-boot para a inicialização da UEFI. Consulte os artigos dos boot loaders para obter informações sobre sua sintaxe de configuração.\n\nNote: **releng** \n\n- O perfil releng por padrão é construído em uma ISO que suporta tanto BIOS quanto UEFI boot quando gravado em um disco óptico usando El Torito, ou quando gravado em um disco rígido (ou unidade flash USB, ou similar) usando Isohybrid.\n- Devido à natureza modular do isolinux, você é capaz de usar muitos addons uma vez que todos os arquivos .c32 são copiados e estão disponíveis para você. Dê uma olhada no site oficial do syslinux e no archiso git repo. Usando esses addons, é possível tornar os menus visualmente atraentes e complexos. Veja [2].\n\nmkarchiso espera que a configuração systemd-boot esteja no diretório efiboot, e a configuração syslinux nos diretórios syslinux e isolinux.\n\n"
    },
    {
      "title": "UEFI Secure Boot",
      "level": 4,
      "content": "Se você quiser tornar seu Archiso inicializável em um ambiente UEFI Secure Boot habilitado, você deve usar um boot loader assinado. Você pode seguir as instruções em Secure Boot#Booting an installation medium.\n\n"
    },
    {
      "title": "systemd units",
      "level": 3,
      "content": "Para enable systemd services/sockets/timers para o ambiente live você precisa criar manualmente os links simbólicos, assim como o systemctl enable o faz.\n\nPor exemplo, para ativar gpm.service, que contém WantedBy=multi-user.target, execute:\n\n```\n$ mkdir -p archlive/airootfs/etc/systemd/system/multi-user.target.wants\n$ ln -s /usr/lib/systemd/system/gpm.service archlive/airootfs/etc/systemd/system/multi-user.target.wants/\n```\n\nOs links simbólicos necessários podem ser enconrados lendo a unidade do systemd, ou se você tem o serviço instalado, enabling e observando a saída do systemctl.\n\n"
    },
    {
      "title": "Gerir o Login",
      "level": 4,
      "content": "O início do X na inicialização é feito habilitando o serviço systemd de seu login manager.Se você não souber qual .service habilita, você pode facilmente descobrir caso esteja usando o mesmo programa no sistema em que você constrói sua ISO. Basta usar:\n\n```\n$ ls -l /etc/systemd/system/display-manager.service\n```\n\nAgora crie o mesmo link simbólico em archlive/airootfs/etc/systemd/system/. Para LXDM:\n\n```\n$ ln -s /usr/lib/systemd/system/lxdm.service archlive/airootfs/etc/systemd/system/display-manager.service\n```\n\nIsto permitirá o LXDM no início do sistema em seu sistema live.\n\n"
    },
    {
      "title": "Mudança de login automático",
      "level": 4,
      "content": "A configuração para o login automático da getty está localizada em airootfs/etc/systemd/system/getty@tty1.service.d/autologin.conf.\n\nVocê pode modificar este arquivo para mudar o usuário do login automático:\n\n```\n[Service]\nExecStart=\nExecStart=-/sbin/agetty --autologin username --noclear %I 38400 linux\n```\n\nOu removê-lo completamente para desativar o login automático.\n\n"
    },
    {
      "title": "Usuários e senhas",
      "level": 4,
      "content": "Para criar um usuário que estará disponível no ambiente live, você deve editar manualmente archlive/airootfs/etc/passwd, archlive/airootfs/etc/shadow, archlive/airootfs/etc/group e archlive/airootfs/etc/gshadow.\n\nPor exemplo, para adicionar um usuário archie. Adicioná-los ao archlive/airootfs/etc/passwd seguindo a sintaxe passwd(5):\n\n```\narchlive/airootfs/etc/passwd\n```\n\n```\nroot:x:0:0:root:/root:/usr/bin/zsh\narchie:x:1000:1000::/home/archie:/usr/bin/zsh\n```\n\nGerar um hash de senha com openssl passwd -6 e adicioná-lo ao archlive/airootfs/etc/shadow seguindo a sintaxe de shadow(5). Por exemplo:\n\n```\narchlive/airootfs/etc/shadow\n```\n\n```\nroot::14871::::::\narchie:$6$randomsalt$cij4/pJREFQV/NgAgh9YyBIoCRRNq2jp5l8lbnE5aLggJnzIRmNVlogAg8N6hEEecLwXHtMQIl2NX2HlDqhCU1:14871::::::\n```\n\nAdicionar o grupo do usuário e os grupos dos quais farão parte ao archlive/airootfs/etc/group de acordo com group(5). Por exemplo:\n\n```\narchlive/airootfs/etc/group\n```\n\n```\nroot:x:0:root\nadm:x:4:archie\nwheel:x:10:archie\nuucp:x:14:archie\narchie:x:1000:\n```\n\nCriar o apropriado archlive/airootfs/etc/gshadow de acordo com gshadow(5):\n\n```\narchlive/airootfs/etc/gshadow\n```\n\n```\nroot:!*::root\narchie:!*::\n```\n\nCertifique-se de que /etc/shadow e /etc/gshadow tenham as permissões corretas:\n\n```\narchlive/profiledef.sh\n```\n\n```\n...\nfile_permissions=(\n  ...\n  [\"/etc/shadow\"]=\"0:0:0400\"\n  [\"/etc/gshadow\"]=\"0:0:0400\"\n)\n```\n\nApós a instalação do pacote, mkarchiso criará todos os diretórios home especificados para os usuários listados em archlive/airootfs/etc/passwd e copiará work_directory/x86_64/airootfs/etc/skel/* para eles. Os arquivos copiados terão a propriedade apropriada do usuário e do grupo.\n\n"
    },
    {
      "title": "Construir a ISO",
      "level": 2,
      "content": "Construa uma ISO que você pode então gravar em CD ou USB, executando:\n\n```\n# mkarchiso -v -w /path/to/work_dir -o /path/to/out_dir /path/to/profile/\n```\n\n- -w especifica o diretório de trabalho. Se a opção não for especificada, por padrão será work no diretório atual.\n- -o especifica o diretório onde a imagem ISO construída será colocada. Se a opção não for especificada, por padrão será out no diretório atual.\n- Deve-se notar que o arquivo de perfil profiledef.sh não pode ser especificado ao executar mkarchiso, apenas o caminho para o arquivo\n\nSubstitua /path/to/profile/ pelo caminho para seu perfil personalizado, ou por /usr/share/archiso/configs/releng/ se você estiver construindo um perfil não modificado.\n\n```\n# mkarchiso -v -w /tmp/archiso-tmp /path/to/profile/\n```\n\nQuando executado, o script irá baixar e instalar os pacotes que você especificou para work_directory/x86_64/airootfs, criar o kernel e as imagens init, aplicar suas customizações e finalmente construir a ISO no diretório de saída.\n\n"
    },
    {
      "title": "Remoção do diretório de trabalho",
      "level": 3,
      "content": "Note: **você pode perder dados** \n\nOs arquivos temporários são copiados para o diretório de trabalho. Após a construção bem sucedida da ISO, o diretório de trabalho e seu conteúdo podem ser excluídos. Por exemplo:\n\n```\n# rm -rf /path/to/work_dir\n```\n\n"
    },
    {
      "title": "usando a ISO",
      "level": 2,
      "content": "Ver Installation guide (Português)#Preparar uma mídia de instalação para várias opções.\n\n"
    },
    {
      "title": "Teste a ISO no QEMU",
      "level": 2,
      "content": "Install as dependências opcionais qemu-desktop e edk2-ovmf.\n\nUse o script de conveniência run_archiso para executar uma imagem construída usando QEMU.\n\n```\n$ run_archiso -i /path/to/archlinux-yyyy.mm.dd-x86_64.iso\n```\n\nA máquina virtual também pode ser executada utilizando a emulação UEFI:\n\n```\n$ run_archiso -u -i /path/to/archlinux-yyyy.mm.dd-x86_64.iso\n```\n\n"
    },
    {
      "title": "Criptografia",
      "level": 3,
      "content": "Para gerar uma imagem encriptada, você pode usar o pacote archiso-encryptionAUR[link quebrado: package not found].\n\nPara construir o perfil incluído releng, voce tem que configurar um repositório personalizado contendo o pacote cryptsetup-archisoAUR[link quebrado: package not found].\n\nSe você tiver problemas para encontrar o dispositivo raiz em tempo de execução, ajuste o encrypt gancho do pacote acima.\n\n"
    },
    {
      "title": "Preparar uma ISO para uma instalação via SSH",
      "level": 3,
      "content": "Para Install Arch Linux via SSH (Português) sem qualquer interação com o sistema, uma chave pública SSH deve ser colocada em authorized_keys.\n\nA adição da chave SSH pode ser feita manualmente (explicada aqui), ou por cloud-init.\n\nPara adicionar a chave manualmente, primeiro copiar o perfil releng do Archiso a um diretório gravável. O seguinte exemplo usa archlive.\n\n```\n$ cp -r /usr/share/archiso/configs/profile/ archlive\n```\n\nCriar um diretório .ssh no diretório home do usuário que será usado para fazer o login. O exemplo a seguir será a utilização do usuário root.\n\n```\n$ mkdir archlive/airootfs/root/.ssh\n```\n\nAdicionar a(s) chave(s) pública(s) SSH, que será(ão) usada(s) para fazer o login, a authorized_keys:\n\n```\n$ cat ~/.ssh/key1.pub >> archlive/airootfs/root/.ssh/authorized_keys\n$ cat ~/.ssh/key2.pub >> archlive/airootfs/root/.ssh/authorized_keys\n```\n\nDefinir as permissões corretas e a propriedade para o diretório .ssh e o arquivo authorized_keys:\n\n```\narchlive/profiledef.sh\n```\n\n```\n...\nfile_permissions=(\n  ...\n  [\"/root\"]=\"0:0:0750\"\n  [\"/root/.ssh\"]=\"0:0:0700\"\n  [\"/root/.ssh/authorized_keys\"]=\"0:0:0600\"\n)\n```\n\nFinalmente construa a ISO. Ao inicializar a ISO, OpenSSH começará e será possível fazer o log in usando a(s) chave(s) privada(s) SSH correspondente(s).\n\n"
    },
    {
      "title": "Conectar-se automaticamente a uma rede Wi-Fi usando iwd",
      "level": 3,
      "content": "Crie /var/lib/iwd/ dentro do diretório airootfs do perfil e defina as permissões corretas::\n\n```\n$ mkdir -p archlive/airootfs/var/lib/iwd\n```\n\n```\narchlive/profiledef.sh\n```\n\n```\n...\nfile_permissions=(\n  ...\n  [\"/var/lib/iwd\"]=\"0:0:0700\"\n)\n```\n\nSiga as instruções em iwd (Português)#Configuração de rede e iwd.network(5) para criar um arquivo de configuração de rede para sua rede Wi-Fi.\n\nSalve o arquivo de configuração dentro de archlive/airootfs/var/lib/iwd/.\n\n"
    },
    {
      "title": "Ajustando o tamanho da partição da root na mosca",
      "level": 3,
      "content": "Se você receber a seguinte mensagem de erro ao baixar arquivos ou instalar pacotes no ambiente ISO inicializado, você pode precisar desligar e ajustar o tamanho da partição root enquanto inicializa o Archiso novamente.\n\n```\nerror: partition / too full: 63256 blocks needed, 61450 blocks free\nerror: not enough free disk space\nerror: failed to commit transaction (not enough free disk space) \nErrors occurred: no packages were upgraded.\n```\n\nPara ajustar o tamanho da partição root no sistema Arch Linux live, pressione a tecla Tab para editar os parâmetros do kernel. Anexe spaço_de_vaca=2G no final para obter o tamanho 2G para a partição root. Pressione Enter para continuar a inicialização no sistema live. Você pode verificar o tamanho dos sistemas de arquivos executando:\n\n```\n$ df -h\n```\n\nVocê também pode ajustar o tamanho da partição root na hora, executando este comando:\n\n```\n# mount -o remount,size=2G /run/archiso/cowspace\n```\n\nVeja mais parâmetros de inicialização aqui\n\n"
    },
    {
      "title": "O window manager congela",
      "level": 3,
      "content": "Se você quiser usar um window manager no Live CD, então você deve adicionar os necessários e os corretos video drivers, ou a WM pode congelar no carregamento.\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- Página do projeto Archiso\n- Documentação oficial\n- Lista de discussão Arch Linux Release Engineering\n- #archlinux-releng — Arch Linux Release Engineering Canal IRC\n- archiso-manager — a ferramenta utilizada para a construção das ISOs mensais oficiais\n\n"
    }
  ]
}
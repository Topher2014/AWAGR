{
  "title": "Nnn (Русский)",
  "url": "https://wiki.archlinux.org/title/Nnn_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- File manager functionality (Русский)\n- Midnight Commander (Русский)\n- ranger\n- vifm\n\nnnn (стилизованно: n3) это компактный файловый менеджер для терминала, написанный на Си. Является очень гибким за счёт своей системы плагинов, которая абстрагирована от языка, например, плагин (neo)vim.\n\nnnn имеет встроенную функцию (раз)архивирования широко распространённых форматов, функцию анализа использования диска, средство нечёткого запуска приложений (неполное или чуть неправильно написанное имя) и средство множественного переименования. nnn поддерживает быстрый поиск search-as-you-type с регексом и навигацию navigate-as-you-type с непрерывной навигацией и авто-выделением. Кроме того поддерживаются контексты, закладки, сложные условия сортировки, SSHFS, множественные операции над выделенными объектами и другое.\n\nНесмотря на свои возможности, nnn спроектирован быть простым в использовании и конфигурируемым через переменные окружения, нежели конфигурационные файлы.\n\n"
    },
    {
      "title": "Установка",
      "level": 2,
      "content": "nnn распространяется как пакет nnn.\n\n"
    },
    {
      "title": "Использование",
      "level": 3,
      "content": "nnn управляется не только как vim при помощи hjkl, но и при помощи стрелок. Для удобного использования (в отличие от vim) достаточно стрелок, / и q. Смотри справку через ? в любой момент.\n\n"
    },
    {
      "title": "Конфигурация",
      "level": 3,
      "content": "nnn конфигурируется через переменные окружения, обычно добавляемые в файл ~/.bashrc. Дополнительную информацию о конфигурировании можно прочесть как в nnn(1), так и на вики в GitHub.\n\nВот пример конфигурации ~/.bashrc:\n\n```\n~/.bashrc\n```\n\n```\nexport NNN_BMS='d:~/Documents;u:/home/user/Cam Uploads;D:~/Downloads/'\nexport NNN_SSHFS=\"sshfs -o follow_symlinks\" # заставляет sshfs следовать по символьным ссылкам\nexport NNN_COLORS=\"2136\"                    # разные цвета для разных контекстов (см. man)\nexport NNN_TRASH=1                          # перемещение в корзину вместо удаления файлов (требуется trash-cli)\n```\n\nСамая полезная настройка из всех это NNN_BMS. Она позволяет выбрать горячие клавиши для указанных каталогов. Перемещение в директорию происходит по нажатию на b с выбранной буквой закладки. В примере выше требуется нажать клавиши bD, чтобы переместиться в каталог ~/Downloads.\n\n"
    },
    {
      "title": "Список выделенных файлов",
      "level": 3,
      "content": "Получить список выделенных файлов можно при помощи псевдонимов. Создайте такой псевдоним:\n\n```\n~/.bashrc\n```\n\n```\nalias ncp=\"cat ${NNN_SEL:-${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.selection} | tr '\\0' '\\n'\"\n```\n\nТеперь можно использовать ncp для получения списка выделенных файлов и его передачи в другие программы через пайп.\n\n"
    },
    {
      "title": "Указание уровня вложенности оболочки",
      "level": 3,
      "content": "Когда используется ! чтобы открыть командную оболочку в текущей директории (не запутайтесь в оболочках, которые запустили nnn, и которые запущенны из nnn) можно добавить такую строку, чтобы не запутаться:\n\n```\n~/.bashrc\n```\n\n```\n[ -n \"$NNNLVL\" ] && PS1=\"N$NNNLVL $PS1\"\n```\n\nНастройка добавляет N<уровень вложенности> перед каждым приглашением bash.\n\n"
    },
    {
      "title": "Выход и cd (Ctrl-G)",
      "level": 3,
      "content": "Обычно, когда выходите из nnn, вас переносит в директорию, из которой запустили менеджер, однако если настроить cd-on-quit, то при выходе оболочка уже будет находится в последней выбранной в nnn директории.\n\nДля настройки добавьте в ваш .bashrc/.zshrc:\n\n```\n~/.bashrc или ~/.zshrc\n```\n\n```\nif [ -f /usr/share/nnn/quitcd/quitcd.bash_zsh ]; then\n    source /usr/share/nnn/quitcd/quitcd.bash_zsh\nfi\n```\n\nПодключённый скрипт создаст команду n (точнее, bash-функцию n) — используйте её вместо команды nnn.\n\nСмотрите также статью configure cd on quit на вики в GitHub.\n\n"
    },
    {
      "title": "Добавление плагинов",
      "level": 3,
      "content": "Чтобы добавить плагин, следует добавить файл плагина в ${XDG_CONFIG_HOME:-$HOME/.config}/nnn/plugins/. Например, можно создать свой запускаемый шелл-скрипт\n\n```\n${XDG_CONFIG_HOME:-$HOME/.config}/nnn/plugins/git-changes\n```\n\n```\n#!/usr/bin/env sh\n git log -p -- \"$@\"\n```\n\nСкрипт срабатывает по нажатии клавиши R и выбору git-changes, который покажет удобный журнал изменений git репозитория для конкретного файла вместе с кодом для удобного код-ревью.\n\n"
    },
    {
      "title": "Смотрите также",
      "level": 2,
      "content": "- репозиторий на GitHub\n- официальный гайд по настройке\n- Введение в nnn — YouTube\n\n"
    }
  ]
}
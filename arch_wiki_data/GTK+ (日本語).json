{
  "title": "GTK+ (日本語)",
  "url": "https://wiki.archlinux.org/title/GTK%2B_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- GTK/開発\n- Qt\n- Qt と GTK アプリケーションの外観の統合\n\nGTK ウェブサイト より:\n\n当初 GTK は GNU プロジェクトによって GIMP のために作成されました、しかしながら現在ではさまざまな言語のバインディングの存在する人気のあるツールキットになっています。この記事では GTK テーマ・スタイル・アイコン・フォント・フォントサイズを設定するのに使うツールと手動設定の方法を説明します。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 インストール\n- 2 テーマ 2.1 GTK 3 と GTK 4 2.2 GTK 2 2.3 GTK 2 と GTK 3 をサポートしているテーマ 2.4 GTK と Qt\n- 3 設定ツール\n- 4 設定 4.1 テーマの基本設定 4.2 ダークテーマ 4.3 キーボードショートカット 4.3.1 Emacs キーバインド 4.3.2 キーバインドを宣言する 4.4 GNOME メニューの遅延 4.5 ウィジェットのサイズを小さくする 4.6 CSD ボタンを隠す 4.7 マウスの貼り付け機能を無効化 4.8 ファイル選択ダイアログのデフォルトフォルダ 4.9 スクロールの旧式の挙動 4.10 オーバーレイスクロールバーを無効化 4.10.1 オーバーレイスクロールのインジケータを削除 4.11 例\n- 5 GDK バックエンド 5.1 Wayland バックエンド 5.2 Xorg バックエンド 5.3 Broadway バックエンド\n- 6 トラブルシューティング 6.1 GTK 2 と GTK 3 アプリケーションでテーマが異なる 6.2 root アプリケーションにテーマが適用されない 6.3 クライアントサイドデコレーション 6.4 セディーユ ć/Ć ではなく ç/Ç が使われる 6.5 accessibility bus に関する警告を表示させない 6.6 タイトルバーの背景色がおかしい 6.7 タイル型ウィンドウマネージャでフォーカスイベントがおかしい 6.8 GTK 2 のファイルダイアログのサムネイル 6.9 ボタンとメニューのアイコン 6.10 GTK 3 で polkit を使用しない 6.11 一部の GTK 2 テーマで UI のカラーパレットしか変化しない 6.12 GTK file chooser にパッチを適用して通常のタイプを先に使用する 6.13 GTK 4 アプリケーションの文字がぼやける、または正しく表示されない 6.14 GTK 4 アプリケーションが遅い 6.15 GTK4 でのレンダリングとスケーリングの問題 6.16 NVIDIA Optimus 環境で dGPU を使用する GTK4 アプリケーション\n- 7 参照\n\n- 2.1 GTK 3 と GTK 4\n- 2.2 GTK 2\n- 2.3 GTK 2 と GTK 3 をサポートしているテーマ\n- 2.4 GTK と Qt\n\n- 4.1 テーマの基本設定\n- 4.2 ダークテーマ\n- 4.3 キーボードショートカット 4.3.1 Emacs キーバインド 4.3.2 キーバインドを宣言する\n- 4.4 GNOME メニューの遅延\n- 4.5 ウィジェットのサイズを小さくする\n- 4.6 CSD ボタンを隠す\n- 4.7 マウスの貼り付け機能を無効化\n- 4.8 ファイル選択ダイアログのデフォルトフォルダ\n- 4.9 スクロールの旧式の挙動\n- 4.10 オーバーレイスクロールバーを無効化 4.10.1 オーバーレイスクロールのインジケータを削除\n- 4.11 例\n\n- 4.3.1 Emacs キーバインド\n- 4.3.2 キーバインドを宣言する\n\n- 4.10.1 オーバーレイスクロールのインジケータを削除\n\n- 5.1 Wayland バックエンド\n- 5.2 Xorg バックエンド\n- 5.3 Broadway バックエンド\n\n- 6.1 GTK 2 と GTK 3 アプリケーションでテーマが異なる\n- 6.2 root アプリケーションにテーマが適用されない\n- 6.3 クライアントサイドデコレーション\n- 6.4 セディーユ ć/Ć ではなく ç/Ç が使われる\n- 6.5 accessibility bus に関する警告を表示させない\n- 6.6 タイトルバーの背景色がおかしい\n- 6.7 タイル型ウィンドウマネージャでフォーカスイベントがおかしい\n- 6.8 GTK 2 のファイルダイアログのサムネイル\n- 6.9 ボタンとメニューのアイコン\n- 6.10 GTK 3 で polkit を使用しない\n- 6.11 一部の GTK 2 テーマで UI のカラーパレットしか変化しない\n- 6.12 GTK file chooser にパッチを適用して通常のタイプを先に使用する\n- 6.13 GTK 4 アプリケーションの文字がぼやける、または正しく表示されない\n- 6.14 GTK 4 アプリケーションが遅い\n- 6.15 GTK4 でのレンダリングとスケーリングの問題\n- 6.16 NVIDIA Optimus 環境で dGPU を使用する GTK4 アプリケーション\n\n"
    },
    {
      "title": "インストール",
      "level": 2,
      "content": "複数の GTK バージョンが現在利用可能です。以下のパッケージによってそれらはインストールできます:\n\n- GTK 4.x は gtk4 パッケージでインストールできます。\n- GTK 3.x は gtk3 パッケージでインストールできます。\n- GTK 2.x は gtk2 パッケージでインストールできます。\n- GTK 1.x は gtkAUR パッケージでインストールできます。\n\n"
    },
    {
      "title": "GTK 3 と GTK 4",
      "level": 3,
      "content": "GTK 3 と GTK 4 では、デフォルトテーマは Adwaita ですが、HighContrast テーマと HighContrastInverse テーマも含まれています。\n\n特定のテーマを適用するには、dconf エディタから org.gnome.desktop.interface 名前空間内の gtk-theme プロパティを設定してください:\n\n```\n$ gsettings set org.gnome.desktop.interface gtk-theme Adwaita\n```\n\ndconf プロパティを使用しない場合は、GTK_THEME 環境変数を使って GTK 3 と GTK 4 のテーマを適用することができます。例えば、GNOME Calculator を Adwaita のダークバージョンを使って起動するには:\n\n```\n$ GTK_THEME=Adwaita:dark gnome-calculator\n```\n\n"
    },
    {
      "title": "GTK 2",
      "level": 3,
      "content": "GTK 2 のデフォルトのテーマは Raleigh ですが、Arch Linux には、デフォルトのテーマを Adwaita に設定するカスタムの設定ファイルが /usr/share/gtk-2.0/gtkrc に存在しています。\n\nGTK 2 のテーマを変更するには、GTK2_RC_FILES 環境変数を使用してください。例えば、Raleigh テーマで GIMP を起動するには:\n\n```\n$ GTK2_RC_FILES=/usr/share/themes/Raleigh/gtk-2.0/gtkrc gimp\n```\n\n公式リポジトリや AUR から他のテーマをインストールすることができます。手動で展開されたテーマは ~/.themes/ や ~/.local/share/themes/ ディレクトリに配置します。\n\n"
    },
    {
      "title": "GTK 2 と GTK 3 をサポートしているテーマ",
      "level": 3,
      "content": "- Adapta — マテリアルデザインガイドラインに基づいている GTK テーマ。次のテーマが含まれています: Adapta, Adapta-Eta, Adapta-Nokto, Adapta-Nokto-Eta\n\n- Arc — モダンで透過するエレメントを備えたフラットテーマ。次のテーマが含まれています: Arc, Arc-Dark, Arc-Darker\n\n- Bluebird — Xfce 用の Blue Desktop Suite。\n\n- Breeze — KDE のデフォルトウィジェットテーマの GTK バージョン。次のテーマが含まれています: Breeze, Breeze-Dark\n\n- Deepin — Deepin デスクトップのデフォルトテーマ。次のテーマが含まれています: deepin, deepin-dark\n\n- GNOME Extra Themes — GNOME デスクトップの追加テーマ。次のテーマが含まれています: Adwaita, Adwaita-dark, HighContrast\n\n- Greybird — グレーとブルーの Xfce テーマ。Xubuntu 12.04 のデフォルト。\n\n- Materia — GTK3, GTK2, GNOME-Shell に対応しているマテリアルデザインライクなフラットテーマ。\n\n- MATE Themes — MATE デスクトップのデフォルトテーマ。次のテーマが含まれています: BlackMATE, Blue-Submarine, BlueMenta, ContrastHighInverse, Green-Submarine, GreenLaguna, Menta, TraditionalGreen, TraditionalOk\n\n- Numix — 近代的な外観をしているフラットで明るいテーマ (GNOME, Openbox, Unity, Xfce)。次のテーマが含まれています: Numix\n\n- Vertex — GTK 3, GTK 2, Gnome-Shell, Cinnamon のためのテーマ。\n\n- Zuki — GTK, gnome-shell などのためのテーマ。\n\nAUR にもいくつか GTK テーマが存在します。例えば、gtk-theme で検索。\n\n"
    },
    {
      "title": "GTK と Qt",
      "level": 3,
      "content": "デスクトップで GTK と Qt (KDE) アプリケーションを使っているならば、それらの見た目が上手く調和しないことに気づくでしょう。GTK スタイルと Qt スタイルを調和させたい場合は Qt と GTK アプリケーションの外観の統合を読んで下さい。\n\n"
    },
    {
      "title": "設定ツール",
      "level": 2,
      "content": "主流のデスクトップ環境の多くは GTK テーマやアイコン、フォントやフォントサイズを設定するためのツールを提供しており、XSettings で設定を管理しています:\n\n- Cinnamon を使っている場合、Themes ツールを使って下さい (cinnamon-settings themes): System Settings > Themes を開いて下さい。\n- Enlightenment を使っている場合: Settings > All > Look > Application Theme を開いて下さい。\n- GNOME を使っている場合、GNOME Tweaks (gnome-tweaks): gnome-tweaks をインストールして下さい。\n- MATE を使っている場合、Appearance Preferences ツールを使って下さい (mate-appearance-properties): System > Settings > Appearance を開いて下さい。\n- Xfce を使っている場合、Appearance ツールを使って下さい: Settings > Appearance を開いて下さい。\n\n通常、他の GUI ツールは設定ファイルを上書きします。\n\nGTK 2 と GTK 3 の両方をサポートしているツール:\n\n- nwg-look — wlroots 環境で動作するように変更された GTK3 設定エディタ。\n\n- KDE GTK Configurator — GTK 2 と GTK 3 アプリケーションのスタイルやフォントを変更することができるアプリケーション。\n\n- LXAppearance — LXDE プロジェクトによる、デスクトップに依存しない GTK 2 と GTK 3 のスタイル設定ツール (LXDE デスクトップの他のパーツを必要としません)。\n\n- Oo-mox — Numix と Flat-Plat テーマ (GTK 2, GTK 3) や Archdroid と Gnome-Colors アイコンテーマの様々なカラーバリエーションを生成するためのグラフィカルアプリケーション。HiDPI ディスプレイ用にスケールした GTK 2 テーマも生成できます。\n\nGTK 2 だけをサポートしているツール:\n\n- GTK Change Theme — GTK 2.0 のテーマを変更するためのプログラム (switch2 より優れた代替ツールと見なされています)。\n\n- GTK Preference Tool — GTK テーマの選択とフォントの切り替えプログラム。\n\n- GTK Theme Switch — シンプルな GTK テーマスイッチャ。\n\n"
    },
    {
      "title": "設定",
      "level": 2,
      "content": "設定ファイルで GTK の設定を手動で指定することもできます。ただしデスクトップ環境やアプリケーションは手動設定を上書きしてしまうことがあります。GTK のバージョンによって、設定ファイルの場所は異なっています:\n\n- GTK 2 ユーザー個別: $GTK2_RC_FILES、~/.gtkrc-2.0\n- GTK 2 システム全体: /etc/gtk-2.0/gtkrc\n- GTK 3 ユーザー個別: $XDG_CONFIG_HOME/gtk-3.0/settings.ini、$XDG_CONFIG_HOME が設定されていない場合は $HOME/.config/gtk-3.0/settings.ini\n- GTK 3 システム全体: /etc/gtk-3.0/settings.ini\n\n- 現在サポートされている GTK の設定オプションの完全なリストについては、GTK プログラミングリファレンスマニュアルの GTK4 と GTK3 の GtkSettings properties (そして GTK 2 properties) を見てください。\n\n- 以下で説明している設定のうちいくつか (gtk-icon-sizes など) は GTK 3.10 から非推奨となっており、無視されます。\n- GTK の設定ファイルを編集した場合、変更が適用されるのは新しく起動したアプリケーションからです。\n\n"
    },
    {
      "title": "テーマの基本設定",
      "level": 3,
      "content": "GTK テーマやアイコン、フォントやフォントサイズを手動で変更するには、例えば以下のように設定ファイルに追加します:\n\n- GTK 2:\n\n```\n~/.gtkrc-2.0\n```\n\n```\ngtk-icon-theme-name = \"Adwaita\"\ngtk-theme-name = \"Adwaita\"\ngtk-font-name = \"DejaVu Sans 11\"\n```\n\n- GTK 3:\n\n```\n$XDG_CONFIG_HOME/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-icon-theme-name = Adwaita\ngtk-theme-name = Adwaita\ngtk-font-name = DejaVu Sans 11\n```\n\nテーマが GTK 3 に対して適用されない場合、加えて gsettings を使用してください:\n\n```\n$ gsettings set org.gnome.desktop.interface gtk-theme theme_name\n```\n\n同じように、アイコンテーマが GTK3 に適用されない場合は、gsettings を使って:\n\n```\n$ gsettings set org.gnome.desktop.interface icon-theme icon_theme_name\n```\n\nアイコンを手動でダウンロード・インストールする方法については、アイコン を見てください。\n\n"
    },
    {
      "title": "ダークテーマ",
      "level": 3,
      "content": "GTK 3 テーマの中には派生のダークテーマが存在することがありますが、アプリケーションによって明示的に使うように設定されない限り、デフォルトで使われることはありません。全ての GTK 3 アプリケーションでダークテーマを使うには、以下を設定:\n\n```\ngtk-application-prefer-dark-theme = true\n```\n\nGTK 4 に対しては、以下を使用してください:\n\n```\n$ gsettings set org.gnome.desktop.interface color-scheme prefer-dark\n```\n\n"
    },
    {
      "title": "キーボードショートカット",
      "level": 3,
      "content": "マウスをメニューアイテムの上に乗せて設定したいキーの組み合わせを押すことで GTK アプリケーションのキーボードショートカット (GTK では accelerators とも呼ばれます) を変更することができます。この機能を有効にするには、次を設定してください:\n\n```\ngtk-can-change-accels = 1\n```\n\n"
    },
    {
      "title": "Emacs キーバインド",
      "level": 4,
      "content": "GTK アプリで Emacs ライクなキーバインドを使うには以下を追加します:\n\n```\n~/.gtkrc-2.0\n```\n\n```\ngtk-key-theme-name = \"Emacs\"\n```\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-key-theme-name = Emacs\n```\n\nGTK 3 に対しては、以下も実行してください:\n\n```\n$ gsettings set org.gnome.desktop.interface gtk-key-theme \"Emacs\"\n```\n\nXFCE にも同じような設定が存在します:\n\n```\n$ xfconf-query -c xsettings -p /Gtk/KeyThemeName -s Emacs\n```\n\n"
    },
    {
      "title": "キーバインドを宣言する",
      "level": 4,
      "content": "/usr/share/themes/Emacs/ などにある設定ファイルは、Emacs バインドを指定したり、変更したりできます。\n\n```\n/usr/share/themes/Emacs/gtk-2.0-key/gtkrc\n```\n\n```\nbinding \"gtk-emacs-text-entry\"\n{\n  bind \"<ctrl>b\" { \"move-cursor\" (logical-positions, -1, 0) }\n  ...\n}\n```\n\n```\n/usr/share/themes/Emacs/gtk-3.0/gtk-keys.css\n```\n\n```\n@binding-set gtk-emacs-text-entry\n{\n  bind \"<ctrl>b\" { \"move-cursor\" (logical-positions, -1, 0) };\n  ...\n}\n```\n\nセクションを GTK 2 と 2 に対してそれぞれ ~/.gtkrc-2.0 と ~/.themes/your-new-key-theme/gtk-3.0/gtk-keys.css にコピーすることで、ユーザー毎に設定を変更できます。\n\n"
    },
    {
      "title": "GNOME メニューの遅延",
      "level": 3,
      "content": "この設定は GNOME でマウスをメニューに置いた時にメニューが開くまでの待ち時間を決めます。数値はミリ秒単位です。\n\n```\ngtk-menu-popup-delay = 0\n```\n\n"
    },
    {
      "title": "ウィジェットのサイズを小さくする",
      "level": 3,
      "content": "小さな画面を使っていて大きなアイコンやウィジェットを表示したくない場合、簡単にサイズを変えることができます。\n\nツールバーのアイコンに文章を表示しないようにするには (有効値)、次を使って下さい:\n\n```\ngtk-toolbar-style = GTK_TOOLBAR_ICONS\n```\n\n小さいアイコンを使うには、次のような行を使って下さい:\n\n```\ngtk-icon-sizes = \"panel-menu=16,16:panel=16,16:gtk-menu=16,16:gtk-large-toolbar=16,16\\\n:gtk-small-toolbar=16,16:gtk-button=16,16\"\n```\n\nボタンからアイコンを完全に削除するには:\n\n```\ngtk-button-images = 0\n```\n\nメニューからアイコンを削除することもできます:\n\n```\ngtk-menu-images = 0\n```\n\n[1] と [2] も参照。\n\n"
    },
    {
      "title": "CSD ボタンを隠す",
      "level": 3,
      "content": "Client-Side Decorations (CSD)[3] の最小化・最大化ボタン を gtk3 ウィンドウから削除するには:\n\n```\ngtk-decoration-layout=menu:close\n```\n\nGTK docs を参照。\n\n"
    },
    {
      "title": "マウスの貼り付け機能を無効化",
      "level": 3,
      "content": "マスクの中ボタンをクリックした際のクリップボード (PRIMARY セレクション) からの貼り付けを無効化するには:\n\n```\ngtk-enable-primary-paste=false\n```\n\n"
    },
    {
      "title": "ファイル選択ダイアログのデフォルトフォルダ",
      "level": 3,
      "content": "最近使われたフォルダではなく現在の作業ディレクトリでファイル選択ダイアログを開くようにします。通常、現在の作業ディレクトリはホームディレクトリです。\n\nGTK 3\n\nイカのコマンドで設定を変更してください:\n\n```\n$ gsettings set org.gtk.Settings.FileChooser startup-mode cwd\n```\n\nGTK 2\n\n以下を ~/.config/gtk-2.0/gtkfilechooser.ini に追加してください:\n\n```\nStartupMode=cwd\n```\n\n"
    },
    {
      "title": "スクロールの旧式の挙動",
      "level": 3,
      "content": "GTK 3.6 以前では、スクロールバーのスライダーの両側をクリックすると、クリックした方向にスクロールバーが丁度一ページ分だけ移動するようになっていました。GTK 3.6 から、スライダーはクリックした位置に直接移動するようになっています。以下の内容のファイルを作成することで、アプリケーションによっては前の挙動に戻すことが可能です:\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-primary-button-warps-slider = false\n```\n\n"
    },
    {
      "title": "オーバーレイスクロールバーを無効化",
      "level": 3,
      "content": "GTK 3.15 から、オーバーレイスクロールバーがデフォルトで有効になっており、GTK 3 アプリケーションではマウスを乗せたときだけしかスクロールバーが表示されないようになっています。次の環境変数を設定することで元のスクロールバーに戻せます: GTK_OVERLAY_SCROLLING=0。環境変数#グラフィック環境 を参照。\n\nあるいは、GTK 3.24.9 からは GTK 3 の設定でオーバーレイスクロールバーを無効化できます。設定ファイルの [Settings] セクションで gtk-overlay-scrolling の値を false に設定してください:\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-overlay-scrolling = false\n```\n\nGTK 4 は、もはや GTK_OVERLAY_SCROLLING をサポートしていません。master から削除されました。GTK 4 では、スクロールバーのオーバーレイはツールキットの一部です。blanket toggle は、両方の組み合わせでテストしていないアプリケーションが壊れてしまうのを防ぐために削除されました。アプリケーション開発者がアプリの見た目を決定できるように、ツールキットは、オプトアウトあるいは設定を削除するメカニズムをユーザに提供しています。gtk_scrolled_window_set_overlay_scrolling() 関数を使って、アプリケーションごとにオーバーレイスクロールを有効化/無効化できます。アプリケーション開発者は、任意で GSettings を使ってユーザの設定をプロパティにバインドできます。\n\n"
    },
    {
      "title": "オーバーレイスクロールのインジケータを削除",
      "level": 4,
      "content": "オーバーレイスクロールバーの位置はアプリケーションウィンドウの細い破線で示されます。たとえ上述の環境変数を使ってオーバーレイスクールを無効化しても破線は消えません。インジケータの線を消すには、以下のファイルを作成してください:\n\n```\n~/.config/gtk-3.0/gtk.css\n```\n\n```\n/* Remove dotted lines from GTK 3 applications */\nundershoot.top, undershoot.right, undershoot.bottom, undershoot.left { background-image: none; }\n```\n\n"
    },
    {
      "title": "例",
      "level": 3,
      "content": "GTK の設定例:\n\n```\n~/.gtkrc-2.0\n```\n\n```\ngtk-theme-name=\"Arc-Dark\"\ngtk-icon-theme-name=\"breeze-dark\"\ngtk-font-name=\"Sans 11\"\ngtk-cursor-theme-name=\"Breeze_Amber\"\ngtk-cursor-theme-size=0\ngtk-toolbar-style=GTK_TOOLBAR_BOTH_HORIZ\ngtk-toolbar-icon-size=GTK_ICON_SIZE_SMALL_TOOLBAR\ngtk-button-images=0\ngtk-menu-images=0\ngtk-enable-event-sounds=0\ngtk-enable-input-feedback-sounds=0\ngtk-xft-antialias=1\ngtk-xft-hinting=1\ngtk-xft-hintstyle=\"hintslight\"\ngtk-xft-rgba=\"rgb\"\n```\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-theme-name=Arc-Dark\ngtk-icon-theme-name=breeze-dark\ngtk-font-name=Sans 11\ngtk-cursor-theme-name=Breeze_Amber\ngtk-cursor-theme-size=0\ngtk-toolbar-style=GTK_TOOLBAR_BOTH_HORIZ\ngtk-toolbar-icon-size=GTK_ICON_SIZE_SMALL_TOOLBAR\ngtk-button-images=0\ngtk-menu-images=0\ngtk-enable-event-sounds=0\ngtk-enable-input-feedback-sounds=0\ngtk-xft-antialias=1\ngtk-xft-hinting=1\ngtk-xft-hintstyle=hintslight\ngtk-xft-rgba=rgb\n# gtk-decoration-layout=menu:close\n# gtk-application-prefer-dark-theme=1\n```\n\n"
    },
    {
      "title": "GDK バックエンド",
      "level": 2,
      "content": "GDK (GTK の抽象レイヤー) は GTK アプリケーションを表示するための複数のバックエンドをサポートしています。\n\n"
    },
    {
      "title": "Wayland バックエンド",
      "level": 3,
      "content": "GDK Wayland バックエンドは gtk3 及びそれ以降でのみサポートされており、Wayland ディスプレイサーバを使用する際のデフォルトバックエンドとなっています。\n\ngtk3 より前のバージョンの GTK を使っているアプリケーションは Wayland をサポートしておらず、X11 バックエンドを使って Wayland セッションで実行するために Xwayland を使う必要があります。\n\nWayland バックエンドを使用する際、一部の変数は settings.ini から source されません。 GSettings スキーマ org.gnome.desktop.interface 内に存在しているキーが、settings.ini の代わりにそこから読み込まれます。\n\nそのような変数の例は gtk-color-scheme と icon-theme です。Wayland 下で GTK アプリケーションにテーマを適用させるために、これらはキーを GSettings で設定しなければなりません。あるいは、テーマだけをカスタマイズすればよいのであれば、環境変数 GTK_THEME を使用できます。\n\nこれに関する詳細は、sway wiki の関連する記事を参照してください。\n\n"
    },
    {
      "title": "Xorg バックエンド",
      "level": 3,
      "content": "Xorg ディスプレイサーバが使用されている場合、バックエンドのデフォルトは自動的に x11 になります。\n\n環境変数 GDK_BACKEND=x11 を設定することで、Wayland セッション上で動作する GTK 3 アプリケーションに Xwayland を通して X11 バックエンドを使用するように強制することが可能です。\n\n"
    },
    {
      "title": "Broadway バックエンド",
      "level": 3,
      "content": "GDK Broadway バックエンドは HTML5 とウェブソケットを使って、ウェブブラウザに GTK アプリケーションを表示することをサポートしています。 [4]\n\nbroadwayd を使うときには、X と同じようにコロンを前に付けて、使用するディスプレイ番号を指定してください。デフォルトのディスプレイ番号は 0 です。\n\n```\n$ display_number=:5\n```\n\n次のコマンドで起動します。\n\n```\n$ broadwayd $display_number\n```\n\nデフォルトで使われるポートは:\n\n```\nport = 8080 + $display_number\n```\n\nブラウザで http://127.0.0.1:port を開いてください。\n\nアプリを起動するには:\n\n```\n$ GDK_BACKEND=broadway BROADWAY_DISPLAY=$display_number <<application>>\n```\n\nまた、アドレスやポートを設定することも可能です:\n\n```\n$ broadwayd --port $port_number --address $address $display_number\n```\n\n"
    },
    {
      "title": "GTK 2 と GTK 3 アプリケーションでテーマが異なる",
      "level": 3,
      "content": "通常、選択したテーマが GTK 2 と GTK 3 の両方をサポートしている場合、GTK 2 と GTK 3 アプリケーションの両方にテーマが適用されます。選択したテーマが GTK 2 しかサポートしてない場合、GTK 2 アプリケーションにはそのテーマが使われ、GTK 3 アプリケーションにはデフォルトの GTK テーマが使われます。選択したテーマが GTK 3 しかサポートしていない場合、GTK 3 アプリケーションにはそのテーマが使われ、GTK 2 アプリケーションにはデフォルトの GTK テーマが使われます。UI の外観を統一するために GTK 2 と GTK 3 両方をサポートしているテーマを使うと一番良い結果が得られます。\n\nインストールしたテーマでどれが GTK 2 と GTK 3 両方のバージョンを持っているか調べるには次のコマンドを使って下さい (空白が含まれている名前はひっかかりません):\n\n```\nfind $(find ~/.themes /usr/share/themes/ -wholename \"*/gtk-3.0\" | sed -e \"s/^\\(.*\\)\\/gtk-3.0$/\\1/\") -wholename \"*/gtk-2.0\" | sed -e \"s/.*\\/\\(.*\\)\\/gtk-2.0/\\1\"/\n```\n\n"
    },
    {
      "title": "root アプリケーションにテーマが適用されない",
      "level": 3,
      "content": "ユーザーテーマファイル ($XDG_CONFIG_HOME/gtk-3.0/settings.ini, ~/.gtkrc-2.0) は他のアカウントからは読み込まれないため、選択したテーマは root で動かしている X アプリケーションには適用されません。以下のような解決方法があります:\n\n- シンボリックリンクを作成してください。例:\n\n```\n# ln -s $HOME/.gtkrc-2.0 /etc/gtk-2.0/gtkrc\n# ln -s $HOME/.config/gtk-3.0/settings.ini /etc/gtk-3.0/settings.ini\n```\n\n- システム全体にテーマファイルを設定: /etc/gtk-3.0/settings.ini (GTK 3) or /etc/gtk-2.0/gtkrc (GTK 2)\n- テーマを root で設定:\n\n```\n# lxappearance\n```\n\n- 設定デーモンを使用 (ほとんどのデスクトップ環境では設定デーモンが使われています)。デスクトップに依存しない XSettings を使うデーモンは xsettingsd-gitAUR でインストールできます。\n\n"
    },
    {
      "title": "クライアントサイドデコレーション",
      "level": 3,
      "content": "GTK 3.12 から クライアントサイドデコレーション が導入されており、タイトルバーはウィンドウマネージャから取り去られています。これによって タイトルバーが二重になる、タイトルバーが全く表示されない、コンポジットを有効にした場合に 影が二重に表示される などの問題が発生することがあります。\n\n(タイル型ウィンドウマネージャを使っている場合などに発生する) ウィンドウの周りの影と枠を消すには、以下のファイルを作成してください:\n\n```\n~/.config/gtk-3.0/gtk.css\n```\n\n```\n.window-frame, .window-frame:backdrop {\n box-shadow: 0 0 0 black;\n border-style: none;\n margin: 0;\n border-radius: 0;\n}\n\n.titlebar {\n border-radius: 0;\n}\n\n.window-frame.csd.popup {\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2), 0 0 0 1px rgba(0, 0, 0, 0.13);\n}\n\n.header-bar {\n  background-image: none;\n  background-color: #ededed;\n  box-shadow: none;\n}\n/* タイトルが二重になるのが気に食わない場合は、これを使うと良いでしょう。\nGtkLabel.title {\n    opacity: 0;\n}*/\n```\n\n視覚的な問題が続く場合、ここ[5]で説明されているように GTK Inspector を使って問題のある要素を探すと良いでしょう。\n\nヘッダーバーのボタンを調整するには、gtk-decoration-layout の設定を使います [6]。以下の例では全てのボタンを削除します:\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\ngtk-decoration-layout=menu:\n```\n\nクライアント側の装飾も無くすには、装飾をデフォルトで無効化するパッチが含まれている gtk3-classicAUR を使うことができます。クライアント側の装飾を有効化するには、GTK_CSD を環境変数に任意の値を設定してください。\n\nあるいは、gtk3-nocsd-gitAUR を使うこともできます。詳細は README を見てください。\n\n"
    },
    {
      "title": "セディーユ ć/Ć ではなく ç/Ç が使われる",
      "level": 3,
      "content": "Xcompose を使用した解決方法が [7] や [8] に載っています (US 国際レイアウト)。\n\n"
    },
    {
      "title": "accessibility bus に関する警告を表示させない",
      "level": 3,
      "content": "Gnome Accessibility 機能を使用していない場合、以下のような警告が発生することがあります:\n\n```\nWARNING **: Couldn't connect to accessibility bus:\n```\n\nこれらの警告を消すには、NO_AT_BRIDGE=1 を設定してプログラムを実行するか、それをグローバルな環境変数として設定してください。\n\n"
    },
    {
      "title": "タイトルバーの背景色がおかしい",
      "level": 3,
      "content": "GTK テーマの背景色に擬態するウィンドウデコレーションテーマを使用するウィンドウマネージャを使っている場合、GTK 3 アプリケーションでタイトルバーの色がアプリケーションの色と完全に食い違って表示されることがあります。対応策としては、以下のファイルを作成してください:\n\n```\n~/.config/gtk-3.0/gtk.css\n```\n\n```\n/* 背景色を常に使用する */\nGtkWindow {\n    background-color: @theme_bg_color;\n}\n\n/* ツールチップの背景色のオーバーライドを修正する */\n.tooltip {\n    background-color: rgba(0, 0, 0, 0.8);\n}\n\n.tooltip * {\n    background-color: transparent;\n}\n\n/* Nautilus デスクトップのウィンドウの背景色のオーバーライドを修正する */\nNautilusWindow {\n     background-color: transparent; \n}\n```\n\n"
    },
    {
      "title": "タイル型ウィンドウマネージャでフォーカスイベントがおかしい",
      "level": 3,
      "content": "GDK_CORE_DEVICE_EVENTS=1 を定義して xinput2 の代わりに GTK2 のスタイル入力を使うようにしてください [10]。\n\n"
    },
    {
      "title": "GTK 2 のファイルダイアログのサムネイル",
      "level": 3,
      "content": "gtk2-patched-filechooser-icon-viewAUR と gtk3-patched-filechooser-icon-viewAUR をインストールすることで GTK のファイル選択ダイアログで、リストの代わりにサムネイルでファイルを閲覧するオプションが作られます。\n\n"
    },
    {
      "title": "ボタンとメニューのアイコン",
      "level": 3,
      "content": "Table content:\nこの記事またはセクションの正確性には問題があります。 理由: 問題を説明してください。GDM が使用されている場合、GNOME は settings.ini を無視します。 (議論: トーク:GTK#)\n\nGNOME の Wayland セッション内の一部のアプリケーションで発生します。gtk3-patched-filechooser-icon-viewAUR がファイルが間違って設定されています。これは、他の GTK ベースのデスクトップ環境を試したときに発生する可能性があります。以下が、問題のある値です:\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-button-images=1\ngtk-menu-images=1\n```\n\nこれらの値を 0 に設定するか、ファイルを削除して GNOME のデフォルト設定を使用してください。\n\n"
    },
    {
      "title": "GTK 3 で polkit を使用しない",
      "level": 3,
      "content": "GTK 3 は印刷に必要な colord で polkit に依存しています。ただし印刷自体は polkit をインストールしていなくても可能です。少なくとも、モノクロ印刷と、パッケージバージョン gtk3-print-backends=3.22.19-2 と colord=1.4.1-1 で機能します。\n\n"
    },
    {
      "title": "一部の GTK 2 テーマで UI のカラーパレットしか変化しない",
      "level": 3,
      "content": "GTK 2 のテーマによっては、UI のコントロールがデフォルトの Raleigh のままで、カラーパレットしか変わらないことがあります。原因はテーマが GTK 2 の Murrine エンジンを必要としているためです (GTK 2 プログラムは標準エラー出力にそのことを吐き出します)。gtk-engine-murrine パッケージをインストールしてください。\n\n"
    },
    {
      "title": "GTK file chooser にパッチを適用して通常のタイプを先に使用する",
      "level": 3,
      "content": "GTK file chooser は、GNOME Files と同じ先行検索機能を使用します。これは非常に煩わしくなる可能性があり、他のデスクトップ環境とうまく適合しません。\n\n一部のアプリケーションは XDG デスクトップ ポータル をサポートしているため、アプリケーションで Native file chooser を使用できます。それが機能しない場合は、たとえば gtk3-classicAUR などのパッチされた GTK を使用して先行入力機能を復元できます。\n\n"
    },
    {
      "title": "GTK 4 アプリケーションの文字がぼやける、または正しく表示されない",
      "level": 3,
      "content": "GTK 4 は、フォントのレンダリング時にヒントを出さずにグレースケールのアンチエイリアシングを行うように変更しました。GTK 3 の挙動の一部を復元する設定が利用できます [11]。HiDPI スクリーン以外に対しては、(2023年8月現在) この設定はデフォルトでオンになっています。これにより、ほとんどのユーザーにとっては良い結果が得られるはずです。サブピクセル・アンチエイリアシングは利用できません。\n\n```\n~/.config/gtk-4.0/settings.ini\n```\n\n```\n[Settings]\ngtk-hint-font-metrics=1\n```\n\n"
    },
    {
      "title": "GTK 4 アプリケーションが遅い",
      "level": 3,
      "content": "GTK は新しい GTK レンダラーである ngl (後のバージョンでは vulkan) に移行しました。これは古い gl レンダラーよりもパフォーマンスが悪いので (#6438、#6682、#6644、#6324、その他のイシューもある可能性あり)、GTK 4 アプリケーションが以前よりも重く、多くのリソースを消費してしまう場合があります。\n\n以下の環境変数を設定することで、レンダラーの設定を元に戻すことができます:\n\n```\nGSK_RENDERER=gl\nGDK_DEBUG=gl-no-fractional\n```\n\n"
    },
    {
      "title": "GTK4 でのレンダリングとスケーリングの問題",
      "level": 3,
      "content": "gtk4 バージョン 4.15.3 以降、amdvlk を使用していると ウィンドウの周りに黒い境界が現れ、カーソルが異常に大きくなる問題が報告されています。\n\nこれは、amdvlk を vulkan-radeon に置き換えることで解決します。また、一部のユーザーは GSK_RENDERER=ngl 環境変数を設定することでも問題が解決したと報告しています。\n\n"
    },
    {
      "title": "NVIDIA Optimus 環境で dGPU を使用する GTK4 アプリケーション",
      "level": 3,
      "content": "最近の GTK4 バージョンは vulkan レンダラーを使用しています。これは NVIDIA dGPU で問題を引き起こします。GTK はデバイス列挙時に利用可能な最初の GPU を選択し、さらに NVIDIA は通常、dGPU を最初に列挙するため、NVIDIA dGPU がデフォルトで使用されます。今のところの最も信頼性の高い解決法は、OpenGL ベースのレンダラーに戻すことです。GSK_RENDERER=ngl 環境変数 (あるいは古い GL バックエンドの GSK_RENDERER=gl。こちらのほうがうまく動く場合があります。) を設定することで OpenGL レンダラーを使用できます。\n\nあるいは、GDK_VULKAN_DEVICE=device_index 環境変数を設定してください。正しいデバイスインデックスを調べるには GDK_VULKAN_DEVICE=list を設定して GTK アプリケーションを実行してください。この方法には、アプリケーションの起動時と終了時に dGPU を使用してしまうという欠点があり、MUX スイッチを使用して dGPU のみのモードに切り替える場合に何らかの形で問題が発生する可能性が高いです。\n\n最後は、__NV_PRIME_RENDER_OFFLOAD=1 __VK_LAYER_NV_optimus=non_NVIDIA_only 環境変数を使って、Vulkan のデバイス列挙で dGPU を最後に置くように NVIDIA ドライバを設定する方法です。この方法はうまく行きはしますが、この環境変数をグローバルに設定するのは非常に悪いアイデアです。なぜなら、この環境変数を設定すると、全ての OpenGL アプリケーションが dGPU を使うようになるからです (__NV_PRIME_RENDER_OFFLOAD=1 が設定されている場合に限り、__VK_LAYER_NV_optimus=non_NVIDIA_only は反映されます。前者の環境変数が設定されていると、OpenGL アプリケーションは dGPU を使うようになるのです。)。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- GTK 公式ウェブサイト\n- GTK についての Wikipedia の記事\n\n"
    }
  ]
}
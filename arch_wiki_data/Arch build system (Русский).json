{
  "title": "Arch build system (Русский)",
  "url": "https://wiki.archlinux.org/title/Arch_build_system_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ссылки по теме\n\n- Стандарты создания пакетов для Arch\n- Пользовательский репозиторий Arch\n- Создание пакетов\n- Ядро/Система сборки Arch\n- makepkg (Русский)\n- Официальные репозитории\n- pacman (Русский)\n- PKGBUILD (Русский)\n- Patching packages\n\nСистема сборки Arch (Arch build system, ABS) — схожая с портами система сборки программных пакетов из исходного кода. В отличие от pacman, который является инструментом управления двоичными пакетами, система сборки Arch — набор утилит для компилирования исходников в устанавливаемые .pkg.tar.zst пакеты.\n\nПорты используются в ОС семейства BSD для автоматизации процесса сборки программ из файлов с исходным кодом. Порты помогают загружать, распаковывать, патчить, компилировать и устанавливать программы. Сам по себе порт является небольшим каталогом на компьютере пользователя, название которого совпадает с названием устанавливаемой программы. Этот каталог содержит файлы с инструкциями по установке и сборке программ. Благодаря этому установка сильно упрощается: как правило, необходимо лишь выполнить команду make или make install clean в каталоге порта.\n\nКонцепция системы сборки Arch во многом похожа. Она включает в себя коллекцию git-репозиториев для каждого пакета, доступного в Arch Linux. Каждый репозиторий содержит файл PKGBUILD (и иногда некоторые другие файлы), но в них нет ни исходников, ни двоичных файлов программ. При выполнении команды makepkg внутри каталога исходники программы загружаются и компилируются в двоичные файлы, которые затем упаковываются в пакет. После этого можно воспользоваться pacman, чтобы установить данный пакет в систему.\n\n"
    },
    {
      "title": "Инструменты",
      "level": 2,
      "content": "Система сборки Arch опирается на несколько компонентов и инструментов, которые используются в процессе создания пакетов:\n\n"
    },
    {
      "title": "Структура репозитория",
      "level": 3,
      "content": "Файлы PKGBUILD для пакетов из официальных репозиториев core, extra, core-testing и extra-testing хранятся на Arch Linux Gitlab.\n\nКаждый пакет находится в отдельном git-репозитории в пространстве имён archlinux/packaging/packages. В каждом репозитории есть файл PKGBUILD и файлы, используемые в официальных сборках. Также там можно найти некоторые файлы, которые используются разработчиками для процесса сборки.\n\nНапример, дерево каталогов для acl выглядит следующим образом:\n\n```\nacl\n├── keys\n│   └── pgp\n│       ├── 259B3792B3D6D319212CC4DCD5BF9FEB0313653A.asc\n│       ├── 600CD204FBCEA418BD2CA74F154343260542DF34.asc\n│       └── B902B5271325F892AC251AD441633B9FE837F581.asc\n└── PKGBUILD\n```\n\nИсходного кода пакета здесь нет. Вместо этого файл PKGBUILD содержит URL, из которого исходный код будет загружен во время сборки.\n\n"
    },
    {
      "title": "Способы применения",
      "level": 2,
      "content": "Система сборки Arch позволяет автоматизировать некоторые задачи, связанные с компиляцией из исходников. Например:\n\n- Компиляция или перекомпиляция пакета;\n- Сборка из исходных кодов и установка программ, для которых ещё нет официального пакета (см. Создание пакетов);\n- Изменение существующих пакетов под свои нужды (включение или отключение опций, внесение исправлений);\n- Перестройка всей системы с использованием новых флагов компиляции \"à la FreeBSD\";\n- Чистая сборка и установка собственного ядра (см. Ядро#Компиляция);\n- Создание модулей для вашего собственного ядра;\n- Компиляция и установка новой/старой/beta/devel версии Arch-пакета с помощью редактирования номера версии в PKGBUILD.\n\n"
    },
    {
      "title": "Получение PKGBUILD",
      "level": 3,
      "content": "Для получения файла PKGBUILD можно использовать инструмент pkgctl или напрямую Git.\n\n"
    },
    {
      "title": "С помощью pkgctl",
      "level": 4,
      "content": "Установите пакет devtools, который предоставляет команду pkgctl — инструмент для работы с исходными файлами пакетов Arch Linux с использованием Git.\n\nЧтобы склонировать git-репозиторий с актуальными исходными файлами пакета с помощью pkgctl, выполните:\n\n```\n$ pkgctl repo clone название-пакета\n```\n\nФраза «исходные файлы пакета» означает файл PKGBUILD и, возможно, некоторые другие необходимые для сборки файлы, такие как ключи. То есть это основные файлы, которые требуются для системы сборки Arch. Исходники оригинальной программы, например файлы C или Python, сюда не относятся.\n\nМожно получить не только актуальные исходные файлы пакета, но и их предыдущие версии. Кроме того, вы можете использовать любые команды git для получения более старой версии пакета или для отслеживания пользовательских изменений.\n\nДля получения определённой версии пакета можно использовать примерно такую команду:\n\n```\n$ pkgctl repo clone --switch=\"2:1.19.5-1\" go\n```\n\nСмотрите pkgctl-repo-clone(1) для более подробной информации.\n\n"
    },
    {
      "title": "С помощью git напрямую",
      "level": 4,
      "content": "Используйте такую команду:\n\n```\n$ git clone https://gitlab.archlinux.org/archlinux/packaging/packages/название-пакета.git\n```\n\nНапример, для получения исходных файлов пакета apache:\n\n```\n$ git clone https://gitlab.archlinux.org/archlinux/packaging/packages/apache.git\n```\n\n"
    },
    {
      "title": "Сборка пакета",
      "level": 3,
      "content": "Перед сборкой пакета из файла PKGBUILD настройте makepkg в соответствии с указаниями из раздела makepkg#Настройка.\n\nСкопируйте каталог с файлом PKGBUILD в другое место, отредактируйте его, если необходимо, после чего соберите пакет и установите его в систему, как описано в разделе makepkg#Использование.\n\n"
    },
    {
      "title": "Сохранение изменённых пакетов",
      "level": 3,
      "content": "При первом же обновлении системы pacman заменит модифицированный вами пакет на стандартный пакет с таким же названием из официальных репозиториев. Ниже описано, как этого не допустить.\n\nДобавьте параметр groups в PKGBUILD пакета и укажите в нём группу modified.\n\n```\nPKGBUILD\n```\n\n```\ngroups=('modified')\n```\n\nДобавьте эту группу в раздел IgnoreGroup файла /etc/pacman.conf.\n\n```\n/etc/pacman.conf\n```\n\n```\nIgnoreGroup = modified\n```\n\nЕсли в официальных репозиториях появится новая версия этого пакета, то во время обновления системы pacman напечатает замечание, что он пропускает пакет, поскольку тот находится в разделе IgnoreGroup. После этого необходимо вручную обновить и пересобрать модифицированную версию пакета, чтобы ваша система не оказалась \"частично обновлённой\".\n\n"
    },
    {
      "title": "Другие инструменты",
      "level": 2,
      "content": "- pbget — получение файлов PKGBUILD для конкретных пакетов прямо из веб-интерфейса. Также работает для AUR.\n\n"
    }
  ]
}
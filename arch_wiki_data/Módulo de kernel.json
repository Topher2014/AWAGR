{
  "title": "Módulo de kernel",
  "url": "https://wiki.archlinux.org/title/M%C3%B3dulo_de_kernel",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Depuração de inicialização\n- Kernel\n- Parâmetros do kernel\n- Compile kernel module\n\nMódulos de Kernel são peças de código que podem ser carregadas e descarregadas no kernel de acordo com a demanda. Elas estendem a funcionalidade do kernel sem a necessidade de reinicialização do sistema.\n\nPara criar um módulo de kernel, você pode ler The Linux Kernel Module Programming Guide (inglês). Um módulo pode ser configurado como para executar de modo embutido ao kernel ou ser carregado separadamente. Para carregar ou remover um módulo dinamicamente, ele deve ser configurado como em um módulo carregável na configuração do kernel (a linha relacionada ao módulo exibirá a letra M).\n\n"
    },
    {
      "title": "Obtendo informações",
      "level": 2,
      "content": "Módulos são gravados em /usr/lib/modules/versão_do_kernel. O comando uname -r pode ser usado para obter a atual versão do kernel em execução.\n\nPara exibir quais módulos do kernel estão atualmente carregados:\n\n```\n$ lsmod\n```\n\nPara exibir informação sobre um módulo:\n\n```\n$ modinfo nome_do_módulo\n```\n\nPara listar opções que estão definidas para um módulo carregado:\n\n```\n$ systool -v -m nome_do_módulo\n```\n\nPara mostrar a configuração de modo mais compreensível de todos os módulos:\n\n```\n$ modprobe -c | less\n```\n\nPara exibir a configuração de um módulo em particular:\n\n```\n$ modprobe -c | grep nome_do_módulo\n```\n\nListar as dependências de um módulo (ou alias), incluindo o módulo em si:\n\n```\n$ modprobe --show-depends nome_do_módulo\n```\n\n"
    },
    {
      "title": "Carregamento automático de módulos com systemd",
      "level": 2,
      "content": "Hoje, todos os módulos necessários ao funcionamento do sistema são automaticamente gerenciados por udev, então se não houver necessidade de usar quaisquer módulos de kernel adicionais, não há necessidade de acrescentar módulos que deverão ser carregados na inicialização do sistema em qualquer arquivo de configuração. Entretanto, existem casos onde você pode querer adicionar um módulo extra durante o processo de inicialização do sistema, ou acrescentá-lo numa lista negra (blacklist) para que seu computador funcione adequadamente.\n\nMódulos de kernel podem ser explicitamente listados em arquivos dentro de /etc/modules-load.d/ para que o systemd os carregue durante a inicialização do sistema. Cada arquivo de configuração é nomeado no estilo de /etc/modules-load.d/<programa>.conf. Arquivos de configuração simplesmente contém uma lista de módulos de kernel a serem carregados, separados linha a linha. Linhas vazias e linhas cujo primeiro caractere sem espaço em branco seja # ou ; são ignoradas.\n\n```\n/etc/modules-load.d/virtio-net.conf\n```\n\n```\n# Carrega virtio_net.ko na inicialização\nvirtio_net\n```\n\nVeja modules-load.d(5) para mais detalhes.\n\n"
    },
    {
      "title": "Manuseio de módulos de kernel",
      "level": 2,
      "content": "Módulos de kernel são manuseados por ferramentas fornecidas pelo pacote kmod. Você pode usar essas ferramentas manualmente.\n\nPara carregar um módulo:\n\n```\n# modprobe nome_do_módulo\n```\n\nPara carregar um módulo pelo seu nome de arquivo (isto é, algum que não esteja instalado em /usr/lib/modules/$(uname -r)/):\n\n```\n# insmod nome_de_arquivo [args]\n```\n\nPara descarregar um módulo:\n\n```\n# modprobe -r nome_do_módulo\n```\n\nOu alternativamente:\n\n```\n# rmmod nome_do_módulo\n```\n\n"
    },
    {
      "title": "Opções de configuração de módulos",
      "level": 2,
      "content": "Para passar um parâmetro para um módulo de kernel, você passa-o manualmente com modprobe ou assegura certos parâmetros que sempre serão aplicados usando um arquivo de configuração do modprobe, ou ainda usando a linha de comando do kernel.\n\n"
    },
    {
      "title": "Carregá-lo manualmente usando modprobe",
      "level": 3,
      "content": "A mais básica forma de passar parâmetros para um módulo é através do comando modprobe. Parâmetros são especificados em linha de comando usando simples valores key=value:\n\n```\n# modprobe nome_do_módulo nome_do_parâmetro=valor_do_parâmetro\n```\n\n"
    },
    {
      "title": "Usando arquivos em /etc/modprobe.d/",
      "level": 3,
      "content": "Arquivos no diretório /etc/modprobe.d/ podem ser usados para passar configurações do módulo ao udev, o qual usará modprobe para gerenciar o carregamento de módulos durante a inicialização do sistema. Arquivos de configuração neste diretório podem ter qualquer nome, desde termine com a extensão .conf. A sintaxe é:\n\n```\n/etc/modprobe.d/myfilename.conf\n```\n\n```\noptions nome_do_módulo nome_do_parâmetro=valor_do_parâmetro\n```\n\nPor exemplo:\n\n```\n/etc/modprobe.d/thinkfan.conf\n```\n\n```\n# Em ThinkPads, a daemon 'thinkfan' permite controlar a velocidade da ventoinha\noptions thinkpad_acpi fan_control=1\n```\n\n"
    },
    {
      "title": "Usando a linha de comando do kernel",
      "level": 3,
      "content": "Se o módulo estiver embutido dentro do kernel, você pode também passar opções ao módulo usando a linha de comando do kernel. Para todos os gerenciadores de boot comuns, a seguinte sintaxe está correta:\n\n```\nnome_do_módulo.nome_do_parâmetro=valor_do_parâmetro\n```\n\nPor exemplo:\n\n```\nthinkpad_acpi.fan_control=1\n```\n\nSimplesmente adicione isto à linha de comando do kernel através do seu gerenciador de boot, como descrito em Parâmetros do kernel.\n\n"
    },
    {
      "title": "Aliasing",
      "level": 2,
      "content": "Aliasing é atribuir apelido (alias) a um módulo de kernel. Por exemplo: alias meu-mód nome_de_módulo_realmente_longo significa que você pode usar modprobe meu-mód ao invés de modprobe nome_de_módulo_realmente_longo. Você pode ainda usar caracteres curingas no estilo do shell, então alias meu-mód* nome_de_módulo_realmente_longo significa que modprobe meu-mód-alguma_coisa tem o mesmo efeito. Criar um alias:\n\n```\n/etc/modprobe.d/myalias.conf\n```\n\n```\nalias meu-mód nome_de_módulo_realmente_longo\n```\n\nAlguns módulos tem aliases que são automaticamente carregadas quando são necessárias por uma aplicação. Desativar estes aliases pode evitar que que o módulo seja carregado automaticamente, mas o mesmo ainda poderá ser carregado manualmente.\n\n```\n/etc/modprobe.d/modprobe.conf\n```\n\n```\n# Evita o carregamento automático do Bluetooth\nalias net-pf-31 off\n```\n\n"
    },
    {
      "title": "Adicionar um módulo em uma lista negra (Blacklisting)",
      "level": 2,
      "content": "Blacklisting, no contexto de módulos de kernel, é um mecanismo de evitar que módulos de kernel sejam carregados. Isto pode ser útil se, por exemplo, o hardware associado a ele não seja usado, ou se carregar seu módulo cause problemas: por exemplo, pode haver dois módulos de kernel tentando controlar a mesma parte do hardware, e carregá-los juntos resulta em conflito.\n\nAlguns módulos são parte da initramfs. mkinitcpio -M irá mostrar todos os módulos automaticamente detectados: para evitar que initramfs carregue alguns deste módulos, adicione-os a uma lista negra com um arquivo .conf dentro de /etc/modprobe.d e ela deverá ser adicionada pelo hook modconf durante a criação da imagem. Executar mkinitcpio -v irá listar todos os módulos puxados por diversos hooks (por exemplo, hook filesystems, hook block, etc.). Lembre de adicionar este arquivo .conf à matriz FILES em /etc/mkinitcpio.conf, caso você não tenha o hook modconf em sua matriz HOOKS (por exemplo, se você não usa a configuração padrão), e uma vez que você adicionar estes módulos à lista negra, gere novamente o initramfs e reinicie o sistema em seguida.\n\n"
    },
    {
      "title": "Usando arquivos em /etc/modprobe.d/",
      "level": 3,
      "content": "Crie um arquivo .conf dentro de /etc/modprobe.d/ e acrescente uma linha para cada módulo que desejar colocá-lo em lista negra, usando a palavra-chave blacklist. Se, por exemplo, desejar evitar que o módulo pcspkr seja carregado:\n\n```\n/etc/modprobe.d/nobeep.conf\n```\n\n```\n# Não carregar o módulo 'pcspkr' durante a inicialização.\nblacklist pcspkr\n```\n\nNote: Contudo, há uma solução para este comportamento; o comando install instrui modprobe a executar um comando personalizado ao invés de normalmente inserir o módulo no kernel, então é possível forçar o módulo a sempre falhar no seu carregamento, com:\n\nContudo, há uma solução para este comportamento; o comando install instrui modprobe a executar um comando personalizado ao invés de normalmente inserir o módulo no kernel, então é possível forçar o módulo a sempre falhar no seu carregamento, com:\n\n```\n/etc/modprobe.d/blacklist.conf\n```\n\n```\n...\ninstall nome_do_módulo /bin/true\n...\n```\n\n"
    },
    {
      "title": "Usando a linha de comando do kernel",
      "level": 3,
      "content": "Você pode também adicionar módulos à lista negra a partir do gerenciador de boot.\n\nSimplesmente adicione module_blacklist=modulo1,modulo2,modulo3 para a linha de comando do kernel em seu gerenciador de boot, como descrito em Parâmetros do kernel.\n\n"
    },
    {
      "title": "Módulos não podem ser carregados",
      "level": 3,
      "content": "No caso de algum módulo específico não ser carregado e o log de inicialização (acessível com journalctl -b) dizer que o módulo está em lista negra (blacklisted), mas o diretório /etc/modprobe.d/ não exibir uma entrada correspondente, procure em outro diretório-fonte do modprobe /usr/lib/modprobe.d/ por entradas de blacklist.\n\nUm módulo não será carregado se a string \"vermagic\" contida dentro do módulo não corresponder com o valor do kernel em execução. Se houver conhecimento de que tal módulo seja compatível com o kernel em execução, a verificação \"vermagic\" poderá ser ignorada com modprobe --force-vermagic.\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- Disable PC speaker beep\n- Writing a WMI driver - uma introdução do LWM\n\n"
    }
  ]
}
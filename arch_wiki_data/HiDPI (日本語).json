{
  "title": "HiDPI (日本語)",
  "url": "https://wiki.archlinux.org/title/HiDPI_(%E6%97%A5%E6%9C%AC%E8%AA%9E)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- フォント設定\n\nHiDPI (High Dots Per Inch) ディスプレイとは、比較的小さい型で高解像度を誇るディスプレイのことで、Apple の \"Retina Display\" の名称でも知られています。Apple の製品やハイエンドの \"ultrabook\" でよく使われています。\n\n今のところ全てのソフトウェアが高解像度モードで上手く動作するわけではありません。以下では HiDPI の画面での作業を快適する一般的な設定を記載しています。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 デスクトップ環境 1.1 GNOME 1.1.1 分数スケーリング 1.1.1.1 Wayland 1.1.1.2 Xorg 1.1.2 テキストスケーリング 1.1.2.1 Xorg 上での GTK+ と Gnome Shell の要素の比較 1.2 KDE Plasma 1.2.1 固定サイズのトレイアイコン 1.3 Xfce 1.4 Cinnamon 1.5 Enlightenment\n- 2 X サーバー\n- 3 X Resources\n- 4 GUI ツールキット 4.1 Qt 5 4.2 GDK 3 (GTK+ 3) 4.3 GTK+ 2 4.4 Elementary (EFL)\n- 5 ブートマネージャ 5.1 GRUB 5.1.1 フレームバッファの解像度を低くする 5.1.2 GRUB フォントのサイズを変更する 5.2 systemd-boot\n- 6 アプリケーション 6.1 ブラウザ 6.1.1 Firefox 6.1.2 Chromium / Google Chrome 6.1.3 Opera 6.2 メールクライアント 6.2.1 Thunderbird 6.3 Wine アプリケーション 6.4 Skype 6.5 Spotify 6.6 Sublime Text 3 6.7 IntelliJ IDEA 6.8 NetBeans 6.9 GIMP 2.8 6.10 Steam 6.10.1 公式 HiDPI サポート 6.10.2 非公式 6.11 Java アプリケーション 6.12 Mono アプリケーション 6.13 MATLAB 6.14 VirtualBox 6.15 Fcitx 6.16 他のアプリケーション\n- 7 マルチディスプレイ 7.1 外部ディスプレイ 7.2 複数の外部ディスプレイ 7.3 ミラーリング 7.4 ツール\n- 8 Linux コンソール\n- 9 参照\n\n- 1.1 GNOME 1.1.1 分数スケーリング 1.1.1.1 Wayland 1.1.1.2 Xorg 1.1.2 テキストスケーリング 1.1.2.1 Xorg 上での GTK+ と Gnome Shell の要素の比較\n- 1.2 KDE Plasma 1.2.1 固定サイズのトレイアイコン\n- 1.3 Xfce\n- 1.4 Cinnamon\n- 1.5 Enlightenment\n\n- 1.1.1 分数スケーリング 1.1.1.1 Wayland 1.1.1.2 Xorg\n- 1.1.2 テキストスケーリング 1.1.2.1 Xorg 上での GTK+ と Gnome Shell の要素の比較\n\n- 1.1.1.1 Wayland\n- 1.1.1.2 Xorg\n\n- 1.1.2.1 Xorg 上での GTK+ と Gnome Shell の要素の比較\n\n- 1.2.1 固定サイズのトレイアイコン\n\n- 4.1 Qt 5\n- 4.2 GDK 3 (GTK+ 3)\n- 4.3 GTK+ 2\n- 4.4 Elementary (EFL)\n\n- 5.1 GRUB 5.1.1 フレームバッファの解像度を低くする 5.1.2 GRUB フォントのサイズを変更する\n- 5.2 systemd-boot\n\n- 5.1.1 フレームバッファの解像度を低くする\n- 5.1.2 GRUB フォントのサイズを変更する\n\n- 6.1 ブラウザ 6.1.1 Firefox 6.1.2 Chromium / Google Chrome 6.1.3 Opera\n- 6.2 メールクライアント 6.2.1 Thunderbird\n- 6.3 Wine アプリケーション\n- 6.4 Skype\n- 6.5 Spotify\n- 6.6 Sublime Text 3\n- 6.7 IntelliJ IDEA\n- 6.8 NetBeans\n- 6.9 GIMP 2.8\n- 6.10 Steam 6.10.1 公式 HiDPI サポート 6.10.2 非公式\n- 6.11 Java アプリケーション\n- 6.12 Mono アプリケーション\n- 6.13 MATLAB\n- 6.14 VirtualBox\n- 6.15 Fcitx\n- 6.16 他のアプリケーション\n\n- 6.1.1 Firefox\n- 6.1.2 Chromium / Google Chrome\n- 6.1.3 Opera\n\n- 6.2.1 Thunderbird\n\n- 6.10.1 公式 HiDPI サポート\n- 6.10.2 非公式\n\n- 7.1 外部ディスプレイ\n- 7.2 複数の外部ディスプレイ\n- 7.3 ミラーリング\n- 7.4 ツール\n\n"
    },
    {
      "title": "GNOME",
      "level": 3,
      "content": "HiDPI を有効にするには、Settings > Devices > Displays から有効にするか、gsettings を使ってインターフェイスのスケールファクタを設定します:\n\n```\n$ gsettings set org.gnome.settings-daemon.plugins.xsettings overrides \"[{'Gdk/WindowScalingFactor', <2>}]\"\n$ gsettings set org.gnome.desktop.interface scaling-factor 2\n```\n\n設定をリセットしたいときは scaling-factor を 1 に設定してください。\n\n"
    },
    {
      "title": "分数スケーリング",
      "level": 4,
      "content": "scaling-factor でできることは 2, 3, etc の設定だけですが、特定の HiDPI ディスプレイや小さなスクリーン (小さなタブレットなど) には理想的ではないかもしれません。Wayland と Xorg の両方で分数スケーリングは可能ですが、そのプロセスは異なります。\n\n実験機能の分数スケーリングを有効化:\n\n```\n$ gsettings set org.gnome.mutter experimental-features \"['scale-monitor-framebuffer']\"\n```\n\nSettings > Devices > Displays から小数で設定できるようになります。\n\nscaling-factor と xrandr を組み合わせることで整数以外のスケールファクタが使えます。xrandr だけを使用したときのように TTF フォントが汚くなることはありません。\n\nまずは GNOME をスケールさせます。2で小さすぎる場合は3以上を使ってください。\n\n```\n$ gsettings set org.gnome.desktop.interface scaling-factor 2\n```\n\nそれから xrandr でズームアウトファクタを設定して小さくスケールします。まずは出力の名前を確認:\n\n```\n$ xrandr | grep -w connected | cut -d' ' -f1\n```\n\n```\neDP1\n```\n\n以下、確認できた値を --output で指定するようにしてください。ディスプレイが複数ある場合はそれぞれで個々にスケールを設定できます。\n\n1.2倍に拡大するには、以下のコマンドを実行:\n\n```\n$ xrandr --output eDP1 --scale 1.2x1.2\n```\n\nUI が大きすぎる場合、スケールを増やします:\n\n```\n$ xrandr --output eDP1 --scale 1.25x1.25\n```\n\nUI が小さすぎる場合、スケールを減らしてください。一番良い値を見つけるまで繰り返し実行してください。\n\n最後に、マウスがスクリーンを正しく使えるように設定する必要があります。スケール後の解像度を取得してください:\n\n```\n$ xrandr | grep eDP1\n```\n\n```\neDP1 connected primary 2304x1296+0+0 (normal left inverted right x axis y axis) 239mm x 134mm\n```\n\n確認できた値を使って以下のコマンドを実行:\n\n```\n$ xrandr --output eDP1 --panning 2304x1296\n```\n\n"
    },
    {
      "title": "テキストスケーリング",
      "level": 4,
      "content": "また、表示倍率を変更するだけでなく、テキストを個別に倍率変更することも可能です。これは Gnome Tweaks の Fonts > Scaling Factor に移動するか、gsettings を使うことで行えます。テキストのスケーリングファクターは整数である必要はないことに注意してください。\n\n```\n$ gsettings set org.gnome.desktop.interface text-scaling-factor 1.5\n```\n\n上記のようにテキストのスケーリングを調整することは、GNOME デスクトップの GTK+ 要素にのみ影響します。これで Wayland 上のすべてをカバーできるはずです。なぜなら、GNOME Shell UI (トップバー、ドック、アプリケーション・メニューなどを含む) は別途 St[リンク切れ 2021-11-11] ツールキットに依存しているためです。これは長年の問題で、Gnome Shell 3.35 以降では パッチ がマージされ、利用可能になっていることに注意してください。古いリリースでは、Xorg ユーザーは現在使用しているシェルテーマを手動で編集することで、Gnome シェルのスケーリング問題のほとんどを解決することができます。関連する CSS ファイルは通常 /usr/share/themes/YOUR-THEME/gnome-shell/gnome-shell.css に配置されています。ユーザーは、このファイル内のすべての \"font-size\" 要素を、ディスプレイのスケーリングに比例して大きくする必要があります(200%のスケーリングにはフォントサイズを2倍にするなど)たとえば、Adapta シェルテーマ用に編集した CSS ファイルのトップは、以下のようになります。\n\n```\nusr/share/themes/Adapta/gnome-shell/gnome-shell.css\n```\n\n```\nstage { font-size: 20pt; font-family: Roboto, Noto Sans, Sans-Serif; color: #263238; }\n```\n\nこれらの変更が保存されたら、別のテーマに切り替えて(たとえば、gnome-tweaks を使用して)、再度元に戻してアクティブにします。これで、トップバー、アプリケーションメニュー、カレンダー、およびその他のシェル要素が正しくスケーリングされるはずです。\n\n関連するシェルテーマの CSS ファイルを編集することに加えて、Xorg のユーザーは、開いているアプリケーションの上部にあるタイトルバーのフォントを増やしたい場合もあります。これは、dconf エディター (org > gnome > desktop > wm > preferences :: titlebar-font)を介して実行できます。 title-bar-uses-system-fonts オプションもオフにする必要があることに注意してください。または、gsettings を使用します:\n\n```\n$ gsettings set org.gnome.desktop.wm.preferences titlebar-font 'Cantarell Bold 22' ## Change as needed\n$ gsettings set org.gnome.desktop.wm.preferences titlebar-uses-system-font false\n```\n\n"
    },
    {
      "title": "KDE Plasma",
      "level": 3,
      "content": "KDE の設定を使ってフォント・アイコン・ウィジェットのスケーリングを調整できます。Qt と GTK+ 両方のアプリケーションに適用されます。\n\nフォント・ウィジェット・アイコン全てのスケーリングを変更するには:\n\n1. システム設定 → ディスプレイとモニター → ディスプレイの設定 → ディスプレイのスケール\n1. スライダーをドラッグして適当なサイズを設定してください。\n1. 再起動することで変更が適用されます。\n\nフォントのスケーリングだけ変更するには:\n\n1. システム設定 → フォント\n1. \"Force fonts DPI\" にチェックを入れて DPI レベルを適当な値に設定してください。新しく起動したアプリケーションから即座に変更が適用されます。Plasma デスクトップに変更を適用するには一度ログアウトする必要があります。\n\nアイコンのスケーリングだけ変更するには:\n\n1. System Settings → Icons → Advanced\n1. カテゴリごとに適切なアイコンサイズを選択してください。変更はすぐに適用されます。\n\n"
    },
    {
      "title": "固定サイズのトレイアイコン",
      "level": 4,
      "content": "Plasma は Qt のスケーリング設定をデフォルトでは無視するため、トレイアイコンはスケールしません。Plasma に Qt の設定を反映させるには、PLASMA_USE_QT_SCALING 環境変数を 1 に設定してください。\n\n"
    },
    {
      "title": "Xfce",
      "level": 3,
      "content": "Xfce の設定マネージャ→外観→フォントから DPI のパラメータを変更してください。Retina スクリーンでは 180 または 192 がぴったりです。正確な数字を得たいときは、$ xdpyinfo | grep resolution を実行して得た数字を2倍してください。\n\nシステムトレイのアイコンを拡大するには、システムトレイを右クリック (アイコンをクリックしないように、空きスペースや上部・下部のピクセルを右クリックしてください) → “Properties” → “Maximum icon size” を 32, 48, 64 などに設定してください。\n\n"
    },
    {
      "title": "Cinnamon",
      "level": 3,
      "content": "Cinnamon は 2.2 から HiDPI をサポートしています。GTK3 をリビルドしなくても、十分なサポートが得られます (例: ウィンドウの縁のサイズが正しく設定されます。Xfce では行われません)。\n\n"
    },
    {
      "title": "Enlightenment",
      "level": 3,
      "content": "E18 の場合、E 設定パネルを開いて下さい。Look → Scaling から、UI のスケール比を設定できます。MBPr 15\" のネイティブ解像度なら 1.2 が丁度です。\n\n"
    },
    {
      "title": "X サーバー",
      "level": 2,
      "content": "プログラムによっては物理的な横幅を使って DPI を検出します。例えば i3 (ソース) や Chromium (ソース) などが挙げられます。\n\nX サーバーがモニターの物理的な寸法を正しく検出できているか確認するには、次を実行 (xdpyinfo ユーティリティは xorg-xdpyinfo パッケージに含まれています):\n\n```\n$ xdpyinfo | grep -B 2 resolution\nscreen #0:\n  dimensions:    3200x1800 pixels (423x238 millimeters)\n  resolution:    192x192 dots per inch\n```\n\n上の例では 96 dpi の倍数を使うために (この場合 192 dpi)、少しだけ誤っている面積 (Dell XPS 9530 は 346mm x 194mm なのに 423mm x 328mm になっている) を使っています。これは正確な DPI を使うよりも良い場合が多く、例えば i3 では Pango のフォントレンダリングがパリッとします。\n\nxdpyinfo によって示された DPI が正しくない場合、修正方法は Xorg#画面サイズと DPI を見てください。\n\n"
    },
    {
      "title": "X Resources",
      "level": 2,
      "content": "X の設定をしてくれる GNOME, KDE, Xfce などのデスクトップ環境を使っていない場合、~/.Xresources で手動で Xft の DPI を設定できます:\n\n```\n~/.Xresources\n```\n\n```\nXft.dpi: 180\nXft.autohint: 0\nXft.lcdfilter:  lcddefault\nXft.hintstyle:  hintfull\nXft.hinting: 1\nXft.antialias: 1\nXft.rgba: rgb\n```\n\n~/.xinitrc に xrdb -merge ~/.Xresources と記述するなどして X の起動時に設定が正しくロードされるようにしてください (詳しくは Xresources を参照)。\n\n設定することでほとんどのツールキットやアプリケーションでフォントが正しく表示されるようになりますが、アイコンのサイズなどは変わりません。また、ツールキットのスケール (例: GDK_SCALE) と一緒に Xft.dpi を設定した場合、Firefox などのプログラムでインターフェイスの表示が大きくなりすぎることがあります。\n\n"
    },
    {
      "title": "Qt 5",
      "level": 3,
      "content": "X サーバーで DPI の値を変えられない場合でも、Qt アプリケーションには HiDPI でちゃんと表示されるようにする方法があります。\n\nQt 5.6 から、Qt 5 アプリケーションは QT_AUTO_SCREEN_SCALE_FACTOR 環境変数によって設定された画面 DPI を使用するようになりました。例えば /etc/profile.d/qt-hidpi.sh ファイルを作成し、以下を記述して実行可能属性を付与します:\n\n```\nexport QT_AUTO_SCREEN_SCALE_FACTOR=1\n```\n\nDPI の自動検知が上手くいかない場合、スケーリングをスクリーンごと (QT_SCREEN_SCALE_FACTORS)、あるいは全てのスクリーン (QT_SCALE_FACTOR) に手動で設定することができます。詳しくは Qt のブログ記事 を参照してください。\n\n手動でスクリーンファクタを設定した場合、QT_AUTO_SCREEN_SCALE_FACTOR=0 を設定しないと明示的に高 DPI を有効にしている一部のアプリケーションも2倍にスケールされてしまいます。このため KDE ではスケールの手動設定を無効にしています。\n\n- QT_SCALE_FACTOR はフォントを拡大します。\n- QT_SCREEN_SCALE_FACTORS はフォントを拡大しません。\n\n他のツールキットでも設定を適用するために xrdb でフォントの DPI を手動で設定していた場合、QT_SCALE_FACTORS はかなり巨大なフォントを表示するようになります。\n\n"
    },
    {
      "title": "GDK 3 (GTK+ 3)",
      "level": 3,
      "content": "GTK+ 3 アプリケーションで 2倍に UI エレメントを拡大するには:\n\n```\n$ export GDK_SCALE=2\n```\n\nテキストのスケーリングを戻すには:\n\n```\n$ export GDK_DPI_SCALE=0.5\n```\n\n"
    },
    {
      "title": "GTK+ 2",
      "level": 3,
      "content": "ツールキットによる UI エレメントの拡大は不可能ですが、oomox-gitAUR を使用することで HiDPI ディスプレイ用にあらかじめ拡大されたエレメントを使用するテーマを生成できます。\n\n"
    },
    {
      "title": "Elementary (EFL)",
      "level": 3,
      "content": "UI のエレメントを1.5倍に拡大するには:\n\n```\n$ export ELM_SCALE=1.5\n```\n\n詳しくは https://phab.enlightenment.org/w/elementary/ を参照。\n\n"
    },
    {
      "title": "フレームバッファの解像度を低くする",
      "level": 4,
      "content": "GRUB/ヒントとテクニック#フレームバッファの解像度を設定するを見てください。\n\n"
    },
    {
      "title": "GRUB フォントのサイズを変更する",
      "level": 4,
      "content": "大きなサイズのフォントを使用する方法があります。ttf-dejavu パッケージに含まれている DejaVu Sans Mono フォントでサイズが 36 の GRUB フォントを生成:\n\n```\n# grub-mkfont --output=/boot/grub/fonts/DejaVuSansMono36.pf2 --size=36 /usr/share/fonts/TTF/DejaVuSansMono.ttf\n```\n\n/etc/default/grub に GRUB_FONT 行を追加することで GRUB から生成したフォントを使用できます:\n\n```\n/etc/default/grub\n```\n\n```\nGRUB_FONT=/boot/grub/fonts/DejaVuSansMono36.pf2\n```\n\n最後に GRUB の設定を更新してください:\n\n```\n# grub-mkconfig -o /boot/grub/grub.cfg\n```\n\n"
    },
    {
      "title": "systemd-boot",
      "level": 3,
      "content": "​ 次の行を追加して bootctl update を実行すると、systemd-boot メニューのフォントサイズが大きくなります。 ​\n\n```\n/boot/loader/loader.conf\n```\n\n```\nconsole-mode 1\n```\n\n"
    },
    {
      "title": "Firefox",
      "level": 4,
      "content": "Firefox は GDK 3 (GTK+ 3) の設定を使用します。しかしながら GDK_SCALE では Firefox を完全にはスケールされず、小数値は使えません。代わりに GDK_DPI_SCALE を使用すると良いでしょう。\n\nGTK の設定を上書きしたい場合、Firefox の高度な設定のページ (about:config) を開いて layout.css.devPixelsPerPx パラメータを 2 に設定してください (2 は Retina スクリーンに合った数値です、必要に応じて数値を変更してください)。メニューや URL バーのフォントが小さい場合は userChrome.css ファイルを作成することで明示的にフォントサイズを設定できます (userChrome.css について詳しくは mozillaZine を参照):\n\n```\n~/.mozilla/firefox/<profile>/chrome/userChrome.css\n```\n\n```\n@namespace url(\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\");\n\n/* #tabbrowser-tabs, #navigator-toolbox, menuitem, menu, ... */\n* {\n    font-size: 15px !important;\n}\n\n/* exception for badge on adblocker */\n.toolbarbutton-badge {\n    font-size: 8px !important;\n}\n```\n\nRetina ディスプレイのような HiDPI ディスプレイを他のモニターと組み合わせて使っている場合、AutoHiDPI アドオンを使うことで有効なディスプレイに合わせて layout.css.devPixelsPerPx を自動的に調整できます。また、Firefox バージョン 49 から、ディレプレイの解像度にあわせて自動的にスケールするようになっています。\n\n"
    },
    {
      "title": "Chromium / Google Chrome",
      "level": 4,
      "content": "Chromium は GDK 3 (GTK+ 3) の設定を使用します。\n\n上書きしたい場合、--force-device-scale-factor フラグを使ってスケール値を設定してください。全てのコンテンツと ui、さらにタブやフォントサイズがスケールします。例:\n\n```\n$ chromium --force-device-scale-factor=2\n```\n\nこのオプションを使う場合、スケールファクター 1 が通常のスケーリングです。少数点を使うこともできます。\n\n変更を永続化したい場合、~/.config/chromium-flags.conf にフラグを追加してください (Chromium の場合):\n\n```\n~/.config/chromium-flags.conf\n```\n\n```\n--force-device-scale-factor=2\n```\n\nRetina ディスプレイのような HiDPI モニターと別のモニターを一緒に使用する場合、reszoom 拡張を使うことで使用しているディスプレイにあわせてズームレベルを自動的に調整することができます。\n\n"
    },
    {
      "title": "Opera",
      "level": 4,
      "content": "Opera は GDK 3 (GTK+ 3) の設定を使用します。\n\n上書きしたい場合、バージョン24から、--alt-high-dpi-setting=X コマンドラインオプションを使って Opera を起動することで DPI を変更することができます。X は希望の DPI に置き換えて下さい。例えば、--alt-high-dpi-setting=144 なら Opera は DPI が144だと認識します。新しいバージョンの opera ではフォントの DPI 設定を使って DPI を自動で検出します (KDE の場合: force font DPI の設定)。\n\n"
    },
    {
      "title": "Thunderbird",
      "level": 4,
      "content": "Firefox を見てください。about:config にアクセスするには、Edit → Preferences → Advanced → Config editor を開きます。\n\n"
    },
    {
      "title": "Wine アプリケーション",
      "level": 3,
      "content": "次を実行して、\"画面\"タブの\"画面の解像度\"設定を変更してください:\n\n```\n$ winecfg\n```\n\nフォントのサイズにだけ影響を与えます。\n\n"
    },
    {
      "title": "Skype",
      "level": 3,
      "content": "Skype for Linux (skypeforlinux-stable-binAUR) は GTK+ 3 を使用しています。\n\n"
    },
    {
      "title": "Spotify",
      "level": 3,
      "content": "Spotify はスケーリングファクタを指定して起動することができます。例:\n\n```\n$ spotify --force-device-scale-factor=1.5\n```\n\nSpotify の .desktop ファイルを上書きすることもできます。ファイルをコピーしてください:\n\n```\n$ cp /usr/share/applications/spotify.desktop ~/.local/share/applications/\n```\n\nそれからファイルを編集して --force-device-scale-factor オプションを追加してください:\n\n```\n[Desktop Entry]\nName=Spotify\nGenericName=Music Player\nComment=Spotify streaming music client\nIcon=spotify-client\nExec=spotify %U --force-device-scale-factor=1.5\nTryExec=spotify\nTerminal=false\nType=Application\nCategories=Audio;Music;Player;AudioVideo;\nMimeType=x-scheme-handler/spotify;\n```\n\n"
    },
    {
      "title": "Sublime Text 3",
      "level": 3,
      "content": "Sublime Text 3 はディスプレイスケーリングを完全にサポートしています。Preferences > Settings > User Settings から \"dpi_scale\": 2.0 を設定に追加してください [1]。\n\n"
    },
    {
      "title": "IntelliJ IDEA",
      "level": 3,
      "content": "IntelliJ IDEA の HiDPI サポートが機能しない場合、vmoptions ファイルに -Dhidpi=true を追加してください [2]:\n\n```\n/usr/share/intellij-idea-ultimate-edition/bin/idea.vmoptions\n/usr/share/intellij-idea-ultimate-edition/bin/idea64.vmoptions\n```\n\nもしくは、$HOME ディレクトリの .vmoptions ファイルに以下を追加します:\n\n```\necho -Dhidpi=true >> $HOME/.IdeaIC14/idea64.vmoptions\n```\n\n"
    },
    {
      "title": "NetBeans",
      "level": 3,
      "content": "Netbeans では --fontsize パラメータを使うことで起動時にインターフェイスのフォントのサイズを変更することができます。変更を永続的にするには、/usr/share/netbeans/etc/netbeans.conf ファイルを編集して netbeans_default_options プロパティに --fontsize パラメータを追加してください [3]。\n\nエディタのフォントサイズは Tools → Option → Fonts & Colors から変えられます。\n\n出力ウィンドウのフォントサイズは Tools → Options → Miscelaneous → Output から変えられます。\n\n"
    },
    {
      "title": "GIMP 2.8",
      "level": 3,
      "content": "GIMP の場合、HiDPI 対応のテーマを使用するか、既存のテーマの gtkrc を変更してください。例えば GimpToolPalette::tool-icon-size を dialog に設定します。\n\nHiDPI ディスプレイ用のテーマである gimp-hidpi も存在します。\n\n"
    },
    {
      "title": "公式 HiDPI サポート",
      "level": 4,
      "content": "2018年1月25日のベータプログラムから Steam は HiDPI をサポートし自動的に認識します。自動的に認識されない場合、GDK_SCALE=2 を使って適当なスケールファクタを設定してください。\n\n"
    },
    {
      "title": "非公式",
      "level": 4,
      "content": "HiDPI-Steam-Skin をインストールすることで Steam のインターフェイスのフォントサイズを大きくすることができます。完全ではありませんが、可読性は向上します。\n\nMetroSkin Unofficial Patch も HiDPI 環境の Linux で Steam を使う場合に役立ちます。\n\n"
    },
    {
      "title": "Java アプリケーション",
      "level": 3,
      "content": "AWT/Swing フレームワークを使用する Java アプリケーションは java を起動するときに sun.java2d.uiScale 変数を定義することでスケールを設定できます。例:\n\n```\n$ java -Dsun.java2d.uiScale=2 -jar some_application.jar\n```\n\n"
    },
    {
      "title": "Mono アプリケーション",
      "level": 3,
      "content": "Mono アプリケーションは GTK3 アプリケーションと同じようにスケールします [4]。\n\n"
    },
    {
      "title": "MATLAB",
      "level": 3,
      "content": "新しいバージョンの Matlab (R2017b) ではスケールファクタを設定できます:\n\n```\n>> s = settings;s.matlab.desktop.DisplayScaleFactor\n>> s.matlab.desktop.DisplayScaleFactor.PersonalValue = 2\n```\n\n設定を適用するには MATLAB の再起動が必要です。\n\n"
    },
    {
      "title": "VirtualBox",
      "level": 3,
      "content": "VirtualBox はシステム全体のスケーリングを仮想モニターにも適用するため、仮想マシンの最大解像度が小さくなってしまいます ([5] を参照)。\n\nスケーリングファクタの逆数を計算して VirtualBox を実行するときに新しいスケーリングファクタを手動で設定することで問題を解決できます。例:\n\n```\n$ QT_SCALE_FACTOR=0.5 VirtualBox --startvm vm-name\n```\n\n"
    },
    {
      "title": "Fcitx",
      "level": 3,
      "content": "Fcitx の preedit FontSize は ~/.config/fcitx/conf/fcitx-classic-ui.config で変更できます。\n\n"
    },
    {
      "title": "他のアプリケーション",
      "level": 3,
      "content": "run_scaled-gitAUR を使うことでアプリケーションをスケールすることができます (Xpra が内部的に使われています)。\n\n他にも、アプリケーションを VNC デスクトップでフルスクリーンで実行して、装飾を省かせるという方法があります。それからビューアを拡大します。Vncdesk (AUR の vncdesk-gitAUR でインストールできます) では、アプリケーションごとにデスクトップを設定することができます。vncdesk 2 などのシンプルなコマンドでサーバーとクライアントを起動します。\n\nx11vnc には実験的なオプションとして -appshare があり、アプリケーションウィンドウごとにビューアを開きます。\n\n"
    },
    {
      "title": "マルチディスプレイ",
      "level": 2,
      "content": "HiDPI の設定は全てのデスクトップに適用されるため HiDPI ではない外部ディスプレイには全てが大きく表示されてしまいます。\n\n"
    },
    {
      "title": "外部ディスプレイ",
      "level": 3,
      "content": "xrandr のスケールオプションを使って回避することができます。HiDPI の内部ディスプレイ (eDP-1) の右に HiDPI ではないモニター (DP-1) がある場合、次を実行:\n\n```\n$ xrandr --output eDP-1 --auto --output DP-1 --auto --scale 2x2 --right-of eDP-1\n```\n\n内部ディスプレイを拡張すると、外部ディスプレイに内部ディスプレイの一部が表示されることがあります。その場合、このスクリプト を使うなどしてポジションを手動で設定してください。\n\nマウスが画面の全体で使えないという問題が発生することもあります。これは 既知のバグ であり xserver-org のパッチがあります (もしくはパンするという方法もありますが、別の問題が発生する可能性もあります)。\n\n4k のノートパソコンの右に外付けの 1920x1080 モニターを縮小して右に表示させる例:\n\n```\n$ xrandr --output eDP-1 --auto --output HDMI-1 --auto --panning 3840x2160+3840+0 --scale 2x2 --right-of eDP-1\n```\n\nhidpi のモニターが AxB ピクセルで通常のモニターが CxD、そして [ExF] でスケールする場合、コマンドは以下のようになります:\n\n```\n$ xrandr --output eDP-1 --auto --output HDMI-1 --auto --panning [C*E]x[D*F]+[A]+0 --scale [E]x[F] --right-of eDP-1\n```\n\n"
    },
    {
      "title": "複数の外部ディスプレイ",
      "level": 3,
      "content": "外部ディスプレイが複数あって、DPI が異なるとスケーリングに問題が起こる場合があります。そのようなときは、代わりに HiDPI ディスプレイをダウンスケールしてみてください。例:\n\n```\nxrandr --output eDP1 --scale 0.5x0.5 --output DP2 --right-of eDP1 --output HDMI1 --right-of DP2\n```\n\nHiDPI ディスプレイをダウンスケールすると、HiDPI ディスプレイに表示されるフォントがぼやけますが、外部ディスプレイをアップスケールしたときに発生する滲みとは多少違います。どちらが良いか比較して決めてください。\n\n"
    },
    {
      "title": "ミラーリング",
      "level": 3,
      "content": "ディスプレイをミラーしたい場合、簡単にできます:\n\nHiDPI の解像度が AxB で、外部ディスプレイの解像度が CxD の場合:\n\n```\n$ xrandr --output HDMI --scale [A/C]x[B/D]\n```\n\n例えば QHD の場合 (3200/1920 = 1.66 と 1800/1200 = 1.5):\n\n```\n$ xrandr --output HDMI --scale 1.66x1.5\n```\n\nUHD から 1080p の場合 (3840/1920=2 2160/1080=2):\n\n```\n$ xrandr --output HDMI --scale 2x2\n```\n\nスケーリングによって画面が霞むときは、モニター設定で\"シャープネス\"パラメータを調整してください。\n\n"
    },
    {
      "title": "ツール",
      "level": 3,
      "content": "上記のようなコマンドを自動化するツールがいくつかあります。\n\n- このスクリプトは、非 HiDPI 外部ディスプレイを HiDPI 内部ディスプレイの上に拡張します。\n- xrandr-extend.\n- xlayoutdisplayAUR は xrandr の CLI フロントエンドで、正しい DPI を検出し設定します。 README\n\n"
    },
    {
      "title": "Linux コンソール",
      "level": 2,
      "content": "デフォルトのコンソールフォントでは hidpi ディスプレイでとても小さくなってしまいます。kbd パッケージに含まれている一番巨大なフォントは latarcyrheb-sun32 であり、(一時的に) 有効にするには:\n\n```\n$ setfont latarcyrheb-sun32\n```\n\nterminus-font など他のパッケージには大きいフォントとして ter-132n(normal) や ter-132b(bold) が含まれています。詳しくはフォント#コンソールフォントを見てください。\n\nフォントを変更した場合、他の仮想端末 (tty2-6) に切り替えたときに問題が発生することがあります。KMS の特定のモード (例: video=2560x1600@60) を強制的に使うように設定して再起動することで問題は解決します (使用している HiDPI ディスプレイのネイティブ解像度にあわせて設定してください)。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- Ultra HD 4K Linux Graphics Card Testing (2013年11月)\n- Understanding pixel density\n\n"
    }
  ]
}
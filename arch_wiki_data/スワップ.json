{
  "title": "スワップ",
  "url": "https://wiki.archlinux.org/title/%E3%82%B9%E3%83%AF%E3%83%83%E3%83%97",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "関連記事\n\n- fstab\n- ハイバネート\n- zswap\n- zram\n- ビデオメモリにスワップ\n- ZFS#スワップボリューム\n- Dm-crypt/スワップの暗号化\n\nこのページでは GNU/Linux でのスワップ領域とページングを紹介します。また、スワップパーティションとスワップファイルの作成と有効化について説明しています。\n\nAll about Linux swap space より:\n\nスワップのサポートは Linux カーネルにより提供され、ユーザスペースのユーティリティは util-linux パッケージに存在します。\n\n"
    },
    {
      "title": "目次",
      "level": 2,
      "content": "- 1 スワップ領域\n- 2 スワップパーティション 2.1 起動時に有効化する 2.2 スワップの無効化\n- 3 スワップファイル 3.1 スワップファイルの作成 3.1.1 スワップファイルの削除\n- 4 スワップの暗号化\n- 5 パフォーマンス 5.1 Swappiness 5.2 VFS cache pressure 5.3 優先度 5.4 ストライピング 5.5 Discard (トリム) 5.6 RAM 内の圧縮ブロックデバイス 5.7 スワップ領域をハイバーネート専用に使う\n- 6 参照\n\n- 2.1 起動時に有効化する\n- 2.2 スワップの無効化\n\n- 3.1 スワップファイルの作成 3.1.1 スワップファイルの削除\n\n- 3.1.1 スワップファイルの削除\n\n- 5.1 Swappiness\n- 5.2 VFS cache pressure\n- 5.3 優先度\n- 5.4 ストライピング\n- 5.5 Discard (トリム)\n- 5.6 RAM 内の圧縮ブロックデバイス\n- 5.7 スワップ領域をハイバーネート専用に使う\n\n"
    },
    {
      "title": "スワップ領域",
      "level": 2,
      "content": "スワップ領域は普通ディスクパーティションとして作られますが、ファイルにすることもできます。Arch Linux のインストール中にユーザーはスワップ領域を作成することができ、必要であればインストール後でも作成できます。スワップ領域を作成する理由は2つあります: 仮想メモリを拡張して、搭載している物理メモリ(RAM)より多くするためと、suspend-to-disk(ハイバネート) をするためです。\n\nスワップを使って仮想メモリを拡張することが利益になるかどうかは搭載している物理メモリの容量により異なります。必要なプログラムをすべて実行するのに必要な量の物理メモリを搭載していないのであれば、スワップを作成することはおそらく利益となるでしょう。これにより、out of memory(メモリ不足) を避けることができます。Out of memory とは、Linux カーネルの OOM killer という仕組みが自動的にプロセスを kill してメモリの空き領域を作ろうとしている状態のことを言います。仮想メモリの容量を必要な量まで増やすには、足りない分をスワップ領域として追加してください。\n\nメモリが枯渇しているときにスワップを使用することの最大の欠点は、パフォーマンスが低下することです(#パフォーマンス セクションを見てください)。それゆえ、スワップを有効化するかどうかは個人の好みの問題となります。スワップを有効化するよりメモリが枯渇したときにプロセスが kill されるほうが良いという人もいますし、メモリが枯渇したときにシステムが低速化するがスワップを有効化したほうが良いという人もいます。\n\nスワップの状態を確認するには、次を実行:\n\n```\n$ swapon --show\n```\n\nもしくは、以下を実行して物理メモリとスワップの使用状況を表示:\n\n```\n$ free -h\n```\n\n"
    },
    {
      "title": "スワップパーティション",
      "level": 2,
      "content": "スワップパーティションは、ほとんどの GNU/Linux のパーティショニングツールで作成することができます。スワップパーティションは、GPT 上ではパーティションタイプ GUID 0657FD6D-A4AB-43C4-84E5-0933C84B4F4F が (gdisk では 8200 タイプ、fdisk では swap タイプ)、MBR 上ではタイプ ID 82 が指定されています。\n\nLinux のスワップ領域をセットアップする時には、mkswap(8) コマンドが使われます。例えば:\n\n```\n# mkswap /dev/sdxy\n```\n\nデバイスのページングを有効にするには:\n\n```\n# swapon /dev/sdxy\n```\n\nオプションについては swapon(8) を参照してください。\n\n"
    },
    {
      "title": "起動時に有効化する",
      "level": 3,
      "content": "スワップパーティションをブート時に有効化するには:\n\n- systemd#GPT パーティションの自動マウントを使う\n- あるいは、/etc/fstab にエントリを追加する。例: UUID=device_UUID none swap defaults 0 0\n\n```\nUUID=device_UUID none swap defaults 0 0\n```\n\nfstab ファイルの構文については fstab を見てください。また、systemd#systemd.mount - マウント も参照してください。\n\n"
    },
    {
      "title": "スワップの無効化",
      "level": 3,
      "content": "特定のスワップ領域を無効にするには:\n\n```\n# swapoff /dev/sda2\n```\n\nもしくは -a スイッチを使って全てのスワップ領域を無効化することもできます。\n\nスワップは systemd によって管理されているため、次の起動時にスワップが自動的に有効化されてしまいます。検出されたスワップ領域を自動的に有効化する機能を恒久的に無効にするには、systemctl --type swap を実行して問題の .swap ユニットを確認してマスクしてください。\n\n"
    },
    {
      "title": "スワップファイル",
      "level": 2,
      "content": "パーティションを作るかわりに、臨機応変にサイズを変えたり簡単に削除できるものとしてスワップファイルが選択肢になりえます。特にディスク容量が貴重な場合 (例: 小容量の SSD) はこちらが理想的でしょう。\n\nTable content:\nファイルシステム | スワップファイルのサポート\nBcachefs | No\nBtrfs | Yes\nF2FS | Yes\next4 | Yes\nJFS | Yes\nNILFS2 | No\nNTFS3 | Yes\nReiserFS | Yes\nXFS | Yes\nZFS | No\n\n"
    },
    {
      "title": "スワップファイルの作成",
      "level": 3,
      "content": "mkswap(8) を使用して、所望のサイズのスワップファイルを作成します (ヒントは パーティショニング#スワップ を参照してください)。たとえば、4 GiB のスワップファイルを作成します:\n\n```\n# mkswap -U clear --size 4G --file /swapfile\n```\n\nスワップファイルを有効化してください:\n\n```\n# swapon /swapfile\n```\n\n最後に、fstab 設定を編集してスワップファイルのエントリを追加してください:\n\n```\n/etc/fstab\n```\n\n```\n/swapfile none swap defaults 0 0\n```\n\n追加の情報については fstab#使用法 を見てください。\n\n"
    },
    {
      "title": "スワップファイルの削除",
      "level": 4,
      "content": "スワップファイルを削除するには、まずスワップファイルを無効にしなければなりません。その後、スワップファイルを削除できます:\n\n```\n# swapoff /swapfile\n# rm -f /swapfile\n```\n\n最後に /etc/fstab から該当するエントリを削除してください。\n\n"
    },
    {
      "title": "スワップの暗号化",
      "level": 2,
      "content": "dm-crypt/スワップの暗号化を見て下さい。\n\n"
    },
    {
      "title": "パフォーマンス",
      "level": 2,
      "content": "通常、スワップに対する操作は RAM 上のデータに対する直接アクセスよりも断然遅くなります。しかし、パフォーマンスを向上させようとしてスワップを全体的に無効化するとパフォーマンスの劣化を招くことがあります。データを保持しておくのに十分な物理メモリが無い場合、スワップアウトできないとファイルシステムキャッシュのためのメモリが足りなくなってしまいます。その結果、ディスクへのアクセスが増加し、負荷が増加します。\n\nスワップ値を変えることでパフォーマンスを向上できるかもしれません。\n\n"
    },
    {
      "title": "Swappiness",
      "level": 3,
      "content": "メモリ使用量が特定の閾値に達すると、カーネルはアクティブなメモリを調べ、何を解放できるかを確認し始めます。ファイルデータは (変更されている場合) ファイルシステムに書き出して、アンロードし、後で再ロードすることができます。他のデータは、アンロードする前にスワップに書き込まなければなりません。\n\nSwappiness sysctl パラメータは、カーネルが書き込み先としてファイルよりもスワップを優先する度合いを表します。Swappiness は 0 から 200 の間の値にすることができます (Linux < 5.8 では 100 が最大)。デフォルトの値は 60 です。小さい値にすると、カーネルは開いているファイルの解放を優先し、大きい値にすると、カーネルはスワップ領域を使おうとします。100 にすると、IO コストが等しいとみなされます。\n\n現在の swappiness 値をチェックするには:\n\n```\n$ sysctl vm.swappiness\n```\n\n代わりに /proc/sys/vm/swappiness ファイルを読むことで生の整数値を得ることができます。\n\nswappiness 値を一時的にセットするには:\n\n```\n# sysctl -w vm.swappiness=35\n```\n\nswappiness 値を永続的にセットするには、sysctl.d(5) 設定ファイルを作成します。例えば:\n\n```\n/etc/sysctl.d/99-swappiness.conf\n```\n\n```\nvm.swappiness = 35\n```\n\nブートローダーを使ってカーネルのロード時に swappiness を設定するには、カーネルパラメータを追加してください。例えば: sysctl.vm.swappiness=35。\n\nテストしたり、なぜこれが機能するのか知るには、この記事を見てください。より最近の反論は、この記事 (日本語訳) を見てください。\n\n"
    },
    {
      "title": "VFS cache pressure",
      "level": 3,
      "content": "スワップのパフォーマンスに影響を与えるもう1つの sysctl パラメーターは vm.vfs_cache_pressure です。これは、VFS cache のキャッシングに使用されるメモリをページキャッシュとスワップに対して再利用するカーネルの傾向を制御します。この値を増やすと、VFS キャッシュが再利用される割合が上がります[1]。詳細については Linux カーネルドキュメント を参照してください。\n\n"
    },
    {
      "title": "優先度",
      "level": 3,
      "content": "複数のスワップファイルやスワップパーティションを使っている場合、priority 値 (0 から 32767) をそれぞれのスワップ領域に割り当てることを考えて下さい。システムは優先度が低いスワップ領域を使う前に高い優先度が付けられたスワップ領域を使います。例えば、もしあなたが高速なディスクと低速なディスクを持っている場合、高速なデバイス上のスワップ領域に高い優先度をあててください。priority は fstab で pri パラメータを使って設定できます:\n\n```\nUUID=f9fe0b69-a280-415d-a03a-a32752370dee none swap defaults,pri=100 0 0\nUUID=d7eb6062-01c8-4367-ac1d-3bf1167de8bb none swap defaults,pri=10  0 0\n```\n\nもしくは swapon の --priority パラメータを使います:\n\n```\n# swapon --priority 100 /dev/sda1\n```\n\nもし2つ以上の領域が同じ priority を持ち、それが一番高い priority の場合、その領域間ではラウンドロビン方式でページが配分されます。\n\n"
    },
    {
      "title": "ストライピング",
      "level": 3,
      "content": "スワップの性能を上げるために RAID を使う必要はありません。/etc/fstab ファイルでスワップの優先度が同じに設定されている場合、複数のデバイスにスワップをストライプ処理するのはカーネルだけで行うことができます。詳しくは The Software-RAID HOWTO を参照してください。\n\n"
    },
    {
      "title": "Discard (トリム)",
      "level": 3,
      "content": "ソリッドステートドライブ#スワップ を参照。\n\n"
    },
    {
      "title": "RAM 内の圧縮ブロックデバイス",
      "level": 3,
      "content": "パフォーマンスの向上#Zram または zswap を参照。\n\n"
    },
    {
      "title": "スワップ領域をハイバーネート専用に使う",
      "level": 3,
      "content": "スワップをハイバネートイメージストレージ領域としてしか使わない場合、zswap を使い、そのライトバックを無効化することで、通常のスワップ仕様ではディスク書き込みが起こらないようにすることができます。電源管理/サスペンドとハイバネート#Zswap のライトバックを無効化し、スワップ領域をハイバネートのみに使用する を参照してください。\n\n"
    },
    {
      "title": "参照",
      "level": 2,
      "content": "- In defence of swap: common misconceptions (日本語訳: スワップの弁護：よくある誤解を解く)\n\n"
    }
  ]
}
{
  "title": "Kernel mode setting (Español)",
  "url": "https://wiki.archlinux.org/title/Kernel_mode_setting_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- ATI (Español)\n- Intel graphics (Español)\n- Nouveau (Español)\n\nNote: **2024-02-29** \n\nKernel Mode Setting (KMS) es un método para configurar la resolución y profundidad de la pantalla en el espacio del kernel en lugar del espacio del usuario.\n\nLa implementación de KMS en el kernel de Linux permite la resolución nativa en el framebuffer y el cambio instantáneo de consola (tty). KMS también habilita tecnologías más recientes (como DRI2) que ayudarán a reducir los \"artifacts\" y aumentar el rendimiento 3D, incluso el ahorro de energía en el espacio del núcleo.\n\n"
    },
    {
      "title": "Información",
      "level": 2,
      "content": "Anteriormente, la configuración de la tarjeta de vídeo era tarea del servidor X. Debido a esto, no era fácilmente posible tener gráficos de alta calidad en consolas virtuales. Además, cada vez que se cambiaba de X a una consola virtual (Ctrl+Alt+F2), el servidor tenía que ceder el control de la tarjeta de vídeo al kernel, lo que era lento y provocaba parpadeos. El mismo \"doloroso\" proceso ocurría cuando se devolvía el control al servidor X (Alt+F7 cuando X se ejecuta en VT7).\n\nCon Kernel Mode Setting (KMS), el kernel es ahora capaz de establecer el modo de la tarjeta de vídeo. Esto hace posible los gráficos de alta calidad durante el arranque, la consola virtual, poder cambiar rápidamente a X y entre otras cosas.\n\n"
    },
    {
      "title": "Instalación",
      "level": 2,
      "content": "Al principio, ten en cuenta que para cualquier método desees utilizar, deberías siempre deshabilitar:\n\n- Cualquier opción vga= en el cargador de arranque, ya que entrará en conflicto con la resolución nativa activada por KMS.\n- Cualquier línea video= que active un framebuffer que entre en conflicto con el controlador.\n- Cualquier otro controlador de framebuffer (como uvesafb).\n\n"
    },
    {
      "title": "Inicio tardío de KMS",
      "level": 3,
      "content": "Los controladores Intel, Nouveau, ATI y AMDGPU ya habilitan KMS automáticamente para todos los chipsets, por lo que no es necesario instalarlo manualmente.\n\nEl controlador propietario NVIDIA soporta KMS (desde la versión 364.12) y tiene que ser habilitado manualmente.\n\n"
    },
    {
      "title": "Inicio anticipado de KMS",
      "level": 3,
      "content": "KMS se inicializa normalmente después de la etapa initramfs. Sin embargo, es posible habilitar KMS durante la etapa initramfs. Añada el módulo necesario para el controlador de vídeo al fichero de configuración initramfs:\n\n- amdgpu para AMDGPU, o radeon cuando se utiliza el controlador ATI heredado.\n- i915 para gráficos Intel.\n- nouveau para el controlador Nouveau de código abierto.\n- nvidia nvidia_modeset nvidia_uvm nvidia_drm para los controladores que no están dentro del kernel nvidia y nvidia-open. Vea NVIDIA (Español)#DRM kernel mode setting para más detalles.\n\n- mgag200 para gráficos Matrox.\n- Dependiendo de los gráficos QEMU en uso (qemu opción -vga tipo} o libvirt <video><model type='type'>[1]): bochs para std (qemu) y vga/bochs (libvirt), virtio-gpu para virtio, qxl para qxl, vmwgfx para vmware (qemu) y vmvga (libvirt), cirrus para cirrus.\n- Dependiendo del controlador gráfico de VirtualBox: vmwgfx para VMSVGA, vboxvideo para VBoxVGA o VBoxSVGA.\n\n- bochs para std (qemu) y vga/bochs (libvirt),\n- virtio-gpu para virtio,\n- qxl para qxl,\n- vmwgfx para vmware (qemu) y vmvga (libvirt),\n- cirrus para cirrus.\n\n- vmwgfx para VMSVGA,\n- vboxvideo para VBoxVGA o VBoxSVGA.\n\nLas instrucciones de configuración para initramfs son ligeramente diferentes dependiendo del generador de initramfs que utilices.\n\n"
    },
    {
      "title": "mkinitcpio",
      "level": 4,
      "content": "Para módulos dentro del kernel, añada kms a la matriz HOOKS en /etc/mkinitcpio.conf.\n\nPara los módulos fuera del kernel, coloque los nombres de los módulos en la matriz MODULES. Por ejemplo, para activar KMS anticipado para el controlador de gráficos NVIDIA:\n\n```\n/etc/mkinitcpio.conf\n```\n\n```\nMODULES=(... nvidia nvidia_modeset nvidia_uvm nvidia_drm ...)\n```\n\nSi está utilizando el método #Forzar modos y EDID, debe incrustar el archivo personalizado en initramfs también:\n\n```\n/etc/mkinitcpio.conf\n```\n\n```\nFILES=(/usr/lib/firmware/edid/your_edid.bin)\n```\n\nLuego regenera el initramfs.\n\n"
    },
    {
      "title": "Booster",
      "level": 4,
      "content": "Si utiliza Booster, puede cargar los módulos necesarios con este cambio de configuración:\n\n```\n/etc/booster.yaml\n```\n\n```\nmodules_force_load: i915\n```\n\nSi utiliza el método #Forzar modos y EDID, deberá incluir también el archivo personalizado en sus imágenes de Booster:\n\n```\n/etc/booster.yaml\n```\n\n```\nextra_files: /usr/lib/firmware/edid/your_edid.bin\n```\n\nLuego regenera las imágenes de booster.\n\n"
    },
    {
      "title": "Mis fuentes son demasiado pequeñas",
      "level": 3,
      "content": "Vea Linux console (Español)#Tipografías para saber cómo cambiar la fuente de su consola a una fuente grande. La fuente Terminus (terminus-font) está disponible en muchos tamaños, como ter-132b que es más grande.\n\nAlternativamente, desactivar modesetting puede cambiar a una resolución más baja y hacer que las fuentes parezcan más grandes.\n\n"
    },
    {
      "title": "Forzar modos y EDID",
      "level": 2,
      "content": "Si su resolución nativa no se configura automáticamente o no se detecta ninguna pantalla, entonces su monitor podría no enviar ningún o sólo un archivo EDID defectuoso. El kernel intentará detectar este caso y establecerá una de las resoluciones más típicas.\n\nEn caso de que disponga del archivo EDID de su monitor, basta con aplicarlo explícitamente (vea más abajo). Sin embargo, la mayoría de las veces no se tiene acceso directo a un archivo limpio haciendo necesario extraer uno existente y arreglarlo o generar uno nuevo.\n\nGenerar nuevos binarios EDID para varias resoluciones y configuraciones es posible durante la compilación del kernel siguiendo la documentación de upstream (vea también esto para una breve guía). Otras soluciones se describen en detalle en este artículo. Extraer uno existente es más fácil en la mayoría de los casos, por ejemplo, si tu monitor funciona bien en Windows, puede que tengas suerte extrayendo el EDID del controlador correspondiente, o si funciona un monitor similar que tenga la misma configuración, puedes usar get-edid del paquete read-edid. También puedes probar a buscar dentro de /sys/class/drm/*/edid.\n\nDespués de haber preparado tu archivo EDID, colócalo en un directorio, por ejemplo llamado edid dentro de /usr/lib/firmware y copia tu archivo EDID en él.\n\nPara cargarlo en el arranque, especifique lo siguiente en la línea de comandos del kernel:\n\n```\ndrm.edid_firmware=edid/your_edid.bin\n```\n\nPara kernels anteriores a 4.13, utilice esta línea en su lugar:\n\n```\ndrm_kms_helper.edid_firmware=edid/your_edid.bin\n```\n\nPara aplicarlo sólo a un conector específico, utilice:\n\n```\ndrm.edid_firmware=VGA-1:edid/your_edid.bin\n```\n\nSi desea configurar varios archivos edid, utilice:\n\n```\ndrm.edid_firmware=VGA-1:edid/your_edid.bin,VGA-2:edid/your_other_edid.bin\n```\n\nPara las resoluciones incorporadas, consulte la siguiente tabla. La columna Nombre especifica el nombre que se debe utilizar para imponer su uso.\n\nTable content:\nResolución | Nombre\n800x600 | edid/800x600.bin\n1024x768 | edid/1024x768.bin\n1280x1024 | edid/1280x1024.bin\n1600x1200 (kernel 3.10 o superior) | edid/1600x1200.bin\n1680x1050 | edid/1680x1050.bin\n1920x1080 | edid/1920x1080.bin\n\nSi estás utilizando el #Inicio anticipado de KMS, debes incluir el archivo EDID personalizado en el initramfs, de lo contrario tendrá problemas.\n\nEl valor del parámetro drm.edid_firmware también puede modificarse después del arranque escribiendo en /sys/module/drm/parameters/edid_firmware:\n\n```\n# echo edid/your_edid.bin > /sys/module/drm/parameters/edid_firmware\n```\n\nEsto sólo afectará a las pantallas recién conectadas, las pantallas ya conectadas seguirán utilizando su configuración EDID existente. Sin embargo, para las pantallas externas, basta con volver a conectarlas para que surta efecto.\n\nDesde el kernel 3.15, para cargar un EDID después del arranque, puede utilizar debugfs en lugar de un parámetro de línea de comandos del kernel si éste no está en con la restricción de acceso al kernel. Esto es muy útil si intercambias los monitores en un conector o simplemente para hacer pruebas. Una vez que tengas un archivo EDID como el anterior, ejecuta:\n\n```\n# cat correct-edid.bin > /sys/kernel/debug/dri/0/HDMI-A-2/edid_override\n```\n\nY para desactivar:\n\n```\n# echo -n reset > /sys/kernel/debug/dri/0/HDMI-A-2/edid_override\n```\n\nSi su monitor admite conexión en caliente, también puede hacer una conexión en caliente para que el monitor utilice el nuevo EDID que acaba de cargar (por ejemplo, en edid_override), de modo que no tenga que volver a conectar físicamente el monitor ni reiniciarlo:\n\n```\n# echo 1 > /sys/kernel/debug/dri/0/HDMI-A-2/trigger_hotplug\n```\n\n"
    },
    {
      "title": "Forzar modos",
      "level": 3,
      "content": "De la wiki de Nouveau:\n\n- https://docs.kernel.org/fb/modedb.html\n- https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/gpu/drm/drm_fb_helper.c\n\nEl formato es:\n\n```\nvideo=<conn>:<xres>x<yres>[M][R][-<bpp>][@<refresh>][i][m][eDd]\n```\n\n- <conn>: Conector, por ejemplo DVI-I-1, vea /sys/class/drm/ para los conectores disponibles.\n- <xres> x <yres>: resolución\n- M: ¿calcular un modo CVT?\n- R: ¿blanqueo reducido?\n- -<bpp>: profundidad de color\n- @<refresh>: frecuencia de actualización\n- i: entrelazado (modo no-CVT)\n- m: ¿márgenes?\n- e: salida forzada habilitada\n- d: salida forzada deshabilitada\n- D: salida digital forzada habilitada (p.ej. conector DVI-I)\n\nPuedes anular los modos de varias salidas utilizando video= varias veces, por ejemplo, para forzar DVI a 1024x768 a 85 Hz y TV-out desactivado:\n\n```\nvideo=DVI-I-1:1024x768@85 video=TV-1:d\n```\n\nPara obtener el nombre y el estado actual de los conectores, puede utilizar el siguiente script de una linea:\n\n```\n$ for p in /sys/class/drm/*/status; do con=${p%/status}; echo -n \"${con#*/card?-}: \"; cat $p; done\n```\n\n```\nDVI-I-1: connected\nHDMI-A-1: disconnected\nVGA-1: disconnected\n```\n\n"
    },
    {
      "title": "Desactivar modesetting",
      "level": 2,
      "content": "Es posible que desee desactivar KMS por varias razones. Para desactivar KMS, añada nomodeset como parámetro del kernel. Vea parametros del kernel para más información.\n\nJunto con el parámetro del kernel nomodeset, para una tarjeta gráfica Intel, necesitaras añadir i915.modeset=0, y para una tarjeta gráfica Nvidia, necesitaras añadir nouveau.modeset=0. Para un sistema gráfico dual NVIDIA Optimus, necesitaras añadir los tres parámetros del kernel (es decir, \"nomodeset i915.modeset=0 nouveau.modeset=0\").\n\n"
    }
  ]
}